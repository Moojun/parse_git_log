commit a34de10fc1cfcc29c88170e50f8b360aa9561735
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Mon Mar 20 12:56:29 2023 -0400

    Fix ColumnUnknownException due to missing quotes in a subscript expression
    
    ..where the root column contains upper cases.
    Example:
    
    ```
    CREATE TABLE t ("OBJ" OBJECT AS (intarray int[]), firstElement AS "OBJ"['intarray'][1]);
    ColumnUnknownException[Column obj['intarray'] unknown]
    ```

commit 92758b4243ad2e31935e659992789a0f2a12dc67
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Mar 20 18:15:05 2023 +0100

    Use UseHashJoins annotation in CorrelatedSubqueryITest
    
    Follow-up https://github.com/crate/crate/commit/007b57b799aef5859813c9f5c6993d2f0c5dae6b

commit 0fa5dc46399e63fc604f4318598cab1568b582af
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 21 09:31:11 2023 +0100

    Use shard wormhole on late ShardNotFoundException
    
    `DynamicMappingUpdateITest` could fail with `ShardNotFoundException`
    when running an `UPDATE` statement on a table that had shards still
    getting allocated.
    
        Cause 2: com.carrotsearch.randomizedtesting.UncaughtExceptionError: Captured an uncaught exception in thread: Thread[id=341, name=Thread-52, state=RUNNABLE, group=TGRP-DynamicMappingUpdateITest]
        Caused by: [ypdbxg.t/ZcvBf7FdQ3qXgbLQAW8uIQ][[ypdbxg.t][5]] org.elasticsearch.index.shard.ShardNotFoundException: no such shard
                at __randomizedtesting.SeedInfo.seed([C42BBBEC9C8253AB]:0)
                at org.elasticsearch.index.IndexService.getShard(IndexService.java:198)
                at io.crate.execution.jobs.SharedShardContext.<init>(SharedShardContext.java:51)
                at io.crate.execution.jobs.SharedShardContexts.getOrCreateContext(SharedShardContexts.java:105)
                at io.crate.execution.engine.collect.LuceneShardCollectorProvider.getUnorderedIterator(LuceneShardCollectorProvider.java:133)
                at io.crate.execution.engine.collect.ShardCollectorProvider.getIterator(ShardCollectorProvider.java:149)
                at io.crate.execution.engine.collect.ShardCollectorProvider.lambda$getFutureIterator$2(ShardCollectorProvider.java:117)
                at org.elasticsearch.index.shard.IndexShard.awaitShardSearchActive(IndexShard.java:3265)
                at io.crate.execution.engine.collect.ShardCollectorProvider.getFutureIterator(ShardCollectorProvider.java:115)
                at io.crate.execution.engine.collect.sources.ShardCollectSource.getIterators(ShardCollectSource.java:406)
                at io.crate.execution.engine.collect.sources.ShardCollectSource.getIterator(ShardCollectSource.java:272)
                at io.crate.execution.engine.collect.MapSideDataCollectOperation.createIterator(MapSideDataCollectOperation.java:58)
                at io.crate.execution.engine.collect.CollectTask.start(CollectTask.java:162)
                at io.crate.execution.jobs.RootTask.start(RootTask.java:198)
                at io.crate.execution.jobs.RootTask.start(RootTask.java:184)
                at io.crate.execution.jobs.transport.TransportJobAction.nodeOperation(TransportJobAction.java:107)

commit 71fdfc34e7a4105ddf422409c1b2178810f8e104
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 21 10:58:06 2023 +0100

    Don't increment ref count in RefCountedItem on itemFactory errors
    
    If `SharedShardContext.acquireSearcher` raises an error, consumers don't
    receive the searcher instance and cannot close it.
    
    That could lead to errors like:
    
        java.lang.IllegalStateException: Some shards are still open after the threadpool terminated. Something is leaking index readers or store references.
            at __randomizedtesting.SeedInfo.seed([F2EBE6B07579FC27:E5694F811F06614B]:0)
            at org.elasticsearch.node.Node.awaitClose(Node.java:1212)
            at org.elasticsearch.test.TestCluster$NodeAndClient.close(TestCluster.java:1072)
            at io.crate.common.io.IOUtils.close(IOUtils.java:98)
            at io.crate.common.io.IOUtils.close(IOUtils.java:80)
            at org.elasticsearch.test.TestCluster.close(TestCluster.java:922)
            at io.crate.integrationtests.PgTunnelLogicalReplicationITest.stopCluster(PgTunnelLogicalReplicationITest.java:117)
            at io.crate.integrationtests.PgTunnelLogicalReplicationITest.clearClusters(PgTunnelLogicalReplicationITest.java:131)

commit 078a4d449badbff7e8819c82997a64666921ad25
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 21 09:59:54 2023 +0100

    Avoid recursion in ShardStateObserver
    
    The predicate in:
    
    ```
    stateObserver.waitForNextChange(
      listener,
      newState -> shardStartedOrIndexDeleted(newState, shardId));
    ```
    
    Ensures the listener is only called if the shard got started or the
    index got deleted. Because of that it isn't necessary to recurse into
    `waitForActiveShard` in the listener.

commit eecc73007569027efa6145d7df09bd21838a8e4f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 21 08:42:17 2023 +0100

    Remove unused operationType & took from Engine.Result

commit 5ec15c557da827968ad4b7249170e3c8c9ab43f3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 21 08:33:29 2023 +0100

    Remove some unused declarations

commit b0a7669d037df4e9266fbe7f28d57e5837c5ccbc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 20 16:26:58 2023 +0100

    Remove VIntKeySerializer
    
    `VIntKeySerializer.INSTANCE` was using the `IntKeySerializer` class
    instead of the `VIntKeySerializer`.
    
    Due to BWC we can't easily fix that. This instead removes the
    `VIntKeySerializer` to make it clear that the `IntKeySerializer` is
    used.

commit fded798afe8c7ced7bb1c97c8dfb17bbe340cf7a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 20 16:56:27 2023 +0100

    Avoid unchecked warnings in ShardCollectSource

commit 5380cf84f77da3de78cf08a9792447c4be511b26
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 20 16:21:07 2023 +0100

    Remove some unused declarations

commit 121a5d50d93e0d19a1a2cb2624b7d12cbfe1e8e2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 20 15:59:44 2023 +0100

    Fix some raw type warnings

commit 2e81ec6b93da16989f93b0bb74c59130ed4e8ff0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 20 15:54:27 2023 +0100

    Replace some deprecated Tuple's with records

commit c13db8b5a456144dc564a2eab5cf3c63ceca0496
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 20 15:17:22 2023 +0100

    Don't copy shard projections in RemoteCollectorFactory

commit f1fed3e93b8c1d9b216d6ce2e424e903c82fe8a4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 20 14:27:03 2023 +0100

    Avoid rows copy operation on remote collect

commit 3c89689fac9e711442ab3bc05d94440bb840d56f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 20 13:47:39 2023 +0100

    Propagate BatchIterator kill to remote collector
    
    `kill` on a `BatchIterator` created with the `RemoteCollectorFactory`
    didn't really have any effect. It cancelled a future that was already
    completed at that point.
    
    This changes the logic so that a kill on the `BatchIterator` forwards to
    `remoteCollector.kill`.
    
    It also optimizes the logic if the shard gets relocated to the same node
    again. Previously it would copy & buffer all rows. We can by-pass that
    step.

commit 7123b326dfa18bbe50be57ae421761a6f40f16ca
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 20 15:25:44 2023 +0100

    Add back SuppressFileSystems to NodeEnvironmentTests
    
    Removed this in https://github.com/crate/crate/commit/c08d8151b181ce95a26d4b0e9a8c4bed5ec34bfb
    The tests passed after removing it, so I suspected it's no longer
    needed, but I wasn't accounting for randomization. It's still required.

commit 524dcc5df8e9d39b9a9d13508fdee92786246e42
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Mar 20 12:35:32 2023 +0200

    Reflect release 5.2.5

commit 8499df6d51b2410fa0c45aebb1e50a4ca159572f
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Mar 17 13:45:37 2023 +0100

    Implement getRelocated for IndexReference and GeoReference

commit c08d8151b181ce95a26d4b0e9a8c4bed5ec34bfb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 20 08:40:45 2023 +0100

    Replace expectThrows overload with assertThatThrownBy

commit ba7257bb443a32802725c170cf6ee1f827dee68c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 15 09:24:43 2023 +0100

    Update netty to 4.1.90
    
    https://netty.io/news/2023/03/14/4-1-90-Final.html

commit bf6e15652586cac9a3d45bb379be19e2dd5dd91c
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Mar 17 09:55:59 2023 +0100

    Don't discard additional implicit join conditions in nested joins
    
    Any JOIN clause will be split by the planner into join pairs
    containing only 2 relations even if on side of the join reference
    a parent join (because join pairs are based on relations).
    Any WHERE clause filter referencing to a join and such results
    in an additional join condition will either be added to an
    existing JoinPair or a new one will be created depending on the
    referenced relations.
    This new join pair condition must be taken into account when
    building the join conditions.
    Example:
    
    ```
    t1. JOIN t2 ON t1.x = t2.y JOIN t3 ON t1.x = t3.z WHERE t2.y = t3.z
    -> JoinPair(t1, t2)     <- 1st JOIN
    -> JoinPair(t1, t3)     <- 2nd JOIN
    -> JoinPair(t2, t3)     <- additional joinPair, condition must be added to the 2nd JOIN
    ```
    
    Fixes #13808.

commit 007b57b799aef5859813c9f5c6993d2f0c5dae6b
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Mar 15 17:02:48 2023 +0100

    Add optimizer rule to rewrite nl-join to hash-join
    
    This moves the logic, if a nested-loop-join can be rewritten
    to a hash-join, into a rule of the query optimizer.
    
    Fixes https://github.com/crate/crate/issues/10504

commit 25f1bfd254ef5c4048b8b7524bcf9e4a05b83ec0
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Mar 15 17:19:06 2023 +0100

    Remove unused jobId property from CreatePartitionsRequest
    
    jobId is unused since https://github.com/crate/crate/commit/31e0f7f447eaa006e756c20bd32346b2680ebee6

commit fdf9e3001d8180fa544e27bba6025dbc44c83c54
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 15 15:20:15 2023 +0100

    Remove unused methods from Metdata; de-duplicate getters

commit 2dc9046f3bf3e543f4791bf5ef8fe3948fc04327
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 15 11:27:50 2023 +0100

    Remove ignoreAbove from KeywordFieldMapper
    
    ignoreAbove can't be set via SQL and it defaulted to
    `Integer.MAX_VALUE`. That means the `value.length() > ignoreAbove` check
    always evaluated to false.
    
    Spotted this while double checking FieldMapper & ValueIndexer for
    differences.

commit f5142b263302d93a51270a8774da010d15f24f26
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 15 12:00:19 2023 +0100

    Remove unused date time formats

commit 1ef4eb76fa581b7eeaa2c4650006a4b53edacd5a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 14 13:58:16 2023 +0100

    Re-use BytesStreamOutput in Indexer

commit c33b8dbaa231cda0e064bd4387a03b12924e49e2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 15 08:28:35 2023 +0100

    Add Indexer jmh benchmark

commit cf712ed6c05f230d99ceb49e2779a3a16ab23e0a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 14 11:21:34 2023 +0100

    Avoid List.of copy in IndexParts

commit c544c65ff00781acda2d560beb9e3f43189fea39
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 14 14:42:42 2023 +0100

    Use source on replica if present in items
    
    If an item has a source, we should parse it via the legacy logic. It may
    come from an older node in a mixed cluster. In that case the
    insertColumns/values won't always include undeterministic generated
    columns and we'd risk generating new diverging values on the replica.

commit 1758fa4dc6e70d9cad88b24f1119f6fdc3dada1e
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Mar 14 21:09:26 2023 +0200

    Reflect release 5.2.4

commit 4cf2353997d4cbf9ca62c8a45714e1ef9528abce
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Mar 14 12:19:26 2023 +0100

    Fix join `using` for nested joins
    
    This extracts the relation names for lhs and rhs for the join `using`
    clause from the outputs of the Join Relation. This makes the following
    statement work:
    
    SELECT * FROM t1 JOIN (t2 JOIN t3 ON t2.y = t3.y) USING(x)
    
    It also adds additional validation to make sure the pre-conditions
    for join `using` are met.
    
    Follow-up for https://github.com/crate/crate/commit/e9624a9dcd64c40e8fd26b8285e187394e289adf

commit f28bef4a9aa1de6b6400d56d0f1d4e9f81930a3c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 14 16:04:05 2023 +0100

    Replace some expectThrows with assertThatThrownBy

commit e9624a9dcd64c40e8fd26b8285e187394e289adf
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Mar 2 13:20:27 2023 +0100

    Fix nested joins
    
    This makes nested joins work such as:
    
    SELECT *
        FROM j1
        JOIN (j2 JOIN j3 ON j2.x = j3.x)
        ON j1.x = j2.x;
    
    by adding a JoinRelation which is used to determine the correct JoinPairs.
    
    Fixes https://github.com/crate/crate/issues/13503

commit bf1d3a7c98f30d0e412658041e0190a339bd1f66
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 14 10:24:55 2023 +0100

    Fix field order determinism in Indexer & DocTableinfo
    
    The order of the fields in the source wasn't deterministic.
    
    The `ObjectIndexer` uses the `innerTypes` of an `ObjectType` if present
    but these innerTypes weren't ordered by position. This led to a
    different order between indexing of dynamic values and indexing after
    the mapping update.
    
    This could trigger an assertion, causing flaky test failures:
    
        WARNING: Uncaught exception in thread: Thread[#915,cratedb[node_s0][generic][T#5],5,TGRP-InsertIntoIntegrationTest]
        java.lang.AssertionError: seqNo [0] was processed twice in generation [2], with different data. prvOp [Index{id='qh3x24YBsqY9ANFaFJux', seqNo=0, primaryTerm=1, version=1, autoGeneratedIdTimestamp=-1}], newOp [Index{id='qh3x24YBsqY9ANFaFJux', seqNo=0, primaryTerm=1, version=1, autoGeneratedIdTimestamp=-1}]
            at __randomizedtesting.SeedInfo.seed([164B6F142ED3CEC8]:0)
            at org.elasticsearch.index.translog.TranslogWriter.assertNoSeqNumberConflict(TranslogWriter.java:253)
            at org.elasticsearch.index.translog.TranslogWriter.add(TranslogWriter.java:217)
            at org.elasticsearch.index.translog.Translog.add(Translog.java:519)
            at org.elasticsearch.index.engine.InternalEngine.index(InternalEngine.java:940)
            at org.elasticsearch.index.shard.IndexShard.index(IndexShard.java:806)
            at org.elasticsearch.index.shard.IndexShard.applyIndexOperation(IndexShard.java:752)
            at org.elasticsearch.index.shard.IndexShard.applyTranslogOperation(IndexShard.java:1375)
            at org.elasticsearch.index.shard.IndexShard.applyTranslogOperation(IndexShard.java:1362)
            at org.elasticsearch.indices.recovery.RecoveryTarget.lambda$indexTranslogOperations$2(RecoveryTarget.java:379)
        [...]
        caused by: java.lang.RuntimeException: stack capture previous op
            at org.elasticsearch.index.translog.TranslogWriter.assertNoSeqNumberConflict(TranslogWriter.java:258)
            at org.elasticsearch.index.translog.TranslogWriter.add(TranslogWriter.java:217)
            at org.elasticsearch.index.translog.Translog.add(Translog.java:519)
            at org.elasticsearch.index.engine.InternalEngine.index(InternalEngine.java:940)
            at org.elasticsearch.index.shard.IndexShard.index(IndexShard.java:806)
            at org.elasticsearch.index.shard.IndexShard.index(IndexShard.java:778)
            at io.crate.execution.dml.upsert.TransportShardUpsertAction.processRequestItemsOnReplica(TransportShardUpsertAction.java:376)
            at io.crate.execution.dml.upsert.TransportShardUpsertAction.processRequestItemsOnReplica(TransportShardUpsertAction.java:101)

commit 2718b51cf982d2ffc8f7906e9c249528905c9ee3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 13 16:22:23 2023 +0100

    Change CrateLuceneTestCase to delegate to LuceneTestCase
    
    Instead of forking the lucene/tests/util classes this changes
    `CrateLuceneTestCase` to delegate a selection of used methods to
    `LuceneTestCase`.
    
    This allows to re-use most of the code without leaking methods from the
    `Assert` base class into scope.

commit 4aa8bc8f2fa3a7edf99659c0995e3540a263fcf7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 13 14:11:33 2023 +0100

    Convert more tests to assertj
    
    Mostly focused around use of `expectedException`

commit 5f8a0ae148111db74cf92792b878345416457463
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 1 08:09:37 2023 +0100

    Use Indexer for replica operation
    
    Allows us to avoid setting the source on a request item - reducing
    memory footprint.
    The cost to re-generate the source is probably similar to what parsing
    the source would be.

commit 0c7241473c9c3ecb0118708fa453e1437408e068
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Mar 13 14:03:09 2023 +0200

    Fix issue with aggregations and UNION
    
    Use a LinkedHashSet to keep the order of outputs `toKeep` when
    pruning other unnecessary outputs. Otherwise we might end up with
    mixed up outputs, without an intermmediate `Eval` to re-order them:
    
    ```
    GroupHashAggregate[ai, "avg(x)", "cast(i AS bigint)"]
     └ Union[ai, "cast(i AS bigint)", "avg(x)"]
     ...
    ```
    
    Fixes: #13779

commit d37cebed0f1090d03a5623023f0911d2acef3c23
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 13 11:14:57 2023 +0100

    Convert some test cases to assertj

commit 2b5a17a47a701e4263e69fb3baa58bfa4b1b7ee9
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Mar 8 10:40:00 2023 +0100

    Check types of all existing columns, don't break early
    
    Follow up to https://github.com/crate/crate/commit/98b21e5d81eb20e0932da81bb4a9748ed790b7cb

commit 4e65dbbd8c6d5153d7b3794c6083233e81a12f28
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Mar 9 13:28:17 2023 +0200

    Fix insert on conflict when column to update not in insert cols
    
    For statements like:
    ```
    INSERT INTO test (id) values (1) ON CONFLICT (id) DO UPDATE SET x = 'updated'
    ```
    where the column to update (`x`) is not included in insert cols (only
    `id`)
    
    the operation didn't succeed, as in: `x` was not updated, since the
    `Indexer` built, was only including the `id` column (`insertColumns`).
    
    Furthermore, since we create the `Indexer` for all cases (1st attempt to
    insert, then 2nd attempt to update), asserting that the insert values
    match the `Indexer#valueIndexers.size()` is relaxed.
    
    Follows: #13758

commit fa35a3740af280fb8c8cc309e28c44917df6d954
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Mar 9 13:16:55 2023 +0200

    test: Migrate remaining code to assertj for InsertIntoIntegrationTest
    
    Also beautify some statement with `"""` code blocks.

commit a60f191bb4de7719eafb1df6fba0ab98f8dd8599
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 8 14:12:34 2023 +0100

    Remove CrateNode
    
    We can instead use `Node` directly

commit 37077adce6d0a558647c635b283e4328e86ac86e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 8 14:09:09 2023 +0100

    Replace deprecated Constants.JAVA/JVM_VERSION with Runtime.version
    
    Prints something like:
    
        JVM[Eclipse Adoptium/OpenJDK 64-Bit Server VM/19.0.2+7]

commit 1c557b2f4eb6396a9e1f706b5b14cf057c21f076
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 8 14:05:53 2023 +0100

    Fix various deprecation or unchecked warnings

commit a0af7ad127b5b2a92c02a19dd47730c448d08a69
Author: Georg Traar <georg@crate.io>
Date:   Fri Mar 10 11:53:50 2023 +0100

    add col_description function

commit a70f30f3c36f2c31ebcb7e5fec04f174cf1872e7
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Mar 9 16:56:27 2023 +0100

    Fix SAME_NODE optimization for join operations
    
    The SAME_NODE optimization is based on comparing
    `ResultDescription.nodeIds()` for equality while this method
    returns Collection instances.
    
    When comparing unknown Collection instances, one instance's
    equal() will always return false due to the different classes used.
    E.g. List.equal(Set) will return false.
    
    This adds and uses valid comparison method for generic collections.

commit 8bad3a9ed719cdd2922480fc43edea47bfc7bbdc
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Mar 9 16:23:36 2023 +0100

    Fix using a NL join as left side of another join which requires scroll
    
    The `requiresScroll` property for a nested-loop join was always set to
    `false` for the left side. This is true if the nested-loop join runs
    standalone, but not if it has another parent that requires the
    nested-loop join itself to be scrollable (repeatable) as well.
    
    This happens in cases where the output of the child nested-loop
    isn't buffered, e.g. by streaming from different nodes, likely
    when both join operations are running on the same node.

commit 105a09c590947d8b196adf55fa41b9822203574f
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Tue Feb 28 18:15:15 2023 -0500

    Fix invalid conversions of UnsupportedFeatureExceptions to MissingPrivilegeExceptions

commit e8830be9feb400f647bcdfbb4e4e9d407987691a
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Fri Mar 3 19:51:12 2023 -0500

    Check privileges before executing schema bound functions

commit a03fd21293851f331f2a5b5fd3bbc1a89dc74756
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 21 10:47:21 2023 +0100

    Add benchmark stage to Jenkinsfile
    
    Runs the `fast/queries` spec from crate-benchmarks to compare the
    local version against master

commit a158c5c1109c42946030ea1f05d72bdbe611e82a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 8 10:10:10 2023 +0100

    Extend assertions in DynamicMappingUpdateITest
    
    Looks like `test_concurrent_statements_that_add_columns_to_partitioned_table_result_in_dynamic_mapping_updates` is flaky:
    
    https://wacklig.pipifein.dev/github/crate/crate/0d5a6d1b-97c9-475a-9c7e-81aa55f00351/ea3bdbb6-c0c6-4e3e-ad4d-74e3e397a0f3
    
        org.opentest4j.AssertionFailedError:
        expected: 48
         but was: 49
            at __randomizedtesting.SeedInfo.seed([BFEB2AF9D16AAC61:B4DBCC4EB31D60C]:0)
            at java.base@19.0.2/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
            at java.base@19.0.2/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
            at app//io.crate.integrationtests.DynamicMappingUpdateITest.execute_concurrent_statements_that_add_columns_result_in_dynamic_mapping_updates(DynamicMappingUpdateITest.java:131)
            at app//io.crate.integrationtests.DynamicMappingUpdateITest.test_concurrent_statements_that_add_columns_to_partitioned_table_result_in_dynamic_mapping_updates(DynamicMappingUpdateITest.java:53)
            at java.base@19.0.2/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
    
    I suspect the Indexing integration and use of `AddColumnTask` could be
    the reason.
    
    This extends the assertions to have more insights into the failure.

commit 225efc4477422a25d1033d110b5b3674f31437a8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 8 09:42:24 2023 +0100

    Remove unused `getNotUsedNonGeneratedColumns`

commit b55fb8815e06e71765e8b9176d8a005e4abcae65
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 8 09:38:23 2023 +0100

    Don't create ReturnValueGen in upsert action if not needed
    
    It's only required for the legacy insert.
    
    Legacy insert is used for COPY (`_raw` insert), and even if we change
    that we'll have to keep it around for at least one release for rolling
    upgrade support.

commit 1df6940059bfac4576ee13f6e3561d7a25c80357
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 7 15:22:38 2023 +0100

    Update netty to 4.1.89
    
    - https://netty.io/news/2023/02/12/4-1-88-Final.html
    - https://netty.io/news/2023/02/13/4-1-89-Final.html

commit b1d7fc5fe8937a5acfccf95ce58d33fdbdfedc32
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 7 17:11:59 2023 +0100

    Use Lucene 9.5 Long/Int/Float/Double-Field
    
    Read some comment that using the new single field variants can have a
    performance benefit compared to using the `XYPoint` +
    `SortedNumericDocValuesField` variants.
    
    The behavior of the fields is the same as what we did before. From the
    `LongField` javadocs:
    
        Field that stores a per-document <code>long</code> value for scoring, sorting or value retrieval
        and index the field for fast range filters. If you also need to store the value, you should add a
        separate {@link StoredField} instance. If you need more fine-grained control you can use {@link
        LongPoint} and {@link NumericDocValuesField} or {@link SortedNumericDocValuesField}.

commit f2cffb964a74fe4642c80852d06ef5d7c8fb72c8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 7 11:53:34 2023 +0100

    Use IndexThrottle also for delete operations
    
    Should fix https://github.com/crate/crate/issues/13700
    
    A heap dump taken after using the reproduction steps outlined in the
    issue above shows that the majority of the memory is consumed by the
    `LiveVersionMap`.
    
    The `IndexingMemoryController` uses the `Accountable` information of the
    `LiveVersionMap` to mark shards for throttle, but the delete operation
    didn't use it.

commit 5709b546eea1f0e4c8085e0bab158cd136f68ed5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 6 15:05:49 2023 +0100

    Add conversion from update to insert; Use Indexer for updates

commit f4290f70891366b502940c4574f4ca15032844c6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 7 15:28:56 2023 +0100

    Migrate NodeLimitsTest to assertj

commit 270b1bd3db98ccd7e2427c7f5a8137d47477b5a1
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Mar 7 11:12:12 2023 +0100

    Merge Join.Type and JoinType

commit 03c913ecc91043b1cecdff738dd7bdea07857a9b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 7 10:36:31 2023 +0100

    Migrate ObjectColumnTest to assertj

commit f49c4e9720b344970d53a60ac493e32c0a879cc4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 7 08:17:11 2023 +0100

    Handle missing child Reference in ObjectIndexer
    
    Should fix a race condition.
    
    `test_concurrent_statements_that_add_columns_to_partitioned_table_result_in_dynamic_mapping_updates`
    could fail with:
    
        Caused by: org.postgresql.util.PSQLException: ERROR: Cannot invoke "io.crate.metadata.Reference.granularity()" because "childRef" is null
          Where: io.crate.execution.dml.ObjectIndexer.<init>(ObjectIndexer.java:82)
        io.crate.types.ObjectType$1.valueIndexer(ObjectType.java:79)
        io.crate.types.DataType.valueIndexer(DataType.java:248)
        io.crate.execution.dml.Indexer.<init>(Indexer.java:376)
        io.crate.execution.dml.upsert.TransportShardUpsertAction.processRequestItems(TransportShardUpsertAction.java:171)
        io.crate.execution.dml.upsert.TransportShardUpsertAction.processRequestItems(TransportShardUpsertAction.java:104)
        io.crate.execution.dml.TransportShardAction$1.call(TransportShardAction.java:121)
        io.crate.execution.dml.TransportShardAction$1.call(TransportShardAction.java:118)
        io.crate.execution.dml.TransportShardAction.wrapOperationInKillable(TransportShardAction.java:146)
        io.crate.execution.dml.TransportShardAction.lambda$shardOperationOnPrimary$1(TransportShardAction.java:124)
        org.elasticsearch.action.ActionListener.completeWith(ActionListener.java:230)
        io.crate.execution.dml.TransportShardAction.shardOperationOnPrimary(TransportShardAction.java:114)
        io.crate.execution.dml.TransportShardAction.shardOperationOnPrimary(TransportShardAction.java:63)
        org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryShardReference.perform(TransportReplicationAction.java:928)
        org.elasticsearch.action.support.replication.ReplicationOperation.execute(ReplicationOperation.java:126)
        org.elasticsearch.action.support.replication.TransportReplicationAction$AsyncPrimaryAction.runWithPrimaryShardReference(TransportReplicationAction.java:429)
        org.elasticsearch.action.support.replication.TransportReplicationAction$AsyncPrimaryAction.lambda$doRun$0(TransportReplicationAction.java:347)
        org.elasticsearch.action.ActionListener$1.onResponse(ActionListener.java:75)
        org.elasticsearch.index.shard.IndexShard.lambda$wrapPrimaryOperationPermitListener$21(IndexShard.java:2721)
        org.elasticsearch.action.ActionListener$2.onResponse(ActionListener.java:103)

commit 8039d5b826a1313ae08eaf8f533e90011e649376
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 6 16:06:33 2023 +0100

    Skip generated null values in Indexer

commit a816b59ed68ab27f680f98d29aba60be2d1b999c
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Mon Feb 27 19:42:29 2023 -0500

    Fix TableIdentsExtractor to be able to extract from AliasSymbol

commit 8d5e526b3315ce8c7dea847035be3300c8e80498
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Mar 2 15:38:26 2023 +0100

    Migrate JoinIntegrationTest to assertj

commit c9de95d9741c0eb22c24c7f491548342be4efc24
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Mar 6 10:52:15 2023 +0200

    tests: fix flaky testEquivalentDeletesAreDeduplicated
    
    Use `*` instead of specific snapshot names
    
    ```
    2023-03-03T12:56:24.0377349Z Caused by: org.elasticsearch.snapshots.SnapshotMissingException: [test-repo:snap-zir5wp__t_-ypjgraaaaaa-0] is missing
    2023-03-03T12:56:24.0378040Z    at org.elasticsearch.snapshots.SnapshotsService.matchingSnapshotIds(SnapshotsService.java:1342)
    2023-03-03T12:56:24.0378654Z    at org.elasticsearch.snapshots.SnapshotsService$6.execute(SnapshotsService.java:1209)
    2023-03-03T12:56:24.0379291Z    at org.elasticsearch.repositories.blobstore.BlobStoreRepository$1.execute(BlobStoreRepository.java:394)
    2023-03-03T12:56:24.0379955Z    at org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45)
    2023-03-03T12:56:24.0380793Z    at org.elasticsearch.cluster.service.MasterService.executeTasks(MasterService.java:701)
    2023-03-03T12:56:24.0381456Z    at org.elasticsearch.cluster.service.MasterService.calculateTaskOutputs(MasterService.java:318)
    2023-03-03T12:56:24.0382117Z    at org.elasticsearch.cluster.service.MasterService.runTasks(MasterService.java:213)
    2023-03-03T12:56:24.0382692Z    at org.elasticsearch.cluster.service.MasterService$Batcher.run(MasterService.java:150)
    2023-03-03T12:56:24.0383302Z    at org.elasticsearch.cluster.service.TaskBatcher.runIfNotProcessed(TaskBatcher.java:153)
    2023-03-03T12:56:24.0383895Z    at org.elasticsearch.cluster.service.TaskBatcher$BatchedTask.run(TaskBatcher.java:191)
    2023-03-03T12:56:24.0384707Z    at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:259)
    2023-03-03T12:56:24.0385780Z    at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:222)
    2023-03-03T12:56:24.0386653Z    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
    2023-03-03T12:56:24.0387200Z    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
    2023-03-03T12:56:24.0387639Z    at java.lang.Thread.run(Thread.java:1589)
    ```

commit 25857b4d96eff8ae99fb5dca07556cded334dabe
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 1 09:44:08 2023 +0100

    Remove InsertSourceFromCells

commit 473694647e9fbcceca2d14005dd98d5ccf58ac2c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 1 07:57:52 2023 +0100

    Don't create InsertSourceGen if not required

commit 8c2303314315a71259dc7ca3af53e37ecadd1515
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 27 07:57:03 2023 +0100

    Use Indexer for inserts on primary

commit cbebf70f4e68dd67e59713827aadc976dacd9b80
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 28 08:19:37 2023 +0100

    Handle empty arrays in DynamicIndexer and ObjectIndexer
    
    We can add them to the source without indexing or new column creation -
    assuming a later document will have values and create the column with
    the correct type. The empty array or null values already in the source
    fit any type.

commit 57d9078e22733c26afdf7ba68ae6b930d59f7460
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 27 13:38:29 2023 +0100

    Handle array values for index columns in Indexer

commit dbe20863d06105aecce5acaf792adb338ed535f6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 27 13:29:41 2023 +0100

    Increment position of dynamic columns; ignore on ignored objects

commit 57a1d28c7e6222023dbefdb68373ab90cd097e8c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 27 13:07:01 2023 +0100

    Use high precision types for dynamic arrays

commit e9d8fc6b6926b99fc83330e050c10bb10e9b41e3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 27 12:58:07 2023 +0100

    Handle null array elements in ArrayIndexer

commit 81df0fb1d2b5ab499e0efd4e6b17fa12139629a4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 27 10:29:28 2023 +0100

    Add DynamicIndexer for dynamic top level columns

commit cf9187c931340f81747bd04a8fe0cbe495a33b58
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 27 09:34:39 2023 +0100

    Add FulltextIndexer

commit cfdb9be0c8ade535554af57eca616a5df043f5b6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 27 09:22:41 2023 +0100

    Add FloatIndexer
    
    Can't re-use the DoubleIndexer for float as float columns must have a
    `FloatPoint`

commit 77121483a11eaaa891011d64263c10dceb54d7d3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 22 08:35:14 2023 +0100

    Add value indexers for all storable types

commit 795d34bb26f6b5a416b654e2da565430267b6240
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 21 15:24:01 2023 +0100

    Change Indexers to not write to source for null values

commit be6370d536eeaa5592f0bcc58e021bfbf8932686
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 21 09:01:28 2023 +0100

    Add indexer that creates lucene doc+fields and source in one pass
    
    This adds a component that can be used to index documents without an
    addition parse step.
    
    This changes the insert indexing flow from:
    
    - Create source
    - Parse source to create index fields
    
    To:
    
    - Create source and create index fields

commit aa47bafa2ff099793846df1796aae061e2007f78
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Fri Feb 24 12:48:53 2023 -0500

    Refine ColumnUnknownException such that MaskSensitiveExceptions can be specialized

commit ac60750e1e651b563f5ed14a94c97978ae860287
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Feb 22 11:08:46 2023 +0100

    Remove pre-5.1 code for 'drop constraint' and pre-5.2 code for 'add column'

commit 1a35f96f4f5d0fa1d099e7dc8f4cbbf331fd0542
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 1 10:32:24 2023 +0100

    Migrate TransportSQLActionSingleNodeTest to assertj

commit 0b4dc07f004834d55bc11dfd97add8f31c21065e
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Feb 28 15:25:07 2023 +0100

    Remove duplicated outputs of correlated join subplans
    
    Duplication was introduced by
    https://github.com/crate/crate/commit/2ad3cefe845 and
    https://github.com/crate/crate/commit/c55b72d8a56.

commit b7c20cc28050305b6964016f9f4a65cb4dc9857d
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Feb 28 12:54:34 2023 +0100

    Prune unused outputs at the CorrelatedJoin operator and its childs

commit e18b85b2fbd528250bf31018dfc365405de8fa1f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 28 16:58:29 2023 +0100

    Migrate CommonQueryBuilderTest to assertj / fix warnings

commit 28ee85b44899a477d618ea8e3dc10b7c29fe13e6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 28 15:55:09 2023 +0100

    Migrate CastIntegrationTest to assertj / fix warnings

commit f3e360f1ed65e93f80b7500b1c3931b6e45cf481
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 28 16:37:43 2023 +0100

    Migrate FulltextIntegrationTest to assertj / fix warnings

commit 67b1c0d0e9b7d59195d579fa027da32465650cb7
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Feb 27 11:50:40 2023 +0100

    Migrate ShowIntegrationTest to assertj

commit 98b21e5d81eb20e0932da81bb4a9748ed790b7cb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 28 14:37:28 2023 +0100

    Fix concurrent add-column with AddColumnTask; require type match
    
    Noticed this on the indexing branch:
    
    With concurrent inserts two or more shards can try to create the same
    column. In that case the second run caused an assertion later because
    the metadata version increased without a change in the mapping.
    
    I don't think this was an issue in production where assertions are
    disabled, but it caused test failures with assertions enabled and it's
    cheaper if the update becomes a no-op.

commit 73d1fd3ea32050a8cdde67a9d04b449b76af0368
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 28 13:12:08 2023 +0100

    Fix null value handling for `x != ANY([...])`
    
    It matched on null or missing values

commit 8b1c14debc0a418d4b380705bc3637e1dbe287b7
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jan 4 10:07:59 2023 +0100

    Add optimizer rule to push down a Filter beneath a CorrelatedJoin
    
    A filter related to any source of a CorrelatedJoin can be pushed down
    to narrow down the result set used inside the CorrelatedJoin
    and such will improve performance.

commit f626ec8918422ca0cb6ada5aa7fc601bbbfc53fa
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Feb 28 12:17:43 2023 +0200

    tests: Replace contains with containsExactly
    
    In some cases, `contains` was used instead of `containsExactly` during
    the migration to assertj. To prevent from hiding failures (regressions)
    change to `containsExactly`.

commit ad3c6a7577f53ac9f2f9c4d1636677c3b8038eaf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 28 10:25:13 2023 +0100

    Add missing parents only once in AddColumnTask
    
    Not an actual issue but looks odd while debugging

commit 45e3331d78847d233a28b12b05881112fe7b53c2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 28 08:02:15 2023 +0100

    Migrate SQLTypeMappingTest to assertj / fix warnings
    
    Also changed `testDynamicNullArray` and `testDynamicEmptyArray` to have
    a better idea what behavior they are expecting.

commit 036b3c2fed7239c33cc26b7991e3d15f8d3625ed
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 27 16:30:17 2023 +0100

    Update apache commons codec to 1.15
    
    A change in the library caused a test to break because a "1" input can
    now be decoded with Base32.
    
    https://commons.apache.org/proper/commons-codec/changes-report.html#a1.15
    
    Noticed this in the maven branch where I didn't explicitly define the
    dependency and it defaulted to the newer version.

commit 7e4c6f507f07c2a158e5f09cd18acaab057c35a4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 27 15:59:11 2023 +0100

    Migrate LuceneQueryBuilderIntegrationTest to assertj/fix warnings

commit fe5f867ca94497a6f7f1cb0ee29dd42d6775ddbe
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 27 15:10:54 2023 +0100

    Create GeoReference also for geo shape arrays
    
    Currently the `GeoReference` is only used for columns of type
    `geo_shape` but not for `geo_shape[]`. This is not an issue on master
    but becomes a problem in the indexing branch where the indexer needs
    access to a `GeoReference` to access information like the geo-tree,
    tree-levels and distance.

commit 79b5501d534536132a6eaa255ccecd8f043178c3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 27 09:01:58 2023 +0100

    Remove deprecated hasRows overload
    
    Removes the deprecated overload because for single rows avoiding it is a
    bit annoying as you'd have to explicitly use `String[]` to force the
    non-deprecated `hasRows` version.

commit 00583a2bfb733821659d734825c4ef18426d58d3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 27 07:35:46 2023 +0100

    Migrate PartitionNameTest to assertj / fix warnings

commit 74003c5d421adade62f6fbdb745965454040ec03
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Thu Feb 23 16:13:32 2023 -0500

    Reflect release 5.2.3

commit c55b72d8a565b4a49aacda07c6cdf64b53102745
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Feb 23 16:18:46 2023 +0100

    Add fields used in WHERE to toCollect
    
    Additional to references, also add any field symbols (e.g. ScopedSymbols)
    to toCollect.
    Follow up of #13668.

commit 0fcc34e122e060155a70ae3acf83020bcf0dc5a1
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Feb 21 13:00:12 2023 +0100

    Merge Filter Join Rules together
    
    MoveFilterBeneathHashJoin and MoveFilterBeneathNestedLoop can be
    merged into one rule by introducing a JoinPlan interface.

commit 869f20a9ff4b5e23dff4945e8a101f039f2f87e0
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Feb 22 10:11:13 2023 +0100

    Adapt javadoc in rules regarding relation names in group references

commit 1eea40f0892e99962289fbb06703654e66b154a6
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Feb 21 17:03:02 2023 +0100

    Migrate PgCatalogITest to assertj

commit 8abd4583842f6d1f47d0a0394e50dd606366d849
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 22 10:31:53 2023 +0100

    Use seqNo as indicator for skip on replica
    
    Once indexers (https://github.com/crate/crate/pull/13696) are integrated
    we'll generate the source on the replica too and can no longer use the
    presence of source to skip items.

commit 04a66a8f1cab0760973fa113a7f822884be60f9b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 22 09:19:56 2023 +0100

    Remove pointsOnly and strategyName option for GeoShapeFieldMapper
    
    These options cannot be set via SQL

commit ae9be565991dedf2ed19f29405fd5cd4abeaeda3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 21 16:09:17 2023 +0100

    Fix warnings in InsertIntoIntegrationTest / migrate to assertj

commit bc449fd7b11fcc32412add8ed9b9c94bc44b10ea
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Feb 21 11:24:33 2023 +0100

    Add relation names to group references

commit 3b775a01f191ea2984f2c7609a1f02638120838d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 21 09:14:01 2023 +0100

    Set nullable correctly on columns of index references
    
    This is currently not an issue but causes issues on the indexer branch.

commit a67d1bf9925a2e6461f4ad7271e61cf47473f8c7
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Feb 21 10:59:38 2023 +0100

    Avoid calls to dependencies in Group References
    
    This prevents calls to the unsupported dependency() method in
    Group References and ctor's of Logical Plans.

commit af93eb8cf6702013cf26ee4b54e60c032e4b6f1a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 21 07:55:43 2023 +0100

    Fix deprecation warnings in UpdateIntegrationTest

commit feeeca78875030dedb039b9fcd0e01853c71b05f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 20 16:37:28 2023 +0100

    Fix warnings in PKLookupOperation
    
    `reader.document` is deprecated

commit e0d7cce855fa73da623c1fe0bcde3d38d990d873
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Feb 20 12:08:05 2023 +0200

    tests: Fix assertions in ConcurrentSnapshotsIT in case of exceptions
    
    Fix assertions by extracting the root cause and not just the cause
    before asserting.
    
    Follows: 6a6b91216e0d2957cc7073ffa4698e0219883441

commit c4df37f3bfa52825e37f7ab1f585dc73d168054e
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Feb 20 16:27:26 2023 +0200

    tests: Remove custom `assertRootCause()`
    
    Use `extracting()` from Assertj framework instead.

commit d36ec58d52487ccea20e64abe57154c476bbbff6
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Feb 20 12:03:07 2023 +0200

    tests: Rename/Refactor methods to be consistent
    
    Change methods to check for in progress snapshots and deletions
    to be consistent regarding their usage.

commit 7abe1ca626c99c1ea61bf1f15deb34af78806277
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 13 14:01:29 2023 +0100

    Close MultiChunkTransfer instance when finished in LogicalReplicationRepository
    
    The class implements Closeable and should be closed

commit 86e5bc65c454457b5cea96e8f337dcef9c84017c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 20 08:52:15 2023 +0100

    Fix deprecation warnings in GroupByAggregateTest

commit 2ad3cefe8451fcddeeaa4fa503ec90dc064a632d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 15 11:41:32 2023 +0100

    Add columns used in WHERE to toCollect/fix filter with correlated join
    
    We had a concrete dependency on the `MergeFilterAndCollect` optimization
    rule which ensured for most cases that columns in the `WHERE` clause
    could be used without being selected.
    
    For example, with the rule enabled, a `SELECT x FROM tbl WHERE y = 1` resulted in:
    
    ```
    +----------------------------------+
    | Collect[doc.tbl | [x] | (y = 1)] |
    +----------------------------------+
    ```
    
    But would result in the following with the rule disabled:
    
    ```
    +-----------------------------------+
    | Filter[(y = 1)]                   |
    |   └ Collect[doc.tbl | [x] | true] |
    +-----------------------------------+
    ```
    
    `y` is missing in the outputs of `Collect` and the plan wouldn't execute.
    
    This dependency on the rule caused an issue with correlated joins where
    the rule doesn't apply.
    
    This commit adds columns used in the `WHERE` clause to the `toCollect`
    symbols to ensure they're available for the `Filter`. Column pruning
    ensures that if the `MergeFilterAndCollect` rule applies we still end up
    with the same execution plan as before and with the rule disabled, the
    example above looks like this:
    
    ```
    +----------------------------------------+
    | Eval[x]                                |
    |   └ Filter[(y = 1)]                    |
    |     └ Collect[doc.tbl | [x, y] | true] |
    +----------------------------------------+
    ```

commit d94c764f49d163ad98f6a136124eba10a7449d7c
Author: Marios Trivyzas <5058131+matriv@users.noreply.github.com>
Date:   Fri Feb 17 17:40:46 2023 +0200

    Add assertj changes to  .git-blame-ignore-revs (#13688)

commit 7572f1b9bd9cb0a928639a067c7d9539c827e312
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Feb 17 16:22:03 2023 +0200

    tests: Minor assertion improvements
    
    - Use hasSize()
    - Use hasToString()

commit cff451e81f3e5b7b58390acd4553173028f39222
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Feb 17 15:11:25 2023 +0200

    tests: Replace isPlan with Asserts.isEqualTo
    
    - Replace old style `isPlan()` with `isEqualTo()`.
    - Migrate all assertions to assertj in the relevant classes.
    - Beautify statements and expected plans and use `"""..."""`

commit 1e586b06916a3cab0c31a491aab7b2a410a5a146
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri Feb 17 10:45:56 2023 +0100

    Deprecate hamcrest based isPlan assertions

commit 41e10de63cc3c989d1b30adc9020ebc8d316aa83
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Feb 15 15:25:07 2023 +0100

    Ensure relations order in joinPairsByRelations key: joinPair left needs to be first in the set

commit 9e9c0e3fe1aa4e038feb3b05488ac474223a241e
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Feb 16 12:17:50 2023 +0100

    Use assertj logical plan assertions in CorrelatedJoinPlannerTest

commit 4f5ff6aa8f08b2956770cec14aea5ad89c539cce
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Feb 16 12:15:56 2023 +0100

    Add assertj assertions for LogicalPlans

commit 85e5d1b96ef236e81f0eb3fec659ade46a550f48
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Thu Feb 16 10:47:17 2023 +0100

    Update to Admin UI 1.24.3

commit 6a6b91216e0d2957cc7073ffa4698e0219883441
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Feb 15 17:22:40 2023 +0200

    tests: Fix flaky testMasterFailOverWithQueuedDeletes
    
    Sometimes the `RepositoryException` can be wrapped in a
    `RemoteTransportException`, so add another catch block and
    assert.
    
    Follows: b858eb5810b2b346602a04d5d4982876bf24cf81

commit c482a6f9d0cef6ee2f5046354d3f0e7d12f2d609
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Feb 14 16:08:42 2023 +0200

    Add more ConcurrentSnapshotsIT tests
    
    Relates: #13613

commit b860509d8b8ce2593362afe0332959cb4cfeed5b
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Feb 15 16:32:49 2023 +0100

    Let isFiltered return isFiltered field in NestedLoopJoin

commit b0a640a27ce3832dd392ad431da2564f588abeab
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Wed Feb 15 11:59:07 2023 +0100

    Update to Admin UI 1.24.2

commit ce9db41296b91a1302da08feb7af3ae6902c3a65
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 15 10:39:40 2023 +0100

    Run RemoveRedundantFetchOrEval rule again after column pruning
    
    The rule can often remove operators after pruning unused columns

commit f5b2ab2787cd3dd224ed1e811a43c095a6c4ec52
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Feb 7 10:33:32 2023 +0100

    Add Iterative Optimizer
    
    This adds an iterative optimizer as default optimizer. The optimizer takes
    an operator tree of logical plans and creates an optimized plan. The
    optimization loop applies rules recursively until a fixpoint is reached.
    The optimizer uses internally the memo datastructure together with group
    references to be able to mutate the operator tree efficiently.
    
    The existing optimizer rules are adapted, so they can deal with group
    references. This also adds a few minor modifications in some operators
    to make sure group references can be used everywhere as a source.

commit cb78dfadcac5560642761ef57063ad10e50ff436
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Feb 6 14:44:55 2023 +0100

    Introduce Memo and GroupReference
    
    This introduces the Memo datastructure which is the foundation for the
    iterative optimizer. The main concept is the following:
    
    - On a given tree of operators (logical plans) each source is replaced
      by GroupReference and registered in the Memo as a group.
    
    - Each node in a plan is placed in a group, and it's children are replaced with
      symbolic references to the corresponding groups.
    
    - Now the plan can be mutated using the Memo datastructure without rewrites
      of the whole tree.
    
    - When the original logical plan is needed on the rules the
      GroupReferenceResolver will resolve the Group Reference to it's
      original Logical Plan.
    
    This also extends the pattern/capture system to support group references,
    so that rules can match the operator tree including group references with
    patterns.

commit f3e3acbf2cb8e337866bcac25c341fa8b6f71eb5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 15 09:09:11 2023 +0100

    Replace assertThrowsMatches with assertSQLError
    
    Tried to do some structural search & replace, so formatting may be a bit
    odd in some spots

commit 21dad80d716c3c568af82e0529e647f94de41c85
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Feb 15 08:08:36 2023 +0100

    Add missing retention lease creation
    
    Follow up to https://github.com/crate/crate/commit/378903610b635d044cfef59b94ba122d8a061856

commit c10225cab3bd9b633ffbb83463df2e2020aa4f3b
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Tue Feb 14 11:32:30 2023 -0500

    tests: fix test_validate_sub_columns_while_dropping_udf
    
    https://github.com/crate/crate/pull/13650#discussion_r1105876080

commit 1164bd22b92bdd79f830377d480ec8ba7c9594cd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 14 16:09:21 2023 +0100

    Add SQLErrorAssert
    
    Marks the existing SQLErrorMatcher as deprecated and introduces a
    SQLErrorAssert that is based on assertJ
    
    It has the advantage that error messages are a bit more helpful. E.g.
    the old variant would not show the stacktrace of the actual exception.

commit de92e713b585b5aef658957d59b72fea15d52e6d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 14 16:00:09 2023 +0100

    Inline Asserts.assertThrowsMatches
    
    We've several different ways to assert exceptions in tests. This removes
    two custom ways by changing the implementation of `assertThrowsMatches`
    to use `assertThatThrownBy` and then applying a inline method refactor.

commit 8bb038af4778b4c104ae9a247c017850212d93fc
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Tue Feb 14 10:19:51 2023 -0500

    Fix a typo in changes entry

commit 8325e8b54230f1a0bc2febda215bbcc218ca36ae
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Mon Feb 13 13:07:38 2023 -0500

    Fix Drop Function validation to validate sub-columns of objects

commit f71504ef79936e76558238ca637642c07a4c4215
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Thu Feb 9 14:12:29 2023 -0500

    Fix early application of correlated subqueries

commit fa19b5a50b04caf88abe9d9fe09c62bc9a52b6e9
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Wed Feb 8 18:07:26 2023 -0500

    Simplify JoinPlanBuilder#buildJoinTree by removing join ordering logic

commit 8b123785d5e607e31720951b18455e2679b7883a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 14 14:19:32 2023 +0100

    Fix warnings in ColumnPolicyIntegrationTest / move to assertJ

commit b06fcbe986c861e09bd5e79e19990eb5562dc80f
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Feb 14 12:28:17 2023 +0200

    Add more ConcurrentSnapshotsIT tests
    
    Relates: #13613

commit b858eb5810b2b346602a04d5d4982876bf24cf81
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Feb 14 13:59:59 2023 +0200

    tests: Fix flaky testMasterFailOverWithQueuedDeletes
    
    Example failure:
    
    ```
    Cause 1: java.util.concurrent.ExecutionException: org.elasticsearch.transport.RemoteTransportException: [node_tm1][127.0.0.1:39771][cluster:admin/snapshot/delete]
            at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:396)
            at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2073)
            at org.elasticsearch.snapshots.ConcurrentSnapshotsIT.testMasterFailOverWithQueuedDeletes(ConcurrentSnapshotsIT.java:506)
            at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
            at java.base/java.lang.reflect.Method.invoke(Method.java:578)
            at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1758)
            at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:946)
            at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:982)
            at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:996)
            at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:61)
            at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:299)
            at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:293)
            at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
            at java.base/java.lang.Thread.run(Thread.java:1589)
    Caused by: org.elasticsearch.transport.RemoteTransportException: [node_tm1][127.0.0.1:39771][cluster:admin/snapshot/delete]
    Caused by: org.elasticsearch.repositories.RepositoryException: [_all] Failed to update cluster state during repository operation
            at org.elasticsearch.snapshots.SnapshotsService.failAllListenersOnMasterFailOver(SnapshotsService.java:1716)
            at org.elasticsearch.snapshots.SnapshotsService$4.onFailure(SnapshotsService.java:1009)
            at org.elasticsearch.cluster.ClusterStateTaskListener.onNoLongerMaster(ClusterStateTaskListener.java:38)
            at org.elasticsearch.cluster.service.MasterService$SafeClusterStateTaskListener.onNoLongerMaster(MasterService.java:524)
            at org.elasticsearch.cluster.service.MasterService$TaskInputs.lambda$onNoLongerMaster$0(MasterService.java:766)
            at java.util.ArrayList.forEach(ArrayList.java:1511)
            at org.elasticsearch.cluster.service.MasterService$TaskInputs.onNoLongerMaster(MasterService.java:766)
            at org.elasticsearch.cluster.service.MasterService.runTasks(MasterService.java:208)
            at org.elasticsearch.cluster.service.MasterService$Batcher.run(MasterService.java:150)
            at org.elasticsearch.cluster.service.TaskBatcher.runIfNotProcessed(TaskBatcher.java:153)
            at org.elasticsearch.cluster.service.TaskBatcher$BatchedTask.run(TaskBatcher.java:191)
            at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:259)
            at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:222)
            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
            at java.lang.Thread.run(Thread.java:1589)
    Caused by: org.elasticsearch.cluster.NotMasterException: no longer master. source: [Run ready deletions]
    Cause 2: java.lang.AssertionError: java.lang.AssertionError:
    Expected: iterable with items ["UL39V57YQIGR-JeNv1RZtA"] in any order
         but: no match for: "1U0bE1w1Sm-YhHlDESSnPQ"
            at org.elasticsearch.repositories.blobstore.BlobStoreTestUtil.assertConsistency(BlobStoreTestUtil.java:135)
            at org.elasticsearch.repositories.blobstore.BlobStoreTestUtil.assertRepoConsistency(BlobStoreTestUtil.java:88)
            at org.elasticsearch.snapshots.AbstractSnapshotIntegTestCase.lambda$assertRepoConsistency$1(AbstractSnapshotIntegTestCase.java:96)
            at java.base/java.util.HashMap$Values.forEach(HashMap.java:1073)
            at java.base/java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1092)
            at org.elasticsearch.snapshots.AbstractSnapshotIntegTestCase.assertRepoConsistency(AbstractSnapshotIntegTestCase.java:96)
            at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
            at java.base/java.lang.reflect.Method.invoke(Method.java:578)
            at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1758)
            at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:1004)
            at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:61)
            at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:299)
            at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:293)
            at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
            at java.base/java.lang.Thread.run(Thread.java:1589)
    Caused by: java.lang.AssertionError:
    Expected: iterable with items ["UL39V57YQIGR-JeNv1RZtA"] in any order
         but: no match for: "1U0bE1w1Sm-YhHlDESSnPQ"
            at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
            at org.junit.Assert.assertThat(Assert.java:964)
            at org.junit.Assert.assertThat(Assert.java:930)
            at org.elasticsearch.repositories.blobstore.BlobStoreTestUtil.assertSnapshotUUIDs(BlobStoreTestUtil.java:206)
            at org.elasticsearch.repositories.blobstore.BlobStoreTestUtil.lambda$assertConsistency$0(BlobStoreTestUtil.java:126)
            at org.elasticsearch.action.ActionRunnable.lambda$supply$0(ActionRunnable.java:58)
            at org.elasticsearch.action.ActionRunnable$2.doRun(ActionRunnable.java:73)
            at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
            at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
            at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
            ... 1 more
    ```

commit b2ce0c0e6e193674a50108cf41c5d56e12c02d9c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 13 14:05:38 2023 +0100

    Remove lock from RemoteClusterMultiChunkTransfer
    
    Looking at the `MultiFileWriter.writeFileChunk` it appears to already
    handle concurrent calls. It uses `computeIfAbsent` of concurrent map and
    `FileChunkWriter` synchronizes on some paths.
    
    Also contains some minor reformatting to reduce indentation

commit bc172b5a59573791227263424df6ef2a740144b6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 14 09:44:50 2023 +0100

    Handle AddColumnRequest that miss object child parents
    
    The "alter table ... add column" logic sends requests which always
    contain all the parents, but for dynamic mapping updates it is easier to
    only send the child columns.
    
    This extends the AddColumnTask to handle that scenario too.
    The implementation is not the most efficient, but an implementation that
    avoids copies would be more complex. We can optimize this once we change
    the metadata format (e.g. reducing redundancy between index-mapping and
    template mapping would have the biggest impact)

commit 02054ab5c0ce514a6d7a4952bf8e99bd2bd91fec
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 14 08:31:21 2023 +0100

    Extract AddColumnTask from TransportAddColumnAction
    
    Mostly to make it a bit easier to write unit tests for it

commit 5d5f3bf91ae12b8248e03676dc87b0585bdd2098
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 13 16:46:11 2023 +0100

    Convert StepListenerTests to assertJ

commit 006551e1131a9450efa4c480f26e451cb7ad3de1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 13 16:40:52 2023 +0100

    Replace expectThrows with assertThatThrownBy in S3BlobStoreContainerTests

commit 6be92ede2941517e189ac70b768f52b536c96325
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 13 16:32:48 2023 +0100

    Convert NodeEnvironmentIT to assertJ

commit f818450132cd594944437426b9a31119ba87ee4c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 14 08:59:25 2023 +0100

    Fix warnings in DDLIntegrationTest

commit d81dd4e06fe4f0d367cb706351e71407532ce01f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 13 15:54:27 2023 +0100

    Avoid mappingsMetadata maps in TransportCreatePartitionsAction/MetadataCreateIndexService

commit db3421efeea9a5de3517abfa200c980c850e47bc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 13 15:41:00 2023 +0100

    Fix deprecation warnings in IndexMetadata
    
    The mapping format is always in JSON so we can remove the deprecated
    content type guessing.
    
    Other places already rely on it being in JSON anyways. (E.g.
    `AlterTableClusterStateExecutor`)

commit 5ffd4a240ca50c03aa256263a7f25e2efe11a071
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 13 15:16:00 2023 +0100

    Change `mappings` to single `mapping` in IndexMetadata
    
    Type was always `default`

commit bd08468ca792760bc7633199c73b256e258588af
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 13 14:55:21 2023 +0100

    Remove type from DocumentMapper
    
    Was always `default`

commit e69ae7e17b8fcca3ce9345d35917c63d92ba47ed
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 13 14:43:33 2023 +0100

    Remove type from mappings in IndexMetadata.Builder
    
    The type was always `default`

commit f2bb828d10af073c10c9c32b2ea71d0cba0bf19d
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Feb 13 14:53:56 2023 +0200

    Add more ConcurrentSnapshotsIT tests
    
    Relates: #13613

commit 4635309b57392904cb72d8236335549d9d5947b2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 13 13:35:45 2023 +0100

    Fix some deprecation warnings in JsonXContentGenerator

commit 08ecb139cd459bc5bf9fb8d8e73ba5e49f735506
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 13 13:31:35 2023 +0100

    Remove some unused methods from XContentType

commit 38833cdff2caf984cbfc8d7dd7e33ef6104272b7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 13 13:23:00 2023 +0100

    Remove unused jackson-dataformat-cbor dependency

commit 5276d12c44a49a8675c8aaf83b536fbc567e6839
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 13 08:28:44 2023 +0100

    Try fix flaky `test_ensure_lucene_ordered_collector_propagates_kill`
    
    Reduces the window between starting the thread and killing the
    batchIterator. This should help ensure the kill is observed.

commit 33a4a080865e5f2b997a410f0a54ef901d2200c5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 13 10:12:21 2023 +0100

    Fix testMemorySize on machines with large memory
    
    Casting the result of `getHeapMax().getBytes() * 0.2` to `int` caps the
    result at `2147483647`
    
    This can cause an assertion error if 20% of the max heap is >
    `2147483647`
    
    This was only an issue if the test runner JVM doesn't restrict max heap
    itself. (Gradle currently does, but the IDE/Editor setup may not)

commit 14a35e73a7e77c5695e8d5c9f538acaae34c9e4f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 13 07:59:08 2023 +0100

    Fix warnings in OrderedLuceneBatchIteratorFactoryTest

commit a41241e6f13fb81e7ab73cae8d07114f6fb213e3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 13 09:39:16 2023 +0100

    Fix InternalTestClusterTests
    
    These tests are currently not executed and were broken due to not using
    the `Netty4Plugin` - which led to an injection error as
    `AuthenticationHttpAuthHandlerRegistry` uses `PipelineRegistry` which
    isn't bound in guice without netty.

commit acfdb600979201e42206177ad751969890074a5e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 8 09:00:55 2023 +0100

    Try to reduce test output exception noise
    
    When nodes get closed during test teardown, the removal of a node can
    trigger discovery on the remaining nodes - leading to them trying to
    connect again. This caused exception log entries due to connection
    errors.
    
    This adds some guards to the logging, to avoid it if a node itself is
    being closed or if the error can be identified as node-stopped.

commit 778fc30f2c976dfc1e1c3d838f6fe16e4e826da4
Author: Niklas Schmidtmer <hammerhead@users.noreply.github.com>
Date:   Fri Feb 10 15:00:23 2023 +0100

    docs: Add a caution about using max_num_segments with low values
    
    Forcing the creation of significantly large segments can harm query performance.

commit 1b7ecf8308f171b69904cfc763115ab7bd6bc428
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Feb 9 14:52:13 2023 +0200

    docs: Add info for working with `git worktree`
    
    Explain how to use `git worktree` to work with release
    branches in a convenient way.

commit d43a09d89601578d121b3455f1c4544944096d4e
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Feb 9 13:07:05 2023 +0200

    docs: Add missing tag for release 5.2.2
    
    Follows: #13631

commit 0a590c50eb7c6a746d229315b8f47290194869c3
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Feb 9 12:39:19 2023 +0200

    Reflect release 5.2.2

commit 4aa8b5dab9abee0910c4187f3753e3ad56b48473
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Feb 8 19:45:31 2023 +0200

    Fix notification message for `fix-metadata` cmd
    
    Follows: 1e2df5a22afdb8a5b8d2d9ea70378c0c601301a3

commit 322af746b03dfaecac9ae9895b8fde098d27b1fc
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Feb 8 15:23:23 2023 +0200

    Fix crate-node cli tool
    
    - Provide default `-Cpath.home` and `-Cpath.conf` params if not
      specified by the user.
    
    - Replace `es.path.conf` with `patch.conf`
    
    - Fix documentation

commit bcebc0e7e33a5873299698a3becc00b67de85b8c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 8 08:13:00 2023 +0100

    Convert AnalyzeITest to use AssertJ

commit 1e2df5a22afdb8a5b8d2d9ea70378c0c601301a3
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Feb 8 12:18:04 2023 +0200

    Move fix for corrupted metadata to a command
    
    There has been a scenario discovered, with tables created in `4.3.3`
    where the automatic fix of corrupted metadata due to a table swap
    statements like:
    ```
    ALTER CLUSTER SWAP TABLE "myschema"."mytable" TO "myschema.mytable"
    ```
    led to a different issues, with node/cluster not starting up:
    ```
    org.elasticsearch.bootstrap.StartupException: java.lang.IllegalStateException: index and alias names need to be unique, but the following duplicates were found [doc.test (alias of [doc.test/30EcwHYoThW5UU0q4JFELA])]
            at org.elasticsearch.bootstrap.StartupExceptionProxy.<init>(StartupExceptionProxy.java:30) ~[main/:?]
            at io.crate.bootstrap.CrateDB.init(CrateDB.java:162) ~[main/:?]
            at io.crate.bootstrap.CrateDB.execute(CrateDB.java:138) ~[main/:?]
            at org.elasticsearch.cli.EnvironmentAwareCommand.execute(EnvironmentAwareCommand.java:81) ~[main/:?]
            at org.elasticsearch.cli.Command.mainWithoutErrorHandling(Command.java:124) ~[main/:?]
            at org.elasticsearch.cli.Command.main(Command.java:90) ~[main/:?]
            at io.crate.bootstrap.CrateDB.main(CrateDB.java:91) ~[main/:?]
            at io.crate.bootstrap.CrateDB.main(CrateDB.java:84) ~[main/:?]
    Caused by: java.lang.IllegalStateException: index and alias names need to be unique, but the following duplicates were found [doc.test (alias of [doc.test/30EcwHYoThW5UU0q4JFELA])]
            at org.elasticsearch.cluster.metadata.Metadata$Builder.build(Metadata.java:1072) ~[main/:?]
            at io.crate.metadata.bugfix.CorruptedMetadataFixer.fixCorruptionCausedBySwapTableBug(CorruptedMetadataFixer.java:127) ~[main/:?]
            at org.elasticsearch.gateway.GatewayMetaState.upgradeMetadataForNode(GatewayMetaState.java:201) ~[main/:?]
            at org.elasticsearch.gateway.GatewayMetaState.start(GatewayMetaState.java:135) ~[main/:?]
            at org.elasticsearch.node.Node.start(Node.java:943) ~[main/:?]
            at org.elasticsearch.bootstrap.BootstrapProxy.start(BootstrapProxy.java:204) ~[main/:?]
            at org.elasticsearch.bootstrap.BootstrapProxy.init(BootstrapProxy.java:268) ~[main/:?]
            at io.crate.bootstrap.CrateDB.init(CrateDB.java:158) ~[main/:?]
            ... 6 more
    ```
    
    Extract the fix into a command that can be run with `crate-node fix-corrupted-metadata`
    
    Follows: #13404
    Closes: #13617

commit f4cc968a604df86d9bfa9a3a22a7e5239de76a42
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 8 10:36:58 2023 +0100

    Change pg_type typsend and typreceive values to match PostgreSQL
    
    Closes https://github.com/crate/crate/issues/13587

commit 75e004e15177439abf8d0cfbb56eccbb13a4d16d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 7 16:35:43 2023 +0100

    Always use disabled cache for IndexMetadata verification
    
    The QueryCache instance in the indexMetadata verification doesn't really
    end up being used - we can use a DisabledQueryCache singleton instead of
    creating a LRUQueryCache (which creates some map instances)

commit be3a2107288cb5743e58385785206a1250e9f1a0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 7 16:59:08 2023 +0100

    lucene-patch: Introduce IOContext.LOAD
    
    See:
    
    https://github.com/apache/lucene/commit/cae2a0c82b7a562a1410a8cd0f0df6555081a5c7
    
    This applies the changes to `Lucene90DocValuesProducer` to our forked
    version.

commit 99b619c215d4999d76ffb721cc1518e66c73043b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 7 16:54:06 2023 +0100

    lucene-patch: Migrate away from per-segment-per-threadlocals on SegmentReader
    
    Applies the change from
    https://github.com/apache/lucene/commit/ada6faf0ebc36e54e6323dac0275e7a36e3a7fdc
    to CrateLuceneTestCase

commit b61cf393ed6bc437a7b531c482b0d6840b69b4dd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 7 10:40:46 2023 +0100

    Reduce amount of code duplication for table settings updates
    
    `AlterTableClusterStateExecutor` duplicated a fair amount of code from
    `MetadataUpdateSettingsService`, we can instead make that re-usable.

commit 93a748607a8ea5d6ccdf21edcc725a6921ac6495
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 6 08:49:58 2023 +0100

    Use current subscription data in MetadataTracker cluster state update task
    
    The subscription passed into `updateClusterState` may have been based on
    an oudated cluster state.
    
    Not sure if this was an actual issue, but using the state that's passed
    into the update task is the right thing to do.

commit c32c754e987f5bd97fdb06eab77174ab6c8867e7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 7 11:19:57 2023 +0100

    Try to fix flaky testOpenCloseTableInformation
    
    Same problem as described in:
    
    https://github.com/crate/crate/commit/6fa5c66b2493ce7ad8854f77cde2d5daf38e1ef3
    
        java.lang.AssertionError: expected:<1> but was:<0>
            at __randomizedtesting.SeedInfo.seed([EDA7CD270519C89B:4C4486300FF5E8F4]:0)
            at org.junit.Assert.fail(Assert.java:89)
            at org.junit.Assert.failNotEquals(Assert.java:835)
            at org.junit.Assert.assertEquals(Assert.java:647)
            at org.junit.Assert.assertEquals(Assert.java:633)
            at io.crate.integrationtests.InformationSchemaTest.testOpenClosePartitionInformation(InformationSchemaTest.java:1280)

commit c2db2687f2029e90c29ff5654abb4c903e53d692
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 7 11:13:19 2023 +0100

    Fix flaky testSelectFromClosedTableNotAllowed
    
    For an explanation see:
    
    https://github.com/crate/crate/commit/6fa5c66b2493ce7ad8854f77cde2d5daf38e1ef3

commit 634ea84c5f20f0d3e4311f5ece1680d7e2ce1f65
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 7 09:56:41 2023 +0100

    Remove ShardCoreKeyMap and trim IndicesQueryCache
    
    As far as I can tell the ShardCoreKeyMap was effectively unused. The
    tracked items were only accessed to clear them again, but not for
    anything else.
    
    Given that the Lucene `QueryCache` interface has no close it should be
    fine to just let it get GCd

commit 3f75ae7b4e382f0f8fd42e35591432bea149ce21
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 6 15:48:16 2023 +0100

    Remove UpdateSettingsClusterStateUpdateRequest
    
    We can use the `UpdateSettingsRequest` directly.

commit 7118684d58093bbd2c0ad0ba975809bd76acd9f7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 7 07:50:49 2023 +0100

    Migrate un-/registerRepository from listener to CompletableFuture
    
    Relates to https://github.com/crate/crate/issues/11940

commit ac04558e58c9598042243b5f3ab50639914bbac2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 1 11:55:50 2023 +0100

    Don't remove unknown publications from subscriber state
    
    The logic was inconsistent: If all publications were gone then the
    `MetadataTracker` stopped listening without updating the cluster state.
    If the publisher re-created the publication it would re-appear (?)
    
    If only a subset got removed, the subscriber removed them from the
    subscription forever.

commit 51124763ecc1d083fd9b766d3cbc37f4c5535410
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 6 16:06:18 2023 +0100

    Ensure ActionListener.delegateFailure does not swallow failures
    
    The `BiConsumer` used in `delegateFailure` could throw an exception,
    which led to the exception getting swallowed.
    
    Not sure if a concrete issue - I noticed this while adding an exception
    somewhere to check if a code path is in use and got timeout errors in
    the tests (instead of the exception)

commit c88d159d5a8cd24b5481eaa35641d1a17b1bfab6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 6 15:04:37 2023 +0100

    Remove PutMappingClusterStateUpdateRequest
    
    We can use the `PutMappingRequest` directly. No need to create a second
    request instance.

commit b7fc2685522d6fc226cf4ed89ce9eedc8566e9a1
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Thu Feb 2 17:33:33 2023 -0500

    Allow schema and table names to start with '_'

commit 60873b55fa71b383276ec48560af1b9267e7e4eb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 6 14:20:56 2023 +0100

    Fix IndexNotFoundException when deleting partitions
    
    When creating and deleting partitions concurrently it could run into a
    `IndexNotFoundException`.
    
    The reason was that although we set `IndicesOptions.lenientExpandOpen()`
    which allows missing indices, we resolved the `concreteIndices` early
    _outside_ of the cluster state update task. Between resolving the
    indices and using them a index could disappear, leading to an error.

commit 7d677ad5798bf99207ffe3677a84a9eeb18a908f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 6 11:38:08 2023 +0100

    Update subscriptions in MetadataTracker at most once per cluster state change
    
    `MetadataTracker.startTracking` and `stopTracking` was called once for
    each added or removed subscription in a change event. Internally it
    always creates a `HashSet` copy.
    
    This changes the logic to have a single update call

commit 2fe0cd54af18a145c1556df4a6dd35aefdebd32e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 6 11:12:32 2023 +0100

    Keep subscription state update err in replication service.getPublicationState
    
    No real reason other than that it might help troubleshoot (flaky test) failures

commit 19338b4296ec168f936f54d7cbce1cf1ecdd6520
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 6 10:43:59 2023 +0100

    Inline RestoreClusterStateListener.createAndRegisterListener
    
    It's a one line function and removing it makes it easier to see all
    usages when looking at the references of the
    `RestoreClusterStateListener`
    
    Otherwise there's indirection and one has to check references of two
    places.

commit 35086481e324e7f9046c81f7520b8e20f280a36c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 6 10:10:39 2023 +0100

    Don't register proxy transport actions for subscriber cluster actions
    
    Proxying is for actions that are invoked on the remote cluster (e.g. via
    PG tunnel) but for actions that are run on the local subscriber cluster
    proxying is not required. E.g. there is also no proxy support for
    something like DROP TABLE.

commit debb8a7fcbdb9cfb2d9542518cde2a5131a8b8fe
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 6 09:20:38 2023 +0100

    Remove duplicate getters on ClusterState

commit d7897056208e196c0bf1cca7ce3497dbcefeafd4
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Feb 6 10:08:27 2023 +0200

    tests: Fix flaky testTimedRamAccountingQueueSink
    
    - Use AssertJ
    - Use `assertBusy` instead of `Thread.sleep()`

commit 9a9c86a87cae048954ea6e2b3861d539b527e6b9
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Feb 6 09:19:18 2023 +0200

    Fix changelog entry and docs for intervals ORDER BY + aggs
    
    Fix changelog entry -> past tense, and add notes for disallowed
    operations on intervals.
    
    Follows: #8f4594c6671a396525a5ba355dd71be815362d5b
    Follows: #13588

commit ba3fe268a3bc48fdde06409704775f3e9b47056c
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Feb 3 16:23:15 2023 +0200

    Fix: Disallow comparisons between `INTERVAL`s
    
    Disallow any comparisons between `INTERVAL`s, except for `=` and `<>`.
    Previously, any comparison with `>`, `>=`, `<` and `<=` would return
    null.
    
    Follows: #8f4594c6671a396525a5ba355dd71be815362d5b
    Follows: #13588

commit 8f4594c6671a396525a5ba355dd71be815362d5b
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Feb 3 13:59:16 2023 +0200

    Improve error when `ORDER BY` or `MIN`/`MAX` on `INTERVAL`
    
    Previously, since `org.joda.time.Period` is used for `INTERVAL` types,
    which doesn't implement `Comparable` and therefore, ordering (see
    `OrderingByPostion#rowOrdering()` and
    `OrderingByPosition#arrayOrdering()`) as well as `MIN`/`MAX`
    aggregations throwed `ClassCastException` during runtime.
    
    Catch this early during analysis and return the standard error message
    for unsupported types.
    
    Relates: #13576

commit 879fa1d3547b6b2ba4de0ee2bdb6895052ed8aa5
Author: baur <baurzhansahariev@gmail.com>
Date:   Thu Feb 2 17:53:34 2023 +0600

    Reflect release 5.2.1

commit e2cd8c2a62c7aa5c7ebfae2d27cf04113341b309
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Wed Jan 25 10:58:55 2023 -0500

    Allow schema and table names to contain upper case letters

commit b1b2cf0190e25e91738af6ebf32b49e43f86dc77
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Feb 1 13:45:30 2023 +0200

    Reflect release 5.1.4

commit 03cd78f27016ce03f811a0c141a46a75b08aea73
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Jan 31 13:56:25 2023 +0200

    Fix behaviour of `FETCH RELATIVE`
    
    Previously, `FETCH RELATIVE` was behaving identically to `FETCH FORWARD`
    and `FETCH BACKWARDS` which is not the case. `FETCH RELATIVE` returns
    always 1 row (or 0 rows if boundaries exceeded), at the position
    relative to the current cursor position and the number provided.
    
    Fixes: #13460

commit d01e305dba1d3eaaead774c27938cc6215caecdf
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Feb 1 11:48:09 2023 +0200

    Change check for overflow when calculating `cursorPosition`
    
    Change the check for overflow by using `Math.addExact()` code to make
    sure that it has a deterministic behaviour, as in JDK docs is not 100%
    clear that overflow from an `add` leads always to a negative int.

commit 48c776d8ffaab90656c56161ff347ffdec026c17
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Feb 1 08:57:32 2023 +0200

    Fix CursorIT flaky test
    
    CursorIT.test_fetching_from_cursor_positioned_at_end_returns_empty_result:
    
    ```
    REPRODUCE WITH: ./gradlew :server:test --tests "io.crate.integrationtests.CursorITest.test_fetching_from_cursor_positioned_at_end_returns_empty_result" -Dtests.seed=CF1B3998759842D0 -Dtests.locale=mas-Latn-KE -Dtests.timezone=Canada/Atlantic
    
    CursorITest > test_fetching_from_cursor_positioned_at_end_returns_empty_result FAILED
        org.opentest4j.AssertionFailedError at CursorITest.java:100
    org.opentest4j.AssertionFailedError:
    Expecting value to be false but was true
            at __randomizedtesting.SeedInfo.seed([CF1B3998759842D0:95666F12FFDBF0DB]:0)
    ```
    
    Reverse the order of assigning the `cursorPosition` to take place before
    calling the consumer, to ensure that it's updated before moving to any
    subsequent `FETCH` operation.

commit a9951361c369213cd6ca79a4d7f37e7181c35e91
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 1 08:47:14 2023 +0100

    Remove deprecated getSnapshotInfo variant

commit 81abda66d4360dfd112c1256e11be85cdfa36c2d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 1 08:18:26 2023 +0100

    Migrate restoreSnapshot from listener to CompletableFuture

commit c97791f11b69e49158f6b3007d6e2d126ecc586e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 1 08:07:00 2023 +0100

    Extract ClusterStateUpdateTask from restoreSnapshot
    
    My monitor is not big enough to deal with the amount of indentations.

commit b787c65ff73570c939604a5b1a2089a9bfa3dbfd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 1 09:21:13 2023 +0100

    Replace awaitBusy with assertBusy
    
    As https://github.com/crate/crate/pull/13549 has shown awaitBusy is
    error prone as one can await a condition without checking if it actually
    became true.
    
    This replaces it with `assertBusy`

commit 8c886e859aea7e7682fe6c31fe0a1d08cda9c893
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 30 11:07:19 2023 +0100

    Add factory method to retrieve SubscriptionsMetadata
    
    Avoids some null handling by always returning an empty instance

commit 521c39d4e124fa85e2d04fb02fed78e4ec41c47e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 30 15:31:30 2023 +0100

    Change testDynamicNullArrayAndDouble to assert result
    
    `awaitBusy` checked for the wrong conditions, always running in a
    timeout without causing a failure

commit ae99fab2999909cb0bc8e6c9bf1a984278d72da1
Author: hlcianfagna <110453267+hlcianfagna@users.noreply.github.com>
Date:   Mon Jan 30 13:53:55 2023 +0000

    Amend doc to reflect logging level for SET SESSION/LOCAL ignored settings
    
    Checked SetSessionPlan.java and Planner.java , the log entries are at INFO level, not WARNING

commit c5d8ee134678b7a1d9870ea0c67c81de1da4f1e3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 31 15:11:44 2023 +0100

    Adapt spots in LogicalReplicationRepository to use CompletableFuture

commit c76694953d0a70fc6ae4a48cfe4c4af9d1f9de49
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 31 14:00:13 2023 +0100

    Migrate getSnapshotIndexMetadata from listener to return future

commit 11c38fbe2c58cef946b8c2bd19d3e66bda71144f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 31 12:11:56 2023 +0100

    Migrate getSnapshotGlobalMetadata from listener to result future
    
    A first steps towards reducing the length and amount of indentation of
    `RestoreService.restoreSnapshot`

commit 474012ae040f366d3423ab5a21ce2c519b5df4eb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 30 10:20:51 2023 +0100

    Fix or suppress unchecked/rawtypes warnings in TransportService

commit a3e4d1543f35ed4403280bcc6bf5d2e767795372
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 31 14:21:34 2023 +0100

    Remove --enable-preview flag
    
    No longer required with Lucene 9.5:
    
    https://github.com/apache/lucene/pull/12033

commit 5847b359ee96c81fe76a02d59e1b83244b35c0ad
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 31 09:31:21 2023 +0100

    Update Lucene to 9.5
    
    https://lucene.apache.org/core/9_5_0/changes/Changes.html

commit ad50a7171e3fc2e955abe1102baee12e77581664
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 30 14:34:22 2023 +0100

    Remove transport type setting
    
    Follow up to https://github.com/crate/crate/commit/51b1a2e0101158d8d17a462a69977244a4722661
    The setting was effectively unused

commit 1fc625c672d0320e22e72e010b2e06134f681a8e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 30 09:17:49 2023 +0100

    Remove synchronized from MetadataTracker#start
    
    `start()` is already called from within synchronized blocks and both
    `cancellable` and `isActive` are volatile, so synchronization wouldn't
    be needed to force visibility and there are no conditions with
    dependencies.

commit 3b8f154e7d400ae49d56b82eb6dbd2e433f5a29c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 31 09:09:58 2023 +0100

    Fix flaky testTransientErrorsDuringRecoveryAreRetried
    
    `finalizeReceived` wasn't set correctly to `true`, leading to:
    
        Caused by: java.lang.IllegalStateException: Recovery cannot be started twice
                at org.elasticsearch.indices.recovery.IndexRecoveryIT$SingleStartEnforcer.accept(IndexRecoveryIT.java:886)
                at org.elasticsearch.indices.recovery.IndexRecoveryIT.lambda$testTransientErrorsDuringRecoveryAreRetried$6(IndexRecoveryIT.java:784)
                at org.elasticsearch.test.transport.StubbableTransport$WrappedConnection.sendRequest(StubbableTransport.java:238)
                at org.elasticsearch.transport.TransportService.sendRequestInternal(TransportService.java:617)
                ... 10 more
    
    Which could cause the test to fail with:
    
        java.lang.AssertionError: timed out waiting for green state
    
    It wasn't set correctly because the `handlingBehavior` is set for a
    specific action:
    
        addRequestHandlingBehavior(recoveryActionToBlock, handlingBehavior)
    
    Depending on the randomization of `recoveryActionToBlock`, the following
    condition was always false: `actionName.equals(PeerRecoveryTargetService.Actions.FINALIZE)`

commit 5a17563c26292b457fc4dc9a414e1032ed2bb30b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 31 08:39:37 2023 +0100

    Fix warnings in IndexRecoveryIT

commit a0ca5bc427f40b9dea745e0d39b15fe60d95bb61
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 31 10:06:34 2023 +0100

    Replace LazilyInitializedRerouteService with Supplier/SetOnce
    
    The `Node` already uses a `SetOnce` reference for the reroute-service,
    we can use that also for the DiskThresholdMonitor

commit ec7dcd2263097d32c47bc09b69655520592fa576
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 31 08:14:13 2023 +0100

    bp: Simplify reroute counting in InternalSnapshotsInfoServiceTests
    
    https://github.com/elastic/elasticsearch/commit/943fcaf970fdfb6a665b9641ab1358351be7ea2f
    
    Should fix flaky test failure:
    
        org.mockito.exceptions.verification.TooFewActualInvocations:
        rerouteService.reroute(
            <any string>,
            <any org.elasticsearch.common.Priority>,
            <any>
        );
        Wanted 40 times:
        -> at org.elasticsearch.snapshots.InternalSnapshotsInfoServiceTests.testSnapshotShardSizes(InternalSnapshotsInfoServiceTests.java:187)
        But was 39 times:
        [...]
            at __randomizedtesting.SeedInfo.seed([99EB778A9E561833:E6E4AD0619FE0738]:0)
            at app//org.elasticsearch.snapshots.InternalSnapshotsInfoServiceTests.testSnapshotShardSizes(InternalSnapshotsInfoServiceTests.java:187)

commit ec6d6864ef1c896d56c37cc0ba3e5b081e5b3fa4
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Jan 25 22:08:50 2023 +0600

    Fix pg array parsing of unquoted string witn many whitespaces

commit e816e3ee3a89426a80583504f516d98f1de5f0bf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 30 12:59:29 2023 +0100

    Fix warnings in ESTestCase
    
    Addresses some deprecation and unchecked warnings and also inlines a few
    one liner methods that only had a single use.

commit 122620fc359080992ee14dca7180b2427a695b63
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 30 13:38:42 2023 +0100

    Fix add project GHA workflow

commit f9b7ea608564345c31aedc799a60834bf1f1b6a4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 30 09:28:51 2023 +0100

    Track all failures in CountdownFutureCallback
    
    Might help getting more insights into failures

commit 51aed51b5a2385f50c5ae6fd016cdaa800380914
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 30 10:54:55 2023 +0100

    Fix deprecation warnings in LogicalReplicationITest

commit 0414fa5b0186ed652ab9fb1c6fb1e521de04eebe
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 30 10:12:12 2023 +0100

    Remove undocumented tracer settings

commit 83dd5e9f29579ae3ff5641ae49121506973e204f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 30 11:08:38 2023 +0100

    Remove unused format from TransportLogger

commit bfbdc2a809f02c665a69e3b6d3b9004915e24d2f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 30 08:43:40 2023 +0100

    Increase assertBusy duration in test_schema_changes_of_multiple_tables_are_replicated
    
    The test is flaky and based on the test duration graph it could just be
    a timing issue:
    
    https://wacklig.pipifein.dev/github/crate/crate/case/io.crate.integrationtests.MetadataTrackerITest/test_schema_changes_of_multiple_tables_are_replicated

commit eabe545da3c05affed00d03d9ee9ca8e11290824
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 30 08:56:48 2023 +0100

    Add toString implementation to ShardChangesAction.Request
    
    It's used in exception messages:
    
    https://github.com/crate/crate/blob/13a57980b2e10e5ca65757ef38e8be3ce660e53f/server/src/main/java/org/elasticsearch/action/support/single/shard/TransportSingleShardAction.java#L229-L232

commit 9f06bf847fc039c0502b9c6f226d9f4b0e2d01db
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Jan 27 13:45:10 2023 +0200

    Fix: Release accounted memory when cursor closed
    
    Previously, `rowConsumer` passed to `Cursor` would close long before
    the `Cursor` would actually close. This would cause the `ramAccounting`
    to be closed by a callback in a `JobSetup#InnerPreparer` method, e.g.:
    `visitRoutedCollectPhase()`. In upcoming cursor operations (fetch fwd)
    new memory would be accounting and there won't be any more callbacks
    to release this memory.
    
    Create a new `CompletableFuture`, denoting the final result, return
    this new future from `CursorRowConsumer` and complete it in the
    `Cursor#close()` method to release the accounted memory.

commit 8547f496442b7097022696e5b75c904ed12a42d9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 30 08:26:21 2023 +0100

    Fix deprecation warnings in MetadataTrackerITest

commit 13a57980b2e10e5ca65757ef38e8be3ce660e53f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 23 09:28:40 2023 +0100

    Update bundled JDK to 19.0.2+7

commit 8028058d0a7bdc1c44c5d7209c5d8f83776172c1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 25 10:25:34 2023 +0100

    Drop support for pre CrateDB 4.0 translog format

commit a5c0a3c3668ba3bfd88fb80800569a5e124f0834
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Mon Jan 23 19:47:39 2023 -0500

    Fix ClassCastException while querying implicit nested arrays
    
    Querying nested object arrays can result in nested array accesses:
    ```
       CREATE TABLE test (
       "a" array(object as (
       "b" array(object as (
       "s" string
       )))));
       SELECT a['b'] from test; -- resolves to array(array(object))
    ```

commit 4e97213e59e61e49b50749a7155954969d743b5d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 23 08:00:06 2023 +0100

    Backport more ConcurrentSnapshotsIT test cases
    
    Co-authored-by: Marios Trivyzas <matriv@gmail.com>

commit 9f4c4f317033b4930b7f553bfef275836e62a927
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 25 09:48:40 2023 +0100

    Remove es-backports.rst

commit b3f6cfe6354479aa0ff1dbfdadb2b9925301b215
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 25 09:28:29 2023 +0100

    bp: [DOCS] Fix response typo in transport message listener

commit bbb2c03b46c7f34d62a8084e0eb3744100d6b8a1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 25 09:23:10 2023 +0100

    bp: Adjust Cleanup Order of Internal State in SnapshotsService
    
    https://github.com/elastic/elasticsearch/commit/7e1fc6dc674d12a65e3a2ee03847943be440c25b

commit 3e9616e4d62df21fe1f51be071b732aeeba14dd7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 25 09:19:44 2023 +0100

    bp: Also reroute after shard snapshot size fetch failure
    
    https://github.com/elastic/elasticsearch/commit/16fae5d66d380ba6269bf43239519cad3550a3f1

commit edf232a06aff5c94915e9792e5de1e32407a3771
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 25 09:04:56 2023 +0100

    bp: Deduplicate Index Meta Generations when Deserializing
    
    https://github.com/elastic/elasticsearch/commit/745f527feacf6ced26567561df8ec6e0fd95f195

commit 870a7ee805dc4f359b7a4c54a0d77e1cd6947c29
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 25 09:01:52 2023 +0100

    bp: [DOCS] Remove duplicated word in replica shard allocator comment
    
    https://github.com/elastic/elasticsearch/commit/feca22729cd512f170833010ec2836be4e99e3d7

commit 84bae66e58ffa4f01cb2946526646f2353b5faad
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 25 09:00:40 2023 +0100

    bp: Fix NPE in toString of FailedShard
    
    https://github.com/elastic/elasticsearch/commit/d173ba6b2d7d9e20144679b657d0afa88be6db34

commit 2d7f7a9f7ae78164dc251450f42ea0cd03dbc43a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 25 08:50:32 2023 +0100

    bp: Fix up roles after rolling upgrade
    
    https://github.com/elastic/elasticsearch/commit/33f703ef1f826900a285dee419cd5fc55f20faae

commit 5f52a466d18586c61331dc478141e48660c7f1ea
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 25 08:46:05 2023 +0100

    bp: Fix Typo in Repository Exception Message
    
    https://github.com/elastic/elasticsearch/commit/dad3b26560cf38972505df9d548cef7a3e4d08a4

commit 4a87689ea087a622c1f30fc8f59a2c1a9c6eaf56
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 25 08:41:01 2023 +0100

    bp: Don't Generate an Index Setting History UUID unless it's Supported
    
    https://github.com/elastic/elasticsearch/commit/a697d5edae192185199d7bbc0c05b52439b97094

commit e189bc7823785250541274d3733e409e424ed676
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 25 08:32:35 2023 +0100

    bp: Try to fix DiskThresholdDeciderIT
    
    https://github.com/elastic/elasticsearch/commit/7ea44d20c3c5596f78ee6b4704141b652b5ecc80

commit f8cd9f9c030c04844dc4d8f19db078dc0f29ca09
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 25 08:22:18 2023 +0100

    bp: Adapt Shard Generation Assertion for 7.x
    
    https://github.com/elastic/elasticsearch/commit/424b31378417809fb58158e20b1369ac494961d4

commit 3a07b7844a15f25d3354768f95e93c136894a865
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 24 16:28:08 2023 +0100

    bp: Check docs limit before indexing on primary
    
    https://github.com/elastic/elasticsearch/commit/9015b50e1b87c3726985b5bb4ca9c90a62062163

commit 64f1497f2c928d3bac160e5d44fcdac764dc8f6b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 24 16:14:16 2023 +0100

    bp: Fix Broken Snapshot State Machine in Corner Case
    
    https://github.com/elastic/elasticsearch/commit/f70391c6cca592ff60ad2f96431b3df8ef3d8a7e

commit b1db51288fb1b8044e706580f8da39ca99c3caf4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 24 10:49:53 2023 +0100

    bp: [DOCS] Fix dup word in ShardRouting hashcode method.
    
    https://github.com/elastic/elasticsearch/commit/845ccc22646c0062548f44a3289fb343cac108d6

commit 8bc378a074b1737624b9c7f31898329f0631b10e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 24 10:48:58 2023 +0100

    bp: InternalSnapshotsInfoService should also removed failed snapshot shard size infos
    
    https://github.com/elastic/elasticsearch/commit/8499924e51ee0a5adfb310c7648460abb71e660f

commit 274a7df3df43b2f8973ab1943cbf7adbe6028073
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 24 10:27:47 2023 +0100

    bp: Selectively Add ClusterState Listeners Depending on Node Roles
    
    https://github.com/elastic/elasticsearch/commit/244f1a60f92e12e2f382a8f616d5fc3b260bd776

commit cf4760a479755128f95be63f6b05f49ce7bf48a5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 24 10:11:29 2023 +0100

    bp: SnapshotShardSizeInfo should prefer default value when provided
    
    https://github.com/elastic/elasticsearch/commit/eac99dd594a9cf09e0aa07ccbc24e1089bf9b1de

commit abbf284167cfd02943c79ea3ba58158383144927
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Tue Jan 24 22:21:02 2023 -0500

    Fix output column names that were missing a subscript
    
    ```
    CREATE TABLE doc.test (
    "a" array(object as (
    "b" array(object as (
    "s" string
    )))));
    
    SELECT a[1]['b']['s'] FROM test;
    +-----------------+
    | a[1]['b']       | --> should be a[1]['b']['s']
    +-----------------+
    | ["1", "2", "3"] |
    +-----------------+
    ```

commit aea736f7b0365535b557bbc1e3b6fefe1d416bc7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 24 07:29:59 2023 +0100

    Require forbiddenApisMain for merge via mergify

commit 7db0f2e7f313d39eebfa95456fc4759b9a917d01
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 23 16:17:09 2023 +0100

    bp: Determine shard size before allocating shards recovering from snapshots
    
    https://github.com/elastic/elasticsearch/commit/87076c32e219bd501be4a0dc1968fe7a4fe7b537
    
    Reverts parts of https://github.com/crate/crate/commit/cda5f69d1358d78bed29b0288543156544a3936e
    `getShardSnapshotStatus` is now required

commit 8fbc0a3887554b83c91bb946edeb480606284e9f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 24 11:22:45 2023 +0100

    Try fix flaky testAbortNotStartedSnapshotWithoutIO
    
        org.gradle.internal.exceptions.DefaultMultiCauseException: Multiple Failures (4 failures)
            java.lang.AssertionError:
        Expecting actual throwable to be an instance of:
          java.util.concurrent.ExecutionException
        but was:
          java.util.concurrent.TimeoutException
            at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
            at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
            at org.assertj.core.internal.Futures.assertFailedWithin(Futures.java:128)

commit b47d4e70c53c80158797f8b6f097bca6792408b5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 24 08:17:39 2023 +0100

    Mute CursorITest
    
    They are currently flaky, failing with query breaker errors:
    
        org.opentest4j.AssertionFailedError: [Query breaker not reset to 0 on node: node_s0]
        expected: 0L
         but was: 805305L
            at __randomizedtesting.SeedInfo.seed([9365F570D70984B2:130E7AE44D2A2E60]:0)

commit 474f6e399d577b816b48e88f225ee67621b38b2f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 23 14:23:50 2023 +0100

    bp: Improve Snapshot Abort Efficiency
    
    https://github.com/elastic/elasticsearch/commit/d7f6812d788f7a4a5f4a1f68cc1d6349f5c52d1c

commit 66909115682c3228eda69d9ef411c84f185f8d7e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 23 13:49:50 2023 +0100

    bp: Refactor SnapshotsInProgress State Transitions
    
    https://github.com/elastic/elasticsearch/commit/e91936512aa464593fa745f8234d48e6a54d50ca

commit 6912d5e72208ef7b32ca32c9807dc2d0b6fd1f60
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 23 12:12:18 2023 +0100

    bp: Also abort ongoing file restores when snapshot restore is aborted
    
    https://github.com/elastic/elasticsearch/commit/9f5e95505bf4adb28517604a46c2a9a531c402fb

commit b871326109b28450f1b08cb1c39459f059b4058d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 23 11:23:21 2023 +0100

    bp: Fix Concurrent Snapshot Create+Delete + Delete Index
    
    https://github.com/elastic/elasticsearch/commit/3fd25bfa8775f0f4e477a2200c3154b590671d78

commit e2e055f7c9440dc17cf7e8e2fad9bc2ac7cb5165
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Mon Jan 23 20:27:00 2023 -0500

    Add missing locale argument

commit 212b8687e88998cc61819319f2869df3c3265e15
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Sat Jan 21 03:28:43 2023 +0100

    Add validation to reject inner columns containing whitespace chars

commit 8ec7d7332d36cd988213a08d2f218756035e5240
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 18 14:59:33 2023 +0100

    Don't cache parsed analyze statement in TableStatsService
    
    Spotted this while looking at profiles of test runs where I didn't
    expect so see anything getting parsed.
    
    Not really an issue, but seems it's not worth it to cache a statement
    indefinitely that us used only once every 24 hours. Parsing is cheap
    enough.

commit 4aad65ad6c71c1abbcebfb6ce306102513cdd767
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 23 08:53:13 2023 +0100

    bp: Use Threadpool Time in ClusterApplierService
    
    https://github.com/elastic/elasticsearch/commit/e8d97443407c64a0f6f88383f4596bfec66c5aa9

commit 7d4adef4e512b780d687a212336940dae161d8cb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 18 11:01:56 2023 +0100

    bp: Ensure MockRepository is Unblocked on Node Close
    
    https://github.com/elastic/elasticsearch/commit/aa0dc5641272f0e46e4b63fc850f77f1451c4ee5

commit a053b0dd2283eac47106439d63e990831fc1bd36
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 18 10:58:48 2023 +0100

    bp: Safely Close Repositories on Node Shutdown
    
    https://github.com/elastic/elasticsearch/commit/0ca7cc18487525344161351efa2f1274d13a15aa

commit e95ecd3c862e7d0e7619501777f1f59640469273
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 17 14:24:38 2023 +0100

    Port ConcurrentSnapshotsIT test cases - part 3

commit f1cd2869958f68d7e019a729c1dae22e99069a84
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Jan 18 10:58:04 2023 +0200

    Fix issues with updating cursorPosition
    
    We need to set `cursorPosition` to `rows.size() + 1` if it "overflows"
    above that, so that we can scroll including last row in an upcoming
    backwards movement. Previously, this calculation took place at the end
    of a forward movement, after `consumer.accept()` call, which doesn't
    guarantee that rows from the query iterator have been consumed and
    therefore, `rows.size()` can maybe not be updated when we calculate the
    `cursorPosition`. So instead move this calculation at the beginning of
    an scroll operation.
    
    Follows: f4ea08c424f9c0db4b40eeb9494427d8af3d07d0
    Follows: cc08d1e0b54da2e10cd477249fbcc097301bc9e2

commit d83ab06aac003472bd798d8693431dc8f06a72f9
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Jan 17 18:47:57 2023 +0200

    Fix release date for 5.1.3

commit cc08d1e0b54da2e10cd477249fbcc097301bc9e2
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Jan 17 15:03:24 2023 +0200

    Fix `FETCH BACKWARDS ALL` from a Cursor
    
    Fix an issue that caused wrong or 0 zeros to be returned when scrolling
    backwards `ALL` from a cursor since the `- Long.MAX_VALUE` passed from
    the parser to represent `BACKWARD ALL` was not handled correctly.

commit f4ea08c424f9c0db4b40eeb9494427d8af3d07d0
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Jan 17 10:39:11 2023 +0200

    Fix issues with backwards fetching
    
    Fix calculation of `cursorPosition`: remove increase in `moveNext()`
    and always set it appropriately at the end of each operation.
    
    Follows: #928d076ce5809be0f4ec2290dc2ad7425a52546a
    Fixes: #13475

commit 7ab9248bf4f516e6436df1d230fc68243fc78a22
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 17 10:15:25 2023 +0100

    Port more ConcurrentSnapshotsIT test cases
    
    Follow up to https://github.com/crate/crate/pull/13478
    
    Co-authored-by: Marios Trivyzas <matriv@gmail.com>
    Co-authored-by: Michael Kleen <michael.kleen@crate.io>

commit 1b270f423e84859ef73401cceba4e89952e87546
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Fri Dec 23 23:30:26 2022 -0500

    Fix corrupted metadata caused by SWAP TABLE bug
    
    https://github.com/crate/crate/issues/13380
    
    The trigger of this bug was executing SWAP TABLE on tables in
    non-doc schemas referencing them by invalid quoting -
    ex) "schema.table" instead of "schema"."table"
    
    The SWAP caused 1) some indexMetadata and indexTemplateMetadata
    to end up with invalid names starting with ".partitioned" and
    2) some indexMetadata that are not partitioned to contain
    "partitioned_by" columns.
    
    When partitioned tables were affected, only a single partition
    remained leading to permanent data losses and also column losses
    were possible.

commit 3ff65702917cfa3ee7cf5c9cb70d8c6ebdb18329
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Tue Jan 17 11:31:13 2023 +0100

    mergify: Remove deprecated `rebase_fallback` option
    
    The configuration used the deprecated `rebase_fallback` mode of the
    queue and/or merge action.
    
    - https://docs.mergify.com/actions/queue/#queue-action
    - https://github.com/crate/crate/pull/13483/checks

commit 485e94c6eca795931eacb7034a0cdf7f1cda9a0e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 17 09:23:33 2023 +0100

    Inline ChannelStats into CloseableChannel
    
    Reduces memory footprint a bit and all usages went through the channel
    anyway (so it fits with Law of Demeter)

commit ce74781976f0dfed6d868b97cec5d676d3c29d03
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 17 09:06:17 2023 +0100

    Add initial ConcurrentSnapshotsIT test case
    
    Only adds a single test case from
    https://github.com/crate/crate/pull/13289 to get the boilerplate in with
    some major adjustements:
    
    - Prefer SQL if possible
    - Use `CompletableFuture<SnapshotInfo>` instead of sub-classes. Makes
      the implementation of `startFullSnapshot` much simpler
    - Use `System.nanoTime` in `waitForBlock`. `currentTimeMillis` can
      observe clock adjustments and shift backward.
    
    Co-authored-by: Marios Trivyzas <matriv@gmail.com>
    Co-authored-by: Michael Kleen <michael.kleen@crate.io>

commit 1cb127fdb6f0b937ba06364f1a808430d4d29be5
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Jan 16 17:47:23 2023 +0200

    Improve error message when fetching `ABSOLUTE` past last row
    
    Throw a nice error message, instead of `IndexOutOfBoundsException` when
    trying to fetch an `ABSOLUTE` row from a `CURSOR`, past the last
    available row returned by the defined query.

commit 413b310fd7bb85b948dee20e894d451ac4b3b3de
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 17 07:46:23 2023 +0100

    Try to fix flaky testSelectFromClosedPartition
    
    See https://github.com/crate/crate/pull/13468 for an explanation.
    
    From the logs of a failure:
    
        updateTask[T#1] adding template [tlyeg..partitioned.t.] for index patterns [tlyeg..partitioned.t.*]
        updateTask[T#1] [tlyeg..partitioned.t.04132] creating index, cause [bulk], templates [tlyeg..partitioned.t.], shards [4]/[0]
        updateTask[T#1] updating number_of_replicas to [1] for indices [tlyeg..partitioned.t.04132]
        updateTask[T#1] completed closing of indices []
    
    Compared to a successful run:
    
        updateTask[T#1] adding template [mnshlqkci..partitioned.t.] for index patterns [mnshlqkci..partitioned.t.*]
        updateTask[T#1] [mnshlqkci..partitioned.t.04132] creating index, cause [bulk], templates [mnshlqkci..partitioned.t.], shards [4]/[0]
        updateTask[T#1] updating number_of_replicas to [1] for indices [mnshlqkci..partitioned.t.04132]
        updateTask[T#1] completed closing of indices [mnshlqkci..partitioned.t.04132]

commit 5d8857c769011941bafe04d79a172bea78820369
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 17 07:43:27 2023 +0100

    Replace `internalCluster` with `cluster` in IntegTestCase
    
    Follow up to https://github.com/crate/crate/pull/12883

commit 928d076ce5809be0f4ec2290dc2ad7425a52546a
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Jan 16 16:23:30 2023 +0200

    Fixed issues with scrolling back/fwd through a CURSOR
    
    - Previously, when attempting to scroll backwards past the 1st row,
      an `IndexOutOfBoundsException` was thrown since wrong indices were
      passed to `subList()` call. Fixes: #13455
    
    - Previously, when scrolling backwards and then forward, the
      `cursorPosition` variable was not updated correctly causing wrong
      results to be returned. Also fix the case where we have moved past
      the last row and then scroll back, which should include the last row.
      Fixes: #13464

commit 7ab0c5a3e9c508c896588872a70f914cdc749b59
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 16 14:42:39 2023 +0100

    Reduce memory footprint of samples in ReservoirSampler
    
    A `LongArrayList` with a `long[]` buffer should have a smaller memory
    footprint than a `ArrayList<Long>`

commit 314ce8b866e18c2a174105813b8b0c6076658bf8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 16 15:55:08 2023 +0100

    Update .github/ISSUE_TEMPLATE/bug.yml
    
    Co-authored-by: Marios Trivyzas <5058131+matriv@users.noreply.github.com>

commit 5f8f7232bb5269f4b382c4902ad2a0eb8026f661
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 16 10:34:00 2023 +0100

    Add problem description textarea to bug template; re-order actual/expected result
    
    Despite the expected & actual result and reproduction steps, without
    some higher level description it is not always immediately clear what
    the problem even is.
    
    Also changes the order of expected & actual result. I think that
    improves the reading flow as you first see the steps to reproduce, and
    then you see the output of those steps.

commit 7a6f19bd0d566a5767aa72f82949231b24246e80
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 16 14:46:18 2023 +0100

    Add a "Run CrateDB" config to launch.json
    
    Same as the debug config, except with `noDebug` set.
    Should improve performance of the instance as no debugger stuff is
    setup.

commit 20658301a836ff9e98575f731f69eb79209f18a6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 11 10:43:09 2023 +0100

    Change outputHandler.sendBytes to take byte[]
    
    Instead of going from `byte[] -> BytesReference -> ByteBuf` we can go
    straight from `byte[]` to `ByteBuf`.
    
    Probably no big impact as `sendBytes` is only used for pings and one
    error handling scenario that should be rare.

commit ca29b26316a534f2e6d5dee3bcd6ac0acbf60c53
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 8 16:29:22 2022 +0100

    Exclude implicit `pg_catalog` from show search path

commit 198bc3e92e4409b57b7275b86485c9d3076f6b65
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Jan 11 10:46:04 2023 +0100

    Introduce case function to efficiently handle case expressions
    
    This introduces a case function to handle sql case expressions
    efficiently in a flat linear structure to avoid stack overflows caused
    by nested if-functions.
    
    Closes https://github.com/crate/crate/issues/12674

commit 6fa5c66b2493ce7ad8854f77cde2d5daf38e1ef3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 16 10:58:33 2023 +0100

    Try to fix flaky testInsertIntoClosedPartition
    
    Follow up to:
    
    - https://github.com/crate/crate/commit/861b7a45a2cf584fab268f39ac51a698bcdd0774
    - https://github.com/crate/crate/commit/3523509a171d69876afff6ebefe7f28cbb3848d7
    - https://github.com/crate/crate/commit/ac9ec02eeee2f9b39bf71fd567b667e893da5dd4
    
    The close-table transport uses the `lenientExpandOpen` option to resolve
    indices. In case of partitioned tables, indices can still be unavailable
    after a `INSERT` created a new partition.
    
    Based on the test stdout of a failure this might sometimes be the case:
    
        [i.c.e.d.t.TransportCloseTable] [[cratedb[node_sm0][masterService#updateTask][T#1]]] completed closing of indices []

commit 488784339abc9717b465773676e27b3fb2f8e1e3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 16 07:42:28 2023 +0100

    Update netty to 4.1.87
    
    https://netty.io/news/2023/01/12/4-1-87-Final.html

commit fa9b3ee13c68a067de03b9b1bcf2955ea53d5a38
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 10 10:24:53 2023 +0100

    Unify CloseableChannel implementations
    
    Follow up to https://github.com/crate/crate/pull/13440
    
    This turns CloseableChannel into a concrete class that can be used
    instead of `TcpChannel`, `Netty4TcpChannel`, `FakeTcpChannel` and
    `Netty4TcpServerChannel`

commit e605a31729921ab2a0e1691bb89c9744bd952868
Author: Niklas Schmidtmer <niklas@crate.io>
Date:   Fri Jan 13 08:04:59 2023 +0100

    Fix incorrect reference to 5.3.0 in 5.2.0 release notes

commit 2b44f2ec8ccd94fd9ca5a8272721bc213f6efaa8
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Dec 23 15:12:07 2022 +0100

    bp: Add WARN Logging on Slow Transport Message Handling
    
    https://github.com/elastic/elasticsearch/commit/5112c173194b70d2ed17f2ed3071dc0c9a44b76e

commit 48da3884696a99ce16589cb6edd077fec1d3b532
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Jan 12 14:49:55 2023 +0200

    Update mergify backport rules (-5.0, +5.2)

commit b0ff5878596304fca494c1014f0bf27160b38e3c
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Jan 12 14:41:22 2023 +0200

    Bump version to 5.3.0-SNAPSHOT

commit 998624375859afb6bddbb5fc78fd77eac1ce5e1d
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Jan 11 19:09:05 2023 +0200

    Uppdate sql features
    
    Update several features to YES since they've been
    implemented for quite some time.

commit fc86f18c736717daf88a448d765d4e4749daaf54
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Jan 11 17:31:44 2023 +0200

    Release 5.2.0

commit 519ef38b12dd4adbcc45fb09154007465bbdfc29
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Jan 11 18:02:07 2023 +0200

    Group release notes by topic

commit 43d8ee78baee2768b578653893ef9ccd798fe943
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Jan 11 16:19:32 2023 +0200

    Reflect release 5.1.3

commit 73b12f7ac09b8dabea0f92a9d610cf8e8388e08e
Author: baur <baurzhansahariev@gmail.com>
Date:   Tue Jan 10 10:16:43 2023 +0100

    Do not unwrap aliases when creating new outputs on rewriting Eval to Fetch

commit 2519f17b93d19e0ca3c7f3a952904e9d2fbf4c61
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 11 09:37:50 2023 +0100

    Add assertBusy to testSelectFromClosedTableNotAllowed
    
    Might fix flakyness:
    
        java.lang.AssertionError:
        Expecting code to raise a throwable.
            at __randomizedtesting.SeedInfo.seed([B3B867EFFCABFB84:CAD9FCAE166A156C]:0)
            at io.crate.integrationtests.SysShardsTest.testSelectFromClosedTableNotAllowed(SysShardsTest.java:455)
    
    https://wacklig.pipifein.dev/github/crate/crate/case/io.crate.integrationtests.SysShardsTest/testSelectFromClosedTableNotAllowed

commit 7dd29c394e4ea12fdbee3ca2384319e715a7de68
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 11 08:44:30 2023 +0100

    Reduce number of shards in testHealthWithClosedIndices
    
    Depending on node randomization, the large amount of replicas in the
    test case can lead to slow allocation or even errors (shard lock),
    leading to a timeout on a `alter table ... close`, causing flaky test
    failures:
    
        org.elasticsearch.ElasticsearchTimeoutException: Timeout while running `alter table t3 close`
            at __randomizedtesting.SeedInfo.seed([967E12237D9C33DA:AC4F34795F25B86D]:0)
            at app//io.crate.testing.SQLTransportExecutor.executeTransportOrJdbc(SQLTransportExecutor.java:197)
            at app//io.crate.testing.SQLTransportExecutor.exec(SQLTransportExecutor.java:137)
            at app//org.elasticsearch.test.IntegTestCase.execute(IntegTestCase.java:1698)
            at app//org.elasticsearch.test.IntegTestCase.execute(IntegTestCase.java:1834)
            at app//org.elasticsearch.cluster.ClusterHealthIT.testHealthWithClosedIndices(ClusterHealthIT.java:134)
    
    This sets the number of shards for the table to 1 to mitigate the issue.

commit 837e560667a10ad02d5fa70ae025683a82c8ccd5
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Jan 10 16:40:21 2023 +0200

    Fix: has_database_privilege `CREATE` on superuser
    
    Previously, checking for `CREATE` privilege on `crate` superuser would
    always return `false` instead of `true.
    
    Fixes: #13443

commit 3f08546c4207823cdfa6813bc037f04aa26cc1ef
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 10 09:15:31 2023 +0100

    Remove HttpServerChannel and TcpServerChannel
    
    All concrete `CloseableChannel` implementations have a `getLocalAddress`
    implementation. We can move the method to the interface and get rid of
    `TcpServerChannel` and `HttpServerChannel`

commit 861b7a45a2cf584fab268f39ac51a698bcdd0774
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 10 07:30:30 2023 +0100

    Try to fix flaky testInsertIntoClosedPartition
    
        java.lang.AssertionError: expected:<0> but was:<1>
            at __randomizedtesting.SeedInfo.seed([3349E8E08E592069:4407E11703262419]:0)
            at org.junit.Assert.fail(Assert.java:89)
            at org.junit.Assert.failNotEquals(Assert.java:835)
            at org.junit.Assert.assertEquals(Assert.java:120)
            at org.junit.Assert.assertEquals(Assert.java:146)
            at io.crate.integrationtests.PartitionedTableIntegrationTest.testInsertIntoClosedPartition(PartitionedTableIntegrationTest.java:205)
    
    Same approach as used in https://github.com/crate/crate/pull/13430
    If it doesn't work we may have to execute the query on each node to
    ensure all have the closed state.

commit 054c741ad7bfc223051b957e265b4cb195b1ebc5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 9 15:21:26 2023 +0100

    Remove transport profiles
    
    The settings were undocumented and there were no tests ensuring that
    multiple transport profiles work. There were only a few limited unit
    tests testing setting fallback/priority

commit fa2a4a5c67f328f670812680d08257e08e3f0c9b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 10 08:19:00 2023 +0100

    bp: Ensure ReplicationOperation notify listener once (#68256)
    
    https://github.com/elastic/elasticsearch/commit/20d2313d4b6

commit 7cbb5732e536b13279c6d5ecdade0e209191cab1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 9 17:06:04 2023 +0100

    Merge NetworkMessage into OutboundMessage
    
    `OutboundMessage` was the only class extending `NetworkMessage`

commit f684838dad17c374499d844c4c94980f6387cde1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 9 10:16:24 2023 +0100

    Use parent RamAccounting instance in ShardDMLExecutor
    
    The parent `RamAccounting` instance is either closed with a task or when
    the final `RowConsumer` finishes.
    
    Might fix flaky tests:
    
        KillIntegrationTest
        org.opentest4j.AssertionFailedError: [Query breaker not reset to 0 on node: node_s2]
          at __randomizedtesting.SeedInfo.seed([4C0486E0CAF108FE:C1CA1DD40B325C62]:0)
        expected: 0L
          but was: 644245L
    
    As seen in https://wacklig.pipifein.dev/github/crate/crate/5146a935-7e26-4ae6-9bc6-cfb21f003d07/01b148f2-8c1c-4051-a686-bbb92ebe2763

commit d4a99194666474c32e11093d11c742e46da90167
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 9 09:19:32 2023 +0100

    Remove unused properties/methods from PutIndexTemplateRequest

commit 4d4cd24a845aa84e10153447e00502cbd41fed73
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 9 09:04:46 2023 +0100

    Change PutIndexTemplateRequest to only support single mapping
    
    The `IndexTemplateMetadata` doesn't support multiple mappings anymore
    (and we never used that but always had a single "default" mapping)

commit db9de3a40def3442f00fc417059eb94655561b8a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 21 15:15:05 2022 +0100

    Change mappings on IndexTemplateMetadata to mapping
    
    CrateDB always had a single mapping type "default"

commit 098aaa02e4440fdf257c13c0ce4be1901e1a187d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 9 11:52:08 2023 +0100

    Try to fix flaky testSelectFromClosedPartition
    
    https://wacklig.pipifein.dev/github/crate/crate/311853a7-f95c-420e-9b10-68808cbcc367/63e919fa-a2e1-4cec-89f8-16ddf3ba13de
    
        java.lang.AssertionError: expected:<0> but was:<1>
            at __randomizedtesting.SeedInfo.seed([6C197DA133F14506:6B82887092529A0A]:0)
            at org.junit.Assert.fail(Assert.java:89)
            at org.junit.Assert.failNotEquals(Assert.java:835)
            at org.junit.Assert.assertEquals(Assert.java:120)
            at org.junit.Assert.assertEquals(Assert.java:146)
            at io.crate.integrationtests.PartitionedTableIntegrationTest.testSelectFromClosedPartition(PartitionedTableIntegrationTest.java:219)

commit 0d62c5e16a8b6d21148abf453fcf152c29d4bd2e
Author: baur <baurzhansahariev@gmail.com>
Date:   Mon Jan 9 11:24:06 2023 +0100

    Remove redundant unmodifiable set wrappers

commit 17660cf7398b06764d6f8b94f9e65610e622f86b
Author: baur <baurzhansahariev@gmail.com>
Date:   Thu Jan 5 23:19:54 2023 +0100

    Fix function resolution for bit types with different lengths

commit e150b0ce86c7a6e9c9c3c0d268660acdc067c9d5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 9 09:36:59 2023 +0100

    Remove unused startTime from IndexNameExpressionResolver Context
    
    `currentTimeMillis` results in syscalls.

commit 865c7e2fb9e734c2cdbbf8539d0a612a874497e7
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Dec 21 12:09:06 2022 +0100

    bp: Introduce integ tests for high disk watermark
    
    https://github.com/elastic/elasticsearch/commit/3389d5ccb25101b6a81523de4a293a65b082b4bc

commit edabe4fce06ea48530d794c0137145c8ba45e9d5
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Dec 21 11:25:16 2022 +0100

    Revert "Utilize `getLeastDiskEstimate` in DiskWatermarkNodesSysCheck"
    
    This reverts commit 1e4498bc

commit dc90a2918413ff9210e5cfea013624f6c5d8198f
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Dec 21 10:55:22 2022 +0100

    bp: Remove sporadic min/max usage estimates from stats
    
    https://github.com/elastic/elasticsearch/commit/b75207a09f17c203ca7381f7db4f319225a98070

commit cf20e2a9a9e5cd0ff05829100ca5e913db64dda4
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Jan 4 11:16:43 2023 +0100

    Skip SearchableSnapshot related patch
    
    https://github.com/elastic/elasticsearch/commit/2983584ef6e7099a8a83ecbcde7288af6d4eeb4a

commit df66549e12ce8a820b42fc9cb686fcd6d3d74226
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Jan 4 10:55:47 2023 +0100

    Skip FieldMapper related patches
    
    https://github.com/elastic/elasticsearch/commit/f17ca18dfa8715e56702299a875c29bc224a7142
    
    https://github.com/elastic/elasticsearch/commit/7405af8060bd32bf2ae7917a13c441e4214339b8
    
    https://github.com/elastic/elasticsearch/commit/9e52513c7bf435ec2487dda100aac81070be18dc
    
    https://github.com/elastic/elasticsearch/commit/ca68298e89c09ccbbf3670f8e1055b3eded17bae
    
    https://github.com/elastic/elasticsearch/commit/c4726a2cecee09ca94d8474ae445c41e2b2fabff
    
    https://github.com/elastic/elasticsearch/commit/ae2fc4118d2c5056e1c02ed89a63af9e8b943499
    
    https://github.com/elastic/elasticsearch/commit/caf143f4a519fb2f883246ff17222f05480d9c75
    
    https://github.com/elastic/elasticsearch/commit/88993e763f9537c3d573e9892b4f1a4ba42569fd
    
    https://github.com/elastic/elasticsearch/commit/fb84b6710d5ee62c00f51cd041d7318691195fc3

commit 2a8038b883bcd9aef0595ccf18eaf1e4a03ba380
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Jan 4 10:54:40 2023 +0100

    Skip CCR related patch
    
    https://github.com/elastic/elasticsearch/commit/25fbc014598abebf60415881e8e0ca2292059990

commit 9f5165ecb3753c70b654d6ec046d70484c0f5e24
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Jan 4 10:46:07 2023 +0100

    Skip Clone Snapshot API related patches
    
    https://github.com/elastic/elasticsearch/commit/5c3a4c13ddd0ce0eab4302a87fbdb172a6b57628
    
    https://github.com/elastic/elasticsearch/commit/e02561476ea68ade770c7c234c5de5afef1eb4e4
    
    https://github.com/elastic/elasticsearch/commit/bdea16301d7ce99d534bf80359e1f663f316dfac
    
    https://github.com/elastic/elasticsearch/commit/860791260df4ce229b24bb97d1d92ad1a42658e9
    
    https://github.com/elastic/elasticsearch/commit/51d0ed1bf3022b490ec039d494c16cdc9333e3f7

commit 9d4b4bdb8adfa0326f1a83a20657728bf85a8483
Author: Georg Traar <georg@crate.io>
Date:   Sat May 7 20:03:12 2022 +0200

    add parse_uri() and parse_url() function

commit 0b1df11c07bbeedebd2e6b794f9df7a3834ca48b
Author: hlcianfagna <110453267+hlcianfagna@users.noreply.github.com>
Date:   Fri Dec 30 14:26:01 2022 +0000

    Fix link to IEEE 754

commit 2b5224a922d909e9e99aceef30828bb36e8d2585
Author: Robert Palmer <robd003@gmail.com>
Date:   Wed Dec 21 20:41:03 2022 -0500

    Bump Postgres Wire Protocol version to 11 since 10 has been deprecated

commit 18feefcf868c2a047c0a1ad8a457d99aa9b9272b
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Dec 28 14:12:06 2022 +0100

    bp: Optimize XContentParserUtils.ensureExpectedToken
    
    https://github.com/elastic/elasticsearch/commit/cf75abb021f6b3635848452ae41f89dfdd1a53cc

commit 935788bb57a9356a9abc85ff7ce46dc85582e7a6
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Dec 28 12:26:45 2022 +0100

    bp: Cleanup Blobstore Repository Metadata Serialization
    
    https://github.com/elastic/elasticsearch/commit/89de9fdcf7720c9ca9e8903fde148c4451e8fc24

commit 13b64723294bd05a23ab8500a0dccb10b8c94135
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Dec 28 12:22:48 2022 +0100

    bp: Fix Overly Strict Assertion in BlobStoreRepository
    
    https://github.com/elastic/elasticsearch/commit/d13c1f50581919a9188e911a1b5d41251d411b6b

commit 3b66d1e09e9866bd144e06c03bcf8f90689e5731
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Dec 28 11:03:48 2022 +0100

    bp: Uniquely associate term with update task during election
    
    https://github.com/elastic/elasticsearch/commit/b4a1199e87104312b589f2631e5369680c1910f7

commit 0abe851792ef2effd0d68f73c73d6c68f9026d26
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Dec 28 10:28:15 2022 +0100

    bp: Fix to actually throttle indexing when throttling is activated
    
    https://github.com/elastic/elasticsearch/commit/c9baadd19bf8f37db371ce65c9b657a7e910d9a8

commit 3f895cacafcdb4045766f784d858abb7cdb175a2
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Dec 28 09:18:07 2022 +0100

    bp: Remove allocation id from engine
    
    https://github.com/elastic/elasticsearch/commit/8c6e197f510c13511cb1c5b325340d3eedc45702

commit b56ff522df5fc4bda7339e8cb72556a65f03241a
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Dec 28 08:39:15 2022 +0100

    bp: Add Trace Logging to File Restore
    
    https://github.com/elastic/elasticsearch/commit/0d5250c99b1e9017808d32a2b95dd315759e5f2b

commit b5d5a0926598b7d5e44d72ea29ddb5b24781f297
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Dec 28 08:37:02 2022 +0100

    bp: Speed up RepositoryData Serialization
    
    https://github.com/elastic/elasticsearch/commit/13e28b85ff5688faf207461539ec810b4145dbf9

commit e3155eb1d13490e768361ee2f761222272128aab
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Dec 28 08:35:30 2022 +0100

    Skip irrelevant patches

commit 287e2b6364e0e2a2fd2dcd17ccb3b2ff0fb822da
Author: baur <baurzhansahariev@gmail.com>
Date:   Tue Dec 27 15:34:41 2022 +0100

    bp: Fix cluster health when closing
    
    https://github.com/elastic/elasticsearch/commit/32fa90c9bac0355680c19f2f76d78aa9af2a4ba0
    
    https://github.com/elastic/elasticsearch/commit/9a77f41e554e11478e028dc00a00b498f45e230f
    
    https://github.com/elastic/elasticsearch/commit/ab9b37a82c7675ef223451658b9f91740567fdb4

commit bb3e1633294aac0a6428ebe6c16863d806e29895
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Dec 23 13:40:30 2022 +0100

    Skip FieldMapper patches

commit 31dfa970b6eefaa00d0a11b705a29cb64591b9f2
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Dec 23 13:30:03 2022 +0100

    bp: Tidy up fillInStackTrace implementations
    
    https://github.com/elastic/elasticsearch/commit/06d5d360f92dcbffceebb38e9d98605b070aba49

commit 5a902a3c478f3746b324b580ce611ceb2f6fb0f7
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Dec 23 13:18:37 2022 +0100

    bp: Speed up merging when source is disabled.
    
    https://github.com/elastic/elasticsearch/commit/e0a4a94985f56872ff1f8c694d7fb689d9f113fe

commit bedf62cf90789728faa6eb7d1d3e636ccf89567d
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Dec 23 13:09:02 2022 +0100

    Mark 'Suppress stack in VersionConflictEngineException' as done.
    
    Done in https://github.com/crate/crate/pull/13090/commits/93170dc0550d109dd77ff3448c864b3efce6699d
    
    https://github.com/elastic/elasticsearch/commit/62dcc5b1ae1b7a7e31d347c4c9d7936a9fef747b

commit 8f6dcfee81bf476080c81d18a6abaa3fcdd60f9b
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Dec 23 13:01:06 2022 +0100

    bp: Log if recovery affected by disconnect
    
    https://github.com/elastic/elasticsearch/commit/14aec44cd862ceb9bad90f390c9d67798d3324c0

commit 2839395d8f7faada69e2e97a8b76a86af8bbaedc
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Dec 23 12:56:46 2022 +0100

    bp: Log WARN on Response Deserialization Failure
    
    https://github.com/elastic/elasticsearch/commit/ffbc64bd10990bfbda173dc0632c1ced4fb8f1c3

commit 9ef24781b7ed4fdcca7e72cf3bc2353bce4d9bfd
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Dec 23 09:23:33 2022 +0100

    bp: Save Some Allocations when Working with ClusterState
    
    https://github.com/elastic/elasticsearch/commit/95766da3452ab2c0b40380e9ccdf5f28d55e921b

commit 688e8bb64c7ca023942df26ee4755754b3c73168
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Dec 23 12:13:40 2022 +0200

    Fix swapping parted tables with drop_source = true
    
    Previously, when one of the tables (either source or target) or both
    table where partitioned, the table was not dropped, so the `source`
    table was still available and could be queried, as if
    `drop_source=false`.
    
    Issue was that we were trying to remove indices from the original
    cluster state and not the updated one (failure for
    parted<->-non-parted), plus we failed to remove the templateName
    (failure for non-parted<->parted).
    
    Fixes: #13384

commit 35530a967137065c45d2da91996ce78e1af43303
Author: baur <baurzhansahariev@gmail.com>
Date:   Thu Dec 22 15:49:40 2022 +0100

    bp: Remove Dead Variable in BlobStoreIndexShardSnapshots.
    
    https://github.com/elastic/elasticsearch/commit/875af1c976fe6c4f90a044edf63fb1229b4eb9d9

commit a886290b9dc144cdc09df9df4fd3b32feb414841
Author: baur <baurzhansahariev@gmail.com>
Date:   Thu Dec 22 15:27:59 2022 +0100

    bp: Optimize Snapshot Shard Status Update Handling
    
    https://github.com/elastic/elasticsearch/commit/7b941a18e9d617808c76647950b43cd1e0cac209

commit ff78efa8a12a5282684862589d13408c15e59ea8
Author: baur <baurzhansahariev@gmail.com>
Date:   Thu Dec 22 14:14:19 2022 +0100

    Skip irrelvant patches

commit 77e096188673174b6f19ec40fb805abfc4874f12
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Dec 22 18:03:57 2022 +0200

    tests: Improve SwapTableITTest
    
    Improve integration tests for swapping tables, check for partitioned
    source <-> non-partitioned target, non-partitioned source <->
    partitioned target, use `information_schema.table_partitions`.

commit b2af1d15c8aa0d6a9a00ddbba6c46d0e2fcc49f9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 21 15:35:47 2022 +0100

    Remove random templates from IntegTestCase
    
    CrateDB utilizes templates for partitions and requires templates to be
    in a specific format.
    
    The template randomization doesn't follow that format and also prevents
    us to change the data structures in the ClusterState to model
    tables/partitions in a more concrete format.
    
    As a concrete example: We currently cannot enforce that templates have a
    mapping due to the randomization. But we know that partition templates
    must have a mapping.
    
    This requires us to handle the "no mapping" case in many places, even if
    it cannot happen outside of test scenarios.
    
    Relates to https://github.com/crate/crate/issues/11939

commit 29073ab24bbce2d78c61291614c003fa94785627
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Wed Dec 21 08:55:19 2022 -0500

    Elaborate on the comment describing the restriction on relation naming

commit 83586ff100e917206e9e62a944b3f47af8839897
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Tue Dec 20 13:55:00 2022 -0500

    TableName can start with '_', only schemas cannot

commit ea4372154b64b00df688895b2b60531b22fce5c3
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Tue Dec 20 13:27:50 2022 -0500

    Validate RelationNames as part of its constructions

commit f05048589efdcac9d1c94d0f8cdbc6004a570b0f
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Tue Dec 20 12:09:50 2022 -0500

    Revert "Refactor RelationName constructors"
    
    This reverts commit e9b05530a42cfec68f3f910abc706eed5ec28830.

commit 9e7ead48b36d2b848f5b7d4b496f51e9338642d1
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Tue Dec 20 12:09:35 2022 -0500

    Revert "Add a RelationName validation for invalid characters"
    
    This reverts commit 16b73a63f7ad8cae34d3249c705a0ec5459df66f.

commit 77d9c25c7b5b599421e380d5fabd84a904238c67
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Mon Dec 19 11:51:00 2022 -0500

    Add a RelationName validation for invalid characters

commit e6212d03fee33b707e4618b4ba0cd4a3d6511d1c
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Mon Dec 19 11:28:09 2022 -0500

    Refactor RelationName constructors

commit a4e8b1a96283f313d339183691a7552ae0ad1ccb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 20 16:59:07 2022 +0100

    Remove type property from MappingMetadata
    
    The type was always "default" in CrateDB

commit 66f13b2d85fb810fca60145a2fafcfeff1cf9219
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Dec 16 15:07:15 2022 +0100

    Add support of adding multiple columns in one alter table statement

commit f72e295a292c208722a332f078c0ff88bc0fca35
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Mon Dec 19 16:30:58 2022 +0100

    Update to Admin UI 1.24.1

commit eaf0746a007073784e98f0efd3748de2f850336b
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Mon Dec 19 14:44:50 2022 -0500

    Fix an issue prevented UDFs from accessing nested objects

commit d8290539eff7683954569ed0e0fc3f2cc32fc25e
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Dec 19 14:20:54 2022 +0100

    bp: Remove Mostly Redundant Deleting in FsBlobContainer
    
    In almost all cases we write uuid named files via this method.
    Preemptively deleting just wastes IO ops, we can delete after a write failed
    and retry the write to cover the few cases where we actually do an overwrite.
    
    https://github.com/elastic/elasticsearch/commit/196ed6b90eca767a331836afc6e129198ed9517a

commit d95581a4a62976aced05154bad260ff75821eb2c
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Dec 19 13:43:06 2022 +0100

    bp: Fix Queued Snapshot Deletes After Finalization Failure
    
    This fixes the behavior of the snapshot state machine in the following edge case:
    
    1. Snapshot is running
    2. Delete/abort for the snapshot is started
    3. Snapshot fails to finalize
    
    We were not removing the failed snapshot id from the list of snapshots to delete in the delete.
    This lead to an error in the repository, which throws if we try to delete a non-existing snapshot.
    This commmit updates the deletions in progress by removing the failed snapshot id.
    The fact that this could lead to snapshot delete entries without any snapshot ids is not optimized
    on purpose because it allows for another attempt at writing clean `RepositoryData` and will run basic
    cleanup on the repository (root level blobs and stale indices) and thus bring the repository back into
    a clean state after a failed finalization.
    
    Closes #60274
    
    https://github.com/elastic/elasticsearch/commit/0ff66bb3d70855aed48669ccb4973a52d68b0aea

commit d9ba1242097cd22c3145b064e1f2917678b91696
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 19 14:56:59 2022 +0100

    Add method to create IndexMetaData mapping to Reference
    
    Makes it easier to write unit tests and allows us to keep concrete
    DataType and Reference classes an implementation detail.

commit 753f91506db96272df111f5678b0aa1abcd925c6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 19 12:00:48 2022 +0100

    Set `isNullable` on Reference correctly in add-column logic
    
    `NOT NULL` was used as `is nullable`.
    The mistake was made twice, cancelling each other out.

commit f858759f8ab9132d478183467ca8251ab1e68e45
Author: hlcianfagna <110453267+hlcianfagna@users.noreply.github.com>
Date:   Fri Dec 16 08:35:57 2022 +0000

    Update asyncpg as flagged by osv-scanner1.0.1

commit 59625220b2b721f57a4c453ad6c0deb4a698f5be
Author: Georg Traar <georg@crate.io>
Date:   Sun Oct 9 21:25:12 2022 +0200

    add object merge function

commit 39935e8039e93d1a0ed386790e227974121aa483
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Dec 16 09:53:41 2022 +0100

    Short-circuit objects with NULL values on source parsing

commit 3d0029beae0891484277c76ec74e5c6017a06ff4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 14 14:54:52 2022 +0100

    Propagate assertion errors in DDLClusterStateTaskExecutor
    
    The DDLClusterStateTaskExecutor swallowed assertion errors, preventing
    listeners from triggering and causing queries to get stuck.
    
    This isn't an issue in production were we do not expect assertions to
    trigger, but during development it's helpful to track down the
    assertion error if the listeners do get triggered.

commit acfc909a06d536943e081d08094ea361da8caffe
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Dec 14 20:57:38 2022 +0200

    Implement has_database_privilege function
    
    To improve compatibility with PostgreSQL, implement
    `has_database_privilege` function which can be called to check whether
    current session user, or another use has certain privileges on `crate`
    database.
    
    Closes: #10251

commit 18638e87dd79e5cfc672f17e65817f0e59b2cf13
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Dec 14 20:57:07 2022 +0200

    tests: Improve tests for HasSchemaPrivilegeFunction

commit 5c20897c240e7fa234596fb3de0782a20536f395
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Dec 14 20:55:55 2022 +0200

    Refactor HasSchemaPrivilegeFunction and extract superclass
    
    As a preparation step for `HasDatabasePrivilegeFunction` extract common
    parts to a superclass `HasPrivilegeFunction`.

commit caed401d8b89b84cc7be4c8cedf5675736137307
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Dec 14 14:49:55 2022 +0200

    Fix: Fix: disallow users without perms to call has_schema_privilege
    
    Only users with AL on CLUSTER privilege or those who can already query
    sys.privileges should be able to call has_schema_privilege with a user arg
    to check privileges of other users on a schema.

commit 58c62427b9336f9d5a94df42d28063dd52298c30
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 14 14:11:32 2022 +0100

    Update netty to 4.1.86
    
    https://netty.io/news/2022/12/12/4-1-86-Final.html

commit bb588fec91a971a60863ef06aed4ec62e025b28a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 13 15:12:26 2022 +0100

    Replace deprecated DocValuesFieldExistsQuery

commit 2e083ec6594d3969bd8b46b1378e22c71c31bfc2
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Dec 13 13:50:45 2022 +0200

    Add support for `extract(epoch from <interval>)`
    
    Follows: a6737a7d2dc70b70cdd1ecd57293e1e1bc589cf6

commit a6737a7d2dc70b70cdd1ecd57293e1e1bc589cf6
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Dec 12 18:22:32 2022 +0200

    Add support for `extract(<unit> from <interval>)`
    
    Closes #12995

commit 85913568bab27687a93816aa679613bad04c8ad4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 13 11:11:16 2022 +0100

    Remove unused FieldTypeLookup.simpleMatchToFullName

commit 67a3c7f4adbcde667a2bbcacec138a97858c803d
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Mon Dec 12 15:23:16 2022 +0100

    Tests and documentation: Explicitly use `sphinx-csv-filter==0.4.0`
    
    Currently,`sphinx-csv-filter` package only supports `docutils<0.19`,
    and this is now reflected appropriately in the 0.4.0 release.
    
    The patch is here that in the future, builds on older branches will not
    fail, when newer `docutils` releases might get pulled in accidentally.

commit 1c35042282c7b4ad93852819252f87fdf8b24224
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 13 10:25:12 2022 +0100

    Add benchmarks/.factorypath to gitignore
    
    The file is created by eclipse.jdt.ls

commit 9962f288008959b39046aca8d45d82cbc7bb965a
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Dec 12 20:49:18 2022 +0200

    docs: Improve changelog entry regarding ts subtraction
    
    Follows: e68941ee5c7fca4a321d3ba2032a5e07de94bb51

commit 0d155046ac9e15c566d8a1bcc3b4c046b6e9648d
Author: baur <baurzhansahariev@gmail.com>
Date:   Mon Dec 12 15:18:51 2022 +0100

    bp: Improve Snapshot State Machine Performance
    
    https://github.com/elastic/elasticsearch/commit/395538f5083d2cb39e5ed94acc899391dbfe0071

commit 9ef18823efd0a01a23e11ffb4e932ed96bb1a651
Author: baur <baurzhansahariev@gmail.com>
Date:   Mon Dec 12 15:16:08 2022 +0100

    bp: Remove unused deciders in BalancedShardsAllocator
    
    https://github.com/elastic/elasticsearch/commit/b26584dff8952c876f20e7f9750299ee98a38f25

commit e341e7a7475e21a7f8236a84f385f90011f585ad
Author: baur <baurzhansahariev@gmail.com>
Date:   Mon Dec 12 14:52:54 2022 +0100

    bp: Use int for number of parts in blob store
    
    https://github.com/elastic/elasticsearch/commit/b866aaf81c0d31e031b7e770a9a098544272f7f0

commit ef004fe7ea5731610c22c48a5ba0e0d6a36aabdb
Author: baur <baurzhansahariev@gmail.com>
Date:   Mon Dec 12 08:16:43 2022 +0100

    mark applied patch 'Some Optimizations around BytesArray'
    
    dpne in https://github.com/crate/crate/commit/7708ec76dc699c13ea5e31b6f4ed50a9494954fe

commit 89b9dea0fe1a6ab14f8eb68a62ad16deabdafe5c
Author: baur <baurzhansahariev@gmail.com>
Date:   Mon Dec 12 08:15:24 2022 +0100

    skip irrelevant patches

commit 36f7e2990e05f80fb9fadde761330a5814859b23
Author: baur <baurzhansahariev@gmail.com>
Date:   Sat Dec 10 14:19:52 2022 +0100

    bp: Reset Deflater/Inflater after Use in DeflateCompressor
    
    https://github.com/elastic/elasticsearch/commit/6bbeedc932121d953c769451f8987ffa8a31ef9f

commit 7fb3f9730edbab0e65950e6042fd1a1512047220
Author: baur <baurzhansahariev@gmail.com>
Date:   Sat Dec 10 09:53:44 2022 +0100

    bp: Remove Redundant Stream Wrapping from Compression
    
    https://github.com/elastic/elasticsearch/commit/ed4984a32e7add0c14f65743f1d1ec1c91093fb1

commit 975d237753ff7082380cd36f03721f6dc1d930c8
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Dec 7 15:30:39 2022 +0100

    bp: Speed up Compression Logic by Pooling Resources
    
    https://github.com/elastic/elasticsearch/commit/806dfcfcf7de1f2fd2e4bef0e1194b637c5118fa

commit f4d56746c0fa1e06e9a3205c403f22a5588fb7c6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 7 15:53:57 2022 +0100

    Extend SQLResponseAssert with hasRows/hasColumns & use in TSQLATest

commit c334fbe3e50ef93c0df4435d9b2d2758df5cd029
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Wed Dec 7 19:41:14 2022 +0100

    Chore: Remove last references to `crate.in.sh`

commit d4bc90423f5ac249b59dd2cabc61ef40e8bac625
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Dec 9 11:22:58 2022 +0100

    Align number_of_replicas preffix stripping with other settings
    
    We currently strip the `index.` prefix of all settings at:
     - TableParameters while defining a set of settings used for
       certain operations (e.g. SUPPORTED_SETTINGS)
     - MetadataToASTNodeResolver while building SQL expressions out
       of index settings
    
    Instead of adding even more spezialized handling for
    `number_of_replicas` introduced by fa8fd6f2387, we should just fix
    the missing prefix strip where we explicitly add this setting.
    
    Follow up of fa8fd6f2387.

commit 5658a431c73e5de134d752290955878de280a9e9
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Dec 7 21:24:27 2022 +0200

    Reflect release 5.1.2

commit f546d739d824daf7c8f3b0b8454d8ff8319fc4c9
Author: baur <baurzhansahariev@gmail.com>
Date:   Tue Dec 6 13:49:28 2022 +0100

    bp: Optimize a few Spots on IO Loop
    
    https://github.com/elastic/elasticsearch/commit/08dbd6d9893c78860c1109f11fef52b1951b2d69

commit 445695643a9ef71056a3bb0cd18d0a7b2de19389
Author: baur <baurzhansahariev@gmail.com>
Date:   Tue Dec 6 10:48:24 2022 +0100

    bp: Propagate forceExecution when acquiring permit
    
    https://github.com/elastic/elasticsearch/commit/2f76c48ea71d5b45ef531ab4c579022e82757438

commit b50afc93c302d689cfd10aee625d4c4760d763ba
Author: baur <baurzhansahariev@gmail.com>
Date:   Tue Dec 6 10:29:07 2022 +0100

    Skip irrelevant patches
    
    https://github.com/elastic/elasticsearch/commit/1ef2cd7f1ad90de9d0d2b8822dcda4749ecb56a5
    https://github.com/elastic/elasticsearch/commit/25404cbe3d004d9e3c8e1583a3b5d8016c0439b7
    https://github.com/elastic/elasticsearch/commit/b1aa0d8731eb8566d6bef0f9410c4f685658909e
    https://github.com/elastic/elasticsearch/commit/997c73ec177c682afb2eb551102b3aae0c57d423
    https://github.com/elastic/elasticsearch/commit/f3b6d49ae1e7d6cfa4b2988a1a02bbd87b722f80
    https://github.com/elastic/elasticsearch/commit/8b56441d2b00bb80f3e8452f7886b295abce0d86
    https://github.com/elastic/elasticsearch/commit/f769821bc80652d4cb0237c18a78bd09abad38da
    https://github.com/elastic/elasticsearch/commit/5723b928d7dcb42ac9a9dce37340183a60f3612c

commit d17608f050a2d43c7c775b715b81a615390d4475
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Dec 6 21:58:17 2022 +0200

    Upgrade library depedencies to latest versions

commit 9aaa06dbd6b67a3290840a62ec1bb3a84fde8d2e
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Dec 6 21:12:28 2022 +0200

    Upgrade `Lucene` to latest version `9.4.2`.

commit e68941ee5c7fca4a321d3ba2032a5e07de94bb51
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Dec 5 16:11:41 2022 +0200

    Change subtraction of timestamps to return `INTERVAL`s
    
    Previously the subtraction of two timestamps resulted in a long
    value representing their diff in milliseconds.
    To be combatible with PostgreSQL, change this behaviour by returning
    an `INTERVAL` value instead by registering a dedicated scalar function
    for this operation.
    
    Closes #12479

commit 7a5f1748a0ba3252bdabcede7bd3191c8d70869c
Author: baur <baurzhansahariev@gmail.com>
Date:   Tue Dec 6 15:34:37 2022 +0100

    Remove empty test files
    Follow up to https://github.com/crate/crate/commit/bd324bfcb6fc2a69ba20706dcbf5e506b54f5fe4

commit 91168cef7087b7ad6e3e54ee60de5388060c9df0
Author: baur <baurzhansahariev@gmail.com>
Date:   Tue Dec 6 15:31:16 2022 +0100

    Skip 'Stop opening PING conns to remote clusters'
    
    https://github.com/elastic/elasticsearch/commit/078e8717eea75705d7fd3610f4f94ae6cea6dccd
    
    We merged SniffConnectionStrategy and RemoteConnectionStrategy in https://github.com/crate/crate/commit/ce2895ee75acf4684de3cdb53a3f77cfbcd039af
    and then moved everything into SniffRemoteClient in https://github.com/crate/crate/commit/bd324bfcb6fc2a69ba20706dcbf5e506b54f5fe4
    SniffRemoteClient already has zero PING connections.

commit 0aa2d85d3e5c9d425d1a1b15a984e220e065c063
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 6 14:07:43 2022 +0100

    Rename InputCollectExpression to RowCollectExpression
    
    The name `Input` was used because the class is often used for
    `InputColumn` symbols, but `Input` doesn't convey any useful information
    regarding the `CollectExpression`. The `CollectExpression` interface
    extends `Input` so this instance wasn't special in that regard.
    
    This instead adds `Row` to the name to highlight that it operates on
    `Row` instances.
    
    In https://github.com/crate/crate/pull/13280 there might be a similar
    implementation, but with `Object[]` instead of `Row`.

commit 44b8b6e6a19453b2b294e1a680b8d767cff3a94d
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Dec 5 17:22:30 2022 +0200

    Implement `SUM()` aggregation for `INTERVAL` types
    
    Add a new `IntervalSumAggregation` function which doesn't support doc
    values (as `INTERVAL` is not a stored type) to support `SUM()` on
    `INTERVAL`s, e.g.:
    ```
    SELECT (tsEnd - tsStart) FROM test
    ```
    
    Closes: #12480

commit ad27a559ef477697a6c5096b329456df04510f8c
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Dec 5 12:26:18 2022 +0200

    Avoid warnings for raw types in Agg functions

commit 3f71aac83dcba3bcedc3d4c61ec64efae6be6081
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 6 10:29:36 2022 +0100

    Avoid copy operations in AddColumnRequest

commit 7f2a94f4fd9589280956634964835c1a03508a07
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 6 10:17:00 2022 +0100

    Move writeTo and StreamInput ctor next to each other in AddColumnRequest
    
    Makes it easier to visually ensure the implementations fit

commit 6b1467df7b9ac26669196110e3597dd336932251
Author: baur <baurzhansahariev@gmail.com>
Date:   Mon Dec 5 16:03:07 2022 +0100

    bp: Simplify and Speed up some Compression Usage
    
    https://github.com/elastic/elasticsearch/commit/32423a486d66ce5ef447cbfe0c74beebc8f9d924

commit 756e4d13eeb7d4d718144c1ab1dca1b4fa7279b4
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Nov 29 17:16:48 2022 +0100

    Adapt privileges for DECLARE
    
    All users can declare cursors as long as they have the required
    permissions for the query used within ``DECLARE``.

commit 31276e6f49c1eda27ffb07ee41988821fede4deb
Author: baur <baurzhansahariev@gmail.com>
Date:   Mon Dec 5 14:37:35 2022 +0100

    bp: Ensure repo not in use for wildcard repo deletes
    
    https://github.com/elastic/elasticsearch/commit/af519be9cbd13143eb350bae25b5003b234d2c0f

commit 5d88915241cecbc185b7dba915f03dad6c621421
Author: baur <baurzhansahariev@gmail.com>
Date:   Mon Dec 5 12:23:49 2022 +0100

    bp: Do not access snapshot repo on dedicated voting-only master node
    
    https://github.com/elastic/elasticsearch/commit/6644f2283d22c81df9282c57616e5436060b171e

commit 9a30c15325b933b688bfbb4acf9bbbb6d8fc1be4
Author: baur <baurzhansahariev@gmail.com>
Date:   Mon Dec 5 11:07:53 2022 +0100

    Skip irrelevant patches

commit 76952cc758ad3b93b74b26745df224cf3f379472
Author: baur <baurzhansahariev@gmail.com>
Date:   Mon Dec 5 10:07:43 2022 +0100

    bp: Improve some BytesStreamOutput Usage
    
    https://github.com/elastic/elasticsearch/commit/ebfb93ff264c8f30751f9626c53b5c5ab781499f

commit 1eeb9dca6365ff7f81431de2779223bffb4b7818
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Dec 2 17:13:33 2022 +0100

    bp: More Efficient Writes for Snapshot Shard Generations
    
    https://github.com/elastic/elasticsearch/commit/3270cb3088c7b199b150496ca0d4cbd692a2bb8c

commit 2669fda75388f7cd973423ca212d6de6b552ecc6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 5 10:34:02 2022 +0100

    Ensure memory accounted in ShardDMLExecutor gets released
    
    Follow up to https://github.com/crate/crate/pull/13290
    
    A `BatchIterator` could get killed, stopping the iteration loop and
    leaving requests with accounted items unused, never triggering the
    callback that would decrement the accounted memory.

commit e819b5dc837d2fe4f98cdce68144993df2344fc8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 5 09:38:50 2022 +0100

    Remove empty ShardRequest constructor
    
    The empty constructor should never be used

commit ac9139376d1f442ae64758cb017468caf861fdeb
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Wed Nov 30 18:34:59 2022 +0100

    CI: Remove `gradle-license-report` plugin
    
    Could not GET 'https://jcenter.bintray.com/com/github/jk1/gradle-license-report/2.1/gradle-license-report-2.1.module'.
    
    Received status code 403 from server: Forbidden

commit 9b788b925882135509c586243cb03096744b8ae1
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Dec 2 14:38:16 2022 +0100

    bp: Improve deserialization failure logging
    
     https://github.com/elastic/elasticsearch/commit/d2ddf8cd6a1a1de81b487af2062def75eb64eeda
    
    We removed TaskManager in https://github.com/crate/crate/commit/d872104f5b124a54c2725044c45696ea7196446d and thus had to adapt tests s othat sendRequest doesn't have a 'Task' argument.
    We removed TransportInterceptor (which used to contain AsyncSender) in https://github.com/crate/crate/commit/c49ecea33f41c98f4c7fb92afcc911c9cb9dc276 and thus no asyncSender calls in our port
    We also skipped https://github.com/elastic/elasticsearch/commit/2fdbed7797a34986b977958c4cce6dec7b280eb0 and thus no 'request.getParentTask().isSet())' in our sendRequest().

commit 69861ff6ae2bb6e7aee55366020958b98954a1ff
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Dec 2 14:29:03 2022 +0100

    Snapshots should not fail if writing `index.latest` fails
    
    Partial port of https://github.com/elastic/elasticsearch/commit/204efe9387c2474870598b7987814d0168805042
    Didn't backport undocumented/unexpoed setting, added a warning on overwriting existing files instead.

commit e9962228ebdad1a24d6ded0a429c3617cdeeef4f
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Dec 2 13:54:19 2022 +0100

    bp: Reduce Heap Use during Shard Snapshot
    
    https://github.com/elastic/elasticsearch/commit/a2c49a4f02d8a3607c519e3946373c301b305d81

commit ecc9fcc0a2126ce386faab9be60d64d08b0fdf73
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Dec 2 13:04:47 2022 +0100

    Skip irrelevant patch
    
    Skip https://github.com/elastic/elasticsearch/commit/1f6a3765e46f904270a0f1862aaae37ca5a4960c
    since it's related to old code path in the begindSnapshot method which we deleted in https://github.com/crate/crate/commit/df3cc389244d4c475301a95f787c8cc8d5bd930b

commit 49ee574081d0854571dc2ee5165564bf87f62566
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Thu Dec 1 13:06:41 2022 -0500

    Improve error handling of single element updates of an object array

commit 6c03e033443914b3a30e95613a3a1aafeb52d429
Author: baur <baurzhansahariev@gmail.com>
Date:   Thu Dec 1 21:40:47 2022 +0100

    bp: Cleanup and optimize More Serialization Spots
    
    https://github.com/elastic/elasticsearch/commit/753fd4f6bc39ee1d0f86d919fd3aa1ede7ed5470

commit f4db453aa07e8dfd009eeaae2a7638846ae846a3
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Dec 2 10:59:31 2022 +0100

    Remove unused org.elasticsearch.action.admin.indices.upgrade.post package
    
    Follow up to https://github.com/crate/crate/commit/97ec636ce1fd96177f1260ce75217a10e5f63d5d and https://github.com/crate/crate/commit/3e4b9cb5d442e471ba7aa7d3cb4bfe48bb6ea5c3

commit 1278b675ff424a560b2e66e3540b106059ef8e2f
Author: baur <baurzhansahariev@gmail.com>
Date:   Thu Dec 1 21:22:12 2022 +0100

    bp: Stop Serializing RepositoryData Twice when Writing
    
    https://github.com/elastic/elasticsearch/commit/d39622e17ec901594d1ff93d45841e5ba763319c
    
    This backport takes only 1 change from the original patch - fixing the double wrapping of collections when copying the repository data instance via the `withGenId`.
    
    Double serialization part of the patch is irrelevant
    since we backported RepositoryData caching in https://github.com/crate/crate/commit/078d0ba94e4e113abaa2a91bf0654967b2104267
    but reverted it in https://github.com/crate/crate/commit/983c980cf6b4b4ce2acb6494dab18cb3eb0a90dd

commit dd5d19ca06627bcd78f3f09adf4bbd698dbcdadc
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 4 12:22:57 2022 +0200

    add datestyle session setting

commit 32d1602bbc7b2ee515c8f1763fd9b70fd0aeff15
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 22 18:01:33 2022 +0100

    Downscale batches for delete/update by query requests based on memory
    
    We batch many items into a single request to reduce overhead, but this
    can cause memory pressure if the items are large.
    
    For example, in statements like
    
        UPDATE tbl SET x = CASE y
          WHEN .. THEN ..
          WHEN .. THEN ..
          ...
    
    With many `when .. then` conditions, the assignments require quite some
    memory due to how we represent the conditions.
    
    (See also https://github.com/crate/crate/issues/12674)
    
    To reduce the memory pressure this adds the dynamic request sizing logic
    which we already use for COPY/INSERT INTO statements

commit 4adbaf210cbc405b8df182e6382d98da9754a10c
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Nov 30 23:01:27 2022 +0100

    bp: Properly document keepalive and other tcp options
    
    https://github.com/elastic/elasticsearch/commit/a55c869aab37b7d29e8c40de263b407bc0326899

commit 8e7cfd7c4a05fc27de8ce71af9165b98c986d883
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Mon Nov 21 16:51:21 2022 -0500

    Add dollar quoted string support

commit 116ebb8d171c3abd4f9ac214ebdad83772ca4183
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Mon Nov 21 13:35:34 2022 -0500

    Split SqlBase.g4 into lexer/parser grammars in order to support lexer modes
    
    Need lexer mode support to enable dollar quoted strings:
    error(120): SqlBase.g4: lexical modes are only allowed in lexer grammars

commit fa8fd6f23871803fe60d4257fffb2bf9c2e33e5f
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Wed Nov 23 18:45:47 2022 -0500

    Fix for ineffective updates of number_of_replicas on partitioned tables

commit 8e68f8665593140cd5d21cbb3d297848ec8a2051
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Wed Nov 30 18:52:28 2022 +0100

    Chore: Update `3RD-PARTY-NOTICES.md`
    
    Just a regular incantation of `./gradlew generateLicenseNotes`.

commit 40e09cdf69b1d07b7cadd5cd0655c3faf7cec9db
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Nov 30 16:24:53 2022 +0100

    bp: [DOCS] Fix typo in adapt auto expand replica comments
    
    https://github.com/elastic/elasticsearch/commit/cb4c21fa7bdb7a99cba1bdc23413251283052fe3

commit 66e70b0c6b722059c63389dd109188cbd4301dc1
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Nov 30 14:30:42 2022 +0100

    bp: Remove node-level canAllocate override
    
    https://github.com/elastic/elasticsearch/commit/bf7e53a91e1af08e36f752998baa21b0cbb37b49

commit f47d041483dd7799cbe7f80b5d73b2334149ffce
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Nov 28 12:01:10 2022 +0100

    Fix wrong table swap in NestedLoop Join on a single node
    
    Follow-up for https://github.com/crate/crate/commit/27201a99bd320a831adf670dc44227c9c2967ca1
    This prevents a wrong table swap when table stats are unavailable and a block nested loop join
    is possible because of a single node setup.

commit dbba808d65656e642e38a395d4d9a79ba1bb5daf
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Nov 30 10:58:51 2022 +0100

    bp: Formalize and Streamline Buffer Sizes used by Repositories
    
    https://github.com/elastic/elasticsearch/commit/ebb6677815861764c31fd3a24824799e82d75158
    
    Also added back 'copy' method which was removed in https://github.com/crate/crate/commit/b886346df32abe617fe917d43e7e2b2339fe400e

commit d909f9cac68737d39eb7d613981c85f47320670f
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Nov 30 10:09:01 2022 +0100

    Remove unused endCompletedSnapshots method from SnapshotsService
    
    Follow up to https://github.com/crate/crate/commit/df3cc389244d4c475301a95f787c8cc8d5bd930b

commit 47c9d4609e47036fe02a53aeb421395da598069d
Author: baur <baurzhansahariev@gmail.com>
Date:   Mon Nov 28 14:29:05 2022 +0100

    Skip camel case date format deprecation
    
    Camel case was deprecated in 7 as it's removed in in ES 8 but it's irrelevant for us
    https://github.com/elastic/elasticsearch/commit/19fe3e511fc19a6b33b90f2ef2ba655a4a89521e

commit 9709494cf11513367aa8d42b607363fb4e800c80
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 29 15:14:41 2022 +0100

    Make Symbol and DataType accountable
    
    Symbol instances can grow large due to large function trees,
    or due to ObjectType instances with many keys. Not accounting for them
    can cause memory issues.
    
    This adds `Accountable` implementations for both `DataType` and `Symbol`
    to enable us to account for them in some places where we accumulate
    large number of instances for batching

commit 570fbd936a92839e0edbc077124a45ea28437f7c
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Tue Nov 29 14:44:26 2022 +0100

    Update to Admin UI 1.24.0

commit a628cf375a26175fc422d05ceb6f2a19cef3ac70
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 29 11:42:18 2022 +0100

    Integrate SizeEstimator capability into DataType
    
    This is a preparation step to add memory accounting for `Symbol`
    instances.
    
    `Symbol` instances can grow large due to large function trees,
    or due to `ObjectType` instances with many keys. Not accounting for them
    can cause memory issues.
    
    But to add accounting for `Literal` we'll need to account the values.
    Adding the capability to `DataType` will avoid having to create ad-hoc
    instances of `SizeEstimator`

commit c6af41364b78271b02f93a44654fb1b5131bf55c
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Nov 25 16:14:42 2022 +0100

    remove 'routing' prefix from the 'allocation.max_retries' in docs

commit b8fcbdf9f2f5f4e0deb598e5d081e026195550cb
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Nov 25 16:12:22 2022 +0100

    Group settings should not be filtered out on ALTER TABLE SET applied on a partitioned table

commit b012599d72c225226afc93d08f1e25555b66ca32
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Nov 28 11:51:58 2022 +0200

    bp: Stop Checking if Segment Data Blob Exists before Write
    
    With uuid named segment data blobs there is no reason to ensure no overwrites are happening
    for these blobs when writing. On the contrary, at least on Azure this check can conflict with
    the SDK's retrying and cause upload failures randomly.
    
    https://github.com/elastic/elasticsearch/commit/e37bfe8a5f0bbbcd0a1eafc774cc4f6118c69679

commit 792813cf413fbfe3e5e37e7d663e90b2414bc805
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Nov 28 11:47:02 2022 +0200

    bp: Simplify CheckSumBlobStoreFormat and make it more Reusable
    
    Refactored `CheckSumBlobStoreFormat` so it can more easily be reused in
    other functionality (i.e. upcoming repair logic).
    Simplified away constant `failIfAlreadyExists` parameter and removed the atomic
    write method and its tests.
    The atomic write method was only used in a single spot and that spot has now been adjusted to
    work the same way writing root level metadata works.
    
    https://github.com/elastic/elasticsearch/commit/cefaa17c52c42c3db154d7b10e714a9d2b75cfae

commit 2c06a1f264aeea5c5103f67dc8c631588e3272a1
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Nov 28 11:09:06 2022 +0200

    bp: Cleanup and Optimize Multiple Serialization Spots
    
    Use some of the new infrastructure and making similar cleanups
    (and due to at times better handling of size hints and empty
    collections also optimizations in the stream utility methods
    this also means speedups) in various spots in the core codebase.
    
    https://github.com/elastic/elasticsearch/commit/5b92596fad5eed23055ea3a56b3b97b8605c9a77

commit 67594c8212aace1d269af0fc3e51f847ec4a4442
Author: baur <baurzhansahariev@gmail.com>
Date:   Thu Nov 24 17:09:47 2022 +0100

    bp: Shortcut mapping update if the incoming mapping version is the same as the current mapping version
    
    https://github.com/elastic/elasticsearch/commit/65f6fb8e94fdff217dcbc59cb1ae68c4c6c40f8c

commit 27201a99bd320a831adf670dc44227c9c2967ca1
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Nov 23 13:18:04 2022 +0100

    Fix inefficient table swap in joins when expected rows are unavailable.
    
    When table stats are unavailable, expected rows = -1. This can lead to
    wrong optimizations when used in joins. The tables will be switched
    based on the number of expected rows and -1 may lead to the wrong table swap.

commit e3ad19a9f7c111da0c11e135f78a2730cb61dc69
Author: baur <baurzhansahariev@gmail.com>
Date:   Thu Nov 24 09:55:58 2022 +0100

    Skip FieldMapper related patches
    
    Skipped commits:
    https://github.com/elastic/elasticsearch/commit/2b70758a05212774737b40942f732b306ce66db9
    https://github.com/elastic/elasticsearch/commit/27067de69911f32ef29b4f084e6559f149235361
    https://github.com/elastic/elasticsearch/commit/343053c0a7fd35b8f30f020e8c92667c30c2811c
    https://github.com/elastic/elasticsearch/commit/8647872a1e5a406b15bb9f5d57a51daf97d50df8
    https://github.com/elastic/elasticsearch/commit/a0ad1a196b2749842816df254a952b4cbac954d5
    https://github.com/elastic/elasticsearch/commit/c7bfb5de41b7f3d9c3cf56791240332e8afa995a
    https://github.com/elastic/elasticsearch/commit/8ac81a3447d0292b5546bba3cf6016ed4ea2374c - IndexFieldData was removed in https://github.com/crate/crate/pull/10027
    https://github.com/elastic/elasticsearch/commit/2cde43b799df195dbec1528a54f6cba705b4675d - SortedNumericIndexFieldData (former SortedNumericDVIndexFieldData) was removed in https://github.com/crate/crate/pull/10027/
    https://github.com/elastic/elasticsearch/commit/b3ae5d26bd19870fad67269bc8ffd017dee6570c
    https://github.com/elastic/elasticsearch/commit/9f6f66f1567047ffced990f525b288fa44779b71

commit 7468dd9d85deb27989dedbb56001860ccd49861b
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Nov 23 16:06:52 2022 +0100

    bp: Cleanup some Serialization Code around Snapshots
    
    https://github.com/elastic/elasticsearch/commit/cc7093645ccad4af6ffacff2df8a7c5a70a9ad7a

commit b977036bd21a9087352a20d5fc5588ef52471b38
Author: baur <baurzhansahariev@gmail.com>
Date:   Tue Nov 22 12:21:58 2022 +0100

    bp: Default gateway.auto_import_dangling_indices to false
    
    https://github.com/elastic/elasticsearch/commit/b8d73a1e7ee86ea14277d064a84915577f2a92ef

commit eb238e2030194c9317a6be3e2993a6b2bbc949b1
Author: baur <baurzhansahariev@gmail.com>
Date:   Tue Nov 22 11:21:06 2022 +0100

    Skip irrelevant backport
    
    https://github.com/elastic/elasticsearch/commit/691759fb1fc3b3cde08b3976e105dabcbb0f7b22 is related to Searchable Snaphots

commit bbe7c7a28f409b35461dcd70051bb230fc065b88
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 23 15:05:48 2022 +0100

    Avoid boxing in ShardDMLExecutor.ROW_COUNT_COLLECTOR
    
    `successRowCount` is an `int` which can be cast to `long`, but due to
    abstractions it went from `int` to `Long` and then to `long`.

commit 9168a67d857b9b947001f08ccfedbb4156bdf980
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 23 14:31:48 2022 +0100

    Replace AbstractRecyclerC with default method on interface

commit 8a6edd5182101df2aa09e8fa0eaeebca5d3ad784
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 22 11:06:28 2022 +0100

    Remove SeqNoFieldMapper; add fields in DocumentParser
    
    See previous commit for context

commit a3666df42d4994b3fe11519a0e9fa32be940b8a0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 22 10:36:46 2022 +0100

    Remove VersionFieldMapper; add version field directly
    
    The fieldType and typeParser functionality from the VersionFieldMapper
    is never used. It's only purpose was to add a version index field to the
    Lucene document getting indexed.
    
    With https://github.com/crate/crate/pull/13280 (related to
    https://github.com/crate/crate/issues/10025, to address
    https://github.com/crate/crate/issues/9810#issuecomment-691120497) it
    looks like we might move to a model where the index-logic is coupled to
    the types, and we won't have a special `_version` type.

commit f9249404e37ee0f709e8ddd7bb8e18ef00257e54
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Nov 23 09:04:45 2022 +0100

    Add comparison-operators.rst to test_docs

commit 5e64d95cd345fb2f59aab72d1be3361489a660bf
Author: baur <baurzhansahariev@gmail.com>
Date:   Tue Nov 22 19:00:13 2022 +0100

    Register bitwise operators without storing all operators

commit 349d4be3d0a7fc09d859103cb42c21a639cfc9a2
Author: baur <baurzhansahariev@gmail.com>
Date:   Tue Nov 22 15:15:10 2022 +0100

    Add bit-operators.rst to test_docs and add bit string example

commit f9f7d43793b679ea84a41ca3ca69135e362c4300
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Tue Nov 22 08:42:21 2022 -0500

    clean up FileReadingIteratorTest

commit 1ba08ded41f2686bd85932a4173a67ac8317b0be
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Mon Nov 7 11:32:31 2022 -0500

    Allow COPY FROM to skip lines

commit ff2c97cbbcdf42f8ad01d14e8966280c7c4bfa16
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Thu Nov 17 13:04:07 2022 -0500

    Make test_consecutive_retries_will_not_result_in_duplicate_reads deterministic

commit 44e496ee2e8f2b73f8f4d9504ccf232741a4f6e3
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Nov 18 14:39:56 2022 +0100

    Implement bitwise operators &, | and ^ on integral and BIT types

commit d16794fe759c4979899d62808f1e551535c2f65c
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Nov 18 14:14:23 2022 +0100

    Add assertEvaluate signature accepting custom error message

commit f7d77f050873b3427b6320bca99570971a41be84
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Nov 18 14:13:25 2022 +0100

    Allow basename match on BIT type when binding signatures

commit 748ff676bdc77e8278dea4ef972922e790221f52
Author: baur <baurzhansahariev@gmail.com>
Date:   Mon Nov 21 13:48:28 2022 +0100

    Remove unused method from RestoreService
    
    Follow up to https://github.com/crate/crate/commit/76cd1b3c8974ac787bb4d7ba5d1456542aa03cef

commit 6cd332a8a0ce4ec0b557a0b7d58185c634da91d3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 16 17:26:53 2022 +0100

    Replace ParseContext.Document with lucene Document
    
    The previous commits removed all custom extensions, allowing us to go
    back to the upstream Document class

commit 2121da45017f8d625aa27ab6e6ab1b21e541fcce
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 16 17:12:42 2022 +0100

    Remove parent from ParseContext.Document
    
    Not used

commit b10687c6a698ba25bbf9f9381dbdc578c31fab0a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 16 17:04:50 2022 +0100

    Remove methods only used in tests from ParseContext.Document

commit e8a7b5b586db411f23e0af3cfaf3b96bc2135502
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Mon Nov 14 14:31:10 2022 -0500

    Fix retry logic of COPY FROM to prevent duplicates when SocketTimeout

commit 42db5c468e6dbf22fa213cc59ec37bdd679f9f11
Author: baur <baurzhansahariev@gmail.com>
Date:   Tue Nov 8 10:56:45 2022 +0100

    Implement ADD COLUMN in dedicated request and action

commit 4da12dd7515648067cde053d94a85cf9ef5c97ba
Author: baur <baurzhansahariev@gmail.com>
Date:   Tue Nov 8 12:06:14 2022 +0100

    Create common method to create Reference hierarchy out of flat structure

commit 5cfa9c6ae2d7559f93162f581136f24670cd5eea
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 16 15:38:25 2022 +0100

    Change documents on ParsedDocument/Index to single doc
    
    The `addDoc` methods were never used, there is always only a single
    document added/present.

commit beda2098d8d9b752dfc99b7026274600464b2db9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 16 13:46:14 2022 +0100

    Remove FieldMapper patches from es-backports list
    
    Due to https://github.com/crate/crate/issues/10025 we are not going to apply these

commit 4f3fbda3d6d7980e20b5a402180ca6621e8e1040
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 16 11:31:50 2022 +0100

    Remove `single_type` setting

commit 8001ab76177655f9339363929cd97c86fef2a8a3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 16 11:24:06 2022 +0100

    Remove unused/undocumented DEFAULT_FIELD_SETTING

commit 436c1d3af9c44d7abcd33b23a172d39f742080c1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 16 11:11:36 2022 +0100

    Remove ALLOW_UNMAPPED setting
    
    Not exposed or documented

commit 518bc3e8c53e82a56d5521e0ac83c76784f35770
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 16 10:42:53 2022 +0100

    Set `--enable-preview` in jvmArgs
    
    See https://github.com/elastic/elasticsearch/issues/90526 for context

commit 0042a3b1ebf797f7a415a55fdec0fc7a71c6b4dd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 15 17:08:02 2022 +0100

    Remove support for -d and -p in bin/crate

commit 514e893b4d609edf4458ba559e93249c5b78b07c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 15 16:43:53 2022 +0100

    Inline crate.in.sh into bin/crate; Remove CRATE_INCLUDE support
    
    The advice in the bin/crate script related to `CRATE_INCLUDE` was
    outdated. Our documentation doesn't mention this approach

commit 169b2ef2ce0620291e31eb048d9ed6f1ef15cf41
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 15 16:39:12 2022 +0100

    Remove legacy -Des. detection from bin/crate

commit b4775447d95d4ec47bf3ff2568ad31a1eafb894f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 15 16:20:36 2022 +0100

    Fix shellcheck warnings in bin/crate and crate.in.sh
    
    Doesn't fix all yet, but a bunch of them:
    
    - https://www.shellcheck.net/wiki/SC2268
    - https://www.shellcheck.net/wiki/SC2233
    - https://www.shellcheck.net/wiki/SC2006
    - https://www.shellcheck.net/wiki/SC1090

commit cb7532d1cb89a50713ff003ec74b4464f3e9817d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 16 10:29:57 2022 +0100

    Expose require, include, exclude routing.allocation for partitions
    
    Closes https://github.com/crate/crate/issues/13267

commit 9ff831d4d4a06a9157f6a34d984d35736df49f11
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 15 15:30:15 2022 +0100

    Fix NPE in IsNullPredicate.refExistsQuery
    
    Failed on CI with:
    
        java.lang.NullPointerException: Cannot invoke "io.crate.metadata.Reference.column()" because "ref" is null
            at __randomizedtesting.SeedInfo.seed([7D3270BB542E42BF:D74A6C7F027CB2F6]:0)
            at io.crate.expression.predicate.IsNullPredicate.refExistsQuery(IsNullPredicate.java:132)
            at io.crate.expression.predicate.IsNullPredicate.refExistsQuery(IsNullPredicate.java:167)
            at io.crate.expression.predicate.NotPredicate.toQuery(NotPredicate.java:197)
            at io.crate.lucene.LuceneQueryBuilder$Visitor.visitFunction(LuceneQueryBuilder.java:245)
            at io.crate.lucene.LuceneQueryBuilder$Visitor.visitFunction(LuceneQueryBuilder.java:231)
            at io.crate.expression.symbol.Function.accept(Function.java:185)
            at io.crate.lucene.LuceneQueryBuilder.convert(LuceneQueryBuilder.java:121)
            at io.crate.execution.engine.collect.count.InternalCountOperation.syncCount(InternalCountOperation.java:154)
            at io.crate.execution.engine.collect.count.InternalCountOperation.lambda$prepareGetCount$2(InternalCountOperation.java:137)
            at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
            at java.lang.Thread.run(Thread.java:1589)
    
    Couldn't reproduce the failure locally, but `DocTableInfo` instances are
    cached until there is a clusterState change event, so it's likely caused
    by a race condition. Added a unit test to cover the scenario

commit 1242400cfe07d656b21fdaceb49a41558029367a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 14 15:44:11 2022 +0100

    bp: Enable Fully Concurrent Snapshot Operations
    
    https://github.com/elastic/elasticsearch/commit/2dd086445c3025aaccda01fbd39f48e9852876a6
    
    Also includes some changes from patches we had skipped like
    
    - https://github.com/elastic/elasticsearch/commit/2886d4c6ddb44ab29b51f9145358121a95f7a1fd

commit 3ad6fc7b7e2550e0f71b1f5f6013a8751bdae068
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 15 10:43:55 2022 +0100

    bp: Make loadShardSnapshot Exceptions Consistent
    
    https://github.com/elastic/elasticsearch/commit/96b36b5a8ce03ad40b4be2e1780cfdb1b1d17705

commit e0559953a0a1624c431ecc74428ef63670be637b
Author: hlcianfagna <110453267+hlcianfagna@users.noreply.github.com>
Date:   Mon Nov 14 11:46:45 2022 +0000

    Clarify that shard allocations settings are not mutually exclusive

commit 44dea5377125a72e4658c251f950878d41e1237b
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Nov 11 12:28:48 2022 +0100

    Evaluate generated expressions on columns of type ``GEO_SHAPE`` on writes

commit 8557fbad676a9ac3e0514399dcdf6722012725f8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 14 16:17:43 2022 +0100

    bp: Remove Unused Snapshot Status Values
    
    https://github.com/elastic/elasticsearch/commit/37abc411dc2a46b871cc8d5a6d6bb192ce44104a

commit 3cfa9e1765b03e35ca55c9a90e08a100fadfe0e9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 14 16:15:38 2022 +0100

    bp: Remove Dead Code Around Snapshots
    
    https://github.com/elastic/elasticsearch/commit/0dd06cf7a574b23490b771190d4fe512b362fada

commit 5479f984ba485af0830c6fa9ab5dc3f9d2826437
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 14 14:36:08 2022 +0100

    Delete unused methods from SnapshotsService
    
    The methods are unused and in ES 06d94cbb2ac (last patch we applied) the
    methods also don't exist.

commit 4d01f86f8d9d0ae6443516f076ef037edd29dd05
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Nov 11 17:15:51 2022 +0200

    bp: Fix TODO about Spurious FAILED Snapshots
    
    There is no point in writing out snapshots that contain no data that can be restored
    whatsoever. It may have made sense to do so in the past when there was an `INIT` snapshot
    step that wrote data to the repository that would've other become unreferenced, but in the
    current day state machine without the `INIT` step there is no point in doing so.
    
    https://github.com/elastic/elasticsearch/commit/06d94cbb2ac3a6f2aa605c91ea2ad9996c983284

commit 3abb19d16cedb368e4b8cd1616e063e6234c03e3
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Nov 11 17:00:09 2022 +0200

    bp: Simplify Repository.finalizeSnapshot Signature
    
    Many of the parameters we pass into this method were only used to
    build the `SnapshotInfo` instance to write.
    This change simplifies the signature. Also, it seems less error prone to build
    `SnapshotInfo` in `SnapshotsService` isntead of relying on the fact that each repository
    implementation will build the correct `SnapshotInfo`.
    
    https://github.com/elastic/elasticsearch/commit/e1014038e907829d6c3d80394210ef7411b080a1

commit 5e96e3998dc758f75c177d18cca3819d5e45fab6
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Nov 11 16:39:04 2022 +0200

    bp: Simplify SnapshotsInProgress Construction
    
    With parallel snapshots incoming (but also in isolation) it makes sense to clean up
    `SnapshotsInProgress` construction.
    We don't need to pre-compute the waiting shards for every entry. We rarely use this information
    (only on routing changes) and in the one spot we did we now simply spent the extra cycles for looping
    over all shards instead of just the waiting ones once per routing change tops instead of on every change
    to `SnapshotsInProgress` (moreover, we would burn the cycles for looping on all nodes even though only the
    current master cares about the information).
    In addition to that change I removed some dead code constructors and slighly optimized deserialization.
    
    https://github.com/elastic/elasticsearch/commit/16a47e0d0890d6071134255101b11eca5bf2be0d

commit 009ffb40fbfda984cb62542f5cccb08952b03a24
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 14 10:25:58 2022 +0100

    Update netty to 4.1.85
    
    https://netty.io/news/2022/11/09/4-1-85-Final.html

commit 072fc6f10c175f2bada5fcb0838d1c74aa34895d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 9 10:51:19 2022 +0100

    Broadcast cancel to other nodes if there is no local match
    
    To support setups with load-balancers. Otherwise `cancel` only has an
    effect if it happens to reach the correct node, which has a `1 /
    <num_nodes>` chance if using a load-balancer with round-robin.

commit aa19d65d2ea2df5b26d653b24f4c253fea02a436
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Nov 11 14:09:12 2022 +0200

    Reflect release 5.1.1 - remove fixes from unreleased
    
    Follows: a912ba8d620f66db5d6749a74303a25ddf8ec04b

commit e7286e68a1a11d24581b9713f00bdc7e00c6cae5
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Nov 9 16:21:35 2022 +0100

    bp: Minor Cleanup Dead Code Snapshotting
    
    * Use consistent cluster state instead in state update
    * Remove dead loop in tests
    * Remove some dead exception ctors
    
    Just three trivial/random things I found.
    
    https://github.com/elastic/elasticsearch/commit/68a199f75fe

commit 900a40d947df38454096de8948b6f6a607f071b1
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Nov 7 16:54:45 2022 +0100

    bp: Deduplicate Index Metadata in BlobStore
    
    This PR introduces two new fields in to `RepositoryData` (index-N) to track the blob name of `IndexMetaData` blobs and their content via setting generations and uuids. This is used to deduplicate the `IndexMetaData` blobs (`meta-{uuid}.dat` in the indices folders under `/indices` so that new metadata for an index is only written to the repository during a snapshot if that same metadata can't be found in another snapshot.
    This saves one write per index in the common case of unchanged metadata thus saving cost and making snapshot finalization drastically faster if many indices are being snapshotted at the same time.
    
    https://github.com/elastic/elasticsearch/commit/d456f7870a7

commit 718382290aa073d3f71eea5c40b36400750dee9f
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Nov 2 17:07:14 2022 +0100

    bp: Add Assertions on CS Application in Snapshot Logic
    
    Relates to #58680. Bugs like that should not only show up in logs
    but ideally also get caught in tests. We expect to never see exceptions
    in these two spots.
    
    https://github.com/elastic/elasticsearch/commit/0e3d87ab54b

commit 616a16910e461b5211651a3f072cb347f91880be
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Nov 2 16:24:46 2022 +0100

    bp: Improve Efficiency of SnapshotsService CS Apply
    
    This change removes the redundant submitting of two separate cluster state updates
    for the node configuration changes and routing changes that affect snapshots.
    Since we submitted the task to deal with node configuration changes every time on master
    fail-over we could also move the BwC cleanup loop that removes `INIT` state snapshots as well
    as snapshots that have all their shards completed into this cluster state update task.
    
    Aside from improving efficiency overall this change has the fortunate side effect of moving
    all snapshot finalization to the CS update thread. This is helpful for concurrent snapshots
    since it makes it very natural and straight forward to order snapshot finalizations by exploiting
    that they are all initiated on the same thread.
    
    https://github.com/elastic/elasticsearch/commit/81e96954d01

commit 6f9e6a4703920aacf6f52d1c7a28a911e9c08674
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Nov 9 16:41:23 2022 +0100

    Skip datastream backports

commit a95ad824894fcfd97972c2e403bc999eaa4f9619
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Nov 9 17:13:15 2022 +0100

    Skip backports

commit a912ba8d620f66db5d6749a74303a25ddf8ec04b
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Nov 9 15:52:37 2022 +0200

    Reflect release 5.1.1

commit 0dee5dd76f6067983c67ba3aab97e8ca3bc0326c
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Nov 8 17:35:50 2022 +0200

    Fix `./gradlew :app:run` and `./gradlew :app:runDebug`
    
    Replace the old `es.path.home` with cmd line `-Cpath.home`.
    Moreover, fix the `keystore` and `repo` paths in `crate.yml` to be
    relative to `${PROJECT_DIR}/app`, the working dir when running
    `./gradlew :app:run`, and adjust the `crate` debuging configuration
    in IntelliJ to use the same working path.

commit 369a39efbe92f5817970decdb37eb6e217fc1ec8
Author: baur <baurzhansahariev@gmail.com>
Date:   Tue Nov 8 16:23:35 2022 +0100

    Add "x86_64" arch for mac

commit 91af4d49464d6ce277c7c7b3172db9c77a0fb7b2
Author: baur <baurzhansahariev@gmail.com>
Date:   Tue Nov 8 13:20:23 2022 +0100

    SHOW CREATE TABLE must not ignore NOT NULL on GEO_SHAPE columns

commit e46ac831676a16b158362622e00bc2e46b22ebb6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 8 14:38:25 2022 +0100

    Support parenthesis surrounding query of CREATE VIEW
    
    Closes https://github.com/crate/crate/issues/13237

commit 20d4763fc9ae15b8307423fd8c5b60962c0d42a5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 8 14:22:59 2022 +0100

    Fix terms query generation for `_id` column
    
    Fixes a regression introduced in 4.7.0 with https://github.com/crate/crate/pull/11814
    In some cases this error does't surface because `IN ('literal-value',
    ...)` gets optimized to `Get` or `*ById` query plans. There are cases
    where this optimization doesn't work.
    
    This fixes https://github.com/crate/crate/issues/13217
    
    (Alternative solution is to extend the `EqualityExtractor` to extract
    doc-keys for `IN (sub-query)`, but that's more work and we need to fix
    the query generation anyways. We must not depend on optimizations for
    correct semantics)

commit a8604bf19b7dee721f95d7cd889a57b36b1e03d6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 8 10:17:32 2022 +0100

    Fix String/BytesRef cast in OptimizeQueryForSearchAfter
    
    For strings the `FieldDoc` contains `BytesRef` values. The `StringType`
    query builder only accepted `String` values, leading to a class cast
    exception.
    
    Fixes https://github.com/crate/crate/issues/13166

commit babf6dbbf14c805813152f99e2b52304365f571f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 7 11:18:23 2022 +0100

    Change function resolve order to check built-in and udfs per schema in search path
    
    So far function resolving iterated over the search path looking for
    built-ins in a first step, and only if this search ended up empty did it
    look for UDFs.
    
    This changes the logic to look for built-in and UDF _per_ schema in the
    search path.
    
    Consider the setup:
    
      Built-in Functions:
        pg_catalog.version()
    
      UDFs:
        public.version()
    
      search_path: [public, pg_catalog]
    
    With the old logic it looked for built-in functions in public and then
    pg_catalog and returned `pg_catalog.version()`
    
    With the new logic it looks for built-in functions in public, then for
    UDFs in public and returns `public.version()`.

commit 7d520e3cbd60489b0e05f7e33df34c782c3fda0d
Author: Niklas Schmidtmer <niklas@crate.io>
Date:   Mon Nov 7 14:35:00 2022 +0100

    Remove mentions of the removed Azure discovery plugin

commit e3eec7a37c1c82b49c0da3a639c9bbc761e8b470
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 7 10:18:07 2022 +0100

    Use object's innerType information in SourceParser
    
    Fixes an issue where the base64 value was returned for `bit` columns
    instead of the decoded value.
    
    `test_types_with_storage_can_be_inserted_and_queried` failed with seed
    94CCBEDEC5990238:B1D243A21BC27086

commit 36356a0414414f1e791c2d7d9ee9c9c63829c9f8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 7 11:32:35 2022 +0100

    Add example to debug the installDist variant to dev docs
    
    Useful for debugging the full distribution which includes all the
    plugins and extensions.

commit 4d7e0209cf3bd46f8452bb482374eb403293c81c
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Sun Nov 6 22:28:36 2022 +0100

    Documentation: Fix anchors at new section about "Nested arrays"

commit bae23f9a17a40549a6eec5d21d5da386ca632fe8
Author: hlcianfagna <110453267+hlcianfagna@users.noreply.github.com>
Date:   Wed Nov 2 17:02:37 2022 +0000

    Explain how to use nested arrays
    
    Co-Authored-By: Marios Trivyzas <5058131+matriv@users.noreply.github.com>

commit 94b4aca48c2acb635fe4a9ec237be3a6938fec8c
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Nov 3 13:55:49 2022 +0200

    Add ability to download bundled Mac aarch64 jdk
    
    Ease development without the need of `-DuseSystemJdk` for Mac aarch64
    (M1/M2) developer machines.

commit d90344cc5ae5129542caca30c189121b5b35ff4a
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Nov 2 16:12:15 2022 +0200

    Minor code improvements

commit d6f65a35b3a7548aa0d101af4ab8d6b21ec95626
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Nov 2 16:04:59 2022 +0200

    Fix wrong ordering of results for `array(subquery)`
    
    Previously, when using the `array(subquery)` expression and the subquery
    was ordering by the return column but in `DESC` order, or ordering by a
    different column than the one returned, incorrect results where
    returned, i.e.:
    ```
    SELECT array(SELECT country FROM sys.summits ORDER BY country DESC LIMIT 5)
    ```
    or
    ```
    SELECT array(SELECT country FROM sys.summits ORDER BY height LIMIT 5)
    ```
    
    There is an optimisation that replaces the `ORDER BY` of the subquery
    which should only be applied when the subquery is part of an `IN/ANY`
    operator, i.e.
    ```
    SELECT * FROM t1 WHERE t1.a IN (SELECT a FROM t2 ORDER BY c DESC)
    ```
    
    Introduce a boolean flag in the `ExpressionAnalysisContext` which is
    passed to the `SelectSymbol` and can be used by `LogicalPlanner` to
    decided if the optimisation can be applied or not.
    
    Fixes: #13197

commit 2a20f074b88dc66048d33d44ec2166e3a9ab5ad3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 2 14:00:12 2022 +0100

    Avoid dynamic mapping update in `test_types_with_storage_can_be_inserted_and_queried`
    
    The `bit` type currently can't be created using dynamic mapping updates
    Should fix flakyness.

commit 4f2990c588f5aaf61113005e54d29319ffd53af6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 2 16:20:06 2022 +0100

    Fix name of BitStringFieldMapper to avoid clash in objects

commit 1f002f65d493efcebffe74b4ccbdf27ce4d7c6cc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 31 10:25:43 2022 +0100

    Update bundled JDK to 19.0.1+10

commit c0910b5293f4ddfdad2cca1cacbb0329f8934176
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 2 10:49:50 2022 +0100

    Add ramAccounting to percentile agg / fix out-of-memory errors
    
    Closes https://github.com/crate/crate/issues/13198

commit b257aa476a8853fd2364e7619ccd2ee96d88b47a
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Oct 31 17:01:32 2022 +0100

    bp: Remove Needless Context Switches on Loading RepositoryData
    
    We don't need to switch to the generic or snapshot pool for loading
    cached repository data (i.e. most of the time in normal operation).
    
    This makes `executeConsistentStateUpdate` less heavy if it has to retry
    and lowers the chance of having to retry in the first place.
    Also, this change allowed simplifying a few other spots in the codebase
    where we would fork off to another pool just to load repository data.
    
    https://github.com/elastic/elasticsearch/commit/64c5f70a2d4

commit bbbea47586315ab47d7c17ece528bb7423fbf320
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Oct 31 13:42:37 2022 +0100

    bp: Remove Needless Context Switch From Snapshot Finalization
    
    No need to do any switch to the `SNAPSHOT` pool here, the blob store
    repo handles all its writes async on the `SNAPSHOT` pool so we're just
    needlessly context-switching to enqueue those tasks there.
    Also cleaned up the source only repository (the only override to `finalizeSnapshot`)
    to make it clear that no IO is happening there and we don't need to run it on the
    `SNAPSHOT` pool either.
    
    https://github.com/elastic/elasticsearch/commit/bde92fc5fcc

commit f82ef2b0ff748d5139a820e1af92cb0abb8719f8
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Oct 31 11:46:10 2022 +0100

    bp: More Efficient Snapshot State Handling
    
    Follow up to #56365. Instead of redundantly checking snapshots for completion
    over and over, just track the completed snapshots in the CS updates that complete
    them instead of looping over the smae snapshot entries over and over.
    Also, in the batched snapshot shard status updates, only check for completion
    of a snapshot entry if it isn't already finalizing.
    
    https://github.com/elastic/elasticsearch/commit/31be3a36452

commit 27295b359ed727a5a67419590b6c163c2a9d3667
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Oct 31 11:29:31 2022 +0100

    bp: Remove Dead Code from Closed Index Snapshot Logic
    
    The code path for closed indices is dead code here ever since #39644
    because `shards(currentState, indexIds, ...)` does not set
    `MISSING` on a closed index's shard that is assigned any longer. Before that change it would always set `MISSING` for a closed index's shard even it was assigned.
    => simplified the code accordingly.
    
    https://github.com/elastic/elasticsearch/commit/4e574a7136c

commit df3cc389244d4c475301a95f787c8cc8d5bd930b
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Oct 27 15:32:06 2022 +0200

    bp: Remove Snapshot INIT Step
    
    With #55773 the snapshot INIT state step has become obsolete. We can set up the snapshot directly in one single step to simplify the state machine.
    
    This is a big help for building concurrent snapshots because it allows us to establish a deterministic order of operations between snapshot create and delete operations since all of their entries now contain a repository generation. With this change simple queuing up of snapshot operations can and will be added in a follow-up.
    
    The fallback to `createSnapshotLegacy` is skipped and the legacy code
    path is removed. Therefore snapshots of mixed clusters will not be supported.
    
    https://github.com/elastic/elasticsearch/commit/08b54feaaf2991b49f938413de0b5734c8c4caaf

commit 87d07383d99fa318de756d9b1e5ecec7c04b2204
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Oct 27 14:32:02 2022 +0200

    bp: Move all Snapshot Master Node Steps to SnapshotsService
    
    This refactoring has three motivations:
    
    1. Separate all master node steps during snapshot operations from all data node steps in code.
    2. Set up next steps in concurrent repository operations and general improvements by centralizing tracking of each shard's state in the repository in `SnapshotsService` so that operations for each shard can be linearized efficiently (i.e. without having to inspect the full snapshot state for all shards on every cluster state update, allowing us to track more in memory and only fall back to inspecting the full CS on master failover like we do in the snapshot shards service).
        * This PR already contains some best effort examples of this, but obviously this could be way improved upon still (just did not want to do it in this PR for complexity reasons)
    3. Make the `SnapshotsService` less expensive on the CS thread for large snapshots
    
    https://github.com/elastic/elasticsearch/commit/483386136d97823f48321d2b122b564aa4d0b3b6

commit 91f37cbbefc58f62a5599b96571f353cc0d3bc81
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Oct 26 15:26:42 2022 +0200

    bp: Do not release safe commit with CancellableThreads
    
    We are leaking a FileChannel in #39585 if we release a safe commit with
    CancellableThreads. Although it is a bug in Lucene where we do not close
    a FileChannel if we failed to create a NIOFSIndexInput, I think it's
    safer if we release a safe commit using the generic thread pool instead.
    
    https://github.com/elastic/elasticsearch/commit/6a0f7411e25

commit ef2406e79b17d2a93f302c89b0ab3e1194f8d924
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Nov 1 16:15:00 2022 +0200

    tests: minor typo fix

commit 952bcec317e3a74a7f2434603f63ce672291598e
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Nov 1 16:13:31 2022 +0200

    Add `attributes` column to `sys.nodes` table
    
    Expose custom attirbutes set to nodes via `node.attr.*` settings
    in `sys.nodes` table.
    
    Closes: #11800

commit 3e241162789f7d236588f1cf21c301be23e5b3f1
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Nov 1 16:06:40 2022 +0200

    docs: Fix NOTE entry in `SHOW` statement

commit d94eb91633ee10a2dd93f7e91cef5246d9034ecb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 31 15:57:53 2022 +0100

    Fix handling of BitString in undefined type serialization
    
    Changes in https://github.com/crate/crate/pull/13181 to include the
    ``bit`` type in more random tests made the `TransportSQLActionTest`
    flaky, failing with errors like:
    
        org.opentest4j.AssertionFailedError: [All incoming requests on node [node_sd5] should have finished]
        expected: 0L
         but was: 16440L
    
    The root cause was a bug causing a streaming error:
    
        Cause 1: java.io.IOException: can not write type [class io.crate.sql.tree.BitString]
                at org.elasticsearch.common.io.stream.StreamOutput.writeGenericValue(StreamOutput.java:742)
                at io.crate.types.UndefinedType.writeValueTo(UndefinedType.java:85)
                at io.crate.types.ObjectType.writeValueTo(ObjectType.java:275)
                at io.crate.types.ObjectType.writeValueTo(ObjectType.java:59)
                at io.crate.execution.dml.upsert.ShardUpsertRequest$Item.writeTo(ShardUpsertRequest.java:434)
                at io.crate.execution.dml.upsert.ShardUpsertRequest.writeTo(ShardUpsertRequest.java:179)

commit 0cef243dcd8e36c0ec409ed60e1e48a1b5375dc4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 31 16:27:17 2022 +0100

    Replace `indices.breaker.fielddata.limit` ref in 4.3 release notes
    
    With 5.1 being stable the reference is no longer working.

commit e7732ea1bd32cc4559727625210725c9a97fed99
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 31 11:48:11 2022 +0100

    Remove IndexCache
    
    The abstraction doesn't seem to add anything useful. We can use the
    `QueryCache` class directly instead.

commit eeee979470f9687516de70ee430e67fe9d6e1dd6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 31 10:49:17 2022 +0100

    Add some more unit tests for cursors
    
    Tests some aspects that don't have coverage so far

commit ee864175ac57e3d72330208e9411360ffd71f914
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 31 10:57:24 2022 +0100

    bp: Fix node health-check-related test failures
    
    https://github.com/elastic/elasticsearch/commit/d56fc72ee5bcfe6002a85a2370112703df8a19fb

commit 04caceac8b4b6f2db3bf1c2a65810d0650c61282
Author: baur <baurzhansahariev@gmail.com>
Date:   Thu Oct 27 20:49:59 2022 +0200

    Fix source decoding of bit string values, add additional base64 decode step
    
    Follow up to https://github.com/crate/crate/commit/25a7c2a1faeca9d22a8d4834f4e6b4e1c82839bf

commit a536325c8908615d31db4bd46119d7af2d9ccf55
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 31 10:19:50 2022 +0100

    Update GraalVM to 22.3.0
    
    https://www.graalvm.org/release-notes/22_3/

commit cbedfd538374df441ad675667a9887d4f67d6f8a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 25 15:33:45 2022 +0200

    Re-implement TestingRowConsumer and BatchIterators.collect via .move

commit ee103a684cfe5bb807715cd420a6ef6e2c6617b1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 24 17:04:39 2022 +0200

    Add SCROLL support for cursors
    
    This is a initial naive implementation which buffers rows while moving
    forward.
    
    We can later on consider extending APIs to make it possibile to re-use
    existing buffers. E.g. in a setup with multiple nodes the handler node
    will likely already have some sort of result buffer available that could
    be used.

commit e1154c887ac135eb67521ffdf9daec190f0e02f2
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Oct 26 16:49:05 2022 +0200

    Remove unused XContent serialization from RecoveryState

commit b7aa5f18fa9c16518bde4f44b43220ab3ea69260
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Oct 26 12:35:09 2022 +0200

    bp: Add Check for Metadata Existence in BlobStoreRepository
    
    In order to ensure that we do not write a broken piece of `RepositoryData`
    because the phyiscal repository generation was moved ahead more than one step
    by erroneous concurrent writing to a repository we must check whether or not
    the current assumed repository generation exists in the repository physically.
    Without this check we run the risk of writing on top of stale cached repository data.
    
    https://github.com/elastic/elasticsearch/commit/9268b257895439d9cc3298bb52945c44ca39d807

commit e34f2dde7e77deede23812c2f94bc9af0e19bfd4
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Oct 26 11:07:00 2022 +0200

    bp: Fix recovery stage transition with sync_id
    
    If the recovery source is on an old node (before 7.2), then the recovery
    target won't have the safe commit after phase1 because the recovery
    source does not send the global checkpoint in the clean_files step. And
    if the recovery fails and retries, then the recovery stage won't
    transition properly. If a sync_id is used in peer recovery, then the
    clean_files step won't be executed to move the stage to TRANSLOG.
    
    https://github.com/elastic/elasticsearch/commit/de6ac6aea6d

commit e49ddc3da662ec004bd5ae09123735993429f6d5
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Oct 26 09:17:05 2022 +0200

    bp: Extract recovery files details to its own class
    
    https://github.com/elastic/elasticsearch/pull/59121

commit 74118c34f110cc9478b3a0f837974da5394fb622
Author: baur <baurzhansahariev@gmail.com>
Date:   Mon Oct 17 23:05:07 2022 +0200

    Fix EqOperator applied to empty arrays on IP, GEO_SHAPE, OBJECT and BIT array element types

commit ca932a87a25e2f0375bd5328276e1197c821e88b
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Oct 24 22:06:20 2022 +0200

    bp: Remove nodes with read-only filesystems
    
    Today we do not allow a node to start if its filesystem is readonly, but
    it is possible for a filesystem to become readonly while the node is
    running. We don't currently have any infrastructure in place to make
    sure that Elasticsearch behaves well if this happens. A node that cannot
    write to disk may be poisonous to the rest of the cluster.
    
    With this commit we periodically verify that nodes' filesystems are
    writable. If a node fails these writability checks then it is removed
    from the cluster and prevented from re-joining until the checks start
    passing again.
    
    https://github.com/elastic/elasticsearch/commit/46c8d00852d3cf614220c678a9c154fd58195d6f

commit 08e4989fe6b071c0a2c7c9ddf4131332b95fbc13
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 25 10:32:36 2022 +0200

    Remove fixed seed from LuceneQueryBuilderIntegrationTest
    
    Looks like I committed that a while ago by accident.

commit 1668d64b4f4732078642490bbca15a92a7793e85
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Oct 18 20:39:15 2022 +0200

    bp: Add voting-only master node
    
    A voting-only master-eligible node is a node that can participate in master elections but will not act
    as a master in the cluster. In particular, a voting-only node can help elect another master-eligible
    node as master, and can serve as a tiebreaker in elections. High availability (HA) clusters require at
    least three master-eligible nodes, so that if one of the three nodes is down, then the remaining two
    can still elect a master amongst them-selves. This only requires one of the two remaining nodes to
    have the capability to act as master, but both need to have voting powers. This means that one of
    the three master-eligible nodes can be made as voting-only. If this voting-only node is a dedicated
    master, a less powerful machine or a smaller heap-size can be chosen for this node. Alternatively, a
    voting-only non-dedicated master node can play the role of the third master-eligible node, which
    allows running an HA cluster with only two dedicated master nodes.
    
    https://github.com/elastic/elasticsearch/commit/e689b20eba8a583c0a3a7783e06b00a97cbdee63

commit 7e731d6994d94ec22f3c6900d80e928b910f417e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 24 15:53:03 2022 +0200

    Don't wrap doc-values in FieldData#toString in BinaryDocValueAggregator
    
    Not required.

commit 8bb5cfb1bd0e3bbf2c942446db590860751228eb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 24 15:01:37 2022 +0200

    Avoid boxing for ReaderContext#visitDocument

commit 03ce3a251181c79029da975e9d5b8933c633020e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 24 15:15:35 2022 +0200

    Fix overflow handling in min_by/max_by DocValueAggregator

commit 8afb3e6215508deb5c2fcaefeedcfc0ff9e6e572
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 24 14:10:50 2022 +0200

    Add missing ram accounting for min/max-by

commit feb87f841d9e52127cea00bf2085198d29757f7d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 24 13:42:36 2022 +0200

    Load result value only once per shard in max/min_by DocValueAggregator
    
    Hard to see an impact due to the variance of the benchmarks:
    
        Q: select max_by("adRevenue", "visitDate") from uservisits
        C: 1
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |       19.828 ±   13.323 |     12.581 |     17.518 |     18.644 |    300.554 |
        |   V2    |       18.360 ±   22.029 |     11.561 |     16.112 |     16.924 |    487.430 |
        ├---------┴-------------------------┴------------┴------------┴------------┴------------┘
        |               -   7.69%                           -   8.36%
        There is a 79.74% probability that the observed difference is not random, and the best estimate of that difference is 7.69%
        The test has no statistical significance
    
        Q: select max_by("adRevenue", "visitDate") from uservisits
        C: 1
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |       18.746 ±   14.955 |     12.793 |     16.865 |     17.641 |    342.607 |
        |   V2    |       18.933 ±   12.959 |     10.186 |     17.097 |     18.319 |    297.440 |
        ├---------┴-------------------------┴------------┴------------┴------------┴------------┘
        |               +   0.99%                           +   1.36%
        There is a 16.70% probability that the observed difference is not random, and the best estimate of that difference is 0.99%
        The test has no statistical significance
    
    Might have a bigger impact if the result column would be a large object.

commit 9598d8b3d49fc4f7bf43f3ea0fd7a4c80ff61d4b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 24 12:23:43 2022 +0200

    Implement DocValueAggregator for max/min-by
    
        Q: select max_by("adRevenue", "visitDate") from uservisits
        C: 1
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |       72.749 ±   17.975 |     42.162 |     70.352 |     74.680 |    439.458 |
        |   V2    |       19.362 ±   21.773 |     10.139 |     17.065 |     17.654 |    416.560 |
        ├---------┴-------------------------┴------------┴------------┴------------┴------------┘
        |               - 115.92%                           - 121.91%
        There is a 100.00% probability that the observed difference is not random, and the best estimate of that difference is 115.92%
        The test has statistical significance
    
        System/JVM Metrics (durations in ms, byte-values in MB)
            |    YOUNG GC            |       OLD GC           |      HEAP         |     ALLOC
            |  cnt      avg      max |  cnt      avg      max |  initial     used |     rate      total
         V1 |   78     1.53     1.82 |   16    20.49    19.15 |     2147       86 |  2656.72      95913
         V2 |    0     0.00     0.00 |    0     0.00     0.00 |     2147        0 |  1992.46      19504

commit d4506951775131b6e614c27a758479b83f7603d6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 24 10:18:18 2022 +0200

    Fix IllegalIndexShardStateException handling in count operation
    
    Closes https://github.com/crate/crate/issues/13167

commit 83318dfada8c23434ecc24884a8e6f3f379225ff
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Oct 21 15:22:24 2022 +0200

    tests: Fix flaky SysShardsTest.testInsertFromClosedTableNotAllowed
    
    Seems that despite of `waitNoPendingTasksOnAll` the analysis of
    inserting/selecting can go through and when the operation is being
    executed then we get:
    
    ```
    java.lang.AssertionError:
    Expected: an instance of io.crate.exceptions.OperationOnInaccessibleRelationException
         but: <org.elasticsearch.cluster.block.ClusterBlockException: blocked by: [FORBIDDEN/4/Table or partition preparing to close. Reopen the table to allow writes again or retry closing the table to fully close it.];> is a org.elasticsearch.cluster.block.ClusterBlockException
            at __randomizedtesting.SeedInfo.seed([3C9AD9FF92E1548F:DC6DD873E0414FA9]:0)
            at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
            at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
            at io.crate.testing.Asserts.assertThrowsMatches(Asserts.java:276)
            at io.crate.testing.Asserts.assertThrowsMatches(Asserts.java:265)
            at io.crate.integrationtests.SysShardsTest.testInsertFromClosedTableNotAllowed(SysShardsTest.java:464)
            at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
            at java.base/java.lang.reflect.Method.invoke(Method.java:578)
            at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1758)
            at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:946)
            at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:982)
            at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:996)
            at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:61)
            at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:299)
            at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:293)
            at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
            at java.base/java.lang.Thread.run(Thread.java:1589)
    ```

commit 3523509a171d69876afff6ebefe7f28cbb3848d7
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Oct 21 14:16:36 2022 +0200

    tests: Fix flaky `PartitionedTableIntegrationTest`
    
    Try to fix flakiness for operations on closed partitions, by waiting
    for all pending tasks to finish before asserting.

commit 0f17b6b5a3c450fa767a89ec251d88c994270390
Author: hlcianfagna <110453267+hlcianfagna@users.noreply.github.com>
Date:   Thu Oct 20 10:36:49 2022 +0100

    Document the effect of BEGIN END and COMMIT on CURSORs

commit b592beee5c191e5180c8193f6df11ea89523466d
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Oct 18 16:45:43 2022 +0200

    tests: Fix flaky testTransientErrorsDuringRecoveryAreRetried
    
    Previously,
    https://github.com/elastic/elasticsearch/commit/2630c80b5d092292a844c56b7e3ed218ae3b06b7
    was only partially applied.

commit 2b88134d796eb844bf6e1d663a612ec7155f4eae
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 18 16:14:05 2022 +0200

    bp: Handle IOException while checking translog corruption
    
    https://github.com/elastic/elasticsearch/commit/65645217bc43a63013b5e00636a4815ffe42b57a
    
    Should fix flaky `testCorruptTranslogHeader`

commit 61888bcb5e65d7d5d1fbda03ae43d651e55c27a0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 18 13:57:08 2022 +0200

    Update bundled JDK to 19
    
    `InetAddress` can no longer be mocked because it became sealed so tests
    had to be adapted.

commit b43c88e824612b20f926437cfd919c414b81aba7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 18 15:38:32 2022 +0200

    Remove some SecurityManager leftovers
    
    It's deprecated for removal:
    
    https://openjdk.org/jeps/411

commit b213133e442021d8bb701afec6459b472cec9891
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 18 14:17:46 2022 +0200

    Remove MockSinglePrioritizingExecutor
    
    `testPrioritizedEsThreadPoolExecutor` fails with JDK 19:
    
        java.lang.AssertionError
            at __randomizedtesting.SeedInfo.seed([4EE65305FD330C07:9AC2EDC7441C173D]:0)
            at org.elasticsearch.cluster.coordination.DeterministicTaskQueue.runRandomTask(DeterministicTaskQueue.java:124)
            at org.elasticsearch.cluster.coordination.MockSinglePrioritizingExecutorTests.testPrioritizedEsThreadPoolExecutor(MockSinglePrioritizingExecutorTests.java:55)
    
    I suspect it may be related to changes in JDK 19 related to virtual
    threads.
    
    Given that `CoordinatorTests` was annoted with `AwaitsFix` and it is the
    only class using `AbstractCoordinatorTestCase` I went with the nuke
    option and removed all of it.
    
    We can bring it back with a proper fix once we address https://github.com/crate/crate/issues/10811

commit 48d3f1d87d85e0804512face8d9258e70f24c419
Author: baur <baurzhansahariev@gmail.com>
Date:   Tue Oct 18 14:26:40 2022 +0200

    Reflect release 5.0.3

commit 8cd82fa794620a784f7ed3062fa691cf5ac72a44
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 18 11:54:06 2022 +0200

    Apply LUCENE-10151 to CrateLuceneTestCase
    
    https://github.com/apache/lucene/commit/be81cd79346e869da94d9db89e1b863bfaabbd65

commit 01ed3b904e262db4cc73644c6427e2ee1029ce45
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 18 10:24:55 2022 +0200

    Update Lucene to 9.4
    
    https://lucene.apache.org/core/9_4_0/changes/Changes.html

commit 8b327cc3994edbe2920bcf9b6e7dc519f2716f5b
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Oct 17 17:31:07 2022 +0200

    Fix: Allow omitting pk col generated from a col with default
    
    Allow to omit a pk column if it's generated and its sources are
    columns which are non-null and have default values, e.g.:
    
    ```
    CREATE TABLE test (
      id INT NOT NULL PRIMARY KEY,
      created TIMESTAMP WITH TIME ZONE DEFAULT current_timestamp NOT NULL,
      month TIMESTAMP GENERATED ALWAYSE AS date_trunc('month', created) PRIMARY KEY
    );
    
    INSERT INTO test(id) values(1);
    ```

commit c6940a8e1887596b79c74b6c31aa1cf76cef43ae
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Oct 18 09:50:25 2022 +0200

    tests: Fix flaky `SysShardsTest.testSelectFromClosedTableNotAllowed`
    
    Wait for table to be closed (wait for no pending tasks) before
    attempting to insert and assert the exception.
    
    example failure:
    ```
    java.lang.AssertionError:
    Expected: an instance of io.crate.exceptions.OperationOnInaccessibleRelationException
         but: <java.lang.AssertionError: Expected exception to be thrown, but nothing was thrown.> is a java.lang.AssertionError
            at __randomizedtesting.SeedInfo.seed([EA86D4BBCB213118:93E74FFA21E0DFF0]:0)
            at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
            at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
            at io.crate.testing.Asserts.assertThrowsMatches(Asserts.java:276)
            at io.crate.testing.Asserts.assertThrowsMatches(Asserts.java:265)
            at io.crate.integrationtests.SysShardsTest.testSelectFromClosedTableNotAllowed(SysShardsTest.java:451)
    ```

commit 9dc4bb4f8da42b1800736e31e6bbf802808d4d2b
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Oct 17 21:41:50 2022 +0200

    tests: Fix flaky SysSegmentsTableInfoTest
    
    - Assert that generation is >= 0 instead of 0
    - Migrate assertions to assertj
    
    example failure:
    ```
    java.lang.AssertionError:
    Expected: is <0L>
         but: was <1L>
            at __randomizedtesting.SeedInfo.seed([C18C24014204E2FF:410451FA5FF5DED0]:0)
            at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
            at org.junit.Assert.assertThat(Assert.java:964)
            at org.junit.Assert.assertThat(Assert.java:930)
            at io.crate.integrationtests.SysSegmentsTableInfoTest.validateResponse(SysSegmentsTableInfoTest.java:63)
            at io.crate.integrationtests.SysSegmentsTableInfoTest.test_retrieve_segment_information(SysSegmentsTableInfoTest.java:54)
    ```

commit 282ca4e5cb985e0098fdb560f1192f945088fe4d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 17 16:54:18 2022 +0200

    bp: Fix non-corruption in testCurrentHeaderVersion
    
    https://github.com/elastic/elasticsearch/commit/456de59698f9487d374e1ae8116a23c0cd91a736

commit 6b567044d5bc866328526a90c35fcc515a2a1b15
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 17 16:50:49 2022 +0200

    bp: Enforce higher priority for RepositoriesService ClusterStateApplier
    
    https://github.com/elastic/elasticsearch/commit/0752a86fe58b37fb52555f785d005805f2f253ce

commit 3d07af28ae41fc3d3241b36ba21c822550d21425
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 17 16:44:13 2022 +0200

    bp: Remove IndexShardRoutingTable#primaryAsList
    
    https://github.com/elastic/elasticsearch/commit/00ed31d000f20f29d963cc5af7acd07cf148715c

commit 3b6c58766d4bef7e83253262998d62d65bb213bd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 17 15:56:11 2022 +0200

    bp: Avoid flipping translog header version
    
    https://github.com/elastic/elasticsearch/commit/be804b765d8e8d2cc6e42517d93bf9bf0c4e1b6e

commit 365d7cb4940ab6fbf19d898ca9a062c7713df7a7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 17 15:37:52 2022 +0200

    bp: Account for recovery throttling when restoring snapshot
    
    https://github.com/elastic/elasticsearch/commit/15c85b29fd9

commit 78785b4a63bdd42b0ec0fe1d7e7cf14ac84141d5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 17 14:24:53 2022 +0200

    Do not check pause condition again after resume (fix infinite loop)
    
    `pauseConsumption` was both used in the consume loop to pause iteration
    and again on resume after a pause.
    
    This could lead to a infinite pause-resume-pause-loop because there are
    cases where `pauseConsumption` would always return `true` again after
    the pause: If the current requests/item uses up enough memory to move `IsUsedBytesOverThreshold` over the threshold without there being any other activity on the cluster.
    
    The requests are only freed up _after_ execution, if the execution is
    paused it would never get freed up.
    
    Fixes https://github.com/crate/crate/issues/13123

commit fc8ec2f62edfc281515a353fff66a8b481c4b009
Author: baur <baurzhansahariev@gmail.com>
Date:   Thu Oct 6 17:28:26 2022 +0200

    Ensure IS NULL does not match empty objects

commit 28d2d6477fd884c1b9e081c9e7eeb871c7e25ed1
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Oct 14 10:38:44 2022 +0200

    Add recent assertj migrations to git-blame-ignore

commit 32c831abf7b3d2336261ed0cf25641d078bc85be
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Oct 13 17:47:22 2022 +0200

    tests: Migrate isDocKey to assertj

commit 593dbe804e7b7c1e1a098dea31c5c03379bea182
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Oct 13 17:24:15 2022 +0200

    tests: Clean code in TestinHelpers

commit 8b29c69fcfec6d9ed3deb53b21eab0e93d93a806
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Oct 13 17:23:07 2022 +0200

    tests: Migrate ProjectionMatchers & isSQL to assertj

commit d9c9ce7c420847ab10694f2c3e862a06dbf9089e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 4 17:43:53 2022 +0200

    Add `max_by` and `min_by` aggregation functions
    
    Closes https://github.com/crate/crate/issues/10528

commit afcd7f1f009e6ec91deaa548ef07d9aa9dd92e29
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 12 13:40:31 2022 +0200

    bp: Fix NPE in SnapshotService CS Application
    
    https://github.com/elastic/elasticsearch/commit/b52a7641439

commit b6658375f7ffc846cfa09564a5d7c758e74a003a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 12 13:36:45 2022 +0200

    bp: Fix Incorrect Snapshot Shar Status for DONE Shards in Running Snapshots
    
    We don't have the status transport, but appplying it for the
    BlobStoreRepository change
    
    https://github.com/elastic/elasticsearch/commit/090211f7680

commit 5dad222d8a06cea0979d2f38dc3c4b3306519933
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 12 12:01:28 2022 +0200

    bp: [Docs] Fix return tuple element order (#58463)
    
    https://github.com/elastic/elasticsearch/commit/eaa60b7c54e

commit faf6f95820328e10e19dd0d7ac9a60b08ba817ab
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 12 12:00:58 2022 +0200

    bp: Fix Memory Leak From Master Failover During Snapshot
    
    https://github.com/elastic/elasticsearch/commit/468e559ff7d

commit d49a4ffe0582a357a2399ac072baa22019b064d0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 12 11:38:06 2022 +0200

    bp: Cleaner Handling of Snapshot Related null Custom Values in CS
    
    https://github.com/elastic/elasticsearch/commit/9e4c5d1dded4a841d719459f023bbb3f05c8a17f

commit 7d7efb5aa42bb5cb20cc39ce7dda8398885fd6fb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 12 10:59:06 2022 +0200

    Include allowed values in error message of settings using stringValidator

commit 129afc12754c93d9809e3beb5b91c912e1b657d2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 12 10:06:46 2022 +0200

    Update forbiddenapis to 3.4
    
    For Java 19 & 20 support

commit 5cd5e977a92bc133742af950428c8776d7d439df
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 12 10:01:41 2022 +0200

    Update netty to 4.1.84
    
    https://netty.io/news/2022/10/11/4-1-84-Final.html
    
    Poor netty 4.1.83 never got to see the light of day

commit 294479cfed05b4315ed2afd00b4a56b6184db757
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 10 15:27:48 2022 +0200

    Change partial aggregation input type to partialType
    
    The type was incorrect.
    This didn't result in any issues, but it is a problem if a aggregation
    function wants to use generic type parameters in their type signature
    and need the concrete partial input type at runtime.

commit f14edc737536ef7ec895d673b795dcadf7a18193
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 10 14:35:19 2022 +0200

    Add a `BoundSignature` to keep original bound DateType instances
    
    Aggregation types cannot be re-created from a `TypeSignature` because
    they're not part of the registry used in `DataType.of()`.
    
    This adds a `BoundSignature` which keeps the original data type
    instances and avoids re-creating types by parsing the type signature.

commit 9a9474988ec4616d84abf75c42ac7bab652e9efb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 10 12:01:39 2022 +0200

    Add a FunctionFactory interface wrapping BiFunction
    
    `BiFunction<Signature, Signature, FunctionImplementation>` is a bit long

commit ce8ee4ac630a9c2a0ff16a1bfd8c4427305b6fb1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 10 11:50:48 2022 +0200

    Change SignatureBinder to work with DataTypes instead of TypeSignatures
    
    In `matchFunctionCandidates` it created a typeSignature from concrete
    argument types only to latter on re-create the data type from the type
    signature. We can skip this round-trip and use DataType instances
    directly

commit c1d641ccae22235825dda595bac7f8bab396976f
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Oct 11 16:45:10 2022 +0200

    tests: Introduce SQLReponseAssert & use assertj for Windowfunctions

commit 4d9a482ca58b2e28cf328bf212ed40b7ddce61b6
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Oct 11 15:53:44 2022 +0200

    tests: Various minor improvements
    
    - Use `hasToString()`
    - Suppress warnings

commit cc6873198c54bfb3c88971cd021b94aafdce27f4
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Oct 11 15:44:29 2022 +0200

    tests: Replace NodeMatchers and CauseMatcher with assertj

commit 203544b2b7a315e0d31a115d6bb49f5ad9ede2e9
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Oct 10 16:13:25 2022 +0200

    Allow execution of queries with OFFSET but no LIMIT
    
    - Introduce a new SimpleOffsetProjector to implement the functionality.
    - Skip SimpleLimitAndOffsetProjection if none of LIMIT and OFFSET are
      set.
    
    Fixes: #13104

commit 7bc8198319ba2ae7a5044d0e02ba17884d7f3e52
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Oct 10 11:43:50 2022 +0200

    Rename TopN to Limit or LimitAndOffset

commit 561aaa43ddd5a9e3de4df52c0f4ade85d42c0d97
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Oct 7 15:47:09 2022 +0200

    Remove `NO_LIMIT` constant from `LogicalPlanner`
    
    Use constants from `TopN` instead.

commit 3437876c04ad36e51aa545b0aa187e4b30a49e69
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 4 11:13:51 2022 +0200

    Avoid multiple evaluation of same expression in GroupRowsByShard
    
    In a 1e6 row import, this has quite a bit of an effect:
    
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |    81637.580 ±    0.000 |  81637.580 |  81637.580 |  81637.580 |  81637.580 |
        |   V2    |    60370.707 ±    0.000 |  60370.707 |  60370.707 |  60370.707 |  60370.707 |
        ├---------┴-------------------------┴------------┴------------┴------------┴------------┘
        |               -  29.95%                           -  29.95%

commit c837067cd09e4652aa05d92bc64e66870b7a3dbd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 11 11:44:29 2022 +0200

    Bump version to 5.2.0-SNAPSHOT

commit 5c9617d9d18dd96b7e28ed024224d002f521c79d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 11 11:06:50 2022 +0200

    Release 5.1.0

commit 78884f53e452af0a5d5ba95542ed236051163791
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Oct 10 16:10:12 2022 +0200

    Add validation of the COPY FROM `compression` parameter
    
    The `compression` parameter should be validated for allowed values
    to inform the user of in-valid ones instead of silently consuming
    them and fail later with an unexpected error.

commit 5ea736652a850fb6a9b8bce2e2bdb5961631b32b
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Mon Oct 10 13:39:27 2022 -0400

    Add missing sql_features entries

commit a1db35226695a4ec1414c2669be73108d7fa59aa
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Oct 10 13:18:16 2022 +0200

    Add SymbolMatchers assertj migration to git-blame-ignore

commit 5b8593ccfd007d632f2fe531f5f077582feeb828
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Mon Oct 10 10:32:53 2022 -0400

    Reflect release 5.0.2

commit a9e3d857c43f50c76c782fd8ad5e5bf30257db53
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Oct 7 10:33:54 2022 +0200

    tests: Replace Symbol/Relation Matchers with assertj
    
    Replace Symbol/Relation Matchers with `SymbolAssert` and static
    methods in `Asserts`, as a consequence, migrate also `assertEvaluate`,
    `assertNormalize` and `assertCompile` methods to use the assertj stack.

commit 4b9442ee8e823dfcc0d1aea9e43a0abf91acb5ce
Author: hlcianfagna <110453267+hlcianfagna@users.noreply.github.com>
Date:   Thu Oct 6 16:22:44 2022 +0100

    Document silent skipping of rows on failed type casting during INSERT
    
    Pull request 13099

commit 28f50d4e4b53adc5b6363917d769753b5309bc6b
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 4 12:22:57 2022 +0200

    Fix an issue wheras a `-1` breaker limit was interpreted wrongly
    
    A `-1` limit on a breaker should not result in breaking but just
    accounting. This was not taken into account at the breakers
    `getFree()` method. It will return Long.MAX_VALUE in this case now.
    
    Additionally if will return `0` if the limit is set to `0` which
    indicates that the breaker should refuce any data according to
    the related breaker implementation.
    See also ChildMemoryCircuitBreaker.addEstimateBytesAndMaybeBreak().

commit df538b54928c44d6f63c7d01287acd30c5eab2a6
Author: hlcianfagna <110453267+hlcianfagna@users.noreply.github.com>
Date:   Wed Oct 5 15:13:39 2022 +0100

    Explain how users are backed up and restored (#13081)

commit e4d7b073cf54499eba9c6188a975875a42fe97eb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 4 10:04:16 2022 +0200

    Avoid creating new exception to generate error msg on inserts
    
    `userFriendlyCrateExceptionTopOnly` created a new exception (incl.
    generating the stacktrace), only to retrieve a message (that in most
    cases was derived from the original exception).
    
    A lot of the exception cases also didn't make sense for the upsert code
    path. Errors like shard not found or index not found result in a retry.
    Snapshot errors cannot happen.

commit fdf00fc866fffd87318dece71a10bc191b821fee
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 4 09:45:48 2022 +0200

    Avoid generating stack tracke for VersionConflictEngineException
    
    This exception can be raised quite frequently on data imports and
    filling in the stacktrace pops up prominent in flame graphs.
    
    Given that it is kinda used for control flow and a "expected" exception,
    I think it should be safe to omit the stack trace.

commit b1ce976b4d1e8da1cfc69adb25afc91f3132cb9a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 3 15:51:40 2022 +0200

    Don't create intermediate list to add indexable fields

commit 983c980cf6b4b4ce2acb6494dab18cb3eb0a90dd
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Oct 4 10:58:35 2022 +0200

    Revert "bp: Add Caching for RepositoryData in BlobStoreRepository"
    
    This reverts commits 078d0ba94e4e113abaa2a91bf0654967b2104267 &
    d27be70964d4d11309d3abf83f926c11c2d8d91e
    
    Caching `RepositoryData` could easily create more problems than it
    solves, by duplicating instances and use up heap memory during
    concurrent repository operations and queries on `sys.snapshots`.

commit 63b83758216c4596c36d54ab0ff7a3a1a2c951a1
Author: hlcianfagna <110453267+hlcianfagna@users.noreply.github.com>
Date:   Mon Oct 3 15:14:05 2022 +0100

    New tests for tryParseLong PR13088

commit 84215d6d8828ffa6e7aa1a10ce108dc14924bf87
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 4 10:59:08 2022 +0200

    Fix warnings in ColumnIdent.get

commit d4f6ffcecb20e929f82ba9ee5bb07725add3b82d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 4 11:34:48 2022 +0200

    Remove wrong Nullable annotations in BatchIteratorBackpressureExecutor
    
    These two properties cannot be null. There are guards in the
    constructor:
    
        this.earlyTerminationCondition = earlyTerminationCondition == null ? (results) -> false : earlyTerminationCondition;
        this.resultsToFailure = resultsToFailure == null ? (result) -> JobKilledException.of(null) : resultsToFailure;

commit c03f19d8c8244fe98743b51f265c46992c2e1fcd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 4 10:39:33 2022 +0200

    Set codecov patch status to informational

commit 3e4b9cb5d442e471ba7aa7d3cb4bfe48bb6ea5c3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 3 10:44:37 2022 +0200

    Remove unused TransportUpgradeSettingsAction

commit 17efdd4e9dfb554819c6743d417932b44a7fedd9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 3 14:45:10 2022 +0200

    Remove unused methods from FieldData

commit 2787a9ec77d0ac603515d7ad48fbb4650d16d0a8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 3 10:36:41 2022 +0200

    Fix some unchecked/rawtypes warnings

commit f8b004b2e3c8eb5eccebe27f951927fdbaaf1c37
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 3 09:50:54 2022 +0200

    Remove nullable annotation on primitive return types
    
    Those two methods cannot return `null`

commit b00fd5c82e342782591f1f4932f2a4b0e4fcc9a1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 3 13:30:01 2022 +0200

    Avoid string conversion in bool doc-value lookup
    
        Q: SELECT count(b) FROM tbl
        C: 1
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |       24.881 ±   22.399 |     19.994 |     22.772 |     24.007 |    515.772 |
        |   V2    |       12.767 ±   21.075 |      9.551 |     11.116 |     12.327 |    479.364 |
        ├---------┴-------------------------┴------------┴------------┴------------┴------------┘
        |               -  64.36%                           -  68.79%
        There is a 100.00% probability that the observed difference is not random, and the best estimate of that difference is 64.36%
        The test has statistical significance
    
        System/JVM Metrics (durations in ms, byte-values in MB)
            |    YOUNG GC            |       OLD GC           |      HEAP         |     ALLOC
            |  cnt      avg      max |  cnt      avg      max |  initial     used |     rate      total
         V1 |   10     5.02     5.04 |    0     0.00     0.00 |      268     1571 |   945.10      11840
         V2 |    0     0.00     0.00 |    0     0.00     0.00 |      268        0 |    54.61        384
    
        Top frames (by count)
          V1
            Long.toString(long) total=11191287552, count=3715
            ArraysSupport.mismatch(...) total=582, count=582
            InputRow.get(int) total=542, count=542
            UnicodeUtil.UTF16toUTF8(...) total=482, count=482
            LuceneBatchIterator.onDoc(int) total=392, count=392
            AggregateCollector.iterate(...) total=380, count=380
            ArrayList.clear() total=344, count=344
            Objects.checkIndex(int, int) total=187, count=187
            String.charAt(int) total=164, count=164
            Long.getChars(...) total=157, count=157
          V2
            SingletonSortedNumericDocValues.nextValue() total=573, count=573
            LuceneBatchIterator.onDoc(int) total=379, count=379
            DirectReader$1.get(long) total=289, count=289
            AggregateCollector.iterate(...) total=230, count=230
            BatchIterators$BiCollector.collect() total=104, count=104
            600742078.accept(...) total=38, count=38
            LuceneBatchIterator.innerMoveNext() total=16, count=16
            LuceneBatchIterator.tryAdvanceDocIdSetIterator() total=15, count=15
            LuceneBatchIterator.moveNext() total=14, count=14
            ParserATNSimulator.getEpsilonTarget(...) total=16271706, count=12

commit 001873298a93996d849c1561d1ec5205ca9930a5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 3 11:23:58 2022 +0200

    Replace deprecated NO_MORE_ORDS checks with docValueCount

commit e1cc214cafe59a7dd0160658269b75ea76482540
Author: baur <baurzhansahariev@gmail.com>
Date:   Tue Sep 27 09:43:01 2022 +0200

    reuse running ANALYZE result

commit 692df5397145b02449161b77bf341861ca2cce83
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Sep 30 10:08:49 2022 +0200

    remove portals and cursors from Session.toString

commit f66e643ae105812562f3c6a8f973817d6088ec5a
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Thu Sep 29 16:30:27 2022 +0200

    Upgrade to Admin UI 1.23.1
    
    Fixes formatting of ``TIMESTAMP WITHOUT TIME ZONE`` values in Admin UI
    query console result table.

commit 5aff1324d33e60d071a4b50e7c24e00a8a718e09
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Sep 16 14:58:56 2022 +0200

    added new setting stats.service.max_bytes_per_sec to throttle ANALYZE statements

commit be2fcc237cfb98b39ca6d28b6819f0378dedfb8c
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Sep 29 16:41:23 2022 +0200

    Group release notes by topic

commit 0af3d138880aa52bcbd5ff85220c834febb4b492
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Sep 26 17:24:27 2022 +0300

    Fix: also get from translog when query matching on `_id`.
    
    Previously, we were only searching if the symbols in the `WHERE` clause
    were matching all the columns comprising the table's `PRIMARY KEY`, but
    we didn't search if the query of the `WHERE` clause was trying on `_id`,
    which if an explicit `PRIMARY KEY` is defined, is a concaneted string of
    those pk column values.
    
    Fixes: #13057

commit d4b4c0803efd108f1f330255dcdce59805969dc7
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Wed Sep 28 17:27:29 2022 +0200

    Documentation: Add anchor to table of available data types (HTTP interface)

commit 69765413f6c6e3277d585149a7993b204a662d21
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Wed Sep 28 17:27:07 2022 +0200

    Documentation: Fix table of available data types for the HTTP interface
    
    - `Unchecked object` has ID 16 instead of 15
    - `TIMESTAMP WITHOUT TIME ZONE` has ID 15

commit 8643610097f366beeeb3e0f4cf7609fb0dd38065
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Sep 28 11:12:46 2022 +0300

    Upgrade jackson dependencies
    
    Upgrade jackson deps to latest stable version.

commit 94b195e201b7fa35a2d66a67165e87be18fcc01d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 28 15:24:14 2022 +0200

    Enable watermarks on single nodes without escape hatch

commit 74fb9f59046e07ac2094554a7434b4edcb956f74
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 28 14:25:15 2022 +0200

    Remove deferredExecutionsByStmt from Session.toString
    
    Follow up to https://github.com/crate/crate/pull/13062
    Having it included can lead to `ConcurrentModificationException`
    
    There was no good reason to include it, other than "might be useful".
    
    Fixes:
    
        java.util.ConcurrentModificationException
            at __randomizedtesting.SeedInfo.seed([10B5036FFE4E8643:553829717697324E]:0)
            at java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)
            at java.base/java.util.HashMap$EntryIterator.next(HashMap.java:1630)
            at java.base/java.util.HashMap$EntryIterator.next(HashMap.java:1628)
            at java.base/java.util.AbstractMap.toString(AbstractMap.java:550)
            at java.base/java.lang.StringConcatHelper.stringOf(StringConcatHelper.java:453)
            at io.crate.action.sql.Session.toString(Session.java:867)

commit ba2eb7e29108f72326fe907eee7e2f5cd1b06af6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 27 14:03:52 2022 +0200

    Remove some deprecated properties

commit 29ffaf540abca5185bb9a4e6d7b7945f7ae4ac90
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 27 12:02:03 2022 +0200

    Replace View tuple with record
    
    Tuple is deprecated

commit 4bffb0a14cdc14c910e1d9f7ca14dd4ef420520c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 27 11:53:42 2022 +0200

    Replace LockDetails tuple with record
    
    Tuple is deprecated and this avoids boxing of the nanoTime

commit a652878d627592a59a675631fdf3915b3c918469
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 27 14:13:26 2022 +0200

    Remove deprecated allow_mmapfs setting

commit 4c35dd97545adb04b0869b7f6fcd738667841de4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 27 11:39:21 2022 +0200

    tests: Inline single-use table definitions; remove unused

commit c8b770081c742a46a7aac67b1b0d78c480b69590
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 27 11:20:47 2022 +0200

    tests: Remove deprecated enableDefaultTables
    
    Avoids processing unused CREATE TABLE statements in unit tests

commit 0f8e325d301feb5ac10c4efeaa7d692aa8fbd9ff
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 26 17:11:53 2022 +0200

    Add teardown assertion to ensure sessions get closed

commit 5208022d630f645eb08833e1475c4d87ee3435a7
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Sep 23 13:18:30 2022 +0300

    bp: [DOCS] Fix typo in RoutingNode comment
    
    https://github.com/elastic/elasticsearch/commit/affc3954e6d2aa0da64ee3669f8da44300a07d0e

commit 2cf509af0e29497a35f5763c55989fe8066cf1ed
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Sep 23 12:30:15 2022 +0300

    bp: Remove anonymous PublicationContext implementation
    
    Today the `PublicationContext` interface has a single anonymous
    implementation, and `PublicationTransportHandler` has various methods
    that take the variables that this anonymous class captures. This commit
    refactors this into a proper class with proper fields and moves the
    relevant methods onto this class.
    
    https://github.com/elastic/elasticsearch/commit/256b660f0a01a5e59882861c38fa003745261ed9

commit 8488ad901be27c1a6c950ec3d45c78cc9b9fbb38
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Sep 23 12:02:03 2022 +0300

    bp: Remove Settings parameter from FieldMapper base class
    
    This is currently used to set the indexVersionCreated parameter on FieldMapper.
    However, this parameter is only actually used by two implementations, and clutters
    the API considerably. We should just remove it, and use it directly in the
    implementations that require it.
    
    https://github.com/elastic/elasticsearch/commit/ca2d12d039b9fdaa83bc950d590a6d6e18c78775

commit b56b3f5bc0dcad2af8aaa8bd675af83c4f6e00c6
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Sep 23 11:37:13 2022 +0300

    bp: Add new extensions for Lucene86 points codec to FsDirectoryFactory
    
    Partly cherry-picked with: fc3f8193f97141f3115ac84938bf2d2393588812
    but test changes were missing.
    
    https://github.com/elastic/elasticsearch/commit/b6585f2b5138c9f7928e53ec5d0ae9e259340084

commit d01a8ef82a8b74a9b2b1de0507f67edcbfb19f24
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Sep 23 11:34:29 2022 +0300

    bp: Fix Snapshot Abort Not Waiting for Data Nodes
    
    This was a really subtle bug that we introduced a long time ago.
    If a shard snapshot is in aborted state but hasn't started snapshotting on a node
    we can only send the failed notification for it if the shard was actually supposed
    to execute on the local node.
    Without this fix, if shard snapshots were spread out across at least two data nodes
    (so that each data node does not have all the primaries) the abort would actually
    never wait on the data nodes. This isn't a big deal with uuid shard generations
    but could lead to potential corruption on S3 when using numeric shard generations
    (albeit very unlikely now that we have the 3 minute wait there).
    Another negative side-effect of this bug was that master would receive a lot more
    shard status update messages for aborted shards since each data node not assigned
    a primary would send one message for that primary.
    
    https://github.com/elastic/elasticsearch/commit/85be78b6249387135f50b2406674d048e88c434f

commit a1f403ef800ea5a7f6bf823105104e660b5f7cb8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 26 15:34:51 2022 +0200

    Rename SQLOperations to Sessions
    
    Fits better with what the class is doing.

commit 017bc412eaa259ce05f43ae17ef3d3a65a1c11c4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 21 11:27:53 2022 +0200

    Inline PgSessions into SQLOperations
    
    This will make it easier to expose active sessions

commit d1a2960020a1683cb1e2cf393ea7b41729a7b5b7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 26 14:40:03 2022 +0200

    bp: Fix PersistedClusterStateServiceTests.testSlowLogging
    
    https://github.com/elastic/elasticsearch/commit/34fc52dbf35925a7b072d887ba283122dd3d9518
    
    Failed with:
    
        java.lang.AssertionError: max must be >= min: 1, 0
            at __randomizedtesting.SeedInfo.seed([A4C1A6C6699E9943:17EC0019C06CE531]:0)
            at com.carrotsearch.randomizedtesting.generators.RandomNumbers.randomLongBetween(RandomNumbers.java:29)
            at org.elasticsearch.test.ESTestCase.randomLongBetween(ESTestCase.java:506)
            at org.elasticsearch.gateway.PersistedClusterStateServiceTests.testSlowLogging(PersistedClusterStateServiceTests.java:840)

commit de83c9b63221ebcd5e2015a71a891ee13c27ad97
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Sun Sep 25 11:09:40 2022 +0200

    Remove stream usage from JoinPlanBuilder for correlated subqueries
    
    This is a follow-up to https://github.com/crate/crate/commit/9981eba6df08fab8672ce6e60d7ab81223d93a5b
    removing the java stream usage.

commit 27ed554c23cb1d7e330800463f08bcb109a2fb6e
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Sep 22 18:43:23 2022 +0300

    tests: Fix an issue causing ClassCastException when planning
    
    Previously, a `ClassCastException` was thrown when attempting to plan
    a join query with an uncorrelated subquery:
    
    ```
    class io.crate.expression.symbol.Literal cannot be cast to class [Ljava.lang.Object; (io.crate.expression.symbol.Literal is in unnamed module of loader 'app'; [Ljava.lang.Object; is in module java.base of loader 'bootstrap')
    java.lang.ClassCastException: class io.crate.expression.symbol.Literal cannot be cast to class [Ljava.lang.Object; (io.crate.expression.symbol.Literal is in unnamed module of loader 'app'; [Ljava.lang.Object; is in module java.base of loader 'bootstrap')
            at __randomizedtesting.SeedInfo.seed([F78E2051B6B6F38A:A88EB4BCDEC1BB29]:0)
            at io.crate.types.ArrayType.convert(ArrayType.java:237)
            at io.crate.types.ArrayType.sanitizeValue(ArrayType.java:149)
            at io.crate.types.ArrayType.sanitizeValue(ArrayType.java:63)
            at io.crate.planner.operators.SubQueryAndParamBinder.visitSelectSymbol(SubQueryAndParamBinder.java:72)
            at io.crate.planner.operators.SubQueryAndParamBinder.visitSelectSymbol(SubQueryAndParamBinder.java:37)
            at io.crate.expression.symbol.SelectSymbol.accept(SelectSymbol.java:82)
            at io.crate.expression.symbol.FunctionCopyVisitor.twoArgs(FunctionCopyVisitor.java:97)
            at io.crate.expression.symbol.FunctionCopyVisitor.processAndMaybeCopy(FunctionCopyVisitor.java:57)
            at io.crate.expression.symbol.FunctionCopyVisitor.visitFunction(FunctionCopyVisitor.java:154)
            at io.crate.expression.symbol.FunctionCopyVisitor.visitFunction(FunctionCopyVisitor.java:40)
            at io.crate.expression.symbol.Function.accept(Function.java:185)
            at io.crate.planner.operators.SubQueryAndParamBinder.apply(SubQueryAndParamBinder.java:84)
            at io.crate.planner.operators.SubQueryAndParamBinder.apply(SubQueryAndParamBinder.java:37)
            at java.base/java.util.function.Function.lambda$andThen$1(Function.java:88)
            at io.crate.analyze.WhereClause.map(WhereClause.java:188)
            at io.crate.planner.operators.Collect.createPhase(Collect.java:266)
    ```
    
    Follows: #13037

commit 9981eba6df08fab8672ce6e60d7ab81223d93a5b
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Sep 20 16:04:50 2022 +0200

    Fix handling of correlated subqueries in join conditions
    
    This makes correlated sub-queries work when used in a join condition.
    In case that any other relation than the left hand side is used for
    the correlated-join, an additional filter will be created.
    
    Co-authored-by: Mathias Fussenegger <f.mathias@zignar.net>

commit 85bcf9853f6e6cc881cd7daf41042d331e4ef107
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 21 11:01:43 2022 +0200

    Add more test cases for cursors

commit 9ff7e2b52c716a9042efa027c9b40daaa936b739
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 21 10:52:39 2022 +0200

    Document DECLARE, FETCH and CLOSE

commit 575cd37df072f0259913bcf129050cf13ff24d6b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 19 18:30:45 2022 +0200

    Implement cursor support (declare, fetch, close analyzer + execution)
    
    Partially based on https://github.com/crate/crate/pull/12597, but made
    some different decisions.
    
    High level overview:
    
    - Session now has cursors
    - Analyzer and Planner get access to cursors
    - There are Declare, Fetch and Close analyzed statements and plans
    - DeclarePlan.execute adds the cursor and invokes the query; returns empty result itself
    - FetchPlan.execute uses previously created cursor to access a BatchIterator and consume more rows
    - ClosePlan.execute closes & removes cursors
    
    Currently only forward movement is supported.
    
    Not supported:
    
    - SCROLL
    - BINARY (at statement level, it is supported on pg-wire level)
    - Any backward movements
    - Any absolute movements
    
    Co-authored-by: Minsoo Jee <jeeminso@gmail.com>

commit ccce94a0b094f8b5f978f3ee3679e8f8cd4c79d3
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Sep 16 12:16:22 2022 +0200

    remove BWC code from ANALYZE action

commit c688b1d800351f7573a06c8a4f597a4ea0a4dbaa
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Sep 16 12:02:22 2022 +0200

    remove unused AnalyzeRequest

commit 456972affa919502d4e1df5e23f1650ccbd6808d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 19 16:19:06 2022 +0200

    Add parser support for DECLARE, FETCH and CLOSE
    
    Subset of https://github.com/crate/crate/pull/12597
    Made some small modifications:
    
    - Direction of fetch is normalized into ABSOLUTE or RELATIVE
    - Shorter class names
    
    Co-authored-by: Minsoo Jee <jeeminso@gmail.com>

commit c64b6fe8d4a00da5956924d3e8540a7d8cb9d791
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 19 11:14:18 2022 +0200

    Update netty to 4.1.82
    
    https://netty.io/news/2022/09/13/4-1-82-Final.html

commit 39a3e6257d94b4fc5653b03b261526077982cdb3
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Sep 19 13:13:21 2022 +0300

    address comments

commit 2057868f383ed0a092179ee0b11c95e6ad61b14c
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Sep 16 17:58:57 2022 +0300

    Fix issue with LEFT join and subquery in WHERE
    
    When trying a `LEFT` to an `INNER` join, a `SymbolEvaluator` is
    used, with empty `subQueryResults` which will cause an
    `IllegalArgumentException` to be thrown when calling `getSafe()`
    on the subquery results.
    
    Use a subclass of `SymbolEvaluator` for this purpose which returns
    a `null` Literal when visiting subquery `SelectSymbol`s.
    
    Fixes: #13003
    Follows: #12071

commit a3eb7f078f1e7981b7489e03ecf93d027bb575b0
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Sep 16 21:29:45 2022 +0300

    bp: Fix race in RecoveryRequestTrackerTests
    
    Currently in the recovery request tracker tests we place the futures
    into the future map on the GENERIC thread. It is possible that the test
    has already advanced past the point where we block on these futures
    before they are placed in the map. This introduces other potential
    failures as we expect all futures have been completed. This commit fixes
    the test by places the futures in the map prior to dispatching.
    
    https://github.com/elastic/elasticsearch/commit/b1c3ad8f59e99d42d3cc5f13d6764f2f77f77bfb

commit 18d45f4be6fed3f6e64b0fcd7e18c8ad0d5a41ba
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Sep 16 21:29:06 2022 +0300

    bp: Fix exception check in RecoveryRequestTrackerTests
    
    Currently we check that exceptions are the same in the recovery request
    tracker test. This is inconsistent because the future wraps the
    exception in a new instance. This commit fixes the test by comparing a
    random exception message.
    
    https://github.com/elastic/elasticsearch/commit/9eaee3da8d4c03ae442f7b31bbb3977d143caf5c

commit 0c6661ddd579304ae775cab33a830bc0c9ec7851
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Sep 16 13:55:54 2022 +0300

    bp: Don't log on RetentionLeaseSync error handler
    
    After an index has been deleted it may take some time to cancel all the
    maintenance tasks such as RetentionLeaseSync, it's possible that the
    task is already executing before the cancellation. This commit just
    avoids logging a warning message for those scenarios.
    
    https://github.com/elastic/elasticsearch/commit/a5bc5ae030bd46f50dde1fcc51ebb898c1cfb6a2

commit 26668dbdedfa2f95378070022aa54fd967304ea3
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Sep 16 13:51:30 2022 +0300

    bp: Fix Running TranslogOps on CS Thread
    
    We should fork off from the CS thread to run this even if it's a rare
    condition.
    
    https://github.com/elastic/elasticsearch/commit/1a48983a562e16177bca319247bc66798a07bdd2

commit 036316fea5e8ebd55a6f4094e65a365a6899a194
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Sep 16 13:49:02 2022 +0300

    bp: Hide AlreadyClosedException on IndexCommit release
    
    Today `InternalEngine#releaseIndexCommit` fails with an
    `AlreadyClosedException` if the engine is closed before the index commit is
    released. This can happen if, for example, a node leaves and rejoins the
    cluster and acquires an index commit for replica shard allocation concurrently
    with shutting the shard down.
    
    There's no need to fail the operation like this: if the engine is shut down
    then we will clean up the unreferenced files when it's restarted (or if it's
    allocated elsewhere) so we can suppress an `AlreadyClosedException` in this
    case. This commit does so.
    
    https://github.com/elastic/elasticsearch/commit/f950c121bb6077c17fb912f5451163a4d4c09541

commit 7b91c3b545b45d92b9204eaf27ce77cc1e41b34a
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Sep 16 13:29:11 2022 +0300

    bp: Fix Remote Recovery Being Retried for Removed Nodes
    
    If a node is disconnected we retry. It does not make sense
    to retry the recovery if the node is removed from the cluster though.
    => added a CS listener that cancels the recovery for removed nodes
    
    Also, we were running the retry on the `SAME` pool which for each retry will
    be the scheduler pool. Since the error path of the listener we use here
    will do blocking operations when closing the resources used by the recovery
    we can't use the `SAME` pool here since not all exceptions go to the `ActionListenerResponseHandler`
    threading like e.g. `NodeNotConnectedException`.
    
    https://github.com/elastic/elasticsearch/commit/fe85bdbe6f685d92de8fb51691a7da2e18716251

commit 0e7950ea214eb2a39758da6aa62beabc44bc8591
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Sep 16 13:18:43 2022 +0300

    bp: Stop Serializing Exceptions in SnapshotInfo
    
    In https://github.com/elastic/elasticsearch/commit/ff9e8c622427d42a2d87b4ceb298d043ae3c4e6a
    we changed the format used when serializing snapshot failures in the
    cluster state and `SnapshotInfo`. This turned them from a short string
    holding all the nested exception messages into a multi kb stacktrace
    in many cases. This is not great if you snapshot a large number of
    shards that all fail for example and massively blows up the size of
    the GET snapshots response if there are snapshots with failures in there.
    This change reverts to the format used for exceptions before the above commit.
    
    Also, this change short circuits logging and serialization of the failure
    for an aborted snapshot where we don't care about the specific message at all
    and aligns the message to "aborted" in all cases (current if we aborted before any IO,
    it would have been "aborted" and an exception when aborting later during IO).
    
    https://github.com/elastic/elasticsearch/commit/d57942045255cbfd5bc6236aec36323803fb21af

commit 5b4109bcb1f634511087f0064890d581d282023e
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Sep 16 13:13:48 2022 +0300

    bp: Fix stalled send translog ops request
    
    Currently, the translog ops request is reentrent when there is a mapping
    update. The impact of this is that a translog ops ends up waiting on the
    pre-existing listener and it is never completed. This commit fixes this
    by introducing a new code path to avoid the idempotency logic.
    
    https://github.com/elastic/elasticsearch/commit/8119b965178a00bc72457a4635978dd1162f77c7

commit 094c59e26ea750b2a733c0aa4c2a7af388573b19
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Sep 16 13:10:14 2022 +0300

    bp: Fix translog ops action name in channel listener
    
    The action name is passed to the `ChannelListener` and is used for
    logging purposes. Currently, we are using the incorrect action name for
    the translog ops listener. This commit fixes the issue.
    
    https://github.com/elastic/elasticsearch/commit/c17121428eecc8427b6ffdf51b1b0c45a7a70283

commit 208fc2bdc79def94f58d17fd16d84e6a514e651c
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Sep 16 13:03:57 2022 +0300

    bp: Reestablish peer recovery after network errors
    
    Currently a network disruption will fail a peer recovery. This commit
    adds network errors as retryable actions for the source node.
    Additionally, it adds sequence numbers to the recovery request to
    ensure that the requests are idempotent.
    
    Additionally it adds a reestablish recovery action. The target node
    will attempt to reestablish an existing recovery after a network
    failure. This is necessary to ensure that the retries occurring on the
    source node provide value in bidirectional failures.
    
    https://github.com/elastic/elasticsearch/commit/952cf770ed6f32a3448509afda812d7f41ca1704

commit 6591d13b25b5d6bb73f7978b7fae11b72901c386
Author: baur <baurzhansahariev@gmail.com>
Date:   Thu Sep 15 15:18:00 2022 +0200

    reflect release 4.8.4

commit 998e6bd043b35a81b4721d8214796b74b2e7c116
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Sep 15 14:17:31 2022 +0300

    bp: Fix Broken Numeric Shard Generations in RepositoryData
    
    Fix broken numeric shard generations when reading them from the wire
    or physically from the physical repository.
    This should be the cheapest way to clean up broken shard generations
    in a BwC and safe-to-backport manner for now. We can potentially
    further optimize this by also not doing the checks on the generations
    based on the versions we see in the `RepositoryData` but I don't think
    it matters much since we will read `RepositoryData` from cache in almost
    all cases.
    
    https://github.com/elastic/elasticsearch/commit/0987c0a5f3dd9000d556c31c76510497c87945b4

commit d27be70964d4d11309d3abf83f926c11c2d8d91e
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Sep 14 21:48:32 2022 +0300

    bp: Fix Bug With RepositoryData Caching
    
    This fixes a really subtle bug with caching `RepositoryData`
    that can corrupt a repository.
    We were caching `RepositoryData` serialized in the newest
    metadata format. This lead to a confusing situation where
    numeric shard generations would be cached in `ShardGenerations`
    that were not written to the repository because the repository
    or cluster did not yet support `ShardGenerations`.
    In the case where shard generations are not actually supported yet,
    these cached numeric generations are not safe and there's multiple
    scenarios where they would be incorrect, leading to the repository
    trying to read shard level metadata from index-N that don't exist.
    This commit makes it so that cached metadata is always in the same
    format as the metadata in the repository.
    
    https://github.com/elastic/elasticsearch/commit/004eb8bd7e43a22847a77de4e99c67d1114a465e

commit b1c12292beab79e4a7b79be35c24b4a4b277d5f4
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Sep 14 18:03:46 2022 +0300

    bp: Timeout health API on busy master
    
    Today `GET _cluster/health?wait_for_events=...&timeout=...` will wait
    indefinitely for the master to process the pending cluster health task,
    ignoring the specified timeout. This could take a very long time if the master
    is overloaded. This commit fixes this by adding a timeout to the pending
    cluster health task.
    
    https://github.com/elastic/elasticsearch/commit/fc4dd6d6813bfd5f113b09ee2bd5745af28fe05d

commit f839f4d3cb62a63dfeb2e5507716a9c715f079c8
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Wed Sep 14 18:04:01 2022 +0200

    Update to Admin UI 1.23.0
    
    This improves scrolling behavior on wide result sets.

commit 8178909e0a29c0d1247dfad806913228e625e39f
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Sep 14 10:01:30 2022 +0300

    docs: Remove limitation comparing to PostgreSQL
    
    - Array slice is implemented
    - We also evaluate constant expressions even when tables are empty or
      WHERE filter results in 0 rows, except for very specific cases like
      division by 0.

commit 5cc75ee6104091b11a262480c56129a9503a5051
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 14 12:24:11 2022 +0200

    Fix fd leak in getCgroupHierarchy
    
    `Files.walk` returns a stream that must be closed to avoid leaks.
    
        crash -c "select os from sys.nodes"; lsof -a -p $(jps | awk '/CrateDB/ { print $1 }') | wc -l
    
    Closes https://github.com/crate/crate/issues/13027

commit fd8b95f6c94f457ecda1ca02ebfd1c1a12674cdb
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Sep 13 13:48:32 2022 +0300

    bp: Do not Block Snapshot Thread Pool Fully During Restore or Snapshot
    
    Allow for a fairer distribution of snapshot and restore operations
    to enable parallel snapshots and improve behaviour for parallel snapshot + restore.
    
    https://github.com/elastic/elasticsearch/commit/9bc9d01b841509c1ec8130cb5e3fabe94fb79a6e

commit ed7509151875639649e8c8f796bedfe3945da6e9
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Sep 13 13:16:30 2022 +0300

    bp: Remove Overly Strict Safety Mechnism in Shard Snapshot Logic
    
    Unfortunately, we cannot have a safety mechnism like this where we throw whenever we find unreadable data in a shard.
    This breaks in the case of an older ES version (without shard generations enabled) having failed to snapshot a shard snapshot after writing some data to its path and having finalized it for example.
    Another example of where we can't support this check is the test I added, if we snapshot an index with a name that already exists in the repository and more shards than the existing index, fail doing that and then retry snapshotting it we will also see unexpected data in the path.
    
    We could technically do deeper inspections on the unexpected data but I don't think it's worth it really. In the end if we are unable to read the data here it's broken anyway. By moving to a new `index-` blob in the shard directory I don't see us ever
    corrupting existing data and since we (by virtue of moving to an empty generation) won't do any incremental work on top of potentially corrupt data we also do not risk creating broken snapshots going forward.
    => Just logging a warning in this very unlikely case is the best we can do I think
    
    https://github.com/elastic/elasticsearch/commit/e4fd78f866c923cab7e69970a1b74a62cd9da980

commit 7f2100e9630bb6d5af754f3bfb99884830ea80ae
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Sep 13 12:58:25 2022 +0300

    bp: Fix Confusing Exception on Shard Snapshot Abort
    
    If a partial snapshot has some of its shards aborted because an index got deleted, this can lead to confusing `IllegalStateExceptions` when trying to increment the ref count of the already closed `Store`.
    Refactored this a little to throw the same exception for aborted shards no matter the timing of the store close and assert that the concurrent store close can in fact only happen when the shard snapshot has already been aborted.
    
    https://github.com/elastic/elasticsearch/commit/dde75b0f64e02ed7e5c5e25e204fe896efcdfb68

commit af349b91381964efa1628fa204dca27f72aa38c5
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Sep 13 12:53:02 2022 +0300

    bp: Add History UUID Index Setting
    
    Pre-requesite for #50278 to be able to uniquely identify index metadata by
    its version fields and UUIDs when restoring into closed indices.
    
    https://github.com/elastic/elasticsearch/commit/9fa60f7367b2817ad340264b67f5aae8871072a4

commit 744dea03fca169c1257b4e302b3dc278ef54b1b0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 13 11:50:03 2022 +0200

    Fix race that could lead to pg wire messages being out-of-order
    
    The `completionFuture` of a `ResultReceiver` was used to both:
    
    - Write out pending messages
    - Trigger the next execution if there are multiple deferred statements
    
    There was a race where the next execution could write out
    `commandComplete` _before_ the "write pending messages" routine
    triggered, leading to out-of-order messages on the client side.
    
    This caused the JDBC client to fail with:
    
            java.util.NoSuchElementException
                    at __randomizedtesting.SeedInfo.seed([FAA2E13C629A53DB:BF7BE6AFD08EA59]:0)
                    at java.base/java.util.ArrayDeque.removeFirst(ArrayDeque.java:362)
                    at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2129)
                    at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:356)
                    at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:496)
                    at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:413)
                    at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:333)
                    at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:319)
                    at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:295)
                    at org.postgresql.jdbc.PgStatement.executeUpdate(PgStatement.java:268)
    
    To remove the race this moves the "write pending messages" trigger into
    the ResultReciver to ensure it's run _before_ triggering the completion
    future.

commit a80f8d7d62cd63484966dacda3971aa1899a60f9
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Sep 13 12:35:46 2022 +0300

    bp: Remove Dead Conditional from RoutingTable
    
    `delta` is always positive here.
    
    https://github.com/elastic/elasticsearch/commit/46e5c37267c142743e3bc457d4a9491c7411a255

commit 162eb7bd91a69abdf673e333bfe82b29d58ab559
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Sep 13 12:26:05 2022 +0300

    bp: Relax Assertion About SnapshotsService Listeners
    
    This assertion is too strict. A snapshot will be removed from the cluster state
    on the CS thread before it is removed from the listeners map on the snapshot thread pool.
    Throughout the removal from the cluster state and listener map, the snapshot is tracked
    in `endingSnapshots` though, so we can relax the assertion accordingly and are still able
    to catch leaked listeners.
    
    https://github.com/elastic/elasticsearch/commit/31f54c934e35ba8996095eb74c77255f88d70fb2

commit 4b9235cf7d539bb76f1a2850ced6a964b282b64c
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Sep 13 12:07:25 2022 +0300

    bp: Use CollectionUtils.isEmpty where appropriate
    
    This commit uses the isEmpty utility method for arrays in place of null and greater than zero checks.
    
    https://github.com/elastic/elasticsearch/commit/8e96e5c936a8ca2e058eadb8891d52995b2a991b

commit 7646cfe6fa74d5c69d16f1060359d1bf02123832
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Sep 13 11:54:17 2022 +0300

    bp: Use snapshot information to build searchable snapshot store MetadataSnapshot
    
    While investigating possible optimizations to speed up searchable
    snapshots shard restores, we noticed that Elasticsearch builds the
    list of shard files on local disk in order to compare it with the list of
    files contained in the snapshot to restore. This list of files is
    materialized with a MetadataSnapshot object whose construction
    involves to read the footer checksum of every files of the shard
    using Store.checksumFromLuceneFile() method.
    
    Further investigation shows that a MetadataSnapshot object is
    also created for other types of operations like building the list of
    files to recover in a peer recovery (and primary shard relocation)
    or in order to assign a shard to a node. These operations use the
    Store.getMetadata(IndexCommit) method to build the list of files
    and checksums.
    
    In the case of searchable snapshots building the MetadataSnapshot
    object can potentially trigger cache misses, which in turn can
    cause the download and the writing in cache of the last range of
    the file in order to check the 16 bytes footer. This in turn can
    cause more evictions.
    
    Since searchable snapshots already contains the footer information
    of every file in BlobStoreIndexShardSnapshot it can directly read the
    checksum from it and avoid to use the cache at all to create a
    MetadataSnapshot for the operations mentioned above.
    
    This commit adds a shortcut to the
    SearchableSnapshotDirectory.openInput() method - similarly to what
    already exists for segment infos - so that it creates a specific
    IndexInput for checksum reading operation.
    
    https://github.com/elastic/elasticsearch/commit/8e9b69bfd7953ef1c5c4f3ba4e06ffee64754554

commit f36fd44f9e262db906bae4cbfe8ec6ed8de8fe8c
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Sep 13 11:51:32 2022 +0300

    bp: Add More Trace Logging to BlobStoreRepository
    
    Adding more trace logging that would be helpful in understanding
    the precise order of blob-level operations if needed.
    
    https://github.com/elastic/elasticsearch/commit/085ff8c404c5bb6dc3719c2656d6e63a9f0cf4fc

commit acac235ef244d87e80a97b5e4f019f98112d3464
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Sep 13 11:46:36 2022 +0300

    bp: Fix Noisy Logging during Snapshot Delete
    
    We were logging the cleanup of the snap- and meta- blobs for every snapshot delete
    which is needlessly noisy and confusing to users. We should only log actual stale/unexpected
    blobs here.
    
    https://github.com/elastic/elasticsearch/commit/3bad5b3c01a615af72f8a5b6f95721cf35dd5852

commit 00ea612d4fce689bbb0c4a299d9779aa383cc0ae
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Sep 9 09:47:42 2022 +0200

    implement Drop Constraint in dedicated request and action

commit 8ca3991d7694ad28a4647389e2395611eb7170b7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 7 10:52:20 2022 +0200

    Optimize some of the common helpers in AstBuilder
    
    - Replaces some `.stream()...collect(toList())` to avoid array re-sizing.
    - Replaces `visit(x)` with `x.accept(..)` to avoid one extra call
    - Replaces `Optional.ofNullable(..).map(..).map(..)` as in the
      "non-null" case each `map` creates an extra `Optional` (I didn't
      verify if that gets optimized by the JIT. Due to inlining + escape
      analysis maybe it would)

commit e3d09e7eae99d528cdd8fbbfa65f74b90c989580
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Sep 13 14:03:02 2022 +0300

    bp: Fix TransportAddVotingConfigExclusionsActionTests Leaking CS Observers
    
    There is no guarantee the observer and subsequent CS update will execute
    before we move on to the next test here and we ahve to wait for the observer + CS update cycle to complete
    before moving on to the next test.
    
    https://github.com/elastic/elasticsearch/commit/250a51bca156acbe2d941cb8309f625b91134c9f

commit 1f2f8596ccfad056854e1aefcf5cb11de7138e1a
Author: baur <baurzhansahariev@gmail.com>
Date:   Tue Sep 13 10:57:17 2022 +0200

    remove mention of enterprise and mqtt from the schema

commit ab050c9477020ba00d685dec6f90911f8749b023
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 12 15:46:48 2022 +0200

    Update netty to 4.1.81
    
    https://netty.io/news/2022/09/08/4-1-81-Final.html

commit adad58baee3de8b9f9d3b940331102f1fc70bcd7
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Sep 12 17:08:41 2022 +0300

    bp: Searchable Snapshots should respect max_restore_bytes_per_sec
    
    This commit changes searchable snapshots so that it now respects the
    repository's max_restore_bytes_per_sec setting when it downloads blobs.
    
    https://github.com/elastic/elasticsearch/commit/b9636713b1f41df2dfddf82d884f3a75338969bd

commit 191c8bb62701321eff788384a5abc7d9b5cbd838
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Sep 12 16:53:41 2022 +0300

    bp: Allow Bulk Snapshot Deletes to Abort
    
    Making use of #55773 to simplify snapshot state machine.
    1. Deletes with no in-progress snapshot now add the delete entry to the cluster state right away
    instead of doing a second CS update after the fist update was a NOOP.
    2. If a bulk delete matches in-progress as well as completed snapshots, abort the in-progress snapshot
    and then move on to delete from the repository.
    
    https://github.com/elastic/elasticsearch/commit/e8ef44ce78ae8578e87b27c554748acfb82f168c

commit f8139391855917baebc15aff635d324e56c332c5
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Sep 12 16:50:39 2022 +0300

    bp: Add Functionality to Consistently Read RepositoryData For CS Updates
    
    Using optimistic locking, add the ability to run a repository state
    update task with a consistent view of the current repository data.
    Allows for a follow-up to remove the snapshot INIT state.
    
    https://github.com/elastic/elasticsearch/commit/e01b999ef03fc7c22aa633f367e9d3c6f1b3e179

commit 3b04aee28b5b6eddf3c104013484f2282d6853c0
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Sep 12 15:21:24 2022 +0300

    Update gradle wrapper
    
    Update old gradlew scripts along with the wrapper jar.

commit fe702b7b0140e99941d7d5bfecdacafa81461548
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Sep 12 13:27:31 2022 +0300

    bp: Allow Deleting Multiple Snapshots at Once
    
    Adds deleting multiple snapshots in one go without significantly changing the mechanics of snapshot deletes otherwise.
    This change does not yet allow mixing snapshot delete and abort. Abort is still only allowed for a single snapshot delete by exact name.
    
    https://github.com/elastic/elasticsearch/commit/3a64ecb6bfe5c7d88ac73954a3b498cc71ab8d6e

commit 756d346e88409deab190eb9fbd99f15d6f7c219b
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Sep 12 11:47:59 2022 +0300

    bp: Improve same-shard allocation explanations
    
    I see occasional confusion about the explanations emitted by the same-shard
    allocation decider, particularly amongst new users setting up a single-node
    cluster and trying to determine why their cluster has `yellow` health. For
    example:
    
        the shard cannot be allocated to the same node on which a copy of the shard
        already exists
    
    This is technically correct but it's quite a complicated sentence. Also, by
    starting with "the shard cannot be allocated" it makes it sound like this is
    the problem, whereas in fact this message is a good thing and users should
    typically focus their attention elsewhere.
    
    This commit simplifies the wording of these messages and makes them sound more
    positive, for example:
    
        a copy of this shard is already allocated to this node
    
    https://github.com/elastic/elasticsearch/commit/69f50fe79f9eb64b92ff40faa1636329c161306c

commit cd70a6a864d1dd7625972a23e23566db495cce94
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 12 10:35:27 2022 +0200

    Fix error handling in FetchTask.start
    
    `sharedShardContexts.maybeRefreshReaders` can throw a
    ShardNotFoundException.
    
    The completionFuture of the `FetchTask` wasn't completed in that case,
    which prevented the error propagation to other tasks.
    
    Fixes flaky
    `CastIntegrationTest.testTryCastReturnNullWhenCastingFailsOnRows`

commit 3b925ba3377007c76c91dc0dc01fd5d381ed307a
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Sep 12 13:48:21 2022 +0300

    tests: Add assertj migrations to git blame ignore

commit f538de7d059cbd811eeeffcaaa0bbc86ebac2dae
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Sep 12 11:24:32 2022 +0200

    Fix ExplainPlan to utilize cast optimization on sub plans.
    
    Cast optimizations inside WHERE clauses are done while building
    an ExceutionPlan of a COLLECT plan to take subquery results and
    parameter symbols into account.
    As the ExplainPlan (without the ANALYZE step) prints out a plan
    without execution it, these cast optimizations aren't applied.
    To fix this and such print out the same plan which is used for
    execution, these cast optimizations are explicitly called while
    executing the ExplainPlan.

commit a4aff04b69d5f53c62dee2f932b0fe49d1f9c0c5
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Sep 12 11:37:27 2022 +0200

    Convert ExplainPlannerTest to assertj

commit 61b6b3ddfee42e10b617dfa1f16ac15460064908
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Sep 9 18:47:07 2022 +0300

    bp: Fix NullPointer when message shortcircuited
    
    Currently if we shortcircuit a message the breaker release is null since
    there is nothing to be broken. However, the TcpTransportChannel
    infrastructure still expects it. This commit resolves this issue be
    returning a no-op breaker release.
    
    https://github.com/elastic/elasticsearch/commit/9eb67365002b12170a0c9e92bd6d8c57e00a4970

commit 60ab35fabdab655d9a83b874b336a9491b3cf316
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Sep 9 18:44:55 2022 +0300

    bp: Disk decider respect watermarks for single data node
    
    The disk decider had special handling for the single data node case,
    allowing any allocation (skipping watermark checks) for such clusters.
    This special handling can now be avoided via a setting.
    
    https://github.com/elastic/elasticsearch/commit/cab7bcc1562e4fc9e8b213d6a4e28e9ad770a457

commit 1e7de98605db44e4f741dec702dc6de4aaadfda2
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Sep 9 18:46:32 2022 +0300

    bp: More Efficient Blobstore Metdata IO
    
    No need to copy all these bytes multiple times, especially not when
    writing a multiple MB global cluster state snapshot through this method.
    
    https://github.com/elastic/elasticsearch/commit/fe9904fbea7d1de636bed13a57ee40489a80ed34

commit 543413ec7e58eabeeacd7798ba9e0b8c9aa48f85
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Sep 9 15:43:50 2022 +0300

    bp: Fix NPE in Partial Snapshot Without Global State
    
    We make sure to filter shard generations for indices that are missing
    from the metadata when finalizing a partial snapshot (from concurrent index deletion)
    but we failed to account for the case where we manually build a fake metadata instance
    for snapshots without the global state.
    Fixed this by handling missing indices by skipping, same way we do it for filtering the
    shard generations.
    
    https://github.com/elastic/elasticsearch/commit/4403b69048584f90b6172d24491af924844bf91c

commit edaa4a89821224a27a2759cc0a46177edc831648
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Sep 9 15:21:17 2022 +0300

    bp: Always use deprecateAndMaybeLog for deprecation warnings
    
    Replace calls to deprecate(String,Object...) with deprecateAndMaybeLog(...),
    with an appropriate key, so that all messages can potentially be deduplicated.
    
    https://github.com/elastic/elasticsearch/commit/d66af46724c2253e3776317127b0b8c7dee0e532

commit bd3908c8ec79a364530e0a6c3dbe976f13e1c7ab
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Sep 9 14:21:10 2022 +0300

    bp: Remove Redundant CS Update on Snapshot Finalization
    
    This change folds the removal of the in-progress snapshot entry
    into setting the safe repository generation. Outside of removing
    an unnecessary cluster state update, this also has the advantage
    of removing a somewhat inconsistent cluster state where the safe
    repository generation points at `RepositoryData` that contains a
    finished snapshot while it is still in-progress in the cluster
    state, making it easier to reason about the state machine of
    upcoming concurrent snapshot operations.
    
    https://github.com/elastic/elasticsearch/commit/db7eb8e8fff57f03e5bcaa1e868463cfcaf1547b

commit 688b21645bdb59d73007236bcc8b755bdd7b6127
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Sep 9 13:48:51 2022 +0300

    bp: Allow searching of snapshot taken while indexing
    
    Today a read-only engine requires a complete history of operations, in the
    sense that its local checkpoint must equal its maximum sequence number. This is
    a valid check for read-only engines that were obtained by closing an index
    since closing an index waits for all in-flight operations to complete. However
    a snapshot may not have this property if it was taken while indexing was
    ongoing, but that's ok.
    
    This commit weakens the check for a complete history to exclude the case of a
    searchable snapshot.
    
    Relates #50999
    
    https://github.com/elastic/elasticsearch/commit/be60d504520761b849c94ff96bf2f4d4b2deb3a1

commit 391c397c67a2911dd3c0d304bda161f11c12b456
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Sep 8 12:03:31 2022 +0300

    bp: Make RepositoryData Less Memory Heavy
    
    We don't really need `LinkedHashSet` here. We can assume that all the
    entries are unique and just use a list and use the list utilities to
    create the cheapest possible version of the list.
    Also, this fixes a bug in `addSnapshot` which would mutate the existing
    linked hash set on the current instance (fortunately this never caused a real world bug)
    and brings the collection in line with the java docs on its getter that claim immutability.
    
    https://github.com/elastic/elasticsearch/commit/a0763d958d1fbaf6149f79340b29b63b12844f9d

commit 2ed41833b064834bd82b90a18e0c3193cf3cfe05
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Sep 8 11:55:18 2022 +0300

    bp: Add Snapshot Resiliency Test for Master Failover during Delete
    
    We only have very indirect coverage of master failovers during snaphot delete
    at the moment. This comment adds a direct test of this scenario and also
    an assertion that makes sure we are not leaking any snapshot completion listeners
    in the snapshots service in this scenario.
    
    This gives us better coverage of scenarios like #54256 and makes the diff
    to the upcoming more consistent snapshot delete implementation in #54705
    smaller.
    
    https://github.com/elastic/elasticsearch/commit/4d543a569fabba130390b9ce787aa4b962e373d4

commit 6590f53d3933492befd46947da0d4f985e0c89d4
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Sep 8 11:27:55 2022 +0300

    bp: Fix Incorrect Concurrent SnapshotException on Master Failover
    
    If we run into an INIT state snapshot and the current master didn't create it, it will be removed anyway.
    => no need to have that block another snapshot from starting.
    This has practical relevance because on master fail-over after snapshot INIT but before start, the create snapshot request will be retried by the client (as it's a transport master node action) and needlessly fail with an unexpected exception (snapshot clearly didn't exist so it's confusing to the user).
    
    This allowed making two disruption type tests stricter
    
    https://github.com/elastic/elasticsearch/commit/258f4b3be3c9877be51fcd46eab7385a0298ea70)

commit d22f50d2f3bfe8d050344ac23631c0c1f56a1e78
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Sep 8 12:17:33 2022 +0200

    Make comma separator of successive BEGIN transaction_modes optional
    
    This adds support for clients and tools using an older (< 8.0)
    PostgreSQL syntax whereas a comma separator wasn't defined.
    Same applies for the ``START TRANSACTION`` syntax.
    
    Closes #12990.

commit 8895a10488daa54599471537415f014a43da70ea
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Sep 8 11:21:33 2022 +0300

    bp: Exclude Snapshot Shard Status Update Requests from Circuit Breaker
    
    Hotfix to not run into stuck snapshots because of master circuit breaking these requests.
    Given that these requests are very small and much of the memory associated with them is already allocated
    when the circuit breaker kicks in, the risk of this change introducing a higher chance of master running out
    of memory should be very small.
    
    https://github.com/elastic/elasticsearch/commit/60b8a5dabab8c8268943119c8c35a73ab2744af3

commit ea48bc8938f579de035cdaefb5a08c829d9dc893
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Sep 8 12:54:34 2022 +0300

    bp: Ensure not to open directory reader on transport thread
    
    This change adds an assertion making sure that we won't accidentally
    open directory readers using transport threads.
    
    https://github.com/elastic/elasticsearch/commit/9e3b813b6299727279f70d4a896e9dc3e1272677

commit d255188a5d12459e444aeb72d58621d62f437e0b
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Sep 8 11:11:52 2022 +0300

    bp: Add RepositoriesService to createComponents() args
    
    Today we pass the `RepositoriesService` to the searchable snapshots plugin
    during the initialization of the `RepositoryModule`, forcing the plugin to be a
    `RepositoryPlugin` even though it does not implement any repositories.
    
    After discussion we decided it best for now to pass this in via
    `Plugin#createComponents` instead, pending some future work in which plugins
    can depend on services more dynamically.
    
    https://github.com/elastic/elasticsearch/commit/7941f4a47e4670fba74516952916278c0ac68b05

commit e3e27c643d7619693fe37f93aa1fbb4a1af1fb06
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Sun Sep 4 12:16:07 2022 +0300

    bp: Voting config exclusions should work with absent nodes
    
    Today the voting config exclusions API accepts node filters and resolves them
    to a collection of node IDs against the current cluster membership.
    
    This is problematic since we may want to exclude nodes that are not currently
    members of the cluster. For instance:
    
    - if attempting to remove a flaky node from the cluster you cannot reliably
      exclude it from the voting configuration since it may not reliably be a
      member of the cluster
    
    - if `cluster.auto_shrink_voting_configuration: false` then naively shrinking
      the cluster will remove some nodes but will leaving their node IDs in the
      voting configuration. The only way to clean up the voting configuration is to
      grow the cluster back to its original size (potentially replacing some of the
      voting configuration) and then use the exclusions API.
    
    This commit adds an alternative API that accepts node names and node IDs but
    not node filters in general, and deprecates the current node-filters-based API.
    
    https://github.com/elastic/elasticsearch/commit/8a565c4fa61a092eaf8ca4aed9492342a6012874

commit c83379e713c40f2301721362092515d318345d9f
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Sun Sep 4 10:06:09 2022 +0300

    bp: Fix Race in Snapshot Abort
    
    We can be a little more efficient when aborting a snapshot. Since we know the new repository
    data after finalizing the aborted snapshot when can pass it down to the snapshot completion listeners.
    This way, we don't have to fork off to the snapshot threadpool to get the repository data when the listener completes and can directly submit the delete task with high priority straight from the cluster state thread.
    
    https://github.com/elastic/elasticsearch/commit/2f91e2aab7867c8a180e90f7f42de123889aad09

commit bf9396ae4a0ae9d10081cba60b9b267b7e3a9ac8
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Sep 7 15:25:31 2022 +0200

    Turn off translog retention only when shard started
    
    We should only turn off the translog retention when a shard is started;
    otherwise, we can issue unnecessary warn logs.
    
    Backport of https://github.com/elastic/elasticsearch/commit/d8165a3439b
    
    Closes #12828.

commit 2b688977ba8d593305f3c89197de05756342d33f
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Sep 7 15:46:41 2022 +0200

    Fix pgJDBC documentation links
    
    The documentation of the PostgreSQL JDBC driver was restructured
    resulting in broken links pointing to the old structure.

commit 125b87a958e2e7c9860ba8e7ee4b879dd8d7df53
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Sep 7 13:50:51 2022 +0300

    Fix typo in checkstyle cmd
    
    Follows: 7205f2d3f9d577f4332d7fef0de445325b45ca23

commit d52fe7410cdd6fa0e36c1b99c71544be8994b302
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Sat Sep 3 23:05:28 2022 +0300

    bp: Make Snapshot Deletes Less Racy
    
    Snapshot deletes should first check the cluster state for an in-progress snapshot
    and try to abort it before checking the repository contents. This allows for atomically
    checking and aborting a snapshot in the same cluster state update, removing all possible
    races where a snapshot that is in-progress could not be found if it finishes between
    checking the repository contents and the cluster state.
    Also removes confusing races, where checking the cluster state off of the cluster state thread
    finds an in-progress snapshot that is then not found in the cluster state update to abort it.
    Finally, the logic to use the repository generation of the in-progress snapshot + 1 was error
    prone because it would always fail the delete when the repository had a pending generation different from its safe generation when a snapshot started (leading to the snapshot finalizing at a
    higher generation).
    
    These issues (particularly that last point) can easily be reproduced by running `SLMSnapshotBlockingIntegTests` in a loop with current `master` (see #54766).
    
    The snapshot resiliency test for concurrent snapshot creation and deletion was made to more
    aggressively start the delete operation so that the above races would become visible.
    Previously, the fact that deletes would never coincide with initializing snapshots resulted
    in a number of the above races not reproducing.
    
    This PR is the most consistent I could get snapshot deletes without changes to the state machine. The fact that aborted deletes will not put the delete operation in the cluster state before waiting for the snapshot to abort still allows for some possible (though practically very unlikely) races. These will be fixed by a state-machine change in upcoming work in #54705 (which will have a much simpler and clearer diff after this change).
    
    https://github.com/elastic/elasticsearch/commit/d8b43c62838564a700d0ff99f9787bda875997c1

commit 8547aed3be4c851b9907ddb3bda66114480c5a7e
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Sat Sep 3 22:53:08 2022 +0300

    bp: Remove Redundant Cluster State during Snapshot INIT + Master Failover
    
    Similar to #54395 we know that a snapshot in INIT state has not
    written anything to the repository yet. If we see one from a master
    failover, there is no point in moving it to ABORTED before removing it
    from the cluster state in a subsequent CS update.
    Instead, we can simply remove its job from the CS the first time
    we see it on master failover and be done with it.
    
    https://github.com/elastic/elasticsearch/commit/e164c9aaee549af930af12a373ec4080113d377e

commit 34d29c2a98d77b6bf86660ae6e6a1ff2131be530
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 23 15:01:45 2022 +0200

    Always close BatchIterator in BatchIterators.collect
    
    Would make using BatchIterators.collect a bit less error prone, but adds
    some more code for testing purposes.

commit 000c4e36a3d8c99e9e05164b8a81c186a51db4d1
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Sep 6 13:13:35 2022 +0300

    Reflect releases `4.8.3` and `5.0.1`

commit 30eb6051387cb00eac97bad6f25a9e55020a0163
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 6 10:36:17 2022 +0200

    Increase assertBusy maxWaitTime for test_subscription_state_order
    
    The test is currently flaky. This increases the maxWaitTime mostly to
    rule out slow CI as a potential cause.

commit 6b008fb1d063a444537ebb851c09a0ccb31d302a
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Mon Sep 5 16:14:21 2022 +0900

    Remaining BWC for #12754

commit 04f6bd9370424000685118069e30c1c30893d755
Author: Marios Trivyzas <matriv@crate.local>
Date:   Mon Sep 5 14:04:12 2022 +0300

    tests: Fix tests for Apple silicon (M1)
    
    - Increase AST tree to cause `StackOverflowException` in parser
    - Relax double value matching for Literals, providing expected
      precision.

commit 76cd1b3c8974ac787bb4d7ba5d1456542aa03cef
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Sat Sep 3 22:36:59 2022 +0300

    bp: Move Snapshot Status Related Method to Appropriate Places
    
    Lots of things living in `SnapshotsService` for no reason other than
    that `SnapshotsService` provides the `RepositoriesService`.
    Cleaning this up to directly use `RepositoriesService` in the relevant
    transport actions and by that shortening the already very complex `SnapshotsService`.
    
    https://github.com/elastic/elasticsearch/commit/48048646e793193717e8a5c6610138a5de1ac215

commit 7d9391600d6290d8827de490c8e590a5dcb4c49c
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Sep 2 12:43:46 2022 +0300

    bp: Merge feature/searchable-snapshots branch into 7.x
    
    This is a backport of #54803 for 7.x.
    
    This pull request cherry picks the squashed commit from #54803 with the additional commits:
    
        6f50c92 which adjusts master code to 7.x
        a114549 to mute a failing ILM test (#54818)
        48cbca1 and 50186b2 that cleans up and fixes the previous test
        aae12bb that adds a missing feature flag (#54861)
        6f330e3 that adds missing serialization bits (#54864)
        bf72c02 that adjust the version in YAML tests
        a51955f that adds some plumbing for the transport client used in integration tests
    
    https://github.com/elastic/elasticsearch/commit/4d36917e526113c0dff628c36269c25a9664af9d

commit f8750b96f0397f1540363d2da6c214994adce2f9
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Sep 1 15:44:25 2022 +0200

    Add support for SET TIME ZONE as no-op

commit 19b38a93a14117d128137f53ee0c29bc5b7cdecb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 5 12:03:00 2022 +0200

    Bump antlr to 4.11.1
    
    Should come with some performance improvements. See:
    
    - https://github.com/antlr/antlr4/releases/tag/4.10
    - https://github.com/antlr/antlr4/releases/tag/4.11.0

commit 5ffa583d1e7420f0ea9a356c2608c2229e6bce8b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 5 11:26:56 2022 +0200

    Avoid recursion in RowConsumerToResultReceiver if loadNextBatch is immediately completed

commit 7d8227f2694e05e4e6906de2a027d65850aa1696
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 5 10:18:27 2022 +0200

    Avoid recursion on collect if future is immediately completed

commit 957e491815ac231e8b02ca7003574f4d8a258ccc
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Fri Sep 2 18:36:56 2022 +0900

    BWC compatibility with nodes < 5.1
    
    Position could be NULL if column is created on that node

commit 036690cc504c3b31aeaaccfca9f0fae329006463
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 31 10:31:53 2022 +0200

    Optimize EXISTS sub-queries to select at most 1 row

commit 4e96e14f8e6a428cbf97a1464b3b628f8af172d5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 31 10:10:27 2022 +0200

    Don't add order operator to correlated sub-queries
    
    The optimization could result in broken query plans for correlated
    queries, because the order-by could refer to correlated columns.

commit 9b023bc94e45739b999f7af1001a4efb65c0cdd1
Author: baur <baurzhansahariev@gmail.com>
Date:   Tue Aug 30 08:30:36 2022 +0200

    Let adding check constraint on a nested object sub column

commit 666821d1b8f3435c3a3f18db14fc7b17e87faaf1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 30 13:31:55 2022 +0200

    Remove warning suppression from BatchIterators.collect
    
    Forgot to adjust this in https://github.com/crate/crate/pull/12939
    Was a leftover from a intermediate iteration

commit 6709e295038ac0d55ff77d6896af8ccabf57cbfd
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Aug 30 11:04:37 2022 +0200

    Support casts from timestamp (without time zone) to date
    
    Also add support for casting date to timestamp without time zone,
    which was missing as well (probably by mistake).
    
    Closes #12876.

commit 4b559d329127b84352b2ac73132a58c218031b63
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 30 09:10:20 2022 +0200

    Update jdbc used in tests to 4.5.0
    
    - 42.4.1: https://jdbc.postgresql.org/documentation/changelog.html#version_42.4.1
    - 42.4.2: https://jdbc.postgresql.org/documentation/changelog.html#version_42.4.2
    - 42.5.0: https://jdbc.postgresql.org/documentation/changelog.html#version_42.5.0

commit 45ab5df197c9c94c8617cd8270a11838ffa4a2bf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 30 09:52:51 2022 +0200

    Reduce stack size of BatchIterators.collect
    
    Puts the arguments in a class to avoid re-capturing the parameters on each
    `loadNextBatch -> collect` call

commit d1812a29ede508a3f82b7dee618009bcf9907d3b
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Aug 29 16:57:06 2022 +0200

    Fix DateType casts from string and numeric values
    
    Support timestamp string format, ignore any containing time parts.
    Strip the time part of any numeric value so the returning long
    value reflects a date.

commit f353e6766f1192366a1c010d35e5a2457d6a8f73
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Aug 29 15:26:14 2022 +0200

    Convert DateTypeTest to use assertj

commit 18b9a7e49e86b012cf9398979172e1e38fd67724
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 29 15:33:39 2022 +0200

    Make CollectTask.toString synchronized
    
    Not a production issue, but in the test layer we dump the tasks if
    they're still open on teardown, and that could lead to an error:
    
        java.lang.ArrayIndexOutOfBoundsException: Index 0 out of bounds for length 0
            at __randomizedtesting.SeedInfo.seed([12BCA9D9708564B5:BE9EF56F6AA270C1]:0)
            at com.carrotsearch.hppc.AbstractIntCollection.toArray(AbstractIntCollection.java:68)
            at com.carrotsearch.hppc.IntObjectHashMap$KeysContainer.toArray(IntObjectHashMap.java:758)
            at com.carrotsearch.hppc.AbstractIntCollection.toString(AbstractIntCollection.java:80)
            at com.carrotsearch.hppc.IntObjectHashMap$KeysContainer.toString(IntObjectHashMap.java:758)
            at java.base/java.lang.StringConcatHelper.stringOf(StringConcatHelper.java:453)
            at io.crate.execution.engine.collect.CollectTask.toString(CollectTask.java:232)
            at java.base/java.lang.String.valueOf(String.java:4213)
            at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
            at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:457)
            at java.base/java.lang.StringConcatHelper.stringOf(StringConcatHelper.java:453)
            at io.crate.execution.jobs.RootTask.toString(RootTask.java:319)

commit adfd53f9b955ed6f7cf4ca7e1314cb3e30c99362
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 29 16:01:52 2022 +0200

    Reduce shared state in CorrelatedJoinProjector
    
    To rule this out as a cause of flaky tests.
    
    This also replaces `CapturingRowConsumer` with `CollectingRowConsumer`,
    which is used in the multi-phase execution for uncorrelated sub-queries.
    
    Once tests are stable we can try to re-optimize this.
    (If it's even worth doing, creating a row instance is cheap compared to
    what `subQueryPlan.execute` is already doing)

commit 77e20d3c980b035e3362850075f6ab0e2e1f7e2f
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Aug 26 12:34:21 2022 +0300

    bp: Better Incrementality for Snapshots of Unchanged Shards
    
    Use sequence numbers and force merge UUID to determine whether a shard has changed or not instead before falling back to comparing files to get incremental snapshots on primary fail-over.
    
    https://github.com/elastic/elasticsearch/commit/5b9864db2c318b5fd9699075b6e8e3ccab565675
    
    Co-authored-by: Sebastian Utz <su@rtme.net>

commit 3b52bffddf31916d907c7efccf4b35dde3079b23
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 23 17:40:46 2022 +0200

    Remove intermediate SortedMergeIterator interface
    
    `SortedMergeIterator` had a almost full overlap with `PagingIterator`
    I think the code is simpler if we remove the intermediate abstraction.

commit 0943311c48028e5ca86bc464fce384296ea826ea
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 29 12:03:01 2022 +0200

    Remove copy operations from AbstractProjectionsPhase.addProjection
    
    There were two copy operations, at least one would be unnecessary, but I
    think it is even acceptable to remove both, given that `addProjection`
    would create another copy, and replace the reference - partially
    canceling out the mutation protection.

commit 275febb39533837ed989770d068dbafab25b633f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 23 09:45:54 2022 +0200

    Close batchIterator in CorrelatedJoinProjector
    
    `BatchIterators.collect` doesn't close the source `BatchIterator`
    implicitly, leaving resources open.

commit b9e3d45a89abe255eeed82cec6dedeb1e9864679
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 29 10:44:31 2022 +0200

    Update netty to 4.1.80
    
    > comes with a change which improves the performance of HTTP/1.x dramatically when using multiple cores
    
    https://netty.io/news/2022/08/26/4-1-80-Final.html

commit 23b537860f97e7ea9c002632413a94e6880f825e
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Aug 26 11:02:00 2022 +0300

    bp: Improve Snapshot Abort Behavior
    
    This commit improves the behavior of aborting snapshots and by that fixes
    some extremely rare test failures.
    
    Improvements:
    1. When aborting a snapshot while it is in the `INIT` stage we do not need
    to ever delete anything from the repository because nothing is written to the
    repo during INIT any more (in the past running deletes for these snapshots made
    sense because we were writing `snap-` and `meta-` blobs during the `INIT` step).
    2. Do not try to finalize snapshots that never moved past `INIT`. Same reason as
    with the first step. If we never moved past `INIT` no data was written to the repo
    so no need to now write a useless entry for the aborted snapshot to `index-N`.
    This is especially true, since the reason the snapshot was aborted during `INIT` was
    a delete call so the useless empty snapshot just added to `index-N` would be removed
    by the subsequent delete that is still waiting anyway.
    3. if after aborting a snapshot we wait for it to finish we should not try deleting it
    if it failed. If the snapshot failed it means it did not become part of the most recent
    `RepositoryData` so a delete for it will needlessly fail with a confusing message about
    that snapshot being missing or concurrent repository modification. I moved to throw the snapshot missing exception here because that seems the most user friendly. This allows the user to simply ignore `404` returns from the delete API when using it to make sure a snapshot is aborted+deleted.
    
    Marking this as a non-issue since it doesn't have any negative repercussions other than confusing exceptions on some snapshot aborts.
    
    https://github.com/elastic/elasticsearch/commit/9392fca36a0a246dfabaf5103ee24ef30aba3b7b

commit aa9be66dd0bf9c3f2806e4c7041531124cb2989f
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Aug 26 11:39:00 2022 +0300

    bp: Update translog policy before the next safe commit
    
    IndexShardIT#testMaybeFlush relies on the assumption that the safe commit
    and translog deletion policy have advanced after IndexShard#sync returns .
    This assumption does not hold if there's a race with the global checkpoint sync.
    
    https://github.com/elastic/elasticsearch/commit/65713743c2ad899cfe0b294a4668c82c5c81fe38

commit b0918ddeca98051bbe7c76b8f7398c839751f96a
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Aug 26 10:57:44 2022 +0300

    bp: Fix Snapshot Completion Listener Lost on Master Failover
    
    If master fails over before (or we run into any other exception) when removing
    the snapshot from the CS we must still resolve all the completion listeners for
    the snapshot.
    
    https://github.com/elastic/elasticsearch/commit/14b5daad7c9b4ca77169e742706b44e078c65531

commit e4cfc5b1fbe528e80ed00459311084f1a942a1d6
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Fri Aug 26 16:29:19 2022 +0900

    Fix COPY FROM to preserve the implied column order

commit a1d868bb3f6669d922b089645b27bd2f9eb6ad18
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Thu Aug 25 17:52:55 2022 +0900

    Fix `INSERT` to preserve the implied column order
    
    EX)
       // b, a, d, c is the top-level order implied by the stmt
       insert into t(p, b, a, d, c) values (1, 2, 3, 4, 5);
       // {c=1, a={d=1, b=1, c=1, a=1}, b=1} is the sub column order
       insert into doc.t(o) values ({c=1, a={d=1, b=1, c=1, a=1}, b=1});

commit 68b3e84736bb3aedfec22047b8413a836406cda5
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Thu Aug 25 15:46:34 2022 +0200

    Updated the Admin UI to version 1.22.2
    
    It includes a fix for a rendering issue causing jumping behavior on
    selected views in view list.

commit 7208f39d813fb775676b4aef508ad6efa3bb68a8
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Wed Aug 24 22:07:27 2022 +0900

    Fix test: execute_alter_table_add_column_results_in_dynamic_mapping_updates

commit 40cb1dbe0d41f838bce5c83aa0890bc03e6d2475
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Wed Aug 24 17:42:59 2022 +0900

    Fix for UPDATE to preserve the column order implied by its SET clause

commit c7a8726da63f56ffd7ea88f9aabba88e9f8529a8
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Aug 24 13:27:48 2022 +0300

    bp: Resolve some coordination-layer TODOs
    
    This commit removes a handful of TODO comments in the cluster coordination
    layer that no longer apply.
    
    https://github.com/elastic/elasticsearch/commit/6d976e1468400d375c7be4db32ba3cea943a5ce9

commit c89fa373ccba3c218ec9f9d0692cdeb478b471d8
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Aug 24 13:22:46 2022 +0300

    bp: Use VotingConfiguration#of where possible
    
    This resolves a longstanding TODO in the cluster coordination subsystem.
    
    https://github.com/elastic/elasticsearch/commit/5e3b6ab82b8dc8f68f05818cc9e5706e4837c836

commit 803040dde681819f82abcb7edbf320f2f65cb950
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Aug 24 12:48:16 2022 +0300

    bp: Rename META_DATA to METADATA
    
    This is a follow up to a previous commit that renamed MetaData to
    Metadata in all of the places. In that commit in master, we renamed
    META_DATA to METADATA, but lost this on the backport. This commit
    addresses that.
    
    Partially apply:
    https://github.com/elastic/elasticsearch/commit/63e5f2b765f0e28df37e88a52a597c248d2dc4e7
    (other renamings have already been applied)

commit 931422ba6e324a5f46b0a3055771b4ee66664ceb
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Aug 24 12:39:38 2022 +0300

    bp: Rename `MetaData` to `Metadata`
    
    The actual renaming has already been applied, change some
    remaining instances of the old naming.
    
    Relates to: https://github.com/elastic/elasticsearch/commit/5fcda57b37f1d87de116c98b8234affbc29500d1

commit 10a220bfaed71712986f1aad1d15bf6bc66abec8
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Aug 24 11:17:59 2022 +0300

    bp: Disallow negative TimeValues
    
    This commit causes negative TimeValues, other than -1 which is sometimes used as
    a sentinel value, to be rejected during parsing.
    
    Also introduces a hack to allow ILM to load policies which were written to the
    cluster state with a negative min_age, treating those values as 0, which should
    match the behavior of prior versions.
    
    https://github.com/elastic/elasticsearch/commit/0d30b48613acdbf57464f68d5076d651ff3e6b60

commit fdfc9864cd01774686e4976c13839d8691149d2e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 23 11:00:39 2022 +0200

    Allow addressing columns of parent scope without alias
    
    Closes https://github.com/crate/crate/issues/12859
    
    The TypeORM query mentioned in the issue still doesn't work. It requires
    more missing features:
    
    - pg_catalog.col_description scalar
    - oid type
    - regclass type

commit 2f538ab1daf371b2459c0de77b745ab50a1d6b31
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 23 15:05:25 2022 +0200

    Fix eclipse compile errors in TableElementsAnalyzerTest
    
    The eclipse compiler didn't like the
    `TableElementsAnalyzer.analyze(List.of(e1, e2),` construct and couldn't
    resolve the right `analyze` overload.
    
    This also fixes all the raw generics warnings

commit ab987ffdb8aafd25cca87dc765a1f67d7dfe15b0
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Aug 23 11:54:57 2022 +0300

    bp: Describe STALE_STATE_CONFIG in ClusterFormationFH
    
    We mark cluster states persisted on master-ineligible nodes as
    potentially-stale using the voting configuration `{STALE_STATE_CONFIG}` which
    prevents these nodes from being elected as master if they are restarted as
    master-eligible. Today we do not handle this special voting configuration
    differently in the `ClusterFormationFailureHandler`, leading to a mysterious
    message `an election requires a node with id [STALE_STATE_CONFIG]` if the
    election does not succeed.
    
    This commit adds a special case description for this situation to explain
    better why this node cannot win an election.
    
    https://github.com/elastic/elasticsearch/commit/879e26ec067280c461449eae9902bf822c10c937

commit 748b1b725ae17b5fc2310aaa6a634215bd65325d
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Thu Jul 14 14:00:43 2022 -0400

    Fix for duplicate or null column positions
    
    Include table migration logic to fix existing tables with wrong positions

commit 88897f52ec47ec9d8b3e834417706a4a0edaa232
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 23 09:52:09 2022 +0200

    Don't leak _exists function name; print as EXISTS
    
    Follow up to https://github.com/crate/crate/pull/12900

commit 5a3fa0f682f799dfdf268a24ef75ef8c5d669680
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Aug 22 11:23:44 2022 +0200

    Store index.version.created at partitioned table template
    
    In order to expose the correct version a partitioned table
    was created on, we must store it inside the partitioned table
    template settings.
    Already created partitioned tables will use the existing
    incorrect logic of showing the current used version at
    `information_schema.tables.version.created`.
    
    This only relates to a partitioned table as a whole and not
    to dedicated partitions.
    
    Relates to #12853 but won't fix it for existing tables as it isn't possible.

commit 59bd676fde2d06cbd2c647e7dbbd93859950ee76
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Aug 22 11:22:57 2022 +0200

    Convert DocTableInfoTest to use assertj

commit d3cf5612e18a9e73c2d0b7bd6f9b3f26da395e47
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Aug 22 16:22:31 2022 +0300

    Fix usage of CapturingRowConsumer in correlated subqueries
    
    Previously, the `completionFuture` of the consumer was pointing to
    the `batchIterator` CompletableFuture, while the
    `CorrelatedJoinProject#apply()` was returning the composed future.
    Create the `batchIterator` future beforehand, apply the composition
    and set the composed future as the `completionFuture` of the consumer.

commit a16d8f4f054010045fff98ea4eff595b40a2c1f9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 22 15:15:39 2022 +0200

    Add support for EXISTS expression
    
    Closes https://github.com/crate/crate/issues/12888

commit f1803aedf4a943a029b7ded917401c8172a8b099
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 22 12:13:04 2022 +0200

    Make binding of input row for correlated sub-query a bit cheaper
    
    Instead of looking up the outer column positions on each input row it is
    now done once up-front.

commit 5351f586a22a38f3562dc32e156e68ca977c11b4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 17 17:55:16 2022 +0200

    Merge InternalTestCluster into TestCluster
    
    We don't have an ExternalTestCluster because we do those kinds of tests
    within the blackbox folder and in crate-qa via python/cr8

commit de5558056645de75cf013c2ceaa7ac4d38119d88
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 17 16:47:23 2022 +0200

    Cleanup afterInternal in TestCluster
    
    No more 🐎 💩

commit e74a5547524fcab07640c20147764590acf20e12
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 22 11:04:51 2022 +0200

    Support correlated subquery in WHERE clause
    
    Closes https://github.com/crate/crate/issues/12887

commit 45dbfc70634a9df2c53c0278a64f0f05071c3bc0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 22 11:11:49 2022 +0200

    Ensure Collect operator can be re-used with different subQueryValues
    
    The `Collect` operator changed `where` on `.build()`. That's important
    for some optimizations to work, but for upcoming correlated sub-query
    changes it's important to be able to call `.build()` multiple times on
    the same instance without side effects.

commit 71cd93fae5c3962fdfd0b19709bcc25d7d4f3a05
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 22 09:16:06 2022 +0200

    Re-use LogicalPlan.execute for correlated subquery execution
    
    We created two new jobIds. `PlannerContext.forSubPlan` creates a new
    jobId and we had one additional manual call.
    
    Not sure if that was a real problem (maybe cause for flakyness?).

commit 0c96cc098ea5fbdad6f181dff2372340cfdf1409
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Aug 19 11:06:18 2022 +0300

    Update library dependencies to latest versions

commit 045ca38fe948a7ce9542c19a68e9b96b729d56c5
Author: Georg Traar <georg@crate.io>
Date:   Fri Aug 19 12:30:43 2022 +0200

    Improve pg compatibility with string representations of
    boolean values

commit 3b6cd0d54bc619bd7d498dd8cfa63c9643e32c73
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Aug 18 13:49:45 2022 +0300

    Remove unused arg from `DocValuesAggregates#createAggregators()`
    
    Remove `searchPath`

commit a0277c9e19475e90f8583dd4afa65ebe32e8d8e5
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Aug 18 11:33:12 2022 +0300

    Fix issue with aggregate functions on literals
    
    When applying an aggregate function (SUM, MIN, AVG, etc.) on literals an
    `IndexOutOfBoundsException` was thrown since we were trying to get an
    aggregationReference from an empty list. i.e.:
    ```
    SELECT SUM(10) FROM test HAVING COUNT(1) > 0
    ```
    Guard the call to `AggregateFunction#getDocValueAggregator()` with a
    check and return a null if literals are used.
    
    Closes: #12879

commit 0a8be8f83e334c32a2e9070b8e53fd9b01bb9b1c
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Aug 18 13:40:20 2022 +0300

    tests: Refactor `DocValuesAggregatesTest` and use assertj

commit 01ee2d2924ec2a1725a9ff62223005a78604d096
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Aug 17 16:57:09 2022 +0300

    Minor code improvements

commit 80a96bc08dbb2ce76c73703841e7dd0faab46f67
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Aug 17 16:44:56 2022 +0300

    Remove unused method from ColumnValidationException

commit be35f0fbf3719c4cd925835b06eb167ef3c673d8
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Aug 15 18:20:24 2022 +0300

    Fix issue with infinite recursion
    
    The list of references set to the `generatedReference` was
    incorrect and were self referencing the `generatedReference`
    causing an infinite recursion in the `hashCode()` of
    `GeneratedReference` when inserting values or selecting from
    the table.

commit 497a21a40f6823b662f642ef06c89c59e2774a42
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Aug 15 18:18:19 2022 +0300

    Migrate assertions to assertj

commit afebccf38a10f90f60e1cf115496d881603dc3f6
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Aug 15 15:07:23 2022 +0300

    Fix issue with constraint on generated col
    
    Previously, it was impossible to create a table with a constraint on a
    generated column, or add a generated column with a constraint to an
    existing table, i.e.:
    ```
    CREATE TABLE test(
        col1 INT,
        col2 INT GENERATED ALWAYS AS col1*2 CHECK (col2 > 0)
    )
    ```
    or
    ```
    CREATE TABLE test(col1 INT)
    
    ALTER TABLE test ADD COLUMN col2 INT GENERATED ALWAYS AS col1*2 CHECK (col2 > 0)
    ```
    
    Remove validation from `TableReferenceResolver` and implement validation
    with a visitor.
    
    Closes: #12852

commit 24ecb291a0fdb5a43222e99c6cb18ea2987c9e28
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 17 14:42:17 2022 +0200

    Merge SQLIntegrationTestCase into IntegTestCase
    
    Pretty much every integration test uses SQL

commit a3edfcf6e640aa0b031bfda2c48d7a843c646fc9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 17 14:19:25 2022 +0200

    Rename ESIntegTestCase to IntegTestCase
    
    Going to merge SQLIntegrationTestCase into ESIntegTestCase and then the
    SQL/ES distinction is no longer useful.

commit 8e0509120d04cb76593436f19e27087ce6f30eb7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 17 10:21:09 2022 +0200

    Update GH feature template to use forms feature

commit 095bb4256ad8e98388b19f19129e420da9748276
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 16 15:47:49 2022 +0200

    Merge InternalViewInfoFactory/ViewInfoFactory
    
    It's easy enough to create a full `ViewInfoFactory` instance in the
    tests or provide a dummy `Provider<RelationAnalyzer>`.

commit 61a3b79e6a7cc6527fc3731f4c24f1b86fe78b16
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 17 09:19:57 2022 +0200

    Make interval of date_trunc case insensitive
    
    Closes https://github.com/crate/crate/issues/12875

commit 28c09801b462fda1f42da855e688695ff8db7112
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 16 15:00:03 2022 +0200

    Remove TestingBlobTableInfoFactory
    
    We no longer use the ability to manually create `BlobTableInfo`
    instances in the tests, but instead we use `addBlobTable` on the
    `SQLExecutor.Builder` which adds the tables to the cluster state.

commit fa997316b687127da4dafee5753aa5deb56679ac
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 26 13:29:21 2022 +0200

    Add limited correlated subquery support

commit ca81915ce94bee34faf448a403400d46db2c6ec3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 16 09:43:28 2022 +0200

    Use ClusterSettings to retrieve setting values instead of CrateSettings
    
    `ClusterSettings` is used to apply new settings and it keeps a reference
    to the last applied settings (merged with the previous/initial settings)
    
    `CrateSettings` did the same. There is no need for both.
    This makes cluster setting updates a tiny bit cheaper because we no
    longer merge settings an additional time.

commit 61218093086f182b5dc1125e4a5a7812d901c2ab
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 10 21:01:43 2022 +0200

    Add a `Exposed` Property for settings as replacement for the CrateSettings list
    
    It kinda belongs to the setting definition
    
    We could eventually flip this and instead mark internal ones.

commit d94a0e756659db799b68783d6bd674f2e0d89b2d
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Jul 28 17:10:40 2022 +0300

    Update checkout gh action to v3

commit be2781174f6abffa6095f388846e6733690c0461
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 10 21:06:57 2022 +0200

    Remove unused methods from CollectionUtils

commit 8a2b12e22e78f5ebfe9110865ef00db4ee0bb80a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 10 11:39:33 2022 +0200

    Remove deprecated circuit breaker settings

commit 9ae6d123a635703c09206b036835b2fe5231c86d
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Aug 15 17:16:27 2022 +0300

    docs: Fix PostgresSQL link for cancelling requests

commit f1abb3f8e3cffd95e5c7ac927fc65f18490efc41
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 10 11:04:46 2022 +0200

    Remove deprecated zen1 discovery settings

commit 5b91adb1eb736da819c5a54d981984081132d899
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 10 10:01:52 2022 +0200

    Fix unused setup warning in ESIntegTestCase
    
    https://github.com/crate/crate/commit/9e80e3223a397b6803538f7b95e43bfc692283bd
    added the `Callable<Void> setup` block but missed the changes from https://github.com/elastic/elasticsearch/commit/ac2e09b25abc2319e86ea74492edb54458690019

commit 6f069cc9c981cf191902a9e85bfd9d1f2b58c5d0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 8 11:31:46 2022 +0200

    Mention more forked classes in lucene version.properties comment

commit d8f933a56f91f06cfaf0bf3a6946f1c222c62a03
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 8 11:29:05 2022 +0200

    Apply LUCENE-10603 to CustomLucene90DocValuesConsumer
    
    https://github.com/apache/lucene/commit/3e268805024cf98abb11f6de45b32403b088eb5b

commit cb25231b15df87f912a39663d615ab02a38f6007
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 8 11:27:12 2022 +0200

    Apply LUCENE-10623 to CustomLucene90DocValuesConsumer
    
    https://github.com/apache/lucene/commit/fb261e6ff48e5a57d9dff7fd960e21ec2634294d

commit a1edb45ddf1ae4a9bc9295996a8f01e4dd41597d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 8 10:33:16 2022 +0200

    Apply LUCENE-10603 to CrateLuceneTestCase

commit 3868660767e2edad6bbe822389a3021295b01ea0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 8 10:30:51 2022 +0200

    Remove STATIC_LEAK_IGNORED_TYPES from CrateLuceneTestCase
    
    Part of https://github.com/apache/lucene/commit/1fa985438a5519664f731d7bb5e03cd4a4c37a0f

commit a101f5cedfca977b330c93696618653960c6512c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 8 10:24:27 2022 +0200

    Apply LUCENE-10078 to CrateLuceneTestCase

commit cbc1148629451013b764aa8ea66a6ac9c17146d5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 8 10:04:36 2022 +0200

    Apply LUCENE-10574 to CrateLuceneTestCase
    
    https://github.com/apache/lucene/commit/62b1e2a1e9100ffa6f0fa60f899f16a565588bd8

commit ae81feff6d9b4755570f570f867e0efc32c8ea9d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 8 09:52:11 2022 +0200

    Apply "Specialize ordinal encoding for SortedSetDocValues"
    
    https://github.com/apache/lucene/commit/6da55e61521f39e8cfabfbe389b4a4862efd40bd

commit 23f7538692f0617ce7803a6265288f5739ae1f70
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 8 09:40:03 2022 +0200

    Apply LUCENE-10598 to CustomLucene90DocValuesProducer
    
    https://github.com/apache/lucene/commit/90b5d5383f1ced8d567dc02462ac7632a5e5949d

commit 2843a7ff2068401560673370b4a3bd58bd2d643f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 8 09:37:14 2022 +0200

    Update Lucene to 9.3.0

commit 3240acfe4570a54871026b3e06e6282a6c609d1d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 8 09:27:31 2022 +0200

    Update GraalVM to 22.2.0

commit 2e9e151cb206fcdddef0b2c0152ed814028e765b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 8 11:15:56 2022 +0200

    Replace deprecated Tuple with OperationId record in JobsLog

commit d9856810a87f68d5a454f9a0f22e14f9afa3bfc7
Author: baur <baurzhansahariev@gmail.com>
Date:   Sun Aug 7 17:56:40 2022 +0200

    fix NPE on streaming GeneratedReference

commit b99413a770eb332ba81bc38db17eef58db5a7126
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 8 08:57:50 2022 +0200

    Remove ByteUtils
    
    Only `readLongLE` was still in use and for that we can use a VarHandle.

commit 078d0ba94e4e113abaa2a91bf0654967b2104267
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Jul 29 11:25:59 2022 +0300

    bp: Add Caching for RepositoryData in BlobStoreRepository
    
    Cache latest `RepositoryData` on heap when it's absolutely safe to do so (i.e. when the repository is in strictly consistent mode).
    
    `RepositoryData` can safely be assumed to not grow to a size that would cause trouble because we often have at least two copies of it loaded at the same time when doing repository operations. Also, concurrent snapshot API status requests currently load it independently of each other and so on, making it safe to cache on heap and assume as "small" IMO.
    
    The benefits of this move are:
    * Much faster repository status API calls
       * listing all snapshot names becomes instant
       * Other operations are sped up massively too because they mostly operate in two steps: load repository data then load multiple other blobs to get the additional data
    * Additional cloud cost savings
    * Better resiliency, saving another spot where an IO issue could break the snapshot
    * We can simplify a number of spots in the current code that currently pass around the repository data in tricky ways to avoid loading it multiple times in follow ups.
    
    https://github.com/elastic/elasticsearch/commit/0a09e15959439a81b5d2e571998778807de61c0f

commit ce971b2f642ab107766665396ce0f9240330499c
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Jul 28 12:10:16 2022 +0300

    bp: Improve performance of shards limits decider
    
    On clusters with a large number of shards, the shards limits allocation
    decider can exhibit poor performance leading to timeouts applying
    cluster state updates. This occurs because for every shard, we do a loop
    to count the number of shards on the node, and the number of shards for
    the index of the shard. This is roughly quadratic in the number of
    shards. This loop is not necessary, since we already have a O(1) method
    to count the number of non-relocating shards on a node, and with this
    commit we add some infrastructure to RoutingNode to make counting the
    number of shards per index O(1).
    
    https://github.com/elastic/elasticsearch/commit/90ab949415e6a368e659fcc64249897b0c4c909e

commit 98cbeba56b5c9bd1e0126bb06e255a233ece1756
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 27 15:08:55 2022 +0200

    Add an `application_name` session setting
    
    The PostgreSQL JDBC client sets this implicitly. So far this resulted in
    a warning in the logs.

commit 8efb316c42e28321f73820c8a9a947aa4f62dd73
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Jul 28 19:40:22 2022 +0300

    bp: Refactor Inflexible Snapshot Repository BwC
    
    Transport the version to use for  a snapshot instead of whether to use
    shard generations in the snapshots in progress entry. This allows
    making upcoming repository metadata changes in a flexible manner in an
    analogous way to how we handle serialization BwC elsewhere. Also,
    exposing the version at the repository API level will make it easier
    to do BwC relevant changes in derived repositories like source only or
    encrypted.
    
    https://github.com/elastic/elasticsearch/commit/4bb780bc3736924df97d2f11367988ee777e6358

commit 1bf434b40e40515ecd0b720d51b0dc48f7b91496
Author: Marios Trivyzas <5058131+matriv@users.noreply.github.com>
Date:   Mon Aug 1 10:22:00 2022 +0300

    bp: Invoke response handler on failure to send (#12840)
    
    Today it can happen that a transport message fails to send (for example,
    because a transport interceptor rejects the request). In this case, the
    response handler is never invoked, which can lead to necessary cleanups
    not being performed. There are two ways to handle this. One is to expect
    every callsite that sends a message to try/catch these exceptions and
    handle them appropriately. The other is merely to invoke the response
    handler to handle the exception, which is already equipped to handle
    transport exceptions.
    
    https://github.com/elastic/elasticsearch/commit/01d2339883db72bdd2206bb67144c97f3dbdbeb1

commit 4a833a8585eb86c367141549f2f5b4bbd45fd8a1
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Sat Jul 30 13:32:10 2022 +0300

    Fix an issue with `RecordingSortedMergeIterator`
    
    Previously, when attempting to `repeat()` a `ReplayingIterator` was instantiated,
    even if `storedIterables` was empty, leading to an IndexOutOfBoundsException in
    `computeNext()` when calling `iters.get(iterIdx)` on an empty List.
    
    Users could experience this when outer joining (left/right or full) tables (or
    sub-selects) in a multi-node cluster when one of those tables (or sub-selects)
    returned 0 rows.
    
    When `storedIterables` is empty don't create a `ReplayingIterator` but return an
    empty Iterable instead.

commit 8b49e6bd0308c08a79d791b56bc26af0a7e1b97e
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Jul 29 15:24:33 2022 +0300

    Code cleanups in `buildSrc`
    
    - Remove unused methods
    - Replace deprecated attributes
    - Use constant for buffer size
    - Suppress warnings

commit d517806f57e9a7ffa5844e6e27db1401147ca991
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Jul 29 15:23:12 2022 +0300

    Use assertj for assertions in `buildSrc`

commit 2905515b3cd1f5af2df00668e900740bf18edc10
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Jul 27 17:37:42 2022 +0300

    bp: Allow joining node to trigger term bump
    
    In rare circumstances it is possible for an isolated node to have a greater
    term than the currently-elected leader. Today such a node will attempt to join
    the cluster but will not offer a vote to the leader and will reject its cluster
    state publications due to their stale term. This situation persists since there
    is no mechanism for the joining node to inform the leader that its term is
    stale and a new election is required.
    
    This commit adds the current term of the joining node to the join request. Once
    the join has been validated, the leader will perform another election to
    increase its term far enough to allow the isolated node to join properly.
    
    https://github.com/elastic/elasticsearch/commit/ac721938c2276144ed4d2a301c898e8a9cabd705

commit 5bf7d101959f8d64526ddda96f9483aff745da1c
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Jul 27 16:16:28 2022 +0300

    bp: Clarify when shard iterators get sorted
    
    Currently we have two ways to create a GroupShardsIterator: one that will resort the iterators based on their natural ordering, and another one that will leave them in their original order. This is currently done through two constructors, one that accepts a single argument which does the sorting, and another which accepts a second boolean argument to control whether sorting should happen or not. This second constructor is only called externally to disable the sorting.
    
    By introducing a specific method to create a sorted shard iterator we clarify and make it easier to track when we do sort and when we do not as the iterators are externally sorted.
    
    https://github.com/elastic/elasticsearch/commit/9e38125464a291526e32866f8de9b4fd5d572a8c

commit c051de9ff80e13d7e4f4a6075ce94f05ed0a0722
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 27 14:26:03 2022 +0200

    Rework SessionContext into CoordinatorSessionSettings
    
    The relationship between SessionContext and SessionSettings was a bit
    unclear.
    What goes where and what's the difference?
    
    This attempts to clarify things by introducing a
    `CoordinatorSessionSettings` class that replaces the `SessionContext`.
    This is the container for _all_ current session setting values,
    including getter and setter. The name `Coordinator` implies that this is
    _only_ available on coordinator nodes that hosts a session (client
    connection).
    
    The previous `SessionSettings` is a streamable subset of it with the
    settings relevant for execution.

commit a29ad76f3d8ffc2f64fcc2724fc8219f2a241a46
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Jul 27 14:23:25 2022 +0300

    bp: Deciders should not by default collect yes'es
    
    AllocationDeciders would collect Yes decisions when not asking for debug
    info. Changed to only include Yes decisions when debug is requested
    (explain).
    
    https://github.com/elastic/elasticsearch/commit/9d40277d4cb92982f6e29768f60216bf541962c2

commit ddb79c69df993d24f0db6ee9aed1d73ccaafad86
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 27 09:31:25 2022 +0200

    Remove duplicate store ref decrement call
    
    In the `restoreShard` method a `incRef` happens and it is paired with a
    listener that does the `decRef` calls.
    
    This listener is called in the block where we had an additional
    `.decRef` call. There is no other corresponding `incRef`.
    
    Going into a negative count leads to assertion errors.

commit 7c5be846ae63fbdcf4a93a08eaa98af08efc27dd
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Jul 27 10:58:29 2022 +0300

    bp: Ignore timeouts with single-node discovery
    
    Today we use `cluster.join.timeout` to prevent nodes from waiting indefinitely
    if joining a faulty master that is too slow to respond, and
    `cluster.publish.timeout` to allow a faulty master to detect that it is unable
    to publish its cluster state updates in a timely fashion. If these timeouts
    occur then the node restarts the discovery process in an attempt to find a
    healthier master.
    
    In the special case of `discovery.type: single-node` there is no point in
    looking for another healthier master since the single node in the cluster is
    all we've got. This commit suppresses these timeouts and instead lets the node
    wait for joins and publications to succeed no matter how long this might take.
    
    https://github.com/elastic/elasticsearch/commit/00b9098250295b2ff775f07563f38b7a2eaee4e2

commit 476a4803fe82de2d21ff1d088bdb773d6d93b054
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Jul 27 10:04:01 2022 +0300

    bp: Don't Upload Redundant Shard Files
    
    Segment(s) info blobs are already stored with their full content
    in the "hash" field in the shard snapshot metadata as long as they are
    smaller than 1MB. We can make use of this fact and never upload them
    physically to the repo.
    This saves a non-trivial number of uploads and downloads when restoring
    and might also lower the latency of searchable snapshots since they can save
    phyiscally loading this information as well.
    
    https://github.com/elastic/elasticsearch/commit/d8169e5fdcfbc804659cdad119a783be87ff386a

commit 1fc75df1979b4aab8a99d30e5fab2ff70eca67b5
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Jul 26 18:52:20 2022 +0300

    bp: Remove Redundant Loading of RepositoryData during Restore
    
    We can just put the `IndexId` instead of just the index name into the recovery soruce and
    save one load of `RepositoryData` on each shard restore that way.
    
    https://github.com/elastic/elasticsearch/commit/90eb6a020dac8955c1cd99ee8f3c75d1f58bd9e4

commit b0a4dc40be540c7a3fe60e86f4c5a19409614e78
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 26 10:37:29 2022 +0200

    Dump active tasks and threads on timeout in LR tests
    
    `test_deleted_and_recreated_partition_is_also_deleted_and_restored_on_subscriber`
    is flaky and times out sometimes at a `SELECT id, p FROM t1 ORDER BY id`
    
    This should give us some more clues on what could be causing the timeout.

commit bd899c97afee47e68659b3f4c54e805a2c484b66
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Tue Jul 26 14:07:09 2022 +0200

    Improve rendering of 5.0.0 release notes (#12826)

commit 17dd419710397ce304d4caf1b0872da8b289d012
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 26 09:37:03 2022 +0200

    Improve error message of invalid column refs in insert into
    
    Closes https://github.com/crate/crate/issues/12815

commit 930a53a00fd37743c992dcf036e2fe721c85b7d9
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Jul 25 15:42:33 2022 +0300

    Add support for `catalog` in FQNs of tables/columns
    
    Add the ability to prefix FQNs of tables and columns with a catalog name
    on top of the schema, i.e.
    ```
    SELECT * FROM crate.doc.t1;
    SELECT crate.doc.t1.a, crate.doc.t1.b FROM crate.doc.t1;
    ```
    
    Closes: #12658

commit 7180e70e511c4266148b1fa6844245f4826d8bd3
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Jul 25 11:28:24 2022 +0300

    Fix flaky `testTransientErrorsDuringRecoveryAreRetried`
    
    Previously, failed consistenly with:
    ```
    ./gradlew :server:test --tests "org.elasticsearch.indices.recovery.IndexRecoveryIT.testTransientErrorsDuringRecoveryAreRetried" -Dtests.seed=3114F0F908CF65BB -Dtests.nightly=true -Dtests.locale=en-CH -Dtests.timezone=Zulu
    ```
    
    Synchronize all access to the internal state, otherwise
    there are no barriers to guarantee sync access when
    de-/serializing the state.

commit 628c452c0cf27d45f934c023ddc5ff4df656121b
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Jul 25 18:37:29 2022 +0300

    Fix gradle deprecation warnings (prepare for v8.0)

commit 50d1fd0eabd1f1d737de2ff39d59b83e05dcfff1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 25 19:41:11 2022 +0200

    Remove dead updateMapping code from AlterTableClusterStateExecutor
    
    Clarifies a contract. See `AlterTableOperation.addColumnToTable`, the
    `partitionIndexName` is never set and we must never set it.

commit cab25a57246d65ab06fdc02f00d197d499bb0624
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 25 13:50:54 2022 +0200

    Update bundled JDK to 18.0.2+9

commit 442236b2f6b9cae8887c53645ba243ad8737cf1a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 25 13:35:32 2022 +0200

    bp: Fix constructors of NoOpResult
    
    term/version argument was swapped
    
    https://github.com/elastic/elasticsearch/commit/5000ec87caa54517d169918c6615d96ec35894d5

commit 9167df34898550893695eb8f4bf0e4bf9600262e
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Jul 25 16:48:20 2022 +0300

    tests: Add assertj fixes to blame ignore
    
    Follows: https://github.com/crate/crate/pull/12811

commit ae1700bd6d15a44099afcc48290017728ddac95f
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Jul 25 15:02:28 2022 +0300

    tests: use `isExactlyInstanceOf` instead of `isInstanceOf`
    
    Follows: 011d9f20b3377f5b34c92d2644c6532786297a3c

commit bb14b1b5faa254cf556a7f0775374bd7e7ae59c2
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Jul 25 14:25:32 2022 +0300

    tests: fix assertj assertions
    
    `satisfies` always passed, whereas `matches` is the correct one.
    
    Follows: 011d9f20b3377f5b34c92d2644c6532786297a3c

commit 755c04fb0ef260f580c26854f2d812392a78c98b
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Jul 25 14:25:14 2022 +0300

    tests: enrich error message
    
    Follows: 274f3c7cd094578b9009027839bf10d23afcabd5

commit c8b6dd91c1f0ea4d8b7f7330c00105c26d9c9d4d
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Jul 25 14:24:31 2022 +0300

    tests: Remove unused `executeWith` from `SQLIntegrationTestCase`

commit 97ec636ce1fd96177f1260ce75217a10e5f63d5d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 25 11:41:49 2022 +0200

    Deprecate `upgrade_segments` and make it a no-op
    
    See https://github.com/elastic/elasticsearch/commit/3454a094f73e7696446dbd2c0525041293dd4460

commit a9b0ab7f9fa5e3788053f726c39a10254604de9f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 25 10:48:19 2022 +0200

    Fix flaky testShardNotAvailableExceptionWhenEngineClosedConcurrently
    
    Failed with:
    
        java.lang.AssertionError: wait_if_ongoing must be true for a force flush: force=true wait_if_ongoing=false
            at __randomizedtesting.SeedInfo.seed([58A5FC44A946A8B9]:0)
            at org.elasticsearch.index.engine.InternalEngine.flush(InternalEngine.java:1774)
            at org.elasticsearch.index.engine.InternalEngineTests$5.run(InternalEngineTests.java:3267)

commit 49c3c5b4f4c55316615c60005069588c90df35a3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 25 10:20:44 2022 +0200

    Ensure response handlers force execution
    
    We're seeing some test failures with
    
        Some shards are still open after the threadpool terminated. Something is leaking index readers or store references
    
    This PR does two things in an attempt to solve that:
    
    - Ensure tests trigger a failure if a node can't be closed in time by
      throwing an AssertionError
    
    - Force execution of response handlers. If a response is not processed
      it could keep a reference open.

commit 80161b84ceae1de139572d03ee88a6ed97a72d23
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 20 15:38:29 2022 +0200

    Replace deprecated Tuple in XContentHelper.convertToMap

commit 2f042c8b353fbba78ea91209a92bdefeb749b049
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 20 15:25:47 2022 +0200

    Deduplicate/inline getSourceAsMap / sourceAsMap

commit 2ccc7ea4e8bf903f194ae14b0fe6c08526d3e98f
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Jul 22 00:36:41 2022 +0300

    Fix `MapComparator` util
    
    Fix comparison for nested maps (objects), i.e.:
    ```
    m1: {a={b={123}} // 123 Short
    m2: {a={b={123}} // 123 Long
    ```
    `compareMaps(m1, m2)` must return `0` (true)

commit c50c2d3c9a914e5e15ee4d3cd9cb04ccf1d925e5
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Jul 21 20:14:00 2022 +0300

    tests: Add assertj migration to blame ignore
    
    Follows: 274f3c7cd094578b9009027839bf10d23afcabd5

commit 274f3c7cd094578b9009027839bf10d23afcabd5
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Jul 21 16:38:44 2022 +0300

    tests: Replace junit/hamcrest with assertj
    
    Replace junit/hamcrest assertions with assertj
    for all modules except for `:server:`.

commit 4e38931e40d67b67ff0ad9e1d412daaf92373aee
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 20 13:42:57 2022 +0200

    Avoid map.containsKey/.get calls if trace logging is disabled

commit 856260f33c09b0726f5a46864ae18497991b5a7d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 20 16:09:15 2022 +0200

    Reduce amount of indirections in Releasables.close

commit 3bbf8c926e13109ab914969059b6d2fac6a71f44
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Jul 20 19:02:35 2022 +0300

    Add commit org.junit.Assert.xx imports to ignore
    
    Follows: da06dceeb3636650f6afcc6f37c54cd2c33ae275

commit da06dceeb3636650f6afcc6f37c54cd2c33ae275
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Jul 19 17:18:53 2022 +0300

    tests: Import `org.junit.Assert.*` methods
    
    Since tests no longer inherit from `org.junit.Assert`,
    they need to explicitly import the `org.junit.Assert.*` static
    methods they use.

commit 011d9f20b3377f5b34c92d2644c6532786297a3c
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Jul 19 17:08:00 2022 +0300

    tests: Copy and use our own LuceneTestCase
    
    `LuceneTestCase` imported from lucene, extends `org.junit.Assert`,
    which makes almost all our tests (which extend from this class) to not
    be able to use `assertThat()` from assertj unless it's everywhere used
    with fully qualified name, since compiler automatically refers to the
    `org.junit.Assert.assertThat` which is inherited.
    
    To resolve this, we introduce our own `CrateLuceneTestCase` and some other
    classes from the `org.apache.lucene.test.util` package since some of them,
    or their methods are private and/or refer back to the original `LuceneTestCase`
    causing compilation or runtime failures.
    
    Update `:server:testFixtures` module to import `org.junit.Assert.*` methods,
    since with the above change are no longer inherited.

commit 2b66a60541b3a64d7421838379a587436c5a3819
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Jul 19 16:05:21 2022 +0300

    tests: Add dependency to assertj for `:server`

commit 522fa6abf20133fb9251611dd1e4c4b62552f5fc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 20 15:56:32 2022 +0200

    Don't block on store release in RecoverySourceHandler
    
    The store itself supports concurrent ref increments/decrements and the
    code releasing the store doesn't depend on the release getting processed
    synchronous.
    
    Given that there is an assertion that the threadpool is still open it
    should also be safe to assume that the release will happen.
    
    Spotted this while looking into a flaky test:
    
        Cause 2: com.carrotsearch.randomizedtesting.UncaughtExceptionError: Captured an uncaught exception in thread: Thread[id=8888, name=cratedb[node_t1][scheduler][T#1], state=RUNNABLE, group=TGRP-IndexRecoveryIT]
        Caused by: java.lang.AssertionError: Expected current thread [Thread[cratedb[node_t1][scheduler][T#1],5,TGRP-IndexRecoveryIT]] to not be the scheduler thread. Reason: [Blocking operation]
                at __randomizedtesting.SeedInfo.seed([C28BA418648306F3]:0)
                at org.elasticsearch.threadpool.ThreadPool.assertNotScheduleThread(ThreadPool.java:656)
                at org.elasticsearch.common.util.concurrent.BaseFuture.blockingAllowed(BaseFuture.java:92)
                at org.elasticsearch.common.util.concurrent.BaseFuture.get(BaseFuture.java:85)
                at org.elasticsearch.common.util.concurrent.FutureUtils.get(FutureUtils.java:61)
                at org.elasticsearch.indices.recovery.RecoverySourceHandler.lambda$acquireStore$20(RecoverySourceHandler.java:433)
                at io.crate.common.io.IOUtils.close(IOUtils.java:98)
                at io.crate.common.io.IOUtils.close(IOUtils.java:80)
                at org.elasticsearch.common.lease.Releasables.close(Releasables.java:36)
                at org.elasticsearch.common.lease.Releasables.close(Releasables.java:46)
                at org.elasticsearch.common.lease.Releasables.close(Releasables.java:51)
                at org.elasticsearch.common.lease.Releasables.lambda$releaseOnce$2(Releasables.java:105)
                at io.crate.common.io.IOUtils.close(IOUtils.java:98)
                at io.crate.common.io.IOUtils.close(IOUtils.java:56)
                at org.elasticsearch.indices.recovery.RecoverySourceHandler.lambda$recoverToTarget$8(RecoverySourceHandler.java:255)

commit 0ec0690a14480fee999df70e00c463c0523ad7ab
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 20 13:45:09 2022 +0200

    Update jdbc to 42.4.0
    
    https://jdbc.postgresql.org/documentation/changelog.html#version_42.4.0

commit 4cb5c20058c964d8ebef23158cf0a163c701e56b
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Jul 15 17:50:31 2022 +0200

    fix array_upper fnd array_lower on multidimensional arrays

commit 0a0e8cdd7165661e26e048878f0bcaec660c85b0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 20 11:09:11 2022 +0200

    Fix flaky test_types_with_storage_can_be_inserted_and_queried
    
    If the object type randomly uses a shape as inner type the value
    comparison from selected & inserted value fails due to floating point
    inaccuracies.
    This skips the comparison

commit a20de159e50d2d0a6cb48053f7f325085eb1e4a9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 19 16:08:31 2022 +0200

    Fix resolveNodeId error handling in ShardDMLExecutor
    
    `resolveNodeId` in `ShardDMLExecutor` could raise an exception that
    wasn't caught by `BatchIteratorBackpressureExecutor`. This could lead to
    an operation getting stuck.
    
    `testInsertToPartitionFromQuery` failed with:
    
        java.lang.AssertionError: All incoming requests on node [node_s1] should have finished. Expected 0 but got 2456
        Expected: <0L>
             but: was <2456L>
                at __randomizedtesting.SeedInfo.seed([10627E584D438717:877660B1673F5B1]:0)
                at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
                at org.junit.Assert.assertThat(Assert.java:964)
                at org.elasticsearch.test.InternalTestCluster.lambda$assertRequestsFinished$38(InternalTestCluster.java:2219)
                at org.elasticsearch.test.ESTestCase.assertBusy(ESTestCase.java:741)
                at org.elasticsearch.test.ESTestCase.assertBusy(ESTestCase.java:715)
                at org.elasticsearch.test.InternalTestCluster.assertRequestsFinished(InternalTestCluster.java:2216)
                at org.elasticsearch.test.InternalTestCluster.assertAfterTest(InternalTestCluster.java:2195)
                at org.elasticsearch.test.ESIntegTestCase.afterInternal(ESIntegTestCase.java:440)
                at org.elasticsearch.test.ESIntegTestCase.cleanUpCluster(ESIntegTestCase.java:1299)
    
    and:
    
        Cause 5: com.carrotsearch.randomizedtesting.UncaughtExceptionError: Captured an uncaught exception in thread: Thread[id=997, name=cratedb[node_s1][scheduler][T#10], state=RUNNABLE, group=TGRP-PartitionedTableIntegrationTest]
        Caused by: [bs..partitioned.my_table.04132/tZM4exSMQkqYr8f-BLh7MQ] org.elasticsearch.index.IndexNotFoundException: no such index
                at __randomizedtesting.SeedInfo.seed([10627E584D438717]:0)
                at app//org.elasticsearch.cluster.routing.RoutingTable.shardRoutingTable(RoutingTable.java:150)
                at app//io.crate.execution.engine.indexing.ShardDMLExecutor.resolveNodeId(ShardDMLExecutor.java:123)
                at app//io.crate.execution.engine.indexing.ShardDMLExecutor.lambda$apply$4(ShardDMLExecutor.java:160)
                at app//io.crate.execution.engine.indexing.BatchIteratorBackpressureExecutor.resumeConsumption(BatchIteratorBackpressureExecutor.java:214)

commit db91f24ed1dfffd1ec6273791d8f3cfa28819e12
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 19 17:07:55 2022 +0200

    Handle arrays within objects in EqOperator
    
    The EqOperator tried to create a `termQuery` (via `fromPrimitive`) for
    arrays within objects instead of using the array logic.
    
    Detected this via the new
    `test_types_with_storage_can_be_inserted_and_queried` test with seed
    `AA9715AB421D53E7`.

commit 881929a06564cec1918dae94a3c033d5199f3cb9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 19 14:43:33 2022 +0200

    Support selecting _doc['child-col'] with primary key lookups
    
    No changes/fix because we don't document `_doc` in the systems-columns
    documentation.

commit 92414d3f33a41da0482b2da5a53da34c7e4960d8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 19 11:55:36 2022 +0200

    Use configured timeout on dynamic mapping updates
    
    Should speed up `testMappingNewFieldsTimeoutDoesntAffectCheckpoints`
    No release notes entry because the setting is undocumented.

commit 79326a71566cc5acc9a507635fadbf19d635cd7a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 19 11:09:01 2022 +0200

    GHA: Replace gradle-command-action with gradle-build-action v2
    
    eskatos/gradle-command-action redirects to gradle/gradle-build-action
    and the job summary report thing from
    https://github.com/gradle/gradle-build-action/releases sounds
    interesting

commit 6fd414415224aef951e5e87077ff3167f7b133c9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 19 10:20:02 2022 +0200

    Ensure mapping updates are visible in table used in ShardCollectorProvider
    
    Fixes https://github.com/crate/crate/issues/12756

commit c4901cc2d2549a3050b4342eecfae9136d74610a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 18 10:54:28 2022 +0200

    Update netty to 4.1.79
    
    - https://netty.io/news/2022/06/14/4-1-78-Final.html
    - https://netty.io/news/2022/07/11/4-1-79-Final.html

commit b148257aec18ad116f2c7203844fe516e156eb9a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 18 17:34:24 2022 +0200

    Run GHA tests only if java files changed
    
    Should speed up PRs that only touch documentation.
    Jenkins still runs everything

commit 95863241c9eca84065bd338486d85928ecb50c53
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 18 17:23:34 2022 +0200

    GHA: Cancel in-progress jobs if pushing to PR
    
    See https://docs.github.com/en/actions/using-jobs/using-concurrency
    Should reduce the resource usage a bit and may speed up things.

commit f04e93b5e521267e1d81a41d4771f2353557f634
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 19 09:37:07 2022 +0200

    Fix linkcheck failure
    
    We removed the `node.max_local_storage_nodes` setting with 5.0.0. The
    reason the link kept working so far is because inter-sphinx is enabled
    and the released documentation still contained the link.
    
    With 5.0.0 having moved to stable this is no longer the case.

commit 0e455cc47c7c6ad9dd7599bc2a564a08dbaa99eb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 18 17:13:07 2022 +0200

    Run tests on windows only nightly instead of on PR
    
    Windows runners are slow, taking 40-50 minutes compared to ~10 minutes
    (Jenkins) or ~20 minutes (GHA linux)
    
    Most of our code is platform independent, it should be good enough to
    detect windows specific issues with a nightly run instead of on a PR.
    
    Running it on Jenkins windows-runners would be an option, but we'd
    probably need more slaves given our PR load. I think that's currently
    not justified.

commit 5c06608de2bf5c0cdc744f2c24534da3ba54ac88
Author: Georg Traar <georg@crate.io>
Date:   Sun Jun 26 12:20:16 2022 +0200

    Return catalog instead of schema in information_schema tables

commit d312759eb43cc0e85b23788c6924bf43170308b8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 18 14:53:46 2022 +0200

    Reduce overhead of TimestampType.explicit/implicitCast on non-number strings
    
    `Long.parseLong` has quite some overhead on inputs that don't parse
    successfully due to filling in the stacktrace of the
    NumberFormatException that's raised.
    
    This adds a `tryParseLong` variant that is cheaper when parsing fails.
    
        Benchmark                                                      Mode  Cnt  Score    Error  Units
        StringUtilsBenchmark.measure_Long_parseLong_invalid            avgt    6  1.618 ±  0.034  us/op
        StringUtilsBenchmark.measure_Long_parseLong_valid              avgt    6  0.023 ±  0.001  us/op
        StringUtilsBenchmark.measure_StringUtils_tryParseLong_invalid  avgt    6  0.012 ±  0.001  us/op
        StringUtilsBenchmark.measure_StringUtils_tryParseLong_valid    avgt    6  0.026 ±  0.001  us/op
    
    I noticed that this has quite a big impact on COPY FROM imports where
    CSV data contains timestamps

commit 4ff9faf9bc4bb6c6a47994dc0c59e82aef2b1f09
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 18 12:02:49 2022 +0200

    Update jackson to 2.13.3

commit 3bec318d38908c13225f3a0507c5ecd8fce6de0c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 18 11:09:39 2022 +0200

    Try to fix flaky testInsertFromClosedTableNotAllowed
    
    The alter table close might not be fully processed, leading to a:
    
        Expected: an instance of io.crate.exceptions.OperationOnInaccessibleRelationException
             but: <org.elasticsearch.cluster.block.ClusterBlockException: blocked by: [FORBIDDEN/4/Table or partition preparing to close. Reopen the table to allow writes again or retry closing the table to fully close it.];> is a org.elasticsearch.cluster.block.ClusterBlockException

commit b406234b8aa15a27fb384deb812859220a997a33
Author: baur <baurzhansahariev@gmail.com>
Date:   Thu Jul 14 13:51:11 2022 +0200

    Allow group by on array type

commit 16cc413330633746730a2651f73251dec51fc2e8
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Jul 18 11:05:15 2022 +0300

    fix gradle dependency typo
    
    Follows: d8b05ac849a40249de148b5622ce6bda203d76c5

commit 571b9e6df84756bef725a437dee75b39af19bebf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 13 16:41:15 2022 +0200

    Make Gateway stateRecovery non-blocking
    
    I am not entirely sure if this is safe, but the method already took a
    listener and tests pass.

commit 9592be386d85ce313db7854f06149bd248b5edb7
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Jul 15 18:08:37 2022 +0300

    Upgrade version for mockito
    
    Prerequisite to avoid version conflicts of `net.bytebuddy:byte-buddy`
    when we add dependency to `assertj`.

commit d8b05ac849a40249de148b5622ce6bda203d76c5
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Jul 15 17:38:44 2022 +0300

    Add and use properties file for all dependencies

commit dc343d2cb3a2aa6f8fdf6ea8af6c56d2148f6639
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Fri Jul 15 11:43:58 2022 +0200

    Documentation: Fix broken links

commit 710dfad35df219126396014906bc3311f4eafeff
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 13 15:37:10 2022 +0200

    Remove legacyExecute from ESClient

commit 489ede549c2a54a090244c78887ede8406de45f9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 13 15:32:13 2022 +0200

    Remove ListenableActionFuture
    
    Low hanging fruit that relates to https://github.com/crate/crate/issues/11940

commit 854076f5190a58622cd09ded8b75cba280b94e0f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 13 14:58:23 2022 +0200

    Remove ActionRequestBuilder & related components

commit f0f59ea4dbbb14677cb6e1865617f403984b652d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 13 14:53:05 2022 +0200

    Remove ClusterStateRequestBuilder

commit 8be19f973c09d432e8bfac48115bf609d04dfa98
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 13 12:05:40 2022 +0200

    Remove GetIndexTemplatesRequestBuilder

commit c974fb3303ccc52bc77bc327d2a89f650eaaf5dc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 13 11:36:37 2022 +0200

    Remove UpdateSettingsRequestBuilder

commit 052b09ec467b0c6312a1a9c7abe55e7426d0c979
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 13 10:56:04 2022 +0200

    Remove DeleteIndexTemplateRequestBuilder

commit 1e43a7cfe7c7f5fb7cfd2d24ffd2555fde775b87
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 12 17:01:28 2022 +0200

    Remove PutMappingRequestBuilder

commit 4c8832a0e5573ae8aac8b34d7df02e42574364cc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 12 16:41:11 2022 +0200

    Remove unused MappingUpdatedAction

commit 98d9a1504a8c6c4878f6470cf6298ca252be7814
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 12 11:52:29 2022 +0200

    Migrate remaining ActionFuture uses in IndicesAdminClient to CompletableFuture

commit 9ed6ec5eddb54193e0ca755d3469570ab6d0f0c5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 12 11:46:40 2022 +0200

    Remove unused upgrade method from IndicesAdminClient

commit 25dd752e26a569f62c8323b23f3253907e5a8034
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 12 11:31:20 2022 +0200

    Remove IndicesStatsRequestBuilder

commit 6b97714b5cfef3172015b8a3b8a30f63dce484d7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 12 10:50:26 2022 +0200

    Change stats in IndicesAdminClient to use CompletableFuture

commit b0a2c543e66d6f7a00cf377b32e86ad3bb3d5d09
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 12 10:23:02 2022 +0200

    Remove the azure-discovery plugin
    
    Was deprecated in 5.0

commit 54a377923b2f78d7ebb707e81bec621eeb6c4988
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 11 17:05:26 2022 +0200

    Remove cluster_id setting removal from test layer
    
    Hasn't been necessary since https://github.com/crate/crate/pull/6855 or
    even longer.

commit 36f01804765994db0a88083e356d951066612aec
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 11 17:00:06 2022 +0200

    Remove ClusterUpdateSettingsRequestBuilder
    
    It's possible to use SQL in some places and in the remaining places it's
    easy enough to use the execute API.

commit 6e946244fba36828ce51fda2ece7cbb047b3598e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 11 15:55:14 2022 +0200

    Migrate state/nodesStats admin client methods to CompletableFuture

commit c2bb9746078ea344166cc73c53a213002a35a11d
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Jul 12 13:02:52 2022 +0300

    Update mergify backport rules (+5.0, -4.7)

commit 707928f98d1cb2212f6cbf0d86784d6ba3243d1d
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Mon Jul 11 20:40:08 2022 +0200

    Update Apache HttpComponents libraries `httpclient` and `httpcore`

commit 7753a5c8bcd17fc7398f680175e4af66169e77c3
Author: baur <baurzhansahariev@gmail.com>
Date:   Mon Jul 11 17:05:11 2022 +0200

    Bump version to 5.1.0-SNAPSHOT

commit fb24ad598cb9fabfc64f107bf460508809ab73a2
Author: baur <baurzhansahariev@gmail.com>
Date:   Mon Jul 11 14:38:42 2022 +0200

    Release 5.0.0

commit 9523c77b6a071e7b5dc4065b279c3f81dcdb7558
Author: baur <baurzhansahariev@gmail.com>
Date:   Mon Jul 11 11:56:20 2022 +0200

    Reflect release 4.8.2

commit 86fa4e4770de7a051116d084349a6e8db00813e1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 11 10:58:40 2022 +0200

    Remove CreateIndexRequestBuilder

commit 4f4b0a4a147e35e2d7b6b78ae163e6193724586e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 11 10:28:56 2022 +0200

    Remove unused methods from IndicesAdminClient

commit 01372148e6693d3afec25b550b0c8258487cfc00
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 11 10:22:05 2022 +0200

    Migrate deleteTemplate from ActionFuture to CompletableFuture
    
    Relates to https://github.com/crate/crate/issues/11940

commit 00bc9ad7e1ff955ab022c14c15e4dd1829b8379d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 11 10:10:23 2022 +0200

    Migrate putTemplate ActionFuture to CompletableFuture
    
    Relates to https://github.com/crate/crate/issues/11940

commit 1428fcf2dff889f78756e4f8992129264ebe6445
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 11 10:05:30 2022 +0200

    Remove PutIndexTemplateRequestBuilder
    
    Had only a single use

commit 9eef12477b06e4c057b35958afaadf37b05654c4
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Jul 8 08:40:35 2022 +0200

    pass concrete argument types when streaming signature as functionInfo

commit 310e79c41ea7a9adb4e268b8e50f621c55f8a6dd
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Jul 7 14:47:30 2022 +0300

    tests: Fix flaky IndexRecoveryIT#testRerouteRecovery
    
    From debugging locally, seems that the failure comes because the
    throttling is not yet updated, we loop (due to `assertBusy()`) and
    at some point the shard has already moved to nodeB and it doesn't
    exist on nodeA, causing an IndexNotFoundException.
    
    Move the index-shard lookup out of the `assertBusy()` loop, and
    actually assert that there is delay in relocating the shard
    due to the throttling applied.
    
    With this change, locally I didn't encounter a failure due to the
    assertion on the recovery stats' throttling time assertion.

commit 0571cb7c55613057895a500e89cf08c2baf89f71
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Jul 7 14:44:03 2022 +0300

    tests: Use execute() instead of legacyExecute()

commit 6d4afc4ce4b5adc3388da297bdbcf9512f8bdf30
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 6 11:52:42 2022 +0200

    Remove GetSnapshotsRequestBuilder

commit b7d789e7c15fab96376b13de0d7e0426edcd6820
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 6 11:34:58 2022 +0200

    Remove CreateSnapshotRequestBuilder
    
    We should prefer SQL and in the few places where we need the lower level
    API we can use the action/request classes.

commit 25a7c2a1faeca9d22a8d4834f4e6b4e1c82839bf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 6 15:09:09 2022 +0200

    Fix primary key lookup of `bit` values
    
    We store the BitSet bytes in the source and need a decoding step to
    create the `BitString` value.
    
    `implicitCast` is the wrong function for that.
    I considered introducing a `parseSourceValue`, but it seems
    `sanitizeValue` is already a good match:
    
         * Fixes the {@link DataType} of the input {@code value} when its type is
         * slightly different the target {@link DataType}.
         * <p>
         * For example, to fix a type read from source  where `integer` might have
         * been stored as `bigint`. This is mostly in case for the reference
         * resolvers and column expression implementations.

commit 11e94e3b74a67af08ad85c186bc43b02eb6d57eb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 6 14:35:31 2022 +0200

    Support decoding bit text without B' prefix & encode without
    
    Fixes https://github.com/crate/crate/issues/12718

commit b6f59e19405580cc8c3e1017b0327158e627e772
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Jul 6 15:11:38 2022 +0300

    tests: Revert removal of suppress warnings
    
    Follows: 4d15525b3560a4754d725069dad1c43813ffbdd5

commit 8420bb9737628b80edcf45fd18ebe89d2c83ac55
Author: baur <baurzhansahariev@gmail.com>
Date:   Tue Jul 5 16:24:47 2022 +0200

    fix 'array_length > x' on array with duplicates or nulls

commit 240fcadfd471b5b23da768f54dfb6c44c6bb58bb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 6 10:55:07 2022 +0200

    Remove PendingClusterTasksRequestBuilder

commit 77fa9564274ba927c6c9db8562bf58303bbdd226
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 6 10:39:49 2022 +0200

    Remove PutRepositoryRequestBuilder
    
    It is possible to use the action/request directly or SQL

commit 6b697aa5e3f8ef6698469723099219dff7ea6e7e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 5 14:45:31 2022 +0200

    Remove ClusterRerouteRequestBuilder
    
    It's possible to use SQL instead in most places.

commit 6198b2aa77731c64e7b6ab5e07ea47208cc288d0
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Jul 6 13:32:06 2022 +0300

    Update hash in git-blame-ignore-revs

commit c6a13a0f61a57378c2301564f0cf5f3ba773ea50
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Jul 6 09:15:04 2022 +0300

    Enable checkstyle checks for tests/testFixtures
    
    Add suppressions of certain checks for test files and
    enable `checkstyleTest` and `checkstyleTestFixtures` to run
    with github actions on PRs.

commit 7205f2d3f9d577f4332d7fef0de445325b45ca23
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Jul 6 09:13:40 2022 +0300

    Add checkstyle changes to git-blame-ignore-revs
    
    - Add checkstyle changes to .git-blame-ignore-revs
    - Add instruction for devs to use the .git-blame-ignore-revs file.

commit 4d15525b3560a4754d725069dad1c43813ffbdd5
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Jul 6 09:08:22 2022 +0300

    tests: Fix checkstyle warnings
    
    Fix checkstyle warnings for tests.

commit 20d203cf865ae2adc0e565a7410eafb5f01180af
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jul 5 16:37:00 2022 +0200

    Fix infinitive loop on IO errors inside the file reading iterator
    
    If an IO error happens while reading lines from the current URI,
    continue reading on the same reader will lead to an infinitive loop.
    Avoiding this by closing the current reader and continue processing
    optional other URIs.
    
    Fixes #12708.

commit 6f01aec8ad5be5578e9226cffcc3016f8c061301
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 5 15:31:18 2022 +0200

    Support implicit casts with UNION
    
    Follow up to https://github.com/crate/crate/pull/12516
    
    After a discussion:
    
    - Didn't come up with a legitimate technical reason _not_ to support it
    - As per https://github.com/crate/crate/issues/12511#issuecomment-1175030009
      most other DBs allow it
    
    Closes https://github.com/crate/crate/issues/12511

commit f69de1bb0ce4ebe55e5667116cf305eb70a48655
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Jul 5 17:56:15 2022 +0300

    tests: Remove duplicate -Dtests.nightly=true
    
    Remove duplicate entry of `-Dtests.nightly=true` from reproduction cmd.

commit b6fede9b6ad58781f501f41d2251e9f8eb811bf6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 5 13:34:09 2022 +0200

    Remove ClusterHealthRequestBuilder
    
    It is easy enough to use the request class directly.

commit 6d0376e68a6a66ce2957db95b61c40ac9d2b9b49
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 5 11:12:13 2022 +0200

    Migrate `health` in ClusterAdminClient to use CompletableFuture
    
    Relates to https://github.com/crate/crate/issues/11940

commit b788d7f83b41b68d07a280b9d0028956b399cdf4
Author: baur <baurzhansahariev@gmail.com>
Date:   Sun Jun 5 00:16:52 2022 +0200

    PRIMARY KEY columns should have nullable property set to false

commit 808ca8cb9408476375be1b897e9b0f2626fbba1a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 5 10:55:41 2022 +0200

    Remove redundant checks from IsNullPredicate
    
    - `Literal.NULL` is a value symbol, no need for a specialized check.
    - IS NULL must always receive one argument, the `Input` itself on
      evaluate cannot be `null`

commit 7e70f0fb1930ecce1d2f10c80c16b0391db6be53
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 5 10:11:16 2022 +0200

    Ensure IS NULL does not match empty arrays
    
    On an empty array there are no values in the index, causing the
    `FieldExistsQuery` to not match.
    
    That resulted in inconsistent behavior:
    
        cr> select *, xs is null from tbl;
        +--------+--------------+
        | xs     | (xs IS NULL) |
        +--------+--------------+
        | NULL   | TRUE         |
        | [1, 2] | FALSE        |
        | []     | FALSE        |
        +--------+--------------+
    
        cr> select *, xs is null from tbl where xs is null;
        +------+--------------+
        | xs   | (xs IS NULL) |
        +------+--------------+
        | NULL | TRUE         |
        | []   | FALSE        |
        +------+--------------+
    
    The solution is to add a `GenericFunctionQuery` in addition.
    Unfortunately this adds some performance overhead if there are a lot of
    NULL values/empty arrays.
    
    An alternative would be to adjust both query and index code to always
    use the `_field_names` index for arrays, but that has the disadvantage
    of only working for new data.

commit ccb3ced71b0b4eabbf96d6976c85fa40787ffda9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 4 17:48:45 2022 +0200

    Document `array_upper` behavior on empty array
    
    The behavior is surprising enough to justify mentioning it in the docs.

commit de1d721e810a7b03486ef7d7a753bf72c70ce8c3
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jul 4 17:19:45 2022 +0200

    Remove deprecated FunctionInfo and FunctionIdent
    
    Since CrateDB 4.2.0, `FunctionInfo` and `FunctionIdent` are
    superseded by the `Signature` class. We kept both classes
    for compatibility with older nodes and still streamed them.
    This removes theses classes completely while still stream
    a `FunctionInfo` format for compatibility with these old nodes.

commit cfa21c36368fe5a8b5f7bee69ab3970b0ed46400
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 4 16:54:59 2022 +0200

    Group release notes by topic

commit a9ae6e07bfafea8771f559122f5330a89793748b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 4 15:37:11 2022 +0200

    Support character type in array_length queries
    
    Follow up to https://github.com/crate/crate/pull/12672
    Spotted this while working on https://github.com/crate/crate/pull/12696
    
    We had a test for `array_length` that goes through all types,
    but unfortunately it used `array_length(..) >= 2` as query which doesn't
    trigger the `NumTermsPerDocQuery` path but instead uses the
    `GenericFunctionQuery`.
    
    Changing the query to `> 1` makes it test the specialized code path.

commit 43a996010438ab8784c19269cab14932e02d3a6a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 4 12:07:12 2022 +0200

    Optimize `arr = []` queries
    
    We can use the same doc-value count as approximation before running the
    generic function filter.
    
    This helps a lot for tables where there are few empty arrays:
    
        Q: select count(*) from t_arrays_biased_5_elements where xs = []
        C: 1
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |     1183.464 ±  941.087 |    519.783 |   1125.056 |   1426.058 |   6537.926 |
        |   V2    |      166.165 ±  656.880 |     26.856 |     36.494 |     46.460 |   7236.325 |
        ├---------┴-------------------------┴------------┴------------┴------------┴------------┘
        |               - 150.75%                           - 187.43%
        There is a 100.00% probability that the observed difference is not random, and the best estimate of that difference is 150.75%
        The test has statistical significance
    
    And adds a slight cost to tables where the majority of the arrays is
    empty:
    
        Q: select count(*) from t_arrays_biased_empty where xs = []
        C: 1
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |      429.168 ±  400.471 |     84.141 |    246.755 |    831.188 |   2981.456 |
        |   V2    |      457.291 ±  407.171 |     85.589 |    403.508 |    833.148 |   3217.098 |
        ├---------┴-------------------------┴------------┴------------┴------------┴------------┘
        |               +   6.34%                           +  48.21%
        There is a 51.34% probability that the observed difference is not random, and the best estimate of that difference is 6.34%
        The test has no statistical significance

commit a233b1e9a912651b7dceaba3d3f5ed7c255918fc
Author: baur <baurzhansahariev@gmail.com>
Date:   Mon Jul 4 11:11:14 2022 +0200

    don't overwrite formattedGeneratedExpression with formattedDefaultExpression on map

commit 8def93614b9afb473f0bc8461e2d2dc0ac480132
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jun 10 13:58:51 2022 +0200

    Fix cast to `regclass` to be aware of the current search_path
    
    While casting to `regclass`, the used regclass type must be
    constructed using the current defined `search_path` to create
    the correct relation OID.
    
    Also use the SQL parser to parse the String value on cast from String
    to RegclassType to ensure only valid relation names are used.
    
    Fixes #12586.

commit a2fe3c759bbc4f4acabbf12d717431f32b96ef0a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 29 18:03:46 2022 +0200

    Support using a subscript expression on an alias within ORDER BY
    
    Closes https://github.com/crate/crate/issues/7644
    
    Some unit tests required updates because the symbol now gets normalized
    and normalization drops the alias.

commit 607fa6106a5f9316fdc3c2eb8ca788ee59e8e86d
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Jul 1 16:40:26 2022 +0300

    Fix flaky `testRestoreLocalHistoryFromTranslogOnPromotion`
    
    Previously, it was failing in some cases (mainly with
    `-Dtests.nightly=true`) when there are only few operations
    and maxSeqNoOfUpdatesOrDeletes is greater than
    maxSeqNoOfUpdatesOrDeletesBeforeRollback.
    
    Also use the max of the 2 random checkpoint variables, to
    use in the conditional assertion.

commit cf8539f9b0b7eca8a0e227eaa75b8ee6bb59d49f
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Jul 1 09:55:56 2022 +0200

    add support of the CharacterType to the HyperLogLogDistinctAggregation

commit ff49f59ae05172b2ad4ab005b9921dbcfad54720
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 29 13:48:13 2022 +0200

    Support array element access via subscript on top of key lookups
    
    I suspect some refactoring around the subscript handling made the
    limitation artificial.
    
    Accessing a sub-element of a nested array is still not supported.
    
    Closes https://github.com/crate/crate/issues/10322

commit 88cb6725bb257b10a88c29f43af99a9889d591f7
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jun 29 14:44:09 2022 +0200

    Change `StringUtils.endPad` to use string concat + repeat
    
    Based on a JMH benchmark, using concat + repeat performs better
    than using a StringBuilder.
    
    ```
    Benchmark                           Mode  Cnt         Score         Error  Units
    CharacterTypeTest.padConcatRepeat  thrpt   25  95202620,469 ± 3391085,804  ops/s
    CharacterTypeTest.padCustom        thrpt   25  46869678,245 ±  933217,198  ops/s
    CharacterTypeTest.padStringUtils   thrpt   25  35043663,237 ±  835865,710  ops/s
    ```
    
    The `padCustom` solution used a char buffer + loop, similar to how
    `String.repeat` is implemented, but results show a worse perfomance,
    so it is dropped in favour of `repeat`.

commit 3c696d050d611a447e9a19d2b2aff3562b60f87f
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jun 29 12:44:06 2022 +0200

    Remove unused declarations from DataTypes

commit 56a4474add1a531f8e81b1fb3f41be1575833fc4
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jun 29 12:42:35 2022 +0200

    Remove unused methods and inner classes from KeywordFieldMapper

commit 47b0a4bea5a8237a0c99fb67d59486a2aceea1db
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jun 29 12:40:58 2022 +0200

    Add missing data types to types list at HTTP iface documentation

commit 1866a331f90aaaeabc6a789a2c11cee2aac5c611
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jun 23 13:54:03 2022 +0200

    Add support for the `character` data type
    
    Implement a storable fixed-length, blank padded `character(n)`
    data type, incl. it's aliases `character`, `char(n)` and `char`.
    The length limit defaults to `1` if not explicit defined.
    Values inserted with a length lower the defined one will be
    right padded with whitespaces.
    
    See https://www.postgresql.org/docs/14/datatype-character.html.

commit 8785042ff7bb70d9e5e6463e1c92baedc5a89205
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jun 28 10:54:43 2022 +0200

    Fix type alias for `byte`, it must be `"char"` instead of `char`
    
    The `byte` data type was aliased to `char` for PG compatibility,
    but `char` is a fixed-length, blank padded, multibyte type, whereas
    the correct single-byte corresponding PG type is `"char"`.

commit 95d5566b6e25f32276cf52ba1df200663fba0ecc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 29 10:31:56 2022 +0200

    Replace deprecated DocValuesFieldExistsQuery/NormsFieldExistsQuery

commit 44cd9c059ba3d039c97d6a437128e684178ad7aa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 28 17:15:46 2022 +0200

    Allow cast from bigint to regclass
    
    Casts from int to regclass are already supported. We can allow casts
    from bigint to regclass as well - as long as the values fall into int
    range.
    
    Closes https://github.com/crate/crate/issues/12648

commit 6c16aa3e0d7e16d237c8fe5c29e0466bd82db0a2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 29 09:58:47 2022 +0200

    Prevent `IS NULL` from matching rows without NULL values
    
    We created a NOT term query on `_field_names`, but if the index option
    is NONE, `_field_names` terms are not created.
    
    Also closes https://github.com/crate/crate/issues/8524

commit ccde62a96cfee582056d18ec8345529e07422e89
Author: Georg Traar <georg@crate.io>
Date:   Tue Jun 28 21:46:12 2022 +0200

    Add empty pg_shdescription table

commit aefd4a221d835f35a917cdbf4bc2249daf010a0a
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Jun 28 18:38:13 2022 +0300

    Fix PostgreSQL wire protocol simple query on error
    
    For SimpleQuery execution, when the `session.execute()` returns
    a `CompletableFuture`, then a `DelayableWriteChannel` is used which
    normally it would be flushed when the future bound to the
    `ChannelFuture` completes. When an error occurs though, during
    `session.sync()`, we call the `Messages#sendErrorResponse()` and in turn
    the `Messages#sendReadyForQuery`, using the `DelayableWriteChannel`
    which is not bound to any future, and those messages remain bufferred
    forever, and the client hangs.
    
    Call `channel.discardDelayedWrites()` to force the flushing of the
    buffer.
    
    See also: https://github.com/crate/crate/pull/12044
    Relates to: https://github.com/crate/crate/issues/12646 (`psql` hangs
    for the insert statement failure)

commit 08a8d1973a63b5136ec7cdbafd6f9473e4e3708b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 28 09:38:57 2022 +0200

    Deprecate the azure discovery plugin
    
    Because of https://docs.microsoft.com/en-us/azure/virtual-machines/classic-vm-deprecation
    
    It is unclear how much use the plugin had given that a lot of
    deployments now happen on Kubernetes

commit de23ab452c4877042b8e99a8d01caf3485c98628
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 28 16:25:19 2022 +0200

    tests: Handle `null` methodName in ReproduceInfoPrinter
    
    If there are execution errors on a class level the `methodName` can be
    null.
    
    Got the following output:
    
        REPRODUCE WITH: ./gradlew :server:test --tests "io.crate.integrationtests.MetadataTrackerITest.null" -Dtests.seed=BC8172C1529AD02F -Dtests.locale=en-US -Dtests.timezone=Europe/Berlin

commit e9542f2e9e1668779ebde442f5e9f93950e0485a
Author: baur <baurzhansahariev@gmail.com>
Date:   Tue Jun 28 10:49:04 2022 +0200

    make settings number_of_routing_shards and store.type final

commit 404431091ae58b667ae0268ebec7815d105c7876
Author: baur <baurzhansahariev@gmail.com>
Date:   Tue Jun 28 10:39:16 2022 +0200

    strip 'index' prefix in error messages

commit b792fc2589ada0e787e480743a972757705dddb8
Author: baur <baurzhansahariev@gmail.com>
Date:   Thu Jun 23 15:29:26 2022 +0200

    allow updating non-final settings on closed tables

commit 28dc47190bf4cd8a31fcd645f7dc74532e8cde25
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 28 12:04:57 2022 +0200

    Fix NPE in maybeRefreshReaders
    
    Follow up to 3aaa741bab643fe5c23f07c203915ebb160d428a
    
    Some tests got flaky, e.g. `io.crate.integrationtests.MetadataTrackerITest.test_deleted_partition_is_replicated`
    
        java.lang.NullPointerException: Cannot invoke "org.elasticsearch.index.IndexService.getShard(int)" because "indexService" is null
            at __randomizedtesting.SeedInfo.seed([1FC73DD75B589FAC:FE441B7A365B5BE4]:0)
            at io.crate.execution.jobs.SharedShardContexts.maybeRefreshReaders(SharedShardContexts.java:83)
            at io.crate.execution.engine.fetch.FetchTask.start(FetchTask.java:229)
            at io.crate.execution.jobs.RootTask.start(RootTask.java:198)
            at io.crate.execution.jobs.RootTask.start(RootTask.java:184)
            at io.crate.execution.engine.JobLauncher.setupTasks(JobLauncher.java:268)
            at io.crate.execution.engine.JobLauncher.execute(JobLauncher.java:172)
            at io.crate.planner.operators.LogicalPlanner.executeNodeOpTree(LogicalPlanner.java:536)

commit 7d08fb47f084b83a38691bd667252f0b6fa4df82
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 28 09:51:11 2022 +0200

    Support ORDER BY + LIMIT 0 in SortingTopNProjector
    
    Closes https://github.com/crate/crate/issues/12621

commit 3aaa741bab643fe5c23f07c203915ebb160d428a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 27 11:24:34 2022 +0200

    Fix refresh after idle for queries with fetch operation
    
    The FetchTask eagerly acquired the index searcher without calling
    `awaitShardSearchActive`.
    
    This makes `Task.start` optionally asynchronous. This seemed to have the
    least impact - otherwise `createContext` and possibly
    `getOrCreateContext` would need to return a Future and that would've had
    a much bigger impact.
    
    Fixes https://github.com/crate/crate/issues/12102
    
    The following reproduction shows that this only affected queries with
    fetch:
    
    ```
    crash <<EOF
      DROP TABLE IF EXISTS source_table;
      DROP TABLE IF EXISTS sink_table;
      CREATE TABLE source_table (txt TEXT, db DOUBLE);
      CREATE TABLE sink_table (txt TEXT, db DOUBLE);
    EOF
    
    sleep 45s
    
    crash <<EOF
      INSERT INTO source_table (txt,db) SELECT 'Hello World', 10 FROM generate_series(0,1,1);
    EOF
    
    sleep 5s
    
    crash <<EOF
      INSERT INTO sink_table SELECT txt, db FROM source_table;
    EOF
    
    sleep 5s
    
    crash <<EOF
      SELECT * FROM source_table LIMIT 100;
    EOF
    
    crash <<EOF
      SELECT * FROM sink_table limit 100;
      SELECT db FROM sink_table order by db limit 100;
      SELECT DISTINCT txt FROM sink_table;
    EOF
    ```

commit 4f52807ca03a7b5708daad31a7aff6c797dfff9f
Author: Georg Traar <georg@crate.io>
Date:   Sun Jun 26 11:03:53 2022 +0200

    Switch pg_node_tree representation to string

commit d6df4c714c36084c16980e6f96676b343f864866
Author: Georg Traar <georg@crate.io>
Date:   Sun Jun 26 11:18:06 2022 +0200

    add pg_get_partkeydef function

commit 4912a2a620f3a1d80d7770146066c019f82f89f3
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Jun 27 11:33:25 2022 +0300

    Fix: throw exception when insert in parted table
    
    Fix an issue, throwing an `IllegalArgumentException` when attempting to
    insert into a partition table, using less columns than the ones
    participating in the `PARTITIONED BY` clause.
    
    Fixes: #12646

commit 8665d7886c1d76158550447543ed7fff262adc80
Author: Georg Traar <georg@crate.io>
Date:   Sat Jun 25 17:41:59 2022 +0200

    pg_get_expr should also allow 3 args

commit 2c99e2ff38f2415548ac77c4a25335d7ab07a8f1
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Wed Jun 15 10:13:29 2022 -0400

    Define a node setting, legacy.table_function_column_naming
    
    Which can disable a1504e7

commit 8ca42e2e7528484cd54de37af1fd0f09f668b50b
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Thu Jun 2 15:03:50 2022 -0400

    Modify column names returned from table functions
    
    When a table function is returning a base type,
    the table function name should be used as the column name

commit a38267c4211e9318c4b80f80ab883887d8e2f9eb
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Jun 22 18:48:33 2022 +0300

    tests: Fix printed gradle reproduction line
    
    `-Dtests.class/-Dtests.method` don't work to test a specific
    class/method with gradle. Instead, `--tests="<class>.<method>"`
    must be used.

commit e54f97121051246a93b13fb3c6743f15d8801301
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Tue Jun 21 22:29:28 2022 +0200

    Updated Admin UI to 1.22.1
    
    This includes an optimization to the web fonts. Admin UI now stops
    making requests to external resources completely.

commit 5bdac7125e53f515b118d9fb09de733ca767dd6e
Author: Niklas Schmidtmer <niklas@crate.io>
Date:   Tue Jun 21 13:21:50 2022 +0200

    Add a note that changing codec only applies to newly written segments

commit f058924bc27c60e77b71d98cae11a5afd1d9e7dc
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Jun 22 16:52:20 2022 +0300

    Remove enterprise licence header from checkstyle
    
    - Remove the enterprise licence header from checkstyle since there is no
      code using it.
    - Use default filename for checkstyle rules (rules.xml->checkstyle.xml)
      (helps when using the IntelliJ checkstyle plugin).

commit 5cf2caaf23f13f3ff3d5760ce1e33badcf324fe4
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Jun 22 12:02:40 2022 +0200

    Remove not-null contrsaints from the pg_constraint table

commit 83480f86777f88de0baa7138f5f82da88eda4976
Author: baur <baurzhansahariev@gmail.com>
Date:   Mon Jun 6 17:39:26 2022 +0200

    populate pg_catalog.pg_constraint.conkey with PK and CHECK constraint column positions

commit 941e22bb9ef2fc25f08b3ca78a4650c9689c4c9d
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jun 21 11:52:52 2022 +0200

    Fix flaky `testFailsToStartIfDowngraded` test
    
    Since CrateDB 4.4.0, commit https://github.com/crate/crate/commit/f939b02fe79,
    downgrading a CrateDB node to a previous hotfix version is supported.
    Thus the used `tooNewVersion` method used inside the tests must reflect
    that.

commit d7f0c3bcd5cb0029a989fb159e8b8251675aa8be
Author: Georg Traar <georg@crate.io>
Date:   Sun Jun 19 14:44:25 2022 +0200

    Add pg_get_serial_sequence scalar function

commit 228a8b844422c1c0a9a5e91eec14d0c7f269a0ea
Author: baur <baurzhansahariev@gmail.com>
Date:   Mon Jun 20 08:27:21 2022 +0200

    allow group and order by null ordinal, casted to a specific type

commit a97abbabc6039d2284523546830c5a8a1859d686
Author: Georg Traar <georg@crate.io>
Date:   Sun Jun 19 13:36:44 2022 +0200

    Add identity columns to information_schema.columns

commit d5365b579d6735429324802869504839ea8eb7eb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 15 16:37:34 2022 +0200

    Remove assertions from ReadOnlyEngine
    
    Some MetadataTrackerITest cases sometimes fail because when we delete a
    subscription the engine temporarily changes to a `ReadOnlyEngine`, this
    could trigger the assertions in ReadOnlyEngine because of concurrent
    peer recovery operations.
    
    It should be okay to let those fail with the
    `UnsupportedOperationException` (?)

commit adc18e52b81bacc0fd76a15aae71ff62afe6b52e
Author: Georg Traar <georg@crate.io>
Date:   Thu Jun 16 12:32:25 2022 +0200

    Add pg_views and pg_tables pg_catalog tables

commit 3c05a23279c36ec225e816dfdd64b3d5e97dc938
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jun 17 09:33:05 2022 +0200

    Add `SUBSTRING` to non-reserved SQL keywords
    
    Additionally, the implementing function `substr` is registered
    under the alias `substring`.
    
    This enables support for using SUBSTRING with the generic function
    call syntax and improves PostgreSQL compatibility.
    Although this syntax for SUBSTRING is not official documented,
    neither at PostgreSQL nor by the SQL standard, it is indeed
    supported by PostgreSQL and used by applications like e.g.
    Metabase (see #12620).
    
    Note that this differs from the SQL standard wheras `SUBSTRING`
    is defined as a reservered keyword.

commit a8b318a5d9c73f4836bd8e71d02a0447d7ccd8e1
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Jun 16 10:53:53 2022 +0300

    parser: Fix grammar warning
    
    Fix grammar to remove warning mentioning rule that leads to empty
    statement.
    
    Follows: 75378b32577829512843e20128b828864f545343

commit 3c1a1e8e453e76a3828176bcad9ef33084a58c5f
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Jun 15 11:12:57 2022 +0300

    parser: Add `FETCH` to non-reserved keywords
    
    Originally, `FETCH` was added as a reserved keyword,
    following the PostreSQL grammar. Changed to non-reserved
    to avoid a breaking change for the users.
    
    Follows: 056950bd01c6b910f0acc77da11b7e5d7ab90218

commit 244f9dcf19a4711a6e09a6c1f7e75ea248789f81
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 15 13:59:07 2022 +0200

    Remove unused properties from IndexService

commit 1e060c8c4ec05cd5da049545f91c5dec3b6c03a9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 15 10:58:43 2022 +0200

    Update gha workflow to add PRs to project beta board

commit be9eaf9d004fe65d8a187fe69235d2d65fe81362
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 14 12:01:41 2022 +0200

    Reduce log level to info in ShardReplicationChangesTracker if closed

commit 936ef527e00635bbfedca0e86346d556acc09238
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 14 12:00:25 2022 +0200

    Stop logical replication shard tracking in beforeIndexShardDeleted
    
    Should reduce the window a bit in which shard tracking operations can
    unnecessarily fail due to the shard being deleted.

commit 056950bd01c6b910f0acc77da11b7e5d7ab90218
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Jun 13 17:11:56 2022 +0300

    Add support for FETCH FIRST xxx ROWS ONLY
    
    To improve compatibility with PostgreSQL, add support for the
    `FETCH [FIRST | NEXT] <noRows> [ROW|ROWS] ONLY` statement, which
    is an alternative of `LIMIT <noRows>`.
    
    Closes: https://github.com/crate/crate/issues/11540

commit 75378b32577829512843e20128b828864f545343
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Jun 10 15:49:07 2022 +0300

    Allow any order between OFFSET and LIMIT clauses
    
    Allow `OFFSET` and `LIMIT` clauses to be declared in any order, i.e.:
    ```
    SELECT * FROM t LIMIT 10 OFFSET 5
    ```
    or
    ```
    SELECT * FROM t OFFSET 5 LIMIT 10
    ```
    
    This improves compatibility with PostgreSQL.

commit 4e4ca1d6ec78470e5ae53d5b3b18c8b59b82d9e8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 13 16:13:39 2022 +0200

    Wait for pending logical replication operations on test teardown
    
    Right after deleting the subscription the teardown logic asserts
    sequence numbers. If the logical replication service is still running
    restore operations or if the metadata tracker is still running it is
    possible that the cluster is still ingesting records, which means that
    primary and replica sequence numbers can still diverge. That would trip
    the assertions in teardown.
    
    This should fix one potential cause of MetadataTrackerITest test
    failures.

commit 8d04f3d9e9e7f2a25780e22d22f99479cbd87de5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 13 16:50:09 2022 +0200

    Include statement in timeout exceptions in tests
    
    Should make it a bit easier to debug issues.

commit 739b65d9a0ae6acad5b57082d6a5be2c0e891754
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Jun 13 14:28:17 2022 +0300

    tests: Remove unused imports
    
    Follows: d7e5020c926c4ac5a0e7f57de54ce04ee7585929

commit f2d8805629e57b574c0b481778d21085d1f7cbb4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 13 15:09:21 2022 +0200

    Remove stats from IndicesQueryCache
    
    We don't expose the stats, so there is no need to generate them.
    Ran into this while investigating a UnsafeBootstrapAndDetachCommandIT
    test failure.

commit 535e626c7a145928209eda67a7c53380d3dd41c5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 13 10:54:18 2022 +0200

    Update netty to 4.1.77
    
    https://netty.io/news/2022/05/06/2-1-77-Final.html

commit 503d484f23ddc07c5d95141e708b90ce1918583c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 13 11:08:02 2022 +0200

    Try to fix flaky IndexRecoveryIT.testRerouteRecovery
    
    `assertBusy` only retries on assertion errors.
    
    The original test source uses a NodesStats request:
    
    https://github.com/elastic/elasticsearch/blob/747e1cc71def077253878a59143c1f785afa92b9/server/src/internalClusterTest/java/org/elasticsearch/indices/recovery/IndexRecoveryIT.java#L495-L510

commit d7e5020c926c4ac5a0e7f57de54ce04ee7585929
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Jun 10 18:23:12 2022 +0300

    tests: Fix sql-parser tests regarding assertThrows
    
    Previously, the tests were using `assertThrows` and they didn't
    assert the exception message, instead the string provided was a
    failure string for junit, in case the assertion fails. Replaced
    all usages with our custom `assertThrowsMatches` which is copied
    from the server package (which is not accessible in the parser
    module).
    
    Adjusted some expected messages to match the actual error thrown.

commit 91c45100dc5c1ec9be93b3a5238676a449b959c9
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Jun 9 11:12:09 2022 +0300

    tests: Add tests for null number of clustered shards
    
    Add tests to validate that when `null` is provided as number of shards for
    the `CLUSTERED INTO <numShards>` statement, the default value for
    the cluster is used.

commit 0c787202b6ce82648a6c68418d60233ac25650c4
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Jun 9 11:10:25 2022 +0300

    Fix NPE for rerouting statements with null shard id
    
    Throw an error message instead of NPE, when `null` is passed as shard Id
    for the rerouting statements (MOVE, ALLOCATE, PROMOTE, CANCEL).

commit aafaec6325cb6758918f93d849aba4fb3f598251
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Jun 9 11:07:55 2022 +0300

    tests: fix method naming (typo)

commit 6a4f5ed0fde340ca7d81070e6c4bcda7e03cfaa8
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Jun 8 16:31:32 2022 +0300

    Add extra syntax support for LIMIT & OFFSET
    
    To improve compatibility with PostgreSQL, add the exact syntax
    which is supported by PostgreSQL for `LIMIT` and `OFFSET`:
    
    ```
    LIMIT ALL
    LIMIT NULL
    OFFSET 10 ROW
    OFFSET 10 ROWS
    OFFSET NULL
    ```

commit 95e48836045fd78b4b142370bb89d12eb32b1036
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Wed Jun 8 10:16:47 2022 +0200

    Improve test case when running on Windows
    
    When running the test suite on Windows, it complained when the sources
    had been installed on drive `C:` instead of drive `D:`, like what GHA
    apparently does. With the patch, it works in both occasions.

commit 2efdca8cf0454f019ce1c4d86d0fee027627cb26
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 8 16:27:20 2022 +0200

    Move CustomLucene90DocValuesFormat to io.crate.lucene.codec

commit e4c7a95019007131e3295fc60384e9a5005ff09e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 8 14:34:05 2022 +0200

    Make termsDict compression optional again
    
    Enabling terms dict compression by default has a significant performance
    cost on several query patterns.
    
    This re-adds the best-speed mode based on https://github.com/apache/lucene/commit/a7a02519f0a5652110a186f4909347ac3349092d
    
        # Results (server side duration in ms)
        V1: 5.0.0-41d5e54eda11ac1ac80972865a4657faa0d44394
        V2: 5.0.0-fd94871ae11cceb04daa0e16ebc5e310257e6de4
    
        Q: select t1."sourceIP" from uservisits_large t1 inner join uservisits_small t2 on t1."sourceIP" = t2."sourceIP" limit 1000
        C: 1
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |      948.176 ±  107.654 |    866.460 |    929.739 |    950.093 |   1368.909 |
        |   V2    |      324.894 ±   65.198 |    270.635 |    296.170 |    346.000 |    531.837 |
        ├---------┴-------------------------┴------------┴------------┴------------┴------------┘
        |               -  97.92%                           - 103.36%
        There is a 100.00% probability that the observed difference is not random, and the best estimate of that difference is 97.92%
        The test has statistical significance

commit 5f0d8a0792f5c6fa2f90f42518b39abb242f21c2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 8 13:50:24 2022 +0200

    Copy Lucene90DocValuesFormat from Lucene
    
    This is a 1:1 copy with re-formatting to make checkstyle happy.

commit 92730923d11a4817437816dac121fb40aba81505
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jun 7 17:45:43 2022 +0200

    Fix ssl documentation for self-signed certifications
    
    The command for generating a signed cert must use the documented
    ssl configuration in order to ensure that the rootCA should be used
    for cert verification.

commit 41d5e54eda11ac1ac80972865a4657faa0d44394
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Fri Jun 3 13:13:01 2022 +0200

    Update Admin UI to 1.22.0, including the new logo and colors

commit 66a703effef01e5e5ef257cf91c361994d9ba85a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 7 11:03:42 2022 +0200

    Fix/allow handling of null literals in UNION and GROUP BY
    
    Fixes https://github.com/crate/crate/issues/12578
    Alternative solution to https://github.com/crate/crate/pull/12582
    
    Instead of adding more special cases we can allow grouping on undefined
    columns. The optimized code paths are only used if there are doc-values
    (not available for ignored objects), the regular code path will use
    a source lookup.

commit 3b837976894138d74bc9f3c10f9ea244da5a46b2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 1 14:54:27 2022 +0200

    Remove enabled property from UserManager
    
    No longer required, UserManager is part of the server module and always
    enabled.

commit dd8775d02e4be35be4944bd869c2876cc6369faf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 1 14:31:59 2022 +0200

    Make UserLookup default methods consistent
    
    Before if using the default methods a `UserLookup` instance could return
    a user with `findUser()` that wasn't present in `users()`.
    
    This changes the approach and makes `users()` the abstract method.
    (Note some tests intentionally violate this for convenience and return
    users not present in `users()`)

commit 1d4b226a26d995f2f44561680b5bd4b04f5ba057
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 1 11:59:16 2022 +0200

    Chain futures in AlterTableOperation
    
    The `addColumnToTable` method signature was a bit confusing. It both
    took a `FutureActionListener` parameter and returned a
    `CompletableFuture`.

commit 0a14cbb95ebf52a0ca547ce530621658fb4730fb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 31 16:26:04 2022 +0200

    Avoid array copy operation to generate streamers

commit 88113a477d313358af68e1bfed53e79940ecaa47
Author: baur <baurzhansahariev@gmail.com>
Date:   Thu May 19 08:13:43 2022 +0200

    Implement scalar function has_schema_privilege

commit 38bb6dc929a5e3c33a14f5e0dd23b54061d7d32e
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon May 30 15:15:29 2022 +0200

    Upgrade to Lucene 9.2.0
    
    https://lucene.apache.org/core/9_2_0/changes/Changes.html

commit dd88a9c8d00e4cf4b25311bcaf1d248722fa5a2c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 30 17:32:16 2022 +0200

    Move characterMaximumLength to DataType
    
    Components like the `ColumnContext` shouldn't be aware of concrete type
    implementations.

commit f980193e69abe4699a3ff21d7074cbb7c62eb6fd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 30 16:56:59 2022 +0200

    Remove .add from GenericProperties
    
    Nodes from the Statement AST must not get mutated because the statement
    gets cached and re-used when using prepared statements.
    
    This removes the `add` method to avoid accidental mutation.

commit 4c268980ed9469ee71ed2d87caf09442be804049
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon May 23 14:06:24 2022 +0200

    Change timestamp to timestamp without time zone

commit 531f7208b33cb88bf5afa9963b45e0778b2d0225
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 30 14:21:52 2022 +0200

    tests: Remove isColumnPolicy custom matcher

commit dec1c2f4d51c884813cf5a843ad6f1a189d14a93
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 30 11:24:59 2022 +0200

    Add a `getParents` iterable to TableInfo

commit 5b82b0bfae77d6838434596a209fb9241a6f1066
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 30 11:56:17 2022 +0200

    Prune unreleased fixes
    
    Follow up to https://github.com/crate/crate/pull/12562

commit ffba331c0f012b8143ad233fe2b036938730b889
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 25 17:45:58 2022 +0200

    Ensure streaming in GeneratedReference can handle different inner Reference implementations

commit e12dc6953dc7de7e61e118dc538fccd00cfa0eee
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 25 16:06:05 2022 +0200

    Change GeneratedReference to implement Reference instead of SimpleReference

commit 5879c1d72f6008d1cf46e21f82db1ace1268215d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 25 14:36:38 2022 +0200

    Turn Reference into an Interface
    
    This will allow us to use composition for some of the special reference
    implementations and to model things like a generated reference on top of
    a GeoReference.

commit 2fe2ce33410277f403f80f7ed97c4a14ae972816
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 25 11:38:51 2022 +0200

    Move IndexType to top-level

commit 9459fe4c17aea4f156aabe9a3e1656575c7944a8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 25 10:56:34 2022 +0200

    Change Symbol to an Interface
    
    Will make it easier to use a composition pattern for the different kind
    of References.
    
    This relates to https://github.com/crate/crate/issues/10025
    It looks as if we need to be able to mix some of the existing Reference
    implementations - for example by having a Generated GeoReference

commit 59186afa5aa44b09a12cd7aedce69fc1689c48d2
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed May 25 17:27:35 2022 +0200

    bp: Fix testRerouteOccursOnDiskPassingHighWatermark
    https://github.com/elastic/elasticsearch/commit/3a803c85a41377c274bcbea58dddfd658ccdd40f

commit 709648957fd91d2e8f39be678772de14255a894e
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Wed Apr 28 20:37:27 2021 -0400

    Use table alias as column alias for aliased table function
    
    that is, if column aliases are not provided

commit cae0af48bcf10648ec9d6f87cf90636e2db8638a
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed May 25 09:52:31 2022 +0200

    Reflect release 4.8.1

commit 8d192d502761fd9c2159007fb8a010c715e93abf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 25 11:22:42 2022 +0200

    Remove unused RefAndLiteral

commit a6925d55022a16ca47d3dede4548aa8b4a8c36ee
Author: baur <baurzhansahariev@gmail.com>
Date:   Tue May 24 17:43:30 2022 +0200

    Reflect release 4.7.3

commit f7dbc3d22336c3038abd07c83283be30710dbd35
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 24 11:25:05 2022 +0200

    Remove ExpressionToColumnIdentVisitor
    
    There was only one use in the AlterTableAddColumnAnalyzer and its result
    was never used, it only did validation.
    
    The validation can be moved closer to the ColumnIdent. We shouldn't be
    relying on name validation in the alter table analyzer anyway because
    columns can be created implicitly with dynamic mapping updates.

commit ed02b367abf8fbf7b01e3de00c724c2b1f2c5feb
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue May 17 11:18:51 2022 +0200

    Enable to alter settings in subscribed tables
    
    This enables to alter settings in subscribed tables except
    ``number_of_shards`` and ``mapping.total_fields.limit``.

commit bccd6cd2b1824baacf41a9f74e2e1b32651dde20
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 23 17:04:48 2022 +0200

    Merge DocTableInfoBuilder into DocTableInfoFactory
    
    The factory was the entry point but only really delegated to the
    DocTableInfoBuilder. We can get rid of the indirection as it doesn't
    bring any advantages.

commit 3fb60d1aa70b311cba4fd8cd6f8d42a2bfbb7a0e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 23 16:21:42 2022 +0200

    Merge Internal-/TestingDocTableInfoFactory into DocTableInfoFactory
    
    The tables property of the TestingDocTableInfoFactory wasn't used.

commit d1337f62c5755a00dcbf293131b11f523433135d
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon May 23 16:17:59 2022 +0200

    Enable to alter the setting ``blocks.read_only_allow_delete`` on blob tables
    
    This enables to alter the setting ``blocks.read_only_allow_delete`` on blob
    tables to make it possible to drop read-only blob tables.

commit 69de53e24c8c013f91e823449cbbd9a8bf021005
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Thu May 19 09:42:44 2022 -0400

    Remove deprecated delimited_payload_filter

commit 70dbb286753ceae9721ddcb7a2be122eeeebe3cf
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Thu May 5 10:02:52 2022 -0400

    Upgrade to Lucene 9.0.0
    
    https://lucene.apache.org/core/9_0_0/changes/Changes.html

commit f79acaf8b188dd37f50473c34686f617450d5fa3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 18 10:39:12 2022 +0200

    Make timeout handler property final; remove volatile
    
    There were some cases of
    
    ```
    if (x != null) {
        x.foo();
    ```
    
    Where `x` was marked as `volatile`. Turns out those can be made final.

commit 1d84e4b54efa2e0e67a2bfeee202f3a586ba5f63
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 18 15:38:41 2022 +0200

    bp: Minor cleanups to BytesReferenceStreamInput
    
    https://github.com/elastic/elasticsearch/commit/9acd2fd1fd1130d6c8a6bfc6e19eb9af7a44621a

commit ebdf52e02406006c85f1bb7843186d2e0831bb30
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 18 15:35:49 2022 +0200

    bp: Simplify BytesReference StreamInput
    
    https://github.com/elastic/elasticsearch/commit/1e3edbbe745c27daae76eba5919d831a2864a038

commit 5a7a1a2e00fdd98eb6d8da5d2f2c51879eaad505
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 18 15:29:42 2022 +0200

    Replace FutureArrays usage with Array
    
    We're on JDK 18, no need to use a compat layer of Lucene to get Java 9
    functionality.

commit ce8e3c793cf3551e29fb156f3ce6130d7f1f2419
Author: Sebastian Utz <su@rtme.net>
Date:   Fri May 20 10:09:37 2022 +0200

    Fix NPE while writing a ShardResponse with an empty failure message
    
    The ShardUpsertActions uses the userFriendlyCrateExceptionTopOnly
    helper method to retrieve a friendly error message from an exception.
    This method will use the `Throwable.getMessage()` method which may
    return NULL.
    The throwable class name is now used in such a case.

commit 354ac6bd1427fcd7d90cca00967e2b21b4701b55
Author: Sebastian Utz <su@rtme.net>
Date:   Wed May 18 13:51:37 2022 +0200

    Implement support for non-recursive, DQL WITH sql statements
    
    Non-recursive WITH statements, which only contain DQL statements,
    can be simply rewritten to (nested) sub-select queries.
    
    Recursive or materialized WITH and the usage of DML statements is
    not supported.

commit 8043f7787c5769887b400ec1c64c5d0c33e78dc9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 18 15:16:20 2022 +0200

    Fix length 0 bulkArgs handling in test layer
    
    Follow up to https://github.com/crate/crate/pull/12521
    `test_snapshot_with_corrupted_shard_index_file` failed:
    
        java.lang.ArrayIndexOutOfBoundsException: Index 0 out of bounds for length 0
            at __randomizedtesting.SeedInfo.seed([3393D83462AF076B:35D6B6DD03A19B57]:0)
            at io.crate.data.RowN.get(RowN.java:53)
            at io.crate.analyze.SymbolEvaluator.lambda$visitParameterSymbol$0(SymbolEvaluator.java:74)
            at io.crate.expression.scalar.arithmetic.ArrayFunction.evaluate(ArrayFunction.java:81)
            at io.crate.expression.FunctionExpression.value(FunctionExpression.java:50)
            at io.crate.expression.tablefunctions.ValuesFunction$ValuesTableFunctionImplementation.iteratorsFrom(ValuesFunction.java:104)
            at io.crate.expression.tablefunctions.ValuesFunction$ValuesTableFunctionImplementation.lambda$evaluate$0(ValuesFunction.java:98)
            at io.crate.expression.tablefunctions.ColumnOrientedRowsIterator.iterator(ColumnOrientedRowsIterator.java:43)
            at java.base/java.lang.Iterable.spliterator(Iterable.java:101)
            at io.crate.planner.operators.InsertFromValues.evaluateValueTableFunction(InsertFromValues.java:548)
            at io.crate.planner.operators.InsertFromValues.execute(InsertFromValues.java:232)
            at io.crate.action.sql.Session.singleExec(Session.java:676)
            at io.crate.action.sql.Session.exec(Session.java:539)
            at io.crate.action.sql.Session.triggerDeferredExecutions(Session.java:513)
            at io.crate.action.sql.Session.sync(Session.java:497)
            at io.crate.testing.SQLTransportExecutor.execute(SQLTransportExecutor.java:294)
            at io.crate.testing.SQLTransportExecutor.executeBulk(SQLTransportExecutor.java:540)
            at io.crate.testing.SQLTransportExecutor.execBulk(SQLTransportExecutor.java:148)
            at io.crate.integrationtests.SQLIntegrationTestCase.execute(SQLIntegrationTestCase.java:576)
            at io.crate.integrationtests.SnapshotRestoreIntegrationTest.test_snapshot_with_corrupted_shard_index_file(SnapshotRestoreIntegrationTest.java:633)

commit 7708ec76dc699c13ea5e31b6f4ed50a9494954fe
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 18 14:58:46 2022 +0200

    bp: Some Optimizations around BytesArray
    
    https://github.com/elastic/elasticsearch/commit/f22ddf822e24bb17f1772c3bacb7ee97a00339b8

commit 872bc33808064cd3fa9d544a0ab7bb1920aec624
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 18 14:45:46 2022 +0200

    bp: Reduce allocations when persisting cluster state
    
    https://github.com/elastic/elasticsearch/commit/b21cb7f4666571b595df9cbca4ce9784f5aa38fd

commit 4f34634ffa4c062d8d8726cb37ee147d2c861546
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 18 12:20:29 2022 +0200

    bp: Save Bounds Checks in BytesReference
    
    https://github.com/elastic/elasticsearch/commit/0a879b95d1d1af5abd51ec6a748ea88fe775cf72

commit 00975f319cb519cedef2ff8d773a7f4bec02507d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 18 11:47:53 2022 +0200

    bp: Fail invalid incremental cluster state writes
    
    https://github.com/elastic/elasticsearch/commit/c6276ae17711771e2a1baa2c948822650b24ca0f

commit 13aee340e7a1afb89e75faf843b5aa5d2c446c67
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 18 11:46:40 2022 +0200

    bp: Optimize CS Persistence Stream Use
    
    https://github.com/elastic/elasticsearch/commit/212ce22d1556309345a34ee781fc18cf9492192c

commit 2be4888264bd3074323fa4b9d5d62c67003e1f17
Author: baur <baurzhansahariev@gmail.com>
Date:   Thu May 12 14:16:01 2022 +0200

    Fix alter table so that VARCHAR length is not lost while mirroring mapping

commit fd628b5dc7855ef44c18f79d934388a70a765396
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed May 18 10:31:16 2022 +0200

    Remove alter open operation from published/subscribed tables
    
    The operation ``alter open`` is not needed anymore for
    published/subscribed tables. It should have been removed with
    https://github.com/crate/crate/commit/e6adfc8c8f51df3777b651379147005d3ca3ccc0
    because the underlying usecase is handled differently now, but was
    forgotten.

commit 0987c7ec2749d4dddc1f8620902f0a0c6e02bec9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 17 11:08:36 2022 +0200

    Make ActionListener extend BiConsumer
    
    Relates to https://github.com/crate/crate/issues/11940

commit 6df3f47b76409fef88135f54c8cd444f3970ba3c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 17 10:47:03 2022 +0200

    Replace CompletableContext with plain CompletableFuture
    
    We accept `Throwable` in plenty of places, no real reason to restrict it
    in the TcpTransport area.

commit 6ca302cdefb5490e735948e6e80be13182833051
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 16 17:36:12 2022 +0200

    Remove MessageSerializer
    
    It's simpler to call serialize on the message directly

commit c9b93db446f43f86f66da39fabb25c2c616073a9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 16 15:54:21 2022 +0200

    Use bulk inserts in test_snapshot_with_corrupted_shard_index_file
    
    Should speed up the test case a tiny bit

commit ab941ac7511f5ac1a189e6f7dd9c7ff33e783af0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 17 17:24:46 2022 +0200

    Fix randomization in forRandomMasterOrDataNode
    
    Fixes a potential infinite loop.
    
    The `seed` could randomize to a negative value, leading to a negative
    `randomIdx`. Due to the loop not correctly advancing the iterator it
    kept iterating forever.

commit 36d5916d4f51bfee3aa18e8a3bd1147c6175da36
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon May 16 12:30:12 2022 +0200

    Make soft-deletes mandatory for newly created partitioned tables

commit 303325f0f6f5aec4592b56665065f5c81a88c3df
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 16 10:59:36 2022 +0200

    Support using `null` without explicit cast in UNION

commit 722d13735c8db2eaca8adec8af298efdf8fedf87
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 16 14:44:41 2022 +0200

    Update GraalVM to 22.1.0

commit 10f898e712a130fe7ba5328aa416b3f30e5830c6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 11 14:30:32 2022 +0200

    Remove mapping type from CreateIndexRequest

commit b17ae94a04a6231e641ca57d7a658e7523e8f1da
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 10 17:57:53 2022 +0200

    Remove type from mapping

commit fd808d3f8b2f916c13fb978eaedb103eb6f3b968
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 10 16:59:10 2022 +0200

    Remove unused properties from CreateIndexRequest

commit fd1cf99e0eccbd631649bd03df62fdc95a68b6ec
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 10 16:15:08 2022 +0200

    Adapt IndicesAdminClient delete signature to use CompletableFuture

commit 7743893f5b600a8b9f346ada85e37c4557c8abd1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 10 16:01:31 2022 +0200

    Avoid duplicate de-duplication of indices in TransportDeleteIndexAction
    
    MetadataDeleteIndexService.deleteIndices will do that anyways. No need
    to do it upfront.

commit c1153f847d7ab922890d606bb535cc35d9c27f0d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 10 15:41:40 2022 +0200

    Remove DeleteIndexRequestBuilder
    
    Can build DeleteIndexRequest without it and we should use DROP TABLE if
    possible.

commit 07257b959b89a483297b2415b5fe9585ec412373
Author: Sebastian Utz <su@rtme.net>
Date:   Fri May 13 09:54:22 2022 +0200

    Don't write replayed operations if shard is not subscribed anymore
    
    If the shard is not subscribed anymore (engine is not a SubscriberEngine),
    possible still arriving to-replicate operations must not be processed
    anymore and rejected.
    
    The engine could be also switched while operations of a current
    replay request are proccessed. Only operations successfully written
    before the engine switch happened must be replicated.
    
    This fix will prevent assertions errors at the InternalEngine,
    complaining that the seqNo of the incoming primary operation is set.
    This is only valid for logical replicated operations using the
    SubscriberEngine.

commit 9075cd9c256d95a529cea2f02fde80397cc298fe
Author: Sebastian Utz <su@rtme.net>
Date:   Thu May 12 17:11:42 2022 +0200

    Resolve remote cluster at the shard tracker by subscription name
    
    The subscription name stored inside the index settings may already
    be removed when the shard tracker is closed and try to remove
    the remote retention lease.
    
    Creating the same subscription afterwards would then fail as
    the old and invalid retention lease would still exists.

commit ba63fb62ceacc672f9da8ee39d8387760438898b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 16 10:51:21 2022 +0200

    Remove `node.max_local_storage_nodes` from sandbox crate.yml
    
    Follow up to https://github.com/crate/crate/pull/12463

commit 6a13edb1077c22f5838e2be31972c72865b2cc56
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 11 11:31:43 2022 +0200

    Add extra local variable to fix eclipse compile error
    
    Looks like the eclipse compiler cannot infer the correct overload while
    javac can.

commit 01b3f9675ce70024764927e5dfdf0eebc0ca8518
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon May 9 16:36:23 2022 +0200

    Make soft-deletes mandatory for newly created tables
    
    Creating tables with soft deletes disabled is no longer supported.
    The setting soft_deletes.enabled will always be set to true.
    
    The behavior of the setting is depending on the index version of the created
    table. If the index version >= 5.0 the change of the setting will be
    rejected.
    
    In case of a mixed cluster for the rolling upgrade use-case, the index version
    is determined by the lowest version of nodes in the cluster.
    
    Therefore this behavior only applies once all nodes in a cluster are upgraded
    to 5.0+.

commit 0d9babb43512cdd085790892b573c938c6867e86
Author: baur <baurzhansahariev@gmail.com>
Date:   Thu May 12 15:26:01 2022 +0200

    imports

commit dc647c283545bebde570af0e3103340caf55a103
Author: baur <baurzhansahariev@gmail.com>
Date:   Thu May 12 15:23:24 2022 +0200

    comments

commit 2c12827022435a6e0532b21444187e1835ae18dc
Author: baur <baurzhansahariev@gmail.com>
Date:   Thu May 12 10:41:08 2022 +0200

    Remove cached RemoteCluster if failed to create a client

commit 58b42ab9ae56233c621e879966ce4a4c3b62ee02
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed May 11 13:38:47 2022 +0200

    add mention of DQL permission requirement for a subscribing user

commit a56b57b51f69454f88ab964d5edbb7b3154ab93e
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed May 11 13:21:16 2022 +0200

    Remove caching in table parameters
    
    This removes the caching of settings and mappings in table parameters.
    If the settings/mappings methods are called and the builders are afterwards
    mutated, then settings/mappings will be cached and not reflecting the latest state.

commit d50bacbe6caa9d4df9ae15d15aa581099e85588a
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 10 10:48:30 2022 +0200

    Fix error handling when subscribing to unknown publication
    
    An exception must be raised instead of treating the creation as
    successful and create a non-working subscription.

commit ebf25fada8ebbb19b849d74fd86a828443836f12
Author: baur <baurzhansahariev@gmail.com>
Date:   Tue May 10 21:07:28 2022 +0200

    Ensure table functions parameter binding in SELECT queries without FROM clause

commit e0c1083c314ff873fb404619ff47a6838e7fc592
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 10 15:13:00 2022 +0200

    Move some more options from FieldMapper to TextFieldMapper

commit d18ae543b4cfa2c98df8447176a2d4dc28b603d2
Author: Georg Traar <georg@crate.io>
Date:   Wed Apr 27 13:48:52 2022 +0200

    Change community support link to discourse

commit 38c83f664f96abfba2753464e47fc4c3e4763388
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 10 16:22:57 2022 +0200

    Release retention lock on early restoreContext creation failure
    
    Releasing(closing) the retention lock was missing when the metadata
    resolving caused an error.

commit cfc3b9bd0945d368d3a337bf78dc3d06af8e1d2e
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 10 16:17:44 2022 +0200

    Finish restore subscribed tables successuful on restoreInfo is null
    
    If the restore listener returns null, the restore states were already
    deleted cause they completed successful.

commit bf6b4a85fccbaa13aa001b89731ee58a1054fc72
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Tue Apr 19 17:35:20 2022 -0400

    Refactor NodeActions to use TransportAction execution framework
    
    With this, 884bfc3 and 58db031, TransportActionProvider is removed

commit 5a03b9c312d4e5762e4748b446154afc02674a93
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 4 11:27:07 2022 +0200

    Update JDBC to 42.3.5
    
    - https://jdbc.postgresql.org/documentation/changelog.html#version_42.3.5
    - https://jdbc.postgresql.org/documentation/changelog.html#version_42.3.4
    - https://jdbc.postgresql.org/documentation/changelog.html#version_42.3.3
    - https://jdbc.postgresql.org/documentation/changelog.html#version_42.3.2

commit 399e6ed61e1887c51832af3f1bc96bb8173f7e74
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 10 12:07:49 2022 +0200

    Move analyzers from FieldMapper base to TextFieldMapper

commit 20e2cafd95dbeb74851a8d1598e65a4b95ac60f6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 10 11:36:49 2022 +0200

    Don't set analyzers on NumberFieldType
    
    `WHERE MATCH(numericColumn, ...)` is not supported, no need to set an
    analyzer on the `FieldMapper`
    
    (As far as I can tell this didn't have an impact on indexing. None of
    the `createFields` methods used the indexAnalazyer information)

commit 0129abd4dba76f74e89502bd80ffc228f0c6374d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 10 10:17:46 2022 +0200

    Remove unused analyzers from DocumentFieldMappers

commit 668e35747e014848ac5dc39479afbf917e96ac13
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 10 10:17:41 2022 +0200

    Fix restoreInfo=null error while restoring subscribed tables
    
    If the initial restore operation of subscribed tables finishes
    almost instantly, the restoreInfo is already available and must
    be used.
    Adding a RestoreClusterStateListener would fail in this case as no
    previous cluster change event happened including the required
    RestoreInProgress entry.

commit 2a37b21d8d85315a872908b26ddb955b7745932c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 9 17:44:27 2022 +0200

    Remove unused methods from ParseContext.Document

commit 65d1347bc1e9dab126c8fa80631d4110ae7a1d3f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 9 16:37:01 2022 +0200

    Remove META_FIELDS from MapperService
    
    They were used to validate the name of dynamically created fields.
    
    Reasons to remove it:
    
    - Our analyzer already verifies that top-level columns cannot start with
      a `_`.
    
    - It was out of sync with our `DocSysColumns`, so users could create
      child columns starting with an underline that conflicted with them. We
      can just allow it in general as there is no harm.

commit f4d98f0e49b4f09a4ab5a9d0edef65f01d972f10
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri May 6 13:05:29 2022 +0200

    bp: Remove setting node.max_local_storage_nodes
    https://github.com/elastic/elasticsearch/commit/c459ea828f6419fba0469cc1569c5ead741e7dee

commit 8bb472c09292b40718e9a1699682dbb4c2f4e763
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu May 5 16:54:40 2022 +0200

    Improve handling of constant join conditions
    
    This adds a rule to the query optimizer to improve the handling
    of constant join conditions to push them down to the collect phase.

commit d2003341950923e5584bb8324c8ec202b9d2f4cb
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Apr 26 22:18:39 2022 +0200

    Make hashjoin work with multiple relations on the right-hand-side
    
    Hash-joins are currently depending on a concrete relation which is used to plan
    the distribution of the execution tasks. This limits the hash-join to handle
    only a single relation on the right-hand-side.
    
    This removes the concrete relation and allows multiple relations on both sides
    of the join.

commit b833a73f38de7fe376700d7d8a6ab7295a6dd68e
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed May 4 20:17:05 2022 +0200

    Fix more relation names retrieval in logical plan operators

commit 6ce4649134665309298a17aa0873d498b39455e3
Author: Georg Traar <georg@crate.io>
Date:   Sun May 8 17:57:34 2022 +0200

    add object_keys function

commit afaaf9fc067eac2c0dd34be8293b28f0d6f6c3e9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 9 15:39:06 2022 +0200

    Remove dead code from IpFieldMapper
    
    Follow up to https://github.com/crate/crate/commit/d5ecbfe0c2a315fd1234b58d8e868c987579413a

commit ad27891fc87bef7abaf2b8385d62394de7428ad3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 9 15:31:35 2022 +0200

    Remove unused null_value from IpFieldMapper

commit d30fb57979a536adcac7bb40630ef79faeeea53c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 9 15:02:14 2022 +0200

    Remove unused locale and nullValue properties from DateFieldMapper

commit 7284509ff5f58351646915abeef94c944e044cfe
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 9 14:37:35 2022 +0200

    Remove unused `null_value` property from BooleanFieldMapper
    
    CrateDB never sets this property

commit 288febe7d9307dbeb9994eb267d967659254bc96
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 9 11:24:24 2022 +0200

    Remove fieldType argument from getDefault MetadataFieldMapper.TypeParser
    
    Fixes a TODO:
    
        TODO: remove the fieldType parameter which is only used for bw compat with pre-2.0

commit c6b5e2beac458b6ba6be45fa02e530abbe044e91
Author: Sebastian Utz <su@rtme.net>
Date:   Mon May 9 14:41:10 2022 +0200

    Make instance cancellable variable volatile at RetryRunnable
    
    The instance could be created (and run) and cancelled by differtent
    threads.
    
    Follow up of ee833b3b826.

commit 688caa37055041d23418b26e179de698929e0881
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 6 12:21:36 2022 +0200

    Use VarHandle for long decoding in MurmurHash3
    
    Tiny performance improvement:
    
        Benchmark                              (length)  Mode  Cnt   Score   Error  Units
        MurmurHash3Benchmark.measureNewHash64        10  avgt    6  11.821 ± 0.102  ns/op
        MurmurHash3Benchmark.measureNewHash64        30  avgt    6  15.897 ± 0.058  ns/op
        MurmurHash3Benchmark.measureOldHash64        10  avgt    6  14.451 ± 0.369  ns/op
        MurmurHash3Benchmark.measureOldHash64        30  avgt    6  24.788 ± 0.434  ns/op

commit d5ecbfe0c2a315fd1234b58d8e868c987579413a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 9 11:01:19 2022 +0200

    Remove `externalValueSet` from field mappers
    
    Was unused

commit 93ad608aabd8bf07d93f9069b681b2a9d929a6a9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 4 16:21:23 2022 +0200

    Remove unused MultiFields
    
    CrateDB only uses `copy_to`

commit d1e21d3610169a94651d3aa7810d22fefeb2f370
Author: Sebastian Utz <su@rtme.net>
Date:   Mon May 9 11:08:32 2022 +0200

    Add alias target symbol evaluation in the EvaluationNormalizer
    
    The target symbol of an AliasSymbol must be processed on
    normalization in order to correctly process e.g. query symbols.
    
    Fixes #12448.

commit 8234ee12ee70bcfaa73475703490d81daf4aafc4
Author: Georg Traar <georg@crate.io>
Date:   Fri May 6 16:57:43 2022 +0200

    add typsend column to pg_catalog.pgtype table

commit dc3ce297b1597d482949a2e57479890feb3adbf4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 4 15:58:31 2022 +0200

    Remove nonRootDocuments from ParseContext
    
    Not used by CrateDB

commit 0fcf8d9e03965c52b9751be77ebcbe4e89656c3a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 4 15:49:29 2022 +0200

    Remove unused Visitor from ShardSplittingQuery

commit d0a54890be08a43037df29f70a54c331ceb171d0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 4 15:45:55 2022 +0200

    Remove source wrapper
    
    With the removal of routing, the `Source` only has a single property and
    is no longer needed.

commit 621645ac1723a82ccb290cf4728a380364d9acea
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 4 15:35:07 2022 +0200

    Remove RoutingFieldMapper
    
    In CrateDB clustered-by is a pointer to a column in the table and it
    never stored the routing information utilizing the dedicated mapper.
    
    Besides removing some logic this also reduces the translog size by 1
    byte per index entry.

commit 8d995c68548501b3cf591d2d6630431afd544aa9
Author: Sebastian Utz <su@rtme.net>
Date:   Fri May 6 10:42:14 2022 +0200

    Don't reschedule shard replication tracker after closed
    
    Rescheduling the shard replication tracker after the retention
    lease was renwed must not happen if it's already closed.

commit 71ddab6a68436dd7ec1e8b139ec2d866d8650d5b
Author: Sebastian Utz <su@rtme.net>
Date:   Fri May 6 09:49:31 2022 +0200

    Add index name to IndexNotFoundException at the RestoreService
    
    Should help debugging issues.

commit ee833b3b8269d7437a67d2273ac609cbdb223ade
Author: Sebastian Utz <su@rtme.net>
Date:   Fri May 6 09:47:11 2022 +0200

    Make RetryRunnable cancelable
    
    This should fix some thread leaks when components using the
    RetryRunnable (like e.g. MetadataTracker) are closed while its
    still running, e.g. caused by retries.

commit 11c06eb8964ae6fac891d5cfaba9060723919acc
Author: Sebastian Utz <su@rtme.net>
Date:   Fri May 6 14:29:11 2022 +0200

    Remove reference to removed HDFS repository from old release notes
    
    The reference doesn't exists anymore and such sphinx will fail.

commit b179f7f4237e6bf66248313559f9e2043fb6b6b2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 4 14:45:51 2022 +0200

    Remove empty abstract MappedFieldType related base classes

commit f4bc9563cab3d625dea32bc2b13cd60dc66b393b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 4 14:36:17 2022 +0200

    Remove unused methods from MappedFieldType classes

commit 3eb85a8e6d300dd94be28d6f73e4476040274bcb
Author: Sebastian Utz <su@rtme.net>
Date:   Wed May 4 09:53:16 2022 +0200

    Fix LR metadata tracking on master node change
    
    If the master node of the subscriber cluster changed, each
    subscription's tracking must be started on the new master node.

commit fc583e106a5c5bc4bb8fec9a39d02a5ccc53e760
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 4 10:55:59 2022 +0200

    Enable use of append only optimization
    
    We inherited a append only optimization from ES that was unused so far
    because we always set `autoGeneratedTimestamp` to
    `Translog.UNSET_AUTO_GENERATED_TIMESTAMP`.
    
    This changes it to set the timestamp if we know for sure that the `_id`
    value is random generated.
    Currently this is the case if there is no explicit primary key on a
    table, but we could later extend this to also do it if no value is
    externally provided and there is a default function like
    `gen_random_text_uuid`.
    
    Benchmarks show a slight improvement: (`id_int_value_str` has a explicit
    primary key, so the optimization isn't kicking in, `tbl` has the same
    schema except the primary key clause removed).
    
    The results vary around ~2-6% from run to run
    
        Q: insert into id_int_value_str ("id", "value") values ($1, $2)
        C: 1
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |        9.951 ±   12.963 |      5.761 |      8.319 |      9.901 |    385.086 |
        |   V2    |        9.804 ±   12.349 |      6.368 |      8.056 |      9.350 |    357.783 |
        ├---------┴-------------------------┴------------┴------------┴------------┴------------┘
        |               -   1.49%                           -   3.22%
    
        Q: insert into tbl ("id", "value") values ($1, $2)
        C: 1
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |        9.639 ±    3.390 |      6.790 |      8.902 |      9.601 |     54.361 |
        |   V2    |        7.448 ±    2.945 |      5.795 |      6.908 |      7.521 |     52.093 |
        ├---------┴-------------------------┴------------┴------------┴------------┴------------┘
        |               -  25.65%                           -  25.22%

commit ff83c3f15efc571aab8d4b4349e58283c018298d
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue May 3 12:06:01 2022 +0200

    Fix retrieval of relation names in logical plan operators
    
    Currently the relation names in a logical plan operator are retrieved from the
    base tables of the operator. However, the relation names of an operator can be
    different to its base tables.
    
    Therefore operators which internally use other operators as sources must
    retrieve the relation names directly.

commit fee777c200391b7f995cbb6fb90f83932ff083a3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 2 09:50:29 2022 +0200

    Remove normalizeSymbol override from ConcatWsFunction
    
    The default implementation does the same

commit 2050e42b24f1167be541e975331076d16c9d4549
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 2 09:48:55 2022 +0200

    Add link to `concat_ws` release notes entry

commit ef52ce3ac94f6f2fb3c9ca83c9292a58f8cb7783
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 2 14:41:56 2022 +0200

    Update bundled JDK to 18.0.1+10
    
    The first attempt was reverted with https://github.com/crate/crate/commit/0e588df2c7fb4e45858940a253fce00aed7ee935
    This is another attempt using 18.0.1+10
    
    (And if we again encounter crashes there should be time to dig deeper
    before the next feature release)

commit e66513fb109f8c2e20e31090822918ba9b8d0fef
Author: DCruz, Ryan <rc@enfuse.io>
Date:   Wed Apr 13 16:38:27 2022 -0400

    Implement scalar function concat_ws

commit 0882a94bf6a70601a6dd0750abe32ae2ecfaa47f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 3 16:57:03 2022 +0200

    Set final newline for all filetypes in editorconfig
    
    Got some conflicts in the unreleased.rst due to different final newline
    settings.
    Might help prevent that in the future

commit 68a3f63fc7197cb0cf8914f55294016a6276e89a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 3 10:46:05 2022 +0200

    Account for 4.7.3 release in ShardUpsertRequest.Item streaming
    
    The streaming change is also backported to 4.7, so we need to include
    the pkValues in >= 4.7.3 and in >= 4.8.1 but not 4.8.0

commit 8e28fd7c6653bb58e8dadec4a5c6b6c92509e611
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 3 11:40:48 2022 +0200

    Replace ref counting in NettyBootstrap with LifeCycleComponent
    
    Instead of creating the EventLoopGroup on first use and closing it once
    the last consumer closed it, this changes the approach to create it
    early on at node start and close it on node stop.
    
    CI failed sometimes with thread leaks, this may help solve it.

commit 199ee57b90c91d8766da790e7e24e257cfd39c25
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 2 15:27:29 2022 +0200

    Add use case specific static factories to ShardUpsertRequest.Item

commit 6d0a2fbf27cc9fa2eaf8c81ea83d7fc6be17c7da
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 2 14:15:02 2022 +0200

    Don't evaluate primary key defaults multiple times
    
    We compute the primary key value early because it is needed for sharding.
    This led to a problem with nondeterministic `DEFAULT` functions
    because those got computed a second time when the source gets generated.
    
    We ended up using the `_id` of the first computation and the primary key column
    values from the second generation. Leading to a mismatch.
    
    Closes https://github.com/crate/crate/issues/12427

commit ea9d8969389a23bbdbd8d0f69a11881f4202294d
Author: Georg Traar <georg@crate.io>
Date:   Fri Apr 29 14:59:54 2022 +0200

    Move quote_ident() function to pg_catalog

commit bfddea597e21b4424283f492da70d3d8fa3a3bdb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 2 14:29:19 2022 +0200

    Update mergify backport rules (+4.8, -4.6, -3.3)

commit 38d7469845e6c828f9c7cd527b9edae5a925c95a
Author: Georg Traar <georg@crate.io>
Date:   Fri Apr 29 13:47:56 2022 +0200

    Allow users with AL privileges to run ANALYZE

commit d9352aa3948474c88b7bd2f10d255ef1d436896a
Author: Georg Traar <georg@crate.io>
Date:   Fri Apr 29 11:09:37 2022 +0200

    add decimal type as alias to numeric type

commit 166b23399322d7fb94a1e86aa7f46258ce5a829d
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Apr 28 20:59:01 2022 +0200

    Bump version to 5.0.0-SNAPSHOT

commit e1dea641515e57f61e77dcd34d8b2de042878bbf
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Apr 28 18:32:00 2022 +0200

    Release 4.8.0

commit 5b76dc249ed8d877e430a5ee629bcc41835352f5
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Apr 28 17:32:28 2022 +0200

    Mark UNION DISTINCT as supported at sql_features
    
    Follow up of d06c14c2b96.

commit 9f2a6c38b32fb719569f98945609f9c595589791
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Apr 28 17:04:27 2022 +0200

    Group release notes by topic

commit 6280249d39ddd4419678cf2333f96b954546a072
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Apr 28 17:10:36 2022 +0200

    Remove fixes in release notes released by 4.7.2
    
    Follow up of ec239d5590129e331b60fb98d554eb0eee21f7bd.

commit ec239d5590129e331b60fb98d554eb0eee21f7bd
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Apr 28 16:32:04 2022 +0200

    Reflect 4.7.2 release

commit e6adfc8c8f51df3777b651379147005d3ca3ccc0
Author: baur <baurzhansahariev@gmail.com>
Date:   Thu Apr 28 12:51:05 2022 +0200

    Revert "implement drop subscription in 3 requests"
    
    This reverts commit 6857a28b

commit 7c3a31a7712ae36c20b0aab4fee103a31be5b89a
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Apr 28 11:12:28 2022 +0200

    Revert "Improve handling of constant join conditions"
    
    This reverts commit 77f7fbac26c7eef2af44ba87445b259a02bd6d1d.

commit cba6ec79cd9540c4f049ce7bb38ec9527fca133a
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Apr 20 13:28:17 2022 +0200

    Subscription to multiple publications should not stop after dropping one of the pubs

commit b039dce0ddeedf1315963c0996849a672101a5bd
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Apr 27 16:30:21 2022 +0200

    remove SYNCHRONIZED state from subscribtion table docs

commit 5326d20e07067e86cc6fdbfbfb71bec2d1dada89
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Apr 28 09:01:50 2022 +0200

    Fix flaky test_subscription_metadata_tracker_retries_on_publisher_disconnect
    
    Ensure initial recovery is done before disrupting the clusters.

commit 54d51e52664e434c8f51cb8c43e2a5527d4ec76e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 27 16:04:11 2022 +0200

    Fail RemoteCluster/Client retrieval if already closed
    
    Should help ensure no more connections are created once a node is
    closed.

commit be23c04bf535292612055b31994d78d4b7fa5092
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 27 15:59:17 2022 +0200

    Ensure subscriptions are visibile for first run of MetadataTracker

commit a93c2b29506d0e49d69623f3b14e3372f4b8ff9b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 26 16:09:35 2022 +0200

    Handle initial logical replication restore via MetadataTracker
    
    Instead of handling the initial restore in a separate way this changes
    the logic to rely on the MetadataTracker to do it.
    This unifies the handling to no longer distinguish between initial
    restore and subsequent addition of partitions or tables.
    
    This helps avoid some subscription state updates. Before the
    LogicalReplicationService triggered some state updates in the error
    case, only to have the MetadataTracker update the state itself as well.
    
    It also chains all state updates, so that there is a stricter
    happens-before order between the different state changes.

commit 10a4a0f17aee5eb87410bc2d9f282ade86afb1c7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 26 15:53:52 2022 +0200

    Wait for subscription state update before updating it again
    
    restoring a new table for a subscription didn't wait for the state
    update to RESTORING. This could cause the operations to happen out of
    order, setting the state to SYNCHRONIZED and then to RESTORING instead
    of the other way around.

commit faeddb8c4fa016c02aa27eed53e1c7729521239d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 26 15:49:08 2022 +0200

    Handle RejectedExecutionException in LogicalReplicationService.restore

commit 6fff47c82ebcb3eb5fea9bb76384e47ce50fe92f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 26 15:48:19 2022 +0200

    Remove useless whenComplete handlers in LogicalReplicationService

commit 9eb53d06b36af746461a523f556fcbdf3a58af80
Author: rafaelasantana <60327926+rafaelasantana@users.noreply.github.com>
Date:   Thu Apr 21 16:06:26 2022 +0200

    update dml
    
    Removing the line that says `COPY FROM` can create a new table to store the copied data.
    
    In the `COPY FROM` documentation, there is no indication regarding automatic table creation.
    For the `table_ident` parameter, it states:
    "The name (optionally schema-qualified) of an existing table where the data should be put".

commit efe3398c4dfc7ba2065fe35ec5a054904aa17776
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Apr 27 14:48:09 2022 +0200

    remove outdated test and adjust docs for DROP/ALTER PUBLICATION

commit c9ec3ea8e37acf5cfb2c1b3a7d438631a78f07af
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 27 15:24:06 2022 +0200

    Ensure LogicalReplicationRepository decreases store refs
    
    In some branches the store reference was never decreased.

commit c261f9db3e02338da5a97f9b32433e132c5d6d22
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 27 11:36:49 2022 +0200

    Stop tracking without updating subscription state on SubscriptionUnknownException
    
    Race with drop subscription while the MetadataTracker is attempting to
    update the cluster state.
    
    No need to log errors or update the cluster state in this case.

commit 7d9fa67189be4ebbe678b0300f92e2525f38c489
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 26 17:43:38 2022 +0200

    Make AckedClusterStateUpdateTask CompletionListenable
    
    Relates to https://github.com/crate/crate/issues/11940

commit 09f3e0725575079246c2171cb9086d8c2c353eca
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 27 11:20:49 2022 +0200

    Ignore setting change if engine is already closed
    
    A AlreadyClosedException in the engine switch logic can happen if a
    subscription is dropped and immediately after the table is deleted.
    Parts of the subscription change are async and it can race with closing
    of the table.
    
        [2022-04-27T06:05:20,424][WARN ][o.e.i.IndexService       ] [[cratedb[subscriber1][clusterApplierService#updateTask][T#1]]] [.partitioned.t1.04132] [2] failed to notify shard about setting change
        org.apache.lucene.store.AlreadyClosedException: engine is closed
            at org.elasticsearch.index.shard.IndexShard.getEngine(IndexShard.java:2441) ~[crate-server.jar:?]
            at org.elasticsearch.index.shard.IndexShard.sync(IndexShard.java:3011) ~[crate-server.jar:?]
            at org.elasticsearch.index.shard.IndexShard.resetEngineToGlobalCheckpoint(IndexShard.java:3334) ~[crate-server.jar:?]
            at org.elasticsearch.index.shard.IndexShardOperationPermits.blockOperations(IndexShardOperationPermits.java:110) ~[crate-server.jar:?]
            at org.elasticsearch.index.shard.IndexShard.onSettingsChanged(IndexShard.java:1811) ~[crate-server.jar:?]
            at org.elasticsearch.index.IndexService.updateMetadata(IndexService.java:571) [crate-server.jar:?]

commit 40c12fb23d2dbace52a951e714ccc0189c795281
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 26 17:55:55 2022 +0200

    Turn tables dropped or excluded from the publication into normal tables
    
    Tables dropped on the publisher or excluded from the publication must
    not be dropped on the subscriber but should turn into normal read-write
    tables.

commit 1fa6b0b38ed5d9e5f18ca5f5315b76ee2f298f4b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 27 11:49:15 2022 +0200

    Avoid BiConsumer/ActionListener indirection in LogicalReplicationRepository

commit 15cb8647e97432b7e0ad4f23bf323263a601cf34
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 27 11:34:55 2022 +0200

    Re-use acquired remote client in LogicalReplicationRepository

commit c1423cea8d2584be2fba738a148e2b3cd9971b87
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Apr 27 12:14:34 2022 +0200

    Fix issue with translog recovery when engine is switched by setting change
    
    The internal IndexShard calls to apply engine settings after a engine is
    created to catch a race condition of concurrently creating a engine and
    applying new settings must not include the engine switch logic.
    Concurrently running engine switches a new engine creation like
    openEngineAndSkipTranslogRecovery will conflict as both skip translog
    recovery while expecting an ongoing translog recovery.
    
    Such we split internal safety logic to re-apply possible in-between setting
    changes to new engines and on-setting-changes calls triggered by metadata
    changes.
    
    Fixes "translogRecovery is not pending but should be" assertions errors.
    
    Follow up of c00ee7f92d66e3e8592b74b711a70e5fb79fd77b.

commit 6462b0edab103f037801109b6cdb71bf92855847
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 27 10:15:55 2022 +0200

    Try to fix thread leak in PgClientTest
    
    Failed on CI, but couldn't reproduce it locally.
    This moves closing of the resources into a @After method and in case
    that doesn't help it adds new assertions - this may help to get more
    insights in case it fails again.

commit e6a1dff6a27dc1ae1fb368f0b2a7022312d3fe55
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Apr 27 10:46:51 2022 +0200

    Move RetentionLeaserHelper loggers to debug level
    
    Even errors maybe temporarily which are logged elsewhere,
    logging errors on the error level here may confuse.

commit b962908011bf19b8f31ac1261a57ce283cd5840a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 26 14:22:46 2022 +0200

    Wait for restore before next poll in MetadataTracker
    
    Not waiting for a restore can lead to firing off multiple restore
    operations for the same indices because the same subscription will be
    processed multiple times. A subsequent restore might fail due to already
    running restores which then triggers subscription state updates.

commit 3a37abdabd830a9d35c0f47a4d82e763e32dd266
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 26 17:51:20 2022 +0200

    Stop the ShardReplicationTracker if index switched to normal index
    
    Follow up of c00ee7f92d66e3e8592b74b711a70e5fb79fd77b.
    From this commit on, the shards won't be closed and re-open if an index
    is turning from a replicated one into a normal one
    (e.g. when the subscription is dropped), but the engine is just switched.
    
    Thus the existing close-shard event listener, used to stop the tracker,
    won't be triggered.
    The new event listener API `beforeIndexSettingsChangesApplied` will
    be triggered by setting changed, which we can utilize to stop the tracker.

commit 18db3ae624e7beed300917659a928df19d77d3e6
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Wed Apr 20 09:28:49 2022 -0400

    Fix docs for copyfrom/to

commit c00ee7f92d66e3e8592b74b711a70e5fb79fd77b
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Apr 25 17:23:28 2022 +0200

    Detect updated engineFactories on index setting changes
    
    While index setting changes are detected, possible newly defined
    engine factories are detected and the engine is replaced.
    This allows to switch the used engine dynamically without the need
    of closing and re-opening an index.

commit 7cd5de53a646322f4504962baf5273cf2c296a55
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 22 10:26:10 2022 +0200

    Update bundled JDK to 17.0.3+7
    
    https://www.oracle.com/security-alerts/cpuapr2022.html

commit ebb31a126c2d22c0f74399cad2eb1b0b22724e0a
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Apr 19 21:34:02 2022 +0200

    Disable renaming of tables included in a publication
    
    This disables ALTER RENAME TABLE for tables included in a publication
    and introduces a designated set of operations for them.

commit 2807308c446cd8c68a119a73c7d4eaa67822247c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 25 16:17:15 2022 +0200

    Utilize FutureActionListener mapper in LogicalReplicationService

commit 30f5502ee051dd1a69ea2b9f9926a3a5fbc9f179
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 25 16:12:49 2022 +0200

    Remove ActionListener.toBocnsumer/delegateResponse indirection
    
    It is easier to call onError/finalFuture directly.

commit b024b31084466fe6bf559e86afe451c17c6166a9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 25 15:42:24 2022 +0200

    Avoid relation names copy in LogicalReplicationService
    
    `relationNames` can be a `Collection`, no need to copy the items to a
    separate list.

commit c0685aee2e46ded4d5a683cf4fad2cfda27c08a5
Author: baur <baurzhansahariev@gmail.com>
Date:   Mon Apr 11 16:46:13 2022 +0200

    check that relation doesn't exist on a subscriber after fetching remote cluster state

commit 70497734b03b1ef0caf114a9aeb9ec019a5b7007
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 25 16:38:32 2022 +0200

    Replace use of deprecated APIs in SysSnapshots

commit cdcbdd50845547ba6e86e965029004f3407d27d5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 25 14:09:27 2022 +0200

    Ensure closing SniffRemoteClient closes pending connection
    
    Closing the SniffRemoteClient didn't take care of the case that the
    `discoveredNodes` future may not be completed yet.
    
    There were some CI failures with thread leaks. Couldn't reproduce them
    locally - this is just a guess that they're related to connections not
    getting closed.

commit 4d738eab7cdcb6cda801057c32165e6e5495efa5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 22 14:30:42 2022 +0200

    Handle IllegalIndexShardStateException in getFutureOrderedCollector
    
    Additions of partitions shouldn't result in errors on reads.
    
    Fixes flaky
    `test_deleted_and_recreated_partition_is_also_deleted_and_restored_on_subscriber`
    
        [.partitioned.t1.04132/6MlkGiOKR36fmch5NdNQXg][[.partitioned.t1.04132][1]] org.elasticsearch.index.shard.IllegalIndexShardStateException: CurrentState[RECOVERING] operations only allowed when shard state is one of [POST_RECOVERY, STARTED]
            at app//org.elasticsearch.index.shard.IndexShard.readAllowed(IndexShard.java:1609)
            at app//org.elasticsearch.index.shard.IndexShard.acquireSearcher(IndexShard.java:1192)
            at app//org.elasticsearch.index.shard.IndexShard.acquireSearcher(IndexShard.java:1184)
            at app//io.crate.execution.jobs.SharedShardContext.lambda$new$0(SharedShardContext.java:54)
            at app//io.crate.common.collections.RefCountedItem.markAcquired(RefCountedItem.java:48)
            at app//io.crate.execution.jobs.SharedShardContext.acquireSearcher(SharedShardContext.java:60)
            at app//io.crate.execution.engine.collect.LuceneShardCollectorProvider.getOrderedCollector(LuceneShardCollectorProvider.java:219)
            at app//io.crate.execution.engine.collect.ShardCollectorProvider.lambda$getFutureOrderedCollector$3(ShardCollectorProvider.java:177)
            at app//org.elasticsearch.index.shard.IndexShard.awaitShardSearchActive(IndexShard.java:3223)
            at app//io.crate.execution.engine.collect.ShardCollectorProvider.getFutureOrderedCollector(ShardCollectorProvider.java:175)
            at app//io.crate.execution.engine.collect.sources.ShardCollectSource.createMultiShardScoreDocCollector(ShardCollectSource.java:335)
            at app//io.crate.execution.engine.collect.sources.ShardCollectSource.getIterator(ShardCollectSource.java:263)
            at app//io.crate.execution.engine.collect.MapSideDataCollectOperation.createIterator(MapSideDataCollectOperation.java:58)
            at app//io.crate.execution.engine.collect.CollectTask.start(CollectTask.java:

commit 0f1d36b3c70e44c0cfa796316444dbd30989720e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 22 13:32:53 2022 +0200

    Fix deadlock when closing EventLoopGroup in PgClient
    
    eventLoopGroup.close must not be called from a worker thread of the
    eventLoopGroup itself. Close may block waiting for all threads to
    finish.

commit 1f03aa877102b68ae474e0be9f761d20eb59ce23
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 21 14:49:19 2022 +0200

    Require only metadata for concreteIndices retrieval

commit a7093312f1f1f39140356d95f73c34485643f476
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 22 13:50:50 2022 +0200

    Close connection on error on initial discovery in sniff client
    
    The connection is otherwise not getting closed

commit 07bad5e1637fabd7401fd5b071f5de0465dc07ca
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 21 16:25:41 2022 +0200

    tests: Try to include jobs-log information in stuck tasks assertion error
    
    There are occasional test failures like
    `testRestoreEmptyPartitionedTableUsingALL`:
    
        java.lang.AssertionError: ## node: node_sc4
        {e66bb76b-156d-d2f8-cf52-28be5a8e93a0=Task{id=e66bb76b-156d-d2f8-cf52-28be5a8e93a0, tasks=[DistResultRXTask{id=1, numBuckets=1, isDone=false}], closed=false}}
    
            at __randomizedtesting.SeedInfo.seed([E86E12E22654DE54:47D455E736DF12]:0)
            at io.crate.integrationtests.SQLIntegrationTestCase.assertNoTasksAreLeftOpen(SQLIntegrationTestCase.java:342)
            at jdk.internal.reflect.GeneratedMethodAccessor87.invoke(Unknown Source)
            at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
            at java.base/java.lang.reflect.Method.invoke(Method.java:568)
            at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1758)
            at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:1004)
            at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:299)
            at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:293)
            at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
            at java.base/java.lang.Thread.run(Thread.java:833)
        Caused by: java.lang.AssertionError:
        Expected: is <0>
             but: was <1>
            at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
            at org.junit.Assert.assertThat(Assert.java:964)
            at org.junit.Assert.assertThat(Assert.java:930)
            at io.crate.integrationtests.SQLIntegrationTestCase.lambda$assertNoTasksAreLeftOpen$0(SQLIntegrationTestCase.java:299)
            at org.elasticsearch.test.ESTestCase.assertBusy(ESTestCase.java:755)
            at io.crate.integrationtests.SQLIntegrationTestCase.assertNoTasksAreLeftOpen(SQLIntegrationTestCase.java:294)
            ... 9 more
            Suppressed: java.lang.AssertionError:
    
    This is an attempt to get more information from a failure.

commit 0710c460b43cd15f388a8f876507fbe90a390cdd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 20 12:10:00 2022 +0200

    Retrieve index/template metadata with PublicationsStateAction
    
    This is a follow up to 557278afc1025891b573b6fe107a91dcc91975aa
    
    Instead of:
    
    1) Get the publisher cluster state
    2) Update subscriber cluster state
    3) Retrieve publication state
    
    This changes the flow to:
    
    1) Retrieve publication state (including index & template metadata for
      the tables included in the publications)
    2) Update subscriber cluster state
    
    This helps avoiding any publisher state divergence between 1) and 3) and
    safes one round trip.

commit d59a5e6498bfcd3546a8c995ec89eb25153b3151
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 21 14:27:16 2022 +0200

    Ensure the MetadataTracker reacts to master changes

commit 82e2007405900de505ae9769d2acd6cd8b86d6fa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 20 14:21:19 2022 +0200

    Make IndexNameExpressionResolver all static
    
    The class has no instance variables

commit db337755194ac37950b26305cbb88926fb86f943
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Apr 6 11:48:48 2022 +0200

    Delete crate-logo.png

commit 709b581cc5d050ecee343fa65a1772df51d95eeb
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Apr 4 16:38:18 2022 +0200

    change image to svg and update README.rst

commit 37f92a556983908a14e869fb4f785060d12141bb
Author: baur <baurzhansahariev@gmail.com>
Date:   Tue Apr 19 21:16:36 2022 +0200

    added test case: drop_publication_stops_the_replication_on_subscriber

commit 6e1cbd9f53d03a93d2f885f53b4f98ca79737c77
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 20 14:59:46 2022 +0200

    Require medium sized runners for itests
    
    See https://github.com/crate/crate/pull/12370#issuecomment-1103889406

commit 7c1f89bdfb5cefebe737101526618816915ecc9f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 19 16:38:30 2022 +0200

    Add max_line_length for rst to editorconfig
    
    We've a line length limit for rst files. This should make it easier to
    follow it.

commit 42dd2ea143969c35acbab2e78280464822ceceeb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 20 10:28:08 2022 +0200

    Update netty to 4.1.76
    
    https://netty.io/news/2022/04/12/4-1-76-Final.html

commit 49a2c8a540a59a71c2dea3630dd364749cac0a17
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 20 09:50:50 2022 +0200

    Ensure close of ShardReplicationChangesTracker takes effect
    
    `pollAndProcessPendingChanges` and `close` are called from different
    threads, `cancellable` must be volatile to ensure it is visible.
    
    Cancelling the scheduled action might not have had any effect if the
    scheduled action was already executing some of the async operations.
    This adds another close flag to ensure it stops after the next schedule.

commit db7d2b6bcf36b8d054843c9bece0b75717e16fe3
Author: Baurzhan <baurzhansahariev@gmail.com>
Date:   Tue Apr 19 15:14:57 2022 +0200

    add checkstyle command to the dev docs

commit fc8b09c50ec550901932373054b8aec6b6a0f861
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 19 16:35:30 2022 +0200

    Fix broken AD application guide link
    
    I think this should be a suitable replacement - I am not entirely sure
    what the old link contained.

commit bd324bfcb6fc2a69ba20706dcbf5e506b54f5fe4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 13 15:55:36 2022 +0200

    Rewrite sniff remote cluster connection
    
    Fuses all of:
    
      - RemoteClusterClient
      - RemoteClusterConnection
      - SniffConnectionStrategy
      - RemoteConnectionManager
    
    into a single `SniffRemoteClient` that works more similar to the `PgClient`.
    
    This should fix some concurrency issues with the previous implementation
    which led to flakyness in cases where multiple components try to
    establish a connection at the same time.

commit afd333b4916f05fdd9e394dd325de4c3d77b9870
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 13 15:18:02 2022 +0200

    Remove remote node attr filter functionality in sniff mode
    
    The functionality is not exposed via `CREATE SUBSCRIPTION` 🧹

commit ce2895ee75acf4684de3cdb53a3f77cfbcd039af
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 13 15:05:53 2022 +0200

    Merge SniffConnectionStrategy and RemoteConnectionStrategy
    
    We removed the proxy strategy in favor of the `pg_tunnel` mode and
    SniffConnectionStrategy was the only class left extending
    RemoteConnectionStrategy. The two can be merged.

commit 02ed64a151a32699f2e3bc0032bd6cf768a4a825
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 19 13:58:03 2022 +0200

    Treat IndexNotFoundException as potentially temporary error in logical replication
    
    The `MetadataTracker` will remove permanently deleted indices from the
    subscription and the `ShardReplicationChangesTracker` would stop due to
    the `ShardReplicationService`.
    
    Because of that it should be safe to treat a `IndexNotFoundException`
    happening during changes tracking as temporary (e.g. a partition being
    deleted or something like that)

commit 095ab236b1894afff32ac0d251220c5f90112795
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Wed Apr 13 10:12:04 2022 -0400

    Redirect every calls to execute(..,ActionListener) to execute(..).whenComplete(listener)

commit 86c9e6d54d3cbfa916724fbe7aa4a86c7a68434f
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Mon Apr 11 14:16:36 2022 -0400

    Move from TransportActionProvider to ActionType based approach
    
    Only the subtypes of TransportActions are affected for now

commit f8829b726461a984e157fb8077d1f061b61ba1be
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 13 09:55:19 2022 +0200

    Add ESTimeoutException to list of temporary errors
    
    Got accidentally removed with https://github.com/crate/crate/pull/12345

commit 7c2b07defd905281284f8b693e4f5f6b50e9eea2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 13 10:01:11 2022 +0200

    Ignore partitions still recovering in FetchTask
    
    If a new partition gets created via a subscription it will initially be
    in a recovery state. SELECT statements should ignore these partitiosn
    until they're ready.
    
    Should fix flaky
    `test_deleted_and_recreated_partition_is_also_deleted_and_restored_on_subscriber`

commit 479c2e2c60742b622c70f9eaed9d8e70026158c5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 13 11:08:32 2022 +0200

    Revert "Send rst/don't linger on channel close in tests"
    
    This reverts commit ddd027c91facbde6e15103743358ce886d967416.
    
    Setting SO_LINGER to 0 had the side effect that in some disruption tests
    new connections - created after the disruption cleared - were
    terminated.
    
        [DEBUG][o.e.t.n.Netty4Transport  ] [[cratedb[publisher0][netty-worker][T#1]]] close connection exception caught on transport layer [Netty4TcpChannel{localAddress=/127.0.0.1:36233, remoteAddress=/127.0.0.1:34660}], disconnecting from relevant node
        io.netty.channel.unix.Errors$NativeIoException: readAddress(..) failed: Connection reset by peer
        [DEBUG][o.e.t.n.Netty4Transport  ] [[cratedb[publisher0][netty-worker][T#1]]] close connection exception caught on transport layer [Netty4TcpChannel{localAddress=/127.0.0.1:36233, remoteAddress=/127.0.0.1:34662}], disconnecting from relevant node
        io.netty.channel.unix.Errors$NativeIoException: readAddress(..) failed: Connection reset by peer
    
    Given that seeing SO_LINGER showed otherwise little/no improvement it's
    probably better to revert this for now.
    
    An example test case is `test_subscription_metadata_tracker_retries_on_publisher_disconnect`

commit dfee7d1de0628afa96381013dec4a70e5a2d0c38
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 12 15:51:51 2022 +0200

    Retry retention lease renewal on temporary errors

commit 03aab05ee9ff1cef8b46c256a01005e1274d0b8a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 12 15:41:35 2022 +0200

    Reformat retention lease renewal logic in ShardReplicationChangesTracker
    
    To reduce amount of indentations a bit

commit ca2561e71dc3b5332d70113312ba55bd89455c18
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 12 15:22:42 2022 +0200

    Raise ConnectionException instead of IllegalStateException in SniffConnectionStrategy
    
    To ensure `SQLExceptions.isPotentiallyTemporary` recognises the error as
    potentially temporary.

commit e36bfbbb5ca5f3ba4f62e6fcc3826c79a4fea690
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 12 15:16:59 2022 +0200

    Extend temporary exceptions and re-use same list across tracker components

commit 3282d15f2c3c66d2a6e3b17f02f121c7f2370276
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 12 14:58:17 2022 +0200

    Don't schedule subscription tracking operations on threadPool shutdown
    
    If the subscriber itself is shutting down it shouldn't schedule anymore
    tracking operations.

commit 96242e597c984229f84823f5dfcf086ee5121cef
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Apr 7 17:10:31 2022 +0200

    Improve error messages for unsupported operations on subscribed tables

commit 77f7fbac26c7eef2af44ba87445b259a02bd6d1d
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Apr 12 10:50:02 2022 +0200

    Improve handling of constant join conditions
    
    This adds a rule to the query optimizer to improve the handling
    of constant join conditions to push them down to the collect phase.

commit d06c14c2b966047c87bb68463ad369b772d79ce7
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Wed Apr 6 14:29:09 2022 -0400

    Add support for `UNION DISTINCT` stmt

commit 59f054a601383128c924815bef984277713e38b5
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Tue Apr 5 17:35:05 2022 +0200

    Proofreading fixes for documentation

commit 754a63109adfb8db81d65254fb54be3e210c7d21
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 8 16:36:15 2022 +0200

    Switch to CompletableFuture chaining in ShardReplicationChangesTracker
    
    Reduces the amount of indentation a bit and (subjectively) makes it
    easier to follow the flow of operation.

commit 6432b690008b10fd334b5a894adaa68f4e0f1ca3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 8 16:11:45 2022 +0200

    Prefer function with direct return over callback/consumer in ShardReplicationChangesTracker
    
    Also relates to the previous change of re-using the `RetryRunnable` If
    there was nothing to fetch it also scheduled an operation without it,
    by-passing the retry logic.

commit 2a40376906ec56f2bffe510f341d8db13b3a21f6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 8 16:06:42 2022 +0200

    Keep using RetryRunnable in ShardReplicationChangesTracker
    
    The RetryRunnable was only used once initially to start the operation.
    After the first batch got processed subsequent operations got scheduled
    without it.

commit 91a3edaf6a4f81f8b6e97ea783059739b8aa333c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 11 13:53:53 2022 +0200

    Fix flaky test_subscription_state_order
    
    Failed due to concurrent modifications to the `subscriptionStates` list.
    
        java.util.ConcurrentModificationException
            at __randomizedtesting.SeedInfo.seed([6CFD475C7336AA92:9301F3C70E63C75B]:0)
            at java.base/java.util.ArrayList$Itr.checkForComodification(ArrayList.java:1013)
            at java.base/java.util.ArrayList$Itr.next(ArrayList.java:967)
            at org.hamcrest.collection.IsIterableContainingInOrder.matchesSafely(IsIterableContainingInOrder.java:24)
            at org.hamcrest.collection.IsIterableContainingInOrder.matchesSafely(IsIterableContainingInOrder.java:14)
            at org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:57)
            at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:10)
            at org.junit.Assert.assertThat(Assert.java:964)
            at org.junit.Assert.assertThat(Assert.java:930)
            at io.crate.integrationtests.LogicalReplicationITest.lambda$test_subscription_state_order$11(LogicalReplicationITest.java:448)
            at org.elasticsearch.test.ESTestCase.assertBusy(ESTestCase.java:745)
            at org.elasticsearch.test.ESTestCase.assertBusy(ESTestCase.java:731)
            at io.crate.integrationtests.LogicalReplicationITest.test_subscription_state_order(LogicalReplicationITest.java:447)

commit 03fb63e114591707ff267ce88e4f6bd3203b6e3c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 7 13:43:25 2022 +0200

    Ensure MetadataTracker schedule loop doesn't stop on some conditions
    
    If a subscription was null the loop over the subscriptions continued
    without counting down the `CountdownFutureCallback`. That meant the
    subscription processing never re-scheduled.
    
    This re-structures the future-chaining to avoid that problem,
    reduce the indentation levels and have a structure that closer resembles
    the order of execution.

commit 9358cf8ce0a4d439759d4e92a341ba713cb313a3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 8 15:04:46 2022 +0200

    Update subscription in one cluster state update on changed metadata
    
    `removeDroppedTablesOrPartitions` is called from within a cluster state
    update task. It can and should modify the subscription metadata directly
    instead of firing off another cluster state update task as a side effect

commit b5da0d1780a60ba4960ae23b20f9ac4291640b3d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 7 11:07:31 2022 +0200

    Don't wrap client.execute into BiConsumer in ShardReplicationChangesTracker
    
    Not necessary

commit 3d783163d9c693d618b6f4ad3f2a3703aad5fae6
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Apr 8 13:20:41 2022 +0200

     use default trust store if not configured

commit a78090e0b9eff6ef5776ac12cb28da539477089e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 7 15:22:42 2022 +0200

    Fix failed connectionFuture handling in PgClient.ensureConnected
    
    `connectionFuture.join()` raises an exception if the future completed
    exceptionally. The `isCompletedExceptionally` check _after_ it never
    worked.

commit 792bbcd738de83788fa1ef6969eee0111a819fea
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 7 11:10:34 2022 +0200

    Don't wrap exceptions into RuntimeException/handle ConnectException
    
    The `MetadataTracker` should retry on a `ConnectException`, and we must
    not use `Exceptions.toRuntimeException` but `Exceptions.toException`. If
    exceptions are wrapped in a `RuntimeException` instanceof checks for
    concrete exception types don't work correctly.

commit 801729db4320c3538d24c6d2416f68dacda1b9c6
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Wed Apr 6 17:16:01 2022 +0200

    Update to Admin UI 1.21.0
    
    This improves console highlighting by adding various keywords and data
    types.
    
    - keywords: PUBLICATION and SUBSCRIPTION
    - data types: json, float4, float8

commit f11c70fe34e5ebb7f7ceb4c474c18d7e609d855c
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Tue Apr 5 14:30:34 2022 -0400

    don't forget to handle routing columns when merging index mappings

commit cafe02c2bf6510a787c6d2dfc36a80c518b85663
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 6 13:38:02 2022 +0200

    Replace DeleteSnapshotRequestBuilder with SQL

commit 881860c2a7841b69bd05d5ddcde63ef5d7954e04
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 6 11:51:00 2022 +0200

    Remove unused methods from IndicesAdminClient

commit 2ef72ee02ea77eb7be89b6a497ba8bcc990244b7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 6 11:36:21 2022 +0200

    Remove RefreshRequestBuilder

commit f86d329420a0010558fb2bc64318720ced267f35
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 6 11:15:12 2022 +0200

    Remove unused RequestBuilder classes

commit 6fde07ec2ca55a6f7dff1e2afc6d07aa94582005
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 6 11:03:50 2022 +0200

    Remove prepareDeleteRepository from ClusterAdminClient
    
    Prefer using SQL instead.
    
    Also removes the repository teardown from SysRepositoriesServiceTest
    because the ESIntegTestCase already wipes repositories in
    `afterInternal`

commit 2d3de60042bd6cacde4e1cc34bd63fefda3ef87f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 6 14:08:08 2022 +0200

    Raise user friendly error on invalid subscription connection mode
    
    Also makes the validation eager in both implicit/explicit port cases.
    Before the validation only happened in `ConnectionInfo.fromURL` if the
    port is missing and the default port got evaluated. The mode validation
    then happened on first access within `RemoteCluster`

commit b646472a0eb9e0aa0858a8bf66236ade45269caf
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Apr 6 16:44:18 2022 +0200

    Unwrap exception at the RetentionLeaseHelper to match exception

commit 1edb8692b641582c80dd1a15fef573785fe3ff14
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Apr 6 15:59:53 2022 +0200

    Fix retention lease removal on LR shard close
    
    The internal stored subscription at the ShardReplicationService
    must be only removed at the `afterIndexRemoved` listener, as it
    is used inside the `beforeIndexShardClosed` listener.
    
    The `beforeIndexRemoved` would remove the subscription upfront,
    resulting in that the retention leases on the publisher cluster are
    never removed.

commit 0e588df2c7fb4e45858940a253fce00aed7ee935
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 6 14:39:06 2022 +0200

    Revert "Update bundled JDK to 18+36"
    
    This reverts commit d7dda448d479e43662e3410a62339d0e4ef33edf.
    
    Saw JVM crashes on the development cluster:
    
        Apr 06 12:37:47 cratedb-dev-02 crate[396678]: # JRE version: OpenJDK Runtime Environment Temurin-18+36 (18.0+36) (build 18+36)
        Apr 06 12:37:47 cratedb-dev-02 crate[396678]: # Java VM: OpenJDK 64-Bit Server VM Temurin-18+36 (18+36, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64)
        Apr 06 12:37:47 cratedb-dev-02 crate[396678]: # Problematic frame:
        Apr 06 12:37:47 cratedb-dev-02 crate[396678]: # v  ~StubRoutines::jshort_disjoint_arraycopy

commit dcb09e269a6ec9920a7f00d9d71d2c47104bf14f
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Apr 6 12:05:29 2022 +0200

    Don't cache file inputs inside the RestoreContext
    
    IndexInput file inputs must not be cached inside the RestoreContext,
    accessing a cloned cached input may result in an AlreadyClosedException
    if original input was already closed.
    The main intention of caching the input probably was to close it when
    closing the context, but inputs are already closed after accessed
    inside the GetFileChunkAction.

commit 2e3da3ea24221eac6b7d6e2dd93002a020291bc8
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Tue Apr 5 11:29:06 2022 -0400

    clean up unreleased doc

commit e9bb07632fe83b50488a1ecc082708d292c58fb3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 5 18:01:37 2022 +0200

    Remove the Requests class
    
    This class might make more sense in ES where there is a Java client API.
    For CrateDB purposes we don't need so many different ways to create
    requests.

commit 2fe55434bbb00e9b86399766190d9a1cf96e43ce
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 5 17:32:38 2022 +0200

    Prefer using a client over TransportAction instances in Plan.execute
    
    The Client and the `TransportActionProvider` both serve the same
    purpose: Making it possible to fire off transport requests internally.
    
    We should have one or the other instead of both.
    Due to the use of `Client` in the replication logical it makes more
    sense to stick with the `Client` and deprecate `TransportActionProvider`
    for removal.
    
    This commit only adjusts a single use site to illustrate the new
    pattern. We can adapt other places incrementally.

commit a8ff942b4b40e90c395e3f688cf37c96c3368f3d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 5 17:15:01 2022 +0200

    tests: Replace prepareForceMerge call with OPTIMIZE SQL statement
    
    Allows us to remove some request builder code. 🗑️

commit 34c70b4d58faaeb40eb240ff560ccdeae96795bb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 5 17:09:06 2022 +0200

    Add a CompletableFuture execute variant to ElasticsearchClient
    
    Relates to https://github.com/crate/crate/issues/11940
    Should help us migrate incrementally

commit 0805856faa00d96bec6fd3399637a49845cc7e65
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Apr 1 15:31:02 2022 +0200

    Add implementation/support for ALTER PUBLICATION
    
    Add plan + execution logic for ALTER PUBLICATION.

commit c791e50f6b6c1f135e06462468bde650121bcc14
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 5 17:29:00 2022 +0200

    Retry logical replication of data on cluster block exceptions
    
    Treat a ClusterBlockException on the subscriber as temporarily and
    retry to replay shard changes

commit 8c2048d06af3a22540cb61105d6583e220357403
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 5 11:16:01 2022 +0200

    Fix NPE in RestoreService when an index's metadata isn't available
    
    The metadata may have changed in between API calls on the `Repository`
    (e.g. on the LogicalReplicationRepsitory).
    As such a metadata returned by the previous `getRepositoryData` call
     may not be available by a later `getSnapshotIndexMetadata` call.

commit 9054742519975d549a5bf921737d45ec0b0f2612
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 5 11:11:52 2022 +0200

    Fix metadata tracker re-scheduling/operation chaining
    
    Use completion future chain for all operations:
     1. process changed & dropped relations/partitions
     2. process removed relations/partitions.
    Only release and re-schedule after both steps are done to prevent
    that a new schedule runs concurrently with a previous one.

commit 58e274589c85f6c6f4a25fe8f055f0d0e861d6c1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 5 16:36:34 2022 +0200

    Ignore coverage of benchmarks

commit 30d0db5a71fedd3af16bee62addf2777e918f364
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 5 13:10:17 2022 +0200

    Update codeql github actions to use v2

commit d7dda448d479e43662e3410a62339d0e4ef33edf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 29 12:12:20 2022 +0200

    Update bundled JDK to 18+36

commit f7c1affff6545ffe46a5e5f502e11f49adf89a20
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Mon Apr 4 13:12:19 2022 -0400

    fix curly braces within `ILIKE` operands to be treated as a normal character

commit 4596b46a02eacc2c9d40e02b8461f2ca81ecf508
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 5 12:06:04 2022 +0200

    Remove unused accessControl from session

commit ddd027c91facbde6e15103743358ce886d967416
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 5 16:09:38 2022 +0200

    Send rst/don't linger on channel close in tests
    
    I suspect we may be seeing some test failures due to running out of
    available ports because closing channels doesn't immediately release the
    resources but instead the connections remain in a `TIME_WAIT` state for
    some time.
    
    The proper fix for this is to have clients close the connection instead
    of the server, but in the tests that doesn't always work.

commit b3a5cb326d283f0a6079e6706ace42118f5d9697
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 29 18:13:44 2022 +0200

    Merge PgDecoder with SslReqHandler and extract from PostgresWireProtocol
    
    I suspect that the `SslReqHandler` was a separate component had
    something to do with licensing before CrateDB 4.0
    
    Integrating the logic into the Decoder makes the logic a bit simpler and
    it's also possible to reduce the amount of different states.
    
    The change is also partly motivated by
    https://github.com/crate/crate/issues/12002. With the changes the
    Decoder is more decoupled from other components and we could at some
    point consider to create some kind of `libs/netty-pgwire` module to work
    further into that direction.

commit dfb3cf18d4ae61e0672c035033377a2d95c48e4f
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Mon Mar 21 11:21:04 2022 +0100

    Update license notes for dependency packages

commit f670741fc4f3cf6f834c9c70ba634c71dcdb3fe0
Author: baur <baurzhansahariev@gmail.com>
Date:   Mon Apr 4 19:31:34 2022 +0200

    remove mention of ALTER SUBSCRIPTION from the docs

commit 2849a2cee64eed02d030cc55ea7357767119eff9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 5 11:18:06 2022 +0200

    Print server logs on doc-test ConnectionError
    
    On CI we saw some connection errors during the doc-test execution:
    
        Traceback (most recent call last):
          File "/usr/lib/python3.9/doctest.py", line 2170, in setUp
            self._dt_setUp(test)
          File "/var/lib/jenkins/workspace/CrateDB/crate_on_pr/blackbox/test_docs.py", line 361, in setUpEmpDeptAndColourArticlesAndGeo
            setUpPhotosAndCountries(test)
          File "/var/lib/jenkins/workspace/CrateDB/crate_on_pr/blackbox/test_docs.py", line 355, in setUpPhotosAndCountries
            setUpCountries(test)
          File "/var/lib/jenkins/workspace/CrateDB/crate_on_pr/blackbox/test_docs.py", line 329, in setUpCountries
            _execute_sql("""copy countries from '{0}'""".format(dept_file))
          File "/var/lib/jenkins/workspace/CrateDB/crate_on_pr/blackbox/test_docs.py", line 142, in _execute_sql
            c.execute(stmt)
          File "/var/lib/jenkins/workspace/CrateDB/crate_on_pr/blackbox/.venv/lib/python3.9/site-packages/crate/client/cursor.py", line 53, in execute
            self._result = self.connection.client.sql(sql, parameters,
          File "/var/lib/jenkins/workspace/CrateDB/crate_on_pr/blackbox/.venv/lib/python3.9/site-packages/crate/client/http.py", line 396, in sql
            content = self._json_request('POST', self.path, data=data)
          File "/var/lib/jenkins/workspace/CrateDB/crate_on_pr/blackbox/.venv/lib/python3.9/site-packages/crate/client/http.py", line 522, in _json_request
            response = self._request(method, path, data=data)
          File "/var/lib/jenkins/workspace/CrateDB/crate_on_pr/blackbox/.venv/lib/python3.9/site-packages/crate/client/http.py", line 513, in _request
            self._drop_server(next_server, ex_message)
          File "/var/lib/jenkins/workspace/CrateDB/crate_on_pr/blackbox/.venv/lib/python3.9/site-packages/crate/client/http.py", line 581, in _drop_server
            raise ConnectionError(
        crate.client.exceptions.ConnectionError: No more Servers available, exception from last server: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
    
    The change here extends the `ConnectionError` with the log output of the
    CrateDB node to get more insights.

commit 607debeadc8f69bca34f6453efcdb8110e7798d8
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Apr 4 18:50:36 2022 +0200

    Use hosts as seed nodes at `sniff` remote connection mode
    
    The hosts of a connection URI must be used as seed nodes when
    using the `sniff` remote connection mode.
    This makes the additional `seed` URI parameter (setting) obsolete.
    As all hosts are already parsed and validated while analyzing, this
    also results in good errors when using invalid hosts instead of
    hard to understand `NoSeedNodeLeftException`.

commit 7e1099fa2c3709dd7bbc937cd2b9ef6bb0e893e4
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 5 09:01:22 2022 +0200

    RemoteClusters must reconnect if previous connection fails
    
    If a previous call to connect and retrieve a client fails and such
    returns a NULL client instance, another call to `connect` must
    re-try a connect call instead of returning the client.

commit 38904ed5d094772fc4e8c21ba32e6272708fa54e
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Mon Mar 14 12:43:09 2022 -0400

    implement cancellation part of postgres wire protocol

commit afcaa6f638a8efca5064099b8178724e65ecf24f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 4 15:26:44 2022 +0200

    bp: Flush translog writer before adding new operation
    
    https://github.com/elastic/elasticsearch/commit/56092b1a9fdfd4e920a375793339a275fd5e2c52
    
    This fixes the flaky `testFatalIOExceptionsWhileWritingConcurrently`
    test

commit 261a6f01aedd6860ebec8e259c92ccac70e9b494
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 4 15:25:19 2022 +0200

    bp: Write translog operation bytes to byte stream
    
    https://github.com/elastic/elasticsearch/commit/dd4b0d85fe015f85e5c7ae0a73f72fd87a4eb354

commit b7bb75dc5478727c819278d2bdae0099fc720da6
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Mar 16 15:32:23 2022 +0100

    Catch non-IO file parsing failures to make COPY FROM fail gracefully

commit d85d2466d7f0d576b260eb621ac15094431c2365
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 4 16:18:10 2022 +0200

    Revert "Enable lookingForStuckThread for test timeouts"
    
    This reverts commit 0e9dca1abfae57da7a94cd356f09b3e8589323fc.
    
    It appears as if this has caused new test failures:
    
    ```
    java.lang.IllegalThreadStateException
            at __randomizedtesting.SeedInfo.seed([51B923EB19F2BCE0:6B8805B13B4B3757]:0)
            at java.base/java.lang.ThreadGroup.addUnstarted(ThreadGroup.java:892)
            at java.base/java.lang.Thread.<init>(Thread.java:434)
            at java.base/java.lang.Thread.<init>(Thread.java:708)
            at org.elasticsearch.common.util.concurrent.EsExecutors$EsThreadFactory.newThread(EsExecutors.java:230)
            at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.<init>(ThreadPoolExecutor.java:630)
            at java.base/java.util.concurrent.ThreadPoolExecutor.addWorker(ThreadPoolExecutor.java:920)
            at java.base/java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1364)
            at org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor.execute(EsThreadPoolExecutor.java:71)
            at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:123)
            at org.elasticsearch.test.InternalTestCluster.lambda$startAndPublishNodesAndClients$23(InternalTestCluster.java:1486)
    ```

commit 50f45c9a12b52c234641b547bf99dce06ccdd3f5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 29 16:54:59 2022 +0200

    Migrate some TransportAction ActionListener usages to prefer CompletableFuture
    
    Relates to https://github.com/crate/crate/issues/11940

commit cbee37468b794e78b2d9c7a3d1d737b464567cb9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 4 14:08:22 2022 +0200

    Ensure eventLoopGroup is closed on PgClient close
    
    The synchronization in PgClient was a bit questionable.
    
    The assignments of `connectionFuture` happened in a synchronized block,
    but reads in close did not.
    
    Other assignments like `eventLoopGroup` happened outside of a
    synchronized block as well.
    
    I think it would have been possible for a connection to close (e.g. due
    to a node disconnect error) - leading to a reconnect within the
    PgClient, which meant borrowing a new `eventLoopGroup` without releasing
    the former.
    
    This commit moves all releasable resources into the connection for the
    success case and adds a listener to the connectionFuture for the failure
    case.

commit 0e9dca1abfae57da7a94cd356f09b3e8589323fc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 4 13:49:05 2022 +0200

    Enable lookingForStuckThread for test timeouts
    
    Might help getting more insights into why some tests occasionally timeout on CI.

commit 4791ef8a00715c0a478cb3a71d25961fae43d059
Author: disideris <disideris@gmail.com>
Date:   Fri Apr 1 10:40:50 2022 +0300

    set default port to 5432 if creating a subscription with pg_tunnel mode

commit ebee789b655fe1aceb1c656188f0fd1b5569169f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 31 11:17:21 2022 +0200

    fixup! Fix handling of closed partitions on INSERT .. FROM VALUES

commit aed002c60a16d136cf6b8fd98fed9237f74aca36
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 29 16:27:32 2022 +0200

    Fix handling of closed partitions on INSERT .. FROM VALUES
    
    The cluster block check used equals, which didn't cover the cluster
    block created in:
    
    https://github.com/crate/crate/blob/e6bac64550317ffa6d9d1e8dd875dbf1e7ecc5a4/server/src/main/java/io/crate/execution/ddl/tables/TransportCloseTable.java#L373-L383
    
    `testInsertIntoClosedPartition` was flaky because of this and failed
    with:
    
        org.elasticsearch.cluster.block.ClusterBlockException: blocked by: [FORBIDDEN/4/Table or partition preparing to close. Reopen the table to allow writes again or retry closing the table to fully close it.];
            at __randomizedtesting.SeedInfo.seed([774DB56220DFE1CE:3BC95ADA0E5BE]:0)
            at app//org.elasticsearch.cluster.block.ClusterBlocks.indexBlockedException(ClusterBlocks.java:207)
            at app//org.elasticsearch.action.support.replication.TransportReplicationAction.blockExceptions(TransportReplicationAction.java:245)
            at app//org.elasticsearch.action.support.replication.TransportReplicationAction$ReroutePhase.doRun(TransportReplicationAction.java:632)
            at app//org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
            at app//org.elasticsearch.action.support.replication.TransportReplicationAction.doExecute(TransportReplicationAction.java:173)
            at app//org.elasticsearch.action.support.replication.TransportReplicationAction.doExecute(TransportReplicationAction.java:90)
            at app//org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:51)
            at app//io.crate.planner.operators.InsertFromValues.execute(InsertFromValues.java:714)
            at app//io.crate.planner.operators.InsertFromValues.lambda$execute$0(InsertFromValues.java:285)
            at java.base@17.0.2/java.util.concurrent.CompletableFuture.uniComposeStage(CompletableFuture.java:1187)
            at java.base@17.0.2/java.util.concurrent.CompletableFuture.thenCompose(CompletableFuture.java:2309)
            at app//io.crate.planner.operators.InsertFromValues.execute(InsertFromValues.java:281)
            at app//io.crate.action.sql.Session.singleExec(Session.java:679)
            at app//io.crate.action.sql.Session.exec(Session.java:542)
            at app//io.crate.action.sql.Session.triggerDeferredExecutions(Session.java:516)
            at app//io.crate.action.sql.Session.sync(Session.java:500)
            at app//io.crate.testing.SQLTransportExecutor.execute(SQLTransportExecutor.java:265)
            at app//io.crate.testing.SQLTransportExecutor.execute(SQLTransportExecutor.java:243)
            at app//io.crate.testing.SQLTransportExecutor.executeTransportOrJdbc(SQLTransportExecutor.java:189)
            at app//io.crate.testing.SQLTransportExecutor.exec(SQLTransportExecutor.java:136)
            at app//io.crate.integrationtests.SQLIntegrationTestCase.execute(SQLIntegrationTestCase.java:432)
            at app//io.crate.integrationtests.SQLIntegrationTestCase.execute(SQLIntegrationTestCase.java:589)
            at app//io.crate.integrationtests.PartitionedTableIntegrationTest.testInsertIntoClosedPartition(PartitionedTableIntegrationTest.java:197)

commit 3af6bcd967a90dcdcb91e0bff18380045dfebc7d
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Apr 1 09:48:54 2022 +0200

    Retrieve remote client once per poll in metadata tracker
    
    On a poll, 2 requests are made to the remote cluster which can use
    the same remote client instance instead of calling the thread
    protected getter multiple times.

commit 6d848f626637661bc105a2f44efbb0c277347382
Author: Niklas Schmidtmer <niklas@crate.io>
Date:   Thu Mar 31 16:27:48 2022 +0200

    Proofreading of logical replication docs

commit e0182cebfe26c93cf9813b43319b0d9aa8b65a67
Author: baur <baurzhansahariev@gmail.com>
Date:   Thu Mar 31 17:12:18 2022 +0200

    expose safe connection string

commit e8410d573910489ae075797577e9df2392445720
Author: Baur <baurzhansahariev@gmail.com>
Date:   Thu Mar 31 00:38:40 2022 +0200

    document logical replication tables

commit 1926a045abc52d8faaf7bc889945d2d1235d1286
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Mar 31 14:49:06 2022 +0200

    Use current cluster state to resolve relations of publications
    
    Instead of resolving publications over the LogicalReplicationService,
    which may use a different cluster state, use the current given
    cluster state to resolve it.
    Same for resolving relations, use current cluster state instead of
    via Schemas exposed ones.

commit 557278afc1025891b573b6fe107a91dcc91975aa
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Mar 31 13:10:16 2022 +0200

    Use publications state action to retrieve new relations
    
    Instead of extracting new relations outside of the publisher cluster
    state, the PublicationsStateAction must be used inside the metadata
    tracker because it will also check priviliges and required table
    settings.
    As the publications state action may operate on a different (older)
    cluster state than the remote cluster state retrieved by the
    metadata tracker, this change should also fix flaky tests
    (ensuring all logic operates on the same cluster state).

commit 9dd66eb9a65cffb54f702fbf958b538bc5d31a7d
Author: Johannes Faigle <johannes.faigle@crate.io>
Date:   Wed Mar 30 10:45:12 2022 +0200

    Clarify ALTER TABLE REROUTE note
    
    PARTITION clause is only relevant for partitioned tables

commit ad51e4c9989843c3770b99b0d00ea0c0499d653b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 31 14:46:23 2022 +0200

    Replace ArrayList with ArrayDeque in ShardReplicationChangesTracker
    
    `remove(0)` on a `ArrayList` is `O(n)` because it shifts data around. On
    a `ArrayDeque` it is `O(1)`
    
    This also removes the synchronization. On a first glance if there were
    concurrent access the existing subsequent `isEmpty` checks looked
    suspicious but as far as I can tell the `missingBatches` collection is
    never accessed from multiple threads at the same time. There may be
    context switches due to the scheduled `Runnable`, but only one thread is
    running the tracker logic at a time.

commit 5d4b1ebde67d46e1681402de20c7bb8738532bad
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 31 14:13:08 2022 +0200

    Use a custom record to model seqNoRange in changes tracker
    
    Avoids boxing and allows us to give a name to the properties.

commit f789ffcce15975f87e73b4de387d5370113a5a2b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 16 16:52:57 2022 +0100

    bp: Enable replication retries on 7.9+
    
    https://github.com/elastic/elasticsearch/commit/1a24916fef8ccfbdc0eb8f1ab18b12ea7b2e3910

commit 9b830d19d769d89a316b394b78c766f1b6ca3512
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 16 15:53:33 2022 +0100

    bp: Retry failed replication due to transient errors (#56230)
    
    https://github.com/elastic/elasticsearch/commit/2074412d79f47941e5ee8b0044f5971570b0ba42

commit 0201e05a2883349f25dd7478a05be0735437f543
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 16 16:06:22 2022 +0100

    bp: Handle Rejections when Scheduling RetryableAction
    
    https://github.com/elastic/elasticsearch/commit/a5a251d8c07905bb7c31cf8a629158c281f0864f

commit 3fae59c22a57f16ad076c876a7b7663f55fc5746
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 16 16:05:30 2022 +0100

    bp: Fully stop RetryableAction when cancelled
    
    https://github.com/elastic/elasticsearch/commit/9e376589a69e55460e3fcaacbefc2395d66dc775

commit 059df88de1ae65b0855a6fae81874372bc4e16a8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 16 15:40:26 2022 +0100

    bp: Use given executor for global checkpoint listener
    
    https://github.com/elastic/elasticsearch/commit/5e96d3e59aeff620257ceea460b8d46741b7f46d

commit 136341a9e1e87c658f8ea0ce36876c30f62f6bfa
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Mar 29 14:47:38 2022 +0200

    Update crate-logo.png
    
    to align with the CI refresh

commit f4167c44b897b6d1f188b6bf54b749914e517f25
Author: Baurzhan <baurzhansahariev@gmail.com>
Date:   Mon Mar 28 15:00:29 2022 +0200

    Update logical replication security section

commit 2866dfdaf33551d55ed84993ab70f9915901c41c
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Mar 30 17:01:48 2022 +0200

    Decrease remote state poll time in MetadataTrackerITest
    
    Use default poll time of the LogicalReplicationTestCase of 10ms.
    This speeds up tests and maybe solve timeout issues which rarly
    happen currently.

commit 0e1df68e89a4b9d872946ee02f0ca206e1fb1eed
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Mar 30 16:58:25 2022 +0200

    Skip indices with non-active primary shards on logical replication
    
    Restoring indices with non-active (unassigned) primary shards will
    fail, so they must be excluded from the logical-replication
    repository and metadata tracking.

commit 0d1f2892e0df4e34b610008e8615990213e9a0b6
Author: Baur <baurzhansahariev@gmail.com>
Date:   Wed Mar 30 15:14:51 2022 +0200

    increase timeout for replication in tests

commit 4a96eaaa3366c9b853d2f39e87c5632ae8c8b0b3
Author: Johannes Faigle <johannes.faigle@crate.io>
Date:   Sun Mar 27 21:57:33 2022 +0200

    Use correct regex case-insensitive match operator

commit 076b57fdf448773efc4b304b5db81e8e2a12e384
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 29 11:20:18 2022 +0200

    Add a `prefer` ssl mode for the pg_tunnel subscription mode
    
    Using `prefer` will work if the server supports SSL or if it doesn't.

commit 2322bd7f9e34420d720311f4255e2cd379932e22
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 29 15:40:33 2022 +0200

    Include stacktrace in PostgreSQL error response
    
    Makes it easier to see where something went wrong in our test suite if a
    test case executes queries via JDBC.
    
    In addition to showing the stacktrace from the testlayer like this:
    
        at __randomizedtesting.SeedInfo.seed([8374F31602C3F2DE:F43AFAE18FBCF6AE]:0)
        at app//org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2674)
        at app//org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2364)
        at app//org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:354)
        at app//org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:484)
        at app//org.postgresql.jdbc.PgStatement.execute(PgStatement.java:404)
        at app//org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:162)
        at app//org.postgresql.jdbc.PgPreparedStatement.execute(PgPreparedStatement.java:151)
        at app//io.crate.testing.SQLTransportExecutor.executeAndConvertResult(SQLTransportExecutor.java:379)
        at app//io.crate.testing.SQLTransportExecutor.executeWithPg(SQLTransportExecutor.java:330)
        at app//io.crate.testing.SQLTransportExecutor.executeTransportOrJdbc(SQLTransportExecutor.java:179)
        at app//io.crate.testing.SQLTransportExecutor.exec(SQLTransportExecutor.java:136)
    
    It now starts the error with the CrateDB stack trace:
    
        at：org.elasticsearch.cluster.block.ClusterBlocks.indexBlockedException(ClusterBlocks.java:207)
        org.elasticsearch.action.support.replication.TransportReplicationAction.blockExceptions(TransportReplicationAction.java:245)
        org.elasticsearch.action.support.replication.TransportReplicationAction$ReroutePhase.doRun(TransportReplicationAction.java:632)
        org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
        org.elasticsearch.action.support.replication.TransportReplicationAction.doExecute(TransportReplicationAction.java:173)
        org.elasticsearch.action.support.replication.TransportReplicationAction.doExecute(TransportReplicationAction.java:90)
        org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:51)
        io.crate.planner.operators.InsertFromValues.execute(InsertFromValues.java:714)
        io.crate.planner.operators.InsertFromValues.lambda$execute$0(InsertFromValues.java:285)
        java.base/java.util.concurrent.CompletableFuture.uniComposeStage(CompletableFuture.java:1187)
        java.base/java.util.concurrent.CompletableFuture.thenCompose(CompletableFuture.java:2309)
        io.crate.planner.operators.InsertFromValues.execute(InsertFromValues.java:281)
        io.crate.action.sql.Session.singleExec(Session.java:679)
        io.crate.action.sql.Session.exec(Session.java:542)
        io.crate.action.sql.Session.triggerDeferredExecutions(Session.java:516)
        io.crate.action.sql.Session.sync(Session.java:500)

commit e6bac64550317ffa6d9d1e8dd875dbf1e7ecc5a4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 29 14:30:44 2022 +0200

    Increase timeout for replication in test_new_table_and_new_partition_is_replicated
    
    On CI the test `test_new_table_and_new_partition_is_replicated` fails
    occassionally with:
    
        java.lang.AssertionError:
        Expected: is "id\n"
             but: was ""
            at __randomizedtesting.SeedInfo.seed([3A1F762496632DC2:FB2648E819D2EB93]:0)
            at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
            at org.junit.Assert.assertThat(Assert.java:964)
            at org.junit.Assert.assertThat(Assert.java:930)
            at io.crate.integrationtests.MetadataTrackerITest.lambda$test_new_table_and_new_partition_is_replicated$7(MetadataTrackerITest.java:155)
            at org.elasticsearch.test.ESTestCase.assertBusy(ESTestCase.java:770)
            at org.elasticsearch.test.ESTestCase.assertBusy(ESTestCase.java:744)
            at io.crate.integrationtests.MetadataTrackerITest.test_new_table_and_new_partition_is_replicated(MetadataTrackerITest.java:151)
    
    Given that I cannot reproduce the issue locally an assumption is that it
    is a timing issue with CI being slower.
    
    This increases the time we wait for the data to be replicated before
    failing the test case. If it is indeed a timing issue this should
    resolve it. If it will still fail we must assume that there is a bug.

commit 702ed74f4afb7c25df4fdf09480c9766470929cd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 29 13:50:57 2022 +0200

    Fix handling of missing indexMetadata in createMultiShardScoreDocCollector
    
    Fixes the flaky test `MetadataTrackerITest.test_deleted_partition_is_replicated`
    
    Failed with:
    
        java.lang.NullPointerException: Cannot invoke "org.elasticsearch.cluster.metadata.IndexMetadata.getIndex()" because the return value of "org.elasticsearch.cluster.metadata.Metadata.index(String)" is null
            at __randomizedtesting.SeedInfo.seed([DAF7CE9C990E194C:3B74E831F40DDD04]:0)
            at io.crate.execution.engine.collect.sources.ShardCollectSource.createMultiShardScoreDocCollector(ShardCollectSource.java:317)
            at io.crate.execution.engine.collect.sources.ShardCollectSource.getIterator(ShardCollectSource.java:260)
            at io.crate.execution.engine.collect.MapSideDataCollectOperation.createIterator(MapSideDataCollectOperation.java:58)
            at io.crate.execution.engine.collect.CollectTask.start(CollectTask.java:162)
            at io.crate.execution.jobs.RootTask.start(RootTask.java:191)
            at io.crate.execution.jobs.transport.TransportJobAction.nodeOperation(TransportJobAction.java:103)
            at io.crate.execution.jobs.transport.TransportJobAction.nodeOperation(TransportJobAction.java:50)
            at io.crate.execution.support.NodeActionRequestHandler.messageReceived(NodeActionRequestHandler.java:48)
            at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:59)
            at org.elasticsearch.transport.InboundHandler$RequestHandler.doRun(InboundHandler.java:257)
            at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
            at java.lang.Thread.run(Thread.java:833)

commit 6cd110c9e8898cc9ed4d911459ba1ee76efcc01a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 28 18:00:05 2022 +0200

    Remove unnecessary subscriptions copy from MetadataTracker
    
    No need to make a defensive copy in `run` - the subscriptions already
    get copied on every update (copy-on-write).

commit 08d4e06e2513830da1f7c37e7b069bf6278c0d3d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 22 15:05:31 2022 +0100

    Add a `pg_tunnel` mode for subscriptions/replication

commit da182b808a67ba7c08cfe7423f579487dc799860
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 28 14:02:06 2022 +0200

    Fix privileges and owner check for DROP/ALTER publication/subscription
    
    Add missing checks for AL privileges for DROP and ALTER publication
    and subscription.
    Additional add missing owner or superuser check while dropping
    or altering a publication.

commit b5a084c2688548ad2c81a0c2c2e2561a52cc2106
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Mon Mar 28 13:14:06 2022 +0200

    Updated to Admin UI 1.20.2
    
    This fixes duplicate entries in query history per
    https://github.com/crate/crate-admin/pull/753.

commit 80bf834d0bc9d01d2b8daada92a606b1db808fe2
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Mar 25 14:39:08 2022 +0100

    Add write protection of replicated empty partitions
    
    Writes to empty replicated partitions and such, creating new
    partitions must be prevented.
    This adds the required setting to template metadata, resulting
    in read only allowed operations.

commit ca6a9b6cf157cca8f6f373d14d5235a133b46c99
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Mar 23 11:27:42 2022 +0100

    Fix metadata tracker index comparison and postpone restore logic
    
    The original index UUID of the publisher index must be stored
    inside the replicated index to be able to make correct comparison
    against the publisher cluster state.
    If a partition is deleted and re-created on the publisher, the
    index UUID will change and such we can detect this on the subscriber.
    
    Additionally, possible restore operation of new indices must
    be postponed until all nodes consumed the new cluster state on the
    subscriber such as deleted indices. On replication index deletion,
    shard based retention leases on the publisher are removed.
    This must be done before any new index with the same name is created
    which re-adds retention leases.

commit 11c7ff64be261aa9a17a9f2c3a48f58f99d8a758
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 21 17:38:32 2022 +0100

    Add support for replicating dropped tables and partitions
    
    Dropped tables and partitions will be removed on the subcriber.
    If a user want to prevent this, the subscription could be dropped
    which turns replicating tables into normal ones.

commit 3d80f1feef98927f6bdaf530da6462da7c18dcf3
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 21 17:37:21 2022 +0100

    Move some logical replication loggers to debug level
    
    These log messges are mostly interesting while debugging,
    in normal operation they just create, maybe even confusing, noise.

commit 85b662aa9527ae8e9d58f83c7b43c5741899cf7f
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 21 15:42:06 2022 +0100

    Disable randomized schemas on MetadataTracker itest

commit cc8a7df6e90143091c8285d387e127af8d5b4939
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 21 15:44:35 2022 +0100

    Introduce RemoteCluster to abstract different remote connection types
    
    The ConnectionStrategy abstraction is not well suited to implement
    pg-tunneling. This adds a new abstraction layer to support encapsulating
    the pg-tunneling strategy.
    
    The existing RemoteConnectionStrategy abstraction will be changed later.

commit 9d5631aac64ed5c0203edc5c40ccae348bc780fd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 21 15:26:45 2022 +0100

    Extract remote address parser into dedicated file
    
    For easier re-use in the upcoming pg-tunneling logic

commit 4185ba2490170e9324e50d76571f03190233ee41
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 21 15:06:12 2022 +0100

    Remove unused proxy address setting from SniffConnectionStrategy

commit 850583ecd80521dba87b57b0fb53df979fff5128
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Mar 10 13:50:57 2022 +0100

    Add support for detecting and replicating new tables and partitions
    
    Detect new tables and partitions exposed by subscribed publications
    and initiate a complete restore or these new tables/partitions
    using the LogicalReplicationRepository.

commit 915e01cb991f9c139f276894c5a2f58fc8e10d5f
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Mar 3 15:13:37 2022 +0100

    Clean up metadata tracker unit tests

commit 2e458778bbc78b6d07d081b305c412728b014200
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Mar 11 16:16:21 2022 +0100

    Add templates option to the ClusterState Action/Request
    
    If indices are set on the ClusterStateRequest, the respond metadata
    will only contain the IndexMetadata of these indices but no templates.
    The general idea behind is to not respond the complete metadata if one
    is just interested in some index metadata.
    This is general fine, but if concret index and template metadata is
    wanted, the only option till now is to not provide these indices
    inside the request but request the whole metadata instead.
    
    This commit adds additional support for requesting conrete templates
    metadata no matter if concrete indices metadata is requested or not.

commit 562abc8a358c344e3986cc1f1a27e06cec65f43c
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Mar 15 15:47:03 2022 +0100

    Fix drop subscription with replicated partitioned tables
    
    Index names must be resolved for partitioned table relations.
    Relations may not exists yet due to restore failures, such
    indices must be resolved lienent while trying to close or open them.

commit 6204ab62b407e244a94c1b76088d96cb96b747cd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 18 14:43:45 2022 +0100

    Remove shouldRebuildConnection from connectionStrategy
    
    Connections are managed as part of subscriptions and don't implicitly
    change due to some setting changes.

commit 41d8270a845d9149a360d18f1b70f936250241a2
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Mar 10 15:58:11 2022 +0100

    Don't listen for restoreInProgress if restore is done already
    
    If the RestoreInfo is immediately available (e.g. by only restoring metadata),
    no restore is in progress anymore and the completion logic must be called directly
    instead of listening to cluster state changes.

commit 27fa1c2e70f054dd8926c27c5281d1e4792dcd67
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Feb 23 16:01:12 2022 +0100

    Metatracker must use pollDelay value from LogicalReplicationSettings
    
    Setting could have changed dynamically which is only read by setting consumers

commit 9d6523a52a9cc6123f3cdbc759781a9c2ec956f8
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Dec 14 13:03:34 2021 +0100

    Simplified metadata tracker integration tests

commit 8f0525290ce86294bc364ae04ee329cc2886dfd2
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Dec 14 12:42:06 2021 +0100

    Stop tracking subscriptions metadata on unrecoverable errors
    
    But keep scheduling a new poll (retry) on recoverable once like
    node disconnects etc.
    Set subscription state to FAILED on unrecoverable errors.

commit 2608f2de393caf215a24d557c5a20eb4518fa0b3
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Dec 13 16:48:22 2021 +0100

    Fix error handling while running the metadata tracker
    
    Starting or scheduling the tracker is done for all subscriptions.
    Thus a possible error happening while trying to get changes for one
    subscription should not stop tracking of the other subscriptions.

commit 96c6bc6f399a9e96350f63e6bcd1fa182f55b24a
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Dec 13 16:43:46 2021 +0100

    Stop ShardReplicationService when Node stops

commit 86cb9f717020cecba02b1b6ba958a5d21327818c
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Feb 24 09:30:28 2022 +0100

    Resolve subscripted relations by subscription metadata
    
    The subscription metadata contains all relations belonging to it.
    Use this information instead of filtering all tables by the subscription
    index setting.

commit 553a59b62ff7b840268944decf361e54f422c935
Author: baur <baurzhansahariev@gmail.com>
Date:   Mon Feb 21 10:13:02 2022 +0100

    document soft delete requirement

commit e7fa317b97a2c6a80a6b5be453e0995a481c5c76
Author: baur <baurzhansahariev@gmail.com>
Date:   Mon Feb 21 21:24:28 2022 +0100

    document logical replication settings

commit 11e6d3a4f3dfcfcd0ffdbe7e808e1791fb372ea9
Author: baur <baurzhansahariev@gmail.com>
Date:   Thu Feb 17 23:44:05 2022 +0100

    connection info docs and seeds parsing fix

commit 61b4f7a43dd2d37557cb1a596741efbc50cae2a4
Author: baur <baurzhansahariev@gmail.com>
Date:   Mon Feb 21 08:59:42 2022 +0100

    fix jenkins failures

commit 6857a28b669b6e6f056e59cbfdc760c59739701c
Author: baur <baurzhansahariev@gmail.com>
Date:   Tue Feb 8 10:55:03 2022 +0100

    implement drop subscription in 3 requests

commit 982c9ea8fe9dbb3eec24060155a7ec1ce3892d34
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 15 14:00:37 2021 +0100

    Don't log error in ShardChangesAction globalCheckpointListener
    
    The error gets propagated to the listener and whoever provides the listener
    can decide how to deal with it.
    
    Logging all errors can be misleading - for example when stopping a node,
    shards will get closed which can fail already pending requests.

commit f895b1cae9bf081c49cb7080a588dcf6b4e06227
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 14 16:49:27 2021 +0100

    Close replication service and remote clusters earlier on node stop
    
    This changes the order to avoid error messages in logs caused by
    something getting closed that was still in use by another component.
    
    LogicalReplicationService uses RemoteClusters and RemoteClusters depends
    on TransportService (among others)

commit f064fa31b2a75880a98d28597e9771a191b1eb71
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 24 14:40:58 2021 +0100

    Remove proxy connection strategy
    
    Will be replaced with the PG tunneling.

commit 484946457244884dcf936520adde4f03dd9daee1
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Dec 13 15:41:30 2021 +0100

    Fix response handling on logical replication repository restore
    
    Any error happening while updating the subscription state on a
    successful restore must be ignored. The state updating must not
    break a repository restore flow.

commit bfd5efa25ec6c591cd79e9429a170d481ab47c78
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Nov 30 17:42:46 2021 +0100

    Add replication state for each subscribed table
    
    Add state information and possible failure reason for each relation inside the subscription.
    It is exposed via the pg_subscription_rel system table.

commit bebcbe971faa0ff5bfbfd75d1e1264911b1500bf
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Dec 8 11:01:05 2021 +0100

    Use futures instead of action listeners at LogicalReplicationService
    
    See https://github.com/crate/crate/issues/11940 for reasons.

commit 9006b22973e2acbce76b741fed2490cf33c4e4a3
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Nov 30 17:36:39 2021 +0100

    Track index metadata settings for replicated tables

commit b353da9c7563eff959a2943e35337232c4c9eddc
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Nov 30 17:34:55 2021 +0100

    Prevent changes of static index metadata settings on published tables

commit 6b3652824c2f62001a154ecf7437c8af289a1e81
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 26 10:38:46 2021 +0100

    Forbid DDL and DML operations on replicating tables
    
    DML and DDL operations must not be allowed on tables which are
    replicating by an active subscription.

commit bb62c9fd77a6309fa1773be44e20f298917c1c4b
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 19 12:00:45 2021 +0100

    Add seqno validation to SubscriberEngine
    
    Throw an exception if seqno is missing on index + delete operations to ensure
    that this engine is only used for replicating indices.

commit 041f56b2506fa3b71b089563e4d88aaa902797a0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 29 14:56:57 2021 +0100

    Ensure RemoteClusters & replication service are closed on node shutdown

commit 05d712ad08906ac8e968172c8f473153aec92190
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 23 14:19:48 2021 +0100

    Extract a RemoteClusters component from LogicalReplicationService
    
    To encapsulate some of the connection management.
    It should make the integration of the PG tunneling a bit easier.

commit d9221fe157fa6c7f290ea04cad21a87be5305097
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 23 11:36:31 2021 +0100

    Rename LogicalReplicationIntegrationTest -> LogicalReplicationITestCase
    
    Having a `LogicalReplicationITest` that extends
    `LogicalReplicationIntegrationTest` is confusing.
    
    The latter is a base test case class and the name should reflect that.

commit a17bfcd18aa071ef9ff1798b207f494e90d8aa4a
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Nov 17 10:56:19 2021 +0100

    Add tables pg_subscription, pg_subscription_rel

commit 971fbb653c97c278a16b38e9d3196c16b6a82ae7
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri Nov 19 09:26:16 2021 +0100

    Fix scheduling and tracking of MetadataTracker
    
    - Avoid mutating isActive state after scheduling to prevent service
      to continue running when it is already stopped.
    - Start tracking of Subscriptions only when the Replication is
      acknowledged.
    - Acknowledge update of ClusterState only when all Nodes confirmed.

commit dbab6090dbca4f6ae7fc4dd05a81fc7a0fb57e7e
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Nov 5 10:38:19 2021 +0100

    check subscribing user privileges, publication owner privileges for ALL TABLES, check ownership of pub/sub on DROP USER

commit e4389d57a670b5b4f74991e33548d756169fb385
Author: baur <baurzhansahariev@gmail.com>
Date:   Mon Oct 18 11:53:15 2021 +0200

    Follow up on CCR docs

commit b1075eaa13a696e82ef85e665f1d251851c8d3b9
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Nov 16 19:23:40 2021 +0100

    Add tracking of metadata for logical replication

commit 74f3f60892dc4de9c1f341a03a40282b834417cb
Author: baur <baurzhansahariev@gmail.com>
Date:   Mon Nov 15 13:47:09 2021 +0100

    implement DROP SUBSCRIPTION execution plan

commit 32d5be3b12b94a8d43d0e11722d196ef5065b20f
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 12 14:08:51 2021 +0100

    Fix tracking of remote shard changes
    
    - Return successful response if the remote global checkpoint did not
      advance yet instead of a failure to trigger another poll.
    - Dispatch remote client resolving away from transport thread,
      fixes "Expected current thread ... to not be a transport thread"
      assert errors.

commit b2cce3938e887ac97be9e438f8857222e5e9b600
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 12 14:05:10 2021 +0100

    Fix unintended rebuilding of the remote connection
    
    The connection profiles uses transport node-wide settings which
    must be passed in while checking a connection must be rebuilt.

commit 6229ae2f6b6ae107694110586405bc00bae6ac5a
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Nov 8 09:27:25 2021 +0100

    Fix flaky logical replication itests, make expected resulset deterministic

commit b4898e68f2ab5dae3ce7c9549a10f8d3662461f0
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 5 16:41:21 2021 +0100

    Remove differentiation of publisher and subscriber shardId internally
    
    There is no need to keep a dedicated instance for the publisher and
    subscriber shardId.
    We do not support replicating tables/indices under a different name
    or with different settings, so both shardId's are always equal.

commit cac8f928f1253c5a5c799660ad9f5d5084038203
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 5 16:12:45 2021 +0100

    Renew retention lease while polling remote shard changes
    
    Retention leases must be renewed as shard changed tracking only works correctly with existing leases
    (to ensure no soft-delete operations are missed due to merges).
    Additionally the retention lease helper methods are refactored to work non-blocking.

commit ceca1bfb6557d27487819535f25c5729f1c863c6
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 5 14:48:01 2021 +0100

    Fix logical replication initialization, must only run on the master node
    
    Only the master not must trigger the inital restore, while all
    nodes must create a connection to the remote cluster to be able
    to process the restore.
    Also shard changes tracker must ensure that a correct connection
    is established before requesting changes.
    The subscription name which connections are based on and are required
    for connection checking/creation is now stored inside the index setting
    which also serves as a marker indicating that an index is a replicated
    one (-> uses special SubscriberEngine).

commit 69d83175be1bc4811d2dfd384656f4ecef886614
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 8 15:10:16 2021 +0100

    Remove unused blocking getPublicationsState

commit 907d8b97a28a64d3a36077a739ad520fcd659d46
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 8 11:24:59 2021 +0100

    Remove unused `ConnectionProfile` parameter from connectToNode
    
    The only call-site which provided a non-null value was within a test
    case. Everywhere else the `ConnectionProfile` was always `null`.

commit 9a5895d9f1e05415c904d89df01e8e4475443fe6
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Sep 7 11:09:43 2021 +0200

    Add create subscription implmentation including full logical replication
    
    Add basic logic replication support by creating a subscription on a remote
    publication.
    Exposed tables by the publication will be created on the subscriber and data
    is initially restored by using a concret repository.
    Afterwards, each shard on the subscriber side will track and apply changes from
    the remote shard on the publisher side.
    This is implemented by a shard listener, once active and if subscription is enabled,
    tracking will start. On shard closing or deletion, tracking will stop.
    
    The whole implementation is heavily inspired by OpenSearch's CCR plugin
    (https://github.com/opensearch-project/cross-cluster-replication)

commit 0bdcb93450188a20bdc7b7dbef582319243a0a34
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Nov 4 16:30:30 2021 +0100

    Fix flaky SniffConnectionStrategyTests
    
    When testing a 2nd connect manually after shuting down a seed, by calling
    the connect() method with a given future, it must be ensured that
    the onDisconnect auto-reconnect logic is disabled.
    Otherwise the explicit connect call future may never return as it is overwritten
    by the one privided from the auto-reconnect call.
    
    Additionally adds timeouts to all blocking future calls to ensure faster
    failures.

commit 886003e1ec2b0e604c1b774251c52a187e498617
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Oct 20 14:21:09 2021 +0200

    remove AL check from table publication

commit 453c87c3ebcfd1a81da5d398a3134c58771ae709
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Oct 20 14:21:09 2021 +0200

    Add privilege check for pub sub creation

commit 455dc160aea1b6354d0783c294acf35d1354f9dd
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 15 12:05:27 2021 +0200

    Fix iterator generation of pg_publication_tables rows
    
    Reusing a possible exhausted stream will fail, a new stream
    must always be created instead.
    Join statements are typical use-cases which are requesting the
    source row iterator multiple times.

commit c2b39f371b5357da7c0e2b453dfae3efa1bfc64d
Author: baur <baurzhansahariev@gmail.com>
Date:   Mon Oct 11 23:01:04 2021 +0200

     docs: logical replication conception and SQL syntax

commit b72acc974b7d801319194aee20370e057f038525
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 14 12:33:47 2021 +0200

    Add support for creating a publication without any table specification
    
    Add a concrete flag if the publication is defined FOR ALL TABLES

commit 4cfeeca5e7693fc60402d0746ff99db5321a5767
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Aug 26 11:54:19 2021 +0200

    Implement CREATE/DROP PUBLICATION plan and execution
    
    Additionally add `pg_catalog.pg_publication` and `pg_cataglog.pg_publication_tables`
    tables which exposes information about available publications.

commit a027817bb9b6c9f18ae0bece353d1a4379067e80
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Aug 25 09:24:02 2021 +0200

    Add remote connection/cluster related code, derived from ES
    
    This logic is needed for logical replication (CCR).
    The original code of ES is modified to be able to bind remote connections
    to concrete entities (subscriptions) instead of register them globally.

commit 6b51ca7f9f600a968cd6cfce8d097479878f9f04
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 7 17:10:20 2021 +0200

    Add analyzer support for create/drop/alter publication + subscription

commit 446d62b60a07f878b3bcc8a53792b036c0384911
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Aug 25 09:26:30 2021 +0200

    Add publication and subscription metadata for logical replication

commit 75977a9337726bc5cd126b5d274873d59be879c6
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Aug 13 10:29:28 2021 +0200

    Add parser support for create/drop/alter publication + subscription

commit 40b61420859a895dcbcf4abe7bed03bb08000ec4
Author: disideris <disideris@gmail.com>
Date:   Thu Mar 17 22:24:12 2022 +0200

    Add wait_for_completion option to COPY FROM and COPY TO

commit 5b1b6b2aa0040163ef65d27f0946c003b631503b
Author: kumarshail88 <kumarshail88@gmail.com>
Date:   Wed Dec 15 19:39:03 2021 +0100

    Add `array_position` scalar function
    
    This adds the `array_position` scalar function which returns the position of
    the first occurrence of the provided value in an array.

commit 8b56d0b31d240b1cd938a29bd3e3344e4e1baba3
Author: disideris <disideris@gmail.com>
Date:   Tue Mar 22 17:30:39 2022 +0200

    bump jna library to 5.10.0, add doc to unreleased fixes

commit 7cdf8be1e7180d4e454f9109b7d23f41fb501592
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 22 10:57:21 2022 +0100

    Allow some flakyness on codecov coverage

commit 58367cab31db3904512ce35b82e97068f4346399
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 22 10:51:34 2022 +0100

    Add test dependencies to jacocoReport task
    
        Execution optimizations have been disabled for task ':jacocoReport' to ensure correctness due to the following reasons:
          - Gradle detected a problem with the following location: '/crate/crate'. Reason: Task ':jacocoReport' uses this output of task ':libs:dex:compileTestFixturesJava' without declaring an explicit or implicit dependency. This can lead to incorrect results being produced, depending on what order the tasks are executed. Please refer to https://docs.gradle.org/7.4.1/userguide/validation_problems.html#implicit_dependency for more details about this problem.

commit 4945e1adb0481f68c1195f3fbe2e31ae4987cb28
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 21 11:30:42 2022 +0100

    bp: Fix testSendSnapshotSendsOps
    
    https://github.com/elastic/elasticsearch/commit/00c859bfcae0c1ac07e3fde2df81b9b7826b94de
    
        REPRODUCE WITH: ./gradlew :server:test -Dtests.seed=E8BF6F487CF874A4 -Dtests.class=org.elasticsearch.indices.recovery.RecoverySourceHandlerTests -Dtests.method="testSendSnapshotSendsOps {seed=[E8BF6F487CF874A4:2729020CE349A2CC]}" -Dtests.locale=hi-IN -Dtests.timezone=America/Indiana/Indianapolis
    
        java.lang.AssertionError:
        Expected: <51>
             but: was <47>
                at __randomizedtesting.SeedInfo.seed([E8BF6F487CF874A4:2729020CE349A2CC]:0)
                at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
                at org.junit.Assert.assertThat(Assert.java:964)
                at org.junit.Assert.assertThat(Assert.java:930)
                at org.elasticsearch.indices.recovery.RecoverySourceHandlerTests.testSendSnapshotSendsOps(RecoverySourceHandlerTests.java:275)

commit bc79e0aa68cd19826346a131414c415e4c25da77
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Mar 21 09:16:02 2022 +0100

    Optimize parsing of pg arrays when array is a string literal
    
    This avoids the unnecessary string to byte to stream conversion
    in the pg array parser when the input is already a string literal.
    
    Q: SELECT '{ab, CD, CD, null, null, w, foo}'::ARRAY(TEXT) AS arr
    C: 1
    | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
    |   V1    |        0.188 ±    0.190 |      0.081 |      0.137 |      0.189 |      3.588 |
    |   V2    |        0.166 ±    0.140 |      0.076 |      0.126 |      0.161 |      1.787 |
    ├---------┴-------------------------┴------------┴------------┴------------┴------------┘
    |               -  12.44%                           -   8.78%
    There is a 99.67% probability that the observed difference is not random, and the best estimate of that difference is 12.44%
    The test has statistical significance

commit fa39d47783b3e559fbed7c70b8dba9c31e4814e6
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Tue Mar 15 12:28:27 2022 -0400

    add a boolean withOption 'validation' for COPY-FROM
    
    setting it to false will disable type-validation(597630f)
    but only effective for tables without default/generated cols

commit f3e094e82ba480d357cfaa3ed62973146e394e8b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 18 12:11:13 2022 +0100

    Inline readList/readSet in StreamInput
    
    `readArraySize` does bounds checks that are redundant because
    the `ArrayList` constructor does the same.
    
    `new HashSet<>(..)` was called with the size, but the parameter takes
    the initial capacity.

commit 57781b52363fa61f9fe34174bb3ecfe2b945d97c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 18 11:51:31 2022 +0100

    Fix flaky testVersioningPromotedReplica
    
        ./gradlew :server:test -Dtests.seed=E18DF1CA7400DE8E -Dtests.class=org.elasticsearch.index.engine.InternalEngineTests -Dtests.nightly=true -Dtests.method="testVersioningPromotedReplica" -Dtests.nightly=true -Dtests.locale=kok-IN -Dtests.timezone=America/Atikokan
    
    Failed with:
    
        java.lang.NullPointerException: Cannot invoke "java.lang.CharSequence.length()" because "text" is null
            at __randomizedtesting.SeedInfo.seed([E18DF1CA7400DE8E:79091B746B064DDF]:0)
            at org.apache.lucene.util.BytesRef.<init>(BytesRef.java:84)
            at org.apache.lucene.index.Term.<init>(Term.java:70)
            at org.elasticsearch.index.engine.InternalEngineTests.assertOpsOnPrimary(InternalEngineTests.java:2108)
            at org.elasticsearch.index.engine.InternalEngineTests.testVersioningPromotedReplica(InternalEngineTests.java:2209)
    
    In the scenario there are two index operations and `versionConflict` got
    randomized to true twice - never setting `lastFieldValue`

commit bb06fc1ef8328c0c37b7b866873fa4ba87c9abbf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 18 11:54:40 2022 +0100

    bp: Remove "force" version type
    
    CrateDB 3.x used ES 6.x indices, so this should be safe to apply
    
    https://github.com/elastic/elasticsearch/commit/9dc90e41fc4339c58a41009c54bb8af459d10ff7

commit d0d8fc96aff42785f1bceb25a50f9cc975f144bd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 18 11:29:33 2022 +0100

    tests: Remove partialOldPrimary parameter from generateSingleDocHistory
    
    The parameter was always `false`

commit 10de1b0f11759dba1ffbe9f66d4108b99c6b4cc0
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Mar 16 18:04:25 2022 +0100

    Fix re-open a closed empty partitioned table
    
    Opening a closed table unfortunately uses a different
    transport/logic which also must be adjusted.
    
    Follow up of https://github.com/crate/crate/commit/89309883cd8

commit b2168a14bc7eebb28ccfe735eded0039c8cb3416
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Mar 17 15:30:03 2022 +0100

    Revert "Fix SJK download url used by jmx blackbox tests"
    
    This reverts commit 3dee52937b4cd16b301b706a962807d0ce3bac24.
    
    Sonatype just had temporarily hickups, I've confused sonatype
    wrongly with bintray.

commit 3dee52937b4cd16b301b706a962807d0ce3bac24
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Mar 17 11:23:05 2022 +0100

    Fix SJK download url used by jmx blackbox tests
    
    Sonatine was shutdown some time ago, package must be fetched via
    maven central instead.

commit 511e9171bbab259a8c786836703a434eedd581a7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 16 14:20:48 2022 +0100

    bp: Optimize FilterStreamInput for Network Reads
    
    🏎️
    
    https://github.com/elastic/elasticsearch/commit/cc628748e10569abc2bc57e65f315145440a8c5a

commit 8b6ccb81803f3aea87a1d5f2a128567ed1745ab0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 16 14:40:37 2022 +0100

    bp: Ignore closed exception on refresh pending location listener
    
    https://github.com/elastic/elasticsearch/commit/b5916ac455c28eb6179d84fd2ef9031e73796067

commit 002abd0c0beadcf5e8c2802c8d9645898f270b67
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 16 14:34:09 2022 +0100

    bp: Return true for can_match on idle search shards
    
    https://github.com/elastic/elasticsearch/commit/1a3f9e5a07c52c2a70dc591ad0da1c394e47dd46

commit 6370c4d297fcf42bac862139e5615b8345187a53
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 15 16:56:55 2022 +0100

    Fix NPE in ClusterInfoService (#65654) (#65659)
    
    https://github.com/elastic/elasticsearch/commit/f8f08ba3a78d3b02360c03a20497fe3274043b66

commit 75a4baad18c1d612082b032356cf960250c61082
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 15 16:45:41 2022 +0100

    bp: Account for remaining recovery in disk allocator
    
    https://github.com/elastic/elasticsearch/commit/3a234d266914d78c83594568d5498e9277b3b83f

commit 3b3a8756b9b6107d6ecb7da35c9c44fa01e8908d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 15 16:02:31 2022 +0100

    bp: Quieter logging from the DiskThresholdMonitor
    
    https://github.com/elastic/elasticsearch/commit/a8bcbbc38a51a94574b3626e0baa93366e1a2bfa

commit 2331754d1be494233933ad9f13c43a25c6d98af0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 15 15:27:18 2022 +0100

    bp: Collect shard sizes for closed indices
    
    https://github.com/elastic/elasticsearch/commit/66c690922c36c720f79e129d918387b692b07fbc

commit f804d4a0dd41806442ccaa86bee8e49c65619edb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 16 10:43:40 2022 +0100

    Remove Netty4Utils.setup
    
    This was used to initiate the logging factory for netty, but it is not
    needed because the default of netty already uses log4j if available:
    
    https://github.com/netty/netty/blob/982b890095a11242fff0e90558f0f3b883f52bc9/common/src/main/java/io/netty/util/internal/logging/InternalLoggerFactory.java#L41-L58

commit 89309883cd8118ad1fbb4c97d36175651e13dc76
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Mar 15 18:04:56 2022 +0100

    Fix closing of an empty partitioned table
    
    Without any partitions (concrete indices) the index name resolver
    caused a `RelationUnknownException` and thus making it impossible
    to close an empty partitioned table using `ALTER TABLE .. CLOSE`.

commit 20f217dc43495007bb01e44606a559b71cd333c7
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Mar 15 20:27:11 2022 +0100

    Fix conversion of intervals to function expression
    
    This adds an explicit cast to the string value of the interval to
    make a correct function signature lookup possible.

commit 3292354b51170ae56ae95ddd5ac267de506da307
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 15 14:59:53 2022 +0100

    bp: Fix Race in ClusterApplierService Shutdown
    
    https://github.com/elastic/elasticsearch/commit/106695bec8803cd78bb5073f48ff2b3b954c47ae

commit 5239d11164fcee0e9210dce4eb501044af3cfbff
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 15 14:58:33 2022 +0100

    bp: LocalNodeMasterListener is a regular listener
    
    https://github.com/elastic/elasticsearch/commit/5da922064f38343ef1b61866a9b8ac4335e7afe0

commit bcaa00631bb8638395aef5223b619ba03a157094
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 14 17:44:11 2022 +0100

    bp: Improve Efficiency of ClusterApplierService Iteration
    
    https://github.com/elastic/elasticsearch/commit/c81a076f5abba70d9a5cc4a8abd6840fd5ec073e

commit f967e09eab38ae8dd6c18bcbe6cd694419d8bf92
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 14 17:36:00 2022 +0100

    bp: Thread safe clean up of LocalNodeModeListeners
    
    https://github.com/elastic/elasticsearch/commit/c8ef2e18f753b09625142fb8816a7d0ec77f8a30
    
    Backport of #59932

commit aa16f61a775adfedaae982f47860372f29c8c8ec
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 14 16:09:34 2022 +0100

    bp: Fix scheduling of ClusterInfoService#refresh
    
    https://github.com/elastic/elasticsearch/commit/dde568caf7b3725d7a98f00ccc74e447a85470e9

commit ed1d4b5ec75b0195b55ce1bed49b1d61e40b0319
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 14 14:40:46 2022 +0100

    bp: Log when probe succeeds but full connection fails
    
    https://github.com/elastic/elasticsearch/commit/0152c4072456bdd0b3e5c209c489e5d3a13b4e5a

commit 608630b1d4e3138f7404c378fda755943253b408
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 14 14:26:12 2022 +0100

    bp: Wait for blackholed connection before discovery
    
    https://github.com/elastic/elasticsearch/commit/268971db0359dc9cc7a336801b723368afabb73e
    
    The main change was already applied in
    
    https://github.com/crate/crate/commit/3c5c147b5780512d4ca11f535458e9b51661d1d0
    
    This additionally applies the logging changes.

commit 486a9c360a70385d66bc9d479622d3ef5f930250
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 15 14:05:37 2022 +0100

    Remove wacklig upload from GHA workflows
    
    We added the "on-pr" upload with the intention of figuring out if there
    are tests that are only flaky on windows, but that didn't really work
    out. We cannot easily tell if PRs failed because they were still work in
    progress or because the tests are really flaky. This makes the wacklig
    dashboard overall less useful - so this commit reverts the upload.
    
    To accomplish the original goal we'd instead need to add another
    periodic test run on windows that runs against the master branch.

commit 07ecacd3a3e250987e76a472e0c76bac883711ac
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 15 12:02:04 2022 +0100

    bp: Fix refresh behavior in MockDiskUsagesIT
    
    https://github.com/elastic/elasticsearch/commit/85b0b540f0f1fd7d3d6452328f76c0b7b35be625

commit 57c69083f7272df761fdf68e1888be53a36cd0b2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 15 11:49:36 2022 +0100

    bp: Avoid overshooting watermarks during relocation
    
    Re-application of:
    
      https://github.com/elastic/elasticsearch/commit/d340530a4753b66da75766b752dada943029ec78
    
    We applied this with:
    
      https://github.com/crate/crate/commit/a39b7f29d59279c9db5fb013838428087ca7b516
    
    Some minor changes were missing which cause conflicts in other
    backports.

commit c9dc9bcbd52eca8fccbb2e498b5da46dfb41c084
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 15 11:19:41 2022 +0100

    bp: Auto-release flood-stage write block
    
    Based on
    
    - https://github.com/elastic/elasticsearch/commit/cd304c4def3e0622666746f9fe54355217131860
    
    But doesn't add the setting to disable it & no deprecation logging
    The test already contains fixed from:
    
    - https://github.com/elastic/elasticsearch/commit/b19de550959df6630b560a1132b2cd44ba6f9675
    - https://github.com/elastic/elasticsearch/commit/d340530a4753b66da75766b752dada943029ec78 (got applied with https://github.com/crate/crate/commit/a39b7f29d59279c9db5fb013838428087ca7b516)

commit 7ed24ff1fceb0e6e21de715a6647dc51218deb03
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 11 16:21:58 2022 +0100

    Update gradle to 7.4.1
    
    https://docs.gradle.org/7.4/release-notes.html

commit 0226630c5fdff2242b6a697beee9aaa198b9a90a
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Feb 15 15:35:46 2022 +0100

    Improve type signature parsing
    
    This improves the type signature parsing by replacing the handwritten parser code
    with an antlr parser to make sure any special character is allowed.

commit 374aeb361bebc7feec009260bc317ca9f92ea9ab
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 11 16:00:06 2022 +0100

    bp: Cleanup some Dead Code in o.e.index.store
    
    https://github.com/elastic/elasticsearch/commit/b77ef1f61bc945477a896a8540e06ea245ca7422

commit 436f8ff1069ff4eb5e5dfc95d0b68096febc7d37
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 11 15:49:03 2022 +0100

    bp: Rename MapperService#fullName to fieldType
    
    https://github.com/elastic/elasticsearch/commit/337d73a7c6f8c5684da1cd7c69a2c236b21897fc

commit 92df589e01ee316319538ba66192de30c624709f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 11 15:30:45 2022 +0100

    bp: Remove comparison to true for booleans
    
    https://github.com/elastic/elasticsearch/commit/21224caeaf2182a4f09782b53fff0008309da8c8

commit ed9fcc735d75a087eca9868f117c7a162d2789d8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 11 15:26:21 2022 +0100

    bp: Simplify rebalancer's weight function
    
    https://github.com/elastic/elasticsearch/commit/39a3a950de06bc277dc8fd4ac434ef195b4ccf53

commit 8073826786bbbb03b067ee035e954acc37dd45e1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 9 16:11:24 2022 +0100

    bp: Close channel on handshake error with old version
    
    https://github.com/elastic/elasticsearch/commit/1dabdd9a2015f2b65d13511ac77879f9e2861c5c

commit 58b9554a9a5c833b96973aa20048b4319b216570
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 9 15:28:32 2022 +0100

    bp: Log and track open/close of transport connections
    
    https://github.com/elastic/elasticsearch/commit/9450ea08b4d3f790d2a4588725a95d6c6f5fa0ee

commit 0d78e14fdf212e310d4e095a29c2a1466bdbad06
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 10 17:23:52 2022 +0100

    Update netty to 4.1.75
    
    https://netty.io/news/2022/03/10/4-1-75-Final.html

commit 29320456d703be4076b336817a9f4730e2402922
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 10 15:26:17 2022 +0100

    Reflect 4.7.1 release

commit ca5d8714f95cbd6fd517ae3fece560ae4458b312
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Tue Feb 15 14:10:52 2022 -0500

    add type validation logic to COPY-FROM
    
    raw data will be parsed, validated and casted if possible.
    
    fix nondeterministic default exprs that were not evaluated per row

commit 8a29364a3852d3d13554d53de57d667f71c4d368
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 10 10:20:08 2022 +0100

    Reflect 4.6.8 release

commit 357c8ae6a4cd84325fa6bb9be76bdaed2c4d2bfc
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Feb 28 14:18:35 2022 +0100

    Move parsing of target type of Implicit casts in compile stage
    
    This moves the parsing of the target type of the Implicit cast function
    into the compile stage. This will make sure the target type is parsed
    only once for a lifecycle of the Implicit cast function.
    
    V1: 4.8.0-dee6c9fadbb3042ec3ee4406e91f20a80852447b
    V2: 4.8.0-85e2a06f1e084b9e6ccc788df08a45c08c7ac4f2
    
    Q: select a + b from test -> (_cast(a, 'double precision') + b)
    C: 1
    | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
    |   V1    |       65.452 ±   22.555 |     53.347 |     63.808 |     65.971 |    760.005 |
    |   V2    |       52.901 ±   20.962 |     45.828 |     51.259 |     53.315 |    701.356 |
    ├---------┴-------------------------┴------------┴------------┴------------┴------------┘
    |               -  21.21%                           -  21.81%
    There is a 100.00% probability that the observed difference is not random, and the best estimate of that difference is 21.21%
    The test has statistical significance

commit 6f5b8354bea8c17602977ec7d7608866fa4147a7
Author: disideris <d.sideris@hypertech.gr>
Date:   Mon Feb 28 17:13:49 2022 +0200

    Adding target columns and csv header option for copyfrom statement #12168

commit be2c708749dc60247f8138987d3efe0bf201c613
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 9 10:46:51 2022 +0100

    bp: Use Consistent ClusterState throughout Snapshot API Calls
    
    https://github.com/elastic/elasticsearch/commit/2eeea21d84978e47f173c9421a19dec9aa92b474

commit d595f9995adb8bdae605a63e1b7b7bd70f047aa9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 8 20:02:04 2022 +0100

    bp: Fix Inconsistent Shard Failure Count in Failed Snapshots
    
    https://github.com/elastic/elasticsearch/commit/f0d8c785e324d3d61057f17ea0bac0a45fd92b41

commit 565107ebad7d5b588daa773f639c33b39f2a2d84
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 8 14:25:25 2022 +0100

    bp: Simplify Snapshot Initialization
    
    https://github.com/elastic/elasticsearch/commit/4e8ab43a3e6ecb9e2592f11ff3f845349c757a8f

commit b3bdc44a236e0931793bc7c1ffce5557dfdf22ad
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 9 12:02:25 2022 +0100

    bp: Ignore shutdown when retrying recoveries
    
    Applying this out of order because the change is fairly isolated and we
    often see harmless but confusing exceptions in the log after test
    shutdown when running tests
    
    https://github.com/elastic/elasticsearch/commit/3409e019d234d423e7ca4642086bbf0c65764de9

commit 62885a09b19722e6fcc2142ffb9e8b049e4879b0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 7 14:56:39 2022 +0100

    bp: Fix Snapshot Repository Corruption in Downgrade Scenarios
    
    https://github.com/elastic/elasticsearch/commit/f70e8f6ab559a53081778f26e60658220624cd5f
    
    We already had the `hasOldVersionSnapshots` function and the test - but
    the function was only used inside the test and not considered when
    creating a snapshot.

commit 1e74ccbb0a0226c60134bfde8f67a75ad5b3b142
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 4 15:24:16 2022 +0100

    Make getRepositoryData fully async

commit 00e6891c572ce951d663e00805909004063ed7c6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 4 15:07:45 2022 +0100

    Add CompletableFuture based version of getSnapshotInfo
    
    Applying some ES patches is already difficult because we made some more
    methods async for the cross cluster replication.
    
    Using CompletableFuture will make some adaptions that we have to make a
    bit easier.

commit f77a2a8d4058d60ee52217de63d3edbb69bddb4e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 4 14:52:11 2022 +0100

    Remove unused findShardFailure from SnapshotsService

commit 826ebe6188e1e44a21796632f0346d7374c1743e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 4 13:33:00 2022 +0100

    bp: Exclude nested documents in LuceneChangesSnapshot
    
    https://github.com/elastic/elasticsearch/commit/157b352b4763b8df36247f815483aa238be8dda8

commit 4ff94e5d842c02f8c34a8009f9b705adf5312cb3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 4 11:58:12 2022 +0100

    bp: Fix CorruptedBlobStoreRepository Test
    
    https://github.com/elastic/elasticsearch/commit/694b8ab95dd298bebd9c1021efb10653cd87afae

commit af14b1e99d5e591a7e1c6833eab8696a004166a7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 4 11:50:23 2022 +0100

    bp: Fix Infinite Retry Loop in loading RepositoryData
    
    https://github.com/elastic/elasticsearch/commit/e51b209dd35f4153bdc9be9f4cd2c083b14e6c28

commit 77e2046b185f9b6983fdd60e28094110cf5c1706
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 4 11:39:45 2022 +0100

    bp: Remove custom metadata tool
    
    https://github.com/elastic/elasticsearch/commit/4b0581f182467b6f40945e7f385a3a0a7ba80acc

commit 0d0de1cf5a7f667feeb638947be3b6809dc4921b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 7 10:47:18 2022 +0100

    Don't warn about GraalVM interpreter mode for JS udf
    
    That we don't use the GraalVM compiler is intentional.
    Closes https://github.com/crate/crate/issues/12133

commit 5c26b09713f972b796501de03be8bb486e13f0dc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 2 12:11:17 2022 +0100

    bp: Fix synchronization in ByteSizeCachingDirectory
    
    https://github.com/elastic/elasticsearch/commit/3afb5ca1330

commit 9733ac3202016b5f7a245b7db5d5753c742e0456
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 2 12:02:05 2022 +0100

    bp: Fix TransportMasterNodeAction not Retrying NodeClosedException
    
    https://github.com/elastic/elasticsearch/commit/af1ff52e70117dbfff8a893fe01f75e7a1024c8d

commit f8ec03a932257ff5141bcaa14c7a01167483a2e4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 2 11:51:27 2022 +0100

    bp: Fix Broken ExistingStoreRecoverySource Deserialization
    
    https://github.com/elastic/elasticsearch/commit/dc899781f23212b852354171a359e177c7f6ccba

commit ace963312fad0064bbbd6ee3572e2c59c396f966
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 3 11:54:20 2022 +0100

    Fix flaky testTranslogReplayWithFailure
    
    Closes https://github.com/crate/crate/issues/12175
    See https://github.com/elastic/elasticsearch/commit/02d1fbd5a786ffbbe6fe0b48649f2a5fb3707393

commit 40c4b2f1c2d9a7a454886c2f464955b37b635a6c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 1 15:55:15 2022 +0100

    Set `isRetry` flag for index operations correctly
    
    The `isRetry` flag was only set considering the
    `VersionConflictEngineException` but not `RetryOnReplicaException`. The
    latter results in re-sending the whole request over the transport again.
    
    This is currently a non-issue because the `isRetry` flag is checked in
    combination with the `autoGeneratedIdTimestamp` optimization which we
    currently don't use.
    
    See:
    
    - https://github.com/crate/crate/blob/51b68b559575548e496e004fd5f97e14ea72072e/server/src/main/java/org/elasticsearch/index/engine/InternalEngine.java#L1134-L1147
    - https://github.com/crate/crate/blob/51b68b559575548e496e004fd5f97e14ea72072e/server/src/main/java/io/crate/execution/dml/upsert/TransportShardUpsertAction.java#L423
    
    This is future proofing in case we start using the optimization. An
    alternative would've been to remove the `isRetry` flag together with the
    optimized code path, but I think we want to utilize this in the future.

commit cdd5b5fa2bc86accf3d03d0cb23417d6a9bdbeda
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 1 16:33:44 2022 +0100

    Add periodic_count to flush_stats in sys.shards

commit 6ba3af9466082da9d474bb378b61871924649e28
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 1 15:16:30 2022 +0100

    Add flush_stats to sys.shards table
    
    To get insights into whether flushes are happening and how much time is
    spent on them.

commit 51b68b559575548e496e004fd5f97e14ea72072e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 1 09:53:35 2022 +0100

    Add vale to required checks for mergify

commit dee6c9fadbb3042ec3ee4406e91f20a80852447b
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Fri Feb 25 12:33:22 2022 -0500

    include 'globbed' into Vale vocab

commit 230daa37224b37694e36fc19aaa4ffca536ab38d
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Thu Feb 24 13:57:15 2022 -0500

    fix for COPY-FROM throwing NPE when the URI is globbed and of an unknown directory

commit adcfc23873f2b98bc6a220f53d4e6e378444bb69
Author: baur <baurzhansahariev@gmail.com>
Date:   Tue Feb 22 11:14:09 2022 +0100

    Don't apply swap cast optimization when explicit cast is used.

commit b8e7be2f91d9935c049422ddfb2036c19e75cdfa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 23 15:11:30 2022 +0100

    bp: Fix testRestoreLocalHistoryFromTranslogOnPromotion
    
    The test was flaky, I think this backport fixes it
    
    https://github.com/elastic/elasticsearch/commit/e827d2ed928b501b89a4bd83f7d1db37b9127905

commit 2eefaa1b8c1cc85a87641cb7c8c2845916c8d508
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 23 14:19:56 2022 +0100

    bp: Do not block Translog add on file write (#63374)
    
    https://github.com/elastic/elasticsearch/commit/64bbbaeef1af85b407bf86f28d11fefad5e98890

commit 24f5a37ec35444afc85843ff0600ec362e6537a9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 23 11:58:47 2022 +0100

    bp: Keep checkpoint file channel open across fsyncs (#61744)
    
    https://github.com/elastic/elasticsearch/commit/075271758e3daff37f0ad16217553067f8eb57aa

commit dd357cbee867641b901751ab59e366507a1a4515
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 23 11:40:28 2022 +0100

    bp: Fix estimate size of translog operations (#59206)
    
    https://github.com/elastic/elasticsearch/commit/b599f7a9c072b0cd094f3e25eacf791189e987bf

commit 763ae60735259e25f511e4749d6862c159ef102e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 23 11:31:34 2022 +0100

    bp: Flatten ReleaseableBytesReference Object Trees (#57092) (#57109)
    
    https://github.com/elastic/elasticsearch/commit/5569137ae3cfa493a43469a545f7adb147f13cd1

commit c2586bb72eaa51c73feae6d7bf14f360ad19f2d2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 23 11:30:47 2022 +0100

    Mark already applied patch in es-backports

commit 16163c4974cf556e7331c9b63188a9326c5a2981
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 23 10:18:26 2022 +0100

    Fix BWC handling in translog index operation serialization
    
    The version field was read after the `_parent` field instead of before.
    
    (The change in `write` was only necessary for the test, we never write
    to <4.0 versions in production)

commit 8f0ef4fac64a851bc848f6cc107a3723e1f8d332
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 21 16:41:31 2022 +0100

    Remove markSeqNoAsSeen call from planDeletionAsNonPrimary
    
    We applied some ES patches out of order:
    
    - First https://github.com/crate/crate/commit/a0007366d8f595054d333af99029140291e25fd4
    - then https://github.com/crate/crate/commit/a5ebf734128a847b7ded68f58c0d479319e4cfbb
    
    This led to an error which we tried to fix in
    https://github.com/crate/crate/commit/f2f5201433f94fa29932201294cff87b78d4d6f7
    but there was one more leftover call.

commit 73475ced83a6faef338a88db2c13663aaf2cbb30
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 21 09:48:17 2022 +0100

    Opt out of join order optimization if join condition references foreign relation
    
    We don't take the dependencies of a join condition into consideration
    when optimizing the join order. This could lead to invalid plans if a
    join condition references a relation that the immediate `left` or
    `right`.
    
    This is a quick fix for backport that disables the optimization if a
    join condition depends on an additional relation.
    
    The proper solution would be to move the join ordering optimization into
    a optimization rule, and consider the dependencies as well as costs (by
    calculating the expected rows using selectivity functions).
    
    Closes https://github.com/crate/crate/issues/12119

commit 84bce4c55e96adb340a4d805380b385647e309fa
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 28 18:10:00 2022 +0100

    Backport IndexRecoveryIT
    
    Backport of the `IndexRecoveryIT` of ES commit point
    https://github.com/elastic/elasticsearch/commit/e2ae0582f7c

commit f96c54c7a3c30045bf5b75fa3237920a80e15796
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Feb 16 11:15:37 2022 +0100

    Removed unused CompletionStats request flag (and invalid test case)

commit 3f0e3d1aba15eaae8769e133287dc3fc2adbe336
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Sun Feb 13 11:58:07 2022 -0500

    add test_copy_from_with_fail_fast_with_write_error_on_handler_node
    
    add test_copy_from_fail_fast_without_return_summary_without_write_errors

commit 350686e6ef99c8f7a13ebfb5535e6b8943296fa3
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Feb 11 18:00:25 2022 +0100

    Make copy-from-fail-fast integration tests more concrete
    
    Move tests to dedicated test suite in order to start nodes manually
    depending on the test case.
    Modify test cases to cover write errors.

commit 248c5d592a65149c7440a89dc705b43e43a5f377
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 16 10:36:10 2022 +0100

    Fix formatting of scalar subqueries
    
    The `SqlFormatter` / `ExpressionFormatter` stripped away the parenthesis
    in `SELECT (SELECT 1)` leading to `SELECT SELECT 1`
    
    Fixes https://github.com/crate/crate/issues/12125

commit 05be94e1b100c9786b3689baaa13689b6642e7bd
Author: baur <baurzhansahariev@gmail.com>
Date:   Thu Feb 10 08:36:59 2022 +0100

    don't create WindowAgg plan if there are no used window functions

commit aaa4edd980cb7f2474a2d14685f5a7debbfd91ea
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 14 10:20:30 2022 +0100

    Run sphinx and itests on small agents

commit 847f26afd5d8430185deed3011ce3f4dac053483
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Wed Feb 9 13:05:04 2022 -0500

    fix version upgrade failure from 4.7 to nightly, due to blob index mapping

commit 34b25f0fca0be54d9a4be7845c5f1075349d28a9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 8 15:54:07 2022 +0100

    Update netty to 4.1.74
    
    https://netty.io/news/2022/02/08/4-1-74-Final.html

commit ee0cc45ad83ac3f3f806ad12bdef110d8204e2d9
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Feb 2 13:02:47 2022 +0100

    update note about default analyzer for the FULLTEXT index

commit 1a403cc549f8c3ca4fdc058f33e0ac7f4aa20a33
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 2 12:04:36 2022 +0100

    Update JDK to 17.0.2+8

commit 58c87c828c404be731d04c98cbff69db47bd8dd1
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Tue Jan 18 23:37:29 2022 -0500

    allow different s3 compatible storage providers can be specified to COPY stmts

commit 11afa26386ea1824e53caa99909518f72e94be4f
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Tue Feb 1 09:55:12 2022 -0500

    fix typo in area(geo_shape)

commit abd07cad1bfea9f59f6c80955507582be9238bae
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Feb 1 08:55:09 2022 +0100

    Fix syncGlobalCheckpointAfterOperation flag in TransportWriteAction
    
    This corrects the syncGlobalCheckpointAfterOperation flag to true in
    TransportWriteAction. This was caused by mistake in the backport
    https://github.com/crate/crate/commit/206ee29e167c3cb01695af77b1207d086177e871.

commit ae5d5f8b114b200c15469a27a01dba2bb967daf3
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Jan 24 16:13:18 2022 +0100

    Remove Guava dependency

commit e29513b24828935f8e219f46ec5199f0b4bc02db
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Jan 24 16:03:57 2022 +0100

    Replace Guava's Cache with Caffeine

commit 3aaa3d7533b185ecb39a20386fd479269019cb42
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Jan 24 11:40:43 2022 +0100

    Remove org.elasticsearch.common.util.set.Sets

commit b545ea50e91836668c18d1912fdce900036429c3
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Jan 20 16:00:46 2022 +0100

    Remove Guava's Collections2

commit 244bf2376d1548b76dd6f9181ea0fd531631f84c
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Jan 24 15:12:34 2022 +0100

    Replace Guava's Sets.difference

commit 84bc67cd09283c532c694ab151f2456544c11b06
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Jan 24 15:12:00 2022 +0100

    Replace Guava's Sets.cartesianProduct

commit eb9cfb983d35113bdd5645b5092d97d41c316a99
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Jan 20 09:14:54 2022 +0100

    Remove Guava's Splitter

commit 015963bb32369f4dfa08d3ad8c1f2192ec390647
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Jan 20 08:58:44 2022 +0100

    Remove Guava's Multimap usage

commit ecffcd27ebf50f591bb7cf1f6f372b4e8df047c3
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Jan 20 08:49:25 2022 +0100

    Replace Guava's primitives.Booleans

commit 0da2d7e021d7ff464df66be50fb5bcb93add62ad
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Jan 19 19:27:10 2022 +0100

    Remove Guava's UncheckedExecutionException

commit 19d7462bff841185f2fac0355e563af057a58973
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Jan 19 19:26:13 2022 +0100

    Remove Guava's Chars

commit 85614010f6fba93e4ccb10ad68453afea39f34b8
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Jan 19 19:17:55 2022 +0100

    Remove Guava's Ints

commit ff3f13899f801654eae7a59ae13a6065ad2e656b
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Jan 19 19:17:33 2022 +0100

    Remove Guava's LongMath

commit 84c746be8c31e8fcabe5e47ecc24c3a6a269cfce
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Jan 19 17:43:31 2022 +0100

    Remove Guava's ComparisonChain

commit 03790479f522fef7714f69f09118cf7a0a980285
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Jan 19 14:37:44 2022 +0100

    Replace Guava's Lists

commit 2b5bff25aead06369b3ca398b5c867c115e7851e
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Jan 12 10:52:06 2022 +0100

    Remove Guava's primitives.Longs

commit c489a24121824dcc0785a86dbf982366501163ad
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Jan 12 11:37:21 2022 +0100

    Remove Guava's ForwardingQueue

commit f3573b2460f7393305d911959466c436716dcfb9
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Jan 11 10:55:35 2022 +0100

    Replace Guava's Map.uniqueIndex

commit dce3c820f574e0f5c5ffcf6897523514dea9f340
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Jan 19 12:43:04 2022 +0100

    Remove Guava's ImmutableMap

commit e23bc92020da8038b30d5d3e087f57fbba850239
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 26 15:23:55 2022 +0100

    Update GraalVM to 22.0.0
    
    https://www.graalvm.org/release-notes/22_0/

commit 86bdf778f7b2aa3dcac304112171b47756d52564
Author: baur <baurzhansahariev@gmail.com>
Date:   Thu Jan 27 11:38:22 2022 +0100

    Explicitly use UTC in Interval computation to prevent usage of the default timezone

commit b138aa92241dead2d267fa94f56e6366c13f9344
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 26 11:02:46 2022 +0100

    Remove some unused dependencies from versions & dependencies.gradle
    
    Follow up of https://github.com/crate/crate/pull/12080

commit 7b0a502170a36e9a783d88db8808abe853d8e8dc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 10 11:40:38 2022 +0100

    Remove hdfs snapshot repository support
    
    Closes https://github.com/crate/crate/issues/11424

commit 433f9abcf862b8f4ce1a746e12e64168d4724898
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 26 09:16:42 2022 +0100

    Bump version to 4.8.0-SNAPSHOT

commit 033afc55840ad7317fe37420dd929a99e18b9910
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 25 18:40:12 2022 +0100

    Release 4.7.0

commit 521d251e9f0ff54019a0bc1fef56dac420e3a55d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 25 11:19:47 2022 +0100

    Don't dispatch to different thread in TcpTransport.doStop
    
    It used a latch to block the caller thread anyway - we can run the logic
    directly without additional dispatching.
    
    Spotted this while investigating connection errors in the logs after
    node teardown in tests.

commit 4fba8686f12490cbaab196d73a7d68ee324ea242
Author: Johannes Faigle <johannes.faigle@crate.io>
Date:   Mon Jan 24 16:05:08 2022 +0100

    Standardize Admin UI usage

commit 23ea74a9181fef9e17f556278f456c5f9d6c6142
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 24 15:08:54 2022 +0100

    Improve outer join to inner join optimizer rule
    
    Use `SymbolEvaluator` instead of `Normalizer`, otherwise something like
    `NULL AS foo` blocks the full normalization and the "query can match"
    detection doesn't work.
    
    Closes https://github.com/crate/crate/issues/12067

commit ffe6018ea989983a49a3b55820cc05817c1735f2
Author: Johannes Faigle <johannes.faigle@crate.io>
Date:   Mon Jan 24 14:54:42 2022 +0100

    Fix capitalization

commit bdb632cb4a0b129e8f7b1aa418547061295af627
Author: Johannes Faigle <johannes.faigle@crate.io>
Date:   Mon Jan 24 14:52:28 2022 +0100

    Add missing backquotes

commit 8a94bb4f0bb17446ac396eb8cc89bd4b3278152b
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Jan 21 09:05:19 2022 +0100

    fix milliseconds truncation in timezone function

commit 976d7fe5a3d7d700e0bc099a9f0872b9dcc7e56c
Author: baur <baurzhansahariev@gmail.com>
Date:   Mon Jan 24 14:07:23 2022 +0100

    Revert "Add switch_to_plaintext HBA flag letting to downgrade SSL to plaintext"
    
    This reverts commit 2eceb366

commit e7be99105d5141f0f2604dce458d584ba27957d7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 24 13:42:16 2022 +0100

    Fix broken links
    
    URL changed

commit 73479acfffa3da6e606f72edd3db5a5e7e34a67a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 20 09:27:21 2022 +0100

    Add vale style configuration

commit b7dea2d28a91d0ddb6692cd59155e8ecae478dd1
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Jan 21 13:45:39 2022 +0100

    explicitly mention UTC in current_timestamp and now docs and remove outdated note

commit 414ed9374fac5c1b1e76ac4469dbcfada3284674
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Wed Jan 19 21:52:44 2022 +0100

    Upgrade to Gradle-License-Report 2.1

commit 8053d7473e1781ad8916500948e69294315001cd
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Wed Jan 19 18:26:05 2022 +0100

    Revert "Temporarily disable Gradle-License-Report plugin cause of download issues"
    
    This reverts commit 7f970ada5141360aace2192a7e5ac5b40d3907f1.

commit 77182cce7d902e1ab16c780d050e75d27b3d2586
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 19 14:55:03 2022 +0100

    Reflect 4.6.7 release

commit f101f751d4a0ecb608254d3f346082e41d4e8ec4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 19 08:42:19 2022 +0100

    Fix flaky testRepeatedFetchDoesNotLeakSysJobsLog
    
        org.postgresql.util.PSQLException: ERROR: java.lang.AssertionError: Previous resultReceiver must be finished
            at __randomizedtesting.SeedInfo.seed([CA8B61AE5F09E570:8F064BB0D7D0517D]:0)
            at app//org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2674)
            at app//org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2364)
            at app//org.postgresql.core.v3.QueryExecutorImpl.fetch(QueryExecutorImpl.java:2560)
            at app//org.postgresql.jdbc.PgResultSet.next(PgResultSet.java:2077)
            at app//io.crate.integrationtests.PostgresITest.testRepeatedFetchDoesNotLeakSysJobsLog(PostgresITest.java:925)

commit 1162caddbc259ec7feff526f473e66aead80983a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 19 08:58:49 2022 +0100

    Update JDK to 17.0.1+12

commit 19cfb07905003c7662bb1cb2a794f0be73874a70
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 18 16:41:27 2022 +0100

    Group release notes by topic

commit 3b3331bf4c475ffcd794a62a93fbb176b731886d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 18 16:32:34 2022 +0100

    Deprecate HDFS snapshot repositories

commit 6b030f1518a19d9928c138c04dc42101f5cc6e4e
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Jan 18 11:47:04 2022 +0100

    Move Guava's Ordering into libs

commit 5b190a2fe316631ebac3429deda4040a75978b60
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Jan 18 11:05:12 2022 +0100

    Replace Elasticsearch's Iterables

commit 49f24fbc9a2d749a0c01428cc0cff8ec21fd074d
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Jan 18 11:03:48 2022 +0100

    Replace Elasticsearch's Iterators

commit 18db10242618f34ed8fc19b7e3a2b1125efa648c
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Jan 17 17:11:18 2022 +0100

    Remove deprecated Guava's Throwable.propagate
    
    See https://github.com/google/guava/wiki/Why-we-deprecated-Throwables.propagate
    for further details.

commit 8b59783ffb0dab4882cd48b34657fe00d70f6d6f
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Jan 17 16:22:32 2022 +0100

    Move Guava's Iterators and Iterables into lib module

commit f9908bf6e3b2993c56ea32cfd219107acf1741ca
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Jan 17 14:52:32 2022 +0100

    Remove Guava's UnmodifiableIterator
    
    Guava's UnmodifiableIterator is not needed in these cases, because
    the default behaviour of Iterator#remove is already throwing an
    UnsupportedOperationException. Also the type UnmodifiableIterator
    itself is never used. Therefore it can be safely removed when making
    these classes final.

commit b886346df32abe617fe917d43e7e2b2339fe400e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 17 17:18:43 2022 +0100

    Deduplicate Streams.copy

commit fc8e3bf9798e8c3b21339ae4fbacbd1b05dc6fbd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 17 14:58:37 2022 +0100

    Ensure pg clients receive response messages in order on inserts
    
    Clients like npgsql who do not wait for a `commandComplete` message
    before sending further messages could have received messages out of
    order when batching up inserts:
    
        parse         -> sendParseComplete    -> buffered
        bind          -> sendBindComplete     -> buffered
        describe      -> sendDescribeComplete -> buffered
        execute       -> deferred
    
        parse         -> sendParseComplete    -> buffered
        bind          -> sendBindComplete     -> buffered
        describe      -> sendDescribeComplete -> buffered
        execute       -> deferred
    
        sync -> triggers execution
                  -> first execution finishes
                  -> triggers sendCommandComplete which flushes buffered messages
    
        client receives:
          sendParseComplete
          sendBindComplete
          sendDescribeComplete
          sendParseComplete
          sendBindComplete
          sendDescribeComplete
          sendCommandComplete  <- this here must arrive the second parseComplete
          sendCommandComplete
    
    To solve this, inserts now also activate the `DelayableWriteChannel`.
    It uses the `CompletionFuture` of the ResultReceiver, this works because
    we complete them in the right order within `Session#bulkExec`.
    
    There are a few cases where the `ResultReceiver` future never complete.
    For example if we don't trigger the execution at all, because a
    subsequent bind fails with an analyzer error. For these cases this now
    discards or writes all pending messages on the next sync.
    
    Closes https://github.com/crate/crate/issues/12003

commit 88d476096a57dc1d22e036a329716d39a290ad71
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 17 14:36:20 2022 +0100

    Replace volatile with AtomicReference in DelayableWriteChannel
    
    Allows to use `getAndSet` and `compareAndSet` in two places - which
    makes it a bit easier to reason about correctness.

commit 55532d3aae616d20ba1be42406016e8cca1ae722
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 17 14:23:10 2022 +0100

    Ensure delayed writes are discarded if channel closes.
    
    There are two `close()` overloads, only one of them discarded the
    buffered messages.

commit ad2376c1acd20ca1370a374b72f6d00a28ad6d4a
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Fri Jan 14 23:52:58 2022 -0500

    refactor FileInput and FileReadingIterator as part of exporting copy-related logic to plugin module

commit 09ce14793fe53c84c344d82ce5fbebb443b62a7e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 17 10:01:58 2022 +0100

    Fix handling of queries after suspended fetch with pgwire
    
    Queries inbetween another query that uses fetch weren't processed
    correctly. Leading to errors like `Received resultset tuples, but no
    field structure for them`.
    
    When the client fetches a subset of rows, we suspended the execution but
    didn't trigger the `ResultReceiver.completionFuture()`, this caused the
    `DelayableWriteChannel` to continue deferring messages and could
    potentially also have led to ByteBuf leaks.

commit 9529cd84151c8f56be3b0925556034c90ecc8b9e
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jan 13 09:43:53 2022 +0100

    Update netty to 4.1.73
    
    https://netty.io/news/2022/01/12/4-1-73-Final.html

commit 010faff2b3dfce902a888efcbb42625fa2a0d30c
Author: baur <baurzhansahariev@gmail.com>
Date:   Thu Jan 13 09:13:17 2022 +0100

    Revert "Fix an issue with switching to plaintext"

commit 8f05a367f85610c951a632e2235da6833721c570
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Jan 12 11:29:53 2022 +0100

    Remove Guava's ForwardingIterator

commit df63394b7d177f29ae08e23b6c95f88cfab88fef
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Jan 12 10:06:08 2022 +0100

    Move Guava's Memoizing Supplier functionality over to lib module

commit 2a28f3dcfbfa3bc3eb74dd9df1f15d46d061569f
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Jan 11 17:09:07 2022 +0100

    Replace Guava's SettableFuture with CompletableFuture

commit e48f24fe61fc52ebfdfb7535f1064d0b38be4710
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Jan 11 16:51:13 2022 +0100

    Remove Guava's Predicates

commit 9c545e0c80d64943f378240b981e11670b2e698d
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Jan 11 16:40:55 2022 +0100

    Remove Guava's Strings.repeat functionality

commit 3f12d8dec77a721e03ee939793a21db135766b6d
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Jan 11 16:30:07 2022 +0100

    Remove Guava's Iterables.transform from GroupingCollector

commit 1c8d3c8560bfea44da98f058fcb88a7947352f17
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Jan 10 15:49:01 2022 +0100

    Replace Guava's VisibleForTesting Annotation

commit ddb5efbd77c5c2199660f6b3527339c91d5efa8a
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Jan 10 14:35:13 2022 +0100

    Remove unused Guava Lists imports

commit 00e7962418dc69dbe8c932643a3b589b7ed90b8c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 12 10:24:11 2022 +0100

    Revert "Handle exception in sendShortMsg"
    
    This reverts commit 1695884bbc1ea86810b246076354f2d239a4ee17.
    
    The assumption that there might be a `.write` bug was wrong. We saw
    ByteBuf leak errors despite this.

commit 24796cfdd0b17232ee42fdafc5a7d978fd86de62
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 11 16:42:40 2022 +0100

    Remove future chaining in DelayableWriteChannel
    
    The incoming future is already chained if necessary - it is not
    necessary to chain again to ensure correct message ordering.

commit c2857401fd3ba6db6868c4d5a71002d0c1d36f62
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 11 16:21:08 2022 +0100

    Ensure row counts are sent in correct order to pg clients

commit 4684744f64d6eca278980a4404bde81820d8e8cd
Author: baur <baurzhansahariev@gmail.com>
Date:   Tue Jan 11 17:20:15 2022 +0100

    Add an empty pg_catalog.pg_locks table

commit cda6646e9c5c44991e1f9c1c2c84f970ff4ee7fd
Author: baur <baurzhansahariev@gmail.com>
Date:   Mon Jan 10 10:51:49 2022 +0100

    Fix an issue with switching to plaintext

commit 2d1d3b77c0038029f1dded1636757d47d9580626
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 7 10:59:54 2022 +0100

    Fix Local Translog Recovery not Updating Safe Commit in Edge Case
    
    Backport of
    https://github.com/elastic/elasticsearch/commit/59570eaa7dbac568c97ac07b76d6b802c349830d
    
    Also fixes flaky IndexShardTests.testRestoreLocalHistoryFromTranslogOnPromotion
    with seed 61BB7A49DC80BEC2 which causes a IndexShard/Engine flush

commit 2bb216e6e53a7f877b64c9a5628936372837376f
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jan 10 17:10:19 2022 +0100

    EngineTestCase#getDocIds should use internal reader
    
    See https://github.com/elastic/elasticsearch/commit/d2e92a1791c

commit fba78b9d158e7cc82583b26ce52db53f01fce548
Author: disideris <d.sideris@hypertech.gr>
Date:   Tue Nov 23 20:17:06 2021 +0200

    Implement scalar function array_append

commit 07c724d6f5c6395b41877644c81359706fcc2651
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 10 15:33:46 2022 +0100

    Fix IndexNotFound errors during inserts on partitioned table
    
    testDeletePartitionWhileInsertingData in
    PartitionedTableConcurrentIntegrationTest was flaky:
    
        io.crate.exceptions.RelationUnknown: Relation 'yfjvblyelpwzy..partitioned.parted.04132' unknown
                ...
        Caused by: [yfjvblyelpwzy..partitioned.parted.04132/d-U30GdTQN-GukNosYvp8A] org.elasticsearch.index.IndexNotFoundException: no such index
                at app//org.elasticsearch.cluster.routing.RoutingTable.shardRoutingTable(RoutingTable.java:150)
                at app//io.crate.planner.operators.InsertFromValues.execute(InsertFromValues.java:647)
                at app//io.crate.planner.operators.InsertFromValues.lambda$execute$0(InsertFromValues.java:285)
                at java.base@17/java.util.concurrent.CompletableFuture.uniComposeStage(CompletableFuture.java:1187)
                at java.base@17/java.util.concurrent.CompletableFuture.thenCompose(CompletableFuture.java:2309)
                at app//io.crate.planner.operators.InsertFromValues.execute(InsertFromValues.java:281)
                at app//io.crate.action.sql.Session.singleExec(Session.java:664)
                at app//io.crate.action.sql.Session.exec(Session.java:527)
                at app//io.crate.action.sql.Session.triggerDeferredExecutions(Session.java:514)
                at app//io.crate.action.sql.Session.sync(Session.java:498)
                at app//io.crate.testing.SQLTransportExecutor.execute(SQLTransportExecutor.java:258)
                at app//io.crate.testing.SQLTransportExecutor.execute(SQLTransportExecutor.java:236)
                ... 5 more

commit 18fa7e6e2faca46b5231cb2930b0e490eb43be9c
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Jan 10 12:03:17 2022 +0100

    Use table UUID instead of table name to identify tables in metadata
    
    A table name is allowed to be changed by e.g. swapping or renaming.
    Thus resolving tables must be done by the immutable UUID
    instead of a mutable name. This should fix a rare edge-case on table
    swapping were tables are wrongly resolved by their old name.

commit c0d14b2c34feb8324cf801685c8fe55cb92604f6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 11 10:39:50 2022 +0100

    Fix flaky ClusterDisruptionIT
    
    Follow up to https://github.com/crate/crate/pull/12000
    
    The timeout value wasn't passed along, causing
    ClusterDisruptionIT.testAckedIndexing to fail

commit 6c9ad721731c356d8ad5921098acfe29872051ad
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 15 17:27:24 2021 +0100

    Replace ActionFuture in SQLTransportExecutor with CompletableFuture
    
    Relates to https://github.com/crate/crate/issues/11940

commit 906172b23b01d9cfb7b55a748ff6bd2af96e5ba4
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Nov 19 17:22:02 2021 +0100

    Implement scalar function pg_catalog.age

commit 5b374cd0d5dcc0927e1e1181de321f451b713a98
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 23 16:55:11 2021 +0100

    Upload GHA test results to wacklig
    
    Should help give us a better overview over whether there are some tests
    that exclusively fail on Windows.

commit 1d8f4b8bdc7fff670f0426cdf960e633d8d2ff06
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 5 17:02:20 2022 +0100

    Utilize scheduleUnlessShuttingDown in TransportKeepAlive
    
    Based on https://github.com/elastic/elasticsearch/commit/290c6637c2475320d6206cdafdec026f731777f4
    The other places the ES patch touches already use
    `scheduleUnlessShuttingDown`

commit ecada62af924b5f103cc5ae0a355b05035eb40cb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 23 17:19:22 2021 +0100

    Change TransportService execute overload to use CompletableFuture
    
    We tend to prefer the `CompletableFuture` over the `ActionFuture` as it
    is more powerful and makes it easier to chain action.

commit 95e5b0a36d8b77e436dfb1a2458801296d812ed4
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jan 6 16:46:24 2022 +0100

    fixup! Fix trimUnsafeCommits for indices created before 3.2

commit c05620a0a8910db696abb6a9f40058373fbc61f6
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jan 6 14:47:34 2022 +0100

    Fix trimUnsafeCommits for indices created before 3.2
    
    Backport of https://github.com/elastic/elasticsearch/pull/57187
    
    Fixes #11756.

commit 3bf795ad84584b99580b8de13ff0cfe1dd8feb57
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 5 15:59:43 2022 +0100

    bp: Fix Leaking Listener When Closing NodeClient
    
    Spotted this while looking into flaky test failures.
    I doubt it is related, but just to rule it out.
    
    https://github.com/elastic/elasticsearch/commit/f38385ee25725e8ca7631eb852ca16b5b1508da1

commit eb365c5c300488d8fe525398a0264de51d51d664
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 5 14:51:20 2022 +0100

    Remove unused ShutdownListener
    
    The `listener` instance was never assigned

commit cbb2b9b47a2648a71e68762d3c9058f8dbefe777
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 5 11:54:24 2022 +0100

    Remove unused messageListener from TransportService

commit 2eb51e6e51110eaa6009ad6a9783e44c49c25917
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 5 11:11:57 2022 +0100

    Remove unused OnModuleReference

commit 40a394d922e3fc5803d0979a46f03500ada4e7ce
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 5 11:55:50 2022 +0100

    Do not unwrap TransportException by default
    
    There are several places where we check exceptions for instances of
    `ConnectTransportException`. If we unwrap any `TransportException` by
    default, the checks for `ConnectTransportException` no longer work.
    
    This changes it to instead unwrap only `RemoteTransportException` -
    which is the only `TransportException` used as a generic wrapper.
    
    I suspect this may have caused some flakyness.
    
    Follow up to https://github.com/crate/crate/pull/11988

commit b80cd771867ab990e3519d90e8e5ddb9098dc4d7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 4 11:47:30 2022 +0100

    Remove write queue from Netty4MessageChannelHandler
    
    The queue was introduced in
    https://github.com/crate/crate/commit/a7d80dfe9519abf21399416aab1ac9a5a6e21360
    to chunk and throttle netty writes.
    
    It looks as if the implementation has a bug and the flush is not always
    triggered.
    
    Instead of fixing the implementation this removes the queue altogether.
    There have been some optimizations in netty since, and for us it would
    likely make more sense to change the serialization and allocation
    strategy in the `OutboundHandler` and serialize directly to a pooled
    `ByteBuf` instead.

commit 93780453d06a6e96a3fd74026c361ece0c8cb224
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jan 4 15:51:15 2022 +0100

    Fix translog BWC with CrateDB < 3.3
    
    Followup of 857a6fccc41f43c40069433b9d1842c963995f92
    which backported non-bwc code by mistake.
    This will re-add support reading of translog files created with
    CrateDB < 3.3.
    
    BP of https://github.com/elastic/elasticsearch/commit/d72bd3a171d5624dacc32f3e83a47bc49fcbef99

commit c697ef635973fcc734b1d1bfa06d99db0cce45b8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 3 12:06:07 2022 +0100

    Speed up jobId generation
    
    `UUID.randomUUID` utilizes `SecureRandom`
    For our jobIds it should be good enough to go with statistically random
    ids created using ThreadLocalRandom instead:
    
          UUIDBenchmark.secureRandomUUID  avgt   10  423.891 ± 6.087  ns/op
          UUIDBenchmark.randomBytesUUID4  avgt   10   27.081 ± 1.475  ns/op
        → UUIDBenchmark.randomLongs       avgt   10    4.552 ± 0.096  ns/op
          UUIDBenchmark.staticLongs       avgt   10    3.681 ± 0.105  ns/op

commit 8a0696036f4a6fbb50994cb8809f7903a5f7ebc1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 4 10:03:00 2022 +0100

    Update jdbc used in tests to 42.3.1
    
    https://jdbc.postgresql.org/documentation/changelog.html#version_42.3.0
    https://jdbc.postgresql.org/documentation/changelog.html#version_42.3.1

commit dcc781147be7cecd54e99b4cfab06e24110454ca
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 4 09:55:52 2022 +0100

    Update antlr4 to 4.9.3
    
    https://github.com/antlr/antlr4/releases/tag/4.9.3

commit a564c88fd26e0847edd3a6636f2fa8245865043c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 4 09:55:14 2022 +0100

    Update jackson to 2.11.2
    
    https://github.com/FasterXML/jackson/wiki/Jackson-Release-2.11.1
    https://github.com/FasterXML/jackson/wiki/Jackson-Release-2.11.2

commit 1893ca23b778c6dea660cd2e882f28bee61b4b89
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 3 09:34:27 2022 +0100

    Remove some more guava usages
    
    Relates to https://github.com/crate/crate/issues/10510

commit 98685b7993965bb042e7064b983bed26aa3b29aa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 3 09:42:23 2022 +0100

    Update gradle to 7.3.3

commit 06d61ef4f259730593766db68f4d0bfc2a0bc42d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 3 09:47:10 2022 +0100

    Update log4j to 2.17.1
    
    https://logging.apache.org/log4j/2.x/changes-report.html#a2.17.1
    
    Fixes among others a CVE:
    
    - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-44832
    - https://issues.apache.org/jira/browse/LOG4J2-3293

commit 492908805620a079087e92364bae69f55e37b554
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 21 10:47:51 2021 +0100

    Simplify array_slice implementation
    
    The array slice analyzer part was inspired by the subscript expression.
    
    For subscripts we do a lot of extra work to get qualified
    names/references for cases like `a['b']['c']`. We do this to get a
    `Reference` instead of a `SubscriptFunction` if possible. This makes
    value lookups a lot cheaper.
    
    For `array_slice` that scenario never happens because the indices are
    numeric only and we always end up with a `ArraySliceFunction`.
    Because of that we do not need the `ArraySliceValidator` logic but can
    just convert each expression to a `Symbol` and let the function
    resolving logic deal with the rest. The `long`/`int` bit is covered by
    signature matching & casts.

commit d9e92ff575a01ccb67b62ad4d6489e2148a44751
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Mon Dec 20 10:22:42 2021 -0500

    fail nodeActions if the corresponding Task is killed
    
    This addresses a copy-from fail-fast scenario. When fail-fast is
    triggered, then the task will be killed as well as the upsert
    actions that are active. But the incoming upserts will proceed
    without being killed.

commit 77479d66bf1819103a8d605a26d74f9448b6a047
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 20 11:19:08 2021 +0100

    Update log4j to 2.17.0
    
    https://logging.apache.org/log4j/2.x/changes-report.html#a2.17.0
    
    https://logging.apache.org/log4j/2.x/security.html#CVE-2021-45105

commit 5e614b0f782f9e1283764971c987ff9631846214
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Dec 16 09:50:44 2021 +0100

    Remove SQLPlugin and BlobPlugin, merge component registration
    
    The main code base already relies a lot on components registered by
    these plugins thus they aren't plugins anymore.
    Due to more integration of custom logic into the main code base,
    keeping depended code registered through the plugin loader doesn't
    work anymore or is complex to implement.
    For example, implementing new components which are relying on the
    settings registered by the SQLPlugin forces these to depend on the
    plugin to be loaded first.
    
    Components registered by these pseudo plugins are moved to relevant
    classes instead.

commit 982f3f388a4df2ceb13cc16fb0e3b7b0530dbd6b
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Dec 15 14:40:40 2021 +0100

    Consolidate crate cluster/node settings with global ones
    
    Define cluster and node setting only in one place instead of
    having them spread accross multiple classes.

commit 2629810d313232b71741fe5bbdbfd7de41adbdd5
Author: melgenek <ymelnyk@liveintent.com>
Date:   Sat Dec 4 19:17:14 2021 +0100

    Add array_slice scalar function incl. array slice expression support
    
    Closes #11910.

commit bc0bb3f2191d9d5482934278cf8bfc380d0f1f93
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 15 15:43:47 2021 +0100

    Remove reThrowIfNotNull
    
    It is only used in a single place where the exception is actually
    nullable. In all other cases it is redundant

commit eaf9196a74ec07366fc6096caf764a0114a66cd8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 15 15:31:15 2021 +0100

    Unify ExceptionsHelper.unwrapCause and SQLExceptions.unwrap
    
    Both were roughly the same, except that `SQLExceptions.unwrap` unwraps
    more exceptions by default.

commit b66bd4c8bd1657287160c7fb039023397f4a4116
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 15 14:55:37 2021 +0100

    Prefer UncheckedIOException over ElasticsearchException
    
    `UncheckedIOException` is more specific.

commit a86511ec40626b881b83cd558381ea23ebe0f47a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 15 14:41:22 2021 +0100

    Replace ExceptionsHelper.convertToRuntime with Exceptions.toRuntimeException

commit 7ff96dab0f197d7010d9e48b19bf34022dbefbd8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 15 11:34:21 2021 +0100

    Add release notes entry for log4j update to 2.16.0

commit 3be673c6a6229ec6e9e34e90647665a463c2b913
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Dec 14 17:32:14 2021 +0100

    Add java imports layout for Intellij Idea
    
    Use eclipse imports layout in order to be consistent with
    other idea's.

commit 0b57093e18360ac36cf2636f52281b4f1b41069e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 14 14:17:43 2021 +0100

    Update log4j to 2.16.0
    
    https://logging.apache.org/log4j/2.x/changes-report.html#a2.16.0

commit 1f21d4d7be1e4284c1dd20ecc5c37ec9f7723d16
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 14 14:05:41 2021 +0100

    Update netty to 4.1.72
    
    Fixes don't affect CrateDB, but shouldn't hurt to update
    
    https://netty.io/news/2021/12/13/4-1-72-Final.html

commit ab01456de686b7d7f632e34559607ff56f278628
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Dec 13 12:23:50 2021 +0100

    Reflect release 4.6.6

commit e57a1049d9198be8fa93509bba4bef1f1de07ff4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 10 14:46:49 2021 +0100

    Update netty to 4.1.71
    
    https://netty.io/news/2021/12/09/4-1-71-Final.html

commit 9e8ebb62a7b184e2e92dc53fcc0a13d2d9f66f58
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 10 14:42:37 2021 +0100

    Update log4j to 2.15.0

commit 2f1e9ccffeb0f93becd62a1efcfa5227f6ff1497
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Fri Dec 3 13:07:18 2021 -0500

    include generated_columns when merging index mappings

commit ca75ff508b9ef1ea64031ed401936348b6abec3c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 9 12:08:49 2021 +0100

    Handle parse errors in `handleSimpleQuery`
    
    Follow up to https://github.com/crate/crate/pull/11953
    
    If `createStatements` failed to parse the statement the
    `ReadyForQueryCallback` never triggered. This prevented the client from
    receiving a ready for query message and it became stuck
    
    Discovered via the crate-qa sqllogic tests

commit 6ef6b4881f4032459f0314adabd2462e5bc41d1a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 9 11:28:27 2021 +0100

    Update gradle to 7.3.1

commit 0b00d17e18bd068ce98fa05aebf58fe0b796284d
Author: baur <baurzhansahariev@gmail.com>
Date:   Tue Dec 7 14:55:17 2021 +0100

    mute flaky test "switch_to_plaintext_enabled_downgrades_to_plaintext"

commit 7a99fd51f4c38236a1701eb986e0f61833ad46c3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 6 17:42:40 2021 +0100

    Fix statement splitting in PostgreSQL simple protocol mode
    
    Use the antlr sql parser to split multiple statements.
    Fixes https://github.com/crate/crate/issues/11920

commit b2b2eb896facbcc18417d3587c6d0cd5d64602ea
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Tue Dec 7 09:01:20 2021 -0500

    disable flaky test temprarily
    
    test_copy_from_with_fail_fast_property_can_kill_all_nodes_with_failure_from_single_node

commit f664b1226a44ac268aec238e70d16706adf51d9b
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Dec 6 16:50:56 2021 +0100

    Rename DiscoveryNode.isMasterNode() to isMasterEligibleNode()
    
    isMasterNode() may imply that the node is the actual master while
    the method only check if the node is eligible to become a master.
    Renaming it to a more concrete name to avoid misuses.

commit 624da6ad15c548559bfec9f038c2b28e2e0b4e65
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Dec 6 12:10:04 2021 +0100

    Fix is-node-master flag in UDC ping task
    
    `clusterService.localNode().isMasterNode()` tells if the current
    node *can* be a master node (has the master node role), but not
    if it *is* the current master node.

commit 48fcd71a9d0cfea9d118987430c6f262694b8b18
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 6 16:59:29 2021 +0100

    Migrate mergify config to use new queue rules
    
    `strict` mode is deprecated.
    See https://blog.mergify.com/strict-mode-deprecation/

commit 3da719b6ec09b51ecbf4fc8ac3c9612701f4cb2e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 6 11:59:39 2021 +0100

    Avoid creating argument data types per row in unnest
    
    Minor optimization.
    `getArgumentDataTypes` calls `TypeSignature.createType` per argument.

commit 01bc11c8794a31137623cf542c0194bfb67f2d3f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 3 10:33:28 2021 +0100

    Fix cgroup v2 detection on older kernels
    
    See https://www.kernel.org/doc/html/v5.4/admin-guide/cgroup-v2.html?highlight=cgroup#controllers
    
    The `cpu.stat` file didn't exist for root cgroups:
    
    > A read-only flat-keyed file which exists on non-root cgroups. This file exists whether the controller is enabled or not.
    
    In newer versions it changed:
    
    > A read-only flat-keyed file. This file exists whether the controller is enabled or not.

commit 01dc17264b8444e7b6bf7fd4f9fa812e2c108604
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 30 10:23:37 2021 +0100

    Fix mergify checkstyle condition

commit 8b4aa53a7f296a94e2ef589ad3d4679e91c11873
Author: Amelie Winkler <89524770+amelieewinkler@users.noreply.github.com>
Date:   Mon Nov 29 15:42:39 2021 +0100

    Update README.rst

commit 8a79ec0f92e557b0ea2caeed7615f60628caa42a
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 26 15:01:36 2021 +0100

    Improve array scalar functions documentation
    
    Move note related to non-atomic operations of array scalar
    functions when used inside update from the array_cat section
    to the general array section as it applies to all array scalars.
    
    Remove examples operating of column references, all scalars
    work on literals and references, no need to make this explicit just
    on some scalar function documentations.

commit d6da499c7fb3e8c588482fa4b8021f07db4f8d85
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 26 11:24:10 2021 +0100

    Move disableProcessorCheck for netty to EsTestCase
    
    Since the MockTransport is removed in favour of the NettyTranport,
    some non-integration tests are failing cause of the enabled
    processor check.

commit 7cff6033f4823d70325f5459f28eaf38a3bfbcac
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 23 16:12:02 2021 +0100

    Run checkstyle as a dedicated github action job
    
    Will help see checkstyle failures earlier, while still showing the test
    failures if one chooses to wait for the tests to complete.

commit 1056f48dd1e8e250a9d71ec2c9847ddad9a5f0c9
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Fri Nov 19 16:24:00 2021 -0500

    remove duplicate S3FileInputFactory class introduced from #11896

commit fa9f5734bc0ec7b373d52434bf097276e41424cd
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Wed Nov 17 22:26:15 2021 -0500

    refactor copy-to related logic like copy-from and convert to plugin

commit 28b44c19b534e559168fcd84f06f7df272c1b13f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 22 13:48:54 2021 +0100

    Remove MockTcpTransport
    
    The MockTcpTransport had only a single use site left. We can replace
    that with the Netty4Transport. Has the advantage that we cover more
    production code.

commit 2eced434c4633396ed74bafc6fe58d254dbf04fd
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Wed Nov 17 12:48:42 2021 -0500

    fix CopyIntegeration testcase timeout

commit 3f32f0a19df5d07a013da9e022943285973d5159
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 17 16:29:47 2021 +0100

    Remove unused MockTcpTransport ctor overload

commit 51b1a2e0101158d8d17a462a69977244a4722661
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 17 16:17:25 2021 +0100

    Remove transport extension point in NetworkPlugin
    
    Extensibility is nice - except when it gets in the way and isn't used.
    
    For CCR we want to provide an option to tunnel transport communication
    via the PostgreSQL wire protocol. Being able to rely on a single
    transport implementation will help with that.

commit 846d303778930c125ce3793cd89622ffc0963231
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 17 16:06:07 2021 +0100

    Use netty transport within MockTransportService if possible

commit 6005ad0adc2d250c48baff16e564ca5f62f83cd3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 17 15:29:46 2021 +0100

    Remove unused ESSingleNodeTestCase
    
    🔥

commit c58099c755fe1a870bc663ce5586341019474b0d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 17 15:22:59 2021 +0100

    Remove MockTcpTransportPlugin and default to netty in itests
    
    Using the `MockTransport` in the integration tests hid issues like
    https://github.com/crate/crate/pull/11906
    
    I don't think there is a good reason to keep using it for integration
    tests. It isn't more light-weight as it also creates socket/connections
    and even has some blocking code.
    
    Switching to defaulting to netty doesn't seem to increase test run time
    but has the advantage that our tests cover more production code.
    
    The `MockTransport` and `MockTransportService` are still required for
    some disruption tests.

commit 70efcb491efd1a35dcf2f5d8b9243f52558d5817
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Nov 18 15:51:00 2021 +0100

    Improve docs for the synonym token filter

commit 05a625b0228b36c33b223d06c4e3e128314c8c88
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Nov 18 10:36:39 2021 +0100

    Update to Lucene 8.11.0
    
    https://lucene.apache.org/core/8_11_0/changes/Changes.html

commit a44dd32af05554c3188e9a1b29412e7b3e807bc0
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Thu Nov 11 13:53:18 2021 -0500

    move s3 copy-from related out to plugin module

commit 38aeb09d3080916db716c08da94bc2310f003990
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 17 12:04:55 2021 +0100

    Don't use shared event loop group for HTTP
    
    The blob layer blocks on the netty thread. If we use shared workers
    between HTTP and transport that can lead to deadlocks if blob uploads
    block enough threads to starve the transport layer, which in turn can
    break coordination and lead to the blob uploads blocking the threads
    forever.
    
    Discovered this by disabling the mocked transport in the test layer.

commit f37ff3477176f9b16315054a3f839e8d73035dea
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 16 18:24:37 2021 +0100

    Remove unused methods from ESTestCase

commit b1d19e042b9632599106bdcc9c53dab84bc75d84
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 16 18:08:18 2021 +0100

    Remove unused ranom data generation methods from ESTestCase
    
    We've the `DataTypeTesting` infrastructure to generate random data for
    various data types. That should be preferred over the methods from
    `ESTestCase`.

commit 20ce15b1fbaa74c875363a273473fc7ec7459107
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 16 12:05:22 2021 +0100

    Encapsulate Epoll channel selection in NettyBootstrap
    
    The eventLoopGroup creation is part of NettyBootstrap and it is already
    making decisions regarding Epoll/Nio use. This ecanpsulates the
    remaining Epoll/Nio decisions as well.

commit 8e6fa372258cf65b1851f214184fee7d7a5339a9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 16 11:43:47 2021 +0100

    Rename EventLoopGroups to NettyBootstrap
    
    Prepare to add more logic to it - so the EventLoopGroups name will
    no longer fit.

commit 5e6ffad8bbf32bff9dd4d5e5ff85aa73803d5da5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 16 10:11:29 2021 +0100

    Add END statement as synonym for COMMIT
    
    Closes https://github.com/crate/crate/issues/11899
    See https://www.postgresql.org/docs/current/sql-end.html

commit 042fb2dba7de1f55a0be2cbc340c28c20f2c8379
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 16 09:49:59 2021 +0100

    Update gradle to 7.3
    
    https://docs.gradle.org/7.3/release-notes.html

commit e4371472a744b08b7ae11ea4e7f5ab02be121cd6
Author: Georg Traar <proddata@users.noreply.github.com>
Date:   Tue Nov 16 10:36:12 2021 +0100

    Enable prototype methods for JavaScript objects in UDFs (#11849)

commit e95c80444a43239dc776bd961109643cd4674a40
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Fri Nov 12 17:50:48 2021 -0500

    Reflect 4.6.5 release

commit 6486c6cd6949b343f176f6e97ab5354be4f6abf2
Author: baur <baurzhansahariev@gmail.com>
Date:   Thu Nov 11 14:45:15 2021 +0100

    Don't use quietPeriod on shutdownGracefully in tests

commit 74163153985072d3cc9bd56920fa4278302f6083
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Wed Nov 10 07:56:26 2021 -0500

    update JTS to 1.18

commit f78e21a027b6739c85950dd130fefb39de8cc075
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Nov 10 11:01:32 2021 +0100

    Fix streaming of RelationAlreadyExists exception
    
    Follow up of d365827bfc904b9e0feb030fc86d16a44ea9e573.

commit 7f970ada5141360aace2192a7e5ac5b40d3907f1
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Nov 9 14:50:03 2021 +0100

    Temporarily disable Gradle-License-Report plugin cause of download issues
    
    Error happen on GH:
       > Could not resolve com.github.jk1:gradle-license-report:2.0.
         Required by:
             project : > com.github.jk1.dependency-license-report:com.github.jk1.dependency-license-report.gradle.plugin:2.0
          > Could not resolve com.github.jk1:gradle-license-report:2.0.
             > Could not get resource 'https://plugins.gradle.org/m2/com/github/jk1/gradle-license-report/2.0/gradle-license-report-2.0.module'.
                > Could not GET 'https://jcenter.bintray.com/com/github/jk1/gradle-license-report/2.0/gradle-license-report-2.0.module'.
                   > PKIX path validation failed: java.security.cert.CertPathValidatorException: validity check failed

commit d365827bfc904b9e0feb030fc86d16a44ea9e573
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Nov 9 08:52:05 2021 +0100

    Add streaming support for crate specific exceptions
    
    Make required crate specific exception streamable.
    Converted some abstract exception classes into interfaces, as they
    are just markers.

commit d2baa91d823f1eb49ee70bdae689acc48c6586c1
Author: baur <baurzhansahariev@gmail.com>
Date:   Tue Nov 9 01:34:12 2021 +0100

    Create different SslContext for each protocol to prevent client auth values clash

commit a10753b89ae1047423043f7445c06d94d8137e6b
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Nov 4 12:42:51 2021 +0100

    Fix documentation link for backup-restore in some 4.3.2-4 releases
    
    The release info for v4.3.2-4.3.4 contains an invalid link for
    the backup-restore hint.
    All other versions use the correct link so this seems to be mistake.
    
    Fixes sphinx linkcheck failures.

commit d10147c1e9d8e32872e59f485d5dca4660c8813d
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Thu Jul 29 19:52:25 2021 -0400

    implement fail_fast option for copy-from statement

commit 1ede330c8307973dea9c54e99292f2a59b52b3a6
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Sat Oct 30 00:51:42 2021 +0200

    Use Python 3.9 for running the Sphinx linkchecker on GHA
    
    Beforehand, Python 3.8 was used.

commit df2de69a124e0ce40503d53ab04be305e12f3c49
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Sat Oct 30 00:35:03 2021 +0200

    When available, use Python 3.9 for running the blackbox tests
    
    Beforehand, Python 3.7 was preferred.

commit 9caae2f858fefe9791695b03b3e2f6d84fbfbc05
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 4 21:03:51 2021 +0100

    Update netty to 4.1.70
    
    https://netty.io/news/2021/10/11/4-1-70-Final.html

commit a43c04362daf17343fb44360c2d9568263c84af3
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Thu Nov 4 14:20:14 2021 +0100

    Documentation: Remove some details regarding the enterprise license

commit 4683a61d6009935b1766771e10a273ecfc57e669
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Thu Nov 4 13:58:53 2021 +0100

    Documentation: Remove reference about "Intercom".
    
    Crate.io stopped using Intercom and corresponding code has already been
    removed from Admin UI, see https://github.com/crate/crate-admin/pull/725

commit 22881aac75d5a06b0c9492080d99836bb883daa9
Author: baur <baurzhansahariev@gmail.com>
Date:   Thu Oct 28 11:40:18 2021 +0200

    Unwrap alias in optimizer before applying rules

commit 8007d8dbcc5dcdfa15cb64971811253b62494e57
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 3 10:11:22 2021 +0100

    Handle dynamic_templates during rolling upgrade
    
    Follow up to https://github.com/crate/crate/pull/11848
    crate-qa tests broke

commit d5c51f36c4ddd77250df3634f5459281b032477e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 3 11:34:16 2021 +0100

    Fix InternalEngineTests
    
    The tests index documents using low level APIs and by-pass the field
    mappers.
    Due to the changes in https://github.com/crate/crate/pull/11848 this
    created a inconsistency. The documents were first indexed directly as
    `TextField` - which didn't match the recovery logic which goes through
    the document parser logic and indexes them as `Field` /
    `SortedSetDocValuesField`. This caused failures during the recovery:
    
        cannot change field "value" from index options=DOCS_AND_FREQS_AND_POSITIONS to inconsistent index options=DOCS
    
    Previously this didn't fail because we relied on the dynamic templates
    to prefer using the `KeywordFieldMapper` and these dynamic templates
    were never present in the `InternalEngineTests`

commit e653efdb3857edcb3e9035932cd4095999560642
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 2 17:47:58 2021 +0100

    Remove `crate_defaults` index templates
    
    Follow up to https://github.com/crate/crate/pull/11848
    It left over an empty template - we can remove that as well.

commit 77532124d38d1cefd8e037c777c66cd9182767aa
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Nov 2 18:29:02 2021 +0100

    Update to Lucene 8.10.1
    
    https://lucene.apache.org/core/8_10_1/changes/Changes.html#v8.10.1

commit cb44f4603a0594fed036221736fe43c155e79894
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Tue Nov 2 11:04:51 2021 -0400

    fix linkcheck failure

commit 7fea190efa237f49cc06a41114cd7b9fd4d8af43
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 25 15:48:20 2021 +0200

    Remove unused `dynamic_date_formats` support
    
    `dynamic_date_formats` would allow to detect date time formats within
    dynamic strings, but the feature is not exposed via SQL.
    
    Removing it is motivated by https://github.com/crate/crate/issues/10025
    
    If we want to skip parsing the source, we need to handle dynamic schema
    updates differently and removing unused/unnecessary logic will make that
    easier.

commit cda5f69d1358d78bed29b0288543156544a3936e
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 28 13:16:24 2021 +0200

    Remove unused method from Repository interface
    
    The Repository.getShardSnapshotStatus() method is not used inside CrateDB

commit 990466087dcd0ae5c9419a8e35644568b3d817ad
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 26 18:07:31 2021 +0200

    Make last repository iface method (getSnapshotInfo()) non-blocking
    
    Preparation for Logical Replication to avoid blocking calls
    between clusters.

commit cef2bd65a5a300196537ff21d43801fc189fda8a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 25 11:55:18 2021 +0200

    Remove dynamic mapping templates
    
    We don't expose the feature via SQL and only utilized it internally to
    change how `string` fields are mapped by default.
    We can adapt the code for the latter case.
    
    This is motivated by https://github.com/crate/crate/issues/10025

commit b8bd5460f4eddc7cf531c0b0c85cfc0f1ff44dd0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 25 09:52:18 2021 +0200

    Update GraalVM to 21.3.0
    
    https://www.graalvm.org/release-notes/21_3/

commit dbcc240e276309972c5b36c97fe326000ef706c8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 20 16:37:40 2021 +0200

    Use Reference.hasDocValues as source of truth in doc-value aggregates decisions
    
    Motivated by https://github.com/crate/crate/issues/10025

commit d7efb62b16f36c368b33396afd0041c9459642d4
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Oct 19 17:56:38 2021 +0200

    Adapt Repository interface for async and batch operations
    
    Pre-requisite for a non-blocking LogicalReplicationRepository.

commit 2c5d69823e51d63e5c88f2f2e4a05e257d2bd783
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 20 11:53:08 2021 +0200

    Remove `valueForDisplay` from MappedFieldType
    
    There was a single use within FieldVisitor.postProcess.
    
    `FieldVisitor.postProcess` itself can be removed. In the one call-site
    only `id`, `routing` and `source` get accessed. Of the three only
    `routing` was affected by the `postProcess` and we can handle that case
    directly.
    
    This is motivated by https://github.com/crate/crate/issues/10025
    We already got several methods on `DataType` with a similar purpose.
    (implicitCast, explicitCast, valueForInsert, sanitizeValue).

commit 3169e4ac6eddccc48d7ed1a6b197fa0e1ac2152d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 18 16:53:23 2021 +0200

    Add optional equality query generation capability to storage support
    
    https://github.com/crate/crate/pull/11669 started moving the query
    generation from the LuceneQueryBuilder into the Scalar functions.
    
    This has the advantage that scalars defined outside the server module
    could implement custom query generation - improving the extensibility.
    
    This worked out well for scalar functions which are registered to a
    strict signature, like `foo(int, long)`, but it becomes problematic
    for functions which have a generic signature like `eq(a, a)`.
    
    Given that types are theoretically extensible as well - such a function
    cannot handle all possible types and instead needs to rely on some sort
    of type class: Types with certain capabilities.
    
    This commit adds a `EqQuery` interface to the `StorageSupport` to solve
    this.

commit 896063942adbbe8b6faf2fae9e9b6471df8b4cbd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 18 15:56:45 2021 +0200

    Use NormsFieldExistsQuery for IS NULL if norms are available

commit 726432e5153a69b13833239967316c6d64595ab7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 18 15:39:58 2021 +0200

    Remove ExistsQueryBuilder
    
    Relates to:
    
    - https://github.com/crate/crate/issues/10025
    - https://github.com/crate/crate/pull/11669

commit 8f5e7700f569ee61a37349ec6a2528ba2b481a79
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 12 16:05:18 2021 +0200

    Implement toQuery in IS NULL predicate without ExistsQueryBuilder
    
    Relates to:
    
    - https://github.com/crate/crate/issues/10025
    - https://github.com/crate/crate/pull/11669

commit 53a0a5526a309d4537b2ca6ac1e7b2104949d443
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 12 18:00:49 2021 +0200

    Expose effective `hasDocValues` on Reference
    
    This replaces `isColumnStoreDisabled` with a `hasDocValues` property.
    `isColumnStoreDisabled` was primary used to reflect the `WITH STORAGE
    (columnstore = false)` clause in a CREATE TABLE statement, but it didn't
    take the different default values into consideration. So
    `isColumnStoreDisabled` was `false` for columns like geo shapes which do
    not have doc-values.
    
    This relates to https://github.com/crate/crate/issues/10025 and ensures
    that we can use the `hasDocValues` information on the `Reference` for
    Lucene query building decisions.

commit 5651d8d4f6d149c496e329751af3e1fd28f8a5a8
Author: Georg Traar <georg@crate.io>
Date:   Thu Oct 14 15:38:10 2021 +0200

    Fixed date_format() for day of month specifier

commit 6a044750e5899122211813286c295c77396b23d5
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Oct 12 13:14:52 2021 +0200

    bp: Allow Parallel Snapshot Restore And Delete
    
    https://github.com/elastic/elasticsearch/commit/1064009e9d967bd9e81e10f4eb8dd33808ec1762

commit 7ca56de9400eb8f7af9154b05888a19f6708aace
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 13 14:14:28 2021 +0200

    Run forbiddenApis via GHA/Java17
    
    The forbiddenApisMain task runs under the same JVM that gradle runs with
    and doesn't honor the `forkOptions.javaHome` setting.
    
    Running the check with Java 11 prevents us from using newer language
    features like records.

commit b339de286981e27c0c95f69331b469ac58a066a0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 12 17:41:58 2021 +0200

    Improve error message for invalid STORAGE WITH options
    
    If you provided an invalid option name, the error message included the
    value. E.g. `Invalid storage option "true"` - which isn't too helpful.

commit 37510d1e9c0359ba5f34d4e2e4e6cc5689e99337
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 12 14:55:34 2021 +0200

    Add a note about fixes backports to unreleased.rst

commit 46ff8de68e846927723d4d9a2372ee7457074e8d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 12 11:40:34 2021 +0200

    Add dedicated bitstring query tests
    
    None of the existing tests would've failed if the query generation used
    wrong values in the term.

commit d7ddf0620df5fe40e628a999fdb8fa8c02cfbf56
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 11 16:56:34 2021 +0200

    Ensure EQ on bool column uses TermQuery
    
    Follow up to https://github.com/crate/crate/pull/11814 / fixes a
    regression introduced with https://github.com/crate/crate/pull/11669

commit 6819415d7f8584151bce2a08fb95d9facc2b646b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 11 16:14:48 2021 +0200

    Ensure EQ (ANY) on BitString uses Term(s)Query
    
    Follow up to https://github.com/crate/crate/pull/11814 / fixes a
    regression introduced with https://github.com/crate/crate/pull/11669

commit 1f2211fde4f9233170bcb30524d76163a2b0621d
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 12 10:22:36 2021 +0200

    bp: Improve handshake failure messages
    
    https://github.com/elastic/elasticsearch/commit/377a6a47ac3

commit 85d4427e3b8a924bdbc6ee4ec1cd634b5ad8789a
Author: baur <baurzhansahariev@gmail.com>
Date:   Tue Oct 12 09:39:50 2021 +0200

    use relevant name for a test method

commit 8103ec4bae3e5c9396a5a0d5c281fe17515005a2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 11 15:49:20 2021 +0200

    Ensure `= ANY` queries on float columns use optimized Lucene queries

commit 7de2aebd8f0b584c8e15a9607e5d94c748d63c43
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 11 15:32:41 2021 +0200

    Ensure EQ queries on IP type use optimized Lucene queries
    
    Fixes a regression introduced in https://github.com/crate/crate/pull/11669

commit 52037e2025791140be81e7c298523f3c173d4388
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 11 12:02:22 2021 +0200

    Remove term & termsQuery from MappedFieldType
    
    Replaced by the toQuery implementations within the scalars/operators

commit 3290399a393741accf3a656fefe4cb1e68ba0a07
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Oct 11 14:20:29 2021 +0200

    Update Netty to 4.1.69.Final
    
    https://netty.io/news/2021/10/11/4-1-69-Final.html

commit 25e4e16b32aff177600c28614fb90235dc801698
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 11 11:00:07 2021 +0200

    Remove unused QueryParserHelper

commit 5c145a1fa766c4dfad5d815584d370089c36af11
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 11 10:24:06 2021 +0200

    Seal AnyOperator
    
    The AnyOperator contains a list of all ANY related operators, so it
    shouldn't be extensible without touching the base class.
    
    Wanted to have this already in
    https://github.com/crate/crate/pull/11804, but a checkstyle update was
    necessary to support sealed classes.

commit d67dc8b3d9d6c70506d733cf95dadba475464238
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 8 14:03:03 2021 +0200

    Allow setting validation against arbitrary types
    
    https://github.com/elastic/elasticsearch/commit/52b97ec5398

commit 00ecaa7913ffad66172accf9437bc1f58ab7e38e
Author: baur <baurzhansahariev@gmail.com>
Date:   Thu Oct 7 17:18:23 2021 +0200

    mention necessity of plus and minus sign for years outside of range 0000 and 9999

commit 837f4221dea358e2f2230d41ba984994d3005190
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Thu Oct 7 19:11:01 2021 +0200

    Use new Codecov uploader instead of the Bash Uploader
    
    https://about.codecov.io/blog/introducing-codecovs-new-uploader/

commit 92f29f70780aa65e1de1379171ccd597ebee8f9b
Author: Tamas Major <tamasmajor@gmail.com>
Date:   Thu Oct 7 14:59:43 2021 +0200

    Register `array_to_string` under `pg_catalog` schema

commit 73f21dd4abe371f33bfd4ddd245d71d56a375431
Author: Tamas Major <tamasmajor@gmail.com>
Date:   Thu Oct 7 14:59:24 2021 +0200

    Add `pg_catalog.pg_encoding_to_char` scalar function

commit 9e985cca611016a13ed98656451b32d77fdc915a
Author: Georg Traar <georg@crate.io>
Date:   Mon Sep 20 16:31:06 2021 +0200

    add object_details to information_schema.columns

commit a78b9b2ce34a476bd6f32d3384bd1ad01b5d2552
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 6 16:58:45 2021 +0200

    Update checkstyle to 8.45.1
    
    Latest version before 9.0
    https://checkstyle.org/releasenotes.html#Release_8.45.1
    
    9.0 requires a lot more memory. See
      https://github.com/crate/crate/pull/11806 for an attempt to update it.

commit 8518543d750bfc5542a936bcc3730ce120991c07
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 6 11:14:09 2021 +0200

    Migrate ANY query building to new interface

commit 45f141fcb90c4602cfe9ab8f32d255b27e25cf77
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 5 17:11:54 2021 +0200

    Migrate Not query building to new interface

commit 29be36c5257c9e69f791cf9c5e633ceb3e1470de
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 5 16:56:37 2021 +0200

    Migrate ignore3vl query building to new interface
    
    Relates to https://github.com/crate/crate/pull/11669

commit 98ad3ece531fbe9e9e4ed52e459012fac002224a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 5 16:54:51 2021 +0200

    Migrate And-/Or query building to new interface
    
    Relates to https://github.com/crate/crate/pull/11669

commit 9e27ce00fe10ababb27bb98641ed6ab37381ea9e
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Sep 15 16:38:00 2021 +0200

    bp: Sending operations concurrently in peer recovery
    
    https://github.com/elastic/elasticsearch/commit/ef5c397c0f6

commit e3cb14e2642a91a21526b28a5a2809174990dcb0
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Sep 15 16:12:20 2021 +0200

    bp: Avoid copying file chunks in peer covery
    
    https://github.com/elastic/elasticsearch/commit/60d097e2626

commit bc25f68b1b6394e787f1a9d7d493c35bf0e43e56
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Sep 15 10:53:16 2021 +0200

    bp: Avoid double-recovery when state recovery delayed
    
    https://github.com/elastic/elasticsearch/commit/06b33457878

commit 45e467981ea5845c1ad2fe72ce195def672ebcf7
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Sep 15 10:37:16 2021 +0200

    bp: Retry failed peer recovery due to transient errors
    
    https://github.com/elastic/elasticsearch/commit/cd228095dfe

commit 740868c492cbdb900377ef681dbc69401fbf7d77
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Wed Jul 28 16:06:41 2021 +0200

    Update "LICENSE" and "NOTICE" files
    
    This cleans up the current versions of the "LICENSE" and "NOTICE" files.
    Within the "LICENSE" file, it removes notes about documentation tooling
    which is considered unrelated. Instead, it adds references to the
    "3RD-PARTY-NOTICES.md" file.

commit 2eceb36630ada36a56e3687384437b6875c7ee55
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Aug 25 16:37:34 2021 +0200

    Add switch_to_plaintext HBA flag letting to downgrade SSL to plaintext

commit 6cd6d203d46e8ee58e4c5d429af76c903604f0d6
Author: baur <baurzhansahariev@gmail.com>
Date:   Tue Oct 5 18:45:24 2021 +0200

    reuse LoggingHandler as it's @Sharable

commit d51bc4464d957d9893e192c0ca6768972d24b1bf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 4 15:07:05 2021 +0200

    Migrate insensitive regexp match to Scalar.toQuery
    
    Relates to:
    
    - https://github.com/crate/crate/issues/10025
    - https://github.com/crate/crate/pull/11669

commit c225cd829dc5a50ec2e8a3370c64ba2d29e81573
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 4 14:58:34 2021 +0200

    Allow coercion for insensitive regex match
    
    To get rid of the `undefined` registration to be able to expect `String`
    values in the implementation.

commit c0b28336dc253ab37c52c32da27ce6b3ff99b692
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 4 14:48:42 2021 +0200

    Migrate RegexpMatchOperator to Scalar.toQuery
    
    Related to:
    
    - https://github.com/crate/crate/issues/10025
    - https://github.com/crate/crate/pull/11669

commit c3ec3f58f0a0a2828e4a524955c3723fd1dddd99
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 4 14:36:02 2021 +0200

    Allow coercion for regex match operator
    
    Mostly to get rid of the registration for `undefined`. The
    implementation should be able to expect `String` values for the
    parameters.

commit 23e96209745c0e90116185337a0b413a3603bcbb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 5 11:56:52 2021 +0200

    Implement toQuery in MatchPredicate
    
    Relates to https://github.com/crate/crate/pull/11669

commit e2996e7ea0ed44080981b9bc585628b5c78feea0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 4 16:08:06 2021 +0200

    Migrate range query builders to CmpOperator.toQuery
    
    The `RangeQuery` class is still kept because it is also used in ANY.
    
    Relates to https://github.com/crate/crate/pull/11669

commit dc822b337c4a5fe7541114614d14b65897556c13
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 4 14:12:44 2021 +0200

    Migrate IsNullQuery to toQuery
    
    Related to:
    
    - https://github.com/crate/crate/issues/10025
    - https://github.com/crate/crate/pull/11669

commit bb9192c9d6fcc1382a3e7bb29407123c186622f5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 4 15:26:26 2021 +0200

    Migrate CIDROperator to Scalar.toQuery
    
    Relates to:
    
    - https://github.com/crate/crate/pull/11669
    - https://github.com/crate/crate/issues/10025

commit a3fb5eb4488e3838bf76dcfd45ffabf19d51de74
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 5 10:28:37 2021 +0200

    Extract toQuery methods from scalar to dedicated interface
    
    Follow up to https://github.com/crate/crate/pull/11669
    
    This is required to be able to implement the interface within
    `MatchPredicate` - which isn't a `Scalar` but only a
    `FunctionImplementation`.
    
    It doesn't add the methods to `FunctionImplementation` itself because
    aggregations also implement that interface and we cannot turn
    aggregations into Lucene queries.
    
    This re-purposes the existing `FunctionToQuery` interface - the "old"
    way of using it is still considered deprecated.

commit 0481d8cafa47526960df42bf1085852b0ab8dd93
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 5 10:00:58 2021 +0200

    Remove `collectionValueToIterable`
    
    The function was used to handle both `Object[]` and `Collection<?>`
    because a long time ago we could have either. But for quite some time
    now any values of type `ArrayType` must be a `Collection` so we can
    remove it.

commit a5fd0f5a4971260ac44c8fe71659cbe369986ac1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 4 12:23:40 2021 +0200

    Remove InnerFunctionToQuery interface
    
    No longer required. `Scalar.toQuery` is used instead.

commit cee9be63f3a879c3bd93bf584fabc7585770f865
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 29 16:59:45 2021 +0200

    Migrate array_length `InnerFunctionToQuery` to scalar
    
    Relates to https://github.com/crate/crate/issues/10025

commit a64d3117ba31321a7c4a5f36817b6b0e7bdfc768
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Sep 27 16:46:43 2021 +0200

    Add a check to monitor maximum shards per node to `sys.node_checks`
    
    This adds a check to `sys.node_checks` validating that the number of shards
    on the concrete node is less than 90 % of the value of `cluster.max_shards_per_node`.

commit 59eed66505ae38909d4086b7eb7febd833d7e33d
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri Oct 1 17:13:13 2021 +0200

    Update to Lucene 8.10.0
    
    https://lucene.apache.org/core/8_10_0/changes/Changes.html

commit 65c54258e59cfaec262e172a8419b135ac9689cc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 29 14:45:44 2021 +0200

    Migrate within lucene query migration to scalar

commit 1695884bbc1ea86810b246076354f2d239a4ee17
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 29 16:29:07 2021 +0200

    Handle exception in sendShortMsg
    
    We very rarely see the leak detection triggering on CI or locally:
    
        Recent access records:
        #1:
                io.netty.buffer.AdvancedLeakAwareByteBuf.writeInt(AdvancedLeakAwareByteBuf.java:563)
                io.crate.protocols.postgres.Messages.sendShortMsg(Messages.java:471)
                io.crate.protocols.postgres.Messages.sendCloseComplete(Messages.java:488)
                io.crate.protocols.postgres.PostgresWireProtocol.handleClose(PostgresWireProtocol.java:719)
                io.crate.protocols.postgres.PostgresWireProtocol$MessageHandler.dispatchMessage(PostgresWireProtocol.java:373)
                io.crate.protocols.postgres.PostgresWireProtocol$MessageHandler.dispatchState(PostgresWireProtocol.java:339)
                io.crate.protocols.postgres.PostgresWireProtocol$MessageHandler.channelRead0(PostgresWireProtocol.java:307)
                io.crate.protocols.postgres.PostgresWireProtocol$MessageHandler.channelRead0(PostgresWireProtocol.java:291)
    
        Created at:
                io.netty.buffer.PooledByteBufAllocator.newDirectBuffer(PooledByteBufAllocator.java:402)
                io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:188)
                io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:179)
                io.netty.buffer.AbstractByteBufAllocator.buffer(AbstractByteBufAllocator.java:116)
                io.crate.protocols.postgres.Messages.sendShortMsg(Messages.java:469)
                io.crate.protocols.postgres.Messages.sendCloseComplete(Messages.java:488)
                io.crate.protocols.postgres.PostgresWireProtocol.handleClose(PostgresWireProtocol.java:719)
    
    It is always the `sendCloseComplete` code path. The contract for
    `channel.write` is to release the buffer by itself. That not happening
    would indicate that there is a bug in netty.
    
    To gain more insights this wraps the `.write` call into a try/block with
    some logging - this will hopefully result in more information in case
    this happens again.

commit 75317df199f69e76e57b166bed582662ecc1fd3b
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Oct 4 09:03:01 2021 +0200

    Remove `translog.disable_flush` from docs
    
    The table setting `translog.disable_flush` has been removed in
    CrateDB 2.0 and should be therefore also removed from the docs.

commit 1f873906eac247f9dfbbaf6654e888e93ac1b9e5
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Sep 30 20:01:56 2021 +0200

    Reflect 4.6.4 release

commit 92fc69a0210d65193feaf78168bb812633a0069b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 29 17:32:33 2021 +0200

    Migrate subscript query building to scalar
    
    Relates to https://github.com/crate/crate/issues/10025

commit fb1445f48389bdeb11c0cc24f29edbd32e93b43f
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Wed Sep 29 09:26:54 2021 +0200

    Upgrade to Admin UI 1.20.0

commit ca966eecd65f3ec0a63232a308c669e552f3a9db
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 29 15:13:40 2021 +0200

    Improve internal dynamic batch sizing mechanism
    
    Calculating the allowed bytes per requests once up-front is not good
    enough. We need to check the circuit breaker repeatedly to reduce the
    chance of the circuit breaker tripping.
    
    This fixes a `CircuitBreakerException` which reproduced reliably using
    the following schema:
    
        CREATE TABLE "nyc_taxi" (
            "congestion_surcharge" real,
            "dolocationid" integer,
            "extra" real,
            "fare_amount" real,
            "improvement_surcharge" real,
            "mta_tax" real,
            "passenger_count" integer,
            "payment_type" integer,
            "pickup_datetime" timestamp with time zone,
            "pulocationid" integer,
            "ratecodeid" integer,
            "store_and_fwd_flag" text,
            "tip_amount" real,
            "tolls_amount" real,
            "total_amount" real,
            "trip_distance" real,
            "vendorid
            " integer
        )
        WITH (
            "column_policy" = 'dynamic',
            "number_of_replicas" = '1',
            "refresh_interval" = 10000
        );
    
    And importing the data:
    
        COPY "nyc_taxi" FROM 'https://s3.amazonaws.com/crate.sampledata/nyc.yellowcab/yc.2019.07-12.gz' WITH (compression = 'gzip');
    
    On a single node with 2GB heap.
    
    (Another workaround to get the query working would be to use the new
    `overload_protection` settings and reduce the allowed concurrency)

commit 3c3853f72b8cd3aa69eabc9e37b55406c664da3b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 28 16:26:56 2021 +0200

    Rename node_limits settings to overload_protection.dml
    
    Based on some feedback, the prior name didn't capture their
    functionality very well.

commit 5fad9467ede87bf0add14f5f6be20ef2eda9432f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 28 10:48:50 2021 +0200

    Mark FunctionToQuery/InnerFunctionToQuery as deprecated

commit a93902578ffd2d2fd28122099f638a7e42090083
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 27 17:03:48 2021 +0200

    Implement parent/inner toQuery in distance query
    
    This enables scalar functions to implement the `InnerFunctionToQuery`
    functionality and does so for the distance function.

commit e67ef336cabe5464f67f88c1e6b81135e2d2a25e
Author: baur <baurzhansahariev@gmail.com>
Date:   Tue Sep 28 10:52:38 2021 +0200

    Use correct authMethod name in log message

commit 961a705fc64ead1167c3bf58854eebac7a5ddeb8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 28 11:37:27 2021 +0200

    Expose new node limit settings for use with SET GLOBAL
    
    Follow up to https://github.com/crate/crate/pull/11759

commit ed7bbdcab7ca57941641bc76869f1bb6ddac7242
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 22 15:24:25 2021 +0200

    Implement toQuery in LikeOperator

commit f05699608adeb60b98577ce309b049151b82618b
Author: baur <baurzhansahariev@gmail.com>
Date:   Tue Sep 21 12:49:42 2021 +0200

    Make reference to a column non-fetchable if there is a used alias to the same column in Collect

commit e49303598a313b3ffc11230e87b6d29252ef41fe
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 27 17:09:40 2021 +0200

    Reduce node_limits.initial_concurrency from 50 to 5
    
    See changes for reason.

commit f12c3b3cd619157a27659d8569c8efa2fcf751d8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 27 12:03:42 2021 +0200

    Expose concurrency limit control settings
    
    Enables users to tweak the settings to either have more aggressive or
    less aggressive COPY/INSERT-FROM-QUERY operations.

commit 7ea21ff42c40fd94b258cc3e34d4308b1255693c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 27 10:10:52 2021 +0200

    Ensure there is only 1 NodeLimits instance per node

commit 46e8b7777953fa31edd81c175b151b4faae87a98
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Sep 21 08:07:34 2021 +0200

    Enable aggregation to be used in an order-by clause
    
    This adds support to enable aggregation to be used in an order-by clause
    without having them in the select list like
    ``select x from tbl group by x order by count(y)``

commit b8f82661c53f32a65e9f0f3ce82ab5f9a0773ad3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 21 16:47:43 2021 +0200

    Optimize routing based on clustered by columns in where clause
    
    I thought this were already the case as most of the code is laid out to
    optimize `WHERE clusteredByCol = ?` to narrow the routing, but the
    `Collect` operator didn't call the right logic to actually analyze the
    `WhereClause` for clustered by columns.
    
    This adds the logic by re-utilizing the (former) `RewriteCollectToGet`
    rule to avoid processing the where clause multiple times.

commit 4e8ebc288cdccf5d6468316524d2715bb4a78089
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 22 16:32:36 2021 +0200

    Don't optimize away casts for LIKE on non-string columns
    
    The `LIKE` operator is only registered for `(string, string)`
    signatures. We must keep casts for operations like `x = '10'` where `x`
    is a numeric column to ensure the type system checks out.
    
    Scalars need to be able to assume that they are only called with values
    matching their type signature.

commit 3f4e749865acb4e00b25c38a3310b2c97e3cdb80
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 22 16:54:04 2021 +0200

    Update bundled JDK to 17+35

commit 6c700fed76cf0e13d3b3fbfd8c28bbe5dee8137c
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Sun Sep 19 17:03:03 2021 -0400

    fix misbehaving union-all stmt on object types with the same named but differently typed subcolumns
    
    improve DataTypes.isSameType to include compatibility checks for objectType's inner types

commit ac2b7f8c8fcc2b1985b7618fba58bce3399dca63
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 25 12:17:19 2021 +0200

    Replace like pattern match flags / ignoreCase with enum
    
    This is partly related to https://github.com/crate/crate/pull/11669
    (Preparing the LikeOperator to implement the query extension)
    
    Partly because I found the flags a bit confusing. The ones defined in
    `CrateRegexCapabilities` were just redirects and different from the ones
    defined in `LikeOperators` but had the same name.

commit 0e3f1fc87debf9ed996d206e9e204f85c53fcc9c
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Wed Aug 4 17:53:20 2021 -0400

    add a session setting, error_on_unknown_object_key to suppress exceptions when querying unknown keys to dynamic objects

commit baebf6e6f876e224b3c08acc5a13c670a3e273ca
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Sep 15 15:58:47 2021 +0200

    bp: Deprecate delaying state recovery for master nodes (#53646)
    
    https://github.com/elastic/elasticsearch/commit/e7ae9ae596e

commit 9ffb502f26d9b225825b7ce8e0fa423fd3bbca96
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Sep 15 15:37:09 2021 +0200

    Add missing documentation for some gateway cluster setting
    
    - gateway.expected_data_nodes
    - gateway.recover_after_data_nodes

commit e3d07f1343004b3564bab18718b965a7bebf9bee
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 21 11:50:01 2021 +0200

    Fix ClassCastException on `byte_col = 123` queries
    
    Fixes a regression in master introduced with https://github.com/crate/crate/pull/11669
    Discovered via the rnd-query tests of https://github.com/crate/crate-benchmarks

commit fbacc9dd3139979e06a3b8aa02bd885b5653ba8e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 20 17:33:29 2021 +0200

    Fix NPE in NodeStatsContextFieldResolverTest
    
    This ensures `roleNameToPossibleRoles` is initialized in unit tests
    without having to call `setPossibleRoles` manually.
    
    In production code the `Node` constructor always calls
    `setPossibleRoles`.
    
    `NodeStatsContextFieldResolverTest` failed when running individually,
    but not if another test case already initialized `Node`.

commit 064d66cbd2a853b7791c9b01819f4bf806598465
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Tue Sep 14 19:46:27 2021 -0400

    handle NPE thrown due to null-valued schema metadata

commit 48df83e622f72414f69640479cf416e247e3de0b
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Fri Sep 17 10:56:35 2021 -0400

    allow session settings to be preserved across requests

commit 80ade951540ec220262308869e0fb4ea74427418
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 20 11:10:26 2021 +0200

    Document idle mechanism for refresh_interval
    
    Closes https://github.com/crate/crate/issues/11482

commit 38bad697181997933a08d8e7e16e2f90182c966d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 15 16:03:43 2021 +0200

    Fix alter table so it can add fulltext columns
    
    `Map<String, Object> mapping =
    AnalyzedTableElements.finalizeAndValidate` was called before
    `AnalyzedTableElements.validateAndBuildSettings`
    
    `validateAndBuildSettings` sets the analyzer information which is used
    in the mapping.
    
    (We ought to clean up this whole code at some point, the way the CREATE
    TABLE / ALTER TABLE analyzers work is less than ideal)
    
    Fixes https://github.com/crate/crate/issues/11733

commit 249f4c119a69bb5c0b609ce23520b35c7cad8d0c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 14 14:07:24 2021 +0200

    Update netty to 4.1.68
    
    https://netty.io/news/2021/09/09/4-1-68-Final.html

commit c3a01ea41fc27109f75acf9241437271e5b57b6d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 13 15:18:40 2021 +0200

    Support fetch on joins with only one side propagation
    
    This should fix a performance regression introduced in 4.2

commit 68bd5fe6cf929d9dec713a697cce04558ace62ac
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 14 16:44:59 2021 +0200

    Allow inserts to provide values of generated partitioned columns
    
        INSERT INTO tbl (ts, g_ts_month) values (?, ?)
    
    Could fail with a message that the provided value `null` doesn't match
    the computed value if using a schema like this:
    
        CREATE TABLE tbl (
          ts timestamp with time zone,
          g_ts_month as date_trunc('month', ts)
        ) PARTITIONED BY (g_ts_month)
    
    The reason was that we first removed the partition value from the source
    and only afterwards triggered the validation.

commit 4adc72741bad6c5fc1d297d5fa43d69b81fefb14
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 15 10:38:43 2021 +0200

    Update forbiddenapis to 3.2
    
    for Java 16/17 support:
    
    https://github.com/policeman-tools/forbidden-apis/wiki/Changes#version-32-released-2021-09-15

commit ec0c0e642789d3e991b6a25823d19bb5b97a299c
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Sep 14 17:04:13 2021 +0200

    bp: Introduce mechanism to stub request handling (#55832)
    
    https://github.com/elastic/elasticsearch/commit/80662f31a1c

commit 14db84a395391395979f35baa8fbbe1d8ca28024
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Sep 14 17:04:27 2021 +0200

    bp: Do not log no-op reconnections at DEBUG (#53469)
    
    https://github.com/elastic/elasticsearch/commit/bd580527b22

commit 8b33b1c2ca1686034f660876b8f367a1db5a9f24
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Sep 13 17:36:30 2021 +0200

    bp: Implement transport circuit breaking in aggregator (#54927)
    
    https://github.com/elastic/elasticsearch/commit/619028c33e0

commit 351c0c4d379445852aad54d48165cf1eea79980e
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Sep 13 17:07:42 2021 +0200

    bp: Use TransportChannel in TransportHandshaker (#54921)
    
    https://github.com/elastic/elasticsearch/commit/c7053ef824f

commit 9b595f283406a7ef39f837c358a73cc497e89765
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Sep 13 16:57:39 2021 +0200

    bp: Always compress based on the settings (#36522)
    
    https://github.com/elastic/elasticsearch/commit/7f612d5dd86

commit 3d6b430f42d3d678a7049ae5153f1ad256821bb8
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Sep 13 16:31:01 2021 +0200

    Respect and follow compressResponse flag in TcpTransportChannel
    
    Transport responses will be compressed if requested, which
    was missed unfortunately while backporting parts of
    https://github.com/elastic/elasticsearch/commit/93c2c604e57.

commit d21d288d20f6c73c994ee6a833c44bb385e6e3c3
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Sep 13 16:04:26 2021 +0200

    bp: Move network stats marking into InboundPipeline (#54908)
    
    https://github.com/elastic/elasticsearch/commit/9cf2406cf14

commit 3edf1b4f2f2d2a324f59adb82f15669e6fc942de
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 10 13:54:56 2021 +0200

    bp: Fix issue with pipeline releasing bytes early (#54474)
    
    https://github.com/elastic/elasticsearch/commit/915435bbe48

commit 8fbec5d8d386e5804080356020cb573cadbac678
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 10 13:37:10 2021 +0200

    bp: Move transport decoding and aggregation to server (#54360)
    
    https://github.com/elastic/elasticsearch/commit/2ccddbfa88e

commit ea446f2b5b6967e0677417a05a3dbd1b6f060ad9
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Sep 8 11:47:54 2021 +0200

    bp: TcpTransport use compress value from ConnectionProfile
    
    Apply missing bits from https://github.com/elastic/elasticsearch/commit/93c2c604e57,
    the `compress` setting can be resolved from the ConnectionProfile.

commit 2f3669704efb5baf399d59d9f50589dfec3d41d8
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Sep 7 17:13:42 2021 +0200

    bp: Add host address to BindTransportException message (#51269)
    
    https://github.com/elastic/elasticsearch/commit/8d3e73b3a03

commit 6bcfbee600a05d299f9bc0b805367387e0d23b11
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Sep 7 16:58:28 2021 +0200

    bp: Mark already applied commit 72ae0ca73fe

commit 635f111266a000ba1d0b3f0bb7d8db92d49f4a40
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Sep 7 17:14:47 2021 +0200

    bp: Fix Overly Optimistic Request Deduplication (#51270) (#51291)
    
    https://github.com/elastic/elasticsearch/commit/7b4c2bfdc4b

commit a7d80dfe9519abf21399416aab1ac9a5a6e21360
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Sep 13 14:57:40 2021 +0200

    bp: Chunk + Throttle Netty Writes (#39286)
    
    https://github.com/elastic/elasticsearch/commit/0cdadf5af03
    
    Missing Netty4 only related backport which is not included
    in our generated commit list.

commit b69a4bda1dd84f5d5ae346750a73acea4df09300
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Sep 7 16:42:13 2021 +0200

    Update ES backport commit list, mark come unrelated commits as skipped

commit e81c7130142f7da70c82c05e4e6a4f4eaeb24e65
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Fri Apr 9 16:09:02 2021 +0200

    Automatically generate dependency license report
    
    This adds the "Gradle License Report" plugin in order to generate
    the "3RD-PARTY-NOTICES.md" file in the root directory.

commit 87a831dde05c10ae00743ae663d4915e04070a61
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 8 15:35:40 2021 +0200

    Sync release notes to reflect 4.6.3

commit 123995c09667d36be4deae759a2aa0b13366228d
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Sep 8 09:55:10 2021 +0200

    Docs: Use 24h format in `date_bin` example to avoid confusion
    
    The current example uses 12h format, thus the formatted timestamp
    for the more recent value looks like an older value and may
    confuse (at least me ;-)

commit 5436deb16411a7b00a15b55960d97b35a0a46b92
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 7 17:09:48 2021 +0200

    Add limit pushdown rules to fix perf regression
    
    With https://github.com/crate/crate/pull/9669 and
    https://github.com/crate/crate/pull/9765 we switched to a rule based
    fetch optimization. This change unfortunately caused a performance
    regression for cases where a subquery uses an ORDER BY and a parent
    query uses a LIMIT. Due to the distance between the LIMIT and ORDER BY
    operators caused by RENAME/EVAL, the LIMIT operation got applied late,
    resulting in an unlimited ORDER BY.

commit 83db94a5bacfe08049cfb32b5d386272fe398f44
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 8 11:09:29 2021 +0200

    Update gradle to 7.2
    
    - https://docs.gradle.org/7.1/release-notes.html
    - https://docs.gradle.org/7.2/release-notes.html

commit 5f184917504346aea9416c81634b3358b3f6a549
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 7 10:31:59 2021 +0200

    Add an empty pg_catalog.pg_indexes table
    
    Closes https://github.com/crate/crate/issues/11697
    
    Given that there are no `CREATE INDEX` statements in CrateDB the table
    is empty.

commit 2476b1dd1ffd6084f5e77fc2ea2c5d558c323ee9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 7 15:33:10 2021 +0200

    Assign highest precedence to target type in INSERT FROM VALUES statements
    
    Closes https://github.com/crate/crate/issues/11519

commit 62da985be2f019f19f323eba665d76d74c1cb452
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 7 11:48:32 2021 +0200

    Fix unreleased changelog
    
    - We don't need to add a fixes entry for unreleased features (IGNORE
      NULLS)
    
    - Administration console fixes should also get mentioned
    
    - All release notes up to now used empty lines between the bullet
      points

commit 0fcf891f91f276f5e9d9841a3e0f7789facbc30b
Author: baur <baurzhansahariev@gmail.com>
Date:   Thu Jul 29 10:09:40 2021 +0200

    Use KahanSummation for AverageAggregation

commit 3264a6abaab150e424869cb2d62d8358f06508cf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 7 11:29:17 2021 +0200

    Add table_partitions column to sys.snapshots
    
    `table_partitions` is an object array where the object has:
    
        table_schema :: text
        table_name :: text
        values :: text[]
    
    The partition column names are not provided because the information is
    not available without loading the snapshots.
    
    The values are represented as string because we don't have heterogeneous
    arrays.
    
    Closes https://github.com/crate/crate/issues/11700

commit 35aa4a2ca200324fdc4a43eeca222af5cf347f2d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 6 14:28:24 2021 +0200

    Fix null cluster state handling in master node action
    
    Fixes https://github.com/crate/crate/issues/11699
    
    Opposed to what's stated in the issue description, this was already an
    issue in 4.5.x and possibly before as well.
    
    The `MainAndStaticFileHandler` requests some information via the
    `ClusterStateAction` - this action failed with an NPE if called too
    early while the node is still starting.

commit 3042024d7d3e01e1d159b7beb43067e66af17c4b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 6 16:30:59 2021 +0200

    Ensure object types are streaming compatible in Union
    
    Fixes https://github.com/crate/crate/issues/11692

commit ac3db0d56a583b1575ea8edc2a8a89a250f04df6
Author: baur <baurzhansahariev@gmail.com>
Date:   Mon Aug 30 17:31:49 2021 +0600

    Add support of numeric type for avg aggregation

commit b74de9e801a3de1896392b10618b1205a340cc84
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Wed Sep 1 17:54:23 2021 +0200

    Integrate Admin UI version 1.19.1

commit d5ce483d82bc5638b082e688c0dda02d41a65c35
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Tue Aug 24 12:00:03 2021 -0400

    expose WindowFrameState.partitionEnd for window functions
    
    with ignore-nulls option introduced, sequential accesses to
    window frames are required to search for non-null elements.

commit b2b475140f511d2ff7c189b37d9665064998c309
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Aug 27 14:05:37 2021 +0200

    Fix type<->signature conversion to handle sub-columns with spaces
    
    Fix the data type signature parsing and creation logic to correctly
    handle white spaces inside object/row inner column names.
    
    Revert https://github.com/crate/crate/commit/dafdc8d3559
    which added validation to prevent white spaces in such cases.
    We always allowed it and broke it by mistake with the type signature
    registry/logic introduced in CrateDB 4.2.0 (commits 507cf5d7320 and 0d5adc08af6).

commit c35b7e35f43a2d15b1a8226da71e631eba6fc119
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Mon Aug 30 15:57:41 2021 +0200

    Add "triage" labels to issue templates for bug- and performance-reports

commit d869152172f26c431e6c0f2bbab0c7131e7dc95b
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Tue Jul 13 19:44:40 2021 +0200

    Improve `README.rst`
    
    - Expand and improve intro description and list of features.
    - Add links to key phrases to improve cross-referencing to important
      resources and documentation.
    - Minor formatting improvements and copyediting.
    
    - Add `_venv` to `.gitignore` for compatibility with older (manual)
      ways of building the docs.

commit 11ea9c7ef8cdc3c6dcd211fa93bc54d30f9334b9
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Tue Aug 3 15:31:02 2021 +0200

    Further improve and fix data types documentation overhaul

commit 3374631228ddbaa4308bdb3c7b320f5dd003ce8c
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Thu May 27 19:25:21 2021 +0200

    Improve data types documentation
    
    - Reworks the data types docs and some adjacent PostgreSQL compat info.
    - Improves the HTTP interface documentation.

commit ca3e1550942eb3e0dea2b8d83431381fc9f1765c
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Aug 27 14:17:36 2021 +0200

    Reflect 4.6.2 release

commit 86fe07d8fc71a9db7891f33b56071e6f836dd15d
Author: baur <baurzhansahariev@gmail.com>
Date:   Thu Aug 26 14:26:29 2021 +0200

    Fix issue with cast to parametrized numeric in arithmetical expression.

commit dafdc8d35592b29c36009983a1b3a5a7a187b5c1
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Aug 26 12:56:54 2021 +0200

    Raise invalid-column error if sub-column is defined containing spaces
    
    A sub-column must not contain whitespaces as this results in a unusable
    broken table.
    
    Fixes #11678.

commit 13f3ae7ae37c554fc43bb4eac4521a585449a83b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 25 16:56:13 2021 +0200

    Prevent repository data retrieval failures on sys.snapshots to bubble up
    
    Fixes part of https://github.com/crate/crate/issues/11673

commit 760509bb75f49d12a20db1d11c125eb8ecd4d20c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 25 12:40:49 2021 +0200

    Avoid String → BytesRef → String roundtrip in LIKE ANY query building
    
    `toIterable` implicitly converts String instances to BytesRef, that's
    okay for `Eq` because there the Term requires a BytesRef instance, but
    for Like we need to do some pre-processing on the pattern and require a
    String.

commit 81d92fa4a0003e03ec23086b9ffd01723db48432
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 24 14:52:37 2021 +0200

    Make lucene query generation part of Scalar interface
    
    Relates to https://github.com/crate/crate/issues/10025
    
    Currently we use `termQuery`, `termsQuery`, `rangeQuery` and
    `existsQuery` of `MappedFieldType` within the `LuceneQueryBuilder`.
    
    This was done to re-use existing code, but the overall pattern somehow
    doesn't fit with the rest of the design.
    
    We have `Function` and the corresponding `FunctionImplementation` as
    main entry points and they can be type specific (have
    different overloads for different types). The Lucene Query generation is
    an optimization step, that relates to these implementations (*and* their
    type signatures)
    
    This commit adds a `toQuery` method to the `Scalar` class to allow any
    scalar implementation to optionally generate a Lucene query.
    
    This also allows extensions outside of `server` to implement Lucene
    query logic, no longer limiting optimizations to built-in operations.

commit 94a6ee74089669bcc5651616fd0e70cd06e8b665
Author: Eduard Cimbru <ed.thyme@gmail.com>
Date:   Mon Aug 23 14:43:05 2021 +0300

    Implements the area(geoShape) function on columns of GEO_SHAPE type
    
    The calculation uses geospatial awareness instead of Euclidean geometry.

commit 0abbe85736ba5c0ef7f16d2505fb44aa832a8307
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Aug 25 09:51:12 2021 +0200

    Fix restoring of concrete custom metadata only
    
    Fixes a regression introduced by
    https://github.com/crate/crate/commit/25b6d5e01aef108fe840d3f09f9584ea83c14a4a
    
    Fixes #11671

commit c95a2c9469aafdd34cd99dd5535f6106ebe85063
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 23 17:04:39 2021 +0200

    Optimize enum streaming
    
    Calling `<Enum>.values()` when a value is streamed has an overhead
    because it allocates a new array each time.
    
    See https://github.com/crate/crate/commit/98f4998fa4b9e9397facda73286c5a97f481e191

commit 75f56b64c88b28a7a190289c6179957a69b8c0e8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 23 14:31:11 2021 +0200

    Remove enabled flag from SourceFieldMapper
    
    The option was never exposed by CrateDB
    
    We may choose to disable the source eventually, but if so it likely
    won't be on the basis of the existing FieldMapper structure.
    
    Relates to
    
    - https://github.com/crate/crate/issues/10025
    - https://github.com/crate/crate/issues/10370

commit 6fe8f2fea968e2e17bfae6966f08707c36315b09
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 23 16:54:41 2021 +0200

    Rename IndexType values to clarify semantics
    
    The difference between `NO` and `NOT_ANALYZED` wasn't immediately
    obvious.

commit af5bb5acd98aabaadbeee87f508e52d7060f6015
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 17 10:09:09 2021 +0200

    Update netty to 4.1.67
    
    https://netty.io/news/2021/08/16/4-1-67-Final.html

commit 45b5c0271395d577526adb003be02b165c55ec0d
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Aug 12 14:16:34 2021 +0200

    Adapt backport file

commit 5733b95a4de92caeeed3d59e41b4b062fee051b9
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Aug 12 14:55:04 2021 +0200

    bp: Remove Unused Single Delete in BlobStoreRepository
    
    https://github.com/elastic/elasticsearch/commit/1e4d775bfc40a2e1d857cd45498f998e11f8f588

commit c2dcc2af5c4160e8103547c7263009e50864dd57
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Aug 10 14:58:07 2021 +0200

    bp: Improve Snapshot Finalization Ex. Handling
    
    https://github.com/elastic/elasticsearch/commit/ee4a8a08dd5bc8e5642e3e8946935b73dca4e719

commit 713187857fb50204d52e034c0c0078156f993cfb
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Aug 10 14:48:01 2021 +0200

    bp: Cleanup Old index-N Blobs in Repository Cleanup
    
    https://github.com/elastic/elasticsearch/commit/62e128f02d49819f83ce201663c7b8be7a8ea69f

commit 2c1cfab950dabf57b465d3ac657b75acd2b285c1
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Aug 5 11:31:39 2021 +0200

    bp: Track Snapshot Version in RepositoryData
    
    https://github.com/elastic/elasticsearch/commit/16c07472e5d5039fd2f58e019df2dc714d534e56

commit 9d8f6c0ff1a4c4a4721ca17961b9783b6cc05e11
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Aug 5 11:25:55 2021 +0200

    bp: Fix Index Deletion during Snapshot Finalization
    
    https://github.com/elastic/elasticsearch/commit/aecbb2f78e6b7ca31f80c259704054670cd46e3b

commit cce1c52a793e1db9dd997b4f2f1dcdef39d8dae4
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Aug 5 11:19:32 2021 +0200

    bp: Fix Index Deletion During Partial Snapshot Create
    
    https://github.com/elastic/elasticsearch/commit/4f24739fbefcb996ff612931b80c04d7807ae046

commit 5cefdac24e0be0e994010f98f51b0027ddb937d0
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Aug 9 16:49:11 2021 +0200

    bp: Remove Delete Method from BlobStore
    
    https://github.com/elastic/elasticsearch/commit/70eb812f83b9244312a1098b21d88a4bd513b1de

commit 5c74e4b11b087d58196c9b73ec74ff0ea3eaae3c
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Aug 17 09:02:14 2021 +0200

    bp: Fix testDelayVariabilityAppliesToFutureTasks
    
    https://github.com/elastic/elasticsearch/commit/0ae2e2326bffc580f16298818b0ec5953f1a8e83

commit c9aea565d0bb6b873e9b2890ed6ac3664cd1da06
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Sun Jun 20 09:26:20 2021 +0200

    Update Lucene to 8.9.0
    
    https://lucene.apache.org/core/8_9_0/changes/Changes.html
    
    This update was previously reverted due to a performance regression.
    (https://github.com/crate/crate/pull/11526)
    
    We changed DocValuesFormat on fields to `BEST_SPEED` to prevent the
    performance regression (at the cost of increased disk space
    requirements).
    (https://github.com/crate/crate/pull/11658)
    
    Benchmarks which previously showed a ~80% slow-down are now looking
    good:
    
         Results (server side duration in ms)
        V1: 4.7.0-4d1a9894c2ad8b058f47b27db02f044ef63236a1
        V2: 4.7.0-a9118156c6780243514e4089b9f238580f347bba
    
        Q: select hyperloglog_distinct("cCode") from uservisits
        C: 1
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |      419.403 ±  166.596 |    372.875 |    389.166 |    396.250 |   1554.924 |
        |   V2    |      426.001 ±  126.988 |    386.096 |    401.648 |    410.437 |   1291.026 |
        ├---------┴-------------------------┴------------┴------------┴------------┴------------┘
        |               +   1.56%                           +   3.16%
        There is a 17.58% probability that the observed difference is not random, and the best estimate of that difference is 1.56%
        The test has no statistical significance
    
        System/JVM Metrics (durations in ms, byte-values in MB)
            |    YOUNG GC            |       OLD GC           |      HEAP         |     ALLOC
            |  cnt      avg      max |  cnt      avg      max |  initial     used |     rate      total
         V1 |    3     7.36    11.41 |    0     0.00     0.00 |     4295       70 |     0.00          0
         V2 |    1     4.85     4.85 |    0     0.00     0.00 |     4295      765 |     0.00          0

commit a508620b9dccd34d0e5549ea53065b4b16547df8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 16 14:10:11 2021 +0200

    Change field DocValuesFormat to BEST_SPEED
    
    This will increase disk usage by ~3-4% (based on a rough test) but is
    required to upgrade to Lucene 8.9 without major performance regressions.
    See https://github.com/crate/crate/pull/11526 for more information.
    
        uservisits, 3_856_836 records
    
        Best compression:
    
            Segment Info:           58.34 KB
            Fields:                 21.01 KB
            Field Index:            23.19 KB
            Field Data:            750.63 MB
            Term Dictionary:       252.42 MB
            Term Index:              2.35 MB
            Frequencies:            76.11 MB
            Positions:              14.13 MB
            Payloads:                0.00 Bytes
            Norms:                   5.58 MB
                                     1.63 KB
            Per-Document Values:   272.56 MB
                                    25.97 KB
    
        Best speed:
    
            Segment Info:           58.50 KB
            Fields:                 24.51 KB
            Field Index:            24.31 KB
            Field Data:            775.02 MB
            Term Dictionary:       262.31 MB
            Term Index:              2.46 MB
            Frequencies:            78.68 MB
            Positions:              14.84 MB
            Payloads:                0.00 Bytes
            Norms:                   5.77 MB
                                     1.90 KB
            Per-Document Values:   282.98 MB
                                    30.30 KB

commit 4d1a9894c2ad8b058f47b27db02f044ef63236a1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 11 16:02:49 2021 +0200

    Add a config for codespell
    
    Codespell (https://github.com/codespell-project/codespell) can be useful
    to spot typo's in comments, but in the CrateDB code base it is noisy
    without configuration because it thinks `crate` is a typo for `create`.

commit 35d6614a396f68dbfd77500548e01151ffe9599c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 10 15:06:48 2021 +0200

    Remove implementation(testFixtures dependencies from benchmarks
    
    Both intellij and eclipse struggle with this dependency declaration.
    
    It may be possible to get it working using some idea.module.COMPILE
    definition or something like that, but I concluded that trying to get
    intellij/eclipse and gradle to agree how the dependency graph is
    supposed to look like and have all 3 be able to compile a project with a
    implementation/testFixture dependency is too much effort and detrimental
    to long term mental health.
    
    To remove the dependency this has to duplicate a little bit of code. Not
    nice, but at least it works.
    
    This also changes the PreExecutionBenchmark to spin up a full blown
    node. This allows to replace the SQLExecutor logic (no longer
    available), while keeping most benchmark cases.

commit d65a3285daa9819988ebe857647205585bb2547b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 10 14:42:02 2021 +0200

    Remove NodeOperationCtxBenchmark

commit 85f485c98a48e87e1e3a70bb63e43fa74ca8b53c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 10 14:05:13 2021 +0200

    Exclude randomizedtesting from benchmark dependencies
    
    Fixes the following error when running the PreExecution benchmarks:
    
        java.lang.IllegalStateException: running tests but failed to invoke RandomizedContext#getRandom
            at org.elasticsearch.common.Randomness.get(Randomness.java:109)
            at org.elasticsearch.cluster.routing.IndexShardRoutingTable.<init>(IndexShardRoutingTable.java:80)

commit 10965ff8f152558778a21fcc52855ca31bfba584
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 10 10:33:42 2021 +0200

    Update jmh to 1.33

commit 1d2d4b01f5d57e2f4dfcbb76026ef5cf9d27a118
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 10 10:28:11 2021 +0200

    Remove gradle shadow plugin and run benchmarks via application task
    
    If running `./gradlew :benchmarks:jmhJar`, the `:benchmarks:compileJava` task failed:
    
        Task :benchmarks:compileJava FAILED
        /dev/crate/crate/benchmarks/src/main/java/io/crate/data/join/RowsBatchIteratorBenchmark.java:41: error: cannot find symbol
        import io.crate.module.ExtraFunctionsModule;
                              ^
          symbol:   class ExtraFunctionsModule
          location: package io.crate.module
        /dev/crate/crate/benchmarks/src/main/java/io/crate/data/join/RowsBatchIteratorBenchmark.java:65: error: package io.crate.window does not exist
        import static io.crate.window.NthValueFunctions.LAST_VALUE_NAME;
                                     ^
        /dev/crate/crate/benchmarks/src/main/java/io/crate/data/join/RowsBatchIteratorBenchmark.java:65: error: static import only from classes and interfaces
        import static io.crate.window.NthValueFunctions.LAST_VALUE_NAME;
        ^
        /dev/crate/crate/benchmarks/src/main/java/io/crate/operation/aggregation/HyperLogLogDistinctAggregationBenchmark.java:30: error: cannot find symbol
        import io.crate.execution.engine.aggregation.impl.HyperLogLogPlusPlus;
                                                         ^
          symbol:   class HyperLogLogPlusPlus
          location: package io.crate.execution.engine.aggregation.impl
        /dev/crate/crate/benchmarks/src/main/java/io/crate/operation/aggregation/HyperLogLogDistinctAggregationBenchmark.java:38: error: cannot find symbol
        import io.crate.module.ExtraFunctionsModule;
                              ^
          symbol:   class ExtraFunctionsModule
          location: package io.crate.module
        /dev/crate/crate/benchmarks/src/main/java/io/crate/operation/aggregation/HyperLogLogDistinctAggregationBenchmark.java:72: error: cannot find symbol
            private HyperLogLogPlusPlus hyperLogLogPlusPlus;
                    ^
          symbol:   class HyperLogLogPlusPlus
          location: class HyperLogLogDistinctAggregationBenchmark
        6 errors
    
    Running `./gradlew :benchmarks:compileJava` worked.
    
    After various unsuccessful attempts to get the JAR build working, this
    drops it and instead documents how to use the `application` plugin `run`
    task - which works fine.

commit d534291f1f02bfe3cc15e072e0a71fae8a2812e6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 10 10:19:23 2021 +0200

    Move benchmark sources from test to main

commit f39275db3c1bc3aa82b5789e10cb4427ff046bf9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 9 10:43:04 2021 +0200

    Do not require privileges on SYS schema for show transaction_isolation
    
    Fixes https://github.com/crate/crate/issues/11638

commit d872104f5b124a54c2725044c45696ea7196446d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 3 18:27:17 2021 +0200

    Remove TaskManager
    
    The TaskManager/Task system has some conceptual overlap with the
    TasksService and wasn't utilized by CrateDB. It also added some minor
    overhead for the task registration.
    
    If it turns out that some of the functionality would have been useful,
    we should come up with a design that plays well with the TasksService.

commit 93fa12be9d04a17d7d72ba5154e91be1ad80608c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 3 17:23:30 2021 +0200

    Remove unused banedParents from TaskManager

commit 0299533b48b89f00cb0778ab790506712bbe1c0b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 3 17:20:37 2021 +0200

    Remove unused CancellableTask
    
    There isn't a single implementation of CancellableTask, so all the
    related logic is unused.

commit 798007c415ee988772d9cdcd944ca490862b75bb
Author: Johannes Faigle <johannes.faigle@crate.io>
Date:   Wed Aug 4 15:26:52 2021 +0200

    Add float4 and float8 aliases for real/double

commit 1340e375991eee24536a1dfe682cba058f32ba0a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 26 15:21:07 2021 +0200

    Support casting text to json[]
    
    Follow up to https://github.com/crate/crate/pull/11592

commit 87da1c0674374080cd69afbacf21d1521aa3408e
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Tue Jul 6 19:41:07 2021 -0400

    implement optional ignore-nulls flag for window functions

commit 5a0cc4c6a698bbec863811dfbc584084e18546ef
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Tue Aug 3 14:24:20 2021 +0200

    Documentation: More adjustments to "scalar-functions.rst"

commit 67584ed52cb55bdbf557ebfbb677a07236798d43
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Thu Jul 15 18:45:46 2021 +0200

    RST and formatting overhaul for scalar functions docs
    
    While working on the data types docs
    (https://github.com/crate/crate/pull/11558) I had to edit `scalar.rst` to fix
    RST labels. While I was in the file, I decided to make a broad range of
    additional improvements.
    
    Specifically:
    
    - Reformatting hard wraps to fit 79 characters.
    
    - All headings now have labels and label nomenclature is consistent across
      headings. Switched from "-" to "_" when the label is being used for a
      literal "_" (this makes double-click selection easier because "-" is
      considered a word boundary).
    
    - Fixed RST indentations to use a consistent four spaces for examples and
      admonitions.
    
    - Fixed case of some RST directives.
    
    - Some of the SQL queries were hard to read in their existing format. To
      address this, I reformatted them to make use of newlines and indentation.
    
    - Reordered link list at the end of the file to use alphanumeric
      case-insensitive sort.

commit 26fd0cd540c42fa4399103eaab115ddd623d648b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 2 15:08:12 2021 +0200

    Apply symbol optimizer in the count operator
    
    Fixes https://github.com/crate/crate/issues/11603
    
    Depends-On: https://github.com/crate/crate/pull/11626

commit 310b5e60e36e26b810e373151002c18fe6572c0a
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Jul 28 19:11:08 2021 +0200

    Add SnapshotShardsServiceIT back to test suite
    
    Based on the state of:
    https://github.com/elastic/elasticsearch/commit/8402ad95f2be603b7d939085723243750356f951

commit 8121e4d1d0fb22ac913619f5319f47cc9cd8e6d5
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Jul 26 20:37:45 2021 +0200

    Add MinThreadsSnapshotRestoreIT back to test suite
    
    Based on the state of:
    https://github.com/elastic/elasticsearch/commit/8402ad95f2be603b7d939085723243750356f951

commit 2ac11a2330924fe54313240f5d8cb4e9439e0ef0
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Aug 2 15:51:39 2021 +0200

    Catch Exception instead of IOException in BlobStoreRepository#verify

commit 06a8191b16d4aeae84cf8e64b677668986a1620d
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Aug 14 22:25:23 2019 +0200

    bp: Make BlobStoreRepository Validation Read master.dat
    
    https://github.com/elastic/elasticsearch/commit/722ab70cc96056c5e8966b22bfcfec055273c21f

commit 4002224b2f1c38aef29ad0f00df9d8b6663b815a
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Jul 26 17:55:35 2021 +0200

    bp: Remove blobExists Method from BlobContainer
    
    https://github.com/elastic/elasticsearch/commit/4b8fd4e76f1e344d8994486f28c96d950303cf1a

commit c1597bb6f8a6446bd4ceaf10f06dac586a350a32
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 2 11:39:10 2021 +0200

    Move test setup in SelectPlannerTest to each test case
    
    Although this increases the boilerplate per test it avoids setting up
    dozens of unused tables per test case and it makes it easier to define a
    narrow table definition for a concrete test case.

commit e42308cce3cbf70743d0f7f3feb2c738a9c31bb2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 2 10:08:12 2021 +0200

    Update JDK to 16.0.2+7

commit 8419b2a17b6c8a18ad63d1824089eeb9332a4911
Author: baur <baurzhansahariev@gmail.com>
Date:   Thu Jul 29 10:20:48 2021 +0200

    comments

commit fd16e01d129c63dfbe105d5768a8ca329fbacdd9
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed Jul 28 11:55:45 2021 +0200

    Fix NPE on SELECT query with filter on dynamic field of ignored object followed by DELETE query

commit 6d0055d0aea7bb648d192ac77926d790fedb753d
Author: Niklas Schmidtmer <niklas@crate.io>
Date:   Thu Jul 29 11:59:58 2021 +0200

    Add VIEW to ON clause for GRANT/REVOKE

commit a7eab7cff64486f93d6f01dd0eff5c29942027a7
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Wed Jul 28 18:22:47 2021 +0200

    Documentation: Satisfy link checker
    
    Apparently, some links/anchors have diverged, making the link checker
    croak. This patch accounts for that and updates the documentation to use
    the new link references.

commit d3660817099b497a8944dd61679fdaf4b48d88ab
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Jul 16 11:23:06 2021 +0200

    Implement date_bin scalar function

commit 9ce1d590082212a1ea670d87a1890e9abc1e48d4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 26 12:15:59 2021 +0200

    Add an issue template for performance issues

commit a43b75e0e28462684d2837397b8b2e5ac8577df0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 26 11:51:56 2021 +0200

    Update the bug issue template to use the new form feature

commit c24538d958f32e34a2ff6d09aa7cae884500213c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 26 16:36:59 2021 +0200

    Fix disk threshold setting monkey patching in blackbox setup
    
    The entry in the `crate.yml` is
    
        #cluster.routing.allocation.disk.threshold_enabled: true
    
    The replacement didn't work - leading to tests getting stuck if a
    Jenkins slave is low on disk and the tests depend on relocation working.
    (Like the decommission tests do)

commit 78e362e308668057229ad9fee8c9a713686d4b7f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 26 17:13:21 2021 +0200

    Adjust test_jmx for updated sjk.jar output
    
    New versions of sjk.jar produce slightly different output.
    
    This change makes the tests pass with the new version and should also
    work with the older versions.
    
    If not, we'll have to clear the cached version on the Jenkins slaves and
    locally.

commit e2d3c72eccb0f2e8ce609454981f3b6e1d32f61a
Author: Niklas Schmidtmer <niklas@crate.io>
Date:   Fri Jul 23 10:26:12 2021 +0200

    Add a missing backtick to cross-reference

commit acf4e76fd835d6a7b61ddfa7fddd2138e671f0d2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 21 12:23:58 2021 +0200

    Add a JSON type
    
    Closes https://github.com/crate/crate/issues/11347

commit e0612f125faf9dd0f1db6edab1076dc22d3ccfbb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 21 11:59:12 2021 +0200

    Replace DataTypes.STORAGE_SUPPORTED with a property on DataType
    
    Should help move towards a more extensible type system.
    Ideally we'd make it possible to have type definitions outside of the
    `server` module. For that to work we need to reduce the amount of
    special cased type properties within the `DataTypes` class.

commit 2ca93551b176a88524fee59b0571e8c5a43236a6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 21 10:53:20 2021 +0200

    Update GraalVM to 21.2.0

commit f84b6b1ff28cb8aa0a96f594b892a603d0cdf639
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 21 11:46:46 2021 +0200

    Update netty to 4.1.66
    
    https://netty.io/news/2021/07/16/4-1-66-Final.html

commit df20389353c8489aa65aa2b2137a2cabd1c2489b
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Jul 21 16:43:24 2021 +0200

    Sync 4.6.1 release notes

commit 96575284806884814e9eb563ec746a403377da64
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Jul 20 16:11:14 2021 +0200

    Sync 4.5.5 release notes

commit b3ceced9f4d9dd5986ead42a44fd32d59dc15b6a
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Jul 16 13:00:52 2021 +0200

    Fix issue causing node with default config fail on startup with AuthenticationException

commit 4634e1c4e74ca9d419b1d66474491b480bd29625
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Jul 19 17:11:36 2021 +0200

    Fix update of repository generation on Repository Metadata
    
    The backport of
    https://github.com/crate/crate/commit/7760bc686aea13189ae7ee910c7e1cef1372f16e
    was incorrectly handling the update of the repository generation on the
    the Repository Metadata.

commit bb03f9d4022e67f77e4127ae1a787115c21db487
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Jul 15 13:10:47 2021 +0200

    Add SnapshotIntegrationTests back to test suite
    
    This adds AbstractSnapshotIntegTestCase and BlobStoreFormatIT and all
    related test tooling back to the test suite.
    
    Based on the state of:
    https://github.com/elastic/elasticsearch/commit/8402ad95f2be603b7d939085723243750356f951

commit 627830bb642f55aae9357f5be91f1190f1e04a36
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 19 14:41:32 2021 +0200

    Always prefer doc-values for ORDER BY operations
    
    Fixes https://github.com/crate/crate/issues/11568

commit 1cc8da60c8ba46abae21de5bb65f679fb9150904
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Tue Jul 13 20:06:49 2021 +0200

    Minor docs improvements
    
    Specifically:
    
    - For `docs/appendices/compatibility.rst`:
    
      - Improve the intro description and add a SEEALSO block to improve
        cross-referencing  and discoverability.
    
    - For `docs/appendices/compliance.rst`:
    
      - Improve the intro description and add a CAUTION block advising readers to
        consult the full SQL reference for more info.
    
      - Add a SEEALSO to `compatibility.rst` to improve cross-referencing and
        discoverability.
    
    - For `docs/appendices/release-notes/4.0.0.rst`
    
      - Added RST labels to all headers. This has been done in preparation for the
        changes coming in https://github.com/crate/crate/pull/11558 which need to
        link to a specific section of this doc.
    
    - For `docs/concepts/joins.rst`
    
      - Added RST labels to all headers. This has been done in preparation for the
        changes coming in https://github.com/crate/crate/pull/11558 which need to
        link to a specific section of this doc.
    
      - The headers themselves have been tidied up a little, and in one case, an
        unnecessary header was removed.
    
      - Link references at the end of the doc have been sorted alphabetically
        case-insensitive, as is standard.
    
    - For `docs/interfaces/index.rst`:
    
      - Improved the intro by moving the TOC to the top. I think this improved the
        navigability of the page. Because the TOC is now worked into the normal
        prose, there is no need for the typical "Table of contents" rubric.
    
      - Fixed some hard-wrapping.
    
    - For `docs/sql/index.rst`:
    
      - Improved intro by expanding the text.
    
      - Improved the tone and style of the NOTE block.
    
      - Added a SEEALSO block to improve cross-referencing and discoverability.
    
      - Removed an unnecessary link definition.

commit bf4deb65560f2487c8d962a1e4da86b9b64d4b72
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 14 10:41:21 2021 +0200

    Fix COPY FROM CSV import into partitioned tables
    
    Values in a CSV are read as text - if any of the target columns required
    a different type it resulted in a class-cast exception.
    
    Fixes https://github.com/crate/crate/issues/11563

commit f3460ed218f0efba228d2246655e705806683981
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 13 16:53:51 2021 +0200

    Remove pip `--use-feature` option for blackbox bootstrap
    
        WARNING: --use-feature=2020-resolver no longer has any effect, since it is now the default dependency resolver in pip. This will become an error in pip 21.0

commit a7b8c60aab2810abdc3bac11ccc95c18ead84a0a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 13 16:30:39 2021 +0200

    Bump version to 4.7.0-SNAPSHOT

commit fe7c36c046ed8f6f1c5ea366a2f731ad3bd34e2e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 13 15:14:58 2021 +0200

    Release 4.6.0

commit 7a4890e5aa82598aec70a5d0176f30e7cfc67747
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 13 14:26:08 2021 +0200

    Update admin console to 1.19.0

commit 5a8163abeeec595a210594ddbb325e1c5bb4160b
Author: baur <baurzhansahariev@gmail.com>
Date:   Tue Jul 13 10:48:12 2021 +0200

    Remove dual mode support

commit 661f3bfcaeec6fad5b50503c622bc7668acb36ea
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 13 11:44:48 2021 +0200

    Sync 4.5.4 release notes

commit d8bed0e26134fc18c5f2bd3aa9eb4a7e2b57bdc1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 9 19:30:37 2021 +0200

    Fix job_id column expression in sys operations_log
    
    Fixes https://github.com/crate/crate/issues/11536

commit 37e44ff8119349423e1fb2b602cdffffc1a38811
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 12 11:13:59 2021 +0200

    Add missing generic value streaming implementations
    
    The undefined type uses the `writeGenericValue` / `readGenericValue`
    functions which couldn't stream values of type numeric, timetz,
    geo_point and interval.
    
    Fixes https://github.com/crate/crate/issues/11537

commit d03221b2abc89e29578a7ec5f128988e577afc42
Author: Andrey Ershov <andrey.ershov@elastic.co>
Date:   Mon Aug 26 15:06:29 2019 +0200

    bp: Better logging for TLS message on non-secure transport channel
    https://github.com/elastic/elasticsearch/commit/4f52ebd32eb58526b4c8022f8863210bf88fc9be

commit c56b8dc3ebe8dd275228ff90d90fadfc280c548c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 6 17:40:23 2021 +0200

    Automatically add PRs to project board

commit 573bd2feb9052f9a83c01bd36cfb3c7485d0e9d3
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Jul 6 11:36:34 2021 +0200

    Revert to Lucene 8.8.2
    
    Lucene 8.9.0 caused a performance regression on the benchmark
    `select hyperloglog_distinct("cCode") from uservisits` causing
    the doc values decompression running much slower introduced by the
    change https://issues.apache.org/jira/browse/LUCENE-9663. We
    should therefore release 4.6 with Lucene 8.8.2 and investigate
    further on the regression.
    
    V1: 4.6.0-b227e962b16a58e5900e5c770777e432ec66cae9
    V2: 4.6.0-600c7c866f49825f762b4376aa1059600ecaef7c
    Q: select hyperloglog_distinct("cCode") from uservisits
    C: 1
    | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
    |   V1    |      403.000 ±  103.730 |    355.374 |    389.946 |    392.092 |   1118.239 |
    |   V2    |      989.173 ±  129.581 |    941.106 |    966.361 |    977.820 |   1881.523 |
    ├---------┴-------------------------┴------------┴------------┴------------┴------------┘
    |               +  84.21%                           +  85.00%
    There is a 100.00% probability that the observed difference is not random, and the best estimate of that difference is 84.21%
    The test has statistical significance

commit 4216e0870679220d3467bd39b0ad6668e4f08f5d
Author: jweberpm <85930556+jweberpm@users.noreply.github.com>
Date:   Tue Jul 6 13:29:41 2021 +0200

    fixed description of scalar function array_avg
    
    description of the change should have said average is returned

commit ef53d213d88243624648d2c83c83a85089e7e47f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 6 10:20:59 2021 +0200

    Use long-rtt in insert back-off policy
    
    The backoff policy used `concurrencyLimit.getLastRtt`. This could cause
    requests to be delayed way longer than necessary. For example if a
    partition gets created, the last round-trip time might have been long,
    but that doesn't mean that the next requests would need to get throttled
    that much.
    
    This changed the policy to use `concurrencyLimit.getLongRtt`.
    
    This fixed a regression introduced with https://github.com/crate/crate/commit/e1aa90635a492922563cf6f8e015b69cf6e85254
    
    cr8 run-spec specs/partitioned_bulk_insert.py localhost:4200:
    
    Before the change:
    
        Runtime (in ms):
            mean:    6873.725 ± 882.141
            min/max: 747.398 → 11790.370
        Percentile:
            50:   6951.108 ± 3182.490 (stdev)
            95:   11431.199
            99.9: 11790.370
    
    After:
    
        Runtime (in ms):
            mean:    755.441 ± 66.171
            min/max: 459.070 → 1502.214
        Percentile:
            50:   765.613 ± 238.725 (stdev)
            95:   1264.758
            99.9: 1502.214

commit 8895688dc9055f5f23b4c45ec2813bc8bc46b872
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 5 11:10:31 2021 +0200

    Group release notes by topic
    
    Should make it a bit easier to navigate the changes

commit e6a33592fa1225545389b46fa9d0213c5983b909
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Mon Jun 28 22:32:08 2021 -0400

    fixes

commit 48ea266b96aba6d70d3c97f493bced4ac3495b7f
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Wed Jun 23 14:02:02 2021 -0400

    add optimizer rule for col=col

commit e22bc135a8f915bb3b081ea773eaac96dc018b56
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 29 14:20:50 2021 +0200

    Abort insert operation on validation errors
    
    `INSERT FROM VALUES` returned an error to the user if validation failed,
    but didn't stop processing records.
    
    Fixes https://github.com/crate/crate/issues/11517

commit a3b3fe7943db77bea286d05b2b5e2c855f6c200b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 29 11:17:06 2021 +0200

    Ensure `CURRENT_USER` is not resolved eagerly in default expressions
    
    This removes the `DETERMINISTIC` feature from `CURRENT_USER` so that it
    can be used in generated columns or DEFAULT expressions and always
    resolves to the currently active user instead of to the user who created
    the table.

commit 96a17e1400168f9d145ff72823c9e54e0ad5e517
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 28 20:30:46 2021 +0200

    Don't mark NOW() as deterministic

commit 06a5ea06361133120d98efe93dbf828ea7e34cf8
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Sun Jun 20 09:20:40 2021 +0200

    Add BlobStoreRepositoryRestoreTests back to test suite
    
    Based on the state of
    https://github.com/elastic/elasticsearch/commit/8402ad95f2be603b7d939085723243750356f951

commit 93c8b606fcb3d0efa443a39fb95737e38c4244b9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 28 14:10:22 2021 +0200

    Revert "Update gradle to 7.1"
    
    This reverts commit 1cde22fca73fe0534d9461ab84f7e8a56070d064.
    
    Breaks buildship/eclipse support.
    See https://github.com/eclipse/buildship/issues/1091

commit 6cece775228f0763b4ab33026a5b22250cc8419d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 28 14:33:34 2021 +0200

    Fix reference to `id` system column in docs

commit 4e0699c3721eb990140416a48fc7f9eb94ed9b78
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 28 14:29:29 2021 +0200

    Repair broken GraalVM links in UDF docs
    
    The GraalVM documentation structure changed a bit.

commit 1a43c092cf7f40bd74685f115046b12752b65308
Author: baur <baurzhansahariev@gmail.com>
Date:   Tue Jun 22 17:09:55 2021 +0200

    Remove outdated note about HBA ssl setting

commit 1cde22fca73fe0534d9461ab84f7e8a56070d064
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 23 15:14:21 2021 +0200

    Update gradle to 7.1

commit bb91a8c8a1a022f69c576a7f10aa1c1b07d176d1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 22 10:43:10 2021 +0200

    Add a `toColumnType` method to `DataType`
    
    `MetadataToASTNodeResolver` contained type specific logic to turn a
    `DataType` to a `ColumnType`.
    
    This commit adds a `toColumnType` method to the `DataType` class so that
    we can move the type specific logic into the concrete `DataType`
    implementations.
    
    This is in part motivated by https://github.com/crate/crate/issues/10025
    but also by the recent BitStringType addition, which showed that a lot
    of type specific logic is scattered around the code base.

commit 9278ab6ad1cc46edda2b4a578b581b209f8bab3e
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Jun 4 16:07:33 2021 +0200

    Allow non-superusers to run certain ALTER CLUSTER commands.

commit 2631c3189fbba6ca0d0f835b1652dd231e4b2fdd
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri Jun 18 11:51:16 2021 +0200

    Fix ssl=on parsig/mapping issue.

commit 7760bc686aea13189ae7ee910c7e1cef1372f16e
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Jun 3 17:53:02 2021 +0200

    bp: Use ClusterState as Consistency Source for Snapshot Repositories
    
    https://github.com/elastic/elasticsearch/commit/8402ad95f2be603b7d939085723243750356f951

commit e3e9e24f1be2f3babe23d260b7f3e1a213f1a22b
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Jun 8 13:49:07 2021 +0200

    bp: Use Cluster State to Track Repository Generation
    
    https://github.com/elastic/elasticsearch/commit/b34daeb64b7efd601993a7e46eea08834596a43f

commit 829b67c8dd4fb1d063cc8a1a06f051484f0efa62
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Jun 2 18:29:47 2021 +0200

    bp: Make BlobStoreRepository Aware of ClusterState
    
    https://github.com/elastic/elasticsearch/commit/459d8edcc083454d75b04254effa9118157e9c0a

commit 2bac4a60a83e43397995fead726c9148285c7489
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 22 10:51:15 2021 +0200

    Reflect 4.5.3 release

commit 600c7c866f49825f762b4376aa1059600ecaef7c
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Sun Jun 20 09:26:20 2021 +0200

    Update Lucene to 8.9.0
    
    https://lucene.apache.org/core/8_9_0/changes/Changes.html

commit b227e962b16a58e5900e5c770777e432ec66cae9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 21 15:52:29 2021 +0200

    Prefer doc-values in INSERT FROM query with GROUP BY operations
    
    The insert-from-query planner set a `PREFER_SOURCE_LOOKUP` hint. Using a
    source lookup is okay for operations that can work in a
    iterative/streaming model, but it is not ideal for pipeline breaker
    operations.
    
    In the case of GROUP BY it also prevents the optimizations from kicking
    in, as those are all based on doc-values.
    
    This reduces the duration of a query like the following from ~120sec to
    ~0.7sec on a simple test on my machine:
    
        INSERT INTO readings_last (device_id, last_record)
            SELECT device_id, MAX(ts)
            FROM readings
            GROUP BY 1
            ON CONFLICT (device_id) DO UPDATE SET last_record = excluded.last_record;
        INSERT OK, 3000 rows affected  (0.671 sec)
    
    Closes https://github.com/crate/crate/issues/11495

commit 296f91bae74dcb5588342fc7d89d898b72ae9b52
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 21 10:13:35 2021 +0200

    Fix aggregation on primary key lookup regression
    
    ccca7a9a908b3aebe6a949e35bd688633d04ea9a introduced a regression because
    the filter and eval projections ran on cluster level, this messed up the
    projection ordering.
    
    Instead of `filter -> eval -> aggregation` the projections got applied
    as `aggregation -> filter -> eval`.
    
    Fixes https://github.com/crate/crate/issues/11493

commit a4039b05a92a280bbdd64e8b71ded0a127ae67f2
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Fri Jun 11 21:16:56 2021 -0400

    allow globbed uris to match symlinks

commit f0949d8a5624ec4f9cc09654ae48e2489ba41099
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 16 18:23:18 2021 +0200

    Optimize count on bitstring columns
    
    We can re-use the same `DocValueAggregator` implementation that we use
    for Ip/StringType, because all types use `SortedBinaryDocValues` under the hood.

commit 1c010a87323c28acab65f04c3c946a97c0f3ceaf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 16 11:31:16 2021 +0200

    Type references in docValueAggregator as Reference
    
    We expect `Reference` instances, so we should type them as `Reference`,
    not as `Symbol`.

commit 20e9c71aa9570a525ddeb0c4b141775f385089e0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 16 10:54:25 2021 +0200

    Fix handling of bit string arrays

commit b17e1940a67ad71c0d6396f622fd9da908777bcd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 14 14:31:21 2021 +0200

    Allow users with DDL permission to execute OPTIMIZE TABLE

commit b4b8a085179cd7fbc7735ec9ed8b37d5f69211a5
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jun 15 19:48:46 2021 +0200

    Reflect 4.5.2 release

commit 3646a08e6534469e500a82b8790ea37dc2231663
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Wed Jun 2 15:58:43 2021 -0400

    count aggregation on object type will use DocValueAggregator of its not null subcolumn

commit 3d19ff423fc7f982a71fb87de635f6324ad61ab0
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Thu May 20 16:48:08 2021 +0200

    Overhaul `insert.rst`
    
    Specifically:
    
    - Added RST labels to `compatibility.rst` so that I could add a cross-reference
      to this document.
    
    - Added RST labels to `dml.rst` for the same reason.
    
      While I was in that file, I corrected the SQL examples to use upper-case for
      reserved keywords.
    
      I also added a cross-reference back to `insert.rst` syntax doc.
    
    - Reworked `insert.rst`:
    
      - Correct use of RST labels (and update other pages accordingly)
    
      - Restructure to make better sense:
    
        - *Parameters* now appears under *Synopsis*.
    
        - The `CAUTION` about dynamic selects has been moved to an admonition
          further up the page (where it is more relevant).
    
      - Copyedits for text to improve correctness, clarity, and style (e.g.,
        referring to things as "statements", switches to active voice, resolving
        indeterminate references)
    
      - Reworded the intro to the `ON CONFLICT` section for clarity.
    
      - Fix ambiguous use of ``WITH`` in ``ON CONFLICT DO UPDATE SET`` section
        (closes https://github.com/crate/crate/issues/11387)
    
      - Adjusted the first example so that it is a syntax example
        *only*. Previously, it mixed example SQL with syntax grammar.
    
      - Added an example query that demonstrates how to use `ON CONFLICT` to
        perform an operation on the existing record. In this case, incrementing
        `visits` by one.
    
        I took this example query from the existing upserts documentation in
        `dml.rst`. However, I found the query in `dml.rst` confusing because it
        specifies two values for `last_visit` (one in the `INSERT` and one in the
        `DO UPDATE`), both different. This makes no sense in practice.
    
        I fixed this by modifying the query in both places so that the first
        example only increments `visits` (demonstrating the ability to reference
        the existing value).
    
        I then modified the second example in `insert.rst` so that it demonstrates
        the proper use of `excluded` to overwrite `last_visits` (mirroring the
        examples in the upserts doc).
    
      - I added an explicit description of what each query does to better guide the
        reader.
    
      - Added a cross-reference to the upserts doc.
    
      - I added a `NOTE` admonition to `ON CONFLICT DO NOTHING` to explain that the
        conflict target is optional, but must match the primary key if specified.
    
      - Improve use of SQL examples.
    
        - Consistent use of uppercase for SQL reserved words.
    
        - Better (more descriptive) use of table names, column names, and so on.

commit e4ee6e0e03849b026e511c3ba0ea89ad3ff82508
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 14 14:45:52 2021 +0200

    Show the length of the bit type in SHOW CREATE TABLE

commit 02012078f58931929560c53b80b6e2e4e0aec281
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 14 11:56:13 2021 +0200

    Ensure index references can be resolved via aliased relations
    
    Fixes https://github.com/crate/crate/issues/11474

commit 70ea503fe7954c5dcaabf747cabd15c7916e4e8e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 9 15:37:23 2021 +0200

    Return bit length in information_schema.columns character_maximum_length

commit 450a757488bdfb9a29625fd18f7fece3b3698059
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 9 14:13:53 2021 +0200

    Avoid BitSet round-trip to index BitString
    
    The binary value in the source already contains the
    `bitSet.toByteArray()` content.

commit df81319fb29a1af3562e7bc7bd4b80269ebf18e3
Author: baur <baurzhansahariev@gmail.com>
Date:   Mon Jun 14 09:14:32 2021 +0200

    fix typo

commit 41976d829b636e0cc3331f1e1fce0f8a9b37c3f2
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Tue Jun 8 18:11:44 2021 +0200

    Fix Sphinx extensions configuration
    
    The `sphinx-docs-theme` specifies a list of default Sphinx extensions in the
    [src/crate/theme/rtd/conf/__init__.py][1] file.
    
    The `conf.py` file in this Sphinx project also specified a list of Sphinx
    extensions. However, the way this was done meant that a direct assignment was
    overwriting the default value of the extensions variable (imported at the start
    of the file).
    
    As a consequence, the CrateDB Reference has not yet picked up any of the
    following improvements:
    
    - Intersphinx support
    - PlantUML support
    - Open Graph support
    - [Sphinx copy button][2] support
    
    This change replaces the direct assignment with a list append operation and
    removes a redundant extension (`sphinx_sitemap`) that is already present in the
    default list.
    
    I have verified that as a result of this change, the Sphinx copy button
    correctly appears on code examples as expected ([which was previously not the
    case][3]).
    
    [1]: https://github.com/crate/crate-docs-theme/blob/main/src/crate/theme/rtd/conf/__init__.py#L32
    [2]: https://pypi.org/project/sphinx-copybutton/
    [3]: https://github.com/crate/crate-docs-theme/issues/258#issuecomment-852080493

commit aa72e1404dbd9d30f968e640aa5188d58689cb1e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 5 16:31:11 2021 +0200

    Add bit string type

commit f50b41b81782d5a93ea6d0d1cc4f55f9b7108305
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 5 15:04:30 2021 +0200

    Add parser support for bit string

commit b6ebb6f3a19dcd09e0cb454467ef86326aeee575
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 8 18:18:04 2021 +0200

    Update junit
    
    Had to rename `assertThrows` in our custom `Asserts` class because the
    `Assert` base class (inherited from in `ESTestCase` / `LuceneTestCase`)
    added a new `assertThrows` method that broke the method resolution.

commit 83a29b1e20d7d96eefa1545c5eb18646f594e5b9
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Fri Jun 4 13:31:44 2021 +0200

    Light improvements for the `COPY TO` and `COPY FROM` docs
    
    Specifically:
    
    - Some minor copyedits for grammar, style, clarity, and so on. However, this
      change does not provide a full copyedit.
    
    - Added some extra cross-references.
    
    - Improved headings (phrasing and hierarchy) and use of TOCs.
    
    - Reworked some info into admonitions where it made sense.
    
    - Made it a little more clear that globbing only works for file and s3 schemes.
    
    - Minor reworks for examples.
    
    - Removed example that implies CrateDB will perform percent-encoding
      automatically. I asked about this on Slack, but have not had a response
      yet. For now, it is safest to remove (as the result may be incomplete but at
      least not misleading).
    
    - Reworked RST labels for consistency and style.
    
    - Added a few additional third-party links where helpful.

commit 2aaca6c31fb2f6c61c946b7d05f471b26c2656cc
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Jun 8 15:14:38 2021 +0200

    bp: Fix Snapshot Corruption in Edge Case
    
    https://github.com/elastic/elasticsearch/commit/e244d65869c2864f372af066724f1bf1f5c729a1
    The fix was already applied as part of https://github.com/crate/crate/commit/f5505cbfa113aa2a5612d910fde2e29bd919e06d
    this only moves the xcontent functionality.

commit 73fd7051c5e228386ca4ebc743ee69cf070d8612
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 8 10:37:55 2021 +0200

    Fix flaky testRelocatedClosedIndexIssue
    
    855033d6afae73fd6e958db31a466369103bbf22 fixed one issue, but introduced
    another 🤦

commit b7137674645ea81c4aba90f1ae67ba0c459f4b67
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Jun 7 16:43:17 2021 +0200

    bp: Remove Redundant Request Wrappers from RepositoryService
    
    https://github.com/elastic/elasticsearch/commit/6199ca742f742b4a031ad4b2aef4591dec0e27ef

commit ab477836b784abaf25ddb39f23807f781be6610d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 7 10:32:29 2021 +0200

    Ensure default expressions are evaluated per record
    
    Fixes https://github.com/crate/crate/issues/11450

commit 38a3420de68c1727e0a577216a243cc72763731f
Author: baur <baurzhansahariev@gmail.com>
Date:   Mon Jun 7 13:26:58 2021 +0200

    fix flaky test for HyperLogLogDistinctAggregation

commit 41fe5d601d101ac39afa74477d571935fc08c75e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 3 17:19:40 2021 +0200

    Remove some unused FieldMapper properties
    
    These properties cannot be set via SQL.
    
    Motivated by https://github.com/crate/crate/issues/10025

commit d9c419ee5a1bab71b31091491266a20a708a66af
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 4 12:00:58 2021 +0200

    Remove enabled flag from ObjectMapper
    
    Cannot be disabled via SQL

commit ccca7a9a908b3aebe6a949e35bd688633d04ea9a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 4 10:15:04 2021 +0200

    Ensure group by or aggregates on rename can run on shard level
    
    Closes https://github.com/crate/crate/issues/11443

commit 499a99c56da65a7946261c035a24edb9dd4ceec0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 7 10:42:23 2021 +0200

    Mute flaky test_random_type_random_values

commit eb927cbf41438ab4b1eacc9191281de19725b7ba
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Wed Jun 2 19:25:37 2021 +0200

    Improve SQL docs for creating and dropping repositories
    
    Spotted an opportunity to tidy up the SQL syntax docs for `CREATE REPOSITORY`
    and went for it.
    
    Specifically:
    
    - For `create-repository.rst`:
    
      - Improve intro and add cross-references
    
      - Add missing ref labels and tidy up nomenclature of ref labels throughout
        the whole doc
    
      - General copyedits for clarity, style, grammar, and so on
    
      - Tidied up and improved section/headings hierarchy and use of TOCs
    
      - Converted all params to use definition-style markup
    
            **Example**
              This is an example of the style used.
    
      - Improved use of admonitions and expanded/reworked explanations where
        necessary to improve clarity
    
      - Minor edits for the statement synopsis to improve readability (i.e.,
        `repository_parameter` renamed `parameter_name`)
    
      - Standardized wording of duplicate parameter definitions
    
      - Standardized ordering of parameters
    
      - Added external links where helpful (e.g., to specific Hadoop, AWS, and
        Azure resources)
    
      - Corrected `readonly` parameter to `url` for `url` type repositories
    
    - For `drop-repository.rst`:
    
      - Changes to match the above
    
    - For other files:
    
      - Update ref labels to match changes above

commit 855033d6afae73fd6e958db31a466369103bbf22
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 4 11:20:51 2021 +0200

    Fix flaky testRelocatedClosedIndexIssue
    
    Only managed to reproduce the failure once in ~10 minutes of non-stop
    repeat. So fingers crossed that this fixes it. 🤞

commit a6efc3918f6297b08ca2be295bfc214edbb0cf2c
Author: baur <baurzhansahariev@gmail.com>
Date:   Wed May 19 11:34:47 2021 +0200

    Implement DocValueAggregator for HLL DISTINCT.

commit 072d063b3d5f3b228c1ac2aa5051437f1a738fea
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu May 27 15:18:32 2021 +0200

    bp: Make BlobStoreRepository#writeIndexGen API Async
    
    https://github.com/elastic/elasticsearch/commit/48ba7dde5cc6d5e262c74f6a7399991dbe1a11f8

commit 4b63b9a77ed6b17d9929d760f37860429319c6e1
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed May 26 20:47:05 2021 +0200

    Adapt backport list

commit 348d895487ac5f621ced35a340f7428374ebb201
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed May 26 18:16:44 2021 +0200

    bp: Add Missing Nullable Assertions in SnapshotsService
    
    https://github.com/elastic/elasticsearch/commit/97c7ea60b938467ee2b13970d1ab6895229d5bf4

commit 25b6d5e01aef108fe840d3f09f9584ea83c14a4a
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed May 26 17:48:27 2021 +0200

    bp: Make Repository.getRepositoryData an Async API
    
    https://github.com/elastic/elasticsearch/commit/4d659c4bdbfb6b9eb9ab271a4e247663cd6b63cb

commit 0f58730421b291e19832ad26c95fdfcfef54ab65
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed May 26 18:58:43 2021 +0200

    bp: Make Snapshot Delete Concurrency Exception Consistent
    
    https://github.com/elastic/elasticsearch/commit/9c006483141cbb8d116461a6b047218f2b390861

commit aec5adeafec937991d06af7eac28136084f0ace3
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue May 25 16:14:00 2021 +0200

    bp: Fix RepoCleanup not Removed on Master-Failover
    
    https://github.com/elastic/elasticsearch/commit/25cc8e36636d9766ba229f2ed1a80991662431a4

commit c01bdfaa9b4240a680e0aee1ff5cf5b48b48edcd
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed May 19 17:19:56 2021 +0200

    bp: Better Exceptions on Concurrent Snapshot Operations
    
    https://github.com/elastic/elasticsearch/commit/f7d9e7bdc48e04e66f6d71de0929ab79c56efa2e

commit 8ab527ca8a8cc1aa3b1827a4c8dfd0f331e5987d
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed May 19 17:16:07 2021 +0200

    bp: Track Repository Gen. in BlobStoreRepository
    
    https://github.com/elastic/elasticsearch/commit/fc505aaa7646eb28c9c14b0e58d4a24be5edb57b

commit 51c77c076a6d7c1e8ef5ff1867b85321d6606f77
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed May 19 16:52:49 2021 +0200

    bp: Fix Broken Snapshots in Mixed Clusters
    
    https://github.com/elastic/elasticsearch/commit/0e1035241da241e2c8611fa03ffe982142e8a47f

commit dfc1d9ac1e6f0b1700bd1eea4201184a4d047931
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 2 14:55:34 2021 +0200

    Allow object to object conversions where one is a subset of the other
    
    Fixes https://github.com/crate/crate/issues/11386

commit 21ae99d797b45ec2a52ed900808fcc0fc8513c3a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 2 16:41:50 2021 +0200

    Remove unused parameters from rangeQuery
    
    No implementations used the parameters. Removing them allows us to also
    remove the intermediate `SimpleMappedFieldType` class.

commit b9b2e813a257a8d115674d71ffdef7d2d1fd6b0d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 2 15:49:04 2021 +0200

    Remove unused properties from NumberFieldMapper
    
    These properties can't be set via SQL

commit 1f5cb42be6d2b6acc66d1160c794315917f58bc0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 2 15:31:24 2021 +0200

    Remove boost property from MappedFieldType
    
    The property cannot be set via SQL
    
    Motivated by https://github.com/crate/crate/issues/10025

commit c5d71a4b87161314685c29d8901e6e56eebbffb0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 2 14:24:38 2021 +0200

    Fix duplicate column handling in DocValuesGroupByOptimizedIterator
    
    The `docInputFactory` de-duplicates key expressions. Usually that's a
    good thing as it avoids duplicated value lookups, but in the case of the
    DocValuesGroupByOptimizedIterator the expressions map directly to the
    key values.
    
    `GROUP BY x, y, x` must output three values, not less.
    
    Fixes https://github.com/crate/crate/issues/11428
    
    The ClassCastException mentioned in the references issue occurred
    because the key types (based on the key references) didn't match with
    the de-duplicated expressions.

commit 6c57ce984602071fdadc16233732625ce5f0e9ec
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 2 10:59:07 2021 +0200

    bp: MappedFieldType no longer requires equals/hashCode/clone
    
    https://github.com/elastic/elasticsearch/commit/f4caadd239fe9f3bfd8d14cb576a830ca22a4efb

commit 820334fc440840a6fd48e89402ccbd5628ccfcdf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 2 10:23:09 2021 +0200

    Fix TopNDistinct column pruning
    
    We must not prune outputs from TopNDistinct, it could change the
    result-set and causes issues with aliases as described in https://github.com/crate/crate/issues/11414

commit aacc974bd128e79c47f3e3493a744d0bca513578
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 1 17:31:40 2021 +0200

    Remove termsQuery override in StringFieldType
    
    The override matches 1:1 the implementation in the `TermBasedFieldType`
    base class.

commit 05f29a8fa584edf57ca47ba4ddb51edc728e11db
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 1 17:30:03 2021 +0200

    Move fuzzyQuery construction to MatchQuery
    
    It is not necessary to have this logic in the generic `MappedFieldType`
    - only the text type supports this opperation.

commit 90dc263fe5300bdd1bea55b041c04cd8664ec8c0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 1 15:16:00 2021 +0200

    Remove _ignored_fields / ignore_malformed support
    
    This removes the `IgnoredFieldMapper` and the `ignore_malformed`
    setting.
    
    The setting can be removed without deprecation period because it wasn't
    exposed via SQL:
    
        cr> create table foo (x int) with (ignore_malformed = true);
        SQLParseException[Invalid property "ignore_malformed" passed to [ALTER | CREATE] TABLE statement]

commit 2fbf8640c81f84f5508d51179e555d9a6a87dac6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 1 15:57:18 2021 +0200

    Remove unused query methods from MappedFieldType
    
    Motivated by https://github.com/crate/crate/issues/10025

commit eaa15f95b15774af6c8c0fdd1b7c48e9095425fd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 1 16:22:25 2021 +0200

    bp: Make FieldTypeLookup immutable
    
    https://github.com/elastic/elasticsearch/commit/519d1278e231649fc67c5a207fe12da21c7a8ed5

commit e31b4c831ab06e9f816d559d2841a0c9cef1fdcf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 17 15:38:24 2021 +0200

    bp: MappedFieldType should not extend FieldType
    
    The mapper area diverged quite a bit. This is a manual application of
    changes from:
    
    https://github.com/elastic/elasticsearch/commit/12a3f6dfca29dd6c945cd0780bf0b90865b28412

commit 27844598ba6cd780a1ae84da380f929bba27cc9f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 1 14:36:56 2021 +0200

    Remove phrase-/multiPhaseQuery from MappedFieldType
    
    These two methods are only used in the `MatchQuery` and were only
    implemented in the StringFieldType.
    
    It isn't necessary to have them in an abstract class that is used for
    all types.
    
    Motivated by https://github.com/crate/crate/issues/10025

commit bdcd46bacbb3b676aee99841eebcb7ae7e9e0c5b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 1 11:36:22 2021 +0200

    Update broken links
    
    The Anchor changed

commit ae369879dbdf37ecacdd42ab61ca76afc32cec84
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon May 31 21:31:50 2021 +0200

    bp: Unguice Snapshot / Restore services
    
    https://github.com/elastic/elasticsearch/commit/39a3d637340ab8de0220547671e08cc0b37fa326

commit 9211166a13f33c72720e79c9641114c8289a71be
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon May 31 17:20:26 2021 +0200

    bp: Deguice RepositoriesService
    
    https://github.com/elastic/elasticsearch/commit/afd42df15f55d16b650c60bf247e763777d5b181

commit 5f40784cdcde85ce6a3cb5f7bade37911d1b5ec4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 28 10:00:05 2021 +0200

    bp: Fix doc_stats and segment_stats of ReadOnlyEngine
    
    https://github.com/crate/crate/commit/24f114766fb1dae17bb94146042d14152386882c

commit 41b3579b7049130cedd542077eabddb666ff7311
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 26 11:27:03 2021 +0200

    Ensure LIKE query on varchar columns use WildcardQuery
    
    LIKE is registered with a `text -> text -> boolean` signature. This
    leads to implicit casts if a column has a varchar type with lengh limit:
    
        ref LIKE 'some_literal'
    
    Changes to:
    
        _cast(ref, 'text') LIKE 'some_literal'
    
    An optimization rule then tries to flip the cast:
    
        ref LIKE _cast('some_literal', 'text')
    
    But because `text` != `varchar(n)` the function resolver
    added back casts again. Because of that, the query builder wasn't able
    to create a `WildcardQuery` but instead used a generic function filter,
    which is expensive.

commit 7661c1025bd3d5a6c7b430edfc688937fef83d38
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 25 16:49:52 2021 +0200

    Fix columnStoreDisabled parameter names
    
    The `columnStoreDisabled` value was passed to a function where the
    parameter was called `columnStoreEnabled`.

commit 2c3a18cf4860c0627634b835bb2d36b221a5ac39
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 25 16:46:45 2021 +0200

    Remove one Reference constructor overload
    
    It only set the default for `columnStoreDisabled` and there aren't
    enough call-sites to warrant another overload.

commit 1e32a18243fb910421eab6cc01a2f4a1fdb4c4fd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 25 11:42:05 2021 +0200

    bp: Remove Mapper.updateFieldType()
    
    https://github.com/elastic/elasticsearch/commit/d6b79bcd95e9d051d8a67e166a578ac78c3eadd0
    
    Motivated by https://github.com/crate/crate/issues/10025

commit 5c82abc3b571559cfdde59b8751979c2ac8c8db7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 18 16:07:59 2021 +0200

    Remove unsupported options from GeoPoint/GeoShape mapper
    
    These options cannot be set via SQL
    
    Motivated by https://github.com/crate/crate/issues/10025

commit 3e62fd23305f84f69d372704bb1ab406b01cc6fe
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu May 20 15:25:13 2021 +0200

    bp: Fix testPrepareIndexForPeerRecovery
    
    https://github.com/elastic/elasticsearch/commit/0c7ae0217de9c5aacfcb2e52b6255f7e3c074a46

commit 4725a94682a7f42e0f8491a9ee8104aa0e746e42
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu May 20 12:44:51 2021 +0200

    bp: Fix testKeepTranslogAfterGlobalCheckpoint
    
    https://github.com/elastic/elasticsearch/commit/156e5aa77f0449a8671cfe440aa7d0c4db49e136

commit 88a26ced25b75d93a44768e23c1de3f84bff3775
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 19 11:16:32 2021 +0200

    Remove dynamic numeric detection
    
    Defaulted to disabled and there is no option to enable it.
    
    (This is about string literals with only numeric values. Numbers will
    still be detected as numbers)

commit 04f7cdee9eff03b584cfd8cb15ae7f102bb0fbf8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 19 10:57:08 2021 +0200

    Remove logic related to dynamic date detection
    
    Was disabled by default and there is no way to enable it via SQL.
    It also doesn't fully fit into our type model.
    
    We'd need it to share semantics with components like
    `DataTypes.guessType` and so on.

commit fb7a9d01be832ab3e69132f393f542c91ce4b07f
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed May 19 15:02:56 2021 +0200

    Update antlr to 4.9.2

commit 751987f15627a2a6c8bb1adf58f33b54ce403d59
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed May 19 15:35:57 2021 +0200

    bp: Fix testKeepTranslogAfterGlobalCheckpoint
    
    https://github.com/elastic/elasticsearch/commit/1615c4b379000b117ea770a46b626afbefec966f

commit 1888725dad737c2c1607ff5c615abf42361d936a
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed May 19 15:38:53 2021 +0200

    Update netty to 4.1.65.Final
    
    https://netty.io/news/2021/05/19/4-1-65-Final.html

commit fb825b55100685ceb1746bbacefe0a1b4842e940
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed May 19 16:13:45 2021 +0200

    bp: Fix InternalEngineTests.testSeqNoAndCheckpoints
    
    https://github.com/elastic/elasticsearch/commit/27c15d6ccd489b401abac52e5a51edd38d044231

commit 8e32bd94e1310346fec0fd14ae62cac67fa94149
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed May 19 14:58:08 2021 +0200

    Update aws java sdk to 1.11.1021

commit 698e2f1724417ebf8bad61f6deb8afb2675ba23f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 19 10:14:46 2021 +0200

    Remove the unused FieldAliasMapper
    
    Not used and for rename column functionality we may revive parts of the
    idea but likely in a different form based on the results of
    https://github.com/crate/crate/issues/10025

commit ac090bde6668f78640d63505c916063a0c092f91
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue May 18 16:26:48 2021 +0200

    bp: Fix testRestoreLocalHistoryFromTranslog
    
    https://github.com/elastic/elasticsearch/commit/5aa612c2759b9f025e429a0075161c4271c054a8

commit ee6f23f7b2f7f29416b9c7652f57a3ec720528ba
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 18 15:06:26 2021 +0200

    Remove unused options from KeywordFieldMapper
    
    These options cannot be set via SQL.
    
    Motivated by https://github.com/crate/crate/issues/10025

commit 4309fc3cce06062197886d51c24685712434478b
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon May 17 16:36:27 2021 +0200

    Include snapshots and repositories to backport list

commit 97e1305e59caf005c916d3a3af9a483603ddf9e7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 18 11:36:52 2021 +0200

    Remove unused options from TextFieldMapper
    
    These options cannot be set or changed via SQL statements, so we can
    remove them and all the related logic.

commit 343670089643611a1f3f14bafa1a7aeb2f27cebc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 17 15:52:17 2021 +0200

    Remove eager global ordinals property
    
    We never set/used this property and removed logic related to it in other
    places.

commit 1e0ab63e01616f309761c20f26c41bf9073facb9
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Thu May 13 21:29:29 2021 -0400

    exclude aliased literals from OrderBySymbols from CollectPhase

commit 62a0323c4565ee298c5b3b5a54a2d5b09fd5ddbe
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon May 17 14:57:42 2021 +0200

    bp: Separate translog from index deletion conditions
    
    https://github.com/elastic/elasticsearch/commit/82ab1bc1ff4

commit a0263f578e196b2c1f9ae7abe0ab99c609cfce34
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon May 17 12:48:27 2021 +0200

    bp: Use local checkpoint to calculate min translog gen for recovery
    
    https://github.com/elastic/elasticsearch/commit/db6b9c21c71

commit ccfccffdc3c1ef745adaef6c3479b6a89166c60e
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon May 17 15:05:25 2021 +0200

    Update netty to 4.1.64

commit 87988b5e7dd6032251ac6dc3df73e10fa33f408f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 17 15:16:10 2021 +0200

    bp: Move merge compatibility logic from MappedFieldType to FieldMapper
    
    This ports over parts of:
    
      https://github.com/elastic/elasticsearch/commit/18bfbeda2972927670975adf63b6fd3c0edba5b1
    
    This was a manual port instead of cherry-picked because some of the
    FieldMapper implementations diverged quite a bit.
    
    This relates to https://github.com/crate/crate/issues/10025

commit 313df3be90cf33ae261d1a8becac7a13e2a505af
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Thu May 6 16:29:27 2021 -0400

    fix HAS_GLOBE_PATTERN and add test cases

commit 76a24adcb662a03d09719d1a2da0a9ce15053eef
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 17 11:27:51 2021 +0200

    Merge XContentElasticsearchExtension with DataTypeXContentExtension
    
    Some CrateDB specific types (e.g. Regproc) were added in
    XContentElasticsearchExtension, others in DatatypeXcontentExtension.
    
    This merges both into a ServerXContentExtension so that we've a single
    place.

commit 63dcf54287e406b75b57d5f1c96df11a611b9d48
Author: baur <baurzhansahariev@gmail.com>
Date:   Fri May 14 11:22:55 2021 +0200

    Fix incorrect classification for DELETE/UPDATE queries with sub-select in sys.jobs_log

commit 217aacdcad93a34a78a40759ed27721c4f3a8a84
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu May 6 18:30:33 2021 +0200

    bp: Prevent in-place downgrades and invalid upgrades
    
    https://github.com/elastic/elasticsearch/commit/749135b37c9c317554647bb0a63f4e04281f838d

commit fad163933fc331cfbdf4928129113fb5acb47821
Author: Sebastian Utz <su@rtme.net>
Date:   Wed May 12 15:22:53 2021 +0200

    Fix create snapshot of concrete tables only
    
    The ``CREATE SNAPSHOT`` logic always included the global meta state
    even if only concrete (partitioned) tables or partitions were defined
    to be stored.
    Thus more metada data was stored as the user wants to.
    
    This commit changes the logic now to only include possible partition
    table templates beside the concrete indices but no gobal meta state.
    The global state is only store if ``ALL`` is used.
    
    Fixes #11365.

commit 618adcec58c934674975b707289777ab138b2034
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed May 12 14:15:27 2021 +0200

    bp: Warn on slow metadata performance
    
    https://github.com/elastic/elasticsearch/commit/5736dfb8c31d73a541d5740ba267317720f1fda6

commit 7ce96b957659795a37c0d59ed9a3cb8db9861fbf
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed May 12 12:07:15 2021 +0200

    Update backport log to use 7.10 branch

commit 388807579829bcdb2051532fe751f1ed574a7748
Author: baur <baurzhansahariev@gmail.com>
Date:   Mon May 10 15:43:03 2021 +0200

    Support hostnames in HBA config

commit a645341eb28b3d9ae081035c83e83b50403c8031
Author: baur <baurzhansahariev@gmail.com>
Date:   Thu May 6 15:45:39 2021 +0200

    Implement array_avg scalar function

commit cfa15921213d3102e12fb2cdd138b546ad8d489d
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Fri May 7 17:35:12 2021 +0200

    fixups

commit 63b610f2832088cf235ae1c7285c82a0c4ab75ad
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Thu May 6 19:54:34 2021 +0200

    fixup! Merge branch 'master' into nomi/table-settings

commit 3bee25705e3e75b987035313d9cd1a94905b8dc3
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Fri Apr 30 16:27:04 2021 +0200

    fixup! Improve create tables doc, replication doc, and cluster settings doc

commit d7db3c0d75e85143c73ba8131c16c2ac4df5bf68
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Fri Apr 30 16:13:14 2021 +0200

    fixup! Improve create tables doc, replication doc, and cluster settings doc

commit 4b5642c89224c43695fa3b453cac2f629b08cbd9
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Thu Apr 29 15:45:22 2021 +0200

    fixup! Improve create tables doc, replication doc, and cluster settings doc

commit af663b67fab6d8edb289c6cb8eff34eb4f898dda
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Tue Apr 27 13:34:02 2021 +0200

    fixup!

commit 632928edd7e01f1c00906d54739ea340d091b849
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Mon Apr 26 20:22:56 2021 +0200

    Improve create tables doc, replication doc, and cluster settings doc
    
    Closes <https://github.com/crate/crate/issues/11238>.
    
    Specifically:
    
    - Reworked the "Creating tables" page:
    
      - Added a proper introduction to the topic
    
      - Renamed the "Basics" section to "Table definition" and moved the "Schemas"
        and "Naming restrictions" under it as subsections.
    
      - A new admonition specifically to advertise the `column_policy` table
        setting (because I think dynamic columns are a key feature of CrateDB and
        this is relevant to table schema definition).
    
      - Reworded a lot of the text.
    
      - Improved use of RST labels and some minor RST reformatting.
    
      - Renamed the "Advanced use" use section to "Table configuration" and
        expanded the section by quite a bit to highlight what I think as some of
        the key features related to table settings (and table creation more
        generally).
    
        I added lots of explanation because I noticed that some of this is not
        really made explicit anywhere else.
    
    - Completely reworked the "Replication" page:
    
      - While working on the "Creating tables" page I was trying to explain the
        benefits of replication and I could not find anything in the docs that
        explicitly talks about the fact that one of the primary benefits of
        replication is the fact that replica shards can be promoted to primary in
        the case of node loss.
    
        I thought this issue was important enough (and related to my other work)
        that I should address it immediately.
    
      - Reworded and expanded the intro. Reworded and moved a note about cluster
        health here.
    
      - Removed the TOC and the single "Configuration" header. There is no need to
        add either if there is only one section on the page.
    
        Reworded the rest of the content that was under this heading.
    
    - Improvements for the "Cluster settings" page:
    
      - Moved "Shard balancing" to the top of the "Routing allocation" section
        because the rest of the subsections are closely related to each other and I
        think they benefit from being ordered sequentially.
    
      - Created a new subsection called "Attribute-based shard allocation" that
        groups together the next two sections:
    
        - "Cluster-wide attribute awareness" (renamed from "Awareness")
        - "Cluster-wide attribute filtering" (renamed from "Cluster-wide allocation
          filtering")
    
        My hope for the renaming is that overall it makes it more clear what these
        things do (putting custom attributes to work) and how they relate to each
        other (see next item).
    
      - Added intros to all three sections mentioned above.
    
        I wanted to better advertise the custom attribute functionality. Prior to
        this change:
    
        - There was no *clear* connection made between custom attributes and
          "awareness" or "allocation filtering" making it difficult to understand
          what the latter two configuration options were for.
    
        - It was difficult to grasp what custom attributes are useful for.
    
        While not specifically related to table settings, I did this because I
        think this is a key feature of CrateDB that deserves better highlighting.
    
    - Other files:
    
        - Minor updates to reflect renamed RST labels

commit aa4904e1fc690f3ff23cabe425759dc5c7d228dd
Author: Sebastian Utz <su@rtme.net>
Date:   Fri May 7 13:17:39 2021 +0200

    Fix optimizer rule moving filters beneath window aggregations
    
    A filter symbol containing a window function of the window aggregation
    must stay on top of the aggregation and must not moved down.
    
    Fixes #11361.

commit 56d931eb8b539a321c684c2d06f201c97a56b519
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon May 10 11:45:00 2021 +0200

    bp: Fix queuing in AsyncLucenePersistedState
    
    https://github.com/elastic/elasticsearch/commit/b146740e052e6fa480265e83021d6536ddb203fc

commit 24fc751cd6412fea7897bbe9ca916b2319ae2f0a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 6 19:48:59 2021 +0200

    Remove Iterables.get
    
    Had only one use that was just a last element retrieval on a list.

commit b8f5bfc1ae1d34b0426f2a01217fde663505225b
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Fri Apr 30 12:46:26 2021 +0200

    Add a license boilerplate to files that are missing one
    
    Specifically, this change adds the standard boilerplate to any file that
    satisfies the following heuristics:
    
    - No lines match "Licensed to Crate.io GmbH"
    - The file is a source file (i.e., not a generated or intermediary file)
    - The file is not taken from (or derivative of) a third-party source
    - The file might reasonably contain boilerplate comments
    - The file is not empty
    
    Some files are very short (e.g., `blackbox/bin/test-all`) but were included for
    two reasons:
    
    - There is no significant cost to having a boilerplate
    - In the future, if someone copies the file as the starting point for a new
      (more significant) file, the boilerplate will already be in place and this
      may prevent a new file from being added that is missing the boilerplate

commit df77bd0147b960da9e905351dc6a8c833c5ac26b
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Fri Apr 30 11:20:57 2021 +0200

    Update license boilerplates to state company name in full
    
    Specifically, this change updates (and standardizes) boilerplates that
    referenced "Crate.io GmbH" without stating the name in full (e.g., "Crate").
    
    This change was done using my editor's multi-file find and replace
    functionality. For every file that matched my inclusion criteria, I replaced
    the whole boilerplate with the full correct version.

commit ad07b33ce508826071abfab094407b9231525e65
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Fri Apr 30 11:15:28 2021 +0200

    Update license boilerplates to remove "Technology" from company name
    
    Specifically, this change updates (and standardizes) boilerplates that used the
    word "Technology" when referencing "Crate.io GmbH" (e.g., "CRATE Technology
    GmbH").
    
    This change was done using my editor's multi-file find and replace
    functionality. For every file that matched my inclusion criteria, I replaced
    the whole boilerplate with the full correct version.

commit b3b25a9032fd960038bab842687d3b4ee27740f0
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Fri Apr 30 11:04:50 2021 +0200

    Update license boilerplates to standardize company name case
    
    Specifically, this change updates (and standardizes) boilerplates that
    referenced "Crate.io GmbH" using some variation of non-standard capitalization
    (e.g., "Crate.IO GmbH" and "CRATE.IO GmbH").
    
    This change was done using my editor's multi-file find and replace
    functionality. For every file that matched my inclusion criteria, I replaced
    the whole boilerplate with the full correct version.

commit 2d752280ec5fefa2ba74ba2ae8229d978f51456f
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Thu Apr 29 19:53:02 2021 +0200

    Update license boilerplates to standardize commercial clause
    
    Specifically, this change updates (and standardizes) boilerplates that do not
    contain the phrase "commercial license agreement".
    
    This change was done by hand (using `grep`). For every file that matched my
    inclusion criteria, I replaced the whole boilerplate with the full correct
    version.

commit 8978986754f00d35dad7cc50b1854eac052d7618
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Apr 28 16:27:35 2021 +0200

    bp: Move metadata storage to Lucene
    
    https://github.com/elastic/elasticsearch/commit/22ba759e1f37ef2607674074973a554f23730b8f

commit 8767ed44295d9a27ed26d1ae8ac840c311be6bc0
Author: Baur <baurzhansahariev@gmail.com>
Date:   Mon Apr 26 13:10:25 2021 +0200

    Implement array_sum scalar function

commit 1cbba88b114c2f7ac052d543d52780579aed1208
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 4 17:55:24 2021 +0200

    Fix number_of_routing_shards validation
    
    The `numberOf_routing_shards` validation used the default value of
    `INDEX_NUMBER_OF_SHARDS_SETTING`, which is a fixed `5`.
    
    This adjusts the create table logic to set the effective
    `number_of_shards` value eagerly to make it available for the
    validation.

commit d4eba8ec3bf0ee27ba972715a5702389dd2af5f4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 5 13:15:30 2021 +0200

    Add changes entry for node-to-node encryption

commit 7be8b58327e89dc05d33c45072f3d57cb1c63b97
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 21 11:08:47 2021 +0200

    Add node-to-node SSL/HBA integration

commit d86c423cfe4ac84b6cf80b33aba3d01c2037b9c3
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Thu Apr 29 17:11:25 2021 +0200

    Copyedit new node-to-node encryption docs
    
    Specifically:
    
    - Minor edits affecting multiple files:
    
      - Rephrasing to use the active voice (e.g., "you can do x" vs "x can be
        done")
      - Use of hyphens (e.g., "multi-zone" vs "multi zone")
    
    - Add labels to `hba.rst` so other pages can link directly to the
      "Node-to-node communication" section
    
    - Rework the "Node-to-node communication" section:
    
      - Introduce the example with a short, easy-to-scan sentence
      - Add a link to the multi-zone how-to guide
      - Explain the example in detail in a subsequent para
      - Specify that `ssl.transport.mode` must be set to `dual`
      - Move the note about trust methods to a `NOTE` admonition
    
    - Rework the `ssl.rst` intro:
    
      - Switch to active voice (as above)
      - Use an "open" style RST list (i.e., paragraph spacing is used when styled)
        per https://github.com/crate/crate-docs/blob/main/style/rst.rst#open
      - Rework mention of `dual` (see below for rationale)
      - Split modes into a sublist for better clarity
      - Expand and move multi-zone node to a `NOTE` block for better visibility
    
      I found it confusing that only the second mode was given a name
      (`dual`). After reading the description of the setting, I considered saying
      that the first mode is called `on`.
    
      Taken together, "off", "dual", and "on" seem okay to me. However, in
      isolation, I think there is a disparity between "on" and "dual" because "on"
      is normally paired with "off" and "dual" is normally paired with "single".
    
      To get around this, I reworked it so that `ssl.rst` frames the choice (after
      enabling SSL) as one of two (unnamed) modes. But, so as not to lose the
      information about one of them being tied to the `duel`, I added explicit
      parentheses referencing the three-value `ssl.transport.mode` setting.
    
    - Modify `node.rst`:
    
      - Add a label for `ssl.transport.mode` so that we can link to this setting
      - Expanded the description for clarity
      - Added a `SEEALSO` admonition linking to the "Node-to-node communication"
        section so that readers can see how `dual` behavior can be configured (it
        is not obvious by itself what `dual` would be used for)

commit e1b2b87c3eeebd48359c244a8020cf5beca5e7c7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 28 11:26:49 2021 +0200

    Add docs for transport SSL

commit a7416f9861a12a0a8c8bf9ac57c2bbbf69f843da
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 1 10:58:09 2021 +0200

    Support SSL in node-to-node communication
    
    First step to support node-to-node encryption support.
    Documentation and HBA integration is missing

commit 93432c8a48aec80f7e7a3422ccf0640bb9d43522
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 5 13:29:31 2021 +0200

    Deprecate the max_local_storage_nodes setting

commit 2c67256d46cc475a3c6f019343b76d385ba000ad
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 4 10:35:06 2021 +0200

    Use pcks12 keystore instead of jks in tests
    
    JDK defaults to pcks12 for a while and the `keytool` emits a warning
    that `pcks12` should be used.

commit 3ce3430105101e0576e1e116ed354ad4c18e321d
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Thu Apr 29 18:38:57 2021 +0200

    Remove `CODEOWNERS`
    
    The `@crate/tech-writing` team no longer exists.

commit fceb9fb984b6379da7a666504b38e9ab4a228ea2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 3 16:42:15 2021 +0200

    Reflect 4.5.1 release

commit ff87a9ccc91a02809a0a062cab7e435f51ad0877
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 3 11:42:19 2021 +0200

    Don't prune unused table functions
    
    We always need to evaluate the functions so that the result-set is
    extended to the amount of rows returned by the table functions.
    
    Closes https://github.com/crate/crate/issues/11333

commit 541627111f4652fd2638e0260353a3ef250fe063
Author: Baur <baurzhansahariev@gmail.com>
Date:   Mon Apr 26 13:10:25 2021 +0200

    Implement array_min and array_max scalar functions.

commit fa37c7e457a3b4d6498f4daf2de5b9e912bd2629
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 3 11:20:10 2021 +0200

    Move object[] mapping changes entry to 4.1.0
    
    The change was made with the 4.1.0 release, but the changes entry
    accidentally ended up in 4.2.0.

commit 5fab7a8b3b24638619388789a466bc83dd2ab770
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 29 18:39:54 2021 +0200

    Update the bundled JDK to 16.0.1+9

commit 70a32ad2eae8c8cb5b77dd13aa9c2a31f34ff35f
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Apr 29 18:36:15 2021 +0200

    Fix Reference position's streaming to nodes < v4.6.0
    
    Follow up of https://github.com/crate/crate/commit/d7c1b52caf2

commit 87b18529d4d09c71a739ac64f752497985e94933
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Tue Apr 27 10:48:53 2021 -0400

    accept start-transaction statements

commit 97637be9df1090c694db33e2b1aa3061ea3a7421
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 26 18:40:42 2021 +0200

    Split UserLookup and UserManager
    
    This will allow us to instantiate the `HostBasedAuthentication` class
    before the injector has been fully configured. This will be necessary to
    make `Authentication` available within the `Netty4Transport` to have
    HBA/SSL/transport integration.

commit d22d3d2c83e0fe83c76bc28865cb7ea948df109e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 27 14:32:18 2021 +0200

    Rename test base classes to clarify they're not tests
    
    - `AbstractScalarFunctionsTest` → `ScalarTestCase`
    - `SQLTransportIntegrationTest` → `SQLIntegrationTestCase`
    - `AggregationTest` → `AggregationTestCase`

commit 058b7150707ea80195524ad83aafa68e7bc12cd9
Author: Baur <baurzhansahariev@gmail.com>
Date:   Thu Apr 15 09:41:26 2021 +0200

    Add Windows support for gradle tasks

commit 0e3e786e4d5190c57ccb4575a61e332564ff7268
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Mon Apr 26 10:46:16 2021 -0400

    block default accesses to sys related entries from pg_catalog

commit bd5111c0592ff2a24c0ee05d042133ccef09cba5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 22 11:20:09 2021 +0200

    Turn es-repository-azure into a runtime plugin
    
    Partly a workaround for https://github.com/crate/crate/issues/11102
    For some reason the jar verification for the es-repository-azure
    dependencies fail if `:app:run` is used.
    
    Turning the azure plugin into a runtime plugin means it won't be loaded
    as part of `:app:run` and so the error doesn't happen.
    
    Downside is that the functionality won't be available if CrateDB is
    launched with `:app:run`.

commit ecaa371d57096eadde8c676c326c8ffe11f9f83d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 22 11:01:03 2021 +0200

    Update azure libs
    
    https://github.com/Azure/azure-storage-java/releases

commit 490fb5afa485bc2e19d6ab750375257464be9de6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 23 13:10:37 2021 +0200

    Fix NPE in array_to_string
    
    The array argument could be null.

commit 54e94537cdb7c3f0a95642e7e823cd2523522fbc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 22 10:02:32 2021 +0200

    Remove outdated 3VL warning in NOT operator docs
    
    Closes https://github.com/crate/crate/issues/11154

commit a7898038f43798b7f0eac859565e321cca9b81ac
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri Apr 23 22:44:30 2021 +0200

    Add closed column to sys.shards table
    
    The closed column shows the state of the table associated with the
    shard.

commit 0eb7ae0b21f1a72aa1151ef31831f42cbe7cddc2
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Apr 23 14:43:59 2021 +0200

    Fix ssl connect tests, re-generate expired certifications
    
    The certifications used inside the blackbox ssl connection tests
    expired, generated new ones.

commit 3629af3fa357f7b74327761fe2092fb3ebc08e7c
Author: piotr.rzysko <piotr.rzysko@gmail.com>
Date:   Thu Apr 22 20:05:04 2021 +0200

    Add the `array_to_string` scalar function

commit 760b4054d6e406f1f0668f294693d123b9ba1835
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Fri Apr 16 15:01:35 2021 -0400

    any user can access pg_catalog by default

commit 8f54f42924628c58e4f14b947b1ba54195902782
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 22 10:27:03 2021 +0200

    Add a attach configuration to launch.json
    
    Can be used with `:app:runDebug`

commit c4cd83870d74d0d704941bb8c16e9435235356a2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 22 10:29:47 2021 +0200

    Update graalvm to 21.1.0
    
    https://www.graalvm.org/release-notes/21_1/

commit 2468267e24e41228013f1f65264e704fea898951
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 21 17:45:34 2021 +0200

    Simplify SolverReturnStatus merge

commit bbdf4ebf4cf6be5cfd77606e756537194b007483
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 21 17:08:52 2021 +0200

    Make candidates in function signature matching lazy
    
    `matchFunctionCandidates` iterates a single time over the incoming
    candidates, so we can avoid some `collect(Collectors.toList())` calls
    and use `Iterable` instead.

commit dec43818a1f01d617748fcb0904a30e5519e7a53
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri Apr 16 11:54:10 2021 +0200

    bp: Omit writing index metadata for non-replicated closed indices on data-only node
    
    https://github.com/elastic/elasticsearch/commit/38f02217f00

commit 9c164c5a16da457d8a3bb4edf5b20d84e3307095
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri Apr 16 11:54:31 2021 +0200

    bp: Always use last properly persisted metadata as previous state
    
    https://github.com/elastic/elasticsearch/commit/8360248

commit b084e2f59a52747517c396154adb8e6fcc226efd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 21 17:58:12 2021 +0200

    Ensure varchar(n) type can match signatures with text
    
    Fixes https://github.com/crate/crate/issues/11296

commit 1a92b009f3ea69dae52b95824fb8b869a847be6e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 21 11:57:38 2021 +0200

    gradle: Make intellij find test-fixture sources
    
    Follow up to https://github.com/crate/crate/pull/11290

commit 5169cae6cbcd5fb2bf41431229ccf0bb35df4b7c
Author: Johannes Faigle <johannes.faigle@crate.io>
Date:   Tue Apr 20 13:39:27 2021 +0200

    Remove warning that UDFs are not backed up
    
    Support for restoring UDFs was added with 4.5.0

commit 5556959620a8f3d5e9a872bf163a42f46044dc1b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 20 15:10:13 2021 +0200

    Remove jcenter repository
    
    > The RepositoryHandler.jcenter() method has been deprecated. This is
    > scheduled to be removed in Gradle 8.0. JFrog announced JCenter's
    > shutdown in February 2021. Use mavenCentral() instead

commit 5590a6e26167f0392b780d132b8f2fa81558a067
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 20 11:28:16 2021 +0200

    Use java-test-fixtures plugin to configure re-usable testing code
    
    Should fix an issue in buildship which causes eclipse to have compile
    errors.
    
    And it would also make it easier to distribute the testing framework for
    plugin development.

commit 9ce1229b4f3f0dace23578bde8c807939a3701f1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 19 17:51:00 2021 +0200

    Update gradle to 7.0

commit 49fde479a2333bc728135914bffd2d729d13e76d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 19 17:07:03 2021 +0200

    Fix remaining gradle deprecation warnings
    
    `--warning-mode all` no longer complains with these changes.
    Should also fix https://github.com/crate/crate/issues/11105

commit 5690b4a4bafc3ef2d9fcfadc998d4cde74d6acb3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 19 12:17:50 2021 +0200

    gradle/app: Replace deprecated compile/runtime directives

commit 53e97fbb709ae8f827eabc280261214a0c107418
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 19 11:41:35 2021 +0200

    Replace deprecated `compile` in cli build

commit 6c9b437852accc5030c744906239ee8b2b42f9ae
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 14 15:53:55 2021 +0200

    Update spatial4j to 0.8
    
    https://github.com/locationtech/spatial4j/releases/tag/spatial4j-0.8

commit a6d37ea0631fdb3850847aff4b46b0d15352bc90
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Wed Apr 14 17:03:14 2021 +0200

    Fix JAVACMD within "crate-node" program on Linux

commit 3e9e2d55bc1b17c021d0110106e4a3b75fa7233b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 14 15:31:50 2021 +0200

    Update to Lucene 8.8.2
    
    https://lucene.apache.org/core/8_8_2/changes/Changes.html

commit 2ead784ea7d96da562c1ad05d121570d519a7b39
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 14 14:27:29 2021 +0200

    Replace elasticsearch.version in plugin descriptor with cratedb version

commit 920f0ff698c663f390b17aa9baed767d6e099584
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 14 12:00:13 2021 +0200

    Merge PluginLoader mechanisms
    
    This removes the Crate specific `PluginLoader` and instead uses the ES
    mechanism to load the jmx-monitoring, lang-js, and functions extensions.
    
    `extensions` used a custom plugin loader mechanism.  The idea was that
    we'd distinguish between CrateDB plugins and ES plugins. But with the
    integration of the ES code into `server` there is no longer a strong
    case for having two loaders. Instead the ES plugin loading mechanism *is
    the* CrateDB plugin loading mechanism.
    
    It also looks as if our extension loading mechanism couldn't include
    additional dependencies which becomes a problem when trying to move from
    `compile` and `runtime` directives in the gradle configuration to
    `implementation`, `compileOnly` or `runtimeOnly`.

commit 9ddd28dd5dde88b213fc1756b45bd2b3c9f404a9
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Apr 14 12:11:29 2021 +0200

    Remove duplicate aggregation examples at the "Selecting data" docs
    
    Available aggergations are documented in detail at the dedicated
    `aggregations.rst` documentation. So 1 example inside the
    general "Selecting data" section shopuld be enough.
    
    Closes #11243.

commit 108b1f660b3ba00d302a8dd957cf94e205c8e59a
Author: Minsoo Jee <jeeminso@gmail.com>
Date:   Wed Apr 7 14:19:51 2021 -0400

    include closed tables in SysShards
    
    temporary ShardCollectorProvider will be created for closed tbls

commit 5a8385b280cd6411cd54764471c4284fc2e48d8b
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Apr 14 10:28:52 2021 +0200

    Relax assertion on segment Information test to avoid flakiness

commit 8a6a72e5f6b5585c60d8de9fa5848617dd4e1edc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 13 16:58:19 2021 +0200

    gradle/server: Replace deprecated `compile` dependency declarations

commit 8a283e37cd9378b8efa1db71f3806b04b5c04d3b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 13 11:36:56 2021 +0200

    Remove AssertingLeafReader classpath order requirement
    
    Instead of implicitly overriding the `AssertingLeafReader` by putting
    our custom variant first in the classpath this changes the test setup to
    load our version.
    
    The build configuration is already complex enough, don't need to
    complicate it further with hacks.

commit ea76297927ca6db70c33b4e05e31f73eb1e73c5f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 13 11:46:48 2021 +0200

    Fix flaky testPipelineConfiguration
    
    Failed sometimes:
    
        java.lang.IllegalStateException: availableProcessors is already set to [32], rejecting [32]
            at __randomizedtesting.SeedInfo.seed([C7D7B92910D2EA4B:9BA1905F600FB093]:0)
            at io.netty.util.NettyRuntime$AvailableProcessorsHolder.setAvailableProcessors(NettyRuntime.java:51)
            at io.netty.util.NettyRuntime.setAvailableProcessors(NettyRuntime.java:87)
            at org.elasticsearch.transport.netty4.Netty4Utils.setAvailableProcessors(Netty4Utils.java:72)
            at org.elasticsearch.http.netty4.Netty4HttpServerTransport.<init>(Netty4HttpServerTransport.java:245)
            at io.crate.protocols.http.CrateHttpsTransportTest.testPipelineConfiguration(CrateHttpsTransportTest.java:110)

commit 739537f2782745c61ab63b1f05847763593962ad
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 8 16:21:13 2021 +0200

    Ensure existing _meta information in mapping is preserved on ALTER TABLE

commit 7278db232fb365b99aede9562c4e31a3f27b96e5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 12 14:59:58 2021 +0200

    Mention CHECK constraints in CREATE TABLE reference

commit a685018b09184ec27f6da201a93c83d5a2a42f6f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 12 14:53:02 2021 +0200

    Integrate DROP CONSTRAINT docs in ALTER TABLE
    
    `DROP CONSTRAINT` is not a top-level statement, the reference
    documentation should reflect that.

commit b5b1c4ecb17ddeb90708637542c181d6092412e1
Author: Johannes Faigle <johannes.faigle@crate.io>
Date:   Mon Apr 12 09:48:52 2021 +0200

    Remove reference to CMS GC
    
    CMS was removed with JDK 14 https://openjdk.java.net/jeps/363

commit 9194574698061bd796a65db7cdaf2f7f9c40a8bb
Author: Johannes Faigle <johannes.faigle@crate.io>
Date:   Mon Apr 12 09:32:47 2021 +0200

    Update outdated getting-started urls

commit 46ce041217c9bdc1d141490428fc580009b0ff17
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 8 16:48:36 2021 +0200

    Avoid creating unused tables in AlterTableAddColumnAnalyzerTest
    
    This adds more boilerplate to the test cases but has some advantages:
    
    - The schema of a table is visible right next to the test scenario,
      making it easier to reason about the scenario.
    
    - Setup is cheaper because it doesn't create unused tables
    
    - Makes it easier to write and use a table definition that is suited for
      the test, as you don't have to make a trade-off between adding yet
      another table to the long list of tables or figure out a neat way to
      modify the schema of a pre-defined table without affecting the tests
      already using the schema.

commit 1935ddc496c68b73ba18b299256b27356630b0ef
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Apr 8 10:19:39 2021 +0200

    bp: Do not force refresh when write indexing buffer
    
    https://github.com/elastic/elasticsearch/commit/0510af87868fd4951449ed224758d4cc184b6680

commit bdd07599e159f8f6f1bb6c1b4437f62a3ca312b5
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Tue Apr 6 20:14:44 2021 +0200

    Improve references within documentation about "concepts"

commit ce0f41a3139ff717106c6d86134962dab31ab583
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Mar 23 16:48:01 2021 +0100

    bp: Import replicated closed dangling indices
    
    https://github.com/elastic/elasticsearch/commit/40801af88406ad130904940604407a0191c0d92e

commit ee8c8b42938c0babe8069ae3a43f3ae1681ad793
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Mar 23 16:09:23 2021 +0100

    bp: Deleted docs disregarded for if_seq_no check
    
    https://github.com/elastic/elasticsearch/commit/fdd413370ef4401cac20596a18b9c213eae16f65

commit ccda3ae20da83b0bd9bda3c17aa35b71a2bf07e7
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Mar 23 15:43:49 2021 +0100

    bp: Declare remaining parsers `final`
    
    https://github.com/elastic/elasticsearch/commit/4c1f1b2acabb87254128995eeefa4483d55fda00

commit ebd763228da2ea051368ccb2ff0c1ab411016b82
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Mar 23 15:25:38 2021 +0100

    bp: Remove some Dead Code from Discovery Plugins
    
    https://github.com/elastic/elasticsearch/commit/77fd51f30ba544688c034c6aa06d1385a64be913

commit 5d584b397e8be463ac0d13e3fe5594628d1bdf8b
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Mar 23 11:19:15 2021 +0100

    bp: Enhance TransportReplicationAction assertions
    
    https://github.com/elastic/elasticsearch/commit/671fefaf59e3e56f5656d9280fd6e0cc2d119ecf

commit aa15f5b16078edb37739b7701aff23a7cb0d0aaf
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Mar 23 10:34:37 2021 +0100

    Adapt backport file

commit 0ed04256f0825cb95dd832890fac290b2c18486c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 7 10:22:57 2021 +0200

    Update netty to 4.1.63
    
    https://netty.io/news/2021/04/01/4-1-63-Final.html

commit 01bd1c9f028aff38c78972e30c5bda80148f9433
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Wed Apr 7 12:12:58 2021 +0200

    Update Pygments library
    
    This relates to a security report submitted by Dependabot.
    - https://github.com/advisories/GHSA-pq64-v7f5-gqh8

commit 7188579cb1be95578e815ca2b5df9826d008b76b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 6 16:56:33 2021 +0200

    Add support for reading cgroup stats from v2 cgroup hierarchy
    
    See https://www.kernel.org/doc/html/latest/admin-guide/cgroup-v2.html
    
    Closes https://github.com/crate/crate/issues/11197

commit 0d4aae5447cbbfde9bc6539919cd72dfb73f019b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 6 11:48:27 2021 +0200

    Allow CREATE TABLE AS as normal user
    
    Closes https://github.com/crate/crate/issues/11199

commit 7e140f7f7357e7d776d2c9cbb1a1b1e00153c73d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 1 17:03:42 2021 +0200

    Merge CrateSetting and Setting
    
    The `CrateSetting` wrapped a `Setting` and extended it with a type and a
    path. This merges the two classes into one, adding a type to all
    `Setting` instances.
    
    We still need the dataType information in the `SysClusterTableInfo`
    because the `SystemTable` framework requires type information.

commit 75eae29fe2c800e8717da3210f76e8583ae2ceb4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 6 11:22:15 2021 +0200

    Mute testSysNodesCgroup
    
    Broken on some systems, see https://github.com/crate/crate/issues/11197

commit 8a28260f996b01ab1e9b478e8e4d69ef7aad6e99
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 6 11:01:18 2021 +0200

    Adapt mergify backport config for 4.5

commit 2a300d4fb0776accf1e17e3c35f3b032ca2cc2cf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 1 12:24:22 2021 +0200

    Rename SslConfigSettings → SslSettings
    
    Having both `Config` and `Settings` in the name feels a bit redundant.

commit bead982709399a9a040fd25b96ca76aef099c3b0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 1 12:13:40 2021 +0200

    Merge SslConfiguration into SslContextProvider
    
    The `SslConfiguration` class was primarily concerned with creating a
    `SslContext` and the only other non-test class using it was the
    `SslContextProvider`. Both indications that this should be one class.

commit 7af14cb980f1c0118fb617d7a3a00ffb3ed69f77
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 1 12:06:45 2021 +0200

    Merge SslContextProvider & SslContextProviderImpl
    
    We no longer have a second "no-ssl available" implementation, so we can
    merge the interface and the remaining implementation.

commit d7c1b52caf21caba7d348dcc7c652e8bd302eef7
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Mar 31 09:17:15 2021 +0200

    Assign columns position while creating table metadata information
    
    Moves the (BWC) logic of assigning correct column position into
    the DocTableMetada instead of doing this only on information_schema
    iterables. This ensures that a `Reference.position()` is already
    set with a valid value, thus making it non-nullable.

commit e90cbe07c74f9c53d9d4200cb0509d88e8d42a70
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 31 11:53:38 2021 +0200

    Fix some generic warnings in Transport

commit e1aa90635a492922563cf6f8e015b69cf6e85254
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 15 16:14:49 2021 +0100

    Improve insert-from-query throttle/ingestion control behavior
    
    This improves the current throttling mechanism by dynamically adapting
    the concurency limit and by taking the round trip time into
    considerating when pausing operations.
    
    The mechanism so far was too aggressive in some cases and led to a
    mostly idle cluster taking a long time to process insert-from-query
    operations.
    
    The behavior so far:
    
        n1:
         q1  -> inserts to n2
         q2  -> inserts to n2
         q3  -> inserts to n2
         q4  -> inserts to n2
         q5  -> inserts to n2; concurrency limit reached, pause
         ... now q1 to q5 start competing and all but one go to sleep (starts at 1000ms, with exponential backoff)
    
    New behavior:
    
    - The concurrency limit is dynamic. (Currently between 2 - 2000, we might
      want to tune these numbers)
    
    - We track the round-trip time for the requests by target node.
      This round-trip time is used to adjust the concurrency limit and also
      as sleep intervall in case the number of inflight requests exceeds the
      concurreny limit.

commit 8ddf9f4f28ef41a888c02bfb79dfc07d04520103
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 31 21:39:42 2021 +0200

    Bump version to 4.6.0-SNAPSHOT

commit 61dc21130a89a4ca9a0d5485bc1d4ab3f6b76557
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Wed Mar 31 22:39:47 2021 +0200

    Update `.gitignore` for macOS Icon files
    
    I customize some of the folders on my desktop to help me visually distinguish
    them. Unfortunately, this means macOS creates a hidden file named `Icon\r\r`. I
    am not sure why those last two characters are there, but they are.

commit f33c496b29318db60b5219ba588c5341172ba725
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Wed Mar 31 22:37:03 2021 +0200

    Update `README.rst` to reflect CrateDB Docker image homepage update
    
    Specifically:
    
    - Mirror the changes here: <https://github.com/docker-library/docs/pull/1905>

commit 6b05e0f57df6be25d70342a43ecfea9ba4c7b948
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 31 20:06:55 2021 +0200

    Bump version to 4.5.1-SNAPSHOT

commit 5c04cce568805e1937735df5b7b539f1727d175f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 31 11:40:02 2021 +0200

    Remove ConcurrentMapLong
    
    Having a specialized variant somehow implied that it avoids boxing, but
    it didn't. The `ConcurrentHashMapLong` implementation delegated to
    another regular `ConcurrentMap`

commit 13278dac8529de26eb94180708d6a4a0c756320b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 31 10:24:13 2021 +0200

    Update netty to 4.1.62
    
    - https://netty.io/news/2021/03/30/4-1-61-Final.html
    - https://netty.io/news/2021/03/31/4-1-62-Final.html

commit 4953530eefe66a2b311246d3fb443b31babbe4c7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 29 11:32:56 2021 +0200

    Set tableOid in RowDescription only if all result columns have positions
    
    With 4.4.0 we started sending the table-oid and attnum information in
    the RowDescription.
    Unfortunately, sending the table-oid causes the JDBC to re-request field
    meta data each time a metadata property is accessed because the caching
    layer built into pgjdbc is skipped if the query that uses the table-oid
    and attnum leads to an empty result.
    
    Closes https://github.com/crate/crate/issues/11156

commit 57744c7157f1bcbdb58677d7401b48118aedcbff
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 23 11:40:23 2021 +0100

    Remove materialize from Buckets
    
    The method was only used in tests

commit e3b80c777e7ff711256ec036f14587c3f2818010
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 22 18:01:48 2021 +0100

    Replace guava Streams with jdk StreamSupport
    
    Relates to https://github.com/crate/crate/issues/10510

commit 8ccb51f903e7ef7446f3665d737afa925c21d9f5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 22 17:39:41 2021 +0100

    Replace ImmutableSet from guava with jdk Set
    
    Relates to https://github.com/crate/crate/issues/10510

commit ad6af9dfb7ae234f8b4016a3bceb2e2f5bd115fb
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Tue Mar 23 17:02:47 2021 +0100

    Cross-link uses of the word "expression" in the docs
    
    This commit follows up on the addition of the "subquery" term added to the
    glossary. For eligible uses of the word and related words, links to the
    glossary have been added.
    
    Eligible uses are limited to the first mention of the term per section in a
    document
    
    Some RST fixes and improvements accompany these changes where they were spotted
    near to existing changes being made.

commit b88fa557ff498dd8f60b5b55c3098eefdc684b0a
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Fri Mar 19 13:53:32 2021 +0100

    Cross-link uses of the word "subquery" and "subselect" in the docs
    
    This commit follows up on the addition of the "subquery" term added to the
    glossary. For eligible uses of the words "subquery" and "subselect", links to
    the glossary have been added.
    
    Eligible uses are limited to the first mention of the term per section in a
    document
    
    Some RST fixes and improvements accompany these changes where they were spotted
    near to existing changes being made.

commit a36b38cc1af1db89f0035a70ebce8bd44109c0b4
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Tue Mar 23 13:38:18 2021 +0100

    Add animated GIF for the Admin UI in CrateDB 4.5

commit e57fec61cacb99ea063bd85a4eb0b5f02b725fc5
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Tue Mar 23 11:43:08 2021 +0100

    Add deprecation notice to license-related system information
    
    The deprecation note was missing from these values. This has been fixed.

commit ada70bcedf8445abc4115e35a11a0142cb8f639d
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Thu Mar 18 18:18:45 2021 +0100

    Cross-link uses of the word "expression" in the docs
    
    This commit follows up on the addition of "expression" terms added to the
    glossary. Links to the existing docs for expression related terms have been
    added where possible. For all other eligible uses of the word "expression",
    links to the glossary have been added.
    
    Eligible uses are limited to the first mention of the term per section in a
    document
    
    Some RST fixes and improvements accompany these changes where they were spotted
    near to existing changes being made.

commit fb7a5337ef75d60c5bdf26c1f54a9278f5fe03a6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 23 12:20:39 2021 +0100

    Release 4.5.0
    
    Co-authored-by: Michael Kleen <michael.kleen@crate.io>

commit cccee827b08b45123b62c4fe527d0579da8b4421
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 23 09:53:45 2021 +0100

    Reflect 4.4.3 release

commit 526d78097b5c3e78ec0613ec7fe4351e687b39a1
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Mar 22 15:06:19 2021 +0100

    Add integration test to test if translog was trimmed correctly

commit cdebc232da717df52845fd002870b8434e7f426b
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Feb 24 16:28:17 2021 +0100

    bp: Ensure relocating shards establish peer recovery retention leases
    
    https://github.com/elastic/elasticsearch/commit/d02afccd983

commit 7a5040f9f8cb4b2c19348641be6213e6fd559a88
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Feb 25 14:17:03 2021 +0100

    bp: Account trimAboveSeqNo in committed translog generation
    
    https://github.com/elastic/elasticsearch/commit/972b81f8a9d

commit a6d63bbad6b557129c033e4b24910e64fed69d05
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Thu Mar 18 14:53:00 2021 +0100

    Improve cross-references for "value expression" term

commit 5aa8b9211e6cca3719edbf4080ca2a32b0504279
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Thu Mar 18 14:33:18 2021 +0100

    Improve the documentation of binary and unary operators

commit 616b6dcb5809adf709f7c48093e55182a73fa708
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Wed Mar 17 15:53:41 2021 +0100

    Add more terms to the glossary
    
    Specifically:
    
    - Binary operator
    - Evaluation
    - Expression
    - Regular expression
    - Statement
    - Subquery
    - Subquery expression
    - Subselect
    - Unary operator
    - Value expression
    
    Some improvements to the glossary.rst wording are included.
    
    Additional changes have been made to the main docs to accomodate links added to
    the glossary.
    
    This commit is limited to the glossary.rst additions only. I will add
    cross-references to these terms in subsequent commits.

commit fdfd53c561dba7d26ec0d5d4189eb531bc43fc11
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Tue Mar 16 17:10:08 2021 +0100

    Added "function" to the glossary plus related improvements
    
    Specifically:
    
    - A glossary entry for "function" and "multi-valued function" (plus
      definitions)
    
    - Cross-references linking to the glossary entry
    
      i.e., The docs mention "function" in the generic sense, I added a link to
      the glossary entry for "function"
    
    - Cross-references linking to the main docs for each specific type of function
      (instead of multiple redundant glossary entries for the different types of
      function)
    
      i.e., The docs mention a specific function like "aggregation functions" I
      added a link to the main docs on aggregation functions.
    
      In some instances, this involved folding a "see X section" into a more
      natural in-line link or, for example, pulling a it out into a SEEALSO
      admonition.
    
    - Improvements for RST labelling (for consistency and clarity)
    
      e.g., Changing "routing" to "sharding-routing" (and making sure that all
      labels in the main sharding doc are prefixed with "sharding-").
    
      This includes adding labels where they were missing.
    
    - Improvements for RST formatting
    
      I took the opportunity to improve the RST as I went through each file that
      needed cross-references.
    
      Some changes are minor formatting improvements in-line with our RST style
      guide (e.g., line length, newlines before headings, proper markup for
      literals, links list ordering, and so on). Other changes fix RST syntax
      errors.
    
    - Minor copyedits
    
    My policy for when to add a cross-reference and when not to add a
    cross-reference is as follows:
    
    - Add a cross-reference the first time a term is used per section
    - Do not add a cross-reference for any subsequent uses of the term in that
      section
    
    I have done this per section and not per page because I expect readers to skip
    between specific sections as opposed to reading whole pages in one go. For this
    reason, I expect that some readers would miss a cross-reference if there is
    only one per page.
    
    I have restricted the cross-references to once per section because I think that
    too many cross-references would be distracting.

commit 7436990c8f514e040533abf55046b8bdb423bacb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 22 16:58:05 2021 +0100

    bp: Relax translog assertion in testRestoreLocalHistoryFromTranslog
    
    https://github.com/elastic/elasticsearch/commit/f0b7c01a8956cbbe81874b41f338ae05f37bbfb0
    
    Fixes a flakyness we had
    
        java.lang.AssertionError:
        Expected: <283>
             but: was <282>
            at __randomizedtesting.SeedInfo.seed([84683FEB084C62A:8DAC98B0BBFC5B2B]:0)
            at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
            at org.junit.Assert.assertThat(Assert.java:956)
            at org.junit.Assert.assertThat(Assert.java:923)
            at org.elasticsearch.index.engine.InternalEngineTests.testRestoreLocalHistoryFromTranslog(InternalEngineTests.java:4638)

commit 21a432360c38f4a3796b3c034fc0cd17d9aa469a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 22 15:51:54 2021 +0100

    Add a `gen_random_text_uuid` scalar
    
    Closes https://github.com/crate/crate/issues/11039

commit 017259e3068465e192d5d6765b3361260ef8624d
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Mar 22 14:40:09 2021 +0100

    Clean up up backport file

commit 9101e9051d6c2fe120431eb75af83f0c3b58803b
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Mar 17 16:14:48 2021 +0100

    Add support for restore metadata and settings from snapshots
    
    Extended the `RESTORE` statement with more keywords to fine tune
    what to restore from a snapshot other than tables.
    The existing ``ALL`` keyword will restore everything now, not only
    tables like before. To restore all tables only, a new ``TABLES``
    keywords is introduced.
    Each ``data_section`` can be restored standalone and can also be combined
    with others to restore multiple concrete data at once.
    
    Closes #10822.

commit 0bc7785d2c049801bbe4c1f06e0aa67182e49932
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 22 11:24:51 2021 +0100

    Add pg_postmaster_start_time
    
    To make datagrip a happier.

commit 10cbed3e758cd6eea8109dce40c96760ac752b18
Author: BaurzhanSakhariev <baurzhansahariev@gmail.com>
Date:   Thu Feb 25 17:37:56 2021 +0100

    9651: Implement current_date Scalar Function

commit 9b6a80748972c36b4c65d8030befc66580f9b476
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 22 11:51:16 2021 +0100

    Fix a JDT compile error in DocValuesGroupByOptimizedIterator
    
    Since the JDK 16 update JDT struggles to do the type inference in the
    DocValuesGroupByOptimizedIterator. It failed with:
    
        The type new Function<Map.Entry<K,Object[]>,Row>(){} must implement the inherited abstract method Function<Map.Entry<K,Object[]>,Row>.apply(Map.Entry<K,Object[]>)

commit abd2f2ee71448bcfab7dee4111fee1c385f2147c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 22 11:21:07 2021 +0100

    Avoid NPE if a channel is closed
    
    As far as I can tell this didn't really cause a real issue. Closing the
    channel is one of the last actions when a client disconnects.
    
    It resulted in the `exceptionCaught` handler being fired and logging an
    error.

commit c13cb7c824ee621737f137a3607687591139c69a
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Mar 17 15:29:20 2021 +0100

    Deprecate translog.retention.age and translog.retention.size settings
    
    These settings wil become obsolete once soft-deletes are becoming
    default. Recovery will then soley use soft-deletes.

commit ad05abf14db8a4398398984d1a0ac4887d3f7a4e
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Mar 17 15:22:31 2021 +0100

    Deprecate soft_deletes.enabled setting

commit 6946142e05a0da1722ef2f4a87dbb24f452fe01c
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Thu Mar 4 16:31:39 2021 +0100

    Adjust "crate-node" auxiliary program to use the bundled Java runtime

commit bf6fd62179c5007b7e17f8a6e78a3e53d9fb5d7b
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Mar 19 17:40:57 2021 +0100

    Upgrade AdminUI to 1.18.0

commit 5f840d6cb0a78ac3f2a678e8d101f32889071b65
Author: Johannes Faigle <johannes.faigle@crate.io>
Date:   Mon Mar 15 19:20:36 2021 +0100

    JMX Monitoring documentation improvements
    
    - use correct placeholders
    - remove duplicate docker image name
    - use double quotes for CRATE_JAVA_OPTS as backslash does not work with
      single quotes

commit 544ba4ef4780573d5c5cfa595f6be8e11f44811c
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Mar 18 22:13:51 2021 +0100

    Fix self-sign certificate generation at the ClientCertAuthTest
    
    Follow up of https://github.com/crate/crate/commit/20c41e8259e
    
    Missed that usage :(

commit 20c41e8259e13ce5fbdb07bbb02ec2f1abbebff2
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Mar 18 17:31:40 2021 +0100

    [Tests] Fix self-signed SSL Certification generation
    
    Due to the usage of JDK 16, we're forces to use the Bouncy Castle
    library which is used by netty as a fallback impl for generating
    self-signed certifications.
    See https://openjdk.java.net/jeps/396.
    
    But BouncyCastle has an issue when used with random locales
    as their date/time string parsing isn't fixed to a locale and some
    locales produce unsupported date/time strings.
    See https://github.com/bcgit/bc-java/issues/405.
    
    To workaround this, we fix the locale to `english` on the related tests.
    
    Follow up of https://github.com/crate/crate/commit/d61b7873cb8.

commit dc5d79a5170a00636ed51a1ef242d6e7d7e77cf3
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Thu Mar 11 17:23:04 2021 +0100

    Add glossary entry for "scalar" and "nonscalar"
    
    Specifically:
    
    - Glossary entries (with definitions)
    - Cross-references linking to the glossary entries
    - Additional cross-references (linking key terms to existing pages in the docs
      as opposed to glossary entries) where it makes sense
    - Minor copyediting
    - Minor RST formatting and labeling improvements

commit 014c1cf8fd9f06c730ea8875a1dc7501489ba52d
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Tue Mar 2 17:44:36 2021 +0100

    Add glossary entry for "operand" and "operation"
    
    Specifically:
    
    - Glossary entries (with definitions)
    - Cross-references linking to the glossary entries
    - Minor RST reformatting improvements

commit 2da1f98de0fe93cb59b77ba12be04f99de5e40f7
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Tue Mar 2 17:20:26 2021 +0100

    Add glossary entry for "shard routing"

commit d61b7873cb834b5e6c1ece1c24332e75f78e2b3d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 17 13:38:55 2021 +0100

    Update bundled JDK to 16+36

commit 2ef1903882d85a7aa36b83180519b382ee49a2e8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 17 11:56:40 2021 +0100

    tests: Dump active tasks on SQL request timeout
    
    Can help figure out why a request ran into a timeout.

commit a900f95ba96f5a57ca6b6aee615a9af8fcf2348d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 15 11:22:55 2021 +0100

    Rework the partitioned table introduction
    
    - Tries to clarify how partitioned tables are structured
    - Tries to point out the advantages and disadvantages, to give users a
      better idea when they can and should be used and what to watch out
      for.

commit 1869220f197a7871da2210cd2c870518f6dd529f
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri Mar 12 15:03:40 2021 +0100

    Prevent invalid version creation for default and empty versions
    
    This prevents invalid version creation for the case where the version
    id is either empty or handled as default value from the Setting.

commit 128a831b1cd7fd4f4eace75271edba1685632930
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri Mar 12 12:05:56 2021 +0100

    bp: Remove pre 6.0.0 support from InternalEngine
    
    https://github.com/elastic/elasticsearch/commit/ebb93db01029698d0204991a9e75be791f9c6306

commit d1eec615ecb2c13565c8ca59bea33bf49e8f116c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 11 13:04:38 2021 +0100

    Revert "Remove AwaitsFix from CoordinatorTests"
    
    This reverts commit a9b8905a88fba1a583fd08c2bc0870754764f6c4.

commit 40002f2db750b35ec7ad7625a1f6f59505e569a5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 11 11:55:00 2021 +0100

    bp: Ensure no circular reference in translog tragic exception
    
    https://github.com/elastic/elasticsearch/commit/a508d3303d59794d77844c780e9f34076b9b3841
    
    This introduces another gap in the backport list, but I think it fixes
    the flaky `DiskDisruptionIT.testGlobalCheckpointIsSafe` case where we
    saw `java.lang.AssertionError: too many nested exceptions` failures.

commit 17c1f8e9859c814d2b10485ead44619a854b77a2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 11 10:18:53 2021 +0100

    bp: Async IO Processor release before notify
    
    https://github.com/elastic/elasticsearch/commit/d062fe9a44e733cbd5bea2a46fdda3060eb48b7d

commit a9b8905a88fba1a583fd08c2bc0870754764f6c4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 10 17:01:27 2021 +0100

    Remove AwaitsFix from CoordinatorTests

commit ff1895eeb581d636e964459ed07f4645dfbd786e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 10 17:40:23 2021 +0100

    bp: Fix testCancelRecoveryDuringPhase1
    
    https://github.com/elastic/elasticsearch/commit/50bd5842c3cbaa3a68f95cb84f6d893c7fabf50e

commit 97b3e88b278c2e3e9f15f0a9da19ab447d1ac3d8
Author: Johannes Faigle <johannes.faigle@crate.io>
Date:   Wed Mar 10 14:12:50 2021 +0100

    Fix NullPointerException when killing non active task
    
    When there is no activeTask for given jobId `ctx` is null and
    `ctx.userName()` produces a NullPointerException

commit 5361f9889bc1c514c262edb23f085bff4bf52c3b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 10 12:06:19 2021 +0100

    Stop sampling on CircuitBreakingException instead of failing
    
    Fixes https://github.com/crate/crate/issues/11107
    
    I first tried a different approach that uses the `numDocs` and
    `getSizeInBytes` information of the index reader to calculate the number
    of samples that safely fit into the available memory.
    
    But the `bytesPerDoc` estimates that I ended up calculating were much
    lower than the `RowAccounting` instances is calculating.
    I suspect it's partly because of UTF-16 `String` vs. utf-8 bytes
    differences.
    
    So I choose this different approach of simply stopping sampling.

commit 3bbb1dd859dcd02e9b15a0cf5d90db6cfe67d19a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 10 14:35:48 2021 +0100

    Fix flaky testPrepareIndexForPeerRecovery
    
    Closes https://github.com/crate/crate/issues/11113
    See https://github.com/elastic/elasticsearch/commit/0c27d0f05a7ef3f1ccc13e03ba5f87a890a2840f

commit 4590ed742751afc16afdcf34abfde1bfee0f437c
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Fri Feb 26 13:03:53 2021 +0100

    Clarify how the routing column works

commit dd3f58a7f1d6f272a4b42b07270cca1e2b116418
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Wed Mar 10 12:07:19 2021 +0100

    Adjust "crate.bat" to work with spaces in directory names

commit 566f02b82127ec6ef5d418d3325e61e1b829d02f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 10 11:29:37 2021 +0100

    Fix trace logging of negative byte values in ChildMemoryCircuitBreaker
    
    The `ByteSizeValue` constructor doesn't permit negative values.
    Activating trace logging for the breaker package resulted in exceptions:
    
        SQLParseException[Values less than -1 bytes are not supported: -2097152b]
        io.crate.exceptions.SQLParseException: Values less than -1 bytes are not supported: -2097152b

commit 162688e4254d4cb86e6a5d5a87c2ca819375dbd0
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Mar 10 09:25:51 2021 +0100

    Fix flaky NodeVersionAllocationDeciderTest
    
    Follow up of https://github.com/crate/crate/commit/fced15a00bf

commit 0f022452282e6f4df9efa00cabf6a696f421d989
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 9 14:50:37 2021 +0100

    Exclude keys with null value from source
    
    This adapts the source generation so that keys with `null` value are
    excluded from the source.
    
    With this change both of the following statements lead to the same
    `_raw` payload:
    
        INSERT INTO tbl (x, y) VALUES (1, null);
        INSERT INTO tbl (x) VALUES (1);
    
    Before this commit, the first variant would lead to a `y` key being
    present in `_raw`, while the second statement ommitted the key.
    
    Closes https://github.com/crate/crate/issues/11109

commit b263c57078b003a1180bc7d2edf647be676ae590
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 9 17:22:16 2021 +0100

    docs: Update broken JMX composite data link

commit 75ba313643318940cbd2973c5343533096550e07
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 9 17:06:10 2021 +0100

    Fix hash join execution plan with empty sys.shards table

commit 6114ca1a55cb6b2d64440133671de727d5db78f4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 2 17:52:42 2021 +0100

    Add the `regclass` data type
    
    Relates to https://github.com/crate/crate/issues/10735
    
    This implements a basic variant, similar to how we implemented
    `regproc`.
    
    This likely won't be enough for the Kepserver use-case because casts
    from string to `regclass` do not access the current session and
    available schemas and therefore a cast like `'kepware'::regclass`
    doesn't resolve to the correct relation name → oid.
    
    We would have to follow up on that and provide cast functions the access
    to the session and maybe also the schema.

commit de24c9eefb4a389e90371d13dbe95624a937ce9c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 9 15:26:51 2021 +0100

    Update netty to 4.1.60
    
    https://netty.io/news/2021/03/09/4-1-60-Final.html

commit e68a6e7d136b67b31b3552ad490cc69c4897cc55
Author: Georg Traar <georg@crate.io>
Date:   Wed Mar 3 21:46:26 2021 +0100

    Include hint in exception to enable TLS in client,
    when trying to connect without TLS to a cluster that enforces TLS.

commit fced15a00bfd4c34f66f190e81bdfbf92ccf5820
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Mar 5 16:08:41 2021 +0100

    Change VersionUtils.getPreviousVersion() to return previous MAJOR.MINOR
    
    Since https://github.com/crate/crate/commit/543e839b111, shard allocation
    on previous versions is allowed if the previous version is on the
    same MAJOR.MINOR.
    
    In order for other tests which expect a failure on allocation with
    a previous version, the helper method to retrieve a previous version
    must be changed to return a version before curren'ts MAJOR.MINOR.
    On current master test are passing as no lower hotfix version exists.
    
    Follow up of https://github.com/crate/crate/commit/543e839b111.

commit 543e839b111888a3d5a9e00046db78d2af329f82
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Mar 5 10:12:10 2021 +0100

    Allow allocation of shards on nodes with lower HOTFIX version
    
    Fixes the support for a complete (rolling) downgrade of a cluster
    to a version with same MAJOR.MINOR but different HOTFIX version.

commit 43223aa40d6ae83d62449c8cb795731852386518
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Mar 5 09:25:56 2021 +0100

    Backport NodeVersionAllocationDeciderTests from ES
    
    Based on ES commit https://github.com/elastic/elasticsearch/commit/51fb95ef83f

commit f8b0533c023f396d656707cc4e7db5868c488f44
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 3 10:53:21 2021 +0100

    Add a release notes entry for the license changes

commit 2fb1303193a40c0e9a97ae41a163bf42394a8e5f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 3 12:14:13 2021 +0100

    Update checkstyle to 8.41
    
    See https://checkstyle.org/releasenotes.html#Release_8.41
    
    Mostly interested in a change in 8.36.2:
    
    - MissingSwitchDefault to exclude Java 14 switch expressions. Author: Nick Mancuso #8779
    
    switch expressions must be exhaustive, so checkstyle enforcing a default branch didn't make sense.

commit 8a2036f475b6bf1dcf580801ff710f830ce54fb9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 3 10:22:20 2021 +0100

    bp: Remove close method in PageCacheRecycler/Recycler
    
    Saw some failures on CI:
    
        Cause 1: java.lang.AssertionError
            at __randomizedtesting.SeedInfo.seed([A2CA882FA1DE9F03]:0)
            at org.elasticsearch.common.recycler.ConcurrentDequeRecycler.close(ConcurrentDequeRecycler.java:42)
            at io.crate.common.io.IOUtils.close(IOUtils.java:99)
            at io.crate.common.io.IOUtils.close(IOUtils.java:81)
            at org.elasticsearch.common.lease.Releasables.close(Releasables.java:36)
            at org.elasticsearch.common.lease.Releasables.close(Releasables.java:46)
            at org.elasticsearch.common.lease.Releasables.close(Releasables.java:67)
            at org.elasticsearch.common.lease.Releasables.close(Releasables.java:75)
            at org.elasticsearch.common.util.PageCacheRecycler.close(PageCacheRecycler.java:78)
            at io.crate.common.io.IOUtils.close(IOUtils.java:99)
            at io.crate.common.io.IOUtils.close(IOUtils.java:81)
            at org.elasticsearch.node.Node.close(Node.java:887)
            at org.elasticsearch.test.InternalTestCluster$NodeAndClient.close(InternalTestCluster.java:904)
    
    https://github.com/elastic/elasticsearch/commit/7953f9ac71850c8483f5b6b9b764f55ddf6d4119

commit 5d4ab3a0d2754d8cc4c284e7392c941e3d12d973
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 2 11:06:02 2021 +0100

    Add an empty pg_tablespace table
    
    For compatibility with more PostgreSQL tools
    
    Closes https://github.com/crate/crate/issues/10250

commit a5b1dab95c5a7b19eeeb0a0156ddb98ec0aea2a3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 2 17:24:39 2021 +0100

    Improve object cast error messages
    
    Highlights the key and inner source/target type instead of having a
    `Cannot cast {...} to type object` message.
    
    Closes https://github.com/crate/crate/issues/10158

commit 4215493f3efd65fc8142d5203a8a04af4cd45f7d
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Mar 2 12:33:17 2021 +0100

    Reflect release 4.4.2

commit 6385575a09770f92e177b735dd669903f113c88a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 2 10:10:30 2021 +0100

    Fix UncaughtExceptionError in testRestartNodeWhileIndexing
    
    This should fix:
    
        com.carrotsearch.randomizedtesting.UncaughtExceptionError: Captured an uncaught exception in thread: Thread[id=7870, name=Thread-89, state=RUNNABLE, group=FailOnTimeoutGroup]
            at __randomizedtesting.SeedInfo.seed([787987641FBBD68F:1799545C17B39E7D]:0)
        Caused by: org.postgresql.util.PSQLException: ERROR: node closed {node_t2}{JQ4k7ahLQzSAqd7tGnBKUQ}{KzA2V0yhQ8-TsePpAk5q_Q}{127.0.0.1}{127.0.0.1:41943}{http_address=0.0.0.0:0}
            at __randomizedtesting.SeedInfo.seed([787987641FBBD68F]:0)
            at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2553)
            at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2285)
            at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:323)
            at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:473)
            at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:393)
            at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164)
            at org.postgresql.jdbc.PgPreparedStatement.execute(PgPreparedStatement.java:153)
            at io.crate.testing.SQLTransportExecutor.executeAndConvertResult(SQLTransportExecutor.java:378)
            at io.crate.testing.SQLTransportExecutor.executeWithPg(SQLTransportExecutor.java:329)
            at io.crate.testing.SQLTransportExecutor.executeTransportOrJdbc(SQLTransportExecutor.java:173)
            at io.crate.testing.SQLTransportExecutor.exec(SQLTransportExecutor.java:130)
            at io.crate.integrationtests.SQLTransportIntegrationTest.execute(SQLTransportIntegrationTest.java:374)
            at io.crate.integrationtests.disruption.discovery.ClusterDisruptionIT.lambda$testRestartNodeWhileIndexing$5(ClusterDisruptionIT.java:390)

commit 0058c80d0b575df9266b3ddc80ffc5fe53ef3c38
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 2 10:04:13 2021 +0100

    bp: Avoid StackOverflowError if write circular reference exception
    
    We've had `DiskDisruptionIT` fail with:
    
        Mar 02, 2021 12:10:33 AM com.carrotsearch.randomizedtesting.RandomizedRunner$QueueUncaughtExceptionsHandler uncaughtException
        WARNING: Uncaught exception in thread: Thread[cratedb[node_t2][write][T#1],5,FailOnTimeoutGroup]
        java.lang.StackOverflowError
            at __randomizedtesting.SeedInfo.seed([5CA6467F2A4BA61E]:0)
            at org.elasticsearch.common.io.stream.ReleasableBytesStreamOutput.ensureCapacity(ReleasableBytesStreamOutput.java:71)
            at org.elasticsearch.common.io.stream.BytesStreamOutput.writeBytes(BytesStreamOutput.java:90)
            at org.elasticsearch.transport.CompressibleBytesOutputStream.writeBytes(CompressibleBytesOutputStream.java:85)
            at org.elasticsearch.common.io.stream.StreamOutput.writeVInt(StreamOutput.java:238)
            at org.elasticsearch.common.io.stream.StreamOutput.writeException(StreamOutput.java:897)
            at org.elasticsearch.common.io.stream.StreamOutput.writeException(StreamOutput.java:918)
            at org.elasticsearch.ElasticsearchException.writeStackTraces(ElasticsearchException.java:714)
            at org.elasticsearch.common.io.stream.StreamOutput.writeException(StreamOutput.java:920)
            at org.elasticsearch.common.io.stream.StreamOutput.writeException(StreamOutput.java:918)
            at org.elasticsearch.ElasticsearchException.writeStackTraces(ElasticsearchException.java:714)
    
    https://github.com/elastic/elasticsearch/commit/8493b67ff585eb12ce491975b1bd6b9eefeb5b70

commit 354aa101fc50e018f0f392b0935bf84196dbcdb6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 2 09:51:22 2021 +0100

    Fix flaky testPreferCopyCanPerformNoopRecovery
    
    Failed with
    
        java.lang.AssertionError:
        Expected: is <2L>
             but: was <2>

commit 4f86cde0b223020df72ed78e9567b5a503bceae0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 1 14:02:14 2021 +0100

    Preserve kill reason in CountTask
    
    Spotted this via the `create_azure_snapshot_and_restore_it` test case.
    
        java.util.concurrent.CancellationException
            at __randomizedtesting.SeedInfo.seed([BF72560FE58714E8:D97FB8B8823AB9FE]:0)
            at java.base/java.util.concurrent.CompletableFuture.cancel(CompletableFuture.java:2468)
            at io.crate.execution.jobs.CountTask.innerKill(CountTask.java:86)
            at io.crate.execution.jobs.AbstractTask.kill(AbstractTask.java:90)
            at io.crate.execution.jobs.RootTask$TaskFinishedListener.onFailure(RootTask.java:355)
            at io.crate.execution.jobs.RootTask$TaskFinishedListener.accept(RootTask.java:368)
            at io.crate.execution.jobs.RootTask$TaskFinishedListener.accept(RootTask.java:311)
    
    This probably doesn't fix the flaky test, but improves the kill
    handling.

commit 36541d95b83c3a0b84c9e9ddc0a8681df9f6c721
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 1 14:54:31 2021 +0100

    Increase default SQL request timeout in tests
    
    On CI we sometimes see timeout related failures that do not seem to
    origin from a real code problem but rather from a slow system.
    
    A recent example is `testAlterTableRerouteMoveShard` which failed with
    the following exception:
    
        org.elasticsearch.ElasticsearchTimeoutException: java.util.concurrent.TimeoutException: Timeout waiting for task.
            at __randomizedtesting.SeedInfo.seed([167DB4162689A037:BA1875C29771609C]:0)
            at org.elasticsearch.common.util.concurrent.FutureUtils.get(FutureUtils.java:79)
            at org.elasticsearch.action.support.AdapterActionFuture.actionGet(AdapterActionFuture.java:49)
            at org.elasticsearch.action.support.AdapterActionFuture.actionGet(AdapterActionFuture.java:44)
            at io.crate.testing.SQLTransportExecutor.executeTransportOrJdbc(SQLTransportExecutor.java:184)
            at io.crate.testing.SQLTransportExecutor.exec(SQLTransportExecutor.java:130)
            at io.crate.integrationtests.SQLTransportIntegrationTest.execute(SQLTransportIntegrationTest.java:374)
            at io.crate.integrationtests.SQLTransportIntegrationTest.execute(SQLTransportIntegrationTest.java:520)
            at io.crate.integrationtests.AlterTableRerouteIntegrationTest.testAlterTableRerouteMoveShard(AlterTableRerouteIntegrationTest.java:40)
            at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
            at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
            at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
            at java.base/java.lang.reflect.Method.invoke(Method.java:564)
            at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1758)
            at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:946)
            at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:982)
            at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:996)
            at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
            at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
            at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
            at java.base/java.lang.Thread.run(Thread.java:832)
        Caused by: java.util.concurrent.TimeoutException: Timeout waiting for task.
            at org.elasticsearch.common.util.concurrent.BaseFuture$Sync.get(BaseFuture.java:235)
            at org.elasticsearch.common.util.concurrent.BaseFuture.get(BaseFuture.java:64)
            at org.elasticsearch.common.util.concurrent.FutureUtils.get(FutureUtils.java:77)
            ... 19 more
    
    In the stdout/logs the following message was present:
    
        2021-02-28T18:05:49,695][ERROR][i.c.t.SQLTransportExecutor] [[Time-limited test]] Timeout on SQL statement: create table my_table (id int primary key,date timestamp with time zone) clustered into 1 shards with (number_of_replicas=0) org.elasticsearch.ElasticsearchTimeoutException: java.util.concurrent.TimeoutException: Timeout waiting for task
    
    But no other errors that would indicate that the root cause is a bug.

commit ce2c2081a2b0670a312666f0518f26e1a95925e4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 1 10:23:25 2021 +0100

    Fix repository verification error handling
    
    The cause can be `null` in which case the following NPE happened:
    
        NullPointerException[Cannot invoke "Object.getClass()" because the return value of "java.lang.Exception.getCause()" is null]
        java.lang.NullPointerException: Cannot invoke "Object.getClass()" because the return value of "java.lang.Exception.getCause()" is null
            at org.elasticsearch.repositories.blobstore.BlobStoreRepository.startVerification(BlobStoreRepository.java:888)

commit 93a4a267b56f860507afed287adae1c82269446b
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Feb 22 18:09:48 2021 +0100

    bp: Use peer recovery retention leases for indices without soft-deletes
    
    https://github.com/elastic/elasticsearch/commit/cec6678587e

commit 9ac478470a473619f2237fa3a6c3fae8e98df8d6
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Feb 18 14:50:47 2021 +0100

    bp: Omit loading IndexMetaData when inspecting shards
    
    https://github.com/elastic/elasticsearch/commit/74ff50f814a

commit d741fdcf90e2891867f08535023975fe9f44d985
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Feb 23 11:18:05 2021 +0100

    bp: Remove nodeId from BaseNodeRequest
    
    https://github.com/elastic/elasticsearch/commit/25792d31321

commit 27e5e360f5040072e315183d5fdc87479d5fe48a
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Feb 25 17:37:56 2021 +0100

    Add reasons for skipping backports

commit 9be2fc9fd39314b900fee2d159fa376d974b5ab1
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Tue Feb 9 17:59:02 2021 +0100

    Create a glossary (including related improvements for the main docs)
    
    Specifically:
    
    - Create a new glossary page in the appendices.
    
      - Added the first batch of terms. More to be added latter.
    
      - Added cross-references in the rest of the docs that link through to the
        definitions
    
    - Rename `shared-nothing.rst` to `clustering.rst` to match page title.
    
    - Change "kinds" to "type" for consistency with the rest of the subsection in
      `config/node.rst`.
    
    - Overhauled the use of RST labels for some files.
    
      Initially, I had to add or adjust some RST labels so that I could link
      everything together properly for the work I was doing.
    
      However, in accordance with our core principals
      (https://github.com/crate/crate-docs/blob/main/style/general.rst), I decided,
      while I was at it, to put in the extra effort to improve the quality and
      consistency of RST label use in the files I touched.
    
      This relates to the glossary work because cross-referencing (using RST
      labels) makes up the bulk of the changes (by line count).
    
      Unfortunately, updating label references elsewhere in the docs to match
      generated a more noise than I was expecting. If this makes reviewing
      difficult, I am happy to decompose this changeset into smaller, separate
      commits.
    
    - Minor copyedits for clarity, typo fixes, RST formatting fixes (per
      https://github.com/crate/crate-docs/blob/main/style/rst.rst), and structural
      reworking where I spotted an easy opportunity.
    
      This includes some additional section headings added to files to improve
      navigability or to provide an anchor point (RST label) to link to from
      elsewhere in the docs (e.g., the "Partitioning" header in
      `general/ddl/generated-columns.rst`, which is now linked to from the
      "partition column" glossary entry as a SEEALSO).
    
    - Similar reworkings of the SQL syntax reference for the `ALTER TABLE`,
      `REFRESH`, `OPTIMIZE`, `COPY TO`, `COPY FROM`, `CREATE SNAPSHOT`, and `RESTORE
      SNAPSHOT` statements.
    
      I noticed that these pages were inconsistent and incomplete. Some pages
      failed to document the `PARTITIONED` clause entirely (or incorrectly
      documented part of it under the "Parameters" section). This has now been
      fixed.
    
      There is some duplication of text between the files, but I argue that this is
      not an issue for the following reasons:
    
      - Readers do not read reference manuals like the read a novel. They deep-dive
        into topics as needed and then leave. In this sense, boilerplate
        descriptions improve the experience (consistency and familiarity) instead
        of detracting from it.
    
      - There is no obvious candidate for a single location for the description of
        the `PARTITIONED` clause. In this instance, I believe that pursuing the
        principal of Don't Repeat Yourself would require awkward contortions that
        outweigh the benefits.
    
        In an attempt to make sure these sections do not drift out of sync, I have
        added an EDITORIAL NOTE (hidden comment) to each `PARTITIONED` section for
        future contributors.
    
    - Removed the config section for `warming.enable` as we do not implement this
      ourselves and the feature is deprecated upstream.

commit 31233d1a4a65cfaa50f319e1ca707a9e643e6072
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Feb 25 14:50:56 2021 +0100

    Fix fetch rewrite on Eval operators
    
    The fetch rewrite logic on the Eval operators uses the MapBackedSymbolReplacer
    for replacing the original (source) symbols with new onces, replaced on the source.
    This replacer was always traversing the symbol's tree, but e.g. when Alias symbols
    are used, the source will add the complete alias symbol to the replacement map
    (in order to preserve all the information like the alias name) and not only the
    target reference. Such this replacer should first lookup for the given symbol
    inside the map before falling back to travers and search for child replacements.
    
    Fixes #11049.

commit b49dcb0d4f91a4a5e8b61387f54626eb986a820e
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Feb 24 18:52:32 2021 +0100

    Reorganize InternalEngineTests to be in same order with upstream

commit a7d0d27486bb1d9b746658e0ad19e6cef75ca480
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 24 10:54:08 2021 +0100

    Ensure min/max values in max aggregation don't result in `null` results

commit 1ad3f3174780d4a4c433b9011062ada5acdf41e0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 24 10:43:17 2021 +0100

    Fix max aggregation of 0.0 values
    
    Both `Float.MIN_VALUE` and `Double.MIN_VALUE` are positive numbers, not
    negative so `0.0 > Double.MIN_VALUE` is false. 🤦
    
    Fixes https://github.com/crate/crate/issues/11056

commit 01d2afde3019e5d86c864dbc77bb60a9cf459680
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 23 10:15:54 2021 +0100

    Add memory accounting and dynamic sizing for ReaderBuckets
    
    Should fix https://github.com/crate/crate/issues/11047

commit b86eba7fa8ee2784edae343b189ef74530bfa8d5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 17 12:04:14 2021 +0100

    Release delayed messages on close channel
    
    Ensurse that any buffered messages get immediately released if a channel
    is closed.

commit 7bd68efedd6a07d28000294a0c7a637f9cc415f2
Author: jeeminso <jeeminso@gmail.com>
Date:   Tue Oct 20 13:41:13 2020 -0400

    Add the CREATE TABLE AS statement

commit a71652cd45bc152d16354d073de43026d1c4dac1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 22 11:37:54 2021 +0100

    Fix pg array parsing regressions
    
    This is a follow up to https://github.com/crate/crate/commit/85379d2747caa5e62719aee5fb5a6c23a1060875
    It made the allowed unquoted characters too restrictive, causing a
    regression.
    
    The referenced commit wasn't released yet, so no release notes.

commit 98f1921bdbf8ba8f21819df317abdbcba511d660
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Feb 17 11:10:39 2021 +0100

    bp: Migrate peer recovery from translog to retention lease
    
    https://github.com/elastic/elasticsearch/commit/b9fbc8dc748

commit 48cc585733b4ab61546e53ff0df3469c9791e54a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 17 15:26:10 2021 +0100

    Fix flaky `testQueryBreakerIsDecrementedWhenQueryCompletes`
    
    Adds an `assertBusy` because some of the "reset ramAccounting" actions
    happen async and a client could receive a result before those actions
    finished.
    
        ## FAILURE: Test testQueryBreakerIsDecrementedWhenQueryCompletes(io.crate.integrationtests.CircuitBreakerIntegrationTest)
        java.lang.AssertionError:
        Expected: is <0L>
             but: was <2576980L>
            at __randomizedtesting.SeedInfo.seed([90FAD8CDD77B4CF1:58A674C822576952]:0)
            at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
            at org.junit.Assert.assertThat(Assert.java:956)
            at org.junit.Assert.assertThat(Assert.java:923)
            at io.crate.integrationtests.CircuitBreakerIntegrationTest.testQueryBreakerIsDecrementedWhenQueryCompletes(CircuitBreakerIntegrationTest.java:58)
    
        REPRODUCE WITH: ./gradlew :server:test -Dtests.seed=90FAD8CDD77B4CF1 -Dtests.class=io.crate.integrationtests.CircuitBreakerIntegrationTest -Dtests.method="testQueryBreakerIsDecrementedWhenQueryCompletes" -Dtests.locale=om-KE -Dtests.timezone=Pacific/Chatham

commit 3dc4abae4c2412f24ff35cbb35e465eb1beaecb8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 17 14:29:36 2021 +0100

    Fix flaky `testQueryBreakerIsUpdatedWhenSettingIsChanged`
    
        Expected: is "[query] Data too large, data for [collect: 0] would be [120/120b], which is larger than the limit of [100/100b]" and pgErrorStatus=<INTERNAL_ERROR> and httpResponseStatus=<500 Internal Server Error> and errorCode=<5000>
            but: error message is "[query] Data too large, data for [collect: 0] would be [120/120b], which is larger than the limit of [100/100b]" error message was "[query] Data too large, data for [collect: 0] would be [2577100/2.4mb], which is larger than the limit of [100/100b]"

commit a91bd593934e5160dfc66fc2e9f7ae84c4377e1f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 17 10:05:43 2021 +0100

    Set initial loaded left batches to 0 in HashInnerJoinBatchIterator
    
    This is a follow up to https://github.com/crate/crate/pull/11036
    That the left source has one batch already loaded is not true.
    
    This led to a `moveNext -> false; moveNext` call sequence.

commit 413923fdbe7f9e3cbf72e9868b25d72e3472c219
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 17 11:42:09 2021 +0100

    Accept all inbound messages in PostgresWireProtocol
    
    Eliminates a `ByteBuf.class.isInstance` check

commit 5756ffc50e3052fdcbc83d697fb087c5ebab094f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 16 10:41:00 2021 +0100

    Fix NullPointerException in AsyncFlatMapBatchIterator
    
    The `HashInnerJoinBatchIterator` called `moveNext` again after a
    previous `moveNext` call already returned false.
    
    This triggered a `NullPointerException` because the
    `AsyncFlatMapBatchIterator` didn't account for this kind of access
    pattern.
    
    Fixes https://github.com/crate/crate/issues/11034

commit d55935af6a6db402573172a8d01ce661b21a75e2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 16 11:39:08 2021 +0100

    Avoid boxing in PGArray.encodeAsUTF8Text
    
    Also changes it to utilize a batch `add(byte[])` operation to add
    elements, which results in a single resize and array-copy operation.
    
        Benchmark                                      (length)  Mode  Cnt  Score   Error  Units
        PGArrayBenchmark.measure_new_encodeAsUtf8Text         8  avgt   10  0.217 ± 0.007  us/op
        PGArrayBenchmark.measure_new_encodeAsUtf8Text        16  avgt   10  0.288 ± 0.003  us/op
        PGArrayBenchmark.measure_new_encodeAsUtf8Text        64  avgt   10  0.292 ± 0.003  us/op
        PGArrayBenchmark.measure_new_encodeAsUtf8Text       128  avgt   10  0.462 ± 0.025  us/op
        PGArrayBenchmark.measure_old_encodeAsUtf8Text         8  avgt   10  0.498 ± 0.002  us/op
        PGArrayBenchmark.measure_old_encodeAsUtf8Text        16  avgt   10  0.724 ± 0.004  us/op
        PGArrayBenchmark.measure_old_encodeAsUtf8Text        64  avgt   10  2.290 ± 0.051  us/op
        PGArrayBenchmark.measure_old_encodeAsUtf8Text       128  avgt   10  4.433 ± 0.041  us/op

commit 2079aa3e14947dcabad9345cc5379ba505252d94
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 15 15:51:39 2021 +0100

    Fix flaky test_window_function_use_mixed_with_joins
    
    On Jenkins in 2 out of 36 runs
    `test_window_function_use_mixed_with_joins` failed with shard lock
    issues.
    
    I couldn't reproduce the issue locally, but based on the error traces
    and based on
    https://github.com/crate/crate/commit/99f93c3905e3e759db031f8fb8e608aea7f41d2c
    I assume that shards were still being started by the time the tear
    down operation tried to drop the tables.

commit 6e48c8d5a66e2476011a54cb82af72446158aea6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 15 17:06:49 2021 +0100

    Remove TestLogging from MasterDisruptionIT
    
    Setting `_root:DEBUG` causes excessive log output. The test cases seem
    to be stable or at least we're not aware of any issues with it, so let's
    remove the logging.

commit 02f1bf7b05bc924676598b3da57d8e02f475639f
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Feb 15 13:25:17 2021 +0100

    bp: Make elasticsearch-node tools custom metadata-aware
    
    https://github.com/elastic/elasticsearch/commit/678aeb747ea

commit b88a9270395a29cd9d254e04ddc14fe903ecd6df
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri Feb 12 14:47:30 2021 +0100

    bp: Enable dependent settings values to be validated
    
    https://github.com/elastic/elasticsearch/commit/87517d96f62

commit eb95549bcc5297b9b27875165f328a1a598d7302
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Dec 5 10:49:09 2019 -0700

    bp: Add int indicating size of transport header
    
    https://github.com/elastic/elasticsearch/commit/8c2dda90c0f

commit 62ff8205f84207b29746aa8767b85f7effc433ce
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri Feb 12 14:46:38 2021 +0100

    bp: Silence lint warnings in server project - part 2
    
    https://github.com/elastic/elasticsearch/commit/de5eb04f050

commit 85379d2747caa5e62719aee5fb5a6c23a1060875
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 15 10:59:51 2021 +0100

    Support digits in unquoted pg array strings
    
    Fixes https://github.com/crate/crate/issues/11026

commit 4cacf60b7ae95de0d665ae2bb16f9044b2e273a8
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Mon Feb 8 19:02:42 2021 +0100

    Improve path settings documentation
    
    Specifically:
    
    - Note that relative paths use `CRATE_HOME` (docs and config file)
    - Specify the default values used (docs)
    - Add an example to `paths.data` entry that specifies multiple paths (docs)
    - Add `path.plugins` entry (docs, to mirror config file)
    - Add cross reference for `blobs.path` (docs)
    - Add cross reference for `path.repo` (config file)
    
    This work is an off-shoot of the work necessary for
    https://github.com/crate/crate-howtos/issues/211

commit c1ea154eaefd6d84fa3dd773472dc32eb7a78f0d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 15 15:42:45 2021 +0100

    Remove unused test_licensing.py

commit 352bc23954611f600dd8beca2a69fc3b29349527
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 15 11:59:30 2021 +0100

    Optimize pgwire varchar/text serialization
    
    Netty contains benchmarks for the buffer decoding/encoding operations,
    so I assume their special implementation is faster.
    
    - https://github.com/netty/netty/blob/4.1/microbench/src/main/java/io/netty/microbench/buffer/ByteBufUtilBenchmark.java
    - https://github.com/netty/netty/blob/4.1/microbench/src/main/java/io/netty/buffer/ByteBufUtilDecodeStringBenchmark.java

commit 51d6d361dcec2920815cdaf6b50108504a13681f
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Feb 11 18:33:34 2021 +0100

    bp: Remove Unused Features Field on StreamOutput
    
    https://github.com/elastic/elasticsearch/commit/42a331c59ba

commit 46170664f3515c5d154f9881a35eddf85851d534
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Feb 11 15:41:38 2021 +0100

    bp: Optimize some StreamOutput Operations
    
    https://github.com/elastic/elasticsearch/commit/f20414dd7d9

commit 6b9b31a296dd5c62351b789c204c0d44f2f8ad19
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Feb 10 11:50:35 2021 +0100

    bp: Replicate write actions before fsyncing them
    
    https://github.com/elastic/elasticsearch/commit/8c165e04a1c

commit fc4b503bf73049505e3b25de4a26c585fa271d61
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Feb 10 11:50:15 2021 +0100

    bp: Make Snapshot Metadata Javadocs Clearer
    
    https://github.com/elastic/elasticsearch/commit/944c681680d

commit 634d34d5bb051d290ee8cc5b2f8ce259255909d6
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri Feb 5 14:44:05 2021 +0100

    bp: New setting to prevent automatically importing dangling indices
    
    https://github.com/elastic/elasticsearch/commit/f8e39d2ff18

commit fca4e271c6cae64a7e67eca57edca032c3bd88fb
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Feb 11 17:42:46 2021 +0100

    Fix type-aware source parsing on string encoded source values
    
    On COPY FROM, values are not sanitized and thus values for non-string
    typed columns may end up as strings inside the _source.
    Thus we must always precedence possible given data types for value
    type detection over the parsers type detection.
    
    Follow up of https://github.com/crate/crate/commit/96988544c86.

commit e43dd0f22e4fe0eaf238e93653ec37c432c488ba
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 10 15:16:31 2021 +0100

    Fix keystore path in sandbox crate.yml

commit 256a00a480df917d68596f22795d4f03b2ce588e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 8 16:47:00 2021 +0100

    Infer requiresRepeat from RowConsumer
    
    A Projector can provide independent scrolling and remove the repeat
    requirement.
    
    Not sure if we currently have execution plans where that is the case, but if
    so, this change could lead to performance improvements.

commit 4dd37157ac1944262aa73c7efa640160eb648780
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 9 15:58:15 2021 +0100

    Fix checkpoint calculation in fingerprints for keystore files
    
    `test_service_reloads_configuration_on_change_of_symlinked_files` failed
    occasionally on Github Actions since we integrated it into :server:.
    Before the tests weren't executed with Github Actions because they were
    in a different module.
    
    It turned out that the checkpoint calculation was broken because the
    digest is updated as the file stream is consumed, which didn't happen.
    
    The feature itself worked despite that, because the file modification
    date is also checked, but in the tests the accuracy could've been to low
    to detect the update.
    
    `test_service_reloads_configuration_on_change_of_symlinked_files` is
    updated to make the test case more targeted. There is another full blown
    integration test (`testReloadSslContextOnKeyStoreChange`) that verifies
    that the scheduling works.

commit 4de3664173bf055f83360292a650413fec3af94d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 9 15:27:35 2021 +0100

    bp: Remove String interning from `o.e.index.Index`.
    
    See https://github.com/elastic/elasticsearch/commit/fed3580644386693eadb902badd8f7c1ee5cd897
    This is an older commit not listed in `es-backports`

commit 99f93c3905e3e759db031f8fb8e608aea7f41d2c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 9 15:42:17 2021 +0100

    Fix flaky testHealthWithClosedIndices
    
    It could have been the case that the closing & starting of a shard from
    the CREATE and ALTER .. CLOSE statements interferred with each other
    because these actions are asynchronously triggered by cluster state
    change events resulting from the CREATE TABLE and ALTER TABLE
    statements.
    
    this adds some `waitNoPendingTasksOnAll` calls to ensure that there are
    no pending operations from the CREATE TABLE statement running before
    triggering the close operation.
    
    The issue can be produced quite reliably with the following test case:
    
        for (int i = 0; i < 5; i++) {
            logger.info("XXX BEFORE create table");
            execute("create table t" + i + " (id int) with (number_of_replicas = 5)");
            logger.info("XXX BEFORE close table");
            execute("alter table t" + i + " close");
            logger.info("XXX BEFORE open table");
            execute("alter table t" + i + " open");
            logger.info("XXX BEFORE drop table");
            execute("drop table t" + i);
        }

commit 6603faacd4bae449bd33c2cc4796a600f31625ca
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 9 12:18:05 2021 +0100

    Move method in RecoverySourceHandler to mirror upstream order
    
    To make a diff against the upstream version of the file easier to read.
    Should also help prevent conflicts when backporting patches.

commit 7dcf14feb5a15b52e6528611c688323f9400631a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 3 10:19:58 2021 +0100

    Integrate ssl-impl module into server

commit a92e6bfaa41c93b1df2fe755d095987f1017c653
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 2 10:55:53 2021 +0100

    Integrate user extension into server

commit 5833bf348831e8b5a33c2f291b0814851adc6b9b
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Feb 8 17:01:40 2021 +0100

    Add License serialization back for bwc

commit 31b8e189458ce39cb89081cc9a40085e549f2679
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Thu Feb 4 18:19:19 2021 +0100

    Improve aggregation documentation (closes https://github.com/crate/tech-writing-domain/issues/199)
    
    This change does the following:
    
    - Drops the table of aggregation functions from `selects.rst`.
    
      This table was out-of-date and even if it was updated was likely to become
      out-of-date again in the future. This is because this information duplicates
      what is in `builtins/aggregation.rst` and developers adding support for new
      aggregation functions are likely to repeat the mistake of updating
      `aggregation.rst` and not the summary table in `selects.rst`.
    
      I tried moving the summary table to `aggregation.rst`, but after improving
      this page (see below) I found that the table repetitive and of little value.
    
    - Reorganizes `aggregation.rst` so that functions are listed alphabetically and
      subsections are better organized. Expands headers to provide full syntax
      descriptions, per the headers elsewhere in the docs (e.g., `scalar.rst`).
      Splits out `mean(column)` into its own subsection and mentions that it is an
      alias for `avg(column)`.
    
      The result is that the page TOC functions as an easy-to-reference summary of
      the page content (thus obviating the need for a summary table).
    
    - Some light copyedits.
    
      This page could do with more extensive reworking, but that is substantially
      out-of-scope for the parent issue.

commit dbb556e2d9d4d41ef739ad94aae530e016ec174e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 8 15:13:02 2021 +0100

    Don't create unused tables in each test case in TransportSQLActionClassLifecycleTest
    
    This avoids creating and filling the `characters` and `parted` tables
    when they're not required by the test case.

commit c477d546cc33a8194bb6a93ad3b1360b28aa3bfb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 8 11:45:45 2021 +0100

    Reduce replicas configured in testHealthWithClosedIndices
    
    The test occassionally has timeouts on `alter table t3 close` on
    Jenkins. Couldn't reproduce locally.
    
    Reducing the number of replicas might help.

commit c1b255a93b7803f2596bee7182e9010f96ae7d26
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 8 15:59:41 2021 +0100

    Update netty to 4.1.59
    
    https://netty.io/news/2021/02/08/4-1-59-Final.html

commit 580088d655c98729c6f545bd646c393df7e29b1c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 8 14:52:41 2021 +0100

    Support full timestamp formats in pg wire
    
    Follow up to https://github.com/crate/crate/commit/63759d189d48c23ba64156ab7646d1911e703d50
    Does the same thing but for the timestamp without time zone type.

commit a29b5906eda5209621db90b1ad2792c2e304bf72
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 8 12:19:00 2021 +0100

    Ensure (string → array) parsing error lead to clear errors
    
    Previously passing a string value as argument to `ANY(?)` could lead to
    an error like:
    
        Couldn't create execution plan from logical plan because of: line 1:0: mismatched input 'g' expecting '{':
        Eval[classname, name, sum(if((failure IS NULL), 0, 1)) AS failures, count(*)]
          ...
    
    This changes the error handling a bit so that users receive the more
    meaningful "Cannot cast value `...` to type `..`" error.
    
    Closes https://github.com/crate/crate/issues/10998

commit 344fc1f7ef9ed586411f6d366aad1d611d5f0309
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 8 11:12:28 2021 +0100

    Fix broken `here documents` link
    
    Accessing https://www.tldp.org/LDP/abs/html/here-docs.html results in a
    SSLError.

commit 387e972f86cf3c6d151da0b08c791e0e8345ba20
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 8 11:03:12 2021 +0100

    Update broken link in secured communications documentation

commit eaba8d5bfa43b7c581542f404378d51a305e1b00
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 8 10:54:36 2021 +0100

    Update hadoop version to existing version
    
    2.8.5 is no longer available

commit 687c510c5bbcc26d5c7aae7d6a4dcee38c63700d
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Feb 3 19:13:26 2021 +0100

    Remove license custom metadata for bwc

commit 05cdbfc9ba6c2094d333792ef6ca77dfcf7444e6
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Wed Feb 3 21:39:26 2021 +0100

    Clarify admonition about changing the number of shards (closes https://github.com/crate/crate/issues/10989)

commit 0ea8442589112252a2528faf51ab90f467ad3adc
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Wed Feb 3 21:19:07 2021 +0100

    Standardize wording in release notes admonition (closes https://github.com/crate/tech-writing-domain/issues/141)

commit 982f77e8157a358934c4904122681daf0efc48a8
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Wed Feb 3 21:07:31 2021 +0100

    Copyedit for balanced shards config docs (closes https://github.com/crate/tech-writing-domain/issues/144)

commit 91b6e87c934ceaa8115b75f480df9db527843ee5
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Wed Feb 3 20:42:20 2021 +0100

    Improve the introduction for aggregation docs (closes https://github.com/crate/tech-writing-domain/issues/147)

commit 79a0b82182de2c16936cc7e54ab97f988545119a
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Wed Feb 3 20:18:00 2021 +0100

    Standardize formatting of setting properties in config docs (closes https://github.com/crate/tech-writing-domain/issues/151)

commit d42250eb51ebed4fee3508a70bb1a82038feb1f6
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Wed Feb 3 20:11:52 2021 +0100

    Minor copyedit for node type docs (closes https://github.com/crate/tech-writing-domain/issues/228)

commit c73bd094b2c5a99a6861ed92deedfbcd365f6ae5
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Wed Feb 3 20:06:36 2021 +0100

    Add intro to joins doc (closes https://github.com/crate/crate/issues/10184)

commit 8d4f69a0a9ffaf314372ee3f44ebd0f30741dddd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 4 10:45:07 2021 +0100

    Replace ImmutableList usages
    
    Relates to https://github.com/crate/crate/issues/10510

commit e6eeb0a158e27daa637c938d406c689f1994d122
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Feb 3 15:58:20 2021 +0100

    bp: Strengthen validateClusterFormed check
    
    https://github.com/elastic/elasticsearch/commit/93dc8941d44

commit 5c9b5e53fa1a2d6bf08128ba0e3c6c9bf20b4322
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Feb 3 15:23:05 2021 +0100

    bp: ESIntegTestCase always cleans up static fields
    
    https://github.com/elastic/elasticsearch/commit/ba5b4f14131

commit 0b6d4b8c0b5cd428d29f7385cd1b20a739a28c3c
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Feb 3 12:35:29 2021 +0100

    bp: Use dynamic port ranges for ExternalTestCluster
    
    https://github.com/elastic/elasticsearch/commit/5ba4f5fb3c9

commit e745870ad5bc9b7fd960a2756d13d00b2339b9bf
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Feb 3 11:38:31 2021 +0100

    bp: Wait for events in waitForRelocation
    
    https://github.com/elastic/elasticsearch/commit/29235a637f7

commit 0596e89f8248ddb7999d2f5a0fdb85cec7c7e87a
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Feb 3 11:05:32 2021 +0100

    bp: Remove RemoteClusterConnection.ConnectedNodes
    
    https://github.com/elastic/elasticsearch/commit/f00b658130d

commit 3289b29cdfa679d11883724047fb2394488cf500
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Feb 2 11:27:37 2021 +0100

    bp: Fix port range allocation with large worker IDs
    
    https://github.com/elastic/elasticsearch/commit/433b3458522

commit e636850999cad0dab51b10466d41ede22e752629
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Feb 2 11:35:26 2021 +0100

    bp: Simplify port usage in transport tests
    
    https://github.com/elastic/elasticsearch/commit/c40b77b771b

commit 6dd8bfb07867c48408c37047eaf7d34557521974
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Feb 1 16:44:22 2021 +0100

    bp: Some Cleanup in Test Framework
    
    https://github.com/elastic/elasticsearch/commit/45b8aca6203

commit d34f8b2d31bbdf72260d26e4a2997f14e3154bf6
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Feb 1 15:45:22 2021 +0100

    bp: Use unique ports per test worker
    
    https://github.com/elastic/elasticsearch/commit/3166f7b836c

commit 44ee724c60a158321dfcb8f6c468de4b5043ca41
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Feb 3 20:29:38 2021 +0100

    Reflect 4.4.1 release

commit b8950dac2b1f5fe79080127133cff1431c114fc7
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Feb 3 17:38:32 2021 +0100

    Link create/drop table mentions to sql reference for these statements
    
    The sql reference of `CREATE TABLE`, specially all supported options,
    is quite interesting. Linking to it should help directing users to it.

commit e716a29795a30df54b1252d31754ec131bb2e6d0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 3 11:29:52 2021 +0100

    Fix flaky testSetResetGlobalSetting
    
    The test could sometimes fail with:
    
        Error executing stmt=select settings from sys.cluster args=null error=org.postgresql.util.PSQLException:
        ERROR: [query] Data too large, data for [hash-join: 12] would be [2099414/2mb], which is larger than the limit of [2097152/2mb]
    
    Given that the test only asserts that the setting can be changed and is
    not related to query breaking or accounting behavior it's fine to
    increase the limit that is being set.
    
    The PostgreSQL client can do some `pg_catalog` queries up-front, and we
    recently increased the amount of rows returned in some cases. So it's
    feasible to assume that the amount of required memory increased for
    these queries.

commit baf272307032e6276abeb802ec57bd01d753efe2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 2 10:30:16 2021 +0100

    Rename enterprise → extensions

commit 2ca7042c64aecea6866510a890dd5944ce3f4625
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 2 10:16:25 2021 +0100

    Remove licensing module

commit ce08b5b70ba1f20483e7dbc2511b8f000e4a074e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 2 10:02:56 2021 +0100

    Remove community edition
    
    No longer requires since everything has the same license.

commit 9d281f072e2915a7304facb6d413fe3545ea1475
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Mon Feb 1 20:19:33 2021 +0100

    Rework docs for inserting objects, add subsection for JSON strings
    
    This change does the following:
    
    - Adds a new section header, *Inserting objects*, and moves the *Object
      literals* section under it. This makes way for a new subsection (see next
      item).
    
    - Minor copyedit improvements for the *Object literals* subsection, including a
      reference to the parameter reference docs.
    
    - Adds the *JSON* subsection detailing CrateDB's support for casting JSON
      strings to objects. Because the syntax is potentially confusing here, I have
      copied the examples from the *Object literals* subsection to show how they
      would be formatted using JSON.
    
    Closes https://github.com/crate/tech-writing-domain/issues/111

commit d6c6f0c44fbcd57cb5048a8a0c7e33fecbe631c9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 1 16:40:18 2021 +0100

    Relicense enterprise module under Apache License, Version 2.0

commit 7f702c24bc1c4dfa683b48d36e4454f223e017f0
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Wed Jan 27 15:54:31 2021 +0100

    Update docs to reflect licensing changes
    
    See https://github.com/crate/tech-writing-domain/issues/380 for more info.

commit f0b960f7f5beb713e06b54e9433d8baf92db8858
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 1 15:05:47 2021 +0100

    Remove LicenseService & related classes
    
    A first step towards:
    
    https://crate.io/a/cratedb-doubling-down-on-permissive-licensing-and-the-elasticsearch-lockdown/

commit c7c64e898fc2b90b76c45db553486777ac4a3457
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Feb 1 13:37:04 2021 +0100

    Disable internal paging for PK lookup operations
    
    This fixes an issue with stuck join operations when joining > 2
    tables (nested joins) on the primary key column -> pk lookups.
    Also it descreases internal network traffic, as all results
    from a PK lookup operation will be all sent at once to the downstream.
    Before each record resulted in 1 internal request + a last request
    after the source iteration finished.
    
    Also disables internal paging for count operations to avoid same
    unnecessary internal request. Although it does not result in a stuck
    join in this case.

commit cd8213f2d9d72447f751b3d4402c69094fc09d12
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Sun Jan 31 20:31:36 2021 +0100

    Improvement: Add "advanced use" section to create table docs (closes https://github.com/crate/crate/issues/10366)
    
    This change also modifies the `CREATE TABLE` syntax documentation to add
    cross-links to the sharding and replication docs.

commit 2b92ee609a84e26d3705effdfe4b655fed5935a8
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Sun Jan 31 19:38:01 2021 +0100

    Improvement: Clarify how shard number is calculated (closes https://github.com/crate/tech-writing-domain/issues/152)
    
    This change also adds a note about hash values (calculated from the routing
    column) are used to aproximate an even distribution of rows amongst the
    available shards.

commit d7dffc723eb7b642cdb8d84a5024cd2df91e7d54
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Sun Jan 31 18:23:37 2021 +0100

    Improvement: Rework comparison operators docs (closes https://github.com/crate/tech-writing-domain/issues/200)
    
    This commit makes the following changes:
    
    - Renames `operators.rst` to `comparison-operators.rst`. There are many
      different types of operator. This rename improves specificity and makes the
      filename consistent with the page title.
    
    - Moves some details pertaining to string comparison and data comparison from
      `selects.rst` to `comparison-operators.rst`. Previously, readers who went
      directly to the comparison operators documentation may have missed this
      information.
    
    - Adds a tip mentioning that basic comparison operators can be used as value
      expressions in any context.
    
    - Expands the listing for regular expression comparison operators and links
      through to the array comparisons docs.
    
    - Slightly restructures `selects.rst` to fold regular expressions into the
      comparison operators section and split out array comparisons into their own
      section. A small note has been added to the comparison operators section
      mentioning the existence of basic operators (which are otherwise not
      documented explicitly on this page).
    
    - Fixes some trivial RST formating.

commit 45f573b99b11c1f2ee57bec73cfb7adc43344108
Author: Naomi Rose <23469+mechanomi@users.noreply.github.com>
Date:   Sun Jan 31 20:47:11 2021 +0100

    Update basics.rst

commit be778397ed97244d6571995ee9e0fe82be1d9994
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 1 11:43:42 2021 +0100

    Fix `ReadyForQuery` message ordering on explicit flush
    
    If the flush triggers the deferred executions, then a follow up `sync()`
    returned a completed future. This led the pg-write layer to immediately
    send a `ReadyForQuery` message to the client, even if the operations
    triggered by the flush weren't finished.
    
    This changes the logic so that `flush` sets the `activeExecution`
    property, which will then be used by `sync`. This ensures that the
    `ReadyForQuery` message is sent after the operations have completed.

commit 1b7b2bfdd4e950068be7f11e69c48585369d0767
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Thu Jan 28 11:46:28 2021 +0100

    Slightly improve the README
    
    - Adjust some wordings
    - Put "Features" in a real document section
    - Add the term "document" (store) in order to improve the understanding
      of what "dynamic schemas" really mean
    - Mention support for the PostgreSQL wire protocol and adjust Docker cmd
    - Mention client and shell options how to connect to CrateDB
    - Mention the CrateDB Kubernetes Operator
    - Add more pointers to specific parts of the documentation within the
      "Help" section and add pointers to the cloud offering

commit 0772f2d9b3d76bb8b0ad66de96257151d4ebf2c4
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Mon Jan 25 20:23:15 2021 +0100

    Improvement: Copyedit LIKE/ILIKE performance note

commit 4de26e71e6301c3c7ba627187864fafe0fb17ed7
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Jan 26 13:07:05 2021 +0100

    bp: Enable node roles to be pluggable
    
    https://github.com/elastic/elasticsearch/commit/aa12af8a3c4

commit 485bcf78b4575df30f59c963c8afe5a34f5d7fbc
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Jan 26 14:46:49 2021 +0100

    bp: Omit non-masters in ClusterFormationFailureHelper
    
    https://github.com/elastic/elasticsearch/commit/328ba09f84b

commit 8a64197e1ddfde86325df298ff01295055aae610
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 28 11:11:52 2021 +0100

    Fix nested joins with primary key lookups which require scroll
    
    The `requiresScroll` property for a hash join was always set to `false`
    for the left side. This is true if the hash-join is standalone, but not
    if the hash-join has another parent that requires the hash-join itself
    to be scrollable as well.
    
    If the `requiresScroll` property is set to false, some BatchIterator
    implementations do not support `moveToStart`.
    
    One case where this happens is the primary key lookup. Users would get a
    `stream has already been operated upon or closed` error because of that.
    
    This is a bug that was present for a long time, but the change in
    ab5e0a4a74e4b841661333f6aa1e8f79e6737c5c exposed this now in queries
    which worked in 4.3

commit ed73dcf1b16c7aca3b7de7220c61a7abfbe51e56
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 25 17:39:47 2021 +0100

    Remove Multimap from FetchPhase
    
    Relates to https://github.com/crate/crate/issues/10510

commit 2361f54bead06e0d827c0bb134420f93100e7224
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 25 17:28:00 2021 +0100

    Remove Multimap usage from TransportShardAction
    
    Relates to https://github.com/crate/crate/issues/10510
    
    Should also reduce contention of upsert requests a bit, at the expense
    of making the actual kill logic a bit more expensive.

commit 395549ae2f9bbfc49ca591ffb0bcc22880ff7c63
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 27 10:40:46 2021 +0100

    Fix parameter type extraction for joins
    
    Queries with parameter placeholders in a join condition failed because
    `QueriedSelectRelation.visitSymbol` didn't look at the join conditions.

commit 0f9c034cd6bcf708186807199efbbb186ae7abd4
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Tue Jan 26 18:41:27 2021 +0100

    Correction: Fix explanation of unusual nested structures syntax and array limitations
    
    See <https://github.com/crate/crate/issues/10110#issuecomment-767466005> for
    more information.

commit fd31b895ef997a859918792e456cea6d00eead5f
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Tue Jan 26 19:05:10 2021 +0100

    Improvement: Add tip about generating offset CURRENT_TIMESTAMP values (closes https://github.com/crate/tech-writing-domain/issues/305)
    
    This changeset also includes a minor copyedit of this subsection.

commit 35ed22aac4f92432b16b5c8183782826120666e6
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Mon Jan 25 23:30:46 2021 +0100

    Copyedit: Trivial RST and style improvements (closes https://github.com/crate/tech-writing-domain/issues/214)

commit a270fe9544bac3a6d6bb290eb519865ad2f0e96d
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Mon Jan 25 21:59:52 2021 +0100

    Improvement: Clarify cluster awareness settings docs and cross-link to node settings docs (closes https://github.com/crate/tech-writing-domain/issues/139)

commit 77a04f386f59c3cb5bea54bd0047e5d3fb722121
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Mon Jan 25 20:44:30 2021 +0100

    Improvement: Minor copyedit for `encode()` and `decode()` (fixes https://github.com/crate/tech-writing-domain/issues/45)

commit 96988544c8699d309e7d603af864d6d68eff2604
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 19 16:58:27 2021 +0100

    Make source parsing eagerly type aware
    
    So far we parsed the source into an `Map<String, Object>`, where we
    typed the `Object` based on the value encountered in the JSON source.
    
    This could lead to values that should be typed as `LONG` to be typed as
    `INTEGER`. Because of that we added a `implicitCast` call to ensure the
    types returned from the parser match the expected types.
    
    The problem with that is that `implicitCast` can be a costly operation
    for arrays or objects, as it has to create a full copy.
    
    This commit makes the source parser type aware, so that we can type the
    leaf values in the correct type to begin with and don't need to correct
    the types later on with an `implicitCast`.

commit 848e97b8fb4e7c12e9fb4a61b0b606e2963563d8
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jan 26 16:02:57 2021 +0100

    Bump version to 4.5.0-SNAPSHOT

commit d80429be57ec03b7685a21fa89f1bb067756a258
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 26 11:31:47 2021 +0100

    Fix flaky create_azure_snapshot_and_restore_it

commit 8f9d6cdff2532e908e1c785cd1d2cc81cb138906
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Jan 25 14:25:33 2021 +0100

    Enable slow tests for jenkins java tests

commit c3243580c6e36f682dccf06c49c79203028799e1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 25 10:47:30 2021 +0100

    Remove dead code from TransportAction
    
    `taskManager.register` always returns a Task instance, so the `task ==
    null` branch is never used.

commit 03a849e6994cc6061b861154acd4139e04682848
Author: Houssem Nasri <housi.housi2015@gmail.com>
Date:   Thu Jan 21 21:08:09 2021 +0100

    Update user-defined-functions.rst

commit dc337c442ed00e03f18cfab724d7a8fef9ef48b1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 25 09:42:19 2021 +0100

    Remove the LoadingCache from BlobSchemaInfo
    
    We did the same for the DocSchemaInfo some time ago.
    
    See 1018780632cd80f41870ee72031affcaeb4e0cdf

commit 2d7db546811991e2e3b06633f433e7d8e67b4a1d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Jan 24 11:24:30 2021 +0100

    Update JDK to 15.0.2+7
    
    https://bugs.openjdk.java.net/browse/JDK-8253202?jql=project%20%3D%20JDK%20AND%20fixVersion%20%3D%2015.0.2%20ORDER%20BY%20created%20DESC

commit f94e911b8d6ddcd5c6916ca9253b4627ea0476ee
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Thu Jan 21 20:29:44 2021 +0100

    Correction: Fix spelling of "Lucene"

commit a1b3050484218a7563bb25a56239fe2ab638d2cf
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Jan 21 14:03:16 2021 +0100

    Add restart callback back to InternalTestCluster to fix DiskDisruptionIT

commit e9019d37fdeaf1ac3a3f971b2cae284d70b5696a
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Jan 20 13:35:03 2021 +0100

    Make sure master node is never stopped in InternalTestCluster
    
    This makes sure the master node is never stopped in InternalTestCluster
    based on https://github.com/elastic/elasticsearch/commit/a052067759a

commit 453b2f25be97b37da408349068778c106fc1097c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 21 10:22:19 2021 +0100

    Update antlr to 4.9.1
    
    Release notes:
    
    - https://github.com/antlr/antlr4/releases/tag/4.9
    - https://github.com/antlr/antlr4/releases/tag/4.9.1
    
    Nothing major targeting java but shouldn't hurt to stay up2date.

commit 43256d196b9c4147685d75b26bfdb2e9658e7a3c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 13 10:43:23 2021 +0100

    Remove AwaitsFix from test_retrieve_segment_information
    
    Not reproducable locally. Let's see if it still fails on CI

commit 206dc6ebb4e06aca1dcc332bc4eb81e6879f1dcb
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri Jan 15 11:54:39 2021 +0100

    bp: Allow cluster access during node restart
    
    https://github.com/elastic/elasticsearch/commit/4fd7a22fcfd

commit 28a9ba6c09ebb5920b30b2f7f2af8d333e4db1de
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Jan 14 17:50:31 2021 +0100

    bp: Increase waiting time when check retention locks
    
    https://github.com/elastic/elasticsearch/commit/bc008d8a9db

commit 2e6caa9c7867f87dfaa96df42f88e32d979af5a3
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Jan 14 17:32:50 2021 +0100

    bp: Remove some leftover refs to minimum_master_nodes
    
    https://github.com/elastic/elasticsearch/commit/fe1674174f6

commit 61c8326e8c27c31c66f940a3c1db45e9c046d9ad
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Jan 14 15:35:42 2021 +0100

    Add InternalTestClusterTests back to test-suite

commit 9e80e3223a397b6803538f7b95e43bfc692283bd
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Jan 13 11:28:28 2021 +0100

    bp: Remove transport client from tests
    
    https://github.com/elastic/elasticsearch/commit/1b6dc178388

commit 6aac9fa40f6dc2e7f43be05e2473b471ba20da13
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Jan 12 16:23:09 2021 +0100

    bp: Cluster state from API should always have a master
    
    https://github.com/elastic/elasticsearch/commit/c1de8c29db2

commit aab7f2138b8bfe8b8b767f56d0c9d0ce186cc458
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Jan 13 16:00:14 2021 +0100

    bp: Remove `Tracer` from `MockTransportService`
    
    https://github.com/elastic/elasticsearch/commit/2f41b1b64de

commit 448cd98d04139fdf900fbbdc25a65e345c6dcb2b
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jan 19 16:56:08 2021 +0100

    Release 4.4.0

commit f59675834b46c297ac49644849d025853e73d5d5
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Jan 13 15:37:29 2021 +0100

    Move discovery.initial_state_timeout from DiscoverySettings to Node

commit d11978c3a541c028efda5008f3f0024a98c9bf56
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 19 13:29:46 2021 +0100

    Extend filtered source parsing to object columns
    
    Instead of applying the filtering only on the top-level columns, this
    changes the filtering to also work on nested columns.

commit 527b55fc72ebf438e962a24a7eb7c6700032d83e
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jan 19 13:07:54 2021 +0100

    Reflect 4.3.4 release

commit d461514886b30f8f730126e3a5ab650b0bee25b9
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jan 19 10:25:29 2021 +0100

    Fix join executor test case, expecting it to fail with previous version
    
    The existing test did not fail as expected if the previous version is on the
    same major + minor number since we changed the logic by
    https://github.com/crate/crate/commit/f939b02fe79.
    A previous version with a different minor must be used now.
    
    Follow up of https://github.com/crate/crate/commit/f939b02fe79.

commit 4a926788262b34ffb9595be5f9466fe99340b682
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Jan 18 15:51:03 2021 +0100

    Deprecate zen 1 Discovery Settings
    
    This deprecates the  settings ``discovery.zen.publish_timeout``,
    ``discovery.zen.commit_timeout``, ``discovery.zen.no_master_block``,
    ``discovery.zen.publish_diff.enable`` because they are not used for
    zen2 anymore.

commit f939b02fe79fe100ad6226a1c9cd2b954814cc6f
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jan 18 11:21:33 2021 +0100

    Adjust versions checks on node joins to allow hotfix version differences
    
    On node joins, nodes with same major and minor version (so just
    a different hotfix version number) should be allowed to join.
    This will support running a cluster with nodes downgraded to a
    different hotfix version number.

commit 3b623455002fab8daa419a0d55fb90004d0dcf63
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 18 14:48:03 2021 +0100

    Group unreleased release notes by topic

commit 1f84fb57170d9e1bf6e052da30647d84cacf52e7
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Jan 12 15:20:42 2021 +0100

    bp: Added wait_for_metadata_version parameter to cluster state api
    
    https://github.com/elastic/elasticsearch/commit/7624734f14b

commit 7cfe0455f0c649dc51f7d42553c77eb906156d87
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 18 14:54:35 2021 +0100

    Fix ECMAScript 2019 reference

commit 0741b72e72cccef7e6c508b42c82afe8a4f75f19
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 18 14:30:50 2021 +0100

    fixup! Support ISO format in TimestampZType decodeUTF8Text

commit 63759d189d48c23ba64156ab7646d1911e703d50
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 18 14:19:10 2021 +0100

    Support ISO format in TimestampZType decodeUTF8Text
    
    Because of the fix in [960888989292a7657d999c3bf669d7143c66814f][1]
    timestamp values were no longer streamed as undefined (text) and then
    implicitly cast to timestamp using the `DataType` implementation, but
    instead they were directly decoded using the `TimestampZType`
    implementation, which supported a different set of formats.
    
    This commit changes the decode implementation to first use the logic in
    `DataType.TIMSTAMPZ` and then as fallback the previous decode
    implementation. This ensures all formats we previously supported
    continue to work.
    
    We should eventually re-work the decode implementation to support all
    PostgreSQL date/time input formats as described in their documentation:
    
    - https://www.postgresql.org/docs/current/datatype-datetime.html#DATATYPE-DATETIME-INPUT
    - https://www.postgresql.org/docs/current/datetime-input-rules.html
    
    [1] https://github.com/crate/crate/commit/960888989292a7657d999c3bf669d7143c66814f

commit 42feeb35823918a5f7b4411184dbe7bd355f8ebc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 13 15:38:29 2021 +0100

    Change source parsing to exclude unnecessary columns
    
    This is a subset of the work started in https://github.com/crate/crate/pull/10832
    Instead of creating a map in-memory with all the columns in it, we now
    only add the columns the user selected.
    
    This reduces the memory footprint, especially if only a small subset of
    the columns from a wide table is selected.
    
    This can improve performance a lot if there is GC pressure.

commit 0aa110e1baeb739448fa2118c22680c0c208b5df
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 13 11:59:54 2021 +0100

    Include real table_oid and attr_num in RowDescription message
    
    Closes https://github.com/crate/crate/issues/10893

commit 8a4ffcebe7e0cb296cd215165c157c5a6d910d05
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 15 17:10:15 2021 +0100

    Add compile support to ToChar function
    
    If the given pattern argument is a literal, we can parse it upfront
    using the compile scalar API instead of parsing it per row.
    This greatly improves performance.

commit 1d63cccded392eb54860e1d2c73afb4ddd7786de
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Fri Jan 15 15:20:36 2021 +0100

    Add release notes item about the JNA version bump

commit 1aabde09ce7c8ca0ab2a45d0d39da0828b8779ed
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 15 12:04:13 2021 +0100

    Made stmt.visitSymbol impl mandatory, add missing implementations
    
    If a visitSymbol implementation is missing, possible parameter
    symbols are missed to consume which leads to broken parameter
    descriptions.
    To avoid that, `AnalyzedStatement.visitSymbols` is mandatory to be
    implemented by child classes now.
    
    Additionally, this commit adds the missing implementations.

commit d5800eb31add9332c88443cb96d070184f736070
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 15 11:03:42 2021 +0100

    Remove to_char(number, text) scalar function
    
    The current implementation of `to_char(number, text)` used the
    Java DecimalFormatter and thus did not support PostgreSQL's
    template patterns.
    To be PostgreSQL compatible, we must come up with a new implementation.
    
    Partly reverts https://github.com/crate/crate/commit/88981932462
    and https://github.com/crate/crate/commit/6c827fb3c77.

commit a043eca82d557532ffdb7598e0a70952b6c04471
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Mon Dec 14 21:55:52 2020 +0100

    Improvement: Overhaul `SELECT` docs for arrays and objects
    
    This commit is a complete rework of the documentation on arrays, objects, and
    nested structures:
    
      - Narrative flow has been improved so that each section leads into
        and builds up to the next
      - Example data has been changed so that the The Hitchhiker's Guide to the
        Galaxy theme (established elsewhere) is maintained throughout
      - Example queries and and example data have been improved to better show what
        is being demonstrated
      - Syntax explanations have been expanded, clarified, and so on
      - A tip has been added to address the fact that array syntax doesn't follow
        the usual left-to-right convention for addressing the contents of a nested
        structure
      - A new subsection, "Limitations", has been added to better communicate some
        important specifics of array access
      - A tip has been added about nonstandard syntax for addressing the elements
        of a second array
    
    Other changes to the "Selecting data" docs:
    
    - Adds the "Comparison operators" and "Nonscalar data types" headings to better
      indicate the relationship between subsections
    - Updates to some example outputs to reflect changes made to the test data
    - Minor additional edits for clarity, style, and consistency
    
    Changes to other files:
    
    - Fixes a `test_docs.py` deprication warning
    - Fixes test data ID values (removes the double quotes)
    - Alters the test data to better suit the examples in `selects.html`
    - Renames `race` to `inhabitants`
    - Minor updates for files impacted by the changes above (test data changes, RST
      editing, and so on)
    
    See <https://github.com/crate/crate/pull/10866> for more information.

commit 6c827fb3c77bff227ce6e3e563549001baf7e8e7
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jan 13 16:35:06 2021 +0100

    Add support for `numeric` data type arguments on `to_char` and `negate`

commit a316d480fe1f091773afe094de864b6a6296267a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 13 15:56:17 2021 +0100

    Update netty to 4.1.58
    
    4.1.57 contained a regressions:
    
    https://netty.io/news/2021/01/13/4-1-58-Final.html

commit d98ceb01f026f54696d79147c1098dfed3f0bf45
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 13 14:26:26 2021 +0100

    Ensure all types returned via `pg_type` table can be looked up by oid
    
    We must ensure that types we expose via the `pg_type` table can be
    used by clients when serializing parameters.

commit 13d4ea5db7ce177b56cf6a00eb8c583ae83d9ae3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 13 12:21:40 2021 +0100

    Log connection reset errors on debug instead of error
    
    Connection reset errors from PostgreSQL clients are mostly harmless and
    logging them on error level with full stacktrace can unnecessarily scare
    system administrators.
    
    This changes the log level to info and excludes the stacktrace.

commit 955c85d7f01c67f2da8428842b48beacb5b1c269
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 13 14:37:43 2021 +0100

    Fix flaky CommonAnalyzerITest / add visitSymbols to create analyzer stmt
    
    https://github.com/crate/crate/pull/10901 made the tests flaky because
    of a missing `visitSymbols` implementation.

commit 7e6bd17d4739b07bf6930ef4ec37e402a8ada933
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 12 15:42:08 2021 +0100

    Require parameterTypes in PreparedStmt
    
    This removes the `ParamTypeHints` from the `PreparedStmt` and instead
    requires the `describedParameterTypes`.
    
    In the postgres wire protocol they're always used anyway.
    This simplifies the usage of the `PreparedStmt` a bit - no more
    `ensureDescribed`.
    
    It also uncovered some issues with missing `visitSymbols`
    implementations of various statements which were hidden because of the
    `paramTypeHints` fallback.

commit 15a1ab005cac07aa6320c9516cb297b3662b2f09
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 12 17:16:13 2021 +0100

    Change format_type to return array type names using pg notation
    
    This changes the `format_type` function to use the pg notation with `[]`
    suffixes for array types.
    
    It doesn't change the `DataType.getName()` implementation to avoid
    having a breaking change in the information schema tables.
    
    Instead the name is generated differently directly within the
    `FormatTypeFunction`
    
    Closes https://github.com/crate/crate/issues/10888

commit 175bc63e8db120d9c4ebb6f2d95f69ac5734313b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 12 16:49:43 2021 +0100

    Update netty to 4.1.57
    
    - https://netty.io/news/2020/12/17/4-1-56-Final.html
    - https://netty.io/news/2021/01/12/4-1-57-Final.html

commit bff4fb6867909a58bb88acd708d58f8eb0dab49a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 12 10:46:32 2021 +0100

    Remove unnecessary doGetSequentialStoredFieldsReader
    
    There was only a single class overriding the method and it returns the
    reader as is.
    
    In ES there are a couple of more implementations, but also all of the
    Apache Licensed implementations return the reader as is.

commit d77e1336bdf5fce885565027a6948f507e3380e6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 12 14:59:01 2021 +0100

    Fix default traversal of match predicate
    
    We must visit all symbols of the match predicate in order for other
    components like the `ParameterTypeExtractor` to work.
    
    This fixes https://github.com/crate/crate/issues/10897

commit b0461dac008caf257f080c262c65ad633604894a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 11 15:58:39 2021 +0100

    Fix broken result ordering for selects with QTF
    
    https://github.com/crate/crate/pull/10862 added an optimization that can
    lead to incorrect leads.
    
    Assuming the following data:
    
         x  | y
        ----+------
        ("A", "a")
        ("B", "b")
        ("C", "c")
    
    In a query like
    
        SELECT x, y FROM tbl ORDER BY y
    
    The value for `y` is eagerly collected, and only `x` is fetched. The
    incoming rows might then look like the following. Note that they are
    ordered by `y`:
    
         symbols  |    values
         ---------+----------
        (_doc, y) -> (4, "a")
        (_doc, y) -> (2, "b")
        (_doc, y) -> (8, "c")
    
    The optimization logic ordered by _doc, and returned the values that are
    fetched in this order
    
        2 -> "B"
        4 -> "A"
        8 -> "C"
    
    Which are then stitched together like this:
    
        ("B", "a")
        ("A", "b")
        ("C", "c")

commit 88834923cbfa94cedeca2eb0b5fb872b42edc5b1
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Jan 11 16:24:31 2021 +0100

    Fix typo in backport guide

commit e21eadfab75a6c51fcac6f691986eb8a2086b3a6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 11 12:05:38 2021 +0100

    Update gradle to 6.8.0
    
    https://docs.gradle.org/6.8/release-notes.html

commit 34dec2401a1aad6ba9bfa108a5691ce8b4c141f0
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Dec 18 17:50:38 2020 +0100

    Fix numeric to integer/bigint casts
    
    If the numeric is in a valid integer/bigint range, casting must
    succeed even if it looses the fraction part.
    Only if the integer part exceeds the valid range an exception must
    be thrown.

commit 982e579d45f5c9131a9618bdb5dce09e254fa467
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Dec 16 15:10:04 2020 +0100

    Add arithmetic support for numeric type

commit 03c6cc8b0060ecb104886cd782bdcb28ade8fb75
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Dec 16 15:11:06 2020 +0100

    Fix pg numeric binary protocol support
    
    Implementation is validated locally by using a self-built version of
    PgJDBC master which includes binary support for numeric types.
    See https://gist.github.com/seut/275e734c66b3f6b02d4e1cf9df5233ef,
    https://github.com/pgjdbc/pgjdbc/commit/c85b149d68c.

commit 6646b390b77dcc946a084e99115de3efd2497728
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Mon Dec 7 18:22:41 2020 +0100

    Add documentation for the numeric type and numeric sum aggreagtion.

commit 7a5895613d4522b2f7237f2840364d11e76dc8f2
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Mon Dec 7 18:22:08 2020 +0100

    Add support for the numeric data type in the sum aggregation.

commit 1058ad8651715f7c06c31438b1879b237eb7926d
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Thu Dec 3 16:50:22 2020 +0100

    Add the PG wire protocol support for the numeric data type.

commit 6a376daa6473fe1d0b628f29ded251533855f674
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed Dec 2 14:44:21 2020 +0100

    Add precision and scale parameters to the numeric data type.

commit ddc5df59b3710f0546a9a389925f22b39fa1a74f
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Mon Nov 30 17:16:27 2020 +0100

    Add the numeric type cast support for primitive numeric types.

commit 20cbff54b32ae51bbf3f40499c5ca070d13c0ebb
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Thu Dec 3 12:07:52 2020 +0100

    Add a size estimator for the numeric data type.

commit b1f0d0f5bc593908667487a780a2d5da250553bc
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Mon Nov 30 17:15:18 2020 +0100

    Add the numeric data type.

commit 73e13e6807720b0fe43d91b6e78e21e50bf8f066
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 8 11:34:08 2021 +0100

    Fix function matching based on numer of exact argument types
    
    The function matching fallback logic to select the most specific
    function signature based on the numer of exact argument types wrongly
    used the bound signature instead of the declared one.
    
    This also required some hardening on most subscript function signatures
    which were only working before by coincindence based on this mistake.

commit 2788b1705626d2d66c3f81a06509f26661d152fc
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Jan 6 14:25:25 2021 +0100

    Reflect 4.3.3 release

commit 960888989292a7657d999c3bf669d7143c66814f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 5 13:23:52 2021 +0100

    Ensure param types can be resolved correctly in bind
    
    Clients like postgresql-typed[1] don't send a `describe` message, but
    `parse` followed by a `bind`.
    
    In such a case the type resolved to `undefined` - which broke reading
    integer and other types if serialized as binary.
    
    This commit ensures we always do an implicit `describe` if it hasn't
    been done explicitly to ensure that the types can be read properly.
    
    [1]: https://hackage.haskell.org/package/postgresql-typed

commit 9498cad207f19aa35eb862d8500c6de288ef9a16
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jan 5 10:59:21 2021 +0100

    Rewrite order by symbols to source lookups if collect symbols are rewritten
    
    If the collect symbols of a RoutedCollectPhase are rewritten to source
    lookup references, possible order by symbols must be rewritten as well.
    
    Relates #10884.

commit 402fb911e072db98a2d1a642d40b660c1fc60673
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jan 4 13:10:05 2021 +0100

    Fix streaming of target columns of the ColumnIndexWriterProjection
    
    Fixes a regression introduced by
    https://github.com/crate/crate/commit/468ef007fa8
    which added an incorrect writing of the target column size.
    As an result, copying data from a source table with > 128
    columns caused a NPE.
    
    Fixes #10874.

commit b470a702fbdb632e41c1311e1b55862d3fff7ed3
Author: Johannes Faigle <johannes.faigle@crate.io>
Date:   Wed Dec 16 19:00:51 2020 +0100

    Fix typo

commit 55a64183f7b511f0611700357f995d4e6df5b519
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Mon Dec 21 13:55:00 2020 +0100

    Correction: Fix old URLs still pointing to `guide`
    
    I have gone through every link that uses the `/guide/` in the URL and updated
    the link to point to the current location (which in some cases is not as simple
    as a direct string replacement).

commit 96456bad554bfcc4c3a7673fe005995ff6102226
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Dec 21 13:15:21 2020 +0100

    Fix output names of COPY TO statements
    
    The output name must not be a double-quoted column name for upper case
    columns.
    For generated expressions, the column name must be used instead of
    the full expression.
    
    Fixes #10875.

commit be75fa5f6a27e71ed2ca5127f283a9c93326abb9
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Mon Dec 21 11:23:43 2020 +0100

    Correction: Clarify note about stock `crate.yml` file
    
    The stock ``crate.yml` file is shipped with the Linux packages as well as the
    tarball distribution. "Stock" works here as an adjective without further
    specificity.
    
    Additionally, this change clarifies the paragraph addressing the use of default
    users.

commit b2ac71006b53d8ff76a96e76c2d50bbdedaca8df
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Thu Dec 17 23:40:12 2020 +0100

    Correction: Use HTTPS instead of HTTP for links (fixes crate/tech-writing-domain#316)
    
    This change also zaps some trailing whitespace.

commit a5e6e5c439b6ca887c3beb80232170ba914cda24
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Thu Dec 17 23:23:06 2020 +0100

    Correction: Add a note about the availability of the `KILL` statement (fixes #10209)
    
    This change also fixes a minor RST formatting issue with another link in the
    same document.

commit 81041204c3db8c2dc594dee8f47c1a524cec61fe
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Thu Dec 17 22:51:51 2020 +0100

    Correction: Fix use product names in the release notes (fixes crate/tech-writing-domain#155)
    
    Product names, such as PostgreSQ, should always be referred to in full and
    using proper noun capitalization (or the brand appropriate typographical
    stylization).
    
    Additionally, this changeset fixes the use of `crate` as a literal.

commit 4a0a7c8e5000b830a4ff3caedda961d098a48238
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Fri Dec 11 20:30:32 2020 +0100

    Correction: Fix default authentication config documentation intro (fixes #10119)

commit fd03fa701e76fe4104f56df2e2326fca83c2c4f4
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Fri Dec 11 19:58:48 2020 +0100

    Correction: Cross-reference `blocks.read_only_allow_delete` (fixes #10394)

commit 66fce1e599017ac59af871df24ac3b1d91b33e17
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Fri Dec 11 19:32:52 2020 +0100

    Correction: Add clarification and cross-reference for object literals syntax (fixes crate/tech-writing-domain#201)

commit ad21e7c3f23b8fdf822b6c9273974ef7cfb605a1
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Fri Dec 11 19:21:55 2020 +0100

    Correction: Add note about doc only being available after the first table is created (fixes crate/tech-writing-domain#206)

commit e07ef02576b1488053aed9e3e429271bd6c84c14
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Fri Dec 11 19:03:24 2020 +0100

    Correction: Clarify `single-node` admonition and copy to shared-nothing concepts document (fixes #10058)

commit 572fc6a6a0043a3e2374e96c4097d3933f9bceeb
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Dec 17 20:47:57 2020 +0100

    Optimize ReaderContext creation for LuceneCollectorExpressions

commit 4963714a2a4d29d519d43d3a58881818861a5c4d
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Dec 15 16:41:21 2020 +0100

    Optimize fetch performance for sequential value retrieval
    
    This addresses the performance regression from the Lucene 8.7.0 upgrade.
    The fetch performance can be optimized for the case where the retrival
    is in sequential order by leveraging the merge instances of stored fields
    readers that are optimized for sequential access.

commit 4d285ce629724e4af79e31175b516efaff87dda6
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Thu Dec 17 02:49:00 2020 +0100

    Improve the experience when working on the documentation
    
    - Reuse saved Sphinx environment to prevent always reading all files
    - Don't clean output folder on each invocation
    - Replace the wrapper shell with the "sphinx-autobuild" process to make
      it receive SIGINT from gradle. Otherwise, it will keep running.
    - Use most recent "sphinx-autobuild" package
    - Adjust output folder when running on Jenkins

commit 53e1d239469c46ab5fe4c64aa1446c05dbd535aa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Nov 14 20:55:40 2020 +0100

    Add an empty pg_catalog.pg_am table

commit e94fd30a6ff9192cd27e28eb9ccf2cd7dd64fee6
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Tue Dec 15 12:25:32 2020 +0100

    Improvement: Make `ITEST_FILE_NAME_FILTER` documentation more visible
    
    This change does the following:
    
    - Lifts the mention of `ITEST_FILE_NAME_FILTER` into its own example in
      `tests.rst`
    - Adds a mention of `ITEST_FILE_NAME_FILTER` to `write_docs.rst`
    - Links to the `test_docs.py` file (and fixes link list ordering where
      appropriate)
    - Re-orders the sections in `write_docs.rst` to prioritize the Gradle workflow
      (and in turn, promote the execution of the docstests during development)
    - Adds a new header for CI/CD information to split this off from the build
      workflow content
    - Adds a TOC to `write_docs.rst` to aid navigation
    - Fixes some RST literal syntax

commit 71c4a024736d8e2c39b39dac1951b4f0249e6574
Author: Mika Naylor <mail@autophagy.io>
Date:   Mon Dec 14 12:52:06 2020 +0100

    Use postgres compatible formatter for to_char with interval types

commit 15ff41d22b91156176fc33396392d4ab8c36773d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 9 16:22:33 2020 +0100

    Remove unused imports in test code

commit 3a578e445f22e924a6c000d0746a6bf3feb52231
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Wed Dec 2 16:06:52 2020 +0100

    Fix handling of spaces in `$CRATE_HOME`
    
    Included changes:
    
    - Drops the unnecessary and potentially misleading hashbang from `crate.in.sh`
      because the file is meant to be sourced not executed.
    
    - Puts `$CRATE_HOME` in double quotes when used in a for loop. This prevents sh
      from interpreting a space in this variable as an item terminator.
    
    - Wraps `${LOGGC}` in nested double quotes. This prevents sh from interpreting
      a space in this variable as an argument terminator when used in `$JAVA_OPTS`.
    
    - Sets `-e` on the `bin/crate` hashbang, ensuring the script exits immediately
      if an error is encountered. This prevents cascading errors.
    
    - Wraps the variables passed to `exec` in two sets of double quotes. This
      preserves one set of double quotes in the subcommand being executed, which is
      necessary for paths with a space in them.

commit f35d9b9cff92623ca0fa588ab1e09c21527c1a7e
Author: Mika Naylor <mail@autophagy.io>
Date:   Fri Dec 4 14:00:50 2020 +0100

    Add postgres syntax compatible parser for to_char scalar function

commit 452cf69a2a83a2fd84cb68c946bedd9b2a461aff
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 8 20:59:06 2020 +0100

    Update netty to 4.1.55
    
    https://netty.io/news/2020/12/08/4-1-55-Final.html

commit d500f0b3c098ca64ef086cd20c1a4e362e2720df
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Dec 8 10:32:40 2020 +0100

    Add master transport action commits to es-backports.rst

commit 698dafe43c592cbdaf3a9d029dfa759135d5c241
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Dec 8 10:17:39 2020 +0100

    Add replication action commits to es-backports.rst

commit b7a45950da71b884d5233debc32b9e823d344ffb
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 29 11:01:24 2019 +0100

    bp: Remove obsolete resolving logic from TRA (#49685)
    
    https://github.com/elastic/elasticsearch/commit/3ad8aa6d465

commit 24948f3b13039bd709b43e0abe541a58eb42b57d
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 29 01:57:07 2019 +0900

    bp: fix mis typo (#49689)
    
    https://github.com/elastic/elasticsearch/commit/602e589235d

commit 490b718bedde4aabbe0506d4137474913e8fe656
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 16 13:03:55 2019 +0100

    bp: Inline TransportReplAct#createReplicatedOperation (#41197)
    
    https://github.com/elastic/elasticsearch/commit/5708796e513

commit 75130582279d4c2830f71f30f539e96575150c50
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Apr 11 20:26:18 2019 +0100

    bp: Move primary term from replicas proxy to repl op (#41119)
    
    https://github.com/elastic/elasticsearch/commit/b41e3fc09f2

commit 8affbd975e2d584d9287e8d29847cae42be0812f
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jun 22 15:03:01 2018 -0700

    bp: Core: Combine doExecute methods in TransportAction (#31517)
    
    https://github.com/elastic/elasticsearch/commit/7a150ec06d5

commit d81d6d8e46cca2a68e176a64ecfbb62ffc2081e7
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jun 21 11:25:26 2018 -0700

    bp: Core: Remove ThreadPool from base TransportAction (#31492)
    
    https://github.com/elastic/elasticsearch/commit/4f9332ee16bcc422144a866122eb8bc2df2c0040

commit f7275ec2dcc3c26eebd4c0e0113568efa357eb88
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jun 19 17:06:09 2018 -0700

    bp: Core: Remove index name resolver from base TransportAction (#31002)
    
    https://github.com/elastic/elasticsearch/commit/401800d95840a91fb0c8896251d2b6e7972a707c

commit 8f45ce1574fbd926c2925b97661c3e758385d5e3
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Dec 7 21:08:36 2020 +0100

    Move TransportVerifyShardBeforeCloseActionTests to correct package
    
    Follow up of https://github.com/crate/crate/commit/258b015b569f6be146d865b70e8d2af5008ebb11

commit 5129175700bbcad73f4a677b059c810170498e45
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 7 15:30:28 2020 +0100

    bp: Check again on-going snapshots/restores of indices before closing
    
    https://github.com/elastic/elasticsearch/commit/a5d9939ac119d7f836408341a562e7bbeeac1e98

commit 6b301de24d1fe994833529a81316eb4768e168c5
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Dec 7 12:46:27 2020 +0100

    Set shardId on blob requests
    
    Resolve the shardId upfront of creating any blob request instead
    of using the deprecated `resolveRequest()` method which resolves
    the shardId during transport execution.
    
    This is needed as recent ES changes removes usages of
    `resolveRequest()` inside the replication logic.
    See https://github.com/elastic/elasticsearch/commit/3ad8aa6d465.

commit 826257f1a9c773a5e5057e5b954c8690487cef5e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 7 13:35:15 2020 +0100

    Add elasticsearch.cluster.routing package to es-backports

commit 134389b4799351141ac65f68432f222deb7cc02a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 7 11:56:50 2020 +0100

    bp: Faster access to INITIALIZING/RELOCATING shards
    
    https://github.com/elastic/elasticsearch/commit/30b0a4ee7ff93a229c5a824fcc3035f082c9789f

commit 3e390d85c7c0a665ef89210dd68f034f3a27773a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 7 11:50:02 2020 +0100

    bp: Shrink should not touch max_retries
    
    https://github.com/elastic/elasticsearch/commit/ff575a3e941c8f710bfdf7c137cdbde6985e545e

commit ef0318a96ecb2643710c62dee705155620cb4ed4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 7 11:39:12 2020 +0100

    bp: Only apply initial recovery filter to shrunk shard
    
    https://github.com/elastic/elasticsearch/commit/fe1841f4d45d057c9af2b61f22256b2559a84303

commit 7b989486c9527714b75ac15b892a0ca34c6c3ffc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 7 11:09:03 2020 +0100

    bp: Short-circuit rebalancing when disabled
    
    https://github.com/elastic/elasticsearch/commit/2e21a11a461827ffc9badf16c9c80ce1e8e1aff9

commit 689d20cb5d64f3a0b5ee66b7ccc2611632f135b7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 7 10:51:35 2020 +0100

    bp: Simplify calculation in AwarenessAllocationDecider
    
    https://github.com/elastic/elasticsearch/commit/a462220297d53f1d791dbc4b9dc63173effba6a3
    
    Also contains a part of
    
    https://github.com/elastic/elasticsearch/commit/216c761a5dd81e65ca9826fb0793ddc53cd2ff27

commit cd863cd0c15c894912391f266e6cab3aae4d6207
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 4 11:03:58 2020 +0100

    bp: Remove non task-aware version of master and node operations (#43563)
    
    https://github.com/elastic/elasticsearch/commit/516b4b9e5f5677d0468b8924e247613961731373

commit 1bdbebcab6ddffaf7cca8130924d1eb7b01677ce
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Dec 2 14:27:18 2020 +0100

    Mute flaky SysSegmentsTableInfoTest test_retrieve_segment_information
    
    https://github.com/crate/crate/issues/10843

commit e10337a630c19d6a6d235f4d4a15b15948083679
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Nov 30 20:20:50 2020 +0100

    Add shard specific information to jmx node info

commit 9389bb2839e6357c3b1c72bc8fd69e7b120161df
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Mon Nov 30 19:18:05 2020 +0100

    Documentation: Upgrade to Sphinx 3.x
    
    When pulling in crate-docs-theme>=0.12.0, building the documentation
    should also work when using sphinx>=3.3.1.

commit 889819324623dbbba5af459a963ab5bf8c4e5cef
Author: Mika Naylor <mail@autophagy.io>
Date:   Thu Nov 26 17:20:02 2020 +0100

    Add to_char scalar function

commit 1738fcce4652d40b1a07c0bf229bf3f6d867f300
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 1 10:48:02 2020 +0100

    Fix bytebuf leak in SrvUnicastHostsProvider

commit 663150f305727bc50ca3269ecd5657c1a3b758d9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 1 10:08:20 2020 +0100

    Set netty leak detection to paranoid in blackbox tests

commit 96c513482d51551aeeedf55172a1a8fd55b4028e
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Fri Nov 27 16:37:33 2020 +0100

    Improve more links within the documentation
    
    When using Sphinx 3.3.1, the linkchecker became even more capable
    and reported many more broken links. For example, URLs derived
    from inline links within reStructuredText became visible.
    
    Also, by using the "--keep-going" option, the report includes _all_
    broken links instead of just one as before and "-q" reduces all
    noise about the good/non-broken links. This tremendously helps when aiming to mitigate all errors coming from this within a single shot.

commit c3880ed9863ed025e3a438a7c7d004c45c3829fd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 27 15:04:04 2020 +0100

    Increase timeouts in MasterDisruptionIT
    
    See
    
    - https://github.com/crate/crate/commit/c646b689e10be76a15f84568e15481d21f1647ac
    - https://github.com/elastic/elasticsearch/commit/55d6ef298ac23fca2961194e078ca28de10e826d

commit 194e900acfb812a7bc8173fe2d191933c3d8e79b
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Thu Nov 26 19:05:36 2020 +0100

    Improve some links within the documentation

commit 2f99f0e36a939434fed70cb199681dc70a4aab85
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Nov 25 09:30:49 2020 +0100

    Fix changing of "cluster.info.update.interval" global setting
    
    Fixes a regression introduced in CrateDB `4.0` which prevents to
    change the "cluster.info.update.interval" setting as it was removed
    from the allowed cluster settings list.

commit a7493cf1f313de841f60f8cac150851406abc3cf
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Nov 26 17:13:44 2020 +0100

    Remove obsolet assertBusy calls on FilteringAllocationIT
    
    The root cause for flaky test, which was tried to workaround
    by the assertBusy calls, is solve by backporting fixes of the
    cluster health action which is used by `ensureGreen`.

commit 27a35a1c2fde97fd8eae55e4ff8f4ec13baf2f5b
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Nov 26 17:05:23 2020 +0100

    Update es-backports.rst, add cluster health package commits
    
    The cluster health action is used internally inside java test
    and such we need to backport this package commits as well to
    fix maybe exiting bugs there.
    We had already some causes `ensureGreen()` to not work as expected
    resulting in flaky test.

commit 6d8f7813a198c81644dfd7cd8ccbe4fc906e1875
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jul 17 08:34:56 2019 +0100

    bp: Use applied cluster state in cluster health (#44426)
    
    https://github.com/elastic/elasticsearch/commit/0e958b6650b6b2c477219bf8617936bc6ed731c2

commit ab0f3bc468c4632d2244f3f03399023cdf4d959b
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jul 16 06:31:15 2019 +0100

    bp: Cluster health should await events plus other things (#44348)
    
    https://github.com/elastic/elasticsearch/commit/41ef1e64e64de78e3a9a6b3aeea1f8fb58f514c8

commit 4db279e67009284faf9c52ba031b7fc488bf5b95
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jun 27 18:27:16 2019 -0400

    bp: Do not use MockInternalEngine in GatewayIndexStateIT (#43716)
    
    https://github.com/elastic/elasticsearch/commit/6f5b3a6c71f498263b98b93614c98c2e6a73817f
    
    Additionally this backports the complete GatewayIndexStateIT.

commit 4fb81d93bacbffc21778276edea3da4b7b4239f9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 26 11:34:11 2020 +0100

    Generate fromId mapping in Version
    
    This brings our Version class closer to the one in ES.
    It's not a direct 1:1 port because we introduced the internal/externalID
    distinction to have our own versioning.
    
    This reduces boilerplate a bit for version bumps.

commit f443762a5ed1b2e0e8f8d1ec2618d89369b609e7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 26 10:21:18 2020 +0100

    Add 4.3.2 to fromId to fix IndexShardTests.testMinimumCompatVersion
    
    Missed this when adding the 4.3.2 release
    We should follow up on this and handle unknown patch versions in a
    better way like it is done here
    
    https://github.com/elastic/elasticsearch/commit/0df08dd4587c8f9774dad348f7795c677d24fb4b#diff-dbb9c323ecfad4a779336fe48a6dae8c1c30547e8e166e1e695ce0422ab90c93R200

commit 521faaf7888450b7c2b6b921572fcf59fec91608
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Wed Nov 25 19:13:35 2020 +0100

    Retroactively fix typos within "ALTER CLUSTER DECOMMISSION"

commit 2906b6eccdc470275d3906be093f4221a032892f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 25 11:56:19 2020 +0100

    Fix testRecentPrimaryInformation

commit 7a2036ad007e8502bb05e6b4e354c57f559c9d44
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 25 16:04:42 2020 +0100

    Increase SQL request timeout on Github actions
    
    On windows the tests sometimes run into a timeout.
    It looks like the default of 5 seconds is too short.
    
    On Azure pipelines we also used to have a 20 second timeout.

commit c646b689e10be76a15f84568e15481d21f1647ac
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 25 15:10:48 2020 +0100

    Fix flaky testSeqNoCASLinearizability
    
    See https://github.com/elastic/elasticsearch/commit/8332ad44e34171adf54f676d0e0ca57a3bd10267
    
    We haven't caught up with the patches that introduce Lucene storage for
    the metadata, but it looks as if increasing the timeout still helps
    fixing some flakyness.

commit 1bcf16d207a49b8b68428d7c0e6fb39c940de6fe
Author: Jeff Evans <jeffrey.wayne.evans@gmail.com>
Date:   Fri Oct 30 12:55:28 2020 -0500

    Broken link in primitive types list - #10445
    
    Fix link to text type in two places

commit ffaae2001b731c84fc6267af2f9c4522ea5ad31b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 25 10:19:10 2020 +0100

    Update gradle to 6.7.1

commit 2ea2ffd41915ad4c309a34d27a23da320644e283
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 25 11:58:23 2020 +0100

    Mute CoordinatorTests

commit 8537312b74ef0120c802b935e93f15734cad0ef9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 25 10:08:32 2020 +0100

    Reflect 4.3.2 release

commit 698750cb840c75c4f77cec7010015ff959450801
Author: Peter Zeller <p_zeller@cs.uni-kl.de>
Date:   Mon Nov 23 18:21:08 2020 +0100

    Add scalar function split_part
    
    Splits a string into parts using a delimiter and returns the part at the
    given index.
    
    Co-authored-by: Naomi Slater <23469+mechanomi@users.noreply.github.com>

commit 3c5c147b5780512d4ca11f535458e9b51661d1d0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 19 10:35:28 2020 +0100

    Update CoordinatorTests to ES patch level/ introduce AbstractCoordinatorTestCase
    
    The CoordinatorTests were flaky because they missed some adjustements
    that were made upstream in AbstractCoordinatorTestCase.
    
    This brings the files closer to the ES patch level we are at.

commit 92d77dd150aa2a463388c4c515bf349758c169d9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 23 10:36:54 2020 +0100

    bp: Weaken assertion in PublicationTransportHandler
    
    https://github.com/elastic/elasticsearch/commit/e117368ab45d5b3c81ddb29bc686b97e292c84e4

commit 13ddbb73cf2c6d6e7694e7f18fd030d7a17d08d3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 23 10:18:43 2020 +0100

    bp: Publish to self through transport
    
    https://github.com/elastic/elasticsearch/commit/50e034702889b967b110459f917093b9a4458016

commit c156914bed2a3ec0ece037b8fcda16ee48bab228
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 20 15:58:27 2020 +0100

    bp: Fix RareClusterStateIT
    
    https://github.com/elastic/elasticsearch/commit/cdb482eaae0517f202efdfaf445e8847917182f1

commit 96c000218ab75eac059b580693c92c59caa9dbca
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 24 10:48:37 2020 +0100

    Set SSL client auth value depending on HBA settings
    
    This should address https://github.com/crate/crate/issues/10736
    
    If no HBA entry has `method = cert` then we'll set `ClientAuth` to
    `NONE` to prevent browsers from showing a client certificate dialog.

commit 74801432fcba62befbe23cde12224e1c3d7f038d
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Nov 23 16:15:38 2020 +0100

    Fix peer recovery request handling, don't sent response twice
    
    Remove duplicated response sending.
    Follow up of #9131.
    
    Relates #10306.

commit ea7b2700aef8cbc093f1782e85b8474d256743c3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 20 14:54:54 2020 +0100

    Update graal vm to 20.3.0
    
    https://www.graalvm.org/release-notes/20_3/

commit e6a72b78a0a337320ce9b04b2831c184548a82ae
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 20 11:51:08 2020 +0100

    bp: Improve slow logging in MasterService
    
    https://github.com/elastic/elasticsearch/commit/6143ebfc63e5e6a5c1692c9d083cde24388104e2

commit f3f1890d68c723a8bdb43e37b5c74e9fa869196c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 20 10:20:21 2020 +0100

    bp: Assert no exceptions during state application
    
    https://github.com/elastic/elasticsearch/commit/053e95b65d90d14d56d9816f29acdf57da9f69a3

commit 1a23010427e849c3871ef2ab36bbeb3c6be0a727
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 20 14:28:20 2020 +0100

    Remove Ignore from testAutoExpandReplicasToFilteredNodes
    
    The linked issue mentions a different failing test which is fixed

commit 57a11e8b0fe126901ad63926d789a37fa907b21b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 20 13:35:36 2020 +0100

    Fix setting node_concurrent_recoveries in testDisablingAllocationFiltering
    
    Should be the number of shards, not the name of the node

commit 6119a6671869de4d3405750a7df933548d942716
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 20 10:44:55 2020 +0100

    Print the query symbol on GET logical plans
    
    Add the query symbol to the print output of the GET operators so
    `explain` statements will show it.
    
    Follow up of #10708.

commit 79bb4330f287f776ac4e07de4385f75dc4e7552d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 20 12:05:57 2020 +0100

    Fix flaky testDisablingAllocationFiltering
    
    Using `numberOfShards()` randomizes the number, but the assertions used
    a fixed value of `2`.
    
    The original test case in ES doesn't randomize the number of shards, so
    this removes the `numberOfShards()` call.
    
    This also removes the `assertBusy` calls which shouldn't be necessary.

commit 487c88988647c6ae6aa1d8a36056120e34e0ad81
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 20 09:53:55 2020 +0100

    bp: Fail allocation of new primaries in empty cluster
    
    https://github.com/elastic/elasticsearch/commit/d220d53ac1163d8485dd728f5fd8fe9c627bbd86

commit 08ee57c123592f798e710d7346633d41644cd12f
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Nov 19 19:55:16 2020 +0100

    Compute tables health, exposed via sys.health, based on cluster state
    
    Each table health entry will be computed based on the cluster state
    instead of doing a full SQL query against the `sys.shards` table.
    
    This improves performance on a single node cluster significant already,
    on a multi node cluster an even higher improvement is expected as
    no internal queries to data nodes are done.
    
      Q: select * from sys.health order by table_name desc limit 100
      C: 15
      | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
      |   V1    |        4.273 ±   11.303 |      0.377 |      2.827 |      4.811 |    209.019 |
      |   V2    |        1.541 ±    4.884 |      0.414 |      0.877 |      1.308 |    147.968 |
      ├---------┴-------------------------┴------------┴------------┴------------┴------------┘
      |               -  93.98%                           - 105.33%
      There is a 100.00% probability that the observed difference is not random, and the best estimate of that difference is 93.98%
      The test has statistical significance

commit af14e58b15ce0930faef8e0d85f0707c7fed1005
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 19 14:29:55 2020 +0100

    bp: Log cluster UUID when committed
    
    https://github.com/elastic/elasticsearch/commit/64e3f647b829ef17dd784a1b0787bb6e37512a3b

commit 792fbc901ae87a81cf9de14e3f331ec0a7a8ee03
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 19 14:29:48 2020 +0100

    bp: Allow election of nodes outside voting config
    
    https://github.com/elastic/elasticsearch/commit/d95b53d87bbfd082d949ab9610a21a805b3bdef2

commit 17b0abe09719e10441d2cacd86aad376eed7f3d0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 19 14:07:48 2020 +0100

    bp: Use comparator for Reconfigurator
    
    https://github.com/elastic/elasticsearch/commit/464f7699c516047021021061c748856ae7666535

commit 5b5a72f22b9e0872ab1964ea114310b2bbae0eae
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 19 11:53:54 2020 +0100

    bp: Local node is discovered when cluster fails
    
    https://github.com/elastic/elasticsearch/commit/993bf57ec4509cf4420949cc85c9991455abd567

commit 981aee5be21ea723ee6feb96504d7ae6816ba291
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 19 11:52:28 2020 +0100

    bp: Log leader and handshake failures by default
    
    https://github.com/elastic/elasticsearch/commit/0ee8fed6cfec5801d0e08c0c91b840f13c637d63

commit 72f51b5ce40d652553d24b79b3494acca1302562
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 19 11:35:22 2020 +0100

    bp: More logging for slow cluster state application
    
    https://github.com/elastic/elasticsearch/commit/7776f755ee8b7219d7467c77989673e9b7e3c37f

commit e65ac3bbfc35b6c6e39db838b34858fb5b643fb6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 19 11:22:23 2020 +0100

    bp: Close nodes properly in Coordinator tests
    
    https://github.com/elastic/elasticsearch/commit/3e8ccf9ba422e5621702519046637a9d7184f7c7
    
    CoordinatorTests adjustements will happen in https://github.com/crate/crate/pull/10786

commit bbe7f58d554e981c9c673186811b4fd6b02195a8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 19 11:02:35 2020 +0100

    bp: Avoid counting votes from master-ineligible nodes
    
    https://github.com/elastic/elasticsearch/commit/cc51a9316fa332df4137291ee7d9cf5ab0fa5ce3

commit cb6246bcf4f471585a332a9af37aa0a10bc28b8c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 18 14:16:39 2020 +0100

    Ensure pg_proc.oid and pg_type.typreceive can be joined
    
    Fixes a regression which led in npgsql to an error like this:
    
        The CLR array type System.Int32[] isn't supported by Npgsql or your PostgreSQL. If you wish to map it to an
        PostgreSQL composite type array you need to register it before usage, please refer to the documentation.
    
    The reason for that error is that npgsql looks up type information via
    the following query:
    
        SELECT ns.nspname, typ_and_elem_type.*,
          CASE
              WHEN typtype IN ('b', 'e', 'p') THEN 0           -- First base types, enums, pseudo-types
              WHEN typtype = 'r' THEN 1                        -- Ranges after
              WHEN typtype = 'c' THEN 2                        -- Composites after
              WHEN typtype = 'd' AND elemtyptype <> 'a' THEN 3 -- Domains over non-arrays after
              WHEN typtype = 'a' THEN 4                        -- Arrays before
              WHEN typtype = 'd' AND elemtyptype = 'a' THEN 5  -- Domains over arrays last
            END AS ord
        FROM (
            -- Arrays have typtype=b - this subquery identifies them by their typreceive and converts their typtype to a
            -- We first do this for the type (innerest-most subquery), and then for its element type
            -- This also returns the array element, range subtype and domain base type as elemtypoid
            SELECT
                typ.oid, typ.typnamespace, typ.typname, typ.typtype, typ.typrelid, typ.typnotnull, typ.relkind,
                elemtyp.oid AS elemtypoid, elemtyp.typname AS elemtypname, elemcls.relkind AS elemrelkind,
                CASE WHEN elemproc.proname='array_recv' THEN 'a' ELSE elemtyp.typtype END AS elemtyptype
            FROM (
                SELECT typ.oid, typnamespace, typname, typrelid, typnotnull, relkind, typelem AS elemoid,
                    CASE WHEN proc.proname='array_recv' THEN 'a' ELSE typ.typtype END AS typtype,
                    CASE
                        WHEN proc.proname='array_recv' THEN typ.typelem
                        WHEN typ.typtype='r' THEN rngsubtype
                        WHEN typ.typtype='d' THEN typ.typbasetype
                    END AS elemtypoid
                FROM pg_type AS typ
                LEFT JOIN pg_class AS cls ON (cls.oid = typ.typrelid)
                LEFT JOIN pg_proc AS proc ON proc.oid = typ.typreceive
                LEFT JOIN pg_range ON (pg_range.rngtypid = typ.oid)
            ) AS typ
            LEFT JOIN pg_type AS elemtyp ON elemtyp.oid = elemtypoid
            LEFT JOIN pg_class AS elemcls ON (elemcls.oid = elemtyp.typrelid)
            LEFT JOIN pg_proc AS elemproc ON elemproc.oid = elemtyp.typreceive
        ) AS typ_and_elem_type
        JOIN pg_namespace AS ns ON (ns.oid = typnamespace)
        WHERE
            typtype IN ('b', 'r', 'e', 'd') OR -- Base, range, enum, domain
            (typtype = 'c' AND relkind='c') OR -- User-defined free-standing composites (not table composites) by default
            (typtype = 'p' AND typname IN ('record', 'void')) OR -- Some special supported pseudo-types
            (typtype = 'a' AND (  -- Array of...
                elemtyptype IN ('b', 'r', 'e', 'd') OR -- Array of base, range, enum, domain
                (elemtyptype = 'p' AND elemtypname IN ('record', 'void')) OR -- Arrays of special supported pseudo-types
                (elemtyptype = 'c' AND elemrelkind='c') -- Array of user-defined free-standing composites (not table composites) by default
            ))
        ORDER BY ord;
    
    The join `LEFT JOIN pg_proc AS proc ON proc.oid = typ.typreceive` didn't
    match anymore after ae507cc46432064a019e3dc56b5a44d402d1d3b8 because the
    function to generate the oid for `pg_proc` was changed without changing
    the corresponding `pg_type` related entries.

commit 7b19f16e7d5f4f7d72743aaec69c5f985383ce70
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 18 16:47:46 2020 +0100

    flaky shard resize: Replace ensureYellowAndNoInitializingShards with assertBusy
    
    Maybe `ensureYellowAndNoInitializingShards` is not good enough(?)

commit d53cbd3cf65302c245a4a3999b655ffcb4658460
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 18 16:03:41 2020 +0100

    Try to fix flaky ResizeShardsITest
    
    Fixes the number of replicas to 1.
    The tests have been flaky since https://github.com/crate/crate/pull/10734 got merged

commit e27d49423b72b4953f4f5fa65e32b248291c1028
Author: Mika Naylor <mail@autophagy.io>
Date:   Wed Nov 18 15:36:22 2020 +0100

    Replace link to backup documentation in release notes to fix sphinx linkcheck

commit f4424395abcd73440222ced073518fa8aa463c16
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Nov 18 15:49:35 2020 +0100

    Adjust HEAP recommendation to 25% inside the shipped crate.yml
    
    The "use-half-size" memory for Java HEAP recommendation was changed
    to a 25% recommendation some time ago, but we missed chaning it
    also inside the shipped config comments.
    See https://crate.io/docs/crate/howtos/en/latest/performance/memory.html
    for reasonings.

commit 822ec0db51a27b252e6d63a558d6a8157f4d7867
Author: Mika Naylor <mail@autophagy.io>
Date:   Tue Nov 17 16:10:56 2020 +0100

    Added dense_rank window function

commit 36dc3f26f96fe4041f398c2b10cf224841f2a07a
Author: Mika Naylor <mail@autophagy.io>
Date:   Wed Nov 11 13:56:02 2020 +0100

    Added ``rank`` window function

commit c064a0465d465ad1209ed41af3b2cd16c9f7f139
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 17 13:38:32 2020 +0100

    bp: Warn on slow metadata persistence
    
    https://github.com/elastic/elasticsearch/commit/db78d3078b42101159f711c4a0d68462a1952f38

commit fb50fc506cffafe9f6c1a59dff952b71e93efd0a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 17 11:27:31 2020 +0100

    Fix testConflictingCommandsInSingleRequest

commit 588bf4747443ddbdbe450f061004b30ff89842cb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 17 10:42:44 2020 +0100

    bp: Cut PersistedState interface from GatewayMetaState
    
    https://github.com/elastic/elasticsearch/commit/215be64d470ce08c6c9b1b060149e2da391f4b2c

commit f1e9c7e33df6e04952f8a6e5856a0703bd06f551
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Mon Nov 16 14:34:40 2020 +0100

    Added the ``delimiter`` option for copy from CSV files.
    
    The option is used to specify the character that separates
    columns within a row.

commit 4230d1467c02c61091e3ac99d32cef6f1facf088
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 16 16:55:33 2020 +0100

    bp: Load metadata at start time not construction time
    
    https://github.com/elastic/elasticsearch/commit/9e3822a8622cfb50494b92a5e5674624da412211

commit 393bf3940a60b944ab31138bfc92efd379817e9a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 16 16:16:42 2020 +0100

    bp: Some Cleanup in o.e.gateway Package
    
    https://github.com/elastic/elasticsearch/commit/5cadfe7f119838276c91107a09607c3e9fc37a46

commit 947e968df2a3ddca6e707612ac06b00cc039fa57
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 16 15:33:17 2020 +0100

    bp: Reset state recovery after successful recovery
    
    https://github.com/elastic/elasticsearch/commit/692245cc447d748b8233d588bb38cc261227d6f5

commit fa7554b1e939cca0c913c6be87b4985ca10eb270
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 16 14:55:05 2020 +0100

    Remove unused dependencies from Gateway

commit 98d000476c4669a300fd0aac08a3a5cde6946021
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 16 14:40:35 2020 +0100

    bp: Re-fetch shard info of primary when new node joins
    
    https://github.com/elastic/elasticsearch/commit/caaf02fda30af18f4cd14a078f3e1521ba8ee55e

commit 86b6df87985bb0d75fbe90eaa1f70ab6928d1e85
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 16 11:51:21 2020 +0100

    Regenerate es-backports commit list and include gateway package

commit cb24aa21639dcbeaa319dc7ce97fed135effe466
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 16 11:38:52 2020 +0100

    bp: Remove remaining TransportAction.execute calls from gateway code
    
    https://github.com/elastic/elasticsearch/commit/61de092679b8c2aed166b8e058df248a33608f06

commit 4661aa932303043e2403b2f3705a996e6716e3c6
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Tue Nov 10 12:16:50 2020 +0100

    Add the empty_string_as_null option for ``COPY FROM``.
    
    If ``empty_string_as_null`` is ``true``, then all column's values
    represented by an empty string, including a quoted empty string,
    are set to``NULL``.

commit c33a37fb88001dd4b0f9e565350adf215b3222b1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 13 14:36:14 2020 +0100

    bp: Remove AllocationService.reroute(ClusterState, String, boolean)
    
    https://github.com/elastic/elasticsearch/commit/67e5ad2f532442fc1dd57cf92f9e4cd995082672

commit 68f307edf90e594daf27afe8c5d4bbfcc95a8f4b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 13 14:26:35 2020 +0100

    bp: Cancel recoveries even if all shards assigned
    
    https://github.com/elastic/elasticsearch/commit/af930a706076830bcf4cd65791de07d5fdd8e895

commit 40358f12c6472f61a1be909bf986a137da794cdd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 13 12:08:50 2020 +0100

    bp: Do not cancel recovery for copy on broken node
    
    https://github.com/elastic/elasticsearch/commit/36ee74fa9ec2d1ed0244de1c00d4cddbbdaa2684

commit d3caecf2b2114bfc933d533f4a96f02753bf9aec
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 12 17:26:25 2020 +0100

    bp: Relocation targets are assigned shards too
    
    https://github.com/elastic/elasticsearch/commit/6d0d449254f4a98d003990cc05db865ce9c68de0

commit 5a6a4a3856a8ab0f438edb87e7c7c3e0c099af9a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 12 14:18:17 2020 +0100

    bp: Allow routing commands with ?retry_failed=true
    
    https://github.com/elastic/elasticsearch/commit/5e16a74c8311c6b2b3174ad30f9c8b6042ca25bb

commit 2d9e2663abced3d4c63d968745f4285f854bb017
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 12 16:15:31 2020 +0100

    bp: Validate routing commands using updated routing state
    
    https://github.com/elastic/elasticsearch/commit/ae783879626ace085d30c3debd0a247de8535301

commit bf60d6cacb7bceed84e468b91d05cdc4a5498a1c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 12 17:10:01 2020 +0100

    bp: Remove Dead Code + Duplication in o.e.c.routing
    
    https://github.com/elastic/elasticsearch/commit/abd861bb9191a3e3edd4f92f7d5c586dfa90281d

commit e2846d2515635bbf44ad6d7282fe561cdc424553
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 12 11:52:04 2020 +0100

    bp: Report shard state changes better
    
    https://github.com/elastic/elasticsearch/commit/f13c8445831e0de00017753f74b5cda0d96733f2

commit 3369c4567151e988f948749c0d864a3a25e78bb5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 11 10:41:13 2020 +0100

    Try to fix flaky DiskDisruptionIT.testGlobalCheckpointIsSafe
    
    The insert from unnest logic in the BackgroundIndexer was broken.

commit 92515629bf21d06de3492e65c9522026b0224dcf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 12 11:06:30 2020 +0100

    Update netty to 4.1.54
    
    https://netty.io/news/2020/11/11/4-1-54-Final.html

commit 6edac45f15cb9eded83fa332353688eaf0e69a64
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Wed Sep 30 12:40:18 2020 +0200

    Minor copyedit (closes #10609)
    
    I have provided a minor copyedit to the files that were reviewed during 2020 Q3
    primarily so that I can enter the "copyedit" keyword into the Git commit log and
    wrap up this work.
    
    This change reflects the outcome of the discussion on
    <https://github.com/crate/crate/pull/10609> regarding the most suitable place to
    record metadata to be used for future tech writing QA telemetry.
    
    The list of keywords is documented here:
    
    <https://github.com/crate/tech-writing-domain/wiki/Commit-Message-Keywords>

commit 088f722993453bdb8fcf444ea60999227ca5d992
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 11 10:46:27 2020 +0100

    Fix NPE causing stuck queries in insert returning
    
    If there is a failure on an individual item the results are `null` which
    caused a NullPointerException in the result collection for `RETURNING`.
    
    An example where the failure happened is if the insert contains a
    duplicate primary key.

commit 16f5ca541b5c802d20816cd837c70291b15ea81d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 11 11:46:40 2020 +0100

    Update jdbc to 42.2.18
    
    Guava is updated as well to avoid a dependeny version conflict with
    org.checkerframework:checker-qual

commit 601e2bd9252df94eed4bf54bacb3b1439d3b4cc4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 11 16:55:49 2020 +0100

    Fix "REPRODUCE WITH" output
    
    Instead of outputing `./gradlew null ...` it will now print the proper
    project/test task name.

commit 94a23beb1c8df7c548c9fcfd6c703065136c9025
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Nov 10 12:56:36 2020 +0100

    Fix usage of regexp_matches wrapped inside subscript as GROUB BY
    
    Fixes a regression introduced in 4.3 when ``regexp_matches``
    was converted into a table function
    (https://github.com/crate/crate/commit/8ad9ecf201af3ef796d1d064bd7728444e57d1c8).
    
    This also fixes the broken AdminUI->Monitoring tab as it uses such a statement.

commit feb4e9b825dea6e83560adae472026e88bf9033c
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Nov 10 12:36:02 2020 +0100

    Fix validation of GROUP BY expressions when wrapped inside an alias
    
    If a column aliased is used inside the GROUP BY symbols the validation
    did not worked as `AliasedSymbol`s were not processed.

commit e2b48937f28f77ff0d23ba5818cc90ca79e25ffc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 10 15:56:34 2020 +0100

    bp: Remove some abstractions from `TransportReplicationAction`
    
    https://github.com/elastic/elasticsearch/commit/9ad9f16b792d437fcc5d708863062f3d59cc572b

commit dc14674b336f5853f67c320c31b9c767863f58d2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 10 15:56:24 2020 +0100

    bp: Fix typo when assigning null_value in GeoPointFieldMapper
    
    https://github.com/elastic/elasticsearch/commit/4b16d50cd4b7abf9789ea5e60517c37777ac805c

commit b1a354823e2c3187d1e55678d0ee358ebf163d8b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 10 15:56:17 2020 +0100

    bp: Flush instead of synced-flush inactive shards
    
    https://github.com/elastic/elasticsearch/commit/1ca5dd13defa16a18e6374deb6f42d85f0d98309
    
    This is the ES 7.6 version.
    There is also the 8.0 version which we need to backport at a later
    point.
    
    https://github.com/elastic/elasticsearch/commit/725dda37ea570741595df25de2f86dc794cfec68

commit 84bffe472fc47b00e0b7d92d7698b8cc319cd1e8
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Nov 10 16:03:00 2020 +0100

    Fix link to `Crash` inside SSL documentation
    
    The existing link/anchor does not exists anymore, changed link
    to point to the official crash documentation instead.

commit 7dcd102f1f962a37ad91213c07bb3fdcd4fb75d4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 10 11:03:17 2020 +0100

    bp: Use retention lease in peer recovery of closed indices
    
    https://github.com/elastic/elasticsearch/commit/7754e626ce739e4b38660aa776990e4bf4e537bc

commit cfa7cede6bef2b8fb868aa85d62a7a46a02a1617
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 10 10:32:40 2020 +0100

    bp: Verify translog checksum before UUID check
    
    https://github.com/elastic/elasticsearch/commit/4ac79f900dd6e8be5489484e45a48ab41ab5e860

commit 4e69f997b8a372d4a865d9b31ecf4ce666cf3fc5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 10 10:27:18 2020 +0100

    bp: make dim files mmapped
    
    https://github.com/elastic/elasticsearch/commit/8e2a23aa0aafa6c81a5f577313b897f3aecab620

commit c321967bf264574f8a9b7795f6f9477e240b1f2e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 6 11:38:13 2020 +0100

    bp: Set Lucene version upon index creation.
    
    https://github.com/elastic/elasticsearch/commit/0df08dd4587c8f9774dad348f7795c677d24fb4b

commit d842063d347976e4bff6076480e01a9c4966e4ea
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Fri Nov 6 14:44:57 2020 +0100

    Mention sys.snapshot_restore table in snapshots documentation.

commit 8ae65c6c0dce596194d24c5198465b275320c7d2
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri Nov 6 15:45:28 2020 +0100

    Mute testAutoExpandReplicasToFilteredNodes in FilteringAllocationIT

commit 94e167396799f72a2e385bdd2c522fb98c812ef6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 5 16:32:03 2020 +0100

    Try to fix flaky testShrinkShardsOfPartition
    
    The partitions are created after the insert, so the `ensureYellow`
    should happen after the insert, not after the create table.
    
    Not sure if this solves the flakyness. I ran this for over an hour on
    repeat and only had a single failure before the fix.

commit db6fe355f0f04d0c632fe6cb5749f7ccaeed0ae0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 5 11:48:00 2020 +0100

    Fix IS NULL and IS NOT NULL handling on ignored objects

commit f35f4000705290a9a069c3df7326dd639325dbc4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 5 13:57:17 2020 +0100

    Run linkcheck in GHA instead of Jenkins
    
    There are currently sporadic 403.
    Running the check with separate GHA job will allow us to see failures
    but won't block a merge.

commit 473400e096eb08c2cf12d590075627b6fe904157
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed Nov 4 15:46:41 2020 +0100

    Add the `sys.snapshot_restore` table.
    
    A user can check the progress of the `RESTORE SNAPSHOT` statement
    by querying the `sys.snapshot_restore`.

commit b218a0f7282a165cf1f93f07e5861e165268006b
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Nov 5 10:19:15 2020 +0100

    Add assert busy to FilteringAllocationIT

commit 8ef2e6b870a57d2406d29c479c85fd8e1df29261
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Nov 4 00:22:54 2020 +0100

    Add FilteringAllocationIT

commit 778a658aa836b2147668f3abc61a19d8c3fb62a8
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Nov 2 16:52:09 2020 +0100

    bp: Only auto-expand replicas with allocation filtering when all nodes upgraded
    
    https://github.com/elastic/elasticsearch/pull/50361/commits/6f81d6de161c6ff2d376d51555c349579ed81c8f

commit 9762fa550ff559e702a452b50f4c34846d68643d
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Nov 2 16:21:35 2020 +0100

    bp: Auto-expand indices according to allocation filtering rules
    
    https://github.com/elastic/elasticsearch/pull/48974/commits/508b74bb90b204e09cbca9925441509ff0969b7a

commit 4fd17e6a308c057afea68c0fc7be54e9b14afb14
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 4 12:10:40 2020 +0100

    Fix parameter placeholder handling for insert from query with fetch
    
    Fixes https://github.com/crate/crate/issues/10653

commit 3ae167f875906428792e92061ac1e6d8a2d19801
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 4 14:28:10 2020 +0100

    bp: Fix failures in ShuffleForcedMergePolicyTests#testDiagnostics
    
    https://github.com/elastic/elasticsearch/commit/2b7763cc87221858064cf173a1f39e0acd3d492a

commit b10808321071605c31fda74ad5eccab8b5808519
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 3 11:31:39 2020 +0100

    bp: ThreadPool and ThreadContext are not closeable
    
    https://github.com/elastic/elasticsearch/commit/0260c6f55c4623f1195341bdc4e61a7ec7bc1754

commit 072f1d4f8bda23cb36d75d2f0fee9b96d37ecdcc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 3 11:19:29 2020 +0100

    bp: Ignore Lucene index in peer recovery if translog corrupted
    
    https://github.com/elastic/elasticsearch/commit/5aa5d7b54b9a9bfcf8edb0672d7911b0b477ad08

commit bebd61291d372d5735bcee82cbecc2e3c5667d2f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 3 10:58:10 2020 +0100

    bp: Remove type field from internal PutMappingRequest
    
    https://github.com/elastic/elasticsearch/commit/c1c7fa5d9c8f8423c848e196682273828bf50b3e

commit c5523b9460dc22b08a53ce48bacb8395ef9331af
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 2 17:13:21 2020 +0100

    bp: Always use primary term from primary to index docs on replica
    
    https://github.com/elastic/elasticsearch/commit/66f49d8ea5d263eb3c78739657dc4718c1420825

commit b1741206bbb93a7db0689fe8fcb58a6032a576bc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 2 16:56:48 2020 +0100

    bp: Fix Transport Stopped Exception
    
    https://github.com/elastic/elasticsearch/commit/fbaf8c428d75e43e69c4c0d1d036e75d8eeb606a

commit c80b709348ee3c6e4fa8bb92a93191bd3d3cf035
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 2 16:42:16 2020 +0100

    bp: MapperService.merge() should take a single mapper rather than a map
    
    https://github.com/elastic/elasticsearch/commit/7559bab501f5cbc42e164b1de9de85f729bad00e

commit 25519fbac75d57e1ee326b4aac67305616174110
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 4 10:52:00 2020 +0100

    bp: Use delCount of SegmentInfos to calculate numDocs
    
    https://github.com/elastic/elasticsearch/commit/d41cf6ac9f791b431762892b4ce8e85419e44eba

commit 1abf9101ae0090e5e035aefb662a4afc6e3a3302
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 4 10:50:54 2020 +0100

    Remove unused logic from Lucene helpers

commit f934ffd3b4346752166da5963b4bad48aaf7f7f0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 4 10:36:07 2020 +0100

    bp: Remove information about the latest PostingsFormat/DocValuesFormat.
    
    https://github.com/elastic/elasticsearch/commit/bda4d1eb3fd38d5a8b68d00f1fceb31282d1401c

commit ba0608f59014d99bd4a5fd905e529bedff3fe113
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 4 10:30:20 2020 +0100

    Update Lucene to 8.7.0
    
    See :
    
      https://lucene.apache.org/core/corenews.html#apache-lucenetm-870-available
    
    Change log:
    
      http://lucene.apache.org/core/8_7/changes/Changes.html

commit fad5b808a98c115d5ee3ff07628448b478aff53d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 4 10:02:33 2020 +0100

    Configure retries for linkcheck
    
    We get sporadic 403 erros on some resources. Hopefully enabling retries
    helps preventing unnecessary CI failures.

commit e7022d6c75b5c38d8a75e2f2befd2c2b2bec7ba9
Author: Andreas Motl <andreas.motl@crate.io>
Date:   Tue Nov 3 20:10:15 2020 +0100

    Bump JNA
    
    This improves running on Win10 by supplying the machinery with more recent JNA libraries.
    
    It will fix warnings like the following:
    
        [WARN ][o.e.b.Natives            ] unable to load JNA native support library, native methods will be disabled.
    
        java.lang.UnsatisfiedLinkError:
        C:\Users\IEUser\AppData\Local\Temp\jna--2138670329\jna7720128946891364185.dll: Can't find dependent libraries

commit f71ed405d961501326ef48d88b705f55a9c8b964
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 2 09:24:49 2020 +0100

    Run sphinx linkcheck on Jenkins & fix broken links
    
    Produces output like this:
    
        (line   38) ok        https://en.wikipedia.org/wiki/Basic_access_authentication
        (line   79) ok        https://en.wikipedia.org/wiki/Basic_access_authentication
        (line   89) ok        https://en.wikipedia.org/wiki/PBKDF2
        (line   89) ok        https://en.wikipedia.org/wiki/SHA-2
        writing output... [  1%] admin/discovery
        (line   20) redirect  http://crate.io/docs/crate/guide/best_practices/ec2_setup.html - permanently to https://crate.io/docs/crate/howtos/en/latest/deployment/cloud/aws/ec2-setup.html
        (line   32) redirect  https://azure.microsoft.com - with Found to https://azure.microsoft.com/en-us/
        (line   15) ok        https://aws.amazon.com/ec2
        (line  132) redirect  https://azure.microsoft.com/en-us/documentation/articles/resource-group-authenticate-service-principal-cli/ - permanently to https://docs.microsoft.com/en-us/cli/azure/create-an-azure-service-principal-azure-cli

commit ab5e0a4a74e4b841661333f6aa1e8f79e6737c5c
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 27 10:24:21 2020 +0100

    Add support for PK lookup if additional filters are combined by AND
    
    If filters are combined by AND operators in addition to filters
    on primary key columns, the optimized PK lookup plan is used now.
    
    Closes #10298.

commit 763e3d2cfe0646c7f07c4e8f012c330634f03b10
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 2 15:02:41 2020 +0100

    bp: Silence some lint warnings in server project
    
    https://github.com/elastic/elasticsearch/commit/293648b4ee71e513305cc6dcec53a75f3ae833e6

commit cb2cd1b15057eeebb2cef49965f01e5da247faf8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 2 14:37:57 2020 +0100

    bp: Closed shard should never open new engine
    
    https://github.com/elastic/elasticsearch/commit/d029e18c722586384511ccf4a1a1c1351cd5a7ee

commit 5a268d21e0d8742992e996e3d2b920981ed39727
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 2 14:30:07 2020 +0100

    bp: Remove support for ancient corrupted markers
    
    https://github.com/elastic/elasticsearch/commit/e0469a721999316c7a5ec44a4f5118272b086664

commit 453d72c062190c16c762129f86a60cea6ec6bf22
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 2 14:09:20 2020 +0100

    bp: Remove Blocking Connect Methods from TransportService
    
    https://github.com/elastic/elasticsearch/commit/be6697f05a9cc56de7b249de0c336a35ece0c869

commit 7996106dd2b6c9757346794af5ed6e228ed62b73
Author: Jeff Evans <jeffrey.wayne.evans@gmail.com>
Date:   Fri Oct 30 10:44:38 2020 -0500

    Broken link to `rolling_upgrade#step-2-graceful-stop` - #10447
    
    Fixing link as per issue comment

commit ae8560ff94532db49b0ebc1dbda6aa292fa84b10
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 30 12:11:04 2020 +0100

    Fix nested table function handling
    
    We need to create one ProjectSet operator per level of table function
    for the execution to work correctly.
    
    This fixes errors like the following:
    
        class io.crate.expression.tablefunctions.MatchesFunction$$Lambda$3842/0x0000000801701e18 cannot be cast to class java.util.List (io.crate.expression.tablefunctions.MatchesFunction$$Lambda$3842/0x0000000801701e18

commit 81f910876044ef8cbf1cd23b0d91fff43eccc7b3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 29 09:57:10 2020 +0100

    Use follow-tags in create_tag script
    
    Should help prevent pushing tags that shouldn't be pushed. From the man
    page:
    
      --follow-tags
          Push all the refs that would be pushed without this option, and also push annotated tags in
          refs/tags that are missing from the remote but are pointing at commit-ish that are reachable
          from the refs being pushed. This can also be specified with configuration variable
          push.followTags. For more information, see push.followTags in git-config(1).

commit fac34faa27f62ab09ffd2f75f224703882edba23
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 29 10:43:45 2020 +0100

    Reflect 4.3.1 release

commit bd71b833a391ca504fd8b2c6aeeb31c0e513dc38
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 29 09:18:04 2020 +0100

    Fix flaky testFloatSummationWithoutLosingPrecision
    
    Adding random reduce steps changes the result because the `error` value
    is not preserved across reduce steps.

commit f595f9698fce08a4de745c6aca3ad631349f9d6b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 28 17:19:13 2020 +0100

    Release memory for sharded requests to avoid circuit breaker errors
    
    The `RamAccounting` instance is only closed *after* a full COPY or
    INSERT FROM QUERY operation. During the operation each new
    `ShardedRequests` instance kept accounting the used memory per row, but
    never released it. This would eventually cause a circuit breaker
    exception even if there is memory available.
    
    Fixes https://github.com/crate/crate/issues/10701

commit 0312972713071214ee27af408989a32f6cb58fe1
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Tue Oct 27 14:06:56 2020 +0100

    Fix functions resolution for text types with different limit lengths.
    
    The function with signatures like `func(E, E)` would fail to
    bind arguments of type text if they have different limit lengths.
    This change fixes the inference of the common text type for provided
    text arguments by following two rules:
    
    1. If both text types use length limit, then the common type
    will be the text type with the highest lenght limit.
    2. If either of text types is unbound, then the common type
    will be the unbound text type.

commit 6f28fe389dadd77238a83810d972db44344d0bd8
Author: Wiewiogr <wiewiora.tomasz1@gmail.com>
Date:   Sat Oct 17 20:50:25 2020 +0200

    Use Kahan summation algorithm for doubles and floats in SUM operation

commit c05d3fad7db48a8267682694244fb8ce2803bbb4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 28 09:59:37 2020 +0100

    Ensure TableInfo can be created for altered tables

commit 019beefbb97be913ff6b18651c700264e746d22e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 27 11:38:29 2020 +0100

    Update bundled JDK to 15.0.1+9

commit e96186a47d5affd2d5d4e2f213d07f6753c5bad9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 27 10:27:55 2020 +0100

    Ensure TableInfo can be created for new indices

commit 9e691f1910844fbfd26e2b57539a00012a32ef96
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 26 10:15:37 2020 +0100

    Allow super users to drop corrupted tables
    
    Due to bugs in other places it may be possible to have tables in the
    cluster that contain a schema which cannot be parsed anymore.
    
    That currently causes a lot of queries to fail. For example
    `information_schema.tables` cannot be queried anymore because it
    attempts to load all the tables.
    
    This adds an escape hatch for super users to that tables which are bad
    can be deleted.

commit 5ee42c4561cff874848bc0b7e0e4ca9628a7b3c9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 26 09:06:59 2020 +0100

    Fix test_implicit_cast_ISO_formats_with_time_zone
    
    Need to account for daylight savings

commit b7b33acf5261414dd0bede3625e719aebae7a30b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 23 14:45:31 2020 +0200

    Remove ClusterAllocationExpression -> SysAllocation indirection
    
    `ClusterAllocationExplanation` was created to immediately afterwards
    create a `SysAllocation` instance. That step can be skipped

commit d16e6e57118117d45cf2f22ef75c277cc281bd39
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 23 13:25:43 2020 +0200

    Evaluate decision lazy in sys.allocations
    
    The decision computation is quite expensive. Making it lazy improves the
    performance for cases where there are many shards but only a subset of
    records are selected because of a filter on a cheaper column:
    
        Q: select * from sys.allocations where shard_id = 4
        C: 15
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |       96.166 ±   15.395 |     66.254 |     95.679 |    106.930 |    138.741 |
        |   V2    |        1.671 ±    3.188 |      0.826 |      1.398 |      1.659 |     72.324 |
        ├---------┴-------------------------┴------------┴------------┴------------┴------------┘
        |               - 193.17%                           - 194.24%
        There is a 100.00% probability that the observed difference is not random, and the best estimate of that difference is 193.17%
        The test has statistical significance

commit 411d2cf1e39b014adad438f525f4c6e50ec0bc37
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 23 11:05:00 2020 +0200

    Avoid array allocation for some hashCode computations

commit dedf040ce3ea7be643e6e2367b01faaed3dd7ebc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 23 15:10:38 2020 +0200

    Prevent a IndexShardClosedException on sys.shards queries
    
    Found via test failure:
    
        ./gradlew :server:test -Dtests.seed=A49E69D848B0D9F4 -Dtests.class=io.crate.execution.engine.collect.ShardCollectorProviderTest -Dtests.method="testQuerySysShardsWhileDropTable" -Dtests.locale=nb -Dtests.timezone=Europe/Guernsey
    
        ShardCollectorProviderTest > testQuerySysShardsWhileDropTable FAILED
            org.elasticsearch.index.shard.IndexShardClosedException at [A49E69D848B0D9F4:95662C3C28B2B2C6]:0
        [fdowuay.t2/-8iXdajeQ2iZUAjk4Ti5UA][[fdowuay.t2][0]] org.elasticsearch.index.shard.IndexShardClosedException: CurrentState[CLOSED] operation only allowed when not closed
            at __randomizedtesting.SeedInfo.seed([A49E69D848B0D9F4:95662C3C28B2B2C6]:0)
            at org.elasticsearch.index.shard.IndexShard.verifyNotClosed(IndexShard.java:1634)
            at org.elasticsearch.index.shard.IndexShard.verifyNotClosed(IndexShard.java:1628)
            at org.elasticsearch.index.shard.IndexShard.getRetentionLeaseStats(IndexShard.java:1976)
            at io.crate.expression.reference.sys.shard.ShardRowContext.retentionLeasesPrimaryTerm(ShardRowContext.java:359)

commit 0fe07781d06486722a33239cd575782a994a1920
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 22 12:18:26 2020 +0200

    bp: Cleanup Redundant Futures in Recovery Code
    
    https://github.com/elastic/elasticsearch/commit/6742d9c9d9049eacd9158815cab57b82046e8743

commit d597b3cb656b66d641460be5dba10afc099a660d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 22 11:43:50 2020 +0200

    bp: Do not warm up searcher in engine constructor
    
    This looks a bit different as we removed the warmup logic
    
    Pulled the change in anyhow to reduce the chance of unnecessary
    conflicts in with later patches.
    
    https://github.com/elastic/elasticsearch/commit/927cc34eca97c1ee760efd195e72cafa90544a97

commit 25e7c09323faf0c478ba0f50c95603683dfd1681
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 22 09:32:38 2020 +0200

    bp: Restore from Individual Shard Snapshot Files in Parallel
    
    https://github.com/elastic/elasticsearch/commit/e58fc03d42f4c1e8a0c7a7eb116893c4de0ebfe9

commit 99a8d6a8a07c2d4fa00725cb7d184f4400e6c93a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 22 16:21:14 2020 +0200

    Fix a type inference error when using eclipse jdt
    
    The `thenApply` is unnecessary and caused a error message when using
    eclipse.

commit 552fbf90efaa8b804d332d12846220efc58e208e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 22 16:56:26 2020 +0200

    Avoid byte array copy to parse SQL http request

commit 5cda8fb751bd0f035bbbbd0729686e37f2a7bb6f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 21 17:05:15 2020 +0200

    bp: Fix SnapshotShardStatus Reporting for Failed Shard
    
    https://github.com/elastic/elasticsearch/commit/752fa8716e7b28fa367c7d3d9c989c40c09786be

commit 1749176c039822e0f623598e5d2b487f97375d33
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 21 16:52:55 2020 +0200

    bp: Cleanup Concurrent RepositoryData Loading
    
    https://github.com/elastic/elasticsearch/commit/a0f80bd0b915f98f020247cb56f7015d9dcd65c5

commit dcd8baeec7f0f010b85916cfa6250e399579e84e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 21 16:12:17 2020 +0200

    bp: Remove Dead BwC Code from Snapshots
    
    We support rolling upgrades only between successive versions.
    (NO_REPO_INITIALIZE_VERSION is Version.V_4_1_0)
    
    The logic that triggered the old logic was already removed in
    
    https://github.com/crate/crate/commit/f5505cbfa113aa2a5612d910fde2e29bd919e06d
    
    This is a backport of:
    
    https://github.com/elastic/elasticsearch/commit/91ad604849d8fe39ef49a2050e40e635882c7b88

commit d0a143af36dd42b6dd34856ec38a9eac24490c15
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 22 16:00:33 2020 +0200

    Remove useless copy operations for pending tasks
    
    `Queue -> List` conversion is not necessary
    `List -> Array` conversion is not necessary

commit dd7bbef5807e46f997dc9ec30bc0a20742a0b35a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 22 15:34:12 2020 +0200

    Replace Text with String in PendingClusterTask
    
    Text was only used in the PendingClusterTask. The PendingClusterTask is
    only ever accessed via calls in the test framework.
    
    This allows us to remove `Text` and ignore the streaming compatibility.
    
    We should eventually expose the pending tasks in a `sys` table and
    remove the Transport in its current form.

commit 366815e4c7197436f91dcc6e1e613cedfae9fbb9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 22 10:10:50 2020 +0200

    Limit workers used for snapshot operation
    
    The ES patch wasn't applied correctly.
    
    See https://github.com/elastic/elasticsearch/blob/04200361f4fb2e17203612020ef4e379a53aef70/server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java#L2081

commit 9053aef03ed152796c67fb2e0ee6512126b0a329
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 21 11:20:17 2020 +0200

    bp: Remove deprecated IndexMetaData.getMappings() method
    
    - https://github.com/elastic/elasticsearch/commit/4e81ae74b2e924618bda7c61b10de181abe3ec8c
    
    Also contains parts of:
    
    - https://github.com/elastic/elasticsearch/commit/afeee4be9ebdd675459e01b6954ac575cb156c2f

commit 8f04e97999f63fb298bcf231bf61fb543337d3af
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 21 11:00:23 2020 +0200

    bp: Add a new merge policy that interleaves old and new segments on force merge
    
    https://github.com/elastic/elasticsearch/commit/5297e5afa0b3902501868ec61a0173f233baf0d6

commit 16dc3833948b46d0217b4ce7d413806e130e180a
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed Oct 21 14:52:51 2020 +0200

    Fix PgArray#encodeAsUTF8Text for escaped double quotes.
    
    The issue occurred only when the pg wire protocol.
    The querying of string arrays that contain values with
    escaped double quotes would fail. For example, the following
    select query fails because the string representation of the
    pg array is not convertible to internal array string type
    due to the wrong encoding::
    
        CREATE TABLE t (obj OBJECT(DYNAMIC));
        INSERT INTO t VALUES('{"k":[{"k":" foo\" "}]}');
        SELECT obj['k'] FROM t;

commit d0b9ace4087ff2bfe60edff59f17aa713e8bf50e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 21 14:25:05 2020 +0200

    Reorder methods in BlobStoreRepository to match ES upstream
    
    Makes it easier to read the diff between ES and ours and should help
    reduce the conflicts we get when applying further ES patches.

commit 8dc4cb8692c8a47892f04196382ddda4abc98a61
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 21 10:41:31 2020 +0200

    bp: Refresh should not acquire readLock
    
    https://github.com/elastic/elasticsearch/commit/379e8470488b30a96c9f80eb64d5ab3b9b239aa1

commit a78fadd9cb64057723914a6ea4e91b8eeee24211
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 21 10:23:35 2020 +0200

    bp: Use MultiFileTransfer in CCR remote recovery
    
    https://github.com/elastic/elasticsearch/commit/8066e23eea3800faaa3fcb4a922dad0587354ba4

commit 4ffe8bad19957467d2d46e408af1fb0da13b2f46
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 21 10:15:59 2020 +0200

    bp: Make BytesReference an interface
    
    https://github.com/elastic/elasticsearch/commit/458de912561dff153dbcf8d7a67b4f89e47773aa

commit c11d9e135629f8155291a94feb37511000ae5b5c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 21 15:05:34 2019 +0200

    bp: Remove Redundant Version Param from Repository APIs
    
    https://github.com/elastic/elasticsearch/commit/6563c0fb7b25a78f8b83bab267ad95c61fd03f36

commit d29e748b71014be410324a279658762765805a2e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 18 06:39:24 2019 +0100

    bp: Defer reroute when starting shards
    
    - https://github.com/elastic/elasticsearch/commit/51fb95ef83f7a1aa6cbc5207e504b03ccee724ee
    - https://github.com/elastic/elasticsearch/commit/e14300e8e5d92e86ae7f11c8734e9cfade000795

commit a59236909dad6271a2d5d4ca447d4c271a76290a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 15 17:37:31 2019 +0100

    bp: Allow RerouteService to reroute at lower priority
    
    https://github.com/elastic/elasticsearch/commit/10eb9d77d12e61ac6d61585f9792b9495d06af07

commit 99c92b613a449de17021e1b3f2017f004de2bf35
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 2 06:37:33 2019 +0100

    bp: Rename and refactor RoutingService
    
    https://github.com/elastic/elasticsearch/commit/de693a2902049fcc05ddc4ef3968b33fc23153f4

commit 816b5bb7a006addcd9257292c6cc8670e40d0d48
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Jun 30 16:44:57 2019 +0100

    bp: Avoid parallel reroutes in DiskThresholdMonitor
    
    https://github.com/elastic/elasticsearch/commit/448acea94bbeb526fb98be38e77fd0c8293d7f06

commit 72589c6278dc2bb52ab3ce3bd1709d015f6c16cc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 11 12:16:01 2019 +0100

    bp: Defer reroute when nodes join (#42855)
    
    https://github.com/elastic/elasticsearch/commit/ddedf80c063206e9b93df5cf681d35e654e564ef

commit 46bdc11337720c233c90c4b417e3bcddf8396979
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 29 15:09:40 2019 +0100

    bp: Ignore shard started requests when primary term does not match
    
    https://github.com/elastic/elasticsearch/commit/5d1964bcbf5c4dcdf9ea8e567a1b4211f47aff33

commit 9ad9c21d267fb3b47594b4053367cb0677165ee8
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Mon Oct 19 15:46:51 2020 +0200

    Remove guava from test code of the server module.

commit fd2a075d09479cf8b58e568b9007c5e913a2ec60
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 20 09:56:24 2020 +0200

    Update gradle to 6.7
    
    https://docs.gradle.org/6.7/release-notes.html

commit 2df19cba5acf7444dbbad5eb0e88e4d13bc49b73
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 16 11:31:33 2020 +0200

    Share a single event loop group across netty servers
    
    We usually have at least 3 netty servers running:
    
    - PostgreSQL
    - HTTP
    - Internal Transport
    
    Each had its own event loop group with dedicated worker threads.
    With the exception of blob uploads, all operations on the netty threads
    are non-blocking, so we can reduce the amount of threads we create by
    sharing the workers across netty servers.
    
    This should reduce the footprint of CrateDB a bit without affecting the
    performance in a negative way.
    
    This also marks the http worker_count setting as deprecated internally.
    We didn't expose it in the documentation so there is no change log
    entry. But to avoid breaking upgrades in case some users used it anyway
    it is kept internally for the time being.

commit c49ecea33f41c98f4c7fb92afcc911c9cb9dc276
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 16 15:00:00 2020 +0200

    Remove TransportInterceptor
    
    It was only used in tests to assert that the action name is valid.
    
    There is already an assertion when a transport is registered that checks
    the action name, so we don't need to do that in tests on a per request
    basis.

commit fc97a0926e9c5b8755ba02c716f2e4fd5b3132ab
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 16 10:59:40 2020 +0200

    Remove unused transport thread name prefixes

commit cce6420e239b86c8a259eb92426539f91c258759
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Mon Oct 19 13:28:07 2020 +0200

    Bump version to 4.4.0-SNAPSHOT.

commit 9a63c56ec7a3fa49a4d4e97997661857ac94229b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 16 17:11:47 2020 +0200

    Bump version to 4.3.1-SNAPSHOT

commit 67fcdb5f630081a97fd76f46b534d70b0c2cfb4f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 16 15:16:38 2020 +0200

    Release 4.3.0

commit 5980193ad2875fd47f46bedb1e9e9a9e7f4ed4f2
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 15 18:00:29 2020 +0200

    Reflect release 4.2.7

commit 7b0bc3da027f69de52315553463699e0c8c7b009
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 14 14:43:27 2020 +0200

    Remove ValidationException
    
    Main motivation was that there is another `ValidationException` in the
    ES namespace.
    
    We don't need the `ValidationException` in the class hierarchy of the
    exceptions. We don't use it to classify exceptions and it doesn't add
    any capabilities.

commit 6f315412c731e85d78146e2728534454924fc616
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 15 14:30:44 2020 +0200

    RetentionLeaseIT: Replace update setting client calls with alter table

commit d9c593b791a148863155909dc2351dd5538cdb73
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 14 16:54:51 2020 +0200

    Remove SqlExecutor usage in BackgroundIndexer
    
    This replaces the `TransportSQLExecutor` and instead uses the JDBC
    client directly to be able to re-use one connection for multiple
    inserts.
    
    Should make it a bit more efficient.

commit 6dc54332595ba4f69521ffd90c420108fce2596f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 14 16:09:04 2020 +0200

    Fix flaky testGlobalCheckpointIsSafe

commit e2d1f5c6fd013b6a8a438e6736c8bc453cf1d531
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 15 11:35:37 2020 +0200

    Disallow creating self referencing views
    
    We had a check in place that ensures that the updated view definition
    can be parsed and analyzed again.
    
    But that analyze step uses the `Schemas` instance from *before* the view
    is changed.
    
    This allowed users to do something like:
    
        create table tbl (x int);
        create view v as select * from tbl;
        create or replace view v as select * from v;
    
    The analyze step passed, because at that point `v` resolves to `select *
    from tbl`, but once the change is applied, it starts resolving to
    itself, leading to an infinite recursion and StackOverflow.

commit bdde76ec638015ac1aec0774026f5eaf7525b019
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Oct 12 17:39:52 2020 +0200

    Prevent dropping of a UDF used inside a generated col expression
    
    UDFs which are used inside any generated column expression must
    not be able to be dropped, otherwise the table info fails on
    resolving, making the table unusable.

commit 8d964258ac4c012116e27f7c06e39617425742b3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 13 11:22:30 2020 +0200

    Add shard limits per node

commit a3604df178374eb2fb6f28bc3b2ec32fe8c39327
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Oct 7 15:57:50 2020 +0200

    Add IndexServiceTest back to es test suite

commit 5745e699bc309bfe8fc6ac7182bcdfd41334e2c3
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri Oct 9 10:44:20 2020 +0200

    bp: Make setting index.translog.sync_interval be dynamic
    
    https://github.com/elastic/elasticsearch/commit/3c352a85963f47a8272025e1969982bbe64c6a87

commit 85ffcbfbc295caf0ffc5ed96b30897ef9a4d8dc3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 13 11:58:01 2020 +0200

    Update netty to 4.1.53
    
    https://netty.io/news/2020/10/13/4-1-53-Final.html

commit fa8c4b48d7c895c41ac90c59e968dd4fb487a8f7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 12 23:05:24 2020 +0200

    Replace more guava usages

commit 02d44042232edfceadccdd9cab89d401db51b233
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 12 16:15:02 2020 +0200

    Remove some guava usages
    
    Relates to https://github.com/crate/crate/issues/10510

commit cece40314ace5b1f0d4db142edf1a072fb133c9a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 13 10:41:36 2020 +0200

    Optimize PartitionInfos
    
    The main optimization is to avoid calling `sourceAsMap()` twice on the
    `MappingMetadata`. It showed up in a profile on a cluster with a lot of
    shards.
    
    It additionally removes the `PartitionedByMappingExtractor` indirection
    to avoid some `Tuple` constructions.

commit fafefc61fe654667ebbab4a8577718e6be08d3ba
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Oct 12 20:01:05 2020 +0200

    Make setting global_checkpoint_sync.interval internal again
    
    This makes the setting global_checkpoint_sync.interval internal again.
    Test cases should use InternalSettingsPlugin as originally intended.

commit faae22f2a48e9950cc0df6ee44ddc24c05d8c39e
Author: marregui <miguel.arregui@gmail.com>
Date:   Wed Oct 7 19:40:18 2020 +0200

    Add scalar function translate
    
    Translate performs several single-character, one-to-one translation in one operation.
    E.g. translate('Crate', 'Ct', 'Dk') == 'Drake'

commit 856aed54f64f52fe63b77413bbf5070debfea43d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 12 13:42:57 2020 +0200

    Update admin-ui to 1.17.0

commit 29d18ef41be63cf1a68c6f5ce48717b5ba1b5dab
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 12 13:37:13 2020 +0200

    Fix flaky testSoftDeletesDefaultSetting

commit 49904d816e6dd47d65d30625fd8a40750176a87e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 12 11:32:34 2020 +0200

    Group unreleased release notes by topic

commit 2837b59a38443c924a637cd9ffff6902ea8b48cc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 12 10:31:42 2020 +0200

    Fix flaky testPrimaryTermIsIncreasedOnReplicaPromotion
    
    `write.wait_for_active_shards` must be set to `ALL` initially to make
    sure the replica receives the write and can later be promoted to
    primary.

commit 5fa64b4b9695ee456f95a54b6b59851d72a7b6fc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 9 16:07:23 2020 +0200

    Document soft_deletes.retention_lease.period

commit caa03b997c9683b066bf498737bb35bf9ed7c072
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 8 15:26:37 2020 +0200

    Enable soft deletes by default for new tables

commit 814f7d1aa9efdac05d858a4f29b499b995052e0a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 9 10:58:13 2020 +0200

    Fix flaky test_update_by_query_returning_multiple_results
    
    The ordering of the results is not deterministic
    
        java.lang.AssertionError:
        Expected: is <1>
             but: was <0>
            at __randomizedtesting.SeedInfo.seed([3A78A1085F0F09C3:326A87D66D97EEA0]:0)
            at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
            at org.junit.Assert.assertThat(Assert.java:956)
            at org.junit.Assert.assertThat(Assert.java:923)
            at io.crate.integrationtests.UpdateIntegrationTest.test_update_by_query_returning_multiple_results(UpdateIntegrationTest.java:1023)

commit 6d066cde4af31ccb183262de3a6c16f16e1965ea
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 9 12:50:50 2020 +0200

    Fix flaky testRetentionLeasesSyncOnRecovery
    
    See https://github.com/elastic/elasticsearch/commit/6362328b93d0bb972d5c9ffd1fcceee9a3a47404

commit abc03609ac390dfadd8d9bc87f426a0fefdb52ce
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Thu Oct 8 15:12:14 2020 +0200

    Reflect 4.2.6 release.

commit 0434e01a45930ef04eb151157d0d0b77184ad89c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 8 10:40:42 2020 +0200

    Fix flaky testResetEngine
    
    If the flush happens the estimated number of operations don't match the
    expected number
    
    The test is also flaky in ES on the same patch level (704317da71c)
    There are changes later on that affect some of the logic used in the
    test. We should re-evaluate at a later point if this change is still
    needed.

commit 1eef6672b74907390184c8fc06aec9b1ab407d51
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed Oct 7 14:35:44 2020 +0200

    Fix the partitions deletion from the subquery expressions.
    
    This change fixes the regression introduced by
    https://github.com/crate/crate/pull/9707 in the `WhereClause`.
    The `WhereClause#hasQuery` before the removal of the `QuerySpec`
    retuned the false if the normalized query was a symbol of the value type
    represented by Literal.BOOLEAN_TRUE. That resulted in the wrong plan that
    would leave empty orphaned partitions after the delition.
    
    This change address this issue in the DeletePlanner by adding an additional
    where clause = Literal.BOOLEAN_TRUE check to decide which delete plan to execute.

commit 3df620d41841ec90653b9bd7f30d33d49d206961
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 8 09:58:21 2020 +0200

    Allow double infinity to float infinity implicit casts
    
    Follow up to https://github.com/crate/crate/pull/10623

commit ced78125bab6bead35129f2d6f1618188a8536e5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 7 10:00:40 2020 +0200

    Fix implicit cast from double to float for the min-value
    
    The range check didn't work:
    
        jshell> -3.4028235e38f < -Float.MAX_VALUE
        $10 ==> false
    
        jshell> -3.4028235e38d < -Float.MAX_VALUE
        $11 ==> true
    
    Closes https://github.com/crate/crate/issues/10618

commit f4b80638ef86957795b3e12d649cea0bf9130255
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 6 20:41:18 2020 +0200

    Fix subscript resolving inside views/aliases
    
    Scoped symbols of lazy-loaded subscript columns must be stored inside
    aliased relations. Otherwise repeated field resolving breaks
    the IdentityHashMap constraint of the `Rename` plan operator.

commit 6c4898a37d1006604170456086662a70cffd4f29
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 5 11:00:57 2020 +0200

    Tune memory reservation for COPY/INSERT-FROM-QUERY
    
    Using only 5MB to 15% of the free query breaker memory for The up-front
    memory reservation could lead to smaller bulk sizes than necessary.
    
    On the other hand, increasing the amount of memory reserved led to the
    first couple of operations taking up too much memory, leaving no memory
    for subsequent operations. This was especially problematic with small payloads.
    
    This commit changes the approach: The bulk-sizing is still done based on
    the free memory, but the actual accouting happens lazy on a per row
    basis.
    
    This is a follow up to https://github.com/crate/crate/pull/10578

commit b23e0ff18381616ec3b7c2889ae519a6fe1fbb76
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 5 17:01:11 2020 +0200

    Make unknown node count in NodeJobsCounter thread safe

commit 46af8aa528f8967799c278ba0406688f5269d132
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Sep 24 14:05:31 2020 +0200

    Add IndexBalanceTests back to es test suite
    
    This adds the `IndexBalanceTests` ES tests based on
    https://github.com/elastic/elasticsearch/commit/5dda2b0c7aa9b4fec08072afb9d64c8195deef1f
    because the more recent version requires a not yet backport patch
    (https://github.com/elastic/elasticsearch/pull/44433).

commit 902b22f05e16c2275fa349f60cabddfb40fb047a
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Mon Oct 5 14:01:49 2020 +0200

    Use ProxyObject to represent map based data types in UDF.
    
    This change fixes the object property access in the UDF guest
    languages (JavaScript) by utilizing the GraalVM polyglot `Proxy`
    interface, namely, its ProxyObject implementation for the Map
    based CrateDB internal data types. e.g. the object data type.

commit 37eb6518473595c1f22aa799f96f13d17533cd65
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Sep 28 10:26:35 2020 +0200

    Add DiskDisruptionIT to integration tests

commit 9adb45ce79b19045b928be44cadf604d26ba067f
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Fri Sep 25 15:58:55 2020 +0200

    Port over some of IndexSettingsTests.
    
    ES state: 704317da71c
    
    Some tests were not ported over:
    - testMaxRegexLengthSetting
    - testMaxDocvalueFields
    - testMaxScriptFields
    - testMaxInnerResultWindow
    - testMaxResultWindow
    - testIsWarmerEnabled
    - testIgnoreTranslogRetentionSettingsIfSoftDeletesEnabled

commit 127cf859f5d65918ae5db503ab444a2a91380a92
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 29 16:01:37 2020 +0200

    Remove unnecessary Ignore annotation from PGArrayTest

commit 362d282ac9aca1705c21b1ef43dfc97f7b99d2d0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 25 09:55:14 2020 +0200

    Extend heap size bootstrap check with more information
    
    Motivated by https://github.com/crate/crate/discussions/10582

commit 8508375f50bb92ebefd877fd73cfe21c6c86e836
Author: Daisy T <daisyts@gmx.com>
Date:   Fri Sep 25 13:33:28 2020 +0200

    update compatibility notes

commit 988e217dbd8ca16f3f0bd4a8429d3d8938e7bfe9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 29 09:46:12 2020 +0200

    Fix null handling in SubscriptObjectFunction
    
    `SubscriptFunction.lookupByName` does not allow nullable arguments.
    
    `SubscriptFunction.evaluate` handles that correctly, but
    `SubscriptObjectFunction` did not.

commit 1690fed9daf694e4a30142b0fa914cd9b4fa3643
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 21 10:50:28 2020 +0200

    Ensure searchers are always closed

commit 258b015b569f6be146d865b70e8d2af5008ebb11
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Fri Sep 25 12:21:57 2020 +0200

    Port over TransportVerifyShardBeforeCloseActionTests.
    
    ES state: 704317da71c

commit 9966e507779f129613210112af307c9634bc1ffe
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Fri Sep 25 12:18:57 2020 +0200

    Reflect advance checkpoints only after persisting ops in TransportVerifyShardBeforeCloseAction
    
    https://github.com/crate/crate/pull/9309/ ports over https://github.com/elastic/elasticsearch/pull/43205
    but at that point TransportVerifyShardBeforeCloseAction was not present
    in our code base.

commit f0d30d3d61979d74a7eaa36c0d0f4d7402632edc
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 25 16:17:08 2020 +0200

    Stop sampling docs when maximum sample size is reached
    
    The reservoir sampler can only consumer up to Integer.MAX_VALUE
    documents, so we can safely early terminate the collect once reached.

commit 4ca65e7c4cd3fc243c8f91569b5962f57f3c1efc
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 25 15:46:16 2020 +0200

    Fix integer overflow at the reservoir sampling
    
    As the Reservoir sampling implementation is shared across shards and
    partitions, it may process more documents than an integer value can hold.
    It must be protected against integer overflows to not add more that
    the defined maximum samples to the list (this limit is also in the
    integer range and such supporting sample sizes > integer is not needed).
    
    The integer overflow results in bypassing the maximum samples boundary
    and can lead to node crashes due to OutOfMemory exceptions.

commit a8c14dd1996fd12055af04ee8fa6b066ac551432
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 25 17:49:02 2020 +0200

    bp: Use correct global checkpoint sync interval
    
    https://github.com/elastic/elasticsearch/commit/b960c2002df64dce956244782a4471e9c1152520
    
    Closes https://github.com/crate/crate/issues/10364

commit 9a3217c46ed8d69024c530cc7b22ea0e05f35ca3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 25 15:50:23 2020 +0200

    Fix searcher double-release race condition
    
    The incRef/release-on-zero pattern in the RefCountedItem didn't protect
    sufficently against double releases, because an already closed
    RefCountedItem could gain new refs and that would cause it to be closed
    multiple times.
    
    A scenario where that can happen is a union or a join where the same
    table is used more than one time.
    
    If the table is small or the operation is fast, the close on the first
    use of table A can happen before the second use of table A.
    
    This fix here makes sure that a release happens only once, by discarding
    the item and re-acquiring it if the refs reach zero.
    
    Note that this circumvents part of the motivation for the
    SharedShardContext - that is to re-use the same searchers across
    operations. We'd have to re-introduce a prepare/start split or similar
    to guarantee that all reference increments happen before the first close
    can happen to ensure that searchers are truly shared.
    
    This fixes flaky tests. An example that failed occassionally is:
    
        ./gradlew :server:test -Dtests.seed=50DCF5AD232E645D -Dtests.class=io.crate.integrationtests.UnionIntegrationTest -Dtests.method="testUnionAllArrayAndObjectColumns" -Dtests.locale=brx-IN -Dtests.timezone=America/Argentina/Rio_Gallegos -Dtests.iters=20 --fail-fast

commit 250fbf7a42e123e14b26f09cf8d6b524cbae7b1b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 25 11:44:24 2020 +0200

    Remove unused reader-wrapper hook

commit adeb4d6bca5abe91c59bf5f3d1991eb1b4cbe52c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 25 10:35:32 2020 +0200

    Fix sys.cluster usage in joins
    
    The records for `sys.cluster` (and maybe other tables) is defined as a
    list of one item, where the single item is a `null`.
    
    This is because all the columns and their values are provided
    independently of the record and the record only acts as a dummy value to
    provide a single row.
    
    The `ImmutableList.copyOf` call failed on that, because `ImmutableList`
    doesn't like null items.

commit 4af878c7d3dc965120e8c019a05b455237a70ae7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 25 09:44:36 2020 +0200

    Fix filter handling in count rewrite rule
    
    Symbols in the filter of a COUNT(*) aggregation need to be remapped, so
    that they no longer point to the Rename output, but to the table
    instead.
    
    Follow up to https://github.com/crate/crate/pull/10588

commit f97a581aba25e54e8cc0d9873b17289a2925fe81
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed Sep 23 16:39:42 2020 +0200

    Port over some of IndexShardTests.
    
    ES state: 704317da71c
    
    Tests:
    - testReaderWrapperWorksWithGlobalOrdinals
    - testRefreshMetric
    - testExternalRefreshMetric
    
    are not ported over.

commit 2e1b78d8b51f3c0912c422710d413a0b112409ef
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 24 16:46:23 2020 +0200

    Fix flaky testKillInsertFromSubQuery
    
    The test failed occassionally:
    
        java.lang.AssertionError:
        Expected: (an instance of io.crate.exceptions.JobKilledException or an instance of java.lang.InterruptedException or an instance of java.util.concurrent.CancellationException or an instance of io.crate.exceptions.TaskMissing)
             but: was <java.lang.RuntimeException: java.lang.InterruptedException>
                at __randomizedtesting.SeedInfo.seed([FE3BFFAAE6E8064A:F94E0195988B7655]:0)
                at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
                at org.junit.Assert.assertThat(Assert.java:956)
                at org.junit.Assert.assertThat(Assert.java:923)
                at io.crate.integrationtests.KillIntegrationTest.assertGotCancelled(KillIntegrationTest.java:103)
                at io.crate.integrationtests.KillIntegrationTest.testKillInsertFromSubQuery(KillIntegrationTest.java:78)
    
    I changed the test to print a stack trace if the exception is a
    `RuntimeException` and got this:
    
        java.lang.RuntimeException: java.lang.InterruptedException
                at io.crate.exceptions.Exceptions.toRuntimeException(Exceptions.java:47)
                at io.crate.testing.SQLTransportExecutor$RowCountReceiver.fail(SQLTransportExecutor.java:670)
                at io.crate.action.sql.RowConsumerToResultReceiver.lambda$consumeIt$1(RowConsumerToResultReceiver.java:92)
                at java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:859)
                at java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:837)
                at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:506)
                at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2152)
                at io.crate.execution.engine.indexing.BatchIteratorBackpressureExecutor.setResult(BatchIteratorBackpressureExecutor.java:138)
                at io.crate.execution.engine.indexing.BatchIteratorBackpressureExecutor.continueConsumptionOrFinish(BatchIteratorBackpressureExecutor.java:125)

commit 2cb8d0bbbb78f53314debecefb8e972e6800974e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 24 16:24:49 2020 +0200

    Avoid wrapping exceptions in RuntimeException
    
    Changes a few places where we did the RuntimeException dance manually to
    re-use `Exceptions.toRuntimeException` and others where we didn't to use
    it, to avoid wrapping if not necessary.

commit c7d5e6740e78ace36148d6b03257b648d46da3e1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 24 15:39:15 2020 +0200

    Add optimizer rule for count(*) on aliased table
    
        select count(*) from tbl as t
    
    should be as fast as
    
        select count(*) from tbl
    
    Results (server side duration in ms)
    
        V1: 4.3.0-6da37b37f27e2075e83b1339b0344139d998d809
        V2: 4.3.0-0bda4aecf8bec0a309bdbe4e33d37c6c5239f94d
    
        Q: select count(*) from uservisits AS u
        C: 1
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |      180.914 ±   21.002 |    149.203 |    181.490 |    185.159 |    421.064 |
        |   V2    |        2.789 ±    7.765 |      1.140 |      1.999 |      2.618 |    111.405 |
        ├---------┴-------------------------┴------------┴------------┴------------┴------------┘
        |               - 193.93%                           - 195.64%
        There is a 100.00% probability that the observed difference is not random, and the best estimate of that difference is 193.93%
        The test has statistical significance
    
        System/JVM Metrics (durations in ms, byte-values in MB)
            |    YOUNG GC            |       OLD GC           |      HEAP         |     ALLOC
            |  cnt      avg      max |  cnt      avg      max |  initial     used |     rate      total
         V1 |    0     0.00     0.00 |    0     0.00     0.00 |     2147        0 |     1.27         45
         V2 |    0     0.00     0.00 |    0     0.00     0.00 |     2147        0 |    53.02         37
    
        V1 top allocation frames
          DirectMethodHandle.allocateInstance(Object):13311056
          Weight.scorerSupplier(...):9435136
          DocIdSetIterator.all(int):1572864
          MatchAllDocsQuery$1.scorer(...):1524529
          Unsafe.allocateUninitializedArray(Class, int):1087376
        V2 top allocation frames
          DirectMethodHandle.allocateInstance(Object):6834176
          Arrays.copyOf(...):4704257
          Collectors.summingLong(...):1572864
          DefaultHttpHeaders.<init>(...):1570816
          ArrayList.iterator():1095680
    
    Closes https://github.com/crate/crate/issues/10586

commit a5063ebe1da268b46b980f2c2a53403144f7f056
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 22 10:18:54 2020 +0200

    Expose IndexSearcher instead of Engine.Searcher in SharedShardContext
    
    To ensure that the Engine.Searcher is not closed directly, but always
    via the RefCountedItem.

commit 3b5d24babc0200980c504199cb64233502d6f739
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 17 15:15:57 2020 +0200

    Fix flaky ThreadPoolsExhaustedIntegrationTest
    
    This makes again sure that collect & search share the very same searcher
    instance.
    
    We changed that in https://github.com/crate/crate/commit/e7695886044540030b1a50f82f33a52d99c9b1be and since then the ThreadPoolsExhaustedIntegrationTest has been flaky.
    
    Due to the nature of the test, the assumption was that the errors were
    related to the kill handling, but logging indicates that the error is
    unrelated to the kill handling.

commit a3063296d80eb275b4314f222511e99a7faf6aed
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 24 10:26:33 2020 +0200

    Eagerly complete DistributingConsumer on failure
    
    Before we waited for a response from all downstreams before setting the
    completionFuture.
    
    This changes it to complete it eagerly to allow subscribers to the
    future to release their resources earlier.
    
    Downstreams could take a bit before they answer depending on their load
    and the network and there is no advantage waiting for the response.

commit 6a4a74cda3a6c099e70de9a8110868eccbac7079
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 24 10:14:30 2020 +0200

    Add exception handling safe-guards for Transports and NodeAction
    
    A implementation of `nodeAction.nodeOperation` could also raise an
    exception instead of returning a failed future.
    
    This makes sure that such errors are not swallowed but result in a
    failure response.

commit 90597b127a498e2c8c10ce6f68e8a2cff3df70ec
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 24 09:54:12 2020 +0200

    Don't pass DistributingConsumer logger around unnecessarily

commit 6da37b37f27e2075e83b1339b0344139d998d809
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed Sep 23 14:47:28 2020 +0200

    Port over some of ReadOnlyEngineTests.
    
    ES state: 704317da71c

commit 483a2f45c8b48a3f095bef1181c009c33354f977
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 23 10:44:51 2020 +0200

    Make memory reservation based on free bytes in insert-from-query
    
    One of our nightly benchmarks failed because it's doing 15 concurrent
    insert-from-unnest.
    
    With the logic we had, each insert-from-query operation was allowed to
    reserve memory anywhere from 5MB to 15% of the query circuit breaker's
    limit.
    
    The problem with that is that the first couple of insert-from-query
    operations eagerly use up memory, and then there is nothing left for the
    remainder.

commit 6563b93ef798b42c01c98a323c6ba953ce0da6bf
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri Sep 11 16:07:11 2020 +0200

    Add DeadNodesAllocationTests and AllocateUnassignedDecisionTests

commit 2cf48f31fd50a04081fa21cb74c9b8492e149e7a
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri Sep 11 15:15:50 2020 +0200

    Update ESAllocationTestCase to current state
    
    This updates ESAllocationTestCase to the state of elasticsearch commit
    704317da71c to enable backports of more allocation tests.

commit 555472d13fbf8fe0b605035b8ed812c7750a223c
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri Sep 11 14:59:46 2020 +0200

    Add IndexShardRoutingTableTests back to es test suite

commit 574f586810027c27aecf0659ea008c65d19aba19
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri Sep 11 14:46:11 2020 +0200

    Add ShardRoutingTests back to es test suite

commit ec2295760613df38231ffeb256825c9deaba83a0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 23 10:37:41 2020 +0200

    Deduplicate CircuitBreakerException

commit bb562557affaed583d46d6519f4a6aa769abfd32
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 22 16:57:08 2020 +0200

    Remove bogus code from innerNoOp
    
    The logic was incorrectly added in https://github.com/crate/crate/commit/dfed1ca79cde0ecfb79e0aa16eca41bf597bfe19
    
    The finally block was supposed to be removed in https://github.com/elastic/elasticsearch/commit/5d0813b09163fc4010bba5f2439c5f722500a23b
    and https://github.com/elastic/elasticsearch/commit/f27e808c1457ddbda1c69b4422d9a10ee6ec299d didn't re-add it.

commit 30cfc0d972f440bc4e6c5124bbe29a3857585cb9
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Tue Sep 22 17:26:50 2020 +0200

    Reflect 4.2.5 release.

commit 4718b61ae771a5a55fdec8a3eeee1f94c72104d2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 22 11:51:33 2020 +0200

    Avoid wrapping AssertionError in RuntimeExceptions in test layer
    
    To get better stacktraces. If it is wrapped in a RuntimeException parts
    of the stacktrace that are interesting can get truncated.

commit 0263c9a57826bdbe75767ab937156c33ae8e4f1b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 22 12:00:34 2020 +0200

    Add more context to source of acquireSearcher calls
    
    Should help debug issues where a searcher is not closed or closed twice.

commit 6140918a7ac132ed2fc3d8a568678618823a394b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 22 11:30:19 2020 +0200

    Improve "is still locked" errors in test layer
    
    Changes the assertion error to also include the original
    `ShardLockObtainedFailedException` to have its information available as
    well.

commit d92943fc65319f4c3de83df76c8bf1d3d70931b7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 22 14:11:01 2020 +0200

    Fix CIDR range check in host based authentication
    
    Cast to int messed up the values

commit 9638d51db91749d101742ffc18c56cd1ae8e618a
Author: Daisy T <daisyts@gmx.com>
Date:   Mon Sep 21 19:39:37 2020 +0200

    remove guava immutablelists from some server tests

commit e1a1dc6701553c0256c36eb1f25ed05e11336eaa
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Mon Sep 21 17:16:52 2020 +0200

    Port over ES OpenCloseIndexIT tests.
    
    es state: 704317da71c

commit df98ee914b457f9cc3f2fdacc91b5b3a4ea5dad9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 22 09:45:25 2020 +0200

    Acquire indexService eagerly in SharedShardContext(s)
    
    There's no need for the lazy initialization, the IndexService and
    IndexShard are always going to be used.

commit 8e82735a0406858dfd8598c6d6c467b51a2c47c8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 22 10:02:58 2020 +0200

    Remove JoinBatchIterators indirection
    
    Each method was just 1 line that called the constructors. That can be
    done directly as well.

commit 48911649127e5e2f3750cbf2066d2e0fdecbfdd1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 21 14:07:41 2020 +0200

    Make completionFuture mandatory in CapturingRowConsumer
    
    There are no call-sites which pass in a `null` value, so we can make it
    mandatory.

commit 20ae0ca9fe2685bdd377d4e854d30c0dc57a26b4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 18 16:55:06 2020 +0200

    Remove duplicated registerRequestHandler overloads
    
    The same overloads already exists, except that some arguments were
    shuffled around differently.
    
    (The same overloads were also already removed in ES on the same patch
    level we are at)

commit 34db2fc75e4baa24fa01c11dd9f8e45a2d664ca7
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 4 16:22:40 2020 +0200

    bp: Report more details of unobtainable ShardLock
    
    https://github.com/elastic/elasticsearch/commit/98213df9462ccae9b672bb6256208a0374b64306

commit 9a2d0214e82773273faa806d639684d35aaf531e
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 4 16:16:13 2020 +0200

    bp: MINOR: Remove some deadcode in NodeEnv and Related
    
    https://github.com/elastic/elasticsearch/commit/c4b831645cb0369449d092a14ecaff4c04528141
    
    Most changes were already applied by previous backports

commit 1d792ac05826c07f69b696fd2f453bca29f8ec3b
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 18 12:26:15 2020 +0200

    Fix BWC issue with aggregation func resolving
    
    Aggregation functions have partial intermediate states which cannot be
    used for aggregation full qualified resolving when a `Signature` is not
    available when the function is streamed by nodes < 4.2.
    Thus the registered argument types of the deprecated `FunctionInfo` must be used for this fallback full qualified resolving and not the actual input types.

commit 23620a06bb255e24d2940e083e84f3d3f4d91008
Author: Daisy T <daisyts@gmx.com>
Date:   Fri Sep 11 14:58:10 2020 +0200

    update developer guides

commit ece58ee0dd1d337c4b51737386ac9b47ffba97fc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 16 16:14:27 2020 +0200

    Deprecate the overhead circuit breaker setting
    
    This deprecated the settings and internally removes any usages.
    The only circuit breaker where the default diverged from 1.0 was the
    query breaker and the already unused fielddata breaker.
    
    The usefulness of the setting was questionable. It provided another
    knob to tune the circuit breaker behavior, but it is somewhat redundant
    because tuning the limit had more or less the same outcome.
    
        newUsed * overheadConstant > memoryBytesLimit
    
        =
    
        newUsed > memoryBytesLimit / overheadConstant
    
    It made the implementations more complicated and also made it harder to
    reason about how the memory accounting works. Acting a bit like a smoke
    bomb.
    
    There were also inconsistencies in its use. In one place it was applied
    to the *delta*, in other cases it was applied to the *total*.

commit 5526a7b0ce009416de517d4d1a0d5d4368073407
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 16 15:28:31 2020 +0200

    Remove name argument from ChildMemoryCircuitBreaker
    
    The name is also present in the `BreakerSettings`

commit 8c3300cff20f09575abbda5a01906fef63a68409
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 18 11:54:05 2020 +0200

    Fix "Searcher for reader with id X not found" flaky tests
    
    Due to a kill, `searchers` can be cleared. In such a case the client
    received a `Searcher for reader with id X not found` error instead of
    the killed-reason.

commit d44412efff75ed1c5edd0d03141e878d97a8445d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 18 10:32:25 2020 +0200

    Always close searchers via CollectTask
    
    Once a searcher is registered with the collectTask, the collectTask
    ensures that the searcher will be closed.
    
    This removes some try/catch blocks which took care of closing the
    searcher in case of errors - they're not necessary if the searcher is
    registered with the collectTask right after acquiring it.

commit 3b8996d1739e84a9355dbc253389e1f4e184018d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 17 19:21:44 2020 +0200

    Update bundled JDK to 15+36

commit cd38c4b8aebc4afef0105b80ed5bc748be1d599f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 17 11:34:20 2020 +0200

    Remove unused client wrapper from ESIntegTestCase & InternalTestCluster

commit b0a1fd5abac1e3fcb5ea01250bb1137432cd6574
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 17 11:28:02 2020 +0200

    Remove unused transport client related methods from ESIntegTestCase

commit ae7f59c129c37ea965f4be7a42aa741ea0fd921d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 17 11:19:34 2020 +0200

    Remove redundant size() > 0 checks in TestCluster
    
    If the size is zero, then the `node.values()` will be empty and the loop
    does nothing.
    
    Reduces the indentation level a bit.

commit ba6ea46134a31ab7b13c63c35a9453d9d7e46f7f
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed Sep 16 16:51:48 2020 +0200

    Add support for RESET SESSION AUTHORIZATION statement.

commit 4be4f3c3ae41b07427ea18ae98606cf1c1ca439e
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed Sep 16 16:41:36 2020 +0200

    Rename SessionContext#user to SessionContext#sessionUser.
    
    To emphasize which user is used such as currently session context
    contains authenticated and session users.

commit 8bd77ff094074896668eaa575d97b34d6d000de8
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed Sep 16 16:11:27 2020 +0200

    Add support for SET SESSION AUTHORIZATION username statement.

commit 25dec38dfe2980fb0746b8290bfbc9feeffd34cd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 17 11:08:46 2020 +0200

    Remove two ignored planner tests
    
    Due to how the operators work these test cases don't make sense anymore.
    A Join operator will always have all the outputs and they're stripped
    away by a later operator. In the test cases this would be the
    aggregation or group projections.
    
    That the aggregations or group projections don't have extra outputs is
    implicitly tested by various logical planner test cases.

commit 33ea14c69a209fc231c0d042f62e8595669c493f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 15 12:04:20 2020 +0200

    Account for memory used and adapt size in insert-from-query operations
    
    This changes the insert-from-query logic to take the free memory of the
    query circuit breaker into consideration when computing the
    bytes-per-bulk-requests size.
    
    It also accounts for the max-bytes up-front before it starts reading the
    data into memory. That should protect against cases where many
    concurrent insert-from-query operations would try to load data into
    memory that cannot possibly fit - leading to high GC pressure and maybe
    even an OOM error.

commit 22fe1ddd4b15756afced0c72d0009f3d9b32130c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 16 11:34:53 2020 +0200

    Remove lgtm artifacts
    
    We deactivated the lgtm trigger a while ago because lgtm didn't have
    JDK14 support back then and the builds always failed.
    
    [lgtm (or Semmle) joined
    Github](https://blog.semmle.com/secure-software-github-semmle/) and that
    led to some of the functionality being avaiable via Github Actions,
    which [we added recently](https://github.com/crate/crate/pull/10502)
    
    I think the checks ran by the Github actions are currently only a subset
    of those previously ran by lgtm, but it seems to be the way going
    forward, so let's drop the stale lgtm configs and badges.

commit 246368c1edd7746fe252cb4cf911b2247c689c9b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 16 10:48:26 2020 +0200

    Increase assertBusy timeout for testMappingNewFieldsTimeoutDoesntAffectCheckpoints
    
    Seeing test failures on Jenkins where the global checkpoint is not
    up2date.
    
    This increase the timeout to see if it simply takes too long - if it
    continues to fail it may point to a bug.

commit 9d57c83a5624587d422539f6d2a0267958621926
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 15 11:13:45 2020 +0200

    Deprecate fielddata circuit breaker setting
    
    The fielddata circuit breaker isn't used in production code anymore.
    The only existing calls are from tests.

commit 4810ca32076e6d82096710068cf478cfeaf43261
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 14 14:06:26 2020 +0200

    Add a .vscode/launch.json
    
    To have a debug configuration for visual studio code, or other editors
    which support reading the debug configuration from `.vscode/launch.json`

commit 23f9f9d708e565920d63da78eb6b31e9c8d2500e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 16 09:39:55 2020 +0200

    Fix flaky testTrimUnreferencedTranslogFiles
    
    The assertion
    
        assertThat(noOpEngine.getTranslogStats().estimatedNumberOfOperations(), equalTo(softDeleteEnabled ? 0 : numDocs));
    
    fails if multiple eninge flushes happen while indexing documents.
    The only changes in ES we haven't applied in the area is
    
      https://github.com/elastic/elasticsearch/commit/ebc468147321cfdd56a9d011e0b40126677b9e78
    
    which we shouldn't apply yet as there are many other outstanding patches
    before that.

commit 0f37bac7d72776656471cef834b21e389a9443c3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 15 21:04:46 2020 +0200

    Fix testRestartNodeWhileIndexing
    
    See
    
    - https://github.com/elastic/elasticsearch/commit/008430a9c23235ee5be1fa21dc8dcc4e9e9ba231
    - https://github.com/elastic/elasticsearch/commit/0cfc9ff77594a64737078ce6ffd4630a1a4253d5

commit 3a7a508f530f5a8fd6bdeb33cfaa97d75054f5de
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 29 11:34:48 2019 +0200

    bp: Do not block transport thread on startup
    
    https://github.com/elastic/elasticsearch/commit/c23fa9dc47251a53a9e5cc7e0061688967c0a737

commit e7182d43e0b286a869bf56ae43c551e7ab9571e4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 15 09:53:29 2020 +0200

    Fix division by 0 if debug logging is enabled on engine.indexing

commit 4ef0a3f97d03722cec9f5fd624da03c2a735266c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 14 21:44:59 2020 +0200

    Remove obsolete Ignore annotation for subscript on object literal
    
    We enabled this case a while ago
    
        select col1['b'] from (select * from unnest([{b=1}])) t1

commit 27f4df70b0c2ffd6275e7f2a55c3b7e864fc6805
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 14 15:58:49 2020 +0200

    Update httpclient and httpcore
    
    Saw the following error in some logs:
    
        Sep 10, 2020 3:19:25 PM com.amazonaws.http.apache.utils.ApacheUtils noSuchMethodThrownByNormalizeUriInvoker
        WARNING: NoSuchMethodException was thrown when disabling normalizeUri. This indicates you are using an old version (< 4.5.8) of Apache http client. It is recommended to use http client version >= 4.5.9 to avoid the breaking change introduced in apache client 4.5.7 and the latency in exception handling. See https://github.com/aws/aws-sdk-java/issues/1919 for more information

commit 9aae2a0534c7e89b6e7de5d81c6455cddb1938dd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 11 10:10:57 2020 +0200

    Also pause insert-from-query on high memory usage
    
    We added a byte-threshold to the partitioning, which leads to smaller
    individual bulk requests, but it still allowed concurrent execution
    which can lead to many smaller bulk requests being held in memory for a
    long time.
    
    This adds the byte-threshold rule also to the pause check, to pause
    reading more data if a lot of memory is occupied.
    
    This is based on some heap dumps from nodes which crashed due to OOM
    where a large chunk of memory was used up by response handlers.
    
    This also lowers the allowed heap percentage that the bulk requests may
    take (from 30% to 20%) and adds a second static max size (100MB)

commit 49999194ef6ab5aa2d7bae3b61e15eae6d00ed4b
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Fri Sep 11 15:06:23 2020 +0200

    Do not close index searchers outside the CollectTask.
    
    In the doc values group by and aggregation optimizations
    (GroupByOptimizedIterator, DocValuesGroupByOptimizedIterator,
    DocValuesAggregates) index searchers are added explicitly to the
    collect task and their closing, in case of failure, is managed as
    well by the above-mentioned classes. That is redundant. The collect
    task manages closing of the added index searcher itself. See
    `CollectTask#innerKill` or `CollectTask#close/innerClose`.

commit b712c45392c9f4a6aa614527502f381a865ba436
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri Sep 11 12:28:51 2020 +0200

    bp: Add VersionValueTests back to es test suite

commit 03db383ea2ec7f81b5e298af3e0a8cc4d7f8eb3d
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri Sep 11 12:15:45 2020 +0200

    bp: Add LuceneChangesSnapshotTests back to es test suite

commit 7c8330869c86fc2b5f8cd647ecd14ba5f60709ae
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri Sep 11 10:46:09 2020 +0200

    bp: Add ReadOnlyEngineTests back to es test suite
    
    This adds the previously removed ReadOnlyEngineTests back to the
    es test suite. The test is adapted to our current state of the
    code base because it diverged.

commit 16eb586563b61db6aa21f7af39cdb3b3dfb7df50
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri Sep 11 10:20:35 2020 +0200

    bp: Add ClusterBlockTests back to es test suite

commit 91a7e0cf44c11703887fb7d79da962ccd2fb15e8
Author: Daisy T <daisyts@gmx.com>
Date:   Wed Sep 9 13:31:54 2020 +0200

    make changes to contribution guide

commit 9b50bb040247d07ccdde628e38b4c5f76ef2c2ee
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Sep 10 12:43:21 2020 +0200

    Fix aggregation plan building when inputs contain params
    
    Aggregation inputs must be compared against the outputs of a source
    logical plan before any parameter or sub-query result binding happen
    because all logical plan outputs are always unbound.
    
    Fixes #10494.

commit fc4c0f3f41d755aace8ff7a18734eb43378c6efb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 10 21:38:10 2020 +0200

    Fix testReplicaIgnoresOlderRetentionLeasesVersion
    
    See https://github.com/elastic/elasticsearch/commit/1ec04dff43576f05e395e020705320b41b3c4a2e
    
    Closes https://github.com/crate/crate/issues/10331

commit 272a15da0df1a9980d7b6e13226d5f2e63338ddc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 10 21:23:19 2020 +0200

    Fix flaky testAcquirePrimaryAllOperationsPermits
    
    See https://github.com/elastic/elasticsearch/commit/9bdbba23f8ca907efc1114cbd390e6263493ca92
    
    Closes https://github.com/crate/crate/issues/10351

commit 0cc50dea0f0e78d4744a26ea81aacc35e40a623c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 10 21:02:44 2020 +0200

    Fix flaky testAddOrRenewRetentionLease
    
    Closes https://github.com/crate/crate/issues/10328
    
    See https://github.com/elastic/elasticsearch/commit/d2cc1459a35594f9d55d6c8dc42729c9c688b2eb
    
    We also have to enable soft deletes to make sure index is used for peer
    recovery. (For the test changes introduced in
    https://github.com/elastic/elasticsearch/commit/01287eacb2f2d2673bc25078fb0b76d81beaad9b)

commit ce177209b222c02e634f2f32e7557b5c83b0dd19
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 10 16:34:27 2020 +0200

    Update netty to 4.1.52
    
    https://netty.io/news/2020/09/08/4-1-52-Final.html

commit da70f308057ce78d67ac4ea31f0ee085ad3c585b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 17 17:41:42 2019 +0200

    bp: Remove Support for pre-5.x Indices in Restore
    
    https://github.com/elastic/elasticsearch/commit/704317da71c3de1b85679bc549bba3b4230acb5d

commit 672c6cd4a65598ee92e80cde932b50a39fc58806
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Oct 13 12:58:05 2019 -0400

    bp: Sequence number based replica allocation
    
    https://github.com/elastic/elasticsearch/commit/e628f35f69bfa833bbdba8e6f1a6cb51a7f8337d

commit 57e442210c44dcb31d75a38c4f30f69cb2832643
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Oct 13 12:48:05 2019 -0400

    bp: Avoid unneeded refresh with concurrent realtime gets
    
    https://github.com/elastic/elasticsearch/commit/d8f5a3d647ac94c7c15280145a64bd54701cc5b4

commit 69b938f7edc70e90fe026abe17aa6eb204d9e445
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 10 05:15:15 2019 +0800

    bp: Sync translog without lock before trim unreferenced readers
    
    https://github.com/elastic/elasticsearch/commit/f749bacf34bfe7fb14974c13020e864e12d9f5b1

commit ce1139dbab20f7f4f0cba4a8e4241ac83f758556
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 9 22:16:53 2019 +0200

    bp: Simplify some Common ActionRunnable Uses
    
    https://github.com/elastic/elasticsearch/commit/c74527e4bb40c5667e5b3338e76389fbd33b5251
    
    We already applied other patches in the snapshot area, so this only
    affects a single file

commit cffb877e02f79db149f44dcc1129a40c2654e125
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 3 10:34:15 2019 -0400

    bp: Limit number of retaining translog files for peer recovery
    
    https://github.com/elastic/elasticsearch/commit/8c464775663de090e9d930e3b155268b66ad867f

commit c6cfa01bc437ada055602bfe119cd4757e7635c5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 3 11:25:09 2019 +0100

    bp: Remove typename checks in mapping updates
    
    https://github.com/elastic/elasticsearch/commit/29463551aea9b58ecf3dfdee794d8f7223da9302

commit 282f55576f68662490ceb1ac5ba2ce5fa8df0c40
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 1 14:53:27 2019 +0200

    bp: Use standard semantics for retried auto-id requests
    
    https://github.com/elastic/elasticsearch/commit/9993cf391f1e8693511bddf8100314e857c095c1

commit 8f0475219a4edd420103ea3effedc2af90e06da2
Author: Mika Naylor <mail@autophagy.io>
Date:   Wed Sep 9 14:37:49 2020 +0200

    Clarify indexing/tokenization schemes with dynamic object columns
    
    This should address #10153

commit 53bc2ea6076da4150b07522e85175137d7a90e7c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 30 16:54:46 2019 +0200

    bp: Allow optype CREATE for append-only indexing operations (#47169)
    
    https://github.com/elastic/elasticsearch/commit/c048c86351bcb56b514ada91695f85b6ca05331e

commit 89c728c06db018baec6dec98cf160fe6548d2495
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 9 12:03:10 2020 +0200

    bp: Remove per-type indexing stats
    
    https://github.com/elastic/elasticsearch/commit/ff99bc1d3f8a7ea72718872d214ec2097dfca276

commit 987a53466fa84f7be7e76afdc5c6690738818438
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 9 11:49:15 2020 +0200

    bp: Remove write lock for Translog.getGeneration
    
    https://github.com/elastic/elasticsearch/commit/2b8c7c5e11c2d8ea9397bd94e59c5bc7c50c3be4

commit 6c20e376b8359099f56ff8ebe41c6107fc98103a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 9 11:40:14 2020 +0200

    bp: Remove unused private methods and fields
    
    https://github.com/elastic/elasticsearch/commit/b1a03a137fd036aa5b7e2e483569633c413de9b8

commit 9acdae085adc636717247647829c8ea83b6b991d
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Sep 8 13:21:58 2020 +0200

    Improve error handling when group by with undefined type

commit 5d283757c374f231e1c5fe9544a72747e75a37fd
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed Sep 9 16:09:47 2020 +0200

    Fix the join condition hash symbols ordering in the HashJoin.
    
    It could have happened that joining more than 2 tables using hash join
    won't return the joined tuples despite that the join condition is satisfied.
    That could happen due to the non-deterministic ordering of the join condition
    symbols (hash join symbols) which would lead to the wrong calculation of the
    hash code for the join condition values on either join side. This change fixes
    the ordering of the join condition symbols.

commit 2c41bde533cac40a0c4890b79a16c824fe7cfbd4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 9 09:17:01 2020 +0200

    Add codeql analysis Github action

commit 94edf49fc1b5659e49df87f69f2974226ee1651b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 8 17:59:38 2020 +0200

    bp: Extract proxy connection logic to specialized class
    
    https://github.com/elastic/elasticsearch/commit/632855885e77caaa31b37336576d92acca44641e

commit ac64bca98628e644700003b0bc36921ae0cdf7c7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 8 17:43:48 2020 +0200

    bp: Remove locking around connection attempts
    
    https://github.com/elastic/elasticsearch/commit/f6fe55fa60d4d74fc75e733bbc99b69518b6ae3f

commit 3812e422b4087750eb49e13e4e933e6e89144619
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 8 15:04:26 2020 +0200

    bp: Remove default mapping
    
    https://github.com/elastic/elasticsearch/commit/6a5bae184b80c8a0012158c217de340535e9f45c
    
    In our case we always used "default" and never allowed custom mapping
    types.
    
    This also contains part of https://github.com/elastic/elasticsearch/commit/d7be9185c80a94e5f8b06cd372d950fad9707e36

commit fef28045c0a3bd4ac27fe84e5edfb3f5c8ac8a85
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 8 11:44:27 2020 +0200

    bp: Remove ExceptionHelper.detailedMessage
    
    https://github.com/elastic/elasticsearch/commit/ff9e8c622427d42a2d87b4ceb298d043ae3c4e6a

commit ddcc190af0c5ecb45ec0fe186eecb2b8e4c368e6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 8 11:25:20 2020 +0200

    bp: Handle lower retaining seqno retention lease error
    
    https://github.com/elastic/elasticsearch/commit/b52c2d5d82adec756c1dcda752c91a2996c24de5

commit f07a5cd5dd50c81ed8d63d91f4976c6f58a2db26
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 8 11:05:36 2020 +0200

    Remove enabled flag from FieldNamesFieldMapper
    
    We never allowed to disable the `_field_names`, so instead of following
    ES with the extra deprecation steps
    
    https://github.com/elastic/elasticsearch/commit/d0a7bbcb6945234978bc8083ff0ea972e858981d
    https://github.com/elastic/elasticsearch/commit/2351aa3efbd7e2205cedec95eb5494aa735a0f1e
    
    We can remove the setting already.

commit f3c4a9067318967aac2d86e75df876b4077b6ac2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 8 11:01:23 2020 +0200

    bp: Revert "Sync translog without lock when trim unreferenced readers
    
    https://github.com/elastic/elasticsearch/commit/41d3eb31946a1f6f894fe1c46f57260e2195704e

commit f0795967ada4a6f71087c9b5dedfc409bdf7f050
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 8 10:55:21 2020 +0200

    bp: Do not send recovery requests with CancellableThreads
    
    https://github.com/elastic/elasticsearch/commit/b38f46440386de969404268bc532a369c9ebba39

commit 9fbc93c331e879b29047d1ac9a2b246d0aaced3e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 8 10:40:14 2020 +0200

    bp: Wait for all Rec. to Stop on Node Close
    
    https://github.com/elastic/elasticsearch/commit/12a4177690e1d27931c24e2a51adcfd564d876fb

commit 352f2593dbf154c8264e91d120f1616cbf3793b8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 8 10:31:35 2020 +0200

    bp: Enhanced logging when transport is misconfigured to talk to HTTP port
    
    https://github.com/elastic/elasticsearch/commit/911d02b7a9c3ce7fe316360c127a935ca4b11f37

commit 0a5da28a4c56ed6f109d5cd79c56ba1877f78682
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 8 10:15:54 2020 +0200

    bp: Handle delete document level failures
    
    https://github.com/elastic/elasticsearch/commit/a2d4b81b6b51862833a20e2df00064aa2eac4a16
    
    Was already applied, this only adds the test cases

commit 1ff37a526cd275cb41763b00d07aef4c0796a513
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 8 10:06:34 2020 +0200

    bp: Do not create engine under IndexShard#mutex
    
    https://github.com/elastic/elasticsearch/commit/54ccdc7e9ad9808f5c3c2ef970bdc45fc311e637

commit 02a51a1e2a268eaa545166b589e148878f45789a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 8 09:48:53 2020 +0200

    bp: Never release store using CancellableThreads
    
    https://github.com/elastic/elasticsearch/commit/0fb695e2e44f3295f35de69e6c5fd63008a3adb6

commit 1c7864fd558fa84c2ceaffbc15ac0256e475e9fe
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 8 09:34:23 2020 +0200

    Add transport patches in es-backports.rst

commit 96e1c88c1b96cccb2c0da94ed18c99aacd1c245c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 8 09:26:28 2020 +0200

    bp: Rename PlainTransportFuture -> TransportFuture
    
    https://github.com/elastic/elasticsearch/commit/1bcda083683533732c5bd24a99db9d87e97d02ff

commit 04e7dcfdff21895540e7119555ec1b6db633c0a1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 3 11:17:26 2020 +0200

    bp: Remove Blocking Transport APIs
    
    https://github.com/elastic/elasticsearch/commit/60247d317286a36142689a5d7f20aa2b6064719f

commit fa5f5fe077e57b553c03641db4d1e77e258139cf
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed Sep 2 16:21:29 2020 +0200

    Use doc values aggregators in the group by iterator.
    
    DocValuesGroupByOptimizedIterator is kicked in when the group by keys and
    aggregatefunctions fields utilize doc values. This optimization won't replace
    the group by a single string key optimization. The optimization uses the
    DocValuesAggregator implementations, if any exists for the used aggregation
    functionis signatures, to perform the required aggregations.
    
    V1: 4.3.0-91eab4079418606c6800b03f9b438adabb1cb7f4
    V2: 4.3.0-7a781f2ce9e0508a1fbbe8f8aca4316b497ee684
    
    Q: select avg("adRevenue"), sum("adRevenue"), min("adRevenue") from uservisits group by "duration"
    C: 10
    | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
    |   V1    |      638.100 ±  325.566 |    211.815 |    482.160 |    932.585 |   3125.512 |
    |   V2    |      373.246 ±  196.211 |    124.022 |    277.423 |    549.255 |   1615.749 |
    ├---------┴-------------------------┴------------┴------------┴------------┴------------┘
    |               -  52.38%                           -  53.91%
    There is a 100.00% probability that the observed difference is not random, and the best estimate of that difference is 52.38%
    The test has statistical significance
    
    Q: select avg("adRevenue") from uservisits group by "duration"
    C: 10
    | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
    |   V1    |      452.103 ±  218.103 |    151.666 |    345.346 |    667.845 |   1006.138 |
    |   V2    |      185.711 ±   85.982 |     53.151 |    145.821 |    266.296 |    450.111 |
    ├---------┴-------------------------┴------------┴------------┴------------┴------------┘
    |               -  83.53%                           -  81.25%
    There is a 100.00% probability that the observed difference is not random, and the best estimate of that difference is 83.53%
    The test has statistical significance
    
    Q: select avg("adRevenue") from uservisits group by "cCode", "duration"
    C: 10
    | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
    |   V1    |     2103.870 ± 1050.969 |    497.677 |   1709.958 |   3193.367 |   4763.876 |
    |   V2    |     1859.424 ±  942.139 |    414.991 |   1486.976 |   2866.043 |   3878.281 |
    ├---------┴-------------------------┴------------┴------------┴------------┴------------┘
    |               -  12.34%                           -  13.95%
    There is a 100.00% probability that the observed difference is not random, and the best estimate of that difference is 12.34%
    The test has statistical significance
    
    Q: select "cCode", avg("adRevenue") from uservisits group by "cCode"
    C: 15
    | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
    |   V1    |      381.050 ±  208.475 |    104.771 |    396.171 |    480.988 |   1456.100 |
    |   V2    |      416.578 ±  230.937 |    111.100 |    421.884 |    525.586 |   1559.578 |
    ├---------┴-------------------------┴------------┴------------┴------------┴------------┘
    |               +   8.91%                           +   6.29%
    There is a 98.92% probability that the observed difference is not random, and the best estimate of that difference is 8.91%
    The test has statistical significance
    
    Q: select "cCode", count(*) from uservisits group by "cCode"
    C: 15
    | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
    |   V1    |      436.798 ±  612.384 |     54.301 |    187.792 |    264.789 |   2168.169 |
    |   V2    |      394.126 ±  455.784 |     47.463 |    236.423 |    321.290 |   1533.854 |
    ├---------┴-------------------------┴------------┴------------┴------------┴------------┘
    |               -  10.27%                           +  22.93%
    There is a 42.32% probability that the observed difference is not random, and the best estimate of that difference is 10.27%
    The test has no statistical significance
    
    System/JVM Metrics (durations in ms, byte-values in MB)
        |    YOUNG GC            |       OLD GC           |      HEAP         |     ALLOC
        |  cnt      avg      max |  cnt      avg      max |  initial     used |     rate      total
     V1 |  218     2.60     1.91 |    0     0.00     0.00 |     2147      123 |  2092.40     278781
     V2 |  262     2.60     1.76 |    0     0.00     0.00 |     2147       52 |  2113.17     336127
    
    V1 top allocation frames
      BytesRef.utf8ToString():89196875640
      StringUTF16.compress(...):55279245409
      GroupingCollector.evalKeyInputs(List):46236358862
      Float.valueOf(float):43693361381
      ArrayList.<init>(int):43296970152
    V2 top allocation frames
      BytesRef.utf8ToString():121696878465
      DocValuesGroupByOptimizedIterator$GroupByIterator.lambda$forManyKeys$2(List, List):60725497291
      StringUTF16.compress(...):60709561912
      ArrayList.<init>(int):60696946969
      Float.valueOf(float):30925578229

commit 4a6df5098ada7674d67fd1c6d306ca15b7dd5682
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 7 22:33:35 2020 +0200

    bp: Log exceptions in TcpTransport at DEBUG level
    
    https://github.com/elastic/elasticsearch/commit/336a3958aa60b6381ee80e0127b3375f505c5bc4

commit f998efb2febe5019f389c2565a2c97680c4f1686
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 7 22:25:26 2020 +0200

    bp: Cleanup some in o.e.transport
    
    https://github.com/elastic/elasticsearch/commit/7f1e1c51a475f800717a65f7318f50fc0174904e

commit 8bd89d3c6ad168843fbbc08131792739f67d9f36
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 7 21:56:57 2020 +0200

    bp: Lower Limit for Maximum Message Size in TcpTransport
    
    https://github.com/elastic/elasticsearch/commit/6e7ede43fb773f5471720203e10f8c1c70803131

commit f4a9d29fe8c219c8aa0c221f388ab9ad7e0e9b97
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 7 21:50:10 2020 +0200

    bp: Remove client feature tracking
    
    https://github.com/elastic/elasticsearch/commit/a9f351556f519e4f9b23e755a3e5da767512a66a

commit 5fe5c0bb4d0f206fb714484c9e8dbb75797bcf4d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 7 21:02:24 2020 +0200

    bp: Move ConnectionManager to async APIs
    
    https://github.com/elastic/elasticsearch/commit/bca865dd42557c5dcf081f4d3b4a8416569a1bea

commit e84e6bc38ca4c031bc35869a77db3d299b929e0f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 7 20:14:06 2020 +0200

    bp: Make Connection Future Err. Handling more Resilient
    
    https://github.com/elastic/elasticsearch/commit/c6e1eb7b953c91bb3a9f16573435931c8302dc71

commit bf7167de33bd3745940056122caabb511720dd95
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 7 19:15:05 2020 +0200

    bp: Clean up Node#close
    
    https://github.com/elastic/elasticsearch/commit/d706b40c638b3e29357617982e92c7b68391afa8

commit 0f84d05e5172bf26bdac343c3ef567405dc68b3b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 7 18:43:58 2020 +0200

    bp: Add InboundHandler for inbound message handling
    
    https://github.com/elastic/elasticsearch/commit/8d532b5ad7687f01061bf9666409b07bcca0767e

commit 98d0c17783541e0f30d3e089a7f88ebb2f5e953f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 7 17:19:48 2020 +0200

    bp: Move outbound message handling to OutboundHandler
    
    https://github.com/elastic/elasticsearch/commit/9e11dfc7f01eff5eb23ca16ee283cfd029cdafc9

commit f459d5fdd2727ad254c5e632571389039d723fea
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 7 16:35:33 2020 +0200

    bp: Move TransportMessageListener to TransportService
    
    https://github.com/elastic/elasticsearch/commit/7b781bc889e45a8d75a1ef425ae895930fdf0f7d

commit bef9f47bc8c244b4ef11f2ef876b7ba266228448
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri Sep 4 12:27:12 2020 +0200

    Improve error message on repository creation failures
    
    This adds detailed information to possible errors on repository
    creation to give better insights in the root cause of the error.

commit 5fcb99af659368920a6cd2d985b12e6350f2f82c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 7 16:26:20 2020 +0200

    bp: Remove transport name from tcp channel
    
    https://github.com/elastic/elasticsearch/commit/9026c91a840bf6eafd17b751084c1ba510fd4d42

commit 0f44381a4593118041717d7748a2a62c843181a0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 7 16:10:02 2020 +0200

    bp: Optimize Bulk Message Parsing and Message Length Parsing
    
    https://github.com/elastic/elasticsearch/commit/0619e6e9a22c655b8cc3aeb5e14fe9a40a066aab

commit b6cacfd752e48e9087d3b5ad6b2272c87bd373e1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 7 15:58:58 2020 +0200

    bp: Fix potential race during TcpTransport close
    
    https://github.com/elastic/elasticsearch/commit/3d090879c6a3291dadf7cf9a2ffdbc90def2e239

commit dfe8f438eab22395b0e007ce77cbf15829f5f1ca
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 7 15:30:02 2020 +0200

    bp: Extract message serialization from `TcpTransport`
    
    https://github.com/elastic/elasticsearch/commit/21838d73b5f26490967d0db3d6667a701de6387a

commit 3e0f9477e35c05da011cb382bdf3f1c750daf547
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 7 10:28:11 2020 +0200

    bp: Add version to handshake requests
    
    https://github.com/elastic/elasticsearch/commit/797f985067ea711ee2c3a0120347421af592eac4

commit 1da4068a96b2913ecd5493b7cdd718ad0830b430
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 7 10:11:58 2020 +0200

    bp: Make `TcpTransport#openConnection` fully async
    
    https://github.com/elastic/elasticsearch/commit/ea7ea51050d38b55be5827b241da2f9acea3486c

commit ae507cc46432064a019e3dc56b5a44d402d1d3b8
Author: marregui <miguel.arregui@gmail.com>
Date:   Thu Aug 20 12:07:52 2020 +0200

    Add scalar function pg_get_function_result(OID)
    
    Users can 'select function pg_get_function_result(OID)' to retrieve the text
    representation of the return data type of the function refered to by the OID.
    All system and user defined functions' OIDs will return text, the rest null.

commit 91eab4079418606c6800b03f9b438adabb1cb7f4
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Sep 7 10:21:24 2020 +0200

    Make TaskMissing an ElasticSearchException

commit bd895a3ec825d076b073afdeda1387da2ac2e594
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri Sep 4 12:57:11 2020 +0200

    Match all Exception types in KillIntegrationTest to fix flakiness

commit 952e051489b8458017f67b061f6e97a38f561801
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 4 09:54:57 2020 +0200

    Fix usage of quoted subscript expr as an alias
    
    Due to the recently added support for quoted subscript expressions,
    column aliases containing a valid quoted subscript expressions are now
    also expanded. When used with sub-selects the expanded alias won’t match
    the column string alias output exposed by the sub-relation.
    
    This commits adds a fallback to collapse already expanded column idents
    if no output on the sub-relation with an expanded column ident can be found.
    
    Example query:
    
    ```
    SELECT “_”.“my_col[‘x’]” from (
      SELECT “my_col[‘x’]” AS “my_col[‘x’]” FROM my_table
    ) AS _;
    ```
    
    Follow up of e95045b2a64bfe6be51c426c65f5e13761227909.

commit ad104e7fb42a5968978fa3d030bbb1b6b7432453
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 3 18:26:10 2020 +0200

    bp: Make keepalive pings bidirectional and optimizable
    
    https://github.com/elastic/elasticsearch/commit/c305f9dc03eb089e3f7dc16cd4e3ddd546222360

commit d5d5734d7c4bc28b7277d71c6d57ce31762e5b2a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 3 17:57:07 2020 +0200

    bp: Improve MockTcpTransport memory usage
    
    https://github.com/elastic/elasticsearch/commit/ba478827ad29d25fc5f6623aa1ad86be81cc678f

commit 418f7a7f7b4af420582e25428aaaa53eb508b3c8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 3 17:13:03 2020 +0200

    bp: Open node connections asynchronously
    
    https://github.com/elastic/elasticsearch/commit/f395b1eace8297aeef16648473a7e7f3500b671e

commit 40ab81f856a9282520b3c2c3d55d45ecdd0265d0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 3 17:39:53 2020 +0200

    bp: Introduce http and tcp server channels
    
    https://github.com/elastic/elasticsearch/commit/9ab1325953b30fb3d881e9c27b2afdd3274322b6

commit e483a8dc605e25ca8ca343db6c8fbabe0a93a030
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 3 16:32:19 2020 +0200

    bp: Introduce `TransportLogger` for common logging
    
    https://github.com/elastic/elasticsearch/commit/b697f485bb4815b231f4accb5725fdc237214aef
    
    Opposed to the commit title this doesn't add the `TransportLogger`. We
    had removed the `ESLoggingHandler` component that was used previously
    and default to the netty LoggingHandler.
    
    But this pulls in changes to the TcpTransport and some Netty4 classes
    which are important for subsequent patches.

commit f15b0c215192e86dcf9ecb1645ef8601613039ba
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 3 16:01:41 2020 +0200

    bp: Create nio-transport plugin for NioTransport
    
    https://github.com/elastic/elasticsearch/commit/38701fb6ee9bf9318ccb459698fc3b54ec4fbcbc
    
    This isn't adding the nio-transport stuff, but instead focuses on the
    changes to the TcpChannel and TcpTransport because subsequent patches
    build on it.

commit 0668d2b7eb36c7a30c3b4a79dbdf29f7f1de6318
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 3 15:32:39 2020 +0200

    bp: Use single netty event loop group for transports
    
    https://github.com/elastic/elasticsearch/commit/0166388d7427643d565dc0e0af9a8cc58c804b24

commit 5e749024b0467801cba8d0c46ec3e707240247dd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 3 14:34:35 2020 +0200

    bp: Remove `TcpChannel#setSoLinger` method
    
    https://github.com/elastic/elasticsearch/commit/cc1fa799c821d7c7b2a22c0f23c0fdaafbcd5cff

commit 1757faaee92d315d0b2b1c2a0dd88ba4e0525522
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 3 13:46:19 2020 +0200

    bp: Unify http channels and exception handling
    
    https://github.com/elastic/elasticsearch/commit/529e704b1162a232e9714ea49d13e8597f8578ba
    
    This only ports parts of the changes because we aren't introducing the
    NioTransport parts and therefore don't need the same kind of
    abstractions.
    
    We also removed a lot of the HTTP related functionality because we do
    not have pluggable Rest handlers.

commit ec48e857b7fb043a7c166eb62422377e67af2e14
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Sep 3 17:08:35 2020 +0200

    Return non-null ordinal_position for object sub-cols
    
    `NULL` values for `information_schema.columns.ordinal_position` causes
    errors on some clients which are using this information.
    See e.g https://github.com/crate/crate/issues/10148.
    
    This commit will return an incremented counter for the ordinal position
    of each sub-column to fix the `NULL` issues.
    This requires us to adjust the stores ordinal position of existing
    top-level columns if they are defined after any column of type `object`.
    
    The same applies for `pg_catalog.pg_attribute.attnum` which also returned
    `NULL`  values for sub-columns before.
    
    Relates #10148.

commit e2daf565edceb4acf6d5b298de92716747ceba4b
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Sep 3 09:44:14 2020 +0200

    Remove obsolete ALLOW_QUOTED_SUBSCRIPT session option
    
    Quoted subscript expressions are always support now. Also this setting
    was never exposed.

commit e95045b2a64bfe6be51c426c65f5e13761227909
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Sep 3 09:26:01 2020 +0200

    Always allow and support quoted subscript expressions
    
    Add full support for quoted subscript expressions by default.
    Partial quoted subscript expressions will work as well.
    
    This adds out-of-the-box support for various clients which do not know
    CrateDB’s special subscript expression (and also don’t make use of the
    server-side `quote_ident` function) and thus always quote the full
    qualified column name.
    Inner columns (schema) of object data types are exposed by system
    informational tables at ``information_schema``, ``sys`` and ``pg_catalog``
    schemas and thus used by clients.
    
    Relates #10163.

commit a126c7a93118743aff4b45fd3d24a3d4d941f9c6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 3 10:45:17 2020 +0200

    bp: Ignore translog retention policy if soft-deletes enabled
    
    https://github.com/elastic/elasticsearch/commit/b0d346fd7421bf9c470b8cda56f134b10e726d33

commit f43b3d5e4c8fb3fbca685be36c861e4ba8d842dd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 3 10:27:36 2020 +0200

    bp: Set start of the week to Monday for root locale
    
    https://github.com/elastic/elasticsearch/commit/8d1ea8651976c40100df65cd58f26cb00325de96

commit 762074836b43dfd1ae585a50f5eef39451b0dec4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 3 09:40:10 2020 +0200

    bp: Only retain reasonable history for peer recoveries
    
    https://github.com/elastic/elasticsearch/commit/fd4acb3e8b7cc88a10ae5c922a62cea719b1c701
    
    Some of the changes - especially in CombinedDeletionPolicy - were
    already applied as part of https://github.com/crate/crate/commit/dfed1ca79cde0ecfb79e0aa16eca41bf597bfe19
    
    There we also already pulled in pieces of
    https://github.com/elastic/elasticsearch/commit/71a6873e8928f882bd06122f421a586fa6b85f09
    which is why our CombinedDeletionPolicy differs

commit 6dd06bbc8f38903b813429a89e332da0cf490816
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 2 16:55:54 2020 +0200

    bp: Call afterWriteOperation after trim translog in peer recovery
    
    https://github.com/elastic/elasticsearch/commit/c26f850c4434621fd385b55e90d57270df30e54b

commit 9806a3d4876bbeef6cb57e4cb31132b995c5aa19
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 2 16:54:31 2020 +0200

    bp: Remove assertion after locally recover replica
    
    https://github.com/elastic/elasticsearch/commit/6bb6927151ca7627837e5978e63694507244f3ff

commit 45de31aeeafa0b68ea094acc34e0583741b761d5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 2 16:47:36 2020 +0200

    bp: Trim local translog in peer recovery
    
    https://github.com/elastic/elasticsearch/commit/302d29c87059658f776fb9c22bc76362bd46d0a0

commit 9d5485c48ac84d692fa37a028da753ccfe0dc5b9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 2 16:35:23 2020 +0200

    bp: Remove fileBasedRecovery flag
    
    https://github.com/elastic/elasticsearch/commit/6215f98fa68aedbd8f0be10e0064afb45c970e90

commit 0cd882baeb7042f78b56ff9bd3daf120f808df18
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Sep 3 10:21:18 2020 +0200

    Map UserDefinedFunctionUnknownException to PG 42883 error
    
    This changes the error code for the psql protocol from XX000 internal_error
    when a user defined function is missing to 42883 undefined_function.

commit 378903610b635d044cfef59b94ba122d8a061856
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 31 16:00:37 2020 +0200

    bp: Use index for peer recovery instead of translog
    
    https://github.com/elastic/elasticsearch/commit/01287eacb2f2d2673bc25078fb0b76d81beaad9b

commit 92f0909cf182da8fb560af142ad05492bc04bc2c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 31 16:34:43 2020 +0200

    bp: Rename retention lease setting
    
    https://github.com/elastic/elasticsearch/commit/48bdb05dd8a796c38087fc4195f870930c834ad9

commit d1269db7ee11901c3cb58cfa2c8c2c561c059b14
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 2 14:54:11 2020 +0200

    bp: Combine the execution of an exclusive replica operation with primary term update
    
    https://github.com/elastic/elasticsearch/commit/5d684ca47351b54f1ebb2ac5b732d894127ec4bc

commit 9eecfef3114d0b2d291547aec9821b71abf370c1
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Sep 2 14:33:08 2020 +0200

    Map AmbiguousColumnAliasException to PG 42P09 error code
    
    This changes the error code for the psql protocol when a column
    alias is ambiguous from XX000 internal_error to 42P09
    ambiguous_alias.

commit 88d91947d067e2c40d141a4c6b5d41716116944a
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Sep 2 11:14:39 2020 +0200

    Map InvalidSchemaNameException to PG 3F000 error code
    
    This changes the error code for the psql protocol when a schema name
    is invalid from `XX000` `internal_error` to `3F000` `invalid_schema_name`.

commit c332acf4cfc6133adc31186bb15713805f1d4126
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 2 14:59:51 2020 +0200

    Update checkstyle to 8.36
    
    Will allow us to use Java 14 switch/yield expressions
    
    https://checkstyle.org/releasenotes.html#Release_8.36

commit a2db39494ba60bdf88a172eea760982f90ea8fea
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Sep 2 14:45:11 2020 +0200

    Make JobKilledException serializable
    
    This makes JobKilledException extending ElasticsearchException to make it fully
    serializable and streamable across nodes, to make sure it will never be wrapped
    in a NotSerializableExceptionWrapper to fix the flaky KillIntegrationTest.

commit c3255097acc03d3cef5eb0f98c87c06569bf921a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 2 07:29:28 2020 +0200

    Fix primary key lookup with parameter placeholders requiring casts
    
    https://github.com/crate/crate/commit/23dedb0e45f7726e3e23bf662bd17f8fc84fe843
    fixed a case with the boolean type, but broke the handling when using
    parameter symbols that require a cast.
    
    A query like `ts = ?` where the user provides `2017-06-21` for `?`
    used `2017-06-21` as literal value for the `_id` computation instead
    of converting `2017-06-21` to a timestamp first.

commit b1cf5ee80360fca0d8cb2232382082beba6176d1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 2 11:17:00 2020 +0200

    Improve assertion errors for SQLError codes
    
    The use of `anyOf` messes up the assertion error output.
    
    Previously it would output something like this:
    
        Expected: ((an instance of org.postgresql.util.PSQLException and error message a string containing "Cannot cast" and error status <INTERNAL_ERROR>) or (error message a string containing "Cannot cast" and http error code <4003> and http response <400 Bad Request>))
        but: was <io.crate.exceptions.SQLParseException: Cannot cast value `{created=true, size=127}` to type `object`>
    
    That's confusing because the message part actually matches, but one of
    the error codes did not.
    
    This changes the message to something like this:
    
        Expected: a string containing "Cannot cast" and pgErrorStatus=<INTERNAL_ERROR> and httpResponseStatus=<400 Bad Request> and errorCode=<4003>
             but: http error code <4003> http error code was <4000>

commit 8060b847ce471889e5c527eb50c72b7577563c95
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 2 10:18:17 2020 +0200

    Move error mapping for clients closer to the border
    
    Reduces the number of places where we pre-process a exception before it
    is send to a client.

commit 830d18d1ba73715ac15f6e010f13b7955e2e8b5b
Author: Daisy T <daisyts@gmx.com>
Date:   Tue Sep 1 22:39:49 2020 +0200

    simplify bash script to make more readable

commit 06e246bb55d15b31e37aa14696fee12ce383c1d1
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Sep 1 11:51:40 2020 +0200

    Remove uneeded imports from JoinIntegrationTest

commit b48984906cb5fe7283cf2a872a3edab2e93f3538
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 1 11:12:09 2020 +0200

    bp: SNAPSHOTS: Allow Parallel Restore Operations
    
    https://github.com/elastic/elasticsearch/commit/c5b3ac557857da9d8571e4fdcb8eaf6d4a7b7b11

commit 55926fcb65ad5565eb77acef797d2ef8d1f75896
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 1 10:15:04 2020 +0200

    bp: Peer recovery should flush at the end
    
    https://github.com/elastic/elasticsearch/commit/75be2a669e1e7e38cfc0e7b55bf99c792fb8925f

commit 0254f98c9c4187d813c2a2b15cab46e2630d8e97
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 1 09:57:46 2020 +0200

    bp: Make ChannelActionListener a top-level class
    
    https://github.com/elastic/elasticsearch/commit/780b4c72fe90c83ce08b7c5b96f70e91f53b1f73
    
    We added it in 6a7dcb53e25b0f3ffb20ee8ed09bfe545fdce2f7

commit 9fd21a192ed6ac0685f8604ee44af3f682887e9c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 31 16:56:12 2020 +0200

    Update Lucene to 8.6.2
    
    Release page for 8.6.2 is not up yet, but it fixes a memory leak:
    
    https://issues.apache.org/jira/browse/LUCENE-9478
    
    And changes for 8.6.1:
    
    https://lucene.apache.org/core/8_6_1/changes/Changes.html

commit 389c2f78693d88f718133596850e612523ef8942
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Aug 31 11:46:19 2020 +0200

    Map AmbiguousColumnException to PG 42702 ambiguous_column error code
    
    This changes the error code for the psql protocol when a column
     reference is ambiguous from `XX000` `internal_error` to `42702`
    `ambiguous_column`.

commit 416d55c050f7f8c71fb5d3a55ff9d5a0afc36336
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 31 12:09:30 2020 +0200

    bp: Make peer recovery send file chunks async
    
    https://github.com/elastic/elasticsearch/commit/34f65c603fb1fce213f37ecc7a5f2ea30e848d58

commit 91fb2a94dfe57d8b7b2f80f4d755c605df1c58f1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 31 14:15:19 2020 +0200

    bp: Ensure sendBatch not called recursively
    
    https://github.com/elastic/elasticsearch/commit/0ada3e242bfe95d6bee99ce34b869a25162753cf

commit 9d9004cafbd2c84039036d25604b5beb2265df9a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 31 11:01:10 2020 +0200

    bp: Make peer recovery send file info step async
    
    https://github.com/elastic/elasticsearch/commit/562d7980ff8fe14e56bf8ee82d92f39fd26dd5de
    
    Not listed in the backports file, but will be required for
    
      01287eacb2f Use index for peer recovery instead of translog

commit 939261cb04c31dc6df986e9d1a43ea57b93307d0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 31 10:49:32 2020 +0200

    Bump backport reference commit

commit 6a7dcb53e25b0f3ffb20ee8ed09bfe545fdce2f7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 31 10:17:05 2020 +0200

    bp: Make peer recovery clean files step async
    
    https://github.com/elastic/elasticsearch/commit/a452fffde5147d55286db8ea572319510fa42ddf
    
    This is an older change that is required for subsequent patches

commit fba5b0f107d0d6c5b2da352d340eb2509ac2d66f
Author: Daisy T <daisyts@gmx.com>
Date:   Thu Aug 27 13:39:37 2020 +0200

    fleshed out instructions for writing documentation

commit 69fd858be2be907dd0e2ea3b04367e96850af427
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Aug 31 09:14:04 2020 +0200

    Map RelationAlreadyExists to PG 42P07 duplicate_table error code
    
    This changes the error code for the psql protocol when a relation
    exists already from `XX000` `internal_error` to `42P07`
    `duplicate_table`.

commit e18ac792d9a0adda2a3a7706133c431e3deb1062
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 28 17:28:13 2020 +0200

    bp: Always use primary term of operation in InternalEngine
    
    https://github.com/elastic/elasticsearch/commit/48d31194c25e2adb2f3fc4db3769f02faed0023a

commit 5a8cbcb7b1fb9f9438f3daa995fcfc22139daa2c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 28 17:19:41 2020 +0200

    bp: Use IndicesModule named writables in elasticsearch-shard tool
    
    https://github.com/elastic/elasticsearch/commit/0a6adceaa36f758afd5a24a7d764ec32f9bd6d4d

commit 9a25b0451a46b58b910cc5d41838f2cb49c78004
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 28 17:15:49 2020 +0200

    bp: Cleanup Various Action- Listener and Runnable Usages
    
    https://github.com/elastic/elasticsearch/commit/192845be8df9879c5afb2def898a696f04a72493

commit f82c5eef6342d1b60bef8a094d8dab3fcb58aff5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 28 16:39:33 2020 +0200

    bp: Remove leniency during replay translog in peer recovery
    
    https://github.com/elastic/elasticsearch/commit/0b9b91a63c1d1a4f6ebb3f755af478fbbd48461b

commit 4b6304c1a86703c2ac15c9ae18b7d3c2ad766bda
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 28 16:05:09 2020 +0200

    bp: Remove leniency in reset engine from translog
    
    https://github.com/elastic/elasticsearch/commit/c9049cfca146f3e3bb147c4e9cb86c0c0cf57b21

commit a53bfcfdc573d28154f4e5c9718c7092026816f9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 28 15:54:15 2020 +0200

    bp: Remove wait for cluster state step in peer recovery
    
    This is an older change that we missed.
    
    https://github.com/elastic/elasticsearch/commit/35340aaf83a720684457c0ed3f592808c54d1004

commit 54b35075b27b6f21db5e3d18f825e16b19cf547d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 28 15:44:21 2020 +0200

    bp: Cleanup Deadcode o.e.indices
    
    https://github.com/crate/crate/blob/a63fc2b45e1417f58bb793ac56addf711b75a6ab/devs/docs/es-backports.rst

commit d2b803448589b788bf4674cd907fcd9fc6acf718
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 28 15:20:44 2020 +0200

    bp: Remove type parameter from ParserContext
    
    https://github.com/elastic/elasticsearch/commit/06d89121f63a21720e34b752f3b46f9df67ec7fb

commit 31756adcff9bc23259833530c7ad42aae4feffb7
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Aug 31 08:51:03 2020 +0200

    Map ColumnUnknownException to PG 42703 undefined_column error code
    
    This changes the error code for the psql protocol when a column
    does not exist from XX000 internal_error to 42703 undefined_column..

commit b2cf64ab6148910bde5a95e9ff20d35865451713
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Aug 28 16:36:46 2020 +0200

    Fix sys.health.health state for partitions
    
    Use the `number_of_shards` setting of a partition instead of the
    partitioned table.
    They could differ through the possibility of changing only the shards for
    future partitions.
    If the value for the table is greater then the value of the
    partition itself, using the tables value will result in missing shards
    and thus a `RED` health.

commit be7ce4ecb49aa0f01c28b36bd142907a2eed1a70
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Aug 28 17:26:41 2020 +0200

    Fix value of sys.health.partition_ident
    
    As documented, a NULL should be returned instead of an empty string
    for non-partitioned tables.

commit a933d4710b386af0cbd5badb06f0c9d93450a6c1
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri Aug 28 15:31:16 2020 +0200

    Map RelationUnknown to PG 42P01 undefined_table error code
    
    This changes the error code for the psql protocol when a relation
    does not exist from XX000 internal_error to 42P01 undefined_table.

commit efe88709f51a231631b839570bb600718ff54426
Author: Daisy T <daisyts@gmx.com>
Date:   Thu Aug 27 15:08:15 2020 +0200

    change sitemap name to site.xml

commit d0c449ec6173f108e210716db729e711292f775d
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri Aug 28 11:33:35 2020 +0200

    Map DuplicateKeyException to PG 23505 UNIQUE_VIOLATION error
    
    This changes the error code for the psql protocol when a document
    exists already from XX000 internal_error to 23505 unique_violation.

commit 98177e60496fbf17a0d6d7e1eb89d8cfae0168d9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 28 11:41:59 2020 +0200

    Throw TranslogCorruptedException in more cases
    
    https://github.com/elastic/elasticsearch/commit/c251450a2fec134084992a0ed4a288bada1e8c3e

commit e46898371719adb9da237ddf54ed24b37e6a4221
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 28 11:21:07 2020 +0200

    bp: Exposed engine must have all ops below gcp during rollback
    
    This is an older change that we missed.
    
    https://github.com/elastic/elasticsearch/commit/902d6f579aff968d8f8426f1e6855ca1d9fb3a05

commit a2aa76dba779bfd060891e5c3e01278d6adbc39d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 28 11:08:33 2020 +0200

    bp: Some Cleanup in o.e.i.shard
    
    https://github.com/elastic/elasticsearch/commit/b842ea8a8ae70edeb35ce0434dd5686eae673708

commit 6af8b294ee7772aa403c22cff978e10a70eac28a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 28 09:57:04 2020 +0200

    bp: Enable indexing optimization using sequence numbers on replicas
    
    https://github.com/elastic/elasticsearch/commit/688cf832fe14400ec01fa1fe5d3319e24a198f73

commit bf4bbe3026c3fab5a30578e23824efa227878cb3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 27 18:46:46 2020 +0200

    bp: Improve RetentionLease(Bgrd)SyncAction#toString()
    
    https://github.com/elastic/elasticsearch/commit/819abe952332c65d1e36a29c0d9d81fb04ec6107

commit e335f059b8176da2d52ae4f8f69422a1f3b00b20
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 27 18:41:24 2020 +0200

    bp: Refresh translog stats after translog trimming in NoOpEngine
    
    https://github.com/elastic/elasticsearch/commit/d87c9fdae44c2a390908d49fa9e4f0e570142864

commit d6032a0cd3bf0ab000ed5b3a6be407d124d8efb0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 27 17:56:49 2020 +0200

    bp: Convert replication calls from action.execute to nodeclient
    
    https://github.com/elastic/elasticsearch/commit/d1c6fb865dd7109fdbe6c187ff6cb20acacb97f7

commit 275bc32d7ad5165afd27649de3b988340ed03cdf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 27 18:17:57 2020 +0200

    Rename read → newResponseInstance
    
    To match the name used in the ES components.
    Should reduce conflicts while backporting changes.

commit 6d3897bd7feb4f74b3341a7123cd35241e88ecb6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 27 17:39:11 2020 +0200

    bp: Remove sort by primary term when reading soft-deletes
    
    https://github.com/elastic/elasticsearch/commit/217b875e760813a82e4d412768a816577b256d71

commit 0d1214c9717a626a1cc543731131265970d0693e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 27 17:24:47 2020 +0200

    bp: Expose translog stats in ReadOnlyEngine
    
    https://github.com/elastic/elasticsearch/commit/03c2b27c191163a7f4dc0ccafbcafa71b5d5ee7b

commit 907a75f34694acdbfb1cd96946a10d4991012ee8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 27 16:35:53 2020 +0200

    bp: Rename Action to ActionType
    
    https://github.com/elastic/elasticsearch/commit/b33ffc1ae06035e934277f17c4b5d9851f607056

commit 6a5d31eadabf59ecee9c66b6a93e64389dff3cd7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 27 15:52:03 2020 +0200

    bp: Trim translog for closed indices
    
    https://github.com/elastic/elasticsearch/commit/c900795df87b9e196fa1339cc6ac223e602e1d00

commit 29732aee63895d31c79dc12ad6e2158382be4abb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 27 13:45:44 2020 +0200

    bp: Do not use MockInternalEngine in GatewayIndexStateIT
    
    https://github.com/elastic/elasticsearch/commit/6f5b3a6c71f498263b98b93614c98c2e6a73817f

commit b9a7b41f78123079fe2b5a966065e98d17d0662e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 27 10:42:37 2020 +0200

    Avoid create partitions requests if there are no partitions to create
    
    `createIndices` is always called, even for non-partitioned tables and it
    always made a request to the master node, even if there were no
    partitions to create.
    
    The `TransportCreatePartitionsAction` has a fast-path for the
    empty-indices case, but only on the "request-is-already-received" end.

commit 2f84724d4f83446f5d1ab09bead5b50f01e6b5fc
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Aug 27 11:10:31 2020 +0200

    Reflect 4.2.4 release.

commit 9d73635fb59345b5e729b02ba0a6a72c10ae05bd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 19 15:03:06 2020 +0200

    bp: Add support for replicating closed indices
    
    https://github.com/elastic/elasticsearch/commit/309a3e4ccbcdfcd830621a92d6e67af929123605

commit 4bc3c47c884e4764b4a6acbae032c5ba054dde97
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 19 14:21:22 2020 +0200

    bp: Periodically try to reassign unassigned persistent tasks
    
    https://github.com/elastic/elasticsearch/commit/13cb0fb98b12ca3e058382186f8175ab1db84717
    
    We removed persistent tasks. But this introduces the AbstractAsyncTask
    and is the basis of subsequent changes.
    
    Also contains parts of
    
    - https://github.com/elastic/elasticsearch/commit/68ed72b92395fdbc777cad9046a6be4d695b9cd4

commit 5e277ab787ed102d1df1402e9d6645aac6da7552
Author: Mika Naylor <mail@autophagy.io>
Date:   Thu Aug 27 11:13:03 2020 +0200

    Add RTD status check to mergify conditions

commit dff974ebbabb196e6e1bb9f551d7535c0cc594b8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 26 15:46:00 2020 +0200

    bp: [Close Index API] Add unique UUID to ClusterBlock
    
    https://github.com/elastic/elasticsearch/commit/e149b0852e206574faad54ab08f8a61827f73e8d
    
    Similar to 1b1ac958cf82c5d3539424ed5ad7db7ddffca944
    This is in preparation for https://github.com/crate/crate/pull/10404

commit 3a15f5e44fa9abf4b43f2aa7b68545aa74864764
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 13 20:51:04 2020 +0200

    Update jmh to 1.25

commit f41d67a767b1a83e506fe5718263108689ad1bac
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Aug 19 17:15:56 2020 +0200

    Clarify documentation of `ignored` object types
    
    Highlight that values of defined subcolumns are indeed validate/index,
    only new/unknown subcolumns aren’t.

commit 1b1ac958cf82c5d3539424ed5ad7db7ddffca944
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 21 13:17:01 2020 +0200

    Add new close table transport using 3 step close
    
    This adds a new dedicated close transport that is used if all nodes in a
    cluster are on 4.3. It uses multiple steps to close a table or
    partition.
    
    This is similar to the changes in
    
      https://github.com/elastic/elasticsearch/commit/8e5dd20efb667d272fac4b2a151f8c09f0284024
    
    This in preparation for
    
      https://github.com/crate/crate/pull/10404 / https://github.com/elastic/elasticsearch/commit/309a3e4ccbcdfcd830621a92d6e67af929123605
    
    This doesn't extend or modify the existing open/close transport because
    close now diverges further from the open logic and sharing logic between
    the two in a non-compositional way becomes less appealing.

commit edfd8106584a192b6e087158c5e5b56453ab459b
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed Aug 26 11:04:53 2020 +0200

    Prevent JDK plugin functional tests from downloading real JDK artifacts.

commit 41577f86d5a974e039abbfdcfe222faf456d35a7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 26 12:15:16 2020 +0200

    Integrate generated partition column expansion into Collect operator
    
    We at some point accidentally removed the logic to expand generated
    columns used in partitioned by columns. That prevented the partition
    narrowing optimization from kicking in for those cases.

commit 2ce806b1df2a37efe2d6d1e8c7847e4e6d44195c
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Aug 25 16:23:53 2020 +0200

    Migrate all crate tests in server module to assertThrows
    
    This migrates all crate related tests in the server module from
    ExpectedException to assertThrows.

commit 36a636394edbf8332b2e2cbb69aafe51f8226e65
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 24 17:52:50 2020 +0200

    Prevent column prune logic from duplicating outputs
    
    The prune logic extended the outputs, which led to a plan that had more
    outputs than expected.
    
    Fixes https://github.com/crate/crate/issues/10411

commit 3f2711710f6f3f32242e80fb4b020c783a3db57a
Author: marregui <miguel.arregui@gmail.com>
Date:   Tue Jul 21 09:54:58 2020 +0200

    Add scalar function pg_function_is_visible(OID)
    
    A function's OID is calculated as a hash over its schema, name, and argument type
    list. System functions are declared on startup, as the various modules are registered.
    User defined functions, UDF, are registered/deregistered dynamically CREATE/DROP FUNCTION
    statements respectively.
    
    Users can 'select function pg_function_is_visible(OID)' to check that the function
    refered to by the OID is visible. All system and UDF functions are visible.

commit 7ccc459e5b354a872fafe6082654cc36aec4e34c
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Aug 24 15:37:14 2020 +0200

    Make optimizer rule settings session local
    
    The optimizer rule settings were delcared globally. This makes
    the settings session local.

commit 76495a5077e89b8f35fa2bb296ef7a975f31743c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 24 11:54:56 2020 +0200

    Fix mixed cluster compatibility of MATCH predicates on geo shapes
    
    Fixes https://github.com/crate/crate/issues/10415

commit fcf6d6f1a103f35e8f6c8f4fc851e3bac71ff0ea
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Tue Aug 25 15:03:38 2020 +0200

    Mute JdkDownloadPluginFunctionalTest.
    
    Tests are fetching real JDK artifacts instead of using the fake once.

commit 5d8f2acb929d360436baa2179aec0dbf93670bb0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 24 10:57:30 2020 +0200

    Avoid creating unused tables in analyzer tests
    
    Reduces the overhead a bit and encourages test to define their own table
    schema if appropriate instead of trying to re-use an existing
    definition.

commit d3fe885e32d032cefd25e3056bd2e8a8dfbc1b08
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 21 16:03:34 2020 +0200

    Support using UDFs with array arguments in generated columns
    
    The schema of a `FunctionName` needs to be written into the generated
    column expression to be able to use UDFs,  otherwise it would lead to an
    error when attempting to build the `DocTableInfo` instances.
    
    This doesn't change the `STYLE` argument in the calls that format the
    generation expression, because it would also lead to reference names
    that include the schema, which is invalid.

commit 571c5c7ce4f2f4e7d98271a70136546fddc3308a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 21 15:34:10 2020 +0200

    Prevent the use of aggregations in generated columns

commit 16d034185475611449a84fe6777db832e1278275
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 21 15:15:32 2020 +0200

    Fix type generation for stubbed references in create table analyzer
    
    A generated column like `max(xs)` where `xs` is `integer[]` was
    incorrectly allowed because `xs` got typed as `integer` instead of as
    array.

commit 06c1130e9518ea94a4ccadd342d1ad49759dc004
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Aug 24 12:34:17 2020 +0200

    Migrate sql-parser tests to assertThrows.
    
    This migrates all tests in the sql-parser module from the soon to be deprecated
    ExpectedException to assertThrows.

commit 3e702ddfeeb4e7db4984485a7af7301eadf4c456
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Aug 21 10:02:03 2020 +0200

    Fix subscript col ident exposure in some system tables
    
    When exposing a full-qualified name, we always must use the
    `ColumnIdent.sqlFqn()` because the `ColumnIdent.fqn()`, which uses a
    dot-notation, is not supported by our SQL syntax.

commit 91658be2c3ec1c9b353862997aceacc75aedef1d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 21 14:18:17 2020 +0200

    Remove some call indirections from Functions

commit a9851dc660b3d4fa0a286b823c20e86afe9a496a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 21 09:02:07 2020 +0200

    Remove unused shippable config

commit 0ff2dd58c083873008f7c9b733fea4bd979002b4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 21 09:24:47 2020 +0200

    Add custom robots.txt for docs

commit 1f2a3199db4c40f1760ff9e7c2a1d4358a48d014
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed Aug 19 15:13:54 2020 +0200

    Account for memory usage in doc values aggregator implementations.

commit 58fd7d9db6853e5ce0f85b29533a612a078d1486
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed Aug 19 15:02:39 2020 +0200

    Extend DocValueAggregator methods with the RamAccounting parameter.
    
    Some aggregation functions, e.g. array_agg or collect_set,
    may require a significant amount of memory, therefore, we have to
    account it.

commit 073895699b6eced2514efc9e0fee97ca97ab4e3a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 19 13:51:39 2020 +0200

    bp: Avoid AssertionError when closing engine
    
    https://github.com/elastic/elasticsearch/commit/3a7ebb05d024c998e90296d747de28daab7a2118
    
    Adds only one more test case because the other changes were already
    applied.

commit d376482eece5e39e92e53a8ff3f3daa00942cd27
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 19 10:12:00 2020 +0200

    bp: Ensure relocation target still tracked when start handoff
    
    https://github.com/elastic/elasticsearch/commit/f83d8c2666710b64611ec766123af1707855bec9

commit 407662a60c08792319e58be7dc53b1df70c16841
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 19 09:50:23 2020 +0200

    bp: Sync global checkpoint on pending in-sync shards
    
    https://github.com/elastic/elasticsearch/commit/0cfc9ff77594a64737078ce6ffd4630a1a4253d5

commit 3c0fb1c41dcf3b9ab3bb4944a6761c18cfdecb1b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 19 09:42:16 2020 +0200

    bp: Add additional logging for #43034
    
    https://github.com/elastic/elasticsearch/commit/5e668ad3984229ced607c3a72b581c88249c5428

commit 0ab3daadc8c2f59f8edfff51f5785a7feced8d7e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 19 11:20:35 2020 +0200

    Fix serialization of DecomissionNodeRequest
    
    `writeTo` of `TransportRequest` writes the parent taskId, the `reader`
    for `DecomissionNodeRequest` used in the
    `TransportDecomissionNodeAction` never read the taskId but returned a
    singleton.
    
    This led to a error:
    
        IllegalStateException: Message not fully read (request) for requestId [135130976], action [internal:crate:sql/decommission/node], available [0]; resetting
    
    The blackbox tests never caught this issue because we always used the
    client connected to the node we wanted to decommission, so the
    serialization was never used.

commit d88fd3fa2baae996d51f460555952eedb4fe9907
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 19 10:51:35 2020 +0200

    Fix predicate evaluation for the sys.nodes table
    
    The values for columns only used in the `WHERE` clause and not in the
    select-list were not fetched from the remote node, so those predicates
    never resulted in a match.

commit 52d445333a12281290599f076bb69a885b073cc7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 18 17:02:05 2020 +0200

    bp: Advance checkpoints only after persisting ops
    
    https://github.com/elastic/elasticsearch/commit/f27e808c1457ddbda1c69b4422d9a10ee6ec299d
    
    This was already applied with https://github.com/crate/crate/commit/dfed1ca79cde0ecfb79e0aa16eca41bf597bfe19
    but there were still a couple of changes

commit 9a9675685220faa408ab2fdd196356beab35e355
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 18 16:07:52 2020 +0200

    bp: Do not use soft-deletes to resolve indexing strategy
    
    https://github.com/elastic/elasticsearch/commit/f47174f04a24a19bb0506301e130a6d41ab695cf
    
    Should also fix the flaky `testLookupSeqNoByIdInLucene` test case

commit 09d4c28c74820459f69b597ee6fde84f3a6478f9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 18 13:26:10 2020 +0200

    bp: Rebuild version map when opening internal engine
    
    https://github.com/elastic/elasticsearch/commit/bbc29bb0fd79f8aa124ba1765491cdb4d827c105
    
    The main changes were applied already in the following commit, but the
    test looked a bit different:
    
    https://github.com/crate/crate/commit/bb23cb7b200dbc9c6425fcc8a5bd35e253e15fb3

commit 97e52ee580625974b92b7b80bf65cec82f5c7259
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 18 11:44:42 2020 +0200

    bp: Account soft deletes in committed segments
    
    https://github.com/elastic/elasticsearch/commit/fdacbaf7f848fbd940e5c24ae17fcca960cf63b7

commit def434e602b112440c19c16466a1a6da4c2412f2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 18 11:32:28 2020 +0200

    bp: Also mmap terms index (`.tip`) files for hybridfs
    
    https://github.com/elastic/elasticsearch/commit/ef8f90cc2a59ffa50ca3e1c0266364fa97467493
    
    We already included `.tip`, so this only adds the test assertion

commit 0c7fadeb788f8ce0fc8e697f4aacf7f73ddeac31
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 18 11:18:30 2020 +0200

    bp: Remove usage of FileSwitchDirectory
    
    https://github.com/elastic/elasticsearch/commit/62620f286635d17054b696f3e16d713e181d229f
    
    Part of the changes were already applied since we had backported some of
    the off-heap changes earlier.

commit a2123a9df703f10f81b8198782db0509bb021938
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 18 10:59:22 2020 +0200

    bp: Fix assertion in ReadOnlyEngine
    
    https://github.com/elastic/elasticsearch/commit/8159fdfcc9aaaf34137db1a9047cb6977ea1f0c0

commit 063615d419622220f3be99322acb3b832742ab4d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 18 10:50:30 2020 +0200

    Bump backports commit reference

commit 98cbacfc7e1924dd2bec1e473ab8d968c0928ecc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 18 15:44:35 2020 +0200

    Expose blocks.read_only_allow_delete in information_schema tables
    
    Closes https://github.com/crate/crate/issues/10391

commit 6ae79b10a72fab711bb8baa135ef6af7218ab3ef
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Tue Aug 18 13:27:04 2020 +0200

    Reflect 4.2.3 release.

commit 8895420ba1a8f5596ceeaecc6adfa57ddf94cbdb
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Mon Aug 17 16:48:59 2020 +0200

    Add doc-values aggregators for the arbitrary aggregation.
    
    It improves the performance of the global standard deviation aggregations.
    See https://github.com/crate/crate/pull/10048 for more information.

commit 857a6fccc41f43c40069433b9d1842c963995f92
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 18 10:25:47 2020 +0200

    bp: Improve translog corruption detection
    
    https://github.com/elastic/elasticsearch/commit/ca5771c1f4aeb37ff133540927a8c770c46693c3

commit 3389de8873d24473a2a1d1b1446daf3ab6c40ced
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 18 10:11:37 2020 +0200

    bp: Add a merge policy that prunes ID postings for soft-deleted but retained documents
    
    https://github.com/elastic/elasticsearch/commit/ae96c16f88f23cb771632672fe42942e6fb12e6a
    
    Also includes a fix for the test:
    
    https://github.com/elastic/elasticsearch/commit/9f4e855ee82c8f4a3cc3bcb4f8f59f834957b2a4

commit 371fe0e138c6d32bc6ed173d49f35f13be8d5ed3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 18 09:45:14 2020 +0200

    Remove obsolete `isWithinMultiField` check
    
    See https://github.com/crate/crate/pull/10385/commits/0412817442fd370a2ecd2f4f7d4ca51552dfc494

commit 5d09828eb2ae38ca04f79311159471a36e13a8cc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 18 09:36:27 2020 +0200

    bp: Avoid loading retention leases while writing them
    
    https://github.com/elastic/elasticsearch/commit/1ef00e368b4c25bacd59a2598c60b510044da163

commit 0dda0e2ce5d9da81594351835b6bb9c170b132f9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 17 17:03:03 2020 +0200

    bp: Remove PRE_60_NODE_CHECKPOINT
    
    https://github.com/elastic/elasticsearch/commit/2c8440922f99e1ffc95487d2d3130168898d448b

commit e47196761a999ec65678dc8f483f0db160f34e94
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 17 16:45:32 2020 +0200

    bp: Add debug log for retention leases
    
    https://github.com/elastic/elasticsearch/commit/70b4f67747c1de0c25ce737e0232cbb106072046

commit c294543b16fe91d963d130314f8365bbc4b39a41
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 17 16:16:27 2020 +0200

    bp: Remove IndexStore and DirectoryService
    
    https://github.com/elastic/elasticsearch/commit/4b21100178cdc584193df32dc6b8e2e6fde902d2

commit 6fc833160832fe0ddcdf2141487f329fe6224d51
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 17 14:52:48 2020 +0200

    bp: Skip global checkpoint sync for closed indices
    
    https://github.com/elastic/elasticsearch/commit/57859413eaf1f59357eb6a9875ca0ae51a76bbb3

commit 61cac5e3e2c28a5cc47d08a7c1e702567e9c7439
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 17 14:47:50 2020 +0200

    bp: Estimate num history ops should always use translog
    
    https://github.com/elastic/elasticsearch/commit/c1aef4bd558a84bcab9f7cf485b72d6a5e5aa601

commit b83ac839b21c798be9878898d442b9c4d58bda44
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 17 14:39:56 2020 +0200

    bp: Execute actions under permit in primary mode only
    
    https://github.com/elastic/elasticsearch/commit/4b0f36d361e6dc108cb9a9978f0bd1b31016baf8

commit 12429214df1e1e39a64e83db552246bc3c91b237
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 17 14:27:51 2020 +0200

    bp: Force Refresh Listeners when Acquiring all Operation Permits
    
    https://github.com/elastic/elasticsearch/commit/4ac8fc6906a5441a1c7f0c0ffb0e5bf1f9769276

commit cfd7f45f2f679be9b11eb6964180ed61c4b7bde3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 17 11:51:29 2020 +0200

    Remove parseMultiField
    
    We never exposed the functionality

commit 8505952d8b24b235a0dd766b489cfd8c14d86cb2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 17 11:34:40 2020 +0200

    bp: Avoid unnecessary persistence of retention leases
    
    https://github.com/elastic/elasticsearch/commit/5f9c8ba46528032bfb0bb1058be682b88bbf4bd1

commit 4b31119e082de99d220294c3205d74202ba36f91
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 17 11:24:41 2020 +0200

    bp: Simplify handling of keyword field normalizers
    
    https://github.com/elastic/elasticsearch/commit/6d95386f0d4f5ac305976d2ed1771fa26a9130f0

commit fba3ba6cd198f68444b4cb40ba39b1db861f0613
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 17 11:18:23 2020 +0200

    bp: shouldRollGeneration should execute under read lock
    
    https://github.com/elastic/elasticsearch/commit/80f4846fdb1798b664b95f2388e0ce2696c28c4a

commit 253a99c33b43d071fc292eae3b217e133f1b057d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 17 11:08:01 2020 +0200

    bp: ReadOnlyEngine assertion fix
    
    https://github.com/elastic/elasticsearch/commit/873007dd3e7b1d111099f3bc361d7d1461a6dd62

commit 79eba3e1ccc944c51cae9cb64c212a7b14c3c0b4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 17 11:02:41 2020 +0200

    bp: Noop peer recoveries on closed index
    
    https://github.com/elastic/elasticsearch/commit/c7df2b82b94f2d9cc085e8255e9df6c8abf457b4

commit 193cbe695915a4f76cc70dd0ecf3b2057d9fe640
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 17 09:17:50 2020 +0200

    bp: Close and acquire commit during reset engine fix
    
    https://github.com/elastic/elasticsearch/commit/eda31b0ac00c952a52885902be59ac429b0ca81a
    
    This also applies missing bits from earlier commits and pulls in the
    ReadOnlyEngine:
    
    - https://github.com/elastic/elasticsearch/commit/918232a9c6219867d8e83919bf319b8a3bcfc4fe
    - https://github.com/elastic/elasticsearch/commit/902d6f579aff968d8f8426f1e6855ca1d9fb3a05
    - https://github.com/elastic/elasticsearch/commit/5166dd0a4c6b53560cb873dbda1f41099e1554fa
    
    And makes some additional changes because we have already applied these
    commits:
    
    - https://github.com/elastic/elasticsearch/commit/f27e808c1457ddbda1c69b4422d9a10ee6ec299d
    - https://github.com/elastic/elasticsearch/commit/73bfdc4066be080dc4cad1f0521bf6ea14cded93

commit 12eb79a3cebf62d827cb69fcdcb417c9ec179089
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 17 09:08:40 2020 +0200

    bp: Remove some usages of MapBuilder#immutableMap
    
    https://github.com/elastic/elasticsearch/commit/545e56d1d1187669c7da810a356cba9dcb04822c

commit 911f01c88f3daa28a22a8080be17cc1281f90c2a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 17 09:05:44 2020 +0200

    bp: Use Java 11 collections conveniences everywhere
    
    https://github.com/elastic/elasticsearch/commit/f48ddd53fd66cfef3032a17023cd9e2f88702af9

commit 2b65288ab4871c2ac8a45edf40d82808e7106a7b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 17 08:48:41 2020 +0200

    bp: Remove search analyzers from DocumentFieldMappers
    
    https://github.com/elastic/elasticsearch/commit/de222731f8ec17270a8139c2a18be0f7c02c24a7

commit 226dc3c8aa276129cca4554e921388d1690957a1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 17 08:26:00 2020 +0200

    bp: Recovery should not indefinitely retry on mapping error
    
    https://github.com/elastic/elasticsearch/commit/24e3145fd002064e79f54aa644212999640d3565

commit 0c86f03173e4bc601ac1533e945853b5b861ac0c
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Mon Aug 17 14:08:40 2020 +0200

    Unify mutable long, double and float state classes in aggregations.
    
    We used multiple private static nested classes in each aggregation
    functions to represent the aggregation state of some functions. e.g.
    sum, min, max, etc. The classes share the same logic, therefore, it
    makes sense to extract them into the `common` package and reuse across
    the above-mentioned functions.

commit d370c3c628bcaa67ee549ec2ff7e6f7361bfdeb1
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Fri Aug 14 17:07:47 2020 +0200

    Add numeric and binary doc values aggregator base classes.
    
    Some DocValueAggregators are pretty similar, therefore,
    it would make sense to introduce base classes get rid of
    boilerplate code.

commit 6f9c1c65c7403c465d4c181b79babf8459a5182e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 13 17:03:03 2020 +0200

    Activate idle shard refresh skipping / use awaitShardSearchActive
    
    Excludes the refresh interval from the default settings we set
    explicitly to activate the skip shard refresh if shard is "search idle"
    functionality and makes sure `awaitShardSearchActive` is used where
    appropriate.

commit e342c2d4bdab9c9cd9076eb697ba74f6d1e3f26e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 13 09:09:17 2020 +0200

    bp: Mark searcher as accessed in acquireSearcher
    
    https://github.com/elastic/elasticsearch/commit/55db0e267ff5b205f23aa003eb35013b3de17173
    
    Also includes:
    
    bp: Skip shard refreshes if shard is `search idle`
    
      https://github.com/elastic/elasticsearch/commit/f23ed6188db864b1ea1062e5d44bdf5654b2aa3c
    
    Because we had already applied
    
    - https://github.com/elastic/elasticsearch/commit/54cbf1a35f319bf6664076ed6f3e351fef505978
    - https://github.com/elastic/elasticsearch/commit/56edb5eb3a676bdae2178dd4fa5bb4d1063678b6
    
    The scheduledRefresh implementation looks a bit different

commit a5183ef996697ec1b43b89817eb8227e58e1962b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 14 15:54:24 2020 +0200

    Avoid wrapping errors in UnhandledServerException in ShardCollectSource
    
    UnhandledServerException is not registered for proper serialization and
    causes us to loose more specific exception information.
    
    This is also in preparation for
    https://github.com/crate/crate/pull/10373, which by-passed the wrapping
    due to the use of futures - which led to test failures because a
    `IllegalArgumentException` started being recognized in the error-code
    translation layer, leading to a bad-request error instead of
    internal-server-error.

commit 88d4b1d16eb33d3e6988ec4870679ee31eac0533
Author: Michael Kleen <michael.kleen@gmail.com>
Date:   Wed Aug 12 10:21:05 2020 +0200

    Introduce custom Error Handling for http and psql
    
    This introduces specific error handling for the http/psql client
    and removes SQLActionException internally and from the clients
    error message.

commit 7f0fc7b00180cc0cbe024c9b7d1e2bda71e6aa7e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 14 11:33:01 2020 +0200

    Mute testDistributedPushSelectWithFewAvailableThreadsShouldNeverGetStuck
    
    Same issue as with the other test, see
    
    https://github.com/crate/crate/issues/10326

commit ffff0a6a2f746b653abce620340748d155074ecb
Author: Daisy T <daisyts@gmx.com>
Date:   Tue Aug 4 16:15:52 2020 +0200

    update and clean up Editions page

commit 1ae537b291674d864c661298ddcbdd5d0c39a0ab
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 14 09:52:34 2020 +0200

    Use junit assertions in assertThrows
    
    I was wondering where a opentest4j error came from.
    This changes the newly introduced assertThrows to use the same
    verification mechanism we use everywhere else.

commit 6ef25903ef3ed1a744edc1f7e09ff6c82f94dfdf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 13 17:17:42 2020 +0200

    Replace Boolean return type with Void in JobSetup
    
    All methods always returned true. There is no need to distinguish
    between true/false (or have an unhandled `null`)

commit 459f9d12f0eb06fce98315ab4a32810ec58cc238
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 13 17:08:05 2020 +0200

    Remove process from ExecutionPhaseVisitor
    
    The method adds 1 useless level of indirection.
    Makes stepping through the code with the debugger more troublesome.

commit df71e7a729bbe300c6a65c87b30bd641f61d28d8
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Thu Aug 13 15:14:43 2020 +0200

    Add doc-values aggregator for the count(v) aggregation.
    
    It improves the performance of the global standard deviation aggregations.
    See https://github.com/crate/crate/pull/10048 for more information

commit b0c819f1820b4372260bee9726fcf770a8777bdf
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed Aug 12 11:28:43 2020 +0200

    Add doc-values aggregator for the geometric mean aggregation.
    
    It improves the performance of the global standard deviation aggregations.
    See https://github.com/crate/crate/pull/10048 for more information about the approach.

commit bbbb572b6e4c43f740907f257c91f0223a27893e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 13 10:45:20 2020 +0200

    Merge task prepare and start
    
    There is no benefit distinguishing between the two. The opposite is the
    case, it adds one more explicit state to reason about.
    
    Part of the motivation is to make the BatchIterator construction async.
    That should allow us to use `awaitShardSearchActive` from
    
      https://github.com/elastic/elasticsearch/commit/f23ed6188db864b1ea1062e5d44bdf5654b2aa3c

commit c71e8d43a038d521c4bdf650d266b4adaac50819
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 13 10:26:05 2020 +0200

    Don't manage inner tasks in a map, but keep original list
    
    Avoids some copy/allocation operations. The downside is that the Task
    instances are kept referenced until the last task finishes.
    
    Since most tasks are chained and operate as a lazy pipeline, most of
    them likely finishes at a similar time anyway.

commit c397854a3adf09b03878527913ec3ce68a3ffba7
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Tue Aug 11 16:32:53 2020 +0200

    Add doc-values aggregator for std deviation aggregation.
    
    It improves the performance of the global standard deviation aggregations.
    See https://github.com/crate/crate/pull/10048 for more information
    about the approach.

commit 2c3ebc987423a7b41a00b75ce52aa43606b61586
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Thu Aug 13 11:01:39 2020 +0200

    Configure executable of the JavaExec type tasks in jdkRuntime plugin.
    
    The executable property for each of the Gradle JavaExec type tasks was configured
    separately based on the `-DuseSystemJDK` flag. It was not convenient, such as it hard
    to keep track of all task that extends JavaExec and could also result in using the
    wrong executable for tasks that implicitly extend the JavaExec task type.
    See `enterprise:licensing` module, it uses the `application` plugin that has the run
    task that would use the system JDK and ignore `-DuseSystemJDK`. Therefore, it would be
    much better to configure the executable of all JavaExec type tasks in one place, e.g.
    the jdkRuntime plugin where we already configure JDK related properties for `JavaCompile`
    and `Test` type tasks.

commit ebe581839d47efd186db91aa21b7b09216d36ec4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 12 17:10:55 2020 +0200

    bp: Assert TransportReplicationActions acquire permits
    
    https://github.com/elastic/elasticsearch/commit/918232a9c6219867d8e83919bf319b8a3bcfc4fe

commit d9f8f3ce17d8c3ca449873abfc523e843b0443db
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 12 17:04:05 2020 +0200

    bp: Fix error applying `ignore_malformed` to boolean values
    
    https://github.com/elastic/elasticsearch/commit/c31a5b1138588846091252574b8a89c6570f8a6e

commit ae18e46b1adb0778538e48b1b1a742289512cad4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 12 17:00:37 2020 +0200

    bp: Clarify some ToXContent implementations behaviour

commit b381931bf940c042f7c952ca16f8e66c45ea11e8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 12 16:40:47 2020 +0200

    bp: Do not trim unsafe commits when open readonly engine
    
    https://github.com/elastic/elasticsearch/commit/3ec0cc5f8ed0567593bf1bc2352ff164c2de662e
    
    trimUnsafeCommits was already added in
    
      https://github.com/crate/crate/commit/dfed1ca79cde0ecfb79e0aa16eca41bf597bfe19
    
    to InternalEngine

commit 9579bb0d974826fa5564f7e87bec7b813d52c898
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 12 16:16:01 2020 +0200

    bp: Adjust init map size of user data of index commit
    
    https://github.com/elastic/elasticsearch/commit/6e3ea88afee092f50df5e1f2130ba7c35ac5060f
    
    Going to 9 instead of 8 because we already applied
    
      https://github.com/crate/crate/commit/92bfef80e468990561d0145a791bec4e7a0a305e

commit 9ac50a3aa85919341a1caf2a1d561d15741c2954
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 12 15:03:56 2020 +0200

    bp: Make Transport Shard Bulk Action Async
    
    https://github.com/elastic/elasticsearch/commit/5d26243aba226648e1bd2c327e0ac0cae4a4c14f

commit 5f3670bc6a4d528a5ab6ee94203eabec605ea5ee
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed Aug 12 16:01:47 2020 +0200

    Add assertHasDocValueAggregator assertion for aggregate functions.
    
    Add the assertion and tests for the aggegation functions that
    currently implement `DocValueAggregator`.

commit 6c6cb3528614da1cebe7365e7c7a9de1703ac375
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed Aug 12 14:19:45 2020 +0200

    Enable doc value aggregator support for the byte type.
    
    The avg, variance, sum, min and max function were missing
    doc values aggregator support for the byte data type.

commit c8655cad218ab7921e40fee95c644338aaee784a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 13 11:11:19 2020 +0200

    Remove Repeat from tests
    
    Was added by accident

commit cb7ad145a76311236eb8e81cbd5c3c8a72020bba
Author: Michael Kleen <michael.kleen@gmail.com>
Date:   Wed Aug 12 15:42:56 2020 +0200

    Fix flaky GroupByAggregateTest#testGroupByUnknownGroupByColumn test
    
    This adapts the flaky GroupByUnknownGroupByColumn test to its
    original behaviour checking only the error message and not
    the type of exception.

commit 4d206b306a8b92ff8339115917c53c02fc4f0bdc
Author: Michael Kleen <michael.kleen@gmail.com>
Date:   Thu Aug 13 09:58:26 2020 +0200

    Mute ConcurrentSeqNoVersioningIT#testSeqNoCASLinearizability
    
    This mutes ConcurrentSeqNoVersioningIT#testSeqNoCASLinearizability
    because it fails with the current state of master.

commit f217901dc1b140974f1484198d64f920cc0a1f63
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Wed Aug 12 16:19:31 2020 +0200

    Supress tech writing notifications for es-backports.rst

commit 8bd0de71a84ab01fe5a4a29ab61987ffd15a9bbf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 12 14:42:24 2020 +0200

    bp: Suppress lease background sync failures if stopping
    
    https://github.com/elastic/elasticsearch/commit/f92ebb2ff909d0083ae988e04ecd398d979e9210

commit 6afb42202d4afa72ac18d30117a4abcaef924f0f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 12 14:33:21 2020 +0200

    bp: Introduce Delegating ActionListener Wrappers
    
    Subset was already applied (delegateResponse)
    
    https://github.com/elastic/elasticsearch/commit/f49436dc25d68ce61a180672d3b4f497f3092eeb

commit d322423af00e03c914b61f46dcfa3e3ec4a0b3e6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 12 14:12:44 2020 +0200

    bp: Remove test-only customisation from TransReplAct
    
    https://github.com/elastic/elasticsearch/commit/ea84b96c8cb4f19c2569bb8f68d8f119ceed1a6b

commit 294a85218bc0048a8205053f90559d856ccb34e1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 12 11:37:38 2020 +0200

    bp: Init global checkpoint after copy commit in peer recovery
    
    https://github.com/elastic/elasticsearch/commit/b8a4c13e81e65e053f9149655c93abac84dd42bd
    
    This also applies
    
      https://github.com/elastic/elasticsearch/commit/afba8870bdfb6d5bc4be712994a1347800f0a2ab
    
    because we had already applied
    
      https://github.com/crate/crate/commit/dfed1ca79cde0ecfb79e0aa16eca41bf597bfe19
    
    as well

commit f2e2c6d6a27abe866a2a5167be59331d6b9120e7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 12 11:17:12 2020 +0200

    bp: Small refactorings to analysis components
    
    https://github.com/elastic/elasticsearch/commit/efe47cebe72490a0798a24a27e32de242e8d1862

commit 206ee29e167c3cb01695af77b1207d086177e871
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 12 11:05:15 2020 +0200

    bp: Inline TransportReplAction#registerRequestHandlers
    
    https://github.com/elastic/elasticsearch/commit/c29cebb04deed28f2fd9f92e449450bd55b6369d

commit 7b20b8efe2b610c53d0faf5c47dcb1f9fe977487
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 12 10:40:32 2020 +0200

    bp: Fix merging of text field mapper
    
    https://github.com/elastic/elasticsearch/commit/58515c302216f13346e142009da5e1e9b1337d71

commit 092eaf6fb6869f482917ee860e1103ae0059cf9c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 12 10:29:46 2020 +0200

    bp: No mapper service and index caches for replicated closed indices
    
    https://github.com/elastic/elasticsearch/commit/03394b862bd33a566eac1ed57b832abda7a149ce

commit 493fa2883b83bae4f131e24c151dd18f1c570f89
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 12 09:45:13 2020 +0200

    Mark multiple ES patches as skipped
    
    cca77c12687 Store Pending Deletions Fix
    
      Was a workaround, became obsolete with a later Lucene version, see
      https://github.com/elastic/elasticsearch/commit/97fd2ed75770bb747473f000ab8237a5b9c36b7d
    
    d193f299f5f Only run retention lease actions on active primary
    
      We didn't port the RetentionLeaseActions, as they're used in CCR.
    
    64a53e42cd1 Add  `use_field` option to intervals query
    
      Not applicable
    
    3af0c1746b3 Expose external refreshes through the stats API
    
      Expose via stats API is not applicable. We should expose this via
      sys.shards or JMX

commit e4f497c78e4367c066f502ea64c6ce63a480fb14
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 12 09:34:12 2020 +0200

    sp: Cascading primary failure lead to MSU too low
    
    https://github.com/elastic/elasticsearch/commit/df9f0f729fd47ad9585f7c80f863a5779ce2c5bf
    
    We have already applied
    
      https://github.com/crate/crate/commit/62ebfb00681194505cc7648cc966d98b90d63d1e
    
    which makes the patch obsolete

commit b76709fc170304ee2b1916d9067b440dbdde93b2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 12 09:29:01 2020 +0200

    bp: Reject illegal flush parameters
    
    https://github.com/elastic/elasticsearch/commit/fe03d24229a2152e6bdb704a215577ab3304e41a

commit 6f816eeb63d76e4e33f1b3c7be24eaae4de89f08
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 12 09:15:32 2020 +0200

    bp: Create retention leases file during recovery
    
    https://github.com/elastic/elasticsearch/commit/9bc332a080034deb09147bd203a3a73b28273e9d

commit 99dc344d65f45c7d64f4c51c88c58227d9f096d5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 12 08:54:25 2020 +0200

    bp: Fix not Recognizing Disabled Object Mapper
    
    https://github.com/elastic/elasticsearch/commit/cf3463cadc9c2fb609049312cfb8627feb506327

commit 15b004f5e89cc84662254f716501f80f8e8914a2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 12 08:42:00 2020 +0200

    bp: Avoid copying the field alias lookup structure unnecessarily
    
    https://github.com/elastic/elasticsearch/commit/8e5ba9a1e4fe6492839e11afee3fd94fcb10af0a

commit 18a16bb72359fab80694eafc06dadcf630777e47
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 12 08:40:12 2020 +0200

    bp: Log missing file exception when failing to read metadata snapshot
    
    https://github.com/elastic/elasticsearch/commit/fe405bd6d3fd3d3341cc07cdaec1ba8c53b702a2

commit fa688adb8776a307574ef956ca8c8b56157c56dd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 11 16:36:55 2020 +0200

    bp: Enforce retention leases require soft deletes
    
    https://github.com/elastic/elasticsearch/commit/695b20f01bc66d646281fd768526a8353598c760

commit 298901124e0bbf2087b94b53aceb7784cb65a3d7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 11 16:26:16 2020 +0200

    bp: Removed Unused Version Parameters in DocumentParser
    
    https://github.com/elastic/elasticsearch/commit/48addd1c4625745d39ed8b32bf745cca1c9c2ccf

commit ce2d34bb620b8e84dac422ea9f2cb0e8d2f16b1c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 11 16:17:04 2020 +0200

    bp: Move validation from FieldTypeLookup to MapperMergeValidator
    
    https://github.com/elastic/elasticsearch/commit/c94ebefbc67f342157ce9e7a8dd7a7fd9d07b409

commit 0d8a3c7452cee1c0a2713c33c04791a2e38ead9b
Author: Michael Kleen <michael.kleen@gmail.com>
Date:   Mon Aug 10 18:58:06 2020 +0200

    Remove ExpectedException from SQLTransportIntegrationTest
    
    ExpectedException is deprecated in junit 4.13 and is replaced with
    assertThrows.

commit b756e8b42ea3342f91a37e3ad97f2913ba25ea59
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 11 18:18:07 2020 +0200

    Update gradle to 6.6
    
    https://docs.gradle.org/6.6/release-notes.html

commit 6dafcf7f5dee8ebd873eb439d4a897b3c2a48a33
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 12 08:57:33 2020 +0200

    Mute testAcquirePrimaryAllOperationsPermits

commit 5a68fe2738d2938bf1a74753a77f5e7742c5b262
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Tue Aug 11 15:15:46 2020 +0200

    Use AdoptOpenJDK API instead of cdn.crate.io to fetch JDK.
    
    Currently, we are hosting AdoptOpenJDK builds on cdn.crate.io.
    That requires copying over JDKs to bundle them with CrateDB for
    each supported platform once the new version released. Also, recently
    we have encountered unreliable behaviour of our CDN while fetching JDKs
    by our testing infrastructure. Such as now AdoptOpenJDK provides the
    official API we can use it to fetch JDKs and avoid above-mentioned issues
    and inconveniences.

commit e82593a9079d1fcf47a989fa4b715b6ecb33b40c
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Tue Aug 11 14:49:45 2020 +0200

    Simplify jdk downloads via artifact transforms.
    
    See https://github.com/elastic/elasticsearch/pull/60713

commit 8b7b8d18a2309d3e11cc5551e2575f4fecbeae17
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 11 16:04:29 2020 +0200

    bp: Small simplifications to mapping validation
    
    https://github.com/elastic/elasticsearch/commit/cfbc24aa8acf9cc6ffdfc2a798aa5027c1ae54de

commit 71f1a1c0bc9aba60f4daf8b1c39310a2e63e5793
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 11 15:53:36 2020 +0200

    bp: Remove the `update_all_types` option.
    
    https://github.com/elastic/elasticsearch/commit/700d9ecc953fa30df0d12d086f0e9d9322446459

commit 589da5f1eea735b3627873912991e3e709ed1981
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 11 14:58:57 2020 +0200

    bp: Combine overriddenOps and skippedOps in translog
    
    https://github.com/elastic/elasticsearch/commit/da602dad0f8b59acd4f15705759a2b6ef27f903a

commit 689eb5748ba03865ad404642f7dda83911c443ba
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 11 14:50:41 2020 +0200

    sp: Add option to force load term dict into memory
    
      https://github.com/elastic/elasticsearch/commit/1617e3007c5646095507cbd13d7ca3cf2809b76e
    
    The setting introduced in the commit was meant as an escape hatch and
    got later removed in
    
      https://github.com/elastic/elasticsearch/commit/3ce7a37f1ff2ff4c24c97c60ce619f840ed1b7fb

commit d0a3cf6964317d330a4f40cc61c18489e446d0fd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 11 14:48:38 2020 +0200

    sp: Allow inclusion of unloaded segments in stats
    
    We currently don't have frozen indices and we removed the SegmentStats.
    
    If we wanted similar functionality, we'd have to expose it via
    `sys.segments`.
    
      https://github.com/elastic/elasticsearch/commit/73d4516ba78f23b796d80b89305ededd28e0ff77

commit 39fa93e224eaf19ff5f43bc39bf0310e610c5a4a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 11 10:17:25 2020 +0200

    bp: Introduce Mapping ActionListener
    
      https://github.com/elastic/elasticsearch/commit/28ca58d494edab132555529c49f570f22cc5b105

commit f2f5201433f94fa29932201294cff87b78d4d6f7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 11 14:38:49 2020 +0200

    bp: Do not mutate engine during planning step
    
    Most of this has already been applied.
    
      https://github.com/elastic/elasticsearch/commit/5d0813b09163fc4010bba5f2439c5f722500a23b
    
    We also already applied
    
      https://github.com/crate/crate/commit/dfed1ca79cde0ecfb79e0aa16eca41bf597bfe19
    
    which changes a couple of parts that were affected by the original patch

commit a853afd7f506226fcc924f01be8d47172ece5603
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 11 14:27:41 2020 +0200

    bp: Don't swallow exceptions in Store#close()
    
    https://github.com/elastic/elasticsearch/commit/6d88a062df320a1ffbc0cb881cd8373cc23949c9

commit 3348d37980ded6f211f9dddd8df34aac07ee5d09
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 11 09:33:30 2020 +0200

    bp: Never block on scheduled refresh if a refresh is running
    
    https://github.com/elastic/elasticsearch/commit/54cbf1a35f319bf6664076ed6f3e351fef505978
    
    Also marks the previous patch as applied, it was applied with
    
    https://github.com/crate/crate/commit/39f4b0baf08b5468c217f22c3b3aea130b7134be

commit 8c1252cb7738bbe325a489fd6e28545e4e485955
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 11 09:20:20 2020 +0200

    bp: Do not wait for advancement of checkpoint in recovery
    
    https://github.com/elastic/elasticsearch/commit/51e7a5fbfabb5186519c99e74fc2b82cfc37e1f7

commit b849fc745ec60942ada7324f5eea712f2d636835
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 11 09:14:18 2020 +0200

    bp: Ignore waitForActiveShards when syncing leases
    
    https://github.com/elastic/elasticsearch/commit/a9d16e1078405e7967681294f4fcc7a8bca8fd89

commit d8cf102a38482ed524c68c1d1d0ce11aff6061ac
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 11 09:02:05 2020 +0200

    sp: ReadOnlyEngine should update translog recovery state information
    
    We have no ReadOnlyEngine
    
    https://github.com/elastic/elasticsearch/commit/605e8023a926b23c2092975ea1bba74f5a1bebf5

commit 756d6979cc42d410d22a7d06eb6a0174b32fb430
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 11 08:59:32 2020 +0200

    sp: Add retention leases replication tests
    
    https://github.com/elastic/elasticsearch/commit/8d9b3918b6046579155e5f24d3a77dc2858a73c5
    
    The tests use ESIndexLevelReplicationTestCase which makes heavy use of
    IndexRequest and other components we removed.
    
    We should eventually add tests for the same scenarios using SQL specific
    functionality. But a 1:1 port probably doesn't make sense.

commit 0b7136f1910c05a2b3c0aa11b248e5be77a81890
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 10 15:08:49 2020 +0200

    bp: Allow retention lease operations under blocks
    
    https://github.com/elastic/elasticsearch/commit/92ef753b56d25215f19098cbce91553fcae74c64

commit 9bf30177f9f5370b28fd047b7ce12d6b8a1a0fe6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 10 14:03:17 2020 +0200

    bp: Introduce retention lease state file
    
    https://github.com/elastic/elasticsearch/commit/331ef9dc59270fce338e6e93e9d45dbdd7c93d03

commit c9574970438e98b078fa33d95becaddd301f487b
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Tue Aug 11 11:44:39 2020 +0200

    Revert removal of MatchQueryBuilder#newTermQuery.
    
    The regression was introduced with the update to Lucene 8.5.0,
    see https://github.com/crate/crate/pull/9795. Removing the
    `MatchQueryBuilder#newTermQuery` would prevent the creation of fuzzy
    full-text search queries.

commit f31134f2e4f7d8f33492a3de762b439b30d6585d
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Aug 11 09:02:42 2020 +0200

    bp: Use current term in initial leases in engine test
    
    https://github.com/elastic/elasticsearch/commit/ed73bb7b013cc3914feb25f5504eb1b6c3d35a46

commit ecf8a964dfa5ed1fd52db40b2713ff4048a49631
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 10 13:43:59 2020 +0200

    Remove unused MultiGeoPointValues

commit 01a4682eebe2da750e59cc34a6d7c0661ff37d8a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 10 13:28:33 2020 +0200

    bp: Include in log retention leases that failed to sync
    
    https://github.com/elastic/elasticsearch/commit/2c90534039e0838c94a9692988e78116cea3d31b

commit e4b228e7d11f4e19d45013be4b88efbed1cf0eb6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 10 13:26:34 2020 +0200

    bp: Add some logging related to retention lease syncing
    
    https://github.com/elastic/elasticsearch/commit/659e82b08b355b17572a54163d090c4fdd13c20e

commit 167b9cefb954fb25a32b0189ccc1914918ce5ca9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 10 13:19:00 2020 +0200

    bp: Enforce Completion Context Limit
    
    https://github.com/elastic/elasticsearch/commit/c1ab8218f117f18d4484667d98c4ba5b7b81880e
    
    Skipped the patch, we removed the CompletionFieldMapper

commit 51f06fff7cc472952f3ff47753399164b07eb90d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 10 11:23:05 2020 +0200

    bp: Don't close caches while there might still be in-flight requests
    
    https://github.com/elastic/elasticsearch/commit/580a71c2411ac4913a1ac60b3d9649353a08ae76

commit 3669e4c7b901e0873c7b87464cea48108869c08e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 10 11:10:34 2020 +0200

    bp: Integrate retention leases to recovery from remote
    
    Besides making exceptions public, this touches CCR so the patch is
    skipped
    
    https://github.com/elastic/elasticsearch/commit/2024e331974eddcef3288d548c09c346afb44e49

commit 550deb9d21e5e0a7844560e27a20d177a3a89a2e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 10 10:37:52 2020 +0200

    bp: Remove setting index.optimize_auto_generated_id
    
    https://github.com/elastic/elasticsearch/commit/5a58c9e16a4f00a2d0857401ec6efa4d643d03e7
    
    We had never exposed it anyways

commit a5ebf734128a847b7ded68f58c0d479319e4cfbb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 10 10:23:26 2020 +0200

    bp: Advance max_seq_no before add operation to Lucene
    
    https://github.com/elastic/elasticsearch/commit/5624eee282bb2a252e07dd6e30a9123aeb6bc681
    
    Subset of the changes was already applied

commit 8eac0d26fbcda97a8a8af23d5c4b13a115e93631
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 10 10:14:05 2020 +0200

    bp: Fix excessive increments in soft delete policy
    
    https://github.com/elastic/elasticsearch/commit/9631c1afdd4557502669304be2fdf98da69b94b9

commit 69025531fca13ac1d6b3dc7f50ae36b685724ae0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 10 10:06:05 2020 +0200

    Mark ES patches as skipped
    
    bp: Fix synchronization in LocalCheckpointTracker#contains
    https://github.com/elastic/elasticsearch/commit/90e6fb0a56a47b961820c9fa94099adbbf222f81
    
      Patch is skipped because we removed contains as it was unused
    
    bp: Adjust log and unmute testFailOverOnFollower
    https://github.com/elastic/elasticsearch/commit/d0035300d69ad895f52ccacb3f4ea717d039aaf5
    
      Affects CCR parts and our logging in IndexShard is already newer
    
    bp: Also mmap cfs files for hybridfs
    https://github.com/elastic/elasticsearch/commit/2ab88e21dcfeccfa1dd5ff734d1094d5de06f6b7
    
      We already included cfs

commit 26a8e1537db63917f27b36d643c0e285968609b5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 10 15:33:28 2020 +0200

    Merge CrateUnitTest into ESTestCase

commit f0f4e009689aa0b8a239d5d47768543aad83d495
Author: Michael Kleen <michael.kleen@gmail.com>
Date:   Thu Aug 6 17:24:06 2020 +0200

    Migrate tests with PSQLException/SQLActionException to assertThrows
    
    This migrates all unit tests handling PSQLException and
    SQLActionException using ExpectedException to assertThrows. This
    is useful because it declares all error codes explicitly and
    ExpectedException which is deprecated in junit 4.13 is not used
    anymore.

commit 4812c2c7b0efdcfea620e2234a0b3dd7eb761229
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 10 15:21:12 2020 +0200

    Mute testReplicaIgnoresOlderRetentionLeasesVersion
    
    See https://github.com/crate/crate/issues/10331

commit 60499551263d09522f90a3b88e6d62bd7b75420e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 10 11:26:49 2020 +0200

    Mute testAddOrRenewRetentionLease
    
    See https://github.com/crate/crate/issues/10328

commit 85c58c8d840a449a418fd12eac9e973bc5521349
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 6 14:20:56 2020 +0200

    bp: Introduce retention lease actions
    
    https://github.com/elastic/elasticsearch/commit/bbe990f86275ed6d696681afc636d940ddf49d26
    
    This only contains the `IndexShard` and `RecoverySourceHandler` changes,
    not the actual actions because they're "only" used for CCR in ES.

commit 13884fcdf999886c463c1a4a2a3ba565a0499a35
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 7 14:13:16 2020 +0200

    Expose retention leases in sys.shards

commit c17dea32a59346008b08321f21acd5838a02f097
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 7 13:13:12 2020 +0200

    bp: Expose retention leases in shard stats
    
    https://github.com/elastic/elasticsearch/commit/6500b0cbd78a0e3968ecb54a33b59a2325059ff9

commit d7bff7cb6c2ba32b18df7d85151fce2c8ee7adfb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 10 10:43:13 2020 +0200

    Mute testRegularSelectWithFewAvailableThreadsShouldNeverGetStuck
    
    See https://github.com/crate/crate/issues/10326

commit fa61c95d3402142cf4fd6f72696dc27d0c9bb643
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 6 15:35:00 2020 +0200

    bp: Core: Combine Action and GenericAction
    
    https://github.com/elastic/elasticsearch/commit/e67aa96c81f309ebedc1d529e255b48069b262d1

commit 0121fab389f2fac87a64af41dda5c1d7291d1988
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 6 14:41:34 2020 +0200

    bp: Core: Remove RequestBuilder from Action
    
    https://github.com/elastic/elasticsearch/commit/46e8d97813addd8c57fa54d2c700d26a171f2dbb

commit 36d8d163c7fe2618be78a6e091e1e51e8d145252
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 6 13:33:20 2020 +0200

    bp: Add dedicated retention lease exceptions
    
    https://github.com/elastic/elasticsearch/commit/0518ec9a67abc8dfca25f1b70014a1c0ca79dcf1

commit 643fe59c53c2994e77d320b2f174692fad32e336
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 6 11:48:26 2020 +0200

    bp: Enable removal of retention leases
    
    https://github.com/elastic/elasticsearch/commit/58a77167219810cc8692dd1be1576345f8b9ee71

commit 77280ed87f122f001f5788d8e6602dadda24be51
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 6 11:17:02 2020 +0200

    bp: Copy retention leases when trim unsafe commits
    
    https://github.com/elastic/elasticsearch/commit/33b2be5b98995a23d812617647a0f8c95da81591
    
    The test case is not included because it doesn't apply cleanly due to us
    already including a later patch and the test will be removed later on
    with https://github.com/elastic/elasticsearch/commit/331ef9dc59270fce338e6e93e9d45dbdd7c93d03

commit a93f4cfe3c0bfce320b579c34098bda0e16035bf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 6 11:01:52 2020 +0200

    bp: Recover retention leases during peer recovery
    
    https://github.com/elastic/elasticsearch/commit/79a45b47da618bd4529ef67051d6f74e2da721ce

commit 9b5d53ac8259d62bb659e6a6c05007493055664d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 6 10:33:51 2020 +0200

    bp: Bubble-up exceptions from scheduler
    
    https://github.com/elastic/elasticsearch/commit/20c66c5a057c06c56c446636dc684434ca6c08c1
    
    Most of the changes have already been applied as part of other backports
    at some point in the past.

commit 49ae4cba2866f2f4bfb4096e2704de27cd7464f0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 6 10:30:36 2020 +0200

    bp: Lift retention lease expiration to index shard
    
    https://github.com/elastic/elasticsearch/commit/b03d138122d61c9ee074b747ce040975e9e300b3

commit 356438dd6cc94e7e9da01344af81e29bd5f80cc0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 6 09:54:24 2020 +0200

    bp: Prevent CCR recovery from missing documents
    
    https://github.com/elastic/elasticsearch/commit/c2a8fe1f91e2cec7c930463f65987df4e4c094bf
    
    We don't have CCR, but this ensures later patches are easier to apply.

commit 6b1f46c4194f9b357f6a332b18b4b3fdbc86113d
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed Aug 5 16:45:55 2020 +0200

    Extend the aggregation functions test setup.
    
    With this change the aggregation functions will be tested for both
    cases with and without doc values (if doc values aggreagator exists
    for the tested function). The partial results of the aggregations are
    asserted to be equal.

commit c6350d39836870c56d6f381a31e3ec0ff50feaba
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed Jul 29 17:30:18 2020 +0200

    Add float doc-value and fix double doc-value aggregators in min and max.
    
    Float and double doc values are stored differently in Lucene,
    therefore, they require different approaches to read them, see
    `NumericUtils#sortableIntToFloat` and `NumericUtils#sortableLongToDouble`.
    Thus, we have to provide a dedicated `DocValueAggregator` implementation
    for the aggregation function that can accept an argument of the float (real)
    data type and as well fix the exisisting double doc value aggregator
    implementation.

commit 249fe2b2ea9e68f6321d989fc11d76f2d5634c5c
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed Jul 29 15:59:35 2020 +0200

    Add float doc-value aggregators for avg, sum, variance aggregarions.
    
    Float and double doc values are stored differently in Lucene,
    therefore, they require different approaches to read them, see
    `NumericUtils#sortableIntToFloat` and `NumericUtils#sortableLongToDouble`.
    Thus, we have to provide a dedicated `DocValueAggregator` implementation
    for the aggregation function that can accept an argument of the float (real)
    data type.

commit b6abb64c8f529d8b5769196d6739716c834b2923
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 6 08:44:03 2020 +0200

    bp: Introduce retention lease background sync
    
    https://github.com/elastic/elasticsearch/commit/625d37a26a5bf4eac2dc9a7dd3da9cd327f0571d

commit 68d6b23da92db2ddf658384a66a3f4093001a1b5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 5 17:21:36 2020 +0200

    bp: Add run under primary permit method
    
    https://github.com/elastic/elasticsearch/commit/43bfdd32eea161a9084d7b49b12261ea32a7983c

commit 29648450dd35c5d8a48b6242eeb454bcf41a6d23
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 3 15:04:48 2020 +0200

    bp: Expose all permits acquisition in IndexShard and TransportReplicationAction
    
    https://github.com/elastic/elasticsearch/commit/2e37f17a7d70b0f14532fdcd955a4f9ed9ad5bed
    (cherry picked from commit 22601eff788f677a728c513f4b48094bf8333139)

commit 3469e74684f508f3ff65b94768ada6f54717247f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 5 16:45:29 2020 +0200

    bp: Check blocks while having index shard permit in TransportReplicationAction
    
    https://github.com/elastic/elasticsearch/commit/31567cefb4dc46c146c65c58204af825b491b743

commit e418f475c60fb9b4ad2f4036fdb79d72e8b6877e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 6 08:24:56 2020 +0200

    Add release notes entry for implicit refresh removal for optimize
    
    Closes https://github.com/crate/crate/issues/10313
    See https://github.com/crate/crate/commit/a171a1b34299e816818ba8c3b13acb2d7c33e13c

commit fe3c5864cdc25aef8fefeb7191a3431835b71f53
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 5 13:56:24 2020 +0200

    Don't acquire searchers in prepare if FetchTask is done already

commit 079da7e0250b68894c7c3892f241701163e27ff8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 5 11:42:49 2020 +0200

    bp: Fix primary term in testAddOrRenewRetentionLease
    
    https://github.com/elastic/elasticsearch/pull/38239/commits/bfa2489cd032ce36e46f4ee4e01f52565188138c

commit a151860faa2b36931eb48d1981d9b714c826de45
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 3 15:12:53 2020 +0200

    bp: Add IndexShardOperationPermits.asyncBlockOperations(ActionListener<Releasable>)
    
    https://github.com/elastic/elasticsearch/commit/1703a61fec098ce57749bf5ba932dbeb6560a387

commit d77719fd9f86453abbbfadd228988ef24c34487c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 3 14:41:48 2020 +0200

    bp: Introduce retention leases versioning
    
    https://github.com/elastic/elasticsearch/commit/f181e170387ca50727b750605fad51a3e85fed3a

commit 7ae5a52d723f43d6255abb8300a7cc9529e60880
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 3 11:49:17 2020 +0200

    bp: Soft-deletes policy should always fetch latest leases
    
    https://github.com/elastic/elasticsearch/commit/8e95780f98d9ed94f87d61af27923395ded3dae1

commit 694551cd0824d51b0a41ecf1634e78f28d0cfea3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 3 11:41:05 2020 +0200

    bp: Fix limit on retaining sequence number
    
    https://github.com/elastic/elasticsearch/commit/ba285a56a72655d189ee11aeed8c9eb8d2043ff9

commit 13f6ab6a7da238e0d989d5385cb7e4efd083fcaa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 3 11:25:44 2020 +0200

    bp: Sync retention leases on expiration
    
    https://github.com/elastic/elasticsearch/commit/194cdfe20815bdd99c45cf06882445f3333e2df9

commit 0f254090b1fa59dc33de7cea8727ae01dbd34f55
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 4 16:08:43 2020 +0200

    Prevent searchers that are in-use from being closed
    
    This fixes a race condition where we closed a `Engine.Searcher` instance
    that was still in use.
    
    If the `FetchTask` was killed we immediately closed the searcher, but
    that very same searcher instance may already have been borrowed by a
    `FetchCollector` and could be in active use.
    
    With the change in
    
    https://github.com/crate/crate/commit/e7695886044540030b1a50f82f33a52d99c9b1be#diff-003d11b6ca408fe80c9a325b80d681e7L61
    
    this made it more visible and caused the
    `ThreadPoolsExhaustedIntegrationTest` to ocassionaly fail because the
    `readerIndex` in the `FetchCollector` could get negative.
    
    This changes the state transition handling in the `FetchTask` and
    ensures that borrowed searchers are not closed.

commit ca109c1d8c0f603054d7953b467d11c3347f78f6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 4 08:40:27 2020 +0200

    Amend integer literal breaking changes entry with implications

commit 23dedb0e45f7726e3e23bf662bd17f8fc84fe843
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 4 08:25:16 2020 +0200

    Fix _id value computation for  PK lookups
    
    The `RowShardResolver` uses `nullOrString` to turn all values to a
    string before computing the final `_id` value.
    
    `DocKeys#getId` insted used `DataTypes.STRING.implicitCast`.
    
    Due to this boolean values were treated differently. One used `'true'`
    while the other used `'t'`, leading to different `_id` value on primary
    lookups than what was inserted.
    
    We cannot change the insert part, because the data has already been
    persisted in many installations, so this changed the lookup instead.
    
    Closes https://github.com/crate/crate/issues/10302

commit 5d98f5966b8ebd88ce390019cf1a5b95c5e0cc07
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 3 10:56:54 2020 +0200

    bp: Copy retention leases under lock
    
    https://github.com/elastic/elasticsearch/commit/3801925cf0f69f253a3e5b9af1d8889fca392313

commit de5aeb610c1873f353d1e7fcf5e5dd355dad7f98
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 3 08:53:37 2020 +0200

    bp: Introduce retention lease syncing
    
    https://github.com/elastic/elasticsearch/commit/5fddb631a2b7e1be52233451b442eda70da88e3a

commit 12e7991acde004d7c9ce982d668c55b7951509e6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 3 08:56:50 2020 +0200

    bp: Introduce retention lease serialization
    
    https://github.com/elastic/elasticsearch/commit/74640d0ba7cbb0f6ffd78ff116990ae8d8e5cfde

commit 8007f8aefd8dd362094e8f382bb451956d41d807
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 3 07:54:23 2020 +0200

    bp: Introduce retention lease persistence
    
    https://github.com/elastic/elasticsearch/commit/03be4dbaca182a360e0a6cf3aa547739f44f1308

commit aea77b9ffc7a8ed1e74bc2527882094b265f2194
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 3 07:46:18 2020 +0200

    bp: Add validation for retention lease construction
    
    https://github.com/elastic/elasticsearch/commit/edc95c8a8e1cb0ab890b81894c378ac3f2fd2ab9

commit 74d62ec61f803bbf6b6165f3a9a7b9ebd25dd5bd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 31 16:59:30 2020 +0200

    bp: Introduce retention lease expiration
    
    https://github.com/elastic/elasticsearch/commit/c8c596cead495c7cd7c1834ef5a871e4bf2d6251

commit e4ef43fb550bfb490ea8df8d6e0159325d88e0e5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 31 14:47:14 2020 +0200

    bp: Introduce shard history retention leases
    
    https://github.com/elastic/elasticsearch/commit/c0f8c89172a1bbfa81ce5201c035293af8b4e110

commit f3b62bc7f68e052952e7ffa28df9311d52dab57f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 31 11:57:08 2020 +0200

    bp: Concurrent file chunk fetching for CCR restore
    
    https://github.com/elastic/elasticsearch/commit/9b75a709a2c3734187cc49762b9ef5d1b18f58dd
    
    This doesn't include the CCR part, which we don't have and we couldn't
    copy because of the different license.

commit bcf78683cbd30b1bddae17e9c033619080168574
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 29 21:02:52 2020 +0200

    Add developer docs for ES backports

commit 92bfef80e468990561d0145a791bec4e7a0a305e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 29 11:54:59 2020 +0200

    bp: Record Force Merges in Live Commit Data
    
    https://github.com/elastic/elasticsearch/commit/713e931df4c1eaaa28a024b562ff6f2632c72f55

commit 3d06921e0bcf7393fd3b9657ef821fea2bbdb958
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 29 15:03:23 2020 +0200

    bp: Remove Uid as an instantiable class
    
    https://github.com/elastic/elasticsearch/commit/79625fe694009b2f44c87111e8d184babde8aa85

commit 3d644be62f97b0d94a0158f00c427a1d991546c7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 29 13:04:25 2020 +0200

    bp: Don't persist type information to translog
    
    https://github.com/elastic/elasticsearch/commit/6531369f11d159896957b75a7eae0b7da214d01a

commit d686c9c69a57921cf169308bd98a61a11ecb6fcb
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed Jul 29 14:45:01 2020 +0200

    Add doc-value aggregator for variance aggregation.

commit a0b70a3360c2a7de086d93156516a4aac6fa98eb
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed Jul 29 14:43:43 2020 +0200

    Fix bound signature assigment in sum aggregation.

commit 509ab3d33147efc26326e4a3ee224a70545921aa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 29 14:43:25 2020 +0200

    Remove logging on errors in TableHealthService
    
    The error is propagated to a client querying `sys.health` already. No
    need to log it separately.

commit e441ed31ec64e5956c20322c25e34318d79b9e4a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 29 14:30:39 2020 +0200

    Debounce computations in TableHealthService
    
    Makes sure that there is only a single active computation at a time.
    Improves the performance in case of concurrent queries:
    
    Before:
    
        cr8 timeit -s "select * from sys.health" -w 0 -r 5000 -c 25
        Runtime (in ms):
            mean:    53.955 ± 0.557
            min/max: 51.546 → 436.973
        Percentile:
            50:   52.646 ± 20.100 (stdev)
            95:   54.556
            99.9: 436.960
    
    After:
    
        cr8 timeit -s "select * from sys.health" -w 0 -r 5000 -c 25
        Runtime (in ms):
            mean:    27.546 ± 0.580
            min/max: 0.174 → 58.555
        Percentile:
            50:   19.214 ± 20.935 (stdev)
            95:   54.996
            99.9: 57.777

commit fddf56411c06192c93079ccb48f9ea355c9efb65
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 29 11:04:56 2020 +0200

    bp: Remove isRecovering method from Engine
    
    https://github.com/elastic/elasticsearch/commit/9df6cbef9e4516c8a07f8c559652c51c49605def

commit a171a1b34299e816818ba8c3b13acb2d7c33e13c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 29 10:58:30 2020 +0200

    bp: Don't refresh on `_flush` `_force_merge` and `_upgrade`
    
    https://github.com/elastic/elasticsearch/commit/8dda827ff4ea20996b8bcff366ab5fd749129792

commit e7695886044540030b1a50f82f33a52d99c9b1be
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 28 14:22:54 2020 +0200

    bp: Refactor index engines to manage readers instead of searchers
    
    https://github.com/elastic/elasticsearch/commit/399d53e5c03ae4157d9ba107d01fbecfed758972

commit 217c8ab629116234b2d023844ad0962302125c4d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 28 15:57:43 2020 +0200

    bp: Refactor IndexSearcherWrapper to disallow the wrapping of IndexSearcher
    
    https://github.com/elastic/elasticsearch/commit/fd4eb96d1c2ee7091d99b5a5069673de45833801

commit 1c52ed4697314381fa9f362471b992cdb3f50638
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 28 12:05:30 2020 +0200

    bp: Fix Infinite Loops in ExceptionsHelper#unwrap
    
    https://github.com/elastic/elasticsearch/commit/8ffb5a15d2298cbd9322358381728d1592af99af

commit bd592a5d85944816ad9c05b026b4ea09369b0b49
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 28 11:41:05 2020 +0200

    bp: Make unwrapCorrupt Check Suppressed Ex.
    
    https://github.com/elastic/elasticsearch/commit/4766ffa032ef0036e77c9d57165d36d8e0de9258

commit cbadb4ca651c26e72b51f37fc84af9a3860c31b7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 28 11:26:18 2020 +0200

    bp: Some cleanup in o.e.i.engine
    
    - https://github.com/elastic/elasticsearch/commit/7ab59eef11f5f966ae3cad385237a4f8b7ad115f

commit c0cfe46ed21a225fea380707fdde40f8f9c4910d
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Tue Jul 28 12:56:20 2020 +0200

    Reflect 4.2.2 release.

commit 374bf0b2ecaf1c6ade34523c488a3f47cd211f74
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Mon Jun 8 11:34:45 2020 +0200

    Remove guava some guava multi and immutable maps.

commit d95524de85965d442a8d91e11024894211b11bfc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 27 15:48:49 2020 +0200

    bp: Push primary term to replication tracker
    
    - https://github.com/elastic/elasticsearch/commit/a9b12b38f0a037cc588fefac23f5bc5e04745a52
    - https://github.com/elastic/elasticsearch/commit/c394eb9ae98626c9c6c6e4c60f829af4e7b4ade4

commit ab7d30fc4ff8a13c35f6697733bc79b324c88fbc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 27 14:38:15 2020 +0200

    bp: Recover peers from translog, ignoring soft deletes
    
    Backport of:
    
    - https://github.com/elastic/elasticsearch/commit/3f1125fd49a6ed5af578e92f5c505c33e5dc8161
    - https://github.com/elastic/elasticsearch/commit/c7379435439cc56c203329d085d4ad4cfd931ccb

commit f750238c8ee4a50a4b7db127bdc17b6e005e5849
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 27 14:05:09 2020 +0200

    Port Engine method rename from retention lease actions
    
    Subset of
    https://github.com/elastic/elasticsearch/commit/bbe990f86275ed6d696681afc636d940ddf49d26
    that just introduces the naming changes

commit 8ad9ecf201af3ef796d1d064bd7728444e57d1c8
Author: marregui <miguel.arregui@gmail.com>
Date:   Thu Jun 18 22:46:40 2020 +0200

    Add support for global flag 'g' to now tabular function regexp_matches
    
    To find all matches in a source of the given pattern instead of
    stopping at the first match. The postgres specification defines this
    function as a table function.

commit 8ed4f62f6e876f6fabca6123807a204028db5df0
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Mon Jul 27 13:50:52 2020 +0200

    Initialize a single query profiler per index searcher.

commit a57f3f68feb5665736a1c464b8ebf2c8c22f1106
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 24 18:21:32 2020 +0200

    Integrate LazyMapList into Lists2
    
    Should help discover the functionality, as it's closer to the other
    `Lists2.map` related functions we have.

commit 862b289ae1e8e0b4ffe1a350d4b420bc92573792
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 24 16:40:03 2020 +0200

    Fix clustered-by column validation for inserts
    
    Fixes a regression introduced in https://github.com/crate/crate/pull/9465
    
    Closes https://github.com/crate/crate/issues/10270

commit 10d42df53a45048a14d82a24cd02ffbecfb18877
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 24 13:50:15 2020 +0200

    Fix regression that caused unknown key errors on ignored objects
    
    Fixes https://github.com/crate/crate/issues/10255

commit 3c30dd5b683a4e03b88d8a86cd2e111f5f190a89
Author: marregui <miguel.arregui@gmail.com>
Date:   Tue Jul 21 13:06:04 2020 +0200

    Add table function generate_subscripts
    
    Convenience function that generates the set of valid subscripts for the
    specified dimension of the given array. Zero rows are returned for arrays
    that do not have the requested dimension, or for NULL arrays (but valid
    subscripts are returned for NULL array elements).

commit 83d8c41b7268549c78ddec960a60cc767106a313
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 21 23:36:25 2020 +0200

    Fix performance regression; execute ORDER BY w/o LIMIT with QTF
    
    In theory a normal `Order -> Collect` should be just as fast or faster
    than a `Fetch -> Order -> Collect`, but it turns out that due to how
    currently the sorted merge, it is more expensive on a full row than a
    narrow row with just the fetch id.
    
    Part of the reason is that the `*SortedMergeIterator` implementations
    use a `peek`, which triggers multiple evaluations of a `Row`. For
    example the `apply` of the `ScoreDocRowFunction` is called multiple
    times.
    
    Fixing this in the execution layer may be a bit more involved, so this
    applies the fetch-rewrite also to some more patterns.
    
        V1: 4.3.0-d162b7a8731762aacd4bdfcf6df20e6342ed6154
        V2: 4.3.0-1ed3aa43bd5cd671fc332fbcc8c7432671a3b48b
    
        Q: select * from uservisits where "searchWord" = 'hardnose' order by "visitDate" desc
        C: 1
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |      265.018 ±   21.618 |    222.775 |    262.301 |    271.916 |    641.156 |
        |   V2    |       55.767 ±   23.288 |     45.291 |     52.272 |     58.345 |    552.883 |
        ├---------┴-------------------------┴------------┴------------┴------------┴------------┘
        |               - 130.46%                           - 133.53%
        There is a 100.00% probability that the observed difference is not random, and the best estimate of that difference is 130.46%
        The test has statistical significance
    
        System/JVM Metrics (durations in ms, byte-values in MB)
            |    YOUNG GC            |       OLD GC           |      HEAP         |     ALLOC
            |  cnt      avg      max |  cnt      avg      max |  initial     used |     rate      total
         V1 |  504     4.28     3.93 |  490    43.76    45.05 |     2147      387 |   751.03     103980
         V2 |   37     6.19     5.45 |   27    45.51    44.09 |     2147      800 |   823.33      27122
    
    (The ~55 mean here is about the same we had in 4.1)

commit 05a5c1617db2c8ca543518ee196b93dce7fa938a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 23 10:37:11 2020 +0200

    Fix statement classification to include sources of fetch operators

commit 4af89792787924a4faea99421d4ae65ba611993f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 22 16:10:58 2020 +0200

    Fix fetch planning bug with aliased columns

commit 1a0344ef5089befbdea262d958c3b1a6684e2295
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Thu Jul 16 15:28:18 2020 +0200

    Remove `DataType#value`.

commit 697c0031162d852443a5fb1c830bff25c3d0b987
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Mon Jun 29 17:06:33 2020 +0200

    Replace `DataType#value` with new DataType API in production code.

commit 3de24d8246a62bb7cddece6f8c1bc39cd2fb5c9a
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed Jul 15 16:10:24 2020 +0200

    Replace `DataType#value` with new DataType API in tests.

commit e55cc7299f4ad8fa78420fc2afe5f350bee07b2b
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Thu Jul 16 14:19:57 2020 +0200

    Register date_format and date_trunc only for explicitly supported types.
    
    The input arguments of other types should be casted first.

commit 5a42dd4027d7f4ab8e3cb16b83735eed5fb7fa56
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Thu Jul 16 14:13:53 2020 +0200

    Register latitude and longitude functions only for explicitly supported types.
    
    The input argumetns of other types should be casted first.

commit 99e3b3033c0a67e303d178633cc4b76f1a7842ac
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Thu Jul 16 14:06:04 2020 +0200

    Register the geohash function only for explicitly supported types.
    
    The input argumetns of other types should be casted first.

commit 51e55959bd5ad960fbbe69684b4e2bdc8c3ace75
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Mon Jun 29 15:48:10 2020 +0200

    Implement `DataType#sanitizeValue` for all data types.

commit 23c73220a8acccbbfcc23635eae3432841342fd1
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Thu Jun 25 17:15:23 2020 +0200

    Implement `DataType#implicitCast` for all data types.

commit d162b7a8731762aacd4bdfcf6df20e6342ed6154
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 22 14:23:21 2020 +0200

    Fix partitioned column value retrieval in query-then-fetch plans

commit 1b599bf1b929f0fd2c534df92f23efd021a2cd6b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 22 12:01:40 2020 +0200

    Avoid plan re-creation for no-op optimizer passes
    
    `optimizedRoot.replaceSources` always created a new plan node, even if
    the sources weren't changed at all.
    
    This adds some change detection to avoid re-creation of nodes. It will
    also allow us to use identity comparison in other places to detect if
    the optimizer changed a plan node or not

commit c93115fd9be01ddd614fcbb152f34ff7d8ba34e0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 17 14:49:58 2020 +0200

    Docs: Add a snippet to show how to escape s3 access keys

commit bde261c74d0f5c6b2d32bade8c1c8e4b69f26197
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Tue Jul 21 09:05:14 2020 +0200

    Upgrade Sphinx dependency to match RTD default

commit 00b9d07f69ce63f65bbf418bca796bc857f55332
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 20 09:54:33 2020 +0200

    Allow all users to execute discard and set transaction

commit d2a80b554c1f5d5d01c58d1bda63561ec9c64545
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 16 23:40:32 2020 +0200

    Update gradle to 6.5.1
    
    https://docs.gradle.org/6.5.1/release-notes.html
    
    > NOTE: Gradle 6.5 has had one patch release, which fixed several issues
    > from the original release. We recommend always using the latest patch
    > release.

commit d019026be2524f5ea43eb9c84ab0b6e56fbc686c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 15 21:53:20 2020 +0200

    Extend REFRESH statement docs
    
    Highlights the performance impact a bit more and elaborates on how to
    work around it with primary key lookups.

commit 1f0ebf7cae7c958728da58c0898c2bb8214bb7ed
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 17 15:34:11 2020 +0200

    Add doc-value aggregator for min aggregation
    
        Q: select min(duration) from uservisits
        C: 1
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |       67.925 ±   46.711 |     51.515 |     64.499 |     67.515 |   1100.817 |
        |   V2    |       24.338 ±   19.621 |     19.274 |     21.725 |     23.292 |    443.536 |
        ├---------┴-------------------------┴------------┴------------┴------------┴------------┘
        |               -  94.48%                           -  99.22%
        There is a 100.00% probability that the observed difference is not random, and the best estimate of that difference is 94.48%
        The test has statistical significance
    
        Q: select min("adRevenue") from uservisits
        C: 1
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |       70.576 ±   14.037 |     58.433 |     69.340 |     71.356 |    361.102 |
        |   V2    |       32.801 ±    7.910 |     21.266 |     34.532 |     36.867 |    129.560 |
        ├---------┴-------------------------┴------------┴------------┴------------┴------------┘
        |               -  73.08%                           -  67.02%
        There is a 100.00% probability that the observed difference is not random, and the best estimate of that difference is 73.08%
        The test has statistical significance

commit fc3f8193f97141f3115ac84938bf2d2393588812
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 16 23:46:52 2020 +0200

    Add new extensions for Lucene86 points codec
    
    Port of https://github.com/elastic/elasticsearch/pull/58226
    We miss https://github.com/elastic/elasticsearch/commit/62620f286635d17054b696f3e16d713e181d229f
    so the ported test looks a bit different.

commit f537343b4d87126360dc474e4566ba181ee85512
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 17 09:28:57 2020 +0200

    Increase stats.service.interval from 1h to 24h
    
    We've seen increased loads on cluster being upgraded from 4.0 to 4.1
    after the upgrade. The reason for the increased load is the `ANALYZE`
    statement that is periodically invoked every 1h by default.
    
    This increases the refresh interval to 24h.
    Stats are currently used sparringly, and even if used, the differences
    in the execution plans are minor compared to the effect that a frequent
    `ANALYZE` has on the cluster.

commit 5f3410140034ba52604606c3428d75b60895cbb9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 16 23:31:06 2020 +0200

    Update JDK to 14.0.2+12

commit 23b437a92772bd06c9984e513e16dd6662917e63
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 16 17:19:39 2020 +0200

    Fix display of varchar columns in SHOW CREATE TABLE
    
    Closes https://github.com/crate/crate/issues/10230

commit f95f336aa45f49efff0053305cc9d104d3d87b87
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 15 23:25:20 2020 +0200

    Add doc-value-aggregator for max on float/double
    
        # Results (server side duration in ms)
        V1: 4.3.0-82382fbf8438034e3abe202487c344d8884ea06d
        V2: 4.3.0-462a7eedb6ab6e5dcef8cb69a776f93dd1efb40a
    
        Q: select max("adRevenue") from uservisits
        C: 1
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |       69.422 ±   41.432 |     54.794 |     65.980 |     68.870 |    983.493 |
        |   V2    |       26.200 ±   31.520 |     19.582 |     22.463 |     25.738 |    717.716 |
        ├---------┴-------------------------┴------------┴------------┴------------┴------------┘
        |               -  90.40%                           -  98.41%
        There is a 100.00% probability that the observed difference is not random, and the best estimate of that difference is 90.40%
        The test has statistical significance
    
        System/JVM Metrics (durations in ms, byte-values in MB)
            |    YOUNG GC            |       OLD GC           |      HEAP         |     ALLOC
            |  cnt      avg      max |  cnt      avg      max |  initial     used |     rate      total
         V1 |   25     4.31     3.42 |    1    42.05    42.05 |     2147      140 |   897.09      31323
         V2 |    0     0.00     0.00 |    0     0.00     0.00 |     2147        0 |     8.73        114
    
        V1 top allocation frames
          Float.valueOf(float):30847988369
          CompositeBatchIterator$AsyncCompositeBI.lambda$loadNextBatch$0(int, int):204519952
          837034994.get$Lambda(...):71602376
          913186655.get$Lambda(...):47141128
          IndicesQueryCache.doCache(...):25853280
        V2 top allocation frames
          ParserATNSimulator.getEpsilonTarget(...):18333696
          CompositeBatchIterator$AsyncCompositeBI.lambda$loadNextBatch$0(int, int):11534336
          FlexibleHashMap.put(...):4712448
          MatchAllDocsQuery$1.scorer(...):4190208
          IndexInput.getFullSliceDescription(String):3670016

commit d28b78f1ffab6efd3ff2f2f55a2780bcb1c1ec06
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 15 23:06:07 2020 +0200

    Add a doc-value-aggregator for max on smallint/int/bigint/timestamp
    
        # Results (server side duration in ms)
        V1: 4.3.0-82382fbf8438034e3abe202487c344d8884ea06d
        V2: 4.3.0-517edb13acfb560284620d61e314a01296359f05
    
        Q: select max(duration) from uservisits
        C: 1
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |       68.279 ±   39.104 |     46.344 |     63.346 |     68.808 |    906.376 |
        |   V2    |       26.362 ±   20.572 |     19.310 |     22.651 |     28.985 |    464.269 |
        ├---------┴-------------------------┴------------┴------------┴------------┴------------┘
        |               -  88.58%                           -  94.64%
        There is a 100.00% probability that the observed difference is not random, and the best estimate of that difference is 88.58%
        The test has statistical significance
    
        System/JVM Metrics (durations in ms, byte-values in MB)
            |    YOUNG GC            |       OLD GC           |      HEAP         |     ALLOC
            |  cnt      avg      max |  cnt      avg      max |  initial     used |     rate      total
         V1 |    1     7.06     7.06 |    0     0.00     0.00 |     2147      299 |    29.92       1035
         V2 |    1    12.43    12.43 |    0     0.00     0.00 |     2147      427 |    87.80       1192
    
        V1 top allocation frames
          Lucene84PostingsWriter.newTermState():324266168
          BytesStore.writeByte(byte):169841646
          BlockTreeTermsWriter$TermsWriter.write(...):111452178
          BlockTreeTermsWriter$PendingTerm.<init>(...):104143432
          ArrayList.grow(int):47397148
        V2 top allocation frames
          Lucene84PostingsWriter.newTermState():341669781
          BytesStore.writeByte(byte):229781510
          BlockTreeTermsWriter$TermsWriter.write(...):133899820
          BlockTreeTermsWriter$PendingTerm.<init>(...):130103211
          ArrayList.grow(int):38363088

commit 4a27469f052974451deea245d4896b66ab552f6c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 15 20:14:37 2020 +0200

    Upgrade lucene to 8.6.0
    
    See
    
    - https://github.com/elastic/elasticsearch/commit/e19a82d7628a0dff07261f0100dc69b6fbcd555a
    - https://github.com/elastic/elasticsearch/commit/e62fb090fa5452a1c088cb778299a02ace40c18e

commit 25d98d59ce79339695e059475a3e7304e02c752c
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Thu Jul 16 10:27:54 2020 +0200

    Remove unused ReferenceToLiteralConverter.

commit 801682f3bef3701dc97e42afbbf7e634639b0f58
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 15 15:45:10 2020 +0200

    Allow users to kill their own statements

commit c8c0c569fd64b721a5a24a4e29b3bb1046a08479
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 15 11:07:16 2020 +0200

    Add an empty pg_role table
    
    We currently don't have roles that map nicely to PostgreSQL roles, so
    the table is empty for now.

commit bb07b5a7b61decaa63e65dd9c9899a7c220ac716
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 15 09:42:07 2020 +0200

    Fix ADD COLUMN on tables with INDEX OFF primary key columns
    
    The alter table logic is currently not fully diff-based, so we add the
    existing primary keys into the `mapping` request.
    
    This mapping must mirror the existing primary key definitions, otherwise
    it leads to a mapping merge error.
    
    The index constraint information wasn't set correctly.
    
    Fixes https://github.com/crate/crate/issues/10215

commit 82382fbf8438034e3abe202487c344d8884ea06d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 14 21:37:57 2020 +0200

    Change type in SessionSetting to DataType
    
    Adds some type safety and clarifies that the argument should really be a
    DataType instead of some arbitrary string.

commit f22f85b2fc9524bdec6c8eacb3406118aeb53f19
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 14 17:28:04 2020 +0200

    Replace iterableToString with String.join

commit 11e28e0d26519abd8259ed61733ba545c5bacdbb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 14 21:57:29 2020 +0200

    Bump version to 4.3.0-SNAPSHOT

commit f6bad38d1544280ec2dedb99e0554055055faf75
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 14 17:39:52 2020 +0200

    Bump version to 4.2.2-SNAPSHOT

commit e2611ceead1d03abeda9ed604edf26607b3ca4ce
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 14 16:51:12 2020 +0200

    Release 4.2.1

commit d0b63ec803ca12fabab4234653148556e667af3a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 14 11:43:48 2020 +0200

    Quote only base part of subscript expressions with `quote_ident`

commit 0527c03991bb9a3812d2d5c1856a938ccc282834
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 13 20:49:57 2020 +0200

    Don't flush when sending row description

commit d20c79ac231575a4d027422a7a971bc0877bc9ec
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Jul 12 21:00:13 2020 +0200

    tests: Update jdbc to 42.2.14

commit 8cd0677d22db2afa145b4d8efa569fc7e50d5bf4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Jul 12 20:34:51 2020 +0200

    Update hppc to 0.8.2
    
    Exposes used memory which we will be able to use for ram-accounting:
    
    https://github.com/carrotsearch/hppc/commit/8b6b15e282da2be1c275538be009a3defaef95c5

commit 877b280cb3836064525e168c5f4adf2447deb0e6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Jul 12 20:31:43 2020 +0200

    Update mockito to 3.4.0

commit 2f9ed2e9ce7ad3e55027b2d9ab93ff70e658086e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Jul 12 20:26:23 2020 +0200

    Update checkstyle to 8.34
    
    https://checkstyle.org/releasenotes.html#Release_8.34

commit 3b3baaf0b91b1d430acdca8a2b659060cd8725b0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Jul 12 11:55:59 2020 +0200

    Mention more contribution options in CONTRIBUTING.rst

commit 80adfc4d70918a06e42d0cbaa702fe0f3803273e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 9 17:53:08 2020 +0200

    Fix support for subscript expressions in ON CONFLICT
    
    Closes https://github.com/crate/crate/issues/10196

commit 684a69303ad2ee3a640fc9176769b748551505c6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 9 20:52:58 2020 +0200

    Update netty to 4.1.51
    
    https://netty.io/news/2020/07/09/4-1-51-Final.html

commit 6264d17d0d670cb4155e54eb971917a4776724ae
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 9 11:57:57 2020 +0200

    Docs: Fix COPY TO URI formatting example for windows
    
    Fixes https://github.com/crate/crate/issues/10181

commit 3559a4cba6166ae12fba1c92b05d5e128f0bf4d4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 9 17:57:05 2020 +0200

    Prune changes released with 4.2.0 from unreleased

commit 1466d42922b49fd80ea36aa1fa5f0a2721973286
Author: Michael Kleen <michael.kleen@gmail.com>
Date:   Thu Jul 9 14:56:15 2020 +0200

    Remove unused code from BlobStoreRepository

commit 5ab96b76ce2589dbdd4884344e73e58261791b2f
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Jun 18 15:51:31 2020 +0200

    Add recursive deletes for BlobContainers and fix Snapshot Deletion
    
    Backport of https://github.com/elastic/elasticsearch/pull/43281
    This fixes the snapshot deletion on azure where files would not
    have been deleted.

commit e408d55e3ae0846114bfc649c4532fe57d88369c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 9 12:17:06 2020 +0200

    Update outdated entries in crate.yml

commit b8d2472568a6f954bf7696094bc73c9fe026d6d4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 8 18:04:34 2020 +0200

    Fix window function plan construction
    
    This fixes a planner bug that led to a "Field is not streamable"
    error.
    
    We created a `WindowFunctionContext` that contained both the original
    `WindowFunction` symbol, and also it's arguments and filter as
    InputColumns.
    
    This original `WindowFunction` could contain fields or references which
    are both not streamable.
    
    This removes the `WindowFunctionContext` and instead replaces all
    columns within the `WindowFunction` to InputColumns - which mirrors the
    pattern we use in all other places.
    
    Fixes https://github.com/crate/crate/issues/10189

commit ae28f81b912282acab773334ffe66730870bd6be
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 7 16:32:45 2020 +0200

    Exclude build-hash if releaseZip task is used
    
    `:app:release` and `:app:releaseZip` should both result in the same
    naming pattern (`crate-${version}.{extension}`)

commit 799679febeef1fb603dcaa39e5714bc784867b55
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 7 14:42:26 2020 +0200

    Bump version to 4.2.1-SNAPSHOT

commit ee80a3c9387d04ca6632341627007096edd7240d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 7 13:20:45 2020 +0200

    Release 4.2.0

commit f9579eb1247568186c703b802ff8fdf9d1db8c55
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 7 11:54:22 2020 +0200

    Update sql_features list

commit b348ef13be2487e9a113749273695f15eac07544
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 7 11:08:26 2020 +0200

    Reflect 4.1.8 release

commit 604e019418c76fb1a43c725ed5e44688302c9fd6
Author: marregui <miguel.arregui@gmail.com>
Date:   Thu Jul 2 13:50:26 2020 +0200

    Created libs/shared/cli to contain elasticsearch-cli and imported ES code
    
    Tool crate-node had a dependency to elasticsearch-cli, which in turn had a dependency
    to elasticsearch-code, in particular to a class we refactored into a different package.
    To break this look, classes that composed elasticsearch-cli at version 7.1.1 have been
    copied across to module libs/shared/cli, and the dependency to IOUtils has been adapted.

commit 1a374c8588b3e3e87c9fa7c129db3ab9484108c3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 6 16:50:51 2020 +0200

    Fix simple query channel delay handling
    
    Chaining the session.sync() future to the execute future caused a
    `OperationalError` with the psycopg2 client in our sqllogic test suite.

commit d19efdff1ba9fb7117e465eeb1fc5af2b868fd82
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 6 16:06:28 2020 +0200

    Make sure null returned by `not` predicate is typed as boolean
    
    Not an issue if assertions are disabled, but if enabled and a query like
    `HAVING NOT NULL` is used it resulted in an assertion error in the
    filter operator

commit fc68a21e3d84375477738c835488b14efd421c26
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 6 13:17:25 2020 +0200

    Do not create unused tables in GroupByPlannerTest
    
    Reduces the setup overhead a bit

commit ee1f26655afbed24ba4d50a624577fe430530cdc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 6 12:49:10 2020 +0200

    Add pretty printing for negate function

commit 6af1ce530433b7d7215c318e4a71862f1e2ff229
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 6 15:04:23 2020 +0200

    Fix negate function registration for REAL type
    
    Fixes a regression in master introduced by the signature refactoring.

commit 0469c2965ba126f8731f220afa29af23b0d7dffb
Author: Markus Holtermann <markus@crate.io>
Date:   Fri Jul 3 16:58:32 2020 +0200

    Replaced wrong word in allocation awareness docs
    
    `node.attr.zone` is a node attribute and as such we need to start new _nodes_ for more shards to be allocated on that those new nodes.

commit 41ce228aab6d5b5d5243fe33af0dd1c33eb3dc38
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 6 11:23:37 2020 +0200

    Remove support probot config; Add issue template link to GH discussions

commit 85626716912351dcea2fc0c94572270481ca326f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 6 10:42:27 2020 +0200

    Fix stuck query on pg-wire-fetch
    
    The change in https://github.com/crate/crate/commit/4952ae49317d8089ed5fa3b2580e24d4dd07f45a
    broke the asyncpg tests and led to stuck queries.

commit 71bf6306761fd2c175b87ae6a85ce56a0a6aa381
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Jun 30 15:23:15 2020 +0200

    Rename MetaData to Metadata in all of the places
    
    Based on https://github.com/elastic/elasticsearch/pull/54519
    This also applies it to the rest of the code base and also
    renames META_DATA to METADATA.

commit 86a72f92ae426b405f0fde5b11c04480f650b0c6
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Jul 2 17:12:00 2020 +0200

    Fix time measurement in SysSnapshotsTest

commit 359404d9214c5bda900e5f48940c2711d1aec5b1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 2 15:17:24 2020 +0200

    Fix between handling in expression analyzer
    
    769ee6978c10138e17f84b3c154c905f97d3f5c4 broke the operator-swap logic
    (left alignment of references)
    
    The sqllogic tests failed because of that.

commit 23bc06a59900082b5e6b32fe9526d431d5efadb3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 2 09:45:24 2020 +0200

    Fix flaky testQueryAllColumns
    
    The snapshot logic changed to use `absoluteTimeInMillis` from the
    ThreadPool to set the finished time.
    
    This can diverge from System.currentTimeMillis, which we used in the
    test to verify that finished is within the time before and after the
    snapshot.

commit 6601fe168ede65061b6294a676defd62cc117c06
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 1 17:09:14 2020 +0200

    Update admin-ui to 1.16.0
    
    No release notes entry because there is already an entry about the new
    `timetz` type, and the update is to include formatting in the
    query-console for that new type.

commit 5e6f7b3fc84259b6aa2b419ae736edaf747bcde3
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Jul 1 16:52:09 2020 +0200

    Make sure access_key and secret_key for s3 repo are masked

commit 8449e1dc0d56c22aae8a672677c82e1d163f7065
Author: marregui <miguel.arregui@gmail.com>
Date:   Mon May 4 08:35:11 2020 +0200

    Add scalar function current_time
    
    This function returns the system's time as microseconds since midnight
    UTC, at the time the SQL statement is handled. The actual return type
    is the new data type timetz.

commit 4952ae49317d8089ed5fa3b2580e24d4dd07f45a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 1 10:49:36 2020 +0200

    Send transaction-state based on BEGIN/COMMIT in ready-for-query messages
    
    Solves https://github.com/crate/crate/issues/10154

commit be28777ac7d5c47a894cbc669af174d77c134ea4
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Tue Jun 30 15:21:08 2020 +0200

    Resolve unnest and _values signature return type correctly.
    
    The inner type of the `unnest` and `_values` function resolved
    correctly and accounts the inner types of the record type, while
    the return type of the bound signature return always the empty
    record type. It happens due the type signature binding limitation
    of functions that have an argument represented by the array type
    that has a variable of any type and variably arity.

commit a40705c44a1af7775de521662ac061681bf854bd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 30 16:53:02 2020 +0200

    Add SET TRANSACTION statement support
    
    Required for https://github.com/crate/crate/issues/10154

commit 34371f24207029c45e8bc84ec9ce45576a0f72e0
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Fri Jun 26 13:08:08 2020 +0200

    Add consistent acnhors to all configuration settings

commit 1b70cf33d45a5cd5828c529274b855ab7f446f0e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 30 16:29:56 2020 +0200

    Expose text and _text in pg_type table
    
    The missing `text` is part of the reason
    https://github.com/crate/crate/issues/10154 is not working

commit f5505cbfa113aa2a5612d910fde2e29bd919e06d
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Jun 24 12:43:52 2020 +0200

    Track Shard-Snapshot Index Generation at Repository Root
    
    Based on https://github.com/elastic/elasticsearch/pull/46250
    https://github.com/elastic/elasticsearch/commit/be397b7 and
    https://github.com/elastic/elasticsearch/commit/4849c3e

commit 6185e57e67ee98877f5345cca8ede1abcf7997bd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 13 18:05:48 2020 +0200

    Update netty to 4.1.50
    
    https://netty.io/news/2020/05/13/4-1-50-Final.html
    
    The default fqdn in the SelfSignedCertificate changed from example.com to localhost
    See https://github.com/netty/netty/commit/9427255ffb112f5cf3d736fa71eae06fd447373e#diff-09b302f705e5b8752e9b2216bb607cb6L97

commit 7823ba707f4ba60303475f8d9cb01effe877dbc9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 28 09:52:08 2020 +0200

    Fix contribution attribution (mailcap)

commit 5bbd8eb4694802102e8d8b7002f782032dbe2a1a
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Jun 29 16:54:48 2020 +0200

    Check if Snapshot files are removed

commit a11649c4e67bd179be5103e1671713609e258207
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 29 14:49:49 2020 +0200

    Add oid type to pg_type table
    
    After the introduction of the oidvector, the npgsql driver failed with:
    
        Unhandled exception. System.Collections.Generic.KeyNotFoundException: The given key 'oid' was not present in the dictionary.
           at System.Collections.Generic.Dictionary`2.get_Item(TKey key)
           at Npgsql.TypeHandlers.InternalTypesHandlers.OIDVectorHandlerFactory.Create(PostgresType pgType, NpgsqlConnection conn)
           at Npgsql.TypeMapping.ConnectorTypeMapper.BindType(NpgsqlTypeMapping mapping, NpgsqlConnector connector, Boolean externalCall)
           at Npgsql.TypeMapping.ConnectorTypeMapper.BindTypes()
           at Npgsql.TypeMapping.ConnectorTypeMapper.Bind(NpgsqlDatabaseInfo databaseInfo)
           at Npgsql.NpgsqlConnector.LoadDatabaseInfo(NpgsqlTimeout timeout, Boolean async)
           at Npgsql.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
           at Npgsql.ConnectorPool.AllocateLong(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
           at Npgsql.NpgsqlConnection.<>c__DisplayClass32_0.<<Open>g__OpenLong|0>d.MoveNext()
    
    This adds an Oid type entry to the `pg_type` table to fix the issue.
    (It doesn't add a oid cratedb type, looks like it is not necessary - we
    can still follow up on that later)

commit f4a33d119463e78943f86f23f508ad7f5bb18600
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 29 14:33:35 2020 +0200

    Make sure there is an entry in pg_proc for each pg_type typreceive
    
    Each pg_type entry must be able to join with an entry in pg_proc for
    clients like npgsql.
    
    (Except arrays, they've a generic `array_recv` value)

commit b95423eb84c46931f2c53c3fe4ef687b2135c054
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 29 10:50:58 2020 +0200

    Fix simple query handling with delayed channels
    
    The asyncpg testcases in crate-qa got stuck after aa1beca0ec5 got merged
    because the `handleSingleQuery` logic didn't handle the delayed channel
    writes.

commit 2ff16ce362b24b863ebad49d87d7a29e4a9d2cb4
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Fri Jun 26 15:49:36 2020 +0200

    Fix class cast exception in the pg_catalog.pg_stat table.
    
    The ``most_common_vals`` and ``histogram_bounds`` have the
    ``array(text)`` data type. If any of these columns would
    have the array or object value, the class cast exception will be
    thrown such as ``object::text`` and ``array::text`` operations
    are supported. This change addresses this issue.

commit f664aab6cb8bad52edcab08e3f5f1ad762947297
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Fri Jun 26 16:28:06 2020 +0200

    Keep gradle test kit artefacts under buildSrc/build.

commit 5dd03a1a8c28dd41d5d370bc0987c859c5258160
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jun 25 16:01:15 2020 +0200

    Replace read usages of deprecated function info
    
    Add wrapper methods to fallback to the function info when no signature
    is given (for function symbols retrieved from CrateDB < 4.2 nodes).

commit 28de18fcc33f14c44121d49daedcdcc11caf536f
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jun 24 18:46:24 2020 +0200

    Use Signature instead of FunctionIdent/Info
    
    Replaced all usages of `FunctionIdent` and `FunctionInfo` with `Signature` and
    marked them as deprecated.
    Remaining usages are only for BWC inside mixed version clusters.
    Implementation and usages should be removed with the next major version (5.0).

commit b5107feaabf05852d9f879bea062cb3cb860e986
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 25 16:07:13 2020 +0200

    Add the DISCARD statement
    
    Required for PowerBI

commit 89d1da26cd84379f2527ffce182278a610421947
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Tue Jun 23 11:29:25 2020 +0200

    Update @crate/tech-writing team name

commit 5909f0c6ebbe48634be76a17786b76c136281db4
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Thu Jun 25 11:45:52 2020 +0200

    Add <data type> + recv methods to pg_proc table for PG compatibility.

commit c02475ae8c1d274bc67f3dfc56604d3b55f9c8bf
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Thu Jun 25 11:44:19 2020 +0200

    Base Regproc hashCode and equals on the oid only.
    
    Such as we cannot lookup the function name by oid and fallback
    to using the oid as name, we cannot use the name to check the
    equality of the Regproc objects. Therefore, we use the oid only
    to check the equality and calculate the hash code.

commit ef6554f66dcde3fce87452736f31aca446e29bfa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 25 11:21:57 2020 +0200

    Add an oidvector type for use in pg_proc
    
    Closes https://github.com/crate/crate/issues/10131

commit 747c2654883c90667ff00d1beb10141758093854
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 24 17:26:58 2020 +0200

    Reflect 4.1.7 release

commit 9b6aed02c0664e7df5b67466ee9e1e238fc8677e
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jun 24 12:41:35 2020 +0200

    Fix DataType generics
    
    Add wildcard to DataType definitions to fix compiler warnings and issues.

commit c2837017ff8b93d3cc51456c61646e65931df216
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Jun 24 10:48:43 2020 +0200

    Remove unused code from Repository

commit 3c1971fe6ed42788a00cdd840b8b3285e1611040
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 23 17:14:50 2020 +0200

    Add information_schema.character_sets table

commit d03498096deecd9d79d1f13f948155a0fdb17323
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Jun 23 15:30:28 2020 +0200

    Add SnapshotsInProgressTests

commit aa1beca0ec5ec1e2d2f564268f91b6855f71f3db
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 23 15:56:17 2020 +0200

    Delay writes on channel until execute is finished
    
    We must make sure that the client receives the rows and the
    `commandComplete` message before it receives a `parseComplete` for a
    second query that the client may have sent as well.
    
    We send the query results and the `commandComplete` from the `SEARCH`
    threadpool instead of from the netty worker thread, which causes netty
    to schedule them for later execution. (When the worker thread can pick
    it up)
    
    Meanwhile it was the case that the netty-loop continued processing more
    messages.
    
    This fixes https://github.com/crate/crate/issues/10068

commit 72246aba81d720d5aa1b56306d9f847f62e2d540
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jun 19 15:49:19 2020 +0200

    Improve unknown function error for operators
    
    Format the unknown operator in operator style, not function style.
    Example:
      `unknown function: bool = ANY(integer)`

commit 14702b5cde2abb69c68e1e50fecff6e48fb9e92d
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Jun 23 12:20:30 2020 +0200

    Remove unused code from SnapshotsService

commit 8b998727128c2f3c909c8ab90c5ee7c08bd84301
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Jun 22 12:59:20 2020 +0200

    Track Shard Snapshot Generation in Cluster State
    
    Backport of https://github.com/elastic/elasticsearch/pull/46864

commit 774402986abd61b650c2cde0cf191c5cd1cb593a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 22 17:14:38 2020 +0200

    Fix use of parameter symbols in join conditions

commit 418348629c7c8e0d82e62e7195e035fe185f0667
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 22 14:36:46 2020 +0200

    Clarify array_unique change in release notes

commit 544e2687a135bf5dfe3851275b1c007d731e6a02
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Mon Jun 22 13:55:01 2020 +0200

    Execute select queries on execute instead of deferring them to sync.
    
    Currently the pg wire protocol implementation executes select queries
    lazily by deferring their till `sync` which would result in exception if we
    process more than one select queries and call sync afterwards. This
    change remove the lazy execution of the select queries and make them
    to execute eagerly on `execute`.

commit 8e1fc1b88dc76115a4350fe00f6b974da1f81486
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 22 14:54:37 2020 +0200

    Exclude warmer.enabled setting from new tables
    
    The setting is deprecated. If we include it by default it results in a
    warning if users create a new table.

commit 8118e4f3fd0c17fcfce05ca3e6895cf4665d6e52
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 22 13:50:00 2020 +0200

    Fix flaky test_copy_from_return_summary_with_failed_rows_line_numers_limitted_to_50
    
    Rewrites it as a unit test to fix the flakyness and also because it's
    faster.
    
    See https://github.com/crate/crate/pull/10109#issuecomment-647424509 for
    a failure

commit 2dc66e3da5de2990e96910eecd59c0cd5ce066d9
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Jun 22 09:24:12 2020 +0200

    Remove obsolete IncompatibleSnapshots Logic
    
    Based on https://github.com/elastic/elasticsearch/pull/44096

commit ab35de6ae97cc6b22055b95b5c4ff4fbb5a56d53
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 22 11:16:47 2020 +0200

    Allow ORDER BY on aggregations shadowed by alias
    
    Fixes a regression in master.
    Detected running the crate-python tests against the latest nightly. They
    failed with:
    
        UnsupportedFeatureException: ORDER BY function 'count(id)' is not allowed. Only scalar functions can be used]
            [SQL: SELECT count(characters.id) AS count_1, characters.name AS characters_name
            FROM characters GROUP BY characters.name ORDER BY count(characters.id) DESC, characters.name

commit 2b41762ffec311807373036b0cb7e3a719927f14
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Sat Jun 20 09:51:14 2020 +0200

    Remove unused BlobStoreFormat

commit 4555ddb7ab106c0e02d8bfb2048ea1a8c4e9d271
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri Jun 19 15:22:09 2020 +0200

    Remove unused code in BlobStoreRepository

commit 22466512529e92dad9a5e2ebfe05a42cea1047f1
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri Jun 19 10:54:35 2020 +0200

    Simplify BlobStoreRepository
    
    Based on https://github.com/elastic/elasticsearch/pull/42578
    and https://github.com/elastic/elasticsearch/pull/42833

commit 4d2b6fdac84ab80315e308d9fbad33bb0b8881ad
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Jun 18 14:59:15 2020 +0200

    Remove unused code from BlobStoreRepository

commit 5fc9e4417fed87c5312ec5f66ca33e21df379140
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Jun 18 13:33:15 2020 +0200

    Optimize restore shard operation

commit 12fcce54df95ff2ec7e3bd3652b7fe02a65f333c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 26 14:55:44 2020 +0200

    Add optimized global aggregates using doc-values
    
        Q: select avg("adRevenue") from uservisits
        C: 1
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |       80.198 ±   32.376 |     46.869 |     78.789 |     80.146 |    789.931 |
        |   V2    |       27.888 ±   20.782 |     23.429 |     25.451 |     26.543 |    480.902 |
        ├---------┴-------------------------┴------------┴------------┴------------┴------------┘
        |               -  96.79%                           - 102.34%
        There is a 100.00% probability that the observed difference is not random, and the best estimate of that difference is 96.79%
        The test has statistical significance
    
        System/JVM Metrics (durations in ms, byte-values in MB)
            |    YOUNG GC            |       OLD GC           |      HEAP         |     ALLOC
            |  cnt      avg      max |  cnt      avg      max |  initial     used |     rate      total
         V1 |    8    23.13    26.17 |    0     0.00     0.00 |     8590     2319 |   777.04      31413
         V2 |    0     0.00     0.00 |    0     0.00     0.00 |     8590        0 |    14.71        198
    
        V1 top allocation frames
          Float.valueOf(float):30818982785
          CompositeBatchIterator$AsyncCompositeBI.lambda$loadNextBatch$0(int, int):287010080
          169079530.get$Lambda(...):78850440
          291374498.get$Lambda(...):57452096
          MatchAllDocsQuery.createWeight(...):26222072
        V2 top allocation frames
          CompositeBatchIterator$AsyncCompositeBI.lambda$loadNextBatch$0(int, int):46133248
          ParserATNSimulator.getEpsilonTarget(...):12582912
          IndexInput.getFullSliceDescription(String):10487808
          Weight.scorerSupplier(...):1047961

commit 53df6eae288ec8e0df8f3019133098d18c0f72f4
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jun 18 13:49:40 2020 +0200

    Rename function providing interface
    
    Rename `FuncResolver` to `FunctionProvider` as it is providing a
    function factory for a given signature and not resolving.

commit cdfdbe3f01b992aedad8c0b28098455a13fc1c0d
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jun 18 13:47:54 2020 +0200

    Remove unused deprecated function related interfaces

commit 9bd98e06f28e4df51181e03345b6909f2ca3400a
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jun 18 12:28:51 2020 +0200

    Remove old deprecated function registry
    
    Additionally introduce BWC function resolving helper when function`
    symbols are retrieved from older nodes without any signature.
    In that case a full function matching will be performed instead of
    a fast by-signature lookup.
    As this only happens in mixed clusters (rolling upgrade) for a short
    period, this should be neglectable.

commit 204e5a0a103d0d452ae056d148219efcfd50a73b
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jun 17 14:34:23 2020 +0200

    Remove signature nullable annotation at function impl iface
    
    All functions are now converted to the signature based registry and
    thus must provide a signature.

commit 2d9ce9facbae37bda449f5988cff2f7dbf66b4e9
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Jun 18 12:32:03 2020 +0200

    Remove uneeded SnapshotContext in BlobStoreRepository

commit ae7c29df126693aa088306e13a3c1d062ed302d1
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Jun 18 12:26:07 2020 +0200

    More Efficient Ordering of Shard Upload Execution
    
    backport of https://github.com/elastic/elasticsearch/pull/42791

commit c41a99336cb8c5a14e74f81d6c802211a59788a8
Author: marregui <miguel.arregui@gmail.com>
Date:   Thu Jun 18 11:41:09 2020 +0200

    Limit the number of returned 'line_numbers' to 50 (COPY FROM RETURN SUMMARY)
    
    Having thousands of line numbers is not helpful and puts a lot of pressure
    on the client.

commit df94255209c6135e30abaa32527218875ce53f11
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jun 18 12:20:39 2020 +0200

    Convert user functions to new signature registry

commit 95d1dac69eff0b7cf83a313c88710756d2c771ef
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jun 18 12:23:16 2020 +0200

    Remove deprecated Aggregation ctor with nulled signature

commit 7b2b26813876967420a5548350767ea02472d29f
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jun 18 12:18:40 2020 +0200

    Fixes aggregation benchmarks
    
    Aggregations must be resolved by signature

commit 5fa8ebd0e0fa5e04eda0bb0a329427788cb7fd8e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 16 16:40:25 2020 +0200

    Fix some typos in concepts docs

commit c5b0b28c8cb59684c358243a57d300e527ec5df6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 17 16:53:40 2020 +0200

    Remove the SslResourcePollIntervalParser
    
    This caused a warning because the default was changed to 5m.
    
    Since the changes in
    https://github.com/crate/crate/commit/a91cc702290e213be3bc69fe183195cd15e15e47
    we're no longer limited to 2, 10 or 30 second intervals.

commit 4d3678b2d422fccea10c70ee0f1900cffa2b1cac
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Jun 17 11:56:47 2020 +0200

    Adapt exception handling in repository creation
    
    This change will make sure invalid arguments in the repository
    creation process will return error code 400 and not 500.

commit ccf359b4f06c29efb2f78a26917ff53767e69bf7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 17 15:21:41 2020 +0200

    De-duplicate aggregation functions used with GROUP BY
    
    Fixes an unreleased regression which caused incorrect results.
    See https://github.com/crate/crate/issues/10075

commit 67ba347bd3ddbd4289aad5c91e0873d515b78578
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Apr 27 18:28:51 2020 +0200

    Convert all operators to new signature based function registry
    
    Refactored all operator registration to use the new signature based function registry.
    
    Regex operators are now only registered to `text` and `undefined`(null) data types
    to prevent casting of a `text` argument to an argument type of higher precedence
    which would then later fail anyway on evaluation as only `text` types can be used.
    This results in a different exception when used with non-text, non-null values;
    `UnsupportedOperationException` instead of a `ConversionException`.

commit 8a62f4c007bf36f196b92d3017c8ee2078c74ce4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 17 11:06:58 2020 +0200

    Ensure GroupByOptimizedIterator can be used in insert-from-query cases
    
    In `insert-from-query` we prefer using source lookups (`_doc['col']`).
    This prevented the optimization from kicking in.
    
    Closes https://github.com/crate/crate/issues/10082
    
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |    15878.168 ±    0.000 |  15878.168 |  15878.168 |  15878.168 |  15878.168 |
        |   V2    |      510.232 ±    0.000 |    510.232 |    510.232 |    510.232 |    510.232 |
        ├---------┴-------------------------┴------------┴------------┴------------┴------------┘
        |               - 187.55%                           - 187.55%
        There is a nan% probability that the observed difference is not random, and the best estimate of that difference is 187.55%
        The test has no statistical significance
    
        System/JVM Metrics (durations in ms, byte-values in MB)
            |    YOUNG GC            |       OLD GC           |      HEAP         |     ALLOC
            |  cnt      avg      max |  cnt      avg      max |  initial     used |     rate      total
         V1 |   18    10.65     3.24 |    0     0.00     0.00 |     4295     3205 |  2751.76      42438
         V2 |    0     0.00     0.00 |    0     0.00     0.00 |     4295        0 |    56.19         16

commit 67bf7ef419b158306798beb06e3de91947dce920
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jun 17 10:52:40 2020 +0200

    Add missing signatures to Aggregation, Window, Table functions

commit 1a72fd9cc15a3279cbe45c1f992eeea57bc4b485
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Jun 16 17:16:38 2020 +0200

    Add documentation for iam roles

commit 5a668e15a34c5207d9dfa7a549ff38c32aa20511
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Jun 10 16:15:48 2020 +0200

    Re-enable IAM Roles for s3 repositories

commit 9b36a14d86bceedda69052c35ecebf745ec20a96
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 16 11:21:31 2020 +0200

    Fix flaky TypeConversionTest
    
    If the value randomized to `-128` the call to
    
        intValue = t.equals(DataTypes.IP) ? Math.abs(intValue) : intValue;
    
    Mutated the `intValue` to 128, which is an out-of-range value for Byte.

commit 62165ce0c3c07b8460c45b492974c876c95b20a1
Author: marregui <miguel.arregui@gmail.com>
Date:   Mon May 4 08:35:11 2020 +0200

    Add type "time with time zone", alias timetz
    
    This type is used as return value for time related functions, such as
    "current_time".
    Literals can be constructed using a string literal and a cast. Syntax
    for the string literal:
    
    time-element [offset]
    
        time-element: time-only [fraction]
        time-only:    HH[[:][mm[:]ss]]
        fraction:     '.' digit+
        offset:       {+ | -} time-only | geo-region
        geo-region:   As defined by ISO 8601.
    
    fraction accepts up to 6 digits, delivering microsecond precision.
    The type cannot be used in CREATE/ALTER statements.

commit e3649c6f0f9885bd370ba69c8d528d623b7cae36
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 16 10:02:29 2020 +0200

    Allow users with AL privileges to execute RESET statements
    
    They can use `SET GLOBAL` so it makes sense to be able to RESET settings
    as well.

commit d00e11bcf3964e3414ad7a84758bb8af7d61a963
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Jun 15 15:36:08 2020 +0200

    Update test cheatsheet to new module structure

commit 9f63a1d9691de9abdfe09c6e49fc5e4a937e589a
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jun 3 16:58:36 2020 +0200

    Add query optimizer incl. rules for cast optimizations
    
    This replaces the special literal downcast logic inside the deprecated/old
    function matching which caused bugs on arithmetics.
    
    The optimizer runs before creating any `RoutedCollectPhase` while building
    execution plans and thus only runs once per query.

commit 65b4965d35ff32897e61cd34009953ff8671f5b2
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Fri Jun 12 12:03:22 2020 +0200

    Fix NPE in createTableStats that occured on primitive array types.

commit 0a48f3109e092fc34e4c823175b4e6e40f93b230
Author: Markus Holtermann <markus@crate.io>
Date:   Thu Jun 11 14:06:19 2020 +0200

    Remove duplicate word in documentation

commit 8a44e0537413cfc0780bb8174d4bce35bc5da1ab
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jun 11 10:06:53 2020 +0200

    Move arithmetic floating point changes entry
    
    We won't backport this fix as it relies on the new function registry

commit c193f5511fe0e938af8aa9bcf6bc67323002af3a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 10 11:41:35 2020 +0200

    Apply offset on optimized SELECT DISTINCT queries

commit 3f82d992ffc9c1b28c4414ba9ebee5820f329393
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jun 8 12:44:42 2020 +0200

    Convert arithmetic scalars to new signature registry
    
    By using signature matching of arithmetic scalars, arithmetic data type
    selection is based on precedence and thus fixes existing issues for
    floating point arithmetics.
    Operations on non-floating point column types with a floating point
    literal will result in a floating point result now.
    
    Fixes #9652

commit 46071db1e15273ba9f13ab9228481f022dda2752
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed Jun 10 13:25:32 2020 +0200

    Document the `regproc` data type.

commit 26b93c68b9816949f16e9b26d0b00e1f82d5f9ea
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed Jun 10 10:43:07 2020 +0200

    Use regproc type for correspodning columns in pg_catalog tables.

commit 286e54ae83d68367915d2120c9bb88a5b9047ec6
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Tue Jun 9 15:51:16 2020 +0200

    Add the Postgresql `regproc` data type.

commit bc0f4c6011e6814a3b0a2837d83c743021ea7af0
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Tue Jun 9 15:07:53 2020 +0200

    Add the `regproc` type size estimator.

commit 2814b6f47ef7ed6998165cb9fde27c0f4205eb49
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Tue Jun 9 11:16:20 2020 +0200

    Add the CrateDB internal `regproc` data type.

commit fef664c5a92bdbef181f14b6adcad379ffd4e683
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jun 8 16:36:56 2020 +0200

    Detect Integer literal values at the sql parser
    
    Introduce an integer literal object which will be used instead of a
    long literal if the value fits into the integer range.
    Queries like ``select 1`` will now return ``integer`` instead of ``long``.
    
    This allows us to later remove the special literal downcast logic on
    function matching while keeping the existing behaviour of
    ``int_col + 1 -> integer``.

commit 78e51c8f51f5a9d64962562c9a1a72a64dfc89c4
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri May 29 16:18:03 2020 +0200

    Add Ability to List Child Containers to BlobContainer
    
    Backport of https://github.com/elastic/elasticsearch/pull/42653

commit 620ffcdbb6bec0d75c448e7ccc7cc16aac1d52aa
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Jun 9 11:50:09 2020 +0200

    Add test reports for submodules

commit 06dfd049702a64dc4aba376c611936ed64534282
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Jun 8 15:45:54 2020 +0200

    Add azure snapshot integration test

commit 65ccad23c77b2a4628c06f474af54117d7cf966c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 8 11:11:42 2020 +0200

    Reflect 4.1.6 release

commit ef0734924ef82801506d0c30aafb3546391d9230
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 5 16:28:11 2020 +0200

    Add a tables column to sys.snapshots

commit 71c07db78e513f176ea2ab2d1fb543843e227193
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 5 16:09:48 2020 +0200

    Update jackson to 2.11.0
    
    https://github.com/FasterXML/jackson/wiki/Jackson-Release-2.11

commit 10cf202d2fe350ff8616efc06822b9d987d469c0
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Fri Jun 5 11:35:27 2020 +0200

    Add character_maximum_length to the columns table.

commit e09e00db18273d070083b6dc4b659452c0eaee36
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 4 15:43:07 2020 +0200

    Update gradle to 6.5
    
    https://docs.gradle.org/6.5/release-notes.html

commit a554f3168d9db3e967046656b9660492230753b4
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Thu May 14 14:23:24 2020 +0200

    Document the varchar data type.

commit dfd56c6710b17d7a440c6b6b2a5c6cfef6f95400
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Tue Jun 2 16:18:52 2020 +0200

    Support text type with length for insert from values and query.

commit 58106502bdfbdda19a5bd1e31ddbf738e23d903f
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Tue Jun 2 16:12:51 2020 +0200

    Reflect limit length in serialization of the text type.

commit 8d3f3bfa32c79f9f90cd90fdd83ef7ec9974c8b0
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Fri May 22 14:06:13 2020 +0200

    Add cast support for the string type with the length limit.

commit 2ff76951155761b9dc6895630d2a72261b089db6
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed May 20 11:59:13 2020 +0200

    Add parse type signature support for the text type with length.

commit a9ddd110517fba0dd436cbbf5585af7a9ed7c88c
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Tue May 19 10:30:42 2020 +0200

    Add varchar with length limit support in create table analyzer.

commit 5c3b9efc1a0e035bb383983de6e10bcf0898e23d
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Mon May 18 16:27:07 2020 +0200

    Add the length limit field to the crate string type.

commit d846b31651febd0c6aaf91672c48c6d54b4afbeb
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Mon May 18 14:43:49 2020 +0200

    Add parser support for varchar parametrization with length limit.

commit eb005a0c2d8f8396ebceea9132c0d922731e99d6
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Fri May 15 16:00:32 2020 +0200

    Add length_limit type options to the keyword field mapper.

commit 494b4cda95263cdc3615c62c7e8ba858b71505c6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 3 17:16:30 2020 +0200

    Increase SSL trust/keystore poll interval to 5m by default
    
    An update to the keystore or truststore doesn't occur often. Usually it
    is done to replace a certificate that is about to expire.
    
    Polling every 10s seems a like waste of CPU cycles. It shouldn't matter
    too much whether the reload happens within 10s or a couple of minutes,
    as long as somebody doing the replacement gets some feedback eventually
    - without waiting too long.
    
    5m seems like a good compromise.

commit f909a59a3b54671022db93bbb0b7d55c7bd328d6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 2 16:45:47 2020 +0200

    Move vendored guice into a separate lib module

commit a66263606a8587af2c6539cb0881dc9a59f4ce12
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 3 15:16:50 2020 +0200

    Fix flaky test_optimized_iterator_stop_processing_on_kill
    
    This reverts the changes made to the test in 8b937e1414
    
    They were unnecessary and it looks as if they caused flakyness. (Github
    Actions failed a couple of times recently. Couldn't reproduce locally)

commit a91cc702290e213be3bc69fe183195cd15e15e47
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 3 11:40:46 2020 +0200

    Fix ssl keystore/truststore change detection if there are symlinks
    
    Fixes #10022

commit 56304655f3de9a87583dcf200391e6bb9fb5e3b5
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed Jun 3 10:55:55 2020 +0200

    Base data type comparison on its IDs in relevant places.
    
    Some of the data types might contain parameters. At some places
    e.g. SemanticSortValidator while comparing data types we are
    not interested in checking for the strict equality, but rather
    only whether the type IDs are the same.

commit 00a80b6191c8a8470e5951829415cf3ec4bdcc0d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 2 18:25:58 2020 +0200

    Eagerly resolve PGType when sending data to clients
    
    To avoid re-resolving the PGType per row

commit 3c8f2fe9b58f9a843736eb16af09fbf3f565af13
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 2 18:04:19 2020 +0200

    Remove unused ShardBitsetFilterCache

commit 8d2510b27e128b4bd8f78e49909a984f7a2bbd6d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 2 17:13:32 2020 +0200

    Remove unused PathTrie

commit 2dda03394949365930f75a4c7859481509277ebd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 2 16:16:28 2020 +0200

    Remove FieldData leftovers

commit d38c1978802ca99d05ee87577196507bd9fc6b03
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 2 13:22:06 2020 +0200

    Fallback to last applied settings when updating settings with dependencies
    
    The validation of changes to settings like `...watermark.low` didn't
    consider the active values of it's dependencies if they weren't changed
    within the same request.
    
    The following worked:
    
        set global "cluster.routing.allocation.disk.watermark.low" = '91%', "cluster.routing.allocation.disk.watermark.high" = '95%';
    
    But doing the same in two steps didn't:
    
        set global "cluster.routing.allocation.disk.watermark.high" = '95%';
        set global "cluster.routing.allocation.disk.watermark.low" = '91%';
    
    `low` depends on `high`, and it validated against the *default*
    value if the `high` value wasn't submitted within the same request
    instead of the last applied value.

commit bf649444888449323312dc056c6716795ec7ba3f
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Tue Jun 2 13:16:41 2020 +0200

    Implement explicit and implicit casts for array and object types.
    
    The object and array data types contain the inner data types
    therefore the data type default implementations of explicit and
    implicit cast method cannot be used.

commit 39635bdf77a6bae2c9654a05e3ad5a4b8240a4d4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 29 15:37:28 2020 +0200

    Remove IndexFieldData

commit a9f9801fb09abb00c574b08d09ac4216d8262cf6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 29 15:20:29 2020 +0200

    Integrate sortField creation logic into SortSymbolVisitor
    
    This will allow us to remove the FieldData layer

commit e8320fd0ebabe78d2fe48e50b674013f91c5827d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 29 09:58:45 2020 +0200

    Remove unused IndexFieldData implementations

commit 42470cb87d0db1169c7abad5aa69904485fa7840
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 28 23:39:59 2020 +0200

    Remove unused AtomicFieldData

commit a1dc0d59eb5a9d7a5819eea797d5c8db2f7bcae8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 28 22:52:19 2020 +0200

    Remove IndexFieldDataCache

commit ea6b6f5a399486bbccfaa094aac408fe0ecb853b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 28 20:02:32 2020 +0200

    Remove unused global ordinal components

commit f60df82365debdab6108f261870c85925a0ccb61
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 28 19:50:20 2020 +0200

    Remove unused localGlobalDirect
    
    Due to the IndexWarmer removal in #10021 this became unused

commit b772cfdccf9dec566827e18e7728f589152d2469
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Fri May 29 16:12:42 2020 +0200

    Make the second _cast argument to accept the target type as a string.

commit b328703abb4b112aa835e78d3edfe3bf99f9fa13
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Fri May 29 16:41:18 2020 +0200

    Split cast functions into implicit, explicit, try cast functions.

commit 820729e07f1180c09f2ecb3a99a130511e3b8bfb
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed May 27 15:15:04 2020 +0200

    Replace `Symbol#cast` cast mode flags with the CastMode enum.

commit 116b7a54859da440601699556926ecf8cf7daff6
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri May 29 11:53:43 2020 +0200

    Simplify Some Code in Snapshotting
    
    Backport of https://github.com/elastic/elasticsearch/pull/41316

commit 3651056fc00a83986169ffa5b701f834a6aceac4
Author: Matthijs <matthijs@crate.io>
Date:   Wed May 27 15:56:14 2020 +0200

    Copyedit fix to release notes

commit c7948c5514f47e5942189d47992177e0d98a5e69
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 28 19:22:32 2020 +0200

    Remove IndexWarmer
    
    The IndexWarmer warmed the BitsetFilterCache and global ordinals, but
    both were no-ops.
    
    In the BitsetFilterCache the queries were always empty:
    
        final Set<Query> warmUp = new HashSet<>();
        final CountDownLatch latch = new CountDownLatch(searcher.reader().leaves().size() * warmUp.size());
        for (final LeafReaderContext ctx : searcher.reader().leaves()) {
            for (final Query filterToWarm : warmUp) {
    
    Global ordinals were only warmed if `eager_global_ordinals` is set to
    true in the mapping, which was never the case.
    
    Furthermore, we do not use global ordinals when executing queries.

commit fe71564037fef5d9b672711885003e81d7d2d102
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 28 19:03:54 2020 +0200

    Remove methods from IndexOrdinalsFieldData
    
    Methods are never accessed via that interface, but always via
    `IndexFieldData.Global`

commit cdeb1fa6a7545902e732e77612438de17ead3411
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 28 17:16:36 2020 +0200

    Remove PagedBytesIndexFieldData
    
    Was unused as we don't support enabling fielddata on analyzed text
    columns.

commit c22bff152e8d1e7981d7fd761466155f338005c4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 28 16:26:04 2020 +0200

    Remove unused CommonSettings from IndexFieldData

commit 56ca0d8a59842c63961065ba8f6bb6cc896d3277
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 28 16:23:42 2020 +0200

    Remove XFieldComparatorSource
    
    The only implementation `BytesRefFieldComparatorSource` used it for the
    `missingObject`, which for strings is always null.
    
    No need for an extra abstraction to get a `null` value.

commit 40343799037d3c9f8e9fcb0fae5694ec17f794bd
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Thu May 28 16:12:21 2020 +0200

    Base IpType on DataType<String> instead of StringType.

commit b810e9daeb3352f0b396a64d68a75631d8ed314f
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu May 28 11:45:51 2020 +0200

    Async Snapshot Repository Deletes
    
    Backport of https://github.com/elastic/elasticsearch/pull/40144
    and related https://github.com/elastic/elasticsearch/pull/36140

commit 57628ec9556d978a1e589350fac66497726a8cdb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 28 15:23:55 2020 +0200

    Remove ComparatorSource implementations
    
    They were only used to get the null-sentinel value. The `newComparator`
    methods were never called.

commit bb566aac40f06f5784378c70b02c059beb04d7d7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 28 15:17:32 2020 +0200

    Remove more unused half_float logic

commit 50f90efddf5c9d368e3d8542e1bc62459672f8db
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 28 12:04:56 2020 +0200

    Remove unused BytesBinaryDVIndexFieldData

commit 9be7cc82bdf1893b937edfd62fe7e7d5bb583035
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 28 11:50:07 2020 +0200

    Remove unused ConstantIndexFieldData

commit 8b937e141406f8c230981e2d41b8fdab1b704a67
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 28 11:12:41 2020 +0200

    Don't go through IndexOrdinalFieldData in GroupByOptimizedIterator
    
    Will make it easier to remove other unused FieldData functionality
    
        Q: select count(*) from (select distinct x from t075) t
        C: 1
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |      666.071 ±   65.145 |    587.365 |    628.117 |    710.963 |    890.221 |
        |   V2    |      683.422 ±   67.329 |    609.065 |    649.089 |    723.294 |    951.399 |
        ├---------┴-------------------------┴------------┴------------┴------------┴------------┘
        |               +   2.57%                           +   3.28%
        There is a 99.08% probability that the observed difference is not random, and the best estimate of that difference is 2.57%
        The test has statistical significance
    
        Q: select count(*) from (select distinct x from t050) t
        C: 1
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |      632.349 ±   58.334 |    550.856 |    594.223 |    681.498 |    838.491 |
        |   V2    |      666.954 ±   60.963 |    575.433 |    675.042 |    710.770 |    813.498 |
        ├---------┴-------------------------┴------------┴------------┴------------┴------------┘
        |               +   5.33%                           +  12.73%
        There is a 100.00% probability that the observed difference is not random, and the best estimate of that difference is 5.33%
        The test has statistical significance
    
        Q: select count(*) from (select distinct x from t025) t
        C: 1
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |      545.722 ±   44.881 |    488.324 |    523.164 |    581.014 |    751.612 |
        |   V2    |      548.340 ±   44.195 |    497.521 |    533.667 |    542.937 |    815.163 |
        ├---------┴-------------------------┴------------┴------------┴------------┴------------┘
        |               +   0.48%                           +   1.99%
        There is a 44.31% probability that the observed difference is not random, and the best estimate of that difference is 0.48%
        The test has no statistical significance
    
        System/JVM Metrics (durations in ms, byte-values in MB)
            |    YOUNG GC            |       OLD GC           |      HEAP         |     ALLOC
            |  cnt      avg      max |  cnt      avg      max |  initial     used |     rate      total
         V1 |  808    49.85    41.99 |  685    87.41   116.45 |     8590      440 |   241.32     126981
         V2 |  580    61.56    99.61 |  447    90.57   105.05 |     8590     1024 |   236.42     126957
    
        V1 top allocation frames
          BytesRef.utf8ToString():44512255792
          HashMap.newNode(...):29952101013
          StringUTF16.compress(...):19670629928
          HashMap.resize():14009800664
          GroupingCollector.reduce(Map, Row):10989246506
        V2 top allocation frames
          BytesRef.utf8ToString():43971054794
          HashMap.newNode(...):30164322109
          StringUTF16.compress(...):20580370496
          HashMap.resize():13987376810
          GroupingCollector.reduce(Map, Row):10739966699

commit 956c9c70bb6196ad29f5e48c3c7ea05caaa12833
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue May 26 12:41:30 2020 +0200

    Fix Broken Index Shard Snapshot File Preventing Snapshot Creation
    
    Backport of https://github.com/elastic/elasticsearch/pull/41310

commit da54d0d645c201df7c23fbf0a07d2782df1fa874
Author: pooja1pathak <pooja@india.nec.com>
Date:   Wed May 6 15:47:06 2020 +0530

    Add chr(int) scalar function

commit 07c794f5a0aa8a845bf34aaf41779b2ac806d03c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 28 09:48:45 2020 +0200

    Use killed reference also for close checks in GroupByOptimizedIterator

commit dc85f50001e3c1583be4c191bd636e72505ea8a0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 28 09:45:40 2020 +0200

    Use COMPLETE_NO_SCORES ScoreMode in GroupByOptimizedIterator
    
    We don't need scores there

commit 22dba4c2f35e17ade4066862d9ca304508208ed7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 28 10:35:15 2020 +0200

    Remove unused half_float number type

commit d20ae4f29cc66194fc79b392bf4bcb61fceb592b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 28 10:05:01 2020 +0200

    Remove unused BinaryFieldMapper

commit 0859e796217d1e30b7800142d97c38349ee21677
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 26 23:43:11 2020 +0200

    Remove FieldCacheExpression
    
    We already didn't use this abstraction for int/long (among others), it
    looks like there is no performance impact of removing it for the other
    columns.
    
        V1: 4.2.0-10f5523e79b05e521f2c8e7d70ed65d0df98fe01
        V2: 4.2.0-04c462688b9e16986e3e7d1f3653fdac7af5b379
    
        Q: select avg("adRevenue") from uservisits
        C: 1
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |       87.544 ±   46.688 |     59.465 |     85.535 |     86.964 |   1121.550 |
        |   V2    |       90.722 ±   30.161 |     56.787 |     89.311 |     91.017 |    744.478 |
        ├---------┴-------------------------┴------------┴------------┴------------┴------------┘
        |               +   3.57%                           +   4.32%
        There is a 79.86% probability that the observed difference is not random, and the best estimate of that difference is 3.57%
        The test has no statistical significance
    
        System/JVM Metrics (durations in ms, byte-values in MB)
            |    YOUNG GC            |       OLD GC           |      HEAP         |     ALLOC
            |  cnt      avg      max |  cnt      avg      max |  initial     used |     rate      total
        V1 |    8    20.98    22.65 |    0     0.00     0.00 |     8590     2299 |   714.02      31422
        V2 |    8    23.06    23.00 |    0     0.00     0.00 |     8590     2282 |   692.15      31397
    
        V1 top allocation frames
          Float.valueOf(float):30826033087
          CompositeBatchIterator$AsyncCompositeBI.lambda$loadNextBatch$0(int, int):285112369
          538326567.get$Lambda(...):67020424
          701192225.get$Lambda(...):49631416
          DocValuesIndexFieldData$Builder.build(...):36149720
        V2 top allocation frames
          Float.valueOf(float):30804870273
          CompositeBatchIterator$AsyncCompositeBI.lambda$loadNextBatch$0(int, int):292429624
          578734453.get$Lambda(...):80935272
          1038578717.get$Lambda(...):55604680
          MatchAllDocsQuery.createWeight(...):17599528

commit aec4fb9aa565fc7e16761ff8091aa0c02b55bb14
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue May 26 22:23:10 2020 +0200

    Introduce ShardState Enum + Slight Cleanup SnapshotsInProgress
    
    Backport of https://github.com/elastic/elasticsearch/pull/41940

commit 356caba6857cb319517bdf1231f6a4dfee3938d7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 27 11:36:08 2020 +0200

    Change GH-action trigger to work on PRs from forks

commit 8ab3144a4788f31a551c56bde0257765b46e3940
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Tue May 26 17:28:34 2020 +0200

    Remove the cast function per data type mapping.
    
    Currently, we maintained the cast function per data type mapping.
    The name of the target data type is part of the cast function name,
    it looks as following `to_<type>` or for the try cast `try_<type>`.
    Each cast function has the following signatures:
    
        `try_<target_type>(source_type, target_type):target_type`
    or
        `to_<target_type>(source_type, target_type):target_type`
    
    that obviously duplicates information about the target type.
    
    This commit replaces the cast function per data type mapping with
    the two cast function with the following signatures:
    
        `cast(source_type, target_type):target_type`
        `try_cast(source_type, target_type):target_type`
    
    instead of ~70 registered per data type cast functions.
    
    This is a backwards-compatible change. The cast functions were never
    stored in the metadata with names under which they were registered.
    e.g. `to_bigint`, etc. The symbol printer was always converting them
    into the following format:
    
        `cast(source as target_type)`.
    or
        `try_cast(source as target_type)`.

commit 6849ae6c411f9947c249812d09ffa28b910cbfb3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 27 09:08:20 2020 +0200

    Fix ANALYZE operation on tables with object arrays
    
    Column references for object arrays children had the wrong type. That
    lead to `GroupByOnArrayUnsupportedException` errors.
    
    Fixes #10004

commit a5022420165c04bc36a59a9f32d2b688460d11ca
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed May 27 09:54:53 2020 +0200

    Bump AWS Java SDK S3 to 1.11.789

commit 1ba21d79974f29bb14c1913f936f208b0befadfb
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue May 26 12:22:07 2020 +0200

    Add Bulk Delete Api to BlobStore
    
    Backport of https://github.com/elastic/elasticsearch/pull/40322

commit 64d62be9f7e4431af843dfaa34ff19624caa4e25
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue May 26 13:58:03 2020 +0200

    Add read-only repository verification
    
    Backport of https://github.com/elastic/elasticsearch/pull/35731

commit 10f5523e79b05e521f2c8e7d70ed65d0df98fe01
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 26 10:34:08 2020 +0200

    Remove undocumented & unexposed index.fielddata.cache setting

commit 6865841e40dc1e3ec7360bc566decfc19a304660
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 26 10:28:42 2020 +0200

    Remove unused cache clearing code

commit 54c098be8dd38e6efccc2a3123e5a0c7c6fba103
Author: Daisy T <daisyts@gmx.com>
Date:   Tue May 26 15:07:28 2020 +0200

    fix Figure 5 diagram for the Joins documentation

commit 969ef59002da8f5285fccd9d5e45c7f63b7219fe
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 26 09:49:15 2020 +0200

    Update gradle to 6.4.1

commit c1dd7daf02e8fc1c31fda5b6f9161f29bf5157aa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 25 17:17:36 2020 +0200

    Lower http netty worker count in tests to 1
    
    Only a small fraction of the tests use HTTP. Most go either through
    pgwire or use the sessions directly. We can reduce the load a bit by
    lowering the worker count for http.

commit f9306c0af9e8e6432136e0eab2e5503d91f57b57
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 25 23:40:55 2020 +0200

    gradle: Use --parallel by default

commit fc3b2436a8f3a28d3b7f43ebdad63c95b5920049
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 25 23:35:44 2020 +0200

    gradle: Don't finalize compileJava with checkstyleMain
    
    `checkstyleMain` is quite heavy and it blocks test compilation until it
    is done.
    
    Users can manually list it in the tasks to run and have it run in
    parallel without blocking the testCompile tasks.

commit 7723fac5f7ec54286253115ab36792297e80070e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 25 23:27:47 2020 +0200

    Update checkstyle tool to 8.32
    
    https://checkstyle.org/releasenotes.html#Release_8.32
    https://checkstyle.org/releasenotes.html#Release_8.31

commit 0134d6e643360eb2c1dd9455f55ebee768e28045
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 25 23:27:06 2020 +0200

    gradle: Remove unused maven plugin

commit 7ac48662cc8015b6ee14f063ca67daccc72c1bda
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat May 23 18:16:46 2020 +0200

    Remove most of the ThreadContext
    
    The ThreadContext was used to preserve logged warnings across threads
    and nodes, to be able to return them to the client.
    
    But HTTP clients implementing a DB-API interface couldn't expose the
    warnings and PostgreSQL clients never received the warnings.

commit 28ba7b5bafb05bb770ff160bce55e28b47ae1ffb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat May 23 21:51:32 2020 +0200

    Load sql features entries on-demand
    
    The table is queried so rarely that there is no need to keep the data
    in-memory.
    
    Queries on the table still return in ~1-2ms

commit 0462ebd200cee6677eb47781b41a82699025184b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat May 23 19:11:09 2020 +0200

    Make some generic definitions explicit for eclipse jdt
    
    For some reason these caused compile errors if using eclipse.jdt.ls

commit 89c5b8e7b1f96def563aa4c3f22b5a2de0b68d7f
Author: Sebastian Utz <su@rtme.net>
Date:   Fri May 22 12:37:19 2020 +0200

    Always generate `cast` function for implicit casts
    
    Casting literals used a special logic and resulted in immediately
    converted literals. Some plans relied on this logic and break if
    non-literals are used.
    Early normalization of literal casts, over the special logic or by
    normalizing the `cast` function, removes relevant information maybe
    required by outer symbols (functions). E.g. normalizing of array
    literals converts them into an array object and thus looses
    the ability of using concrete type cast functionality of each literal
    array element.
    
    All these issues can be solved by removing early “on-function-resolving”
    normalization and early literal conversion.
    Instead the complete symbol tree will be normalized after it has been build.
    
    Additionally we differentiate between explicit and implicit casts.
    This was already the case from a user perspective but internally hidden
    due to the special early literal cast (conversion) logic.
    An example where explicit casts are possible but implicit casts not
    is the supported `ObjectType<->StringType` conversion to allow object
    literals of type JSON string.
    This is still allowed on explicit casts but not on implicit ones.

commit 8918a54ba7c1892ee664b2942c85885854a7c501
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 22 15:44:58 2020 +0200

    Update Lucene to 8.5.1
    
    https://lucene.apache.org/core/8_5_1/changes/Changes.html

commit eda9aa69784e67bce7faa7b9b3d2a9ad0ff3de3f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 22 14:05:54 2020 +0200

    Replace TreeMap in PgCatalogSchemaInfo with Map.of
    
    There is no need to order the entries.

commit 4a1c1f4fae2718f1935cb443c6c21b7a53ea6443
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Thu May 14 10:36:08 2020 +0200

    Reduce usage of guava in the server module.

commit 66f6850edcadc6e82c0934be424341219d8e1d3f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 22 09:56:58 2020 +0200

    Add pg_enum table to pg_catalog
    
    The table is used by the stock npgsql driver.
    Currently it is always empty
    
    https://www.postgresql.org/docs/10/catalog-pg-enum.html

commit 67c5d4cb1593502dd601c750697e7b6c190a3fbf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 20 17:41:54 2020 +0200

    Add a pg_range table
    
    The table is used by the stock npgsql client.
    See https://www.postgresql.org/docs/10/catalog-pg-range.html
    
    The table is always empty.
    
    (There is more missing, so this commit doesn't add support for it).

commit c087d575be582836f737dc5ff312c9873c23ec45
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 20 15:24:13 2020 +0200

    Lower GET threadpool pool size and queue size
    
    The threadpool is only used for sys.shards and sys.nodes queries.
    
    Queries on those two tables are typically few, fast and spike of queries
    is rare.

commit 39c50c298ad82789aeed740a8e8e0ba7b1529da3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 20 15:07:46 2020 +0200

    Remove threadpools plugin extension point
    
    We don't use.

commit 5f528614081196338f8f9c8d1e0ee2853eb804d2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 20 15:01:16 2020 +0200

    Remove ANALYZE threadpool
    
    The threadpool was unused and undocumented

commit 33a3e5defb53021e1065b0bac600c9cf9a0ccef0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 20 14:50:28 2020 +0200

    Remove redundant DIRECT_EXECUTOR attribute

commit a996cec686b116992f7b1e4f7d79b145744eccc0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 20 10:23:39 2020 +0200

    Inline kernelData into ExtendedNodeInfo

commit 23899d81335a9585d4a8955b09f4cffbbe7a3653
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 20 10:09:06 2020 +0200

    Remove unused settings from PingTask

commit dc519fb9698c4927c35cdf531805bbe7566dc736
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 20 14:28:12 2020 +0200

    Move LoadedRules into optimizer package
    
    There was a mismatch between package declaration in the file and the
    actual location.

commit 6f9d45ec80f4449bbae3819a1ce0e6ad2543a88f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 20 11:19:38 2020 +0200

    Optimize getAsMap in AffixSettings
    
    https://github.com/crate/crate/commit/9c526d6f268403c666966097b942276499848e15
    introduced a regression for `information_schema.tables` queries, mostly
    because the way the affix settings are included changed.
    
    This reduces the amount of garbage generated a bit to get closer to the
    performance prior to the change
    
        V1: 4.2.0-3e85bde7e3b4ac48cb895f44026987832215b9c3 (latest-nightly)
        V2: 4.2.0-10d5de3793e60d25724c9da729f0f9b02ec41b9d (change in this PR)
        Q: select * from information_schema.tables
        C: 1
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |       10.393 ±    6.690 |      5.793 |      9.566 |     10.176 |    197.010 |
        |   V2    |        9.457 ±    6.071 |      5.383 |      8.948 |      9.547 |    185.390 |
        ├---------┴-------------------------┴------------┴------------┴------------┴------------┘
        |               -   9.43%                           -   6.68%
        There is a 99.89% probability that the observed difference is not random, and the best estimate of that difference is 9.43%
        The test has statistical significance
    
        System/JVM Metrics (durations in ms, byte-values in MB)
            |    YOUNG GC            |       OLD GC           |      HEAP         |     ALLOC
            |  cnt      avg      max |  cnt      avg      max |  initial     used |     rate      total
        V1 |    7    12.51     8.28 |    0     0.00     0.00 |     2147       72 |   584.01       7871
        V2 |    2    21.94    38.16 |    0     0.00     0.00 |     2147       70 |   169.49       2146
    
        V1 top allocation frames
          Matcher.<init>(...):4366410504
          Pattern.matcher(...):1229964194
          HashMap.newNode(...):336593647
          HashMap.resize():268468679
          SystemTable$ObjectExpression.apply(Object):238707119
        V2 top allocation frames
          HashMap.newNode(...):367183748
          SystemTable$ObjectExpression.apply(Object):252332598
          HashMap.resize():250666864
          Arrays.copyOf(...):157999674
          Matcher.<init>(...):152147696

commit 97d4c294ab1319f3a1cb9fa70631ad1c2269d03d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 15 23:28:02 2020 +0200

    Group unreleased changes entries by topic

commit bcf73f0f01bf18a28c0a5732e7ff3fa33a4d7f8f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 19 21:41:49 2020 +0200

    Update GraalVM to 20.1.0
    
    https://www.graalvm.org/docs/release-notes/20_1/

commit 3e85bde7e3b4ac48cb895f44026987832215b9c3
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon May 18 16:49:16 2020 +0200

    Add `optimizer` session setting to configure query optimizer rules.

commit 06e979c43e614cae08ebc1f90c517f77735459e8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 18 11:37:08 2020 +0200

    Use composite cumulator in ByteToMessageDecoders
    
    See https://github.com/elastic/elasticsearch/commit/796cd0018fa7e809a5fdbd3ddabd069d455f3897

commit 8c786ec0bf6dc568df8aa7202d9328084de56a11
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 18 11:27:56 2020 +0200

    Lower default chunk size for recovery
    
    Backport of https://github.com/elastic/elasticsearch/commit/7b863dc25b358a1de8a026c5aff2f9cae739aca9

commit e87fa60bc2556c4ca528692aeae63ec7bbb8f66d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 18 16:25:59 2020 +0200

    Lower the number of netty threads
    
    Port of https://github.com/elastic/elasticsearch/pull/56488/commits/1968e56cf3a9aca848e34bd5ca7418b7597052b9

commit 9621efa0dbf102574a738f89834d4f3767216646
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 18 13:50:43 2020 +0200

    Use killed state in BatchIterator for close handling
    
    This replaces the two `killed` and `closed` checks per row to a single
    check on `killed`.
    
    To avoid expensive stacktrace generation on each `close()` call,
    `killed` is set to a pre-allocated exception.

commit dc2b601e05b6af897dc9693ffcbbb52409cc6112
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat May 16 18:49:25 2020 +0200

    Add pg_catalog.format_type scalar
    
    See https://www.postgresql.org/docs/current/functions-info.html
    
    `format_type` is called by the JDBC client on
    `conn.getMetaData().getFunctions(...)`

commit 0709a7bb90d28046ab3250df99ca794ec05fbe17
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 15 16:53:52 2020 +0200

    Avoid multiple value evaluation in hash joins
    
    https://github.com/crate/crate/pull/9941 caused a performance regression
    for joins because the column values were evaluated multiple times:
    
    - Once to estimate the size of the row
    - Once to calculate the hash code
    - Once to materialize the row to store it in a buffer
    
    This changes the flow to first materialize the row, and then calculate
    the size and hash code based on the materialized row.

commit baec97e626629ff6c291b1f6a3121a2ad87456d6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 18 10:11:41 2020 +0200

    Avoid .toArray calls in AggregationContext
    
    `inputs()` is called in an inner loop in `GroupByOptimizedIterator`. The
    `toArray` call causes a lot of allocations that are not necessary.

commit 2080053bc54b799e2fb5a24b0030941aba6f5133
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 14 19:30:50 2020 +0200

    Use native netty (epoll) for internal transport

commit dafec25c2a7725ae392dab93db6137a16e4862cc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 15 10:37:54 2020 +0200

    Fix testVerifySeqNoStatsWhenRecoverWithSyncId for test runs without assertions
    
    We run all tests both with assertions enabled and disabled to ensure we
    have no assertions with side-effects or other dependencies on assertions
    being enabled.

commit 6aedaf296ae88494cfb7cc13b4da5c66bd81c37d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 13 22:53:39 2020 +0200

    Remove unused includes and excludes from SourceFieldMapper

commit ad867dd5d64cc17767720ce2a9b563752edf189e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 14 10:50:06 2020 +0200

    Enable JS UDF by default
    
    The access restrictions with GraalVM are better than they used to be
    with Nashorn. Users can still disable it if they've concerns.

commit 5b635ea5d7e49ef68488ee4c2481f64c9bfa50a6
Author: Matthijs <matthijs@crate.io>
Date:   Thu May 14 16:21:16 2020 +0200

    Miscellaneous copyedits to Crate docs

commit f8610e7e37554da486c5846ff550efec8a7c1ee6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 14 15:01:59 2020 +0200

    Merge CrateCircuitBreakerService into HierarchyCircuitBreakerService

commit 28619820bd774b395619acf7657ae0580f308a56
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 14 11:57:27 2020 +0200

    Remove deprecated plugin extension points

commit fae75af73930b280c02d7059a68b01a5f86983f1
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed May 6 14:29:36 2020 +0200

    Use the new func registry for the subscript functions.

commit 90d05acdf21715dc386bd371de84836481e70f13
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 13 16:06:10 2020 +0200

    Merge HttpTransportPlugin with Netty4Plugin
    
    Instead of extending the `Netty4Http..` classes with sub-classes we can
    now simply extend the functionality as needed.

commit fe8bd52d6bc4e7a989f775f9cd0f89fe43c6b38a
Author: Markus Holtermann <markus@crate.io>
Date:   Wed May 13 10:45:46 2020 +0200

    Included that AL privileges are part of ALL PRIVILEGES

commit 20e990f3917560f63aa84445372f8dcf9a4e408b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 12 16:52:50 2020 +0200

    Make column value lookup lazy
    
    The `LuceneCollectorExpression` implementations already loaded the
    values on `setNextDocId`. This is a huge performance cost if the value
    is not used.
    
    This is for example the case in the `GroupByOptimizedIterator` when the
    group-key doesn't appear in an aggregation.
    
    It is also the case for aggregations like `arbitrary` or could be the
    case when `HAVING` and a sub-set of the row is used to determine if the
    row should be excluded.
    
        Q: select "TagKey" from texttest group by 1
        C: 1
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |     2660.127 ±  349.842 |   2400.170 |   2551.109 |   2616.811 |   3955.798 |
        |   V2    |      232.981 ±   34.012 |    174.144 |    238.127 |    247.981 |    343.805 |
        mean:   - 167.79%
        median: - 165.85%

commit d85b0ca3e3f6745bfe2f5bcb91c77f35d114b3c8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 12 16:24:07 2020 +0200

    Merge CrateCommonPlugin into SQLPlugin

commit 3e7490b0fef082ed3cb8213c7a441129c60fb1ff
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 7 15:35:28 2020 +0200

    Integrate es-server into server

commit 16857998dff6024193471974c24cc2c9b530cec0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 7 15:00:21 2020 +0200

    Integrate common, blob, http and es-transport into server
    
    Continuation of https://github.com/crate/crate/pull/9932
    
    All of these have to be integrated at once to avoid cyclic dependencies.

commit cc58d85413eb55ab10a3d3da1a87b40e954a467a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 7 09:58:24 2020 +0200

    Integrate udc module into server

commit 60581d0564869da8c2a53dd35c7a386b04511134
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 8 19:18:36 2020 +0200

    Update gradle to 6.4
    
    https://docs.gradle.org/6.4/release-notes.html

commit c6e191636254bc542eafb5047ccbd77ef7ef0f40
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Wed May 6 16:45:07 2020 +0200

    Prune config (no longer needed)

commit 8120beec545b153566e01f22301ae31a4c4d39f3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 7 09:38:06 2020 +0200

    Rename sql module to server

commit 3a925566ef89bfffd537fdc3a5f47998c86a6ad7
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed May 6 14:31:55 2020 +0200

    Remove unneeded type constraint from subsctipt_obj signature.

commit bcdc9508bceae295217fc3db8355a126fd6c4cdd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 6 22:07:22 2020 +0200

    Fix sql tests
    
    ad6be58021ff31b153c09c589ffb662a23b9d96e broke the tests

commit 8f53a0cba7a00430c13596a2f928762e6d861a2d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 6 15:06:48 2020 +0200

    Move es-plugin-classloader into libs folder

commit ad6be58021ff31b153c09c589ffb662a23b9d96e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 6 15:03:44 2020 +0200

    Move sql-parser to libs folder

commit 834d5d0c09dd4b9eacfe04c1f10e07540d857570
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 6 14:59:24 2020 +0200

    Move es-analysis-phonetic into plugins folder

commit a8e5e67ed199f0fd13b4fe0e105f28cc5594ada4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 6 14:58:17 2020 +0200

    Move es-analysis-common to plugins

commit ff15a2e6fa6b1aada197a98b3223b2c36ec28591
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 6 14:52:47 2020 +0200

    Move es-x-content to libs folder

commit ed9e58364077bb7b144b6b73821a46b30c030b1b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 6 14:36:42 2020 +0200

    Merge es packages in libs/shared into crate packages

commit 7979ceee2725554ef8692e6ce2eeb345dbf4db15
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 6 14:05:27 2020 +0200

    Integrate es-core into libs/shared

commit 97b13a370cf4668fb1739a382aaf7937932cfef9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 6 13:46:14 2020 +0200

    Remove Nullable annotation from es-core
    
    In almost all places the Nullable annotation from findbugs:jsr305 is in
    used.

commit 1496d6e2cdb329acd05840b0c67c14d1f9987a8e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 6 11:53:14 2020 +0200

    Move es-repository-hdfs to plugins

commit 0a71a0b48d29559d9b5de94ddfb1a447fdfed1d5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 6 11:48:34 2020 +0200

    Move es-repository-azure to plugins

commit c20756f24760a41db1c4031e23b1c983adae9215
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 6 11:47:20 2020 +0200

    Move es-repository-s3 to plugins

commit ca515246cf9ec02c92faeafba5f43bb542b70b1b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 6 11:46:05 2020 +0200

    Move es-repository-url to plugins

commit 5dd57d73cd1a67025c17acd4b231dfb2c8b866a3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 6 11:44:57 2020 +0200

    Move es-discovery-ec2 to plugins

commit 7bc7e8c6549906291af2cfcda9438570502159ce
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 6 11:40:06 2020 +0200

    Move azure-discovery to plugins folder

commit d13e9b23e6e7aef300e13f13404df448d0eba4f7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 6 11:38:20 2020 +0200

    Move dns-discovery to plugins/ folder

commit 1a22b4edeaee7986011e26a73602cc6793854648
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 6 11:33:03 2020 +0200

    Remove toUTF8Bytes from Strings

commit 7946394316cbdba39e7e47a532a892b307a1acc9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 6 11:21:17 2020 +0200

    Merge MapBuilder & TreeMapBuilder

commit 1e4b9a3635ee0e759e4ae414b1403c1c812c8e59
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 6 10:55:37 2020 +0200

    Move some components from common to libs/shared

commit 43d2f630bf020a85aecd142ca337feed1126486b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 6 10:17:45 2020 +0200

    Move pgwire to libs/pgwire

commit 6814214331fdaaa5807d33804081c1528828d0db
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 6 10:03:32 2020 +0200

    Move dex module into libs folder

commit ee0e3114f8935c2f89a3fc0f34f3008520367f08
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 6 09:45:53 2020 +0200

    Move shared module into a libs folder

commit 18302cd7f7671d745cd86888ccc35882f9077565
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed May 6 11:47:07 2020 +0200

    Use the static ObjectType instance instead of initializing it on call.
    
    This change prevents us from unnecessary ObjectType object allocations.

commit d9a2c5dadb3ef2e45f9add61f30d4856f4ecddcc
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed May 6 11:07:58 2020 +0200

    Use the new function registry for the subscript_obj function.

commit 89f7f4eb1dcc6eec9e1895729cf0cb1bfae07773
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Mon May 4 11:04:52 2020 +0200

    Extend pg_proc table based on the new function signatures.

commit 990de7be8fbf775373bfd92f84ff194f6219bc06
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Mon May 4 14:57:14 2020 +0200

    Add PostgreSQL any and anyarray data types.
    
    Types are used internally to represent function signature
    type parameters of any type.

commit 54173698acec3418ce90ff8dd3198b86891666f0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 5 21:00:09 2020 +0200

    Remove es/build.gradle

commit 1dbdc0cdf8dc55cd97439f02e8c2896a339b64cb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 5 20:52:07 2020 +0200

    Remove log4j-1.2-api dependency

commit be195696a3977d3e603a505d9fb34dd20c125df5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 5 20:40:58 2020 +0200

    Remove some unused code

commit 1690e749206ffb584a1cde24fa3733aad87cc36e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 4 17:58:28 2020 +0200

    Apply javaModule to es-server

commit 267b298de67ece33e90139930866daf67b37c809
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 4 16:16:45 2020 +0200

    Apply javaModule to es-analysis-phonetic

commit 084129e1984ee60091c5fd82ee4dafa05121193b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 4 16:12:09 2020 +0200

    Apply javaModule to es-analysis-common

commit c16ddd94990d1e2c72173af49233b0b87a717f16
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 4 15:39:29 2020 +0200

    Apply javaModule to es-repository-azure

commit b7c3096c545dc68ebaf95c969669b182333a9146
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 4 15:38:06 2020 +0200

    Apply javaModule to es-repository-hdfs

commit e3c90f9b0289ecb002ae3f6d8566e2fe3aacec44
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 4 15:32:19 2020 +0200

    Apply javaModule to es-repository-s3

commit bd3d8d2bd12d27a5da4ce1e62355aba57c1261af
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 4 15:29:02 2020 +0200

    Apply javaModule to es-discovery-ec2

commit 5052f79e31b11c8f003c9c081c36eef1a057b3ca
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 4 15:17:47 2020 +0200

    Apply javaModule to es-x-content

commit 41e34fb04407152cf093915ec539b51b3bab9c59
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 4 14:48:44 2020 +0200

    Apply javaModule to es-transport

commit 4f74c22fb85309b43e5b076c60ba448ae634d825
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 4 14:43:29 2020 +0200

    Apply javaModule rules to es-core

commit cf61c31bbf36c1caf827baed6b57bee1d7015de8
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Tue May 5 11:49:54 2020 +0200

    Set correct pg_table.typtype for the record data type.

commit a87d031c955aeb482abaa04f02ed328248ed756a
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Thu Apr 30 11:02:58 2020 +0200

    Use the new func registry for the record subsript function.

commit 76504dc079401394d64925c9d1b4818e49ceddb9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 4 14:29:50 2020 +0200

    Remove unused headers and startTimeNanos property from Task

commit f5f7c93bb8beec63032990dcefabcfb4cb720e37
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 30 14:54:05 2020 +0200

    Remove realtime and readFromTranslog flag from Get
    
    The only place where we created a `Get` is in `PKLookupOperation` and it
    always passed `true` for both, `realtime` and `readFromTranslog`.
    
    That means we can remove the two options and simplifly the handling
    within `InternalEngine` a bit.
    
    Encountered this while looking into
    https://github.com/elastic/elasticsearch/pull/48843/ - a candidate for
    backport according to https://github.com/crate/crate/issues/9796 - but
    turns out it doesn't apply to us, as we already allowed reads from
    translog.
    
    The `source` inconsistency mentioned in one of the issues also doesn't
    apply - we don't expose includes/excludes for source. (And could follow
    up on removing the related logic)

commit 69f3114e4e49988c6e8c1f3d025203b340f31d45
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 30 15:52:19 2020 +0200

    Fix ref count handling in Engine.failEngine
    
    Backport of https://github.com/elastic/elasticsearch/pull/48639

commit 1a783f07b02c66997a54aa750de6203910c61da3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 30 15:21:56 2020 +0200

    Remove StatusToXContentObject impl from ClusterHealthResponse

commit c54baf84692a9cb9d300fdfafc5a637ec9c66057
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 30 11:04:26 2020 +0200

    Move the terms index of `_id` off-heap
    
    Port of https://github.com/elastic/elasticsearch/pull/52405 but excludes
    the undocumented setting.
    
    Relates to https://github.com/crate/crate/issues/9796

commit b2b26eab2f8acbe281624322fd302350f3b23b33
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 29 20:13:46 2020 +0200

    Improve some byte array handling spots
    
    BP of https://github.com/elastic/elasticsearch/pull/55844/commits/39013946261ff09a720d274616e1e4c6d1382977
    
    This additionally:
    
    - Removes the `ensureNoSelfReferences` bits from the `XContentBuilder`
      (this is different from Es)
    
    All it does is turn one error (StackOverflow) into a more meaningful
    one. This is programming error related, not user input related, so I
    don't think it's worth paying the price and adding extra branches.
    
    - Adds the `mapContents` method in a different way than ES did.

commit b9ae72fcd3c3497a9da53027f672afbd2e1b9d1a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 30 10:27:47 2020 +0200

    Use reader attributes to control term dict memory usage
    
    Port of https://github.com/elastic/elasticsearch/pull/42838

commit 39063c7f95ef4cd2a7b7da394b2db07143c6e23d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 29 21:09:15 2020 +0200

    Optimize Streams.copy
    
    There were two implementations for `Streams.copy`, one for >= java9
    (using `transferTo`), one for <java9. We never setup our builds to use
    the java9 variant, and since we are already on JDK14 anyway we can just
    use the java9 version.

commit 818e5eb0e0d2500f6c6d6fda4f2840750e549ebc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 21 20:29:44 2019 +0200

    Use native epoll transport on Linux
    
    From https://github.com/netty/netty/wiki/Native-transports
    
        These JNI transports add features specific to a particular platform,
        generate less garbage, and generally improve performance when
        compared to the NIO based transport.

commit c5dab8825057a4c862d32cd768d6f2fc49d5bf44
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed Apr 29 15:11:36 2020 +0200

    Use the new function registry for the match predicate.

commit 8c498c221eab2d8c5e977efde92a0722e376dbd4
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed Apr 29 11:16:07 2020 +0200

    Use the new func registry for the not and is null predicates.

commit c543ff7fe150a4dee2f227841806d96cad4c1bf4
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Apr 28 17:06:03 2020 +0200

    Add sys.columns to aliased relations

commit b879820f941eba2c2039d2dfd6147db0c1f9b9a9
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Mon Apr 27 18:10:13 2020 +0200

    Merge in content from old CrateDB Guide docs project

commit 468e81c77d0c7302a2443e10160845aa50b7cdd3
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Fri Apr 24 13:25:33 2020 +0200

    Use the new func registry for the unnest function.

commit 866237c92f7014646224bac44d5bb05c5aae204b
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Fri Apr 24 13:24:02 2020 +0200

    Use the new func registry for the _values function.

commit d6a74bbff6df2cc810c789367407f56bf7237bac
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Tue Apr 28 15:16:37 2020 +0200

    Fix signature parameter binding for nested variables of any type.
    
    This change fixes the corner case in the signature parameters binding
    when the type variable constraint is a type variable of any type, has
    the variable arity > 1 and used as a nested param of the function param
    type signature. For example, the following declared signature
    
    ```
    Signature.builder()
        .argumentTypes(parseTypeSignature("array(E)"))
        .typeVariableConstraints(List.of(typeVariableOfAnyType("E")))
        .setVariableArity(true)
    
        .name(...)
        .kind(...)
        .returnType(...)
        .build();
    ```
    
    would be previously bound incorrectly with parameters types. e.g.
    
    ```
    List.of(
        parseTypeSignature("array(integer)"),
        parseTypeSignature("array(text)")
    )
    ```

commit a5d9cc1228166223b14af26234470df8a2c0aac7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 29 10:16:07 2020 +0200

    Update jdbc to 42.2.12

commit 0afee455093ebcf5060ab643617e1fd6e3e685d1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 28 14:57:55 2020 +0200

    Migrate sys.shards to SystemTable

commit 0a63b2fdf2253c91015a25b35abe87c993337018
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 27 15:04:13 2020 +0200

    Migrate SysClusterTableInfo to SystemTable
    
    This also upgrades mockito so that `Mockito.CALLS_REAL_METHODS` works on
    interfaces with default methods.

commit 9c526d6f268403c666966097b942276499848e15
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 23 19:45:00 2020 +0200

    Migrate InformationTablesTableInfo to SystemTable
    
    This also changes `tableParameters` from a `Map<String, Object>` to
    `Settings`. That avoids some copy operations when we create the
    `DocTableInfo` instances and also makes it easier to reason about the
    types of the values.

commit dec99cf03780a7ac35542ca0a7a16d0e5755f8de
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Mon Apr 20 11:48:46 2020 +0200

    Use the new function registry for the hyperloglog aggregation.

commit 52a1334df0ce16db7e44f88153f2a440d19592e6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 27 10:54:46 2020 +0200

    Migrate SysNodeChecksTableInfo to SystemTable

commit 28a7441a086b4683fc03d39c4889926987cc6200
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 27 10:37:15 2020 +0200

    Migrate SysRepositoriesTableInfo to SystemTable
    
    This will also allow queries like:
    
        select settings['bucket'] from sys.repositories
    
    Which previously failed with:
    
        ColumnUnknownException: Column settings['bucket'] unknown

commit 7a63659057f9fddb04b55ce841f172a87c263320
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 27 10:29:13 2020 +0200

    Migrate PgTypeTable to SystemTable

commit 33fd5d27ecd5c721e7c7529b6bf0c9479a6c9489
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 27 10:25:00 2020 +0200

    Migrate PgStatsTable to SystemTable

commit 9b71963ae26dcc7f245adf8e1418082c5b58a644
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 27 10:19:09 2020 +0200

    Migrate PgSettingsTable to SystemTable

commit 7c46d9f25d8b54e03c350bb8195199a1469b3644
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 27 10:17:07 2020 +0200

    Migrate PgNamespaceTable to SystemTable

commit e41b801738ace7e9f244229532e9e1beddd8f1c8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 27 10:12:00 2020 +0200

    Migrate PgDescriptionTable to SystemTable

commit c07fe515b772c0f8fa6cdfb6ab2e2861807c0c95
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 27 10:07:27 2020 +0200

    Migrate PgDatabaseTable to SystemTable

commit 04237f639d9e2b4b9f9b7dd4c713bd558fd1d4b6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 27 10:00:08 2020 +0200

    Migrate PgConstraintTable to SystemTable

commit 91265d93747ec4e844391e481970cd536935c3b8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 27 09:47:48 2020 +0200

    Migrate PgAttributeTable to SystemTable

commit 043d70d3c86069bac736e071a81bc79fd33d525b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 27 09:44:33 2020 +0200

    Migrate PgAttrDefTable to SystemTable

commit 5bccbce91eb6116e4fb2bf07e9802b7064b763d8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 27 09:32:56 2020 +0200

    Migrate InformationViewsTableInfo to SystemTable

commit 1d3ac733f9ac48ed8c29e02220ff3262f9e53d98
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri Mar 27 14:22:54 2020 +0100

    Optimise return values in upsert request

commit 2f44d7b496a927062e2adfca497162a5995ab667
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 24 11:58:48 2020 +0200

    Move ObjectBuilder and ObjectArrayBuilder out of RelationBuilder
    
    Reduces the amount of nesting.

commit 2114907b54818fecc2dcdacdc3e0354841dc8e17
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 23 17:40:02 2020 +0200

    Migrate InformationTableConstraintsTableInfo to SystemTable

commit 424cd8f3180d6c6fe8dcafdc4b9b446e9f7361db
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 23 17:35:02 2020 +0200

    Migrate InformationSqlFeaturesTableInfo to SystemTable

commit 7988d55af145e5d3625ced62a93fafaf46f7e152
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 23 17:29:01 2020 +0200

    Migrate InformationSchemataTableInfo to SystemTable

commit 0c3feabc129bf442f77e2a2ece8b1911f3dd2c99
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 23 17:23:32 2020 +0200

    Migrate InformationRoutinesTableInfo to SystemTable

commit a86debcc8d4e8039b4890d4827e453941ea34fe6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 23 17:19:16 2020 +0200

    Migrate InformationReferentialConstraintsTableInfo to SystemTable

commit 5ed808370bace035f53ca52d553468aa548e3fb9
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Apr 24 08:56:12 2020 +0200

    Fix most specific function selection by exact type matches
    
    The logic to select the most specific function signature by the number
    of exact argument type matches did not work correctly when more than 2
    applicable signatures exists.
    
    Follow up of 764eb4e2ef9424c085993b20d5365ad619bfd933.

commit 002651ef3a7e16b524ba84507b3cef0fdbe878ac
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 24 11:01:23 2020 +0200

    Reflect 4.1.5 release

commit a39f14e6fcba7c99cc11474a08ae17f1fcce6db1
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Thu Apr 23 10:51:32 2020 +0200

    Use the new func registry for the generate_series function.

commit f36a9d5ea8eb015bdc3fa130fb18bc8b623761b8
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Mon Apr 20 16:22:12 2020 +0200

    Use new function registry for the pg_get_keywords function.

commit b056ac7883151469723eb322713fddedf53659bf
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Mon Apr 20 16:20:53 2020 +0200

    Use new func registry for the empty row table function.

commit e0f8501b238b4aa01cb83f0716f41273f14ad8c2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 23 17:06:10 2020 +0200

    Update netty to 4.1.49
    
    https://netty.io/news/2020/04/22/4-1-49-Final.html

commit ad65f9980653d9fe39e6c7ae7d886d3d76f06849
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 23 10:51:14 2020 +0200

    Don't set netty SSLContext as default context
    
    `SSLContext.setDefault(sslContext);` changes the global SSLContext,
    which also means that the `trustManagers` would be used for COPY FROM
    from `HTTPS`. If the `trustManagers` are empty that leads to a `No
    X509TrustManager implementation available` error.

commit d3fb5b6cc7d736e7595c8c9254837d6c49ad0064
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 23 11:46:29 2020 +0200

    Tests: Set the keystore type via code instead of via gradle
    
    So that the tests that depend on it can also be run in IntelliJ or other
    IDEs.

commit c0691576ce30c717997f5ec1639de2022cac9ed1
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Mon Apr 20 16:23:19 2020 +0200

    Use new func registry for the pg_expand_array function.

commit 0d5adc08af6d217d8717b83e46cbbe93b6cdb34e
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed Apr 22 15:50:20 2020 +0200

    Add support for the record type signature parsing.

commit 280cb15b80b499f466edb69ab010c89a3225fd1d
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Apr 23 10:33:59 2020 +0200

    Raise error on registering functions with same signature
    
    Also some signature properties are excluded from streaming to lower the
    footprint and won’t be taken into account when resolving functions by
    signature. Thus registering functions which signatures only differ in
    thus properties should raise an error to avoid unexpected behaviour.

commit 8f29abc16157d4421773704cb3c0adecf3036c4c
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Apr 3 16:29:35 2020 +0200

    Add fast function lookup-by-signature support
    
    Add support to lookup a function directly by its declared signature.
    Before that, looking up a function which uses the signature based
    registry, resulted in a full expensive signature match logic.
    This improvement may fix related existing performance regressions.
    
    Function implementations must carry the signature and also the signature
    must be streamable in order for this to work.
    
    We carry now both, a `FunctionIdent` and a `Signature` all through the
    code base to be able to still support the old registry to migrate
    all functions iterative.
    Eventually the `FunctionInfo` (and `FunctionIdent`) should be replaced
    by a `Signature` after all functions are migrated.

commit 14846d49b65a2ac7b6dcb4597534bc20052c4a24
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 22 16:52:34 2020 +0200

    Migrate InformationPartitionsTableInfo to SystemTable

commit 4c91d58e8629d0e70274e56b3f21c3730e5cfbdd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 22 11:40:18 2020 +0200

    Migrate InformationKeyColumnUsageTableInfo to SystemTable

commit 4a41b6e0d76076e0870c1d25223e06bd25489253
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Tue Apr 21 12:53:29 2020 +0200

    Fix the github actions test setup for windows.
    
    Reverts https://github.com/crate/crate/pull/9875

commit bfee27181492b7d042aba2692f37f899cd7cae9c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 21 16:15:29 2020 +0200

    Migrate InformationColumnsTableInfo to SystemTable

commit c7d68d47996b48bb13e6fe964f43637a711a5c2f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 21 11:28:45 2020 +0200

    Migrate SysOperationsTableInfo to SystemTable

commit f487fe74b5e00588a1a0548932e0cb315ed9513b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 21 11:13:40 2020 +0200

    Migrate SysSegmentsTableInfo to SystemTable

commit cac0b6333e39fa99afa3a44868470b78e6a4656b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 21 10:59:52 2020 +0200

    Migrate SysAllocationsTableInfo to SystemTable

commit 6d02e1815a627c97ffecfaba7ea07ecba34280eb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 20 15:38:07 2020 +0200

    Add character varying type alias to text
    
    Related to https://github.com/crate/crate/issues/9868

commit 07661cd4c8fef46c6a4ff4fe51f80ae85e9d9b9f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 20 15:04:56 2020 +0200

    Add a varchar alias to text
    
    This implements the low hanging fruit part of https://github.com/crate/crate/issues/9868

commit 764eb4e2ef9424c085993b20d5365ad619bfd933
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 21 09:52:26 2020 +0200

    Add logic to prefer function signatures with higher exact matches
    
    When no exact function signature can be matched, signature matching will
    be repeated with allowed coercion for all argument types. This can lead
    to multiple applicable functions where some or all arguments will be cast.
    Most specific selection is then made by type precedence, a function with
    more specific argument types than the other will match.
    
    Without taking the number of exact argument type matches, the wrong
    function maybe selected.
    Example:
    
    Registered functions:
    
            foo(double precision, int):int
        foo(int, int):int
    
    User input:
    
        foo(double precision, bigint)
    
    Wanted function:
    
        foo(double precision, int):int
    
    Matched signature by type precedence only:
    
            foo(int, int):int

commit 9f31d34c7da69b68c78466106db1ffb912db7871
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Tue Apr 21 15:49:38 2020 +0200

    Temporary disable windows tests.

commit e853a57925eee2d79c24f0eae001e51ec5d86130
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Mon Apr 20 19:08:56 2020 +0200

    Update JDK to 14.0.1+7.

commit 0099bde632c45cd8023f970dae3508a3bbb8f65a
Author: marregui <miguel.arregui@gmail.com>
Date:   Tue Feb 18 11:54:54 2020 +0100

    Add CHECK constraint syntax to create table statement
    
    A check constraint allows you to specify that the values in a
    certain column must satisfy a boolean expression. This can be
    used to ensure data integrity.
    
    Syntax:
    
      [CONSTRAINT check_name] CHECK (boolean_expression)
    
    E.g.:
    
        create table metrics (
           id TEXT PRIMARY KEY,
           weight double CHECK (weight >= 0)
        )

commit ca16acab25084dae601021b8889910a0d42372b8
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Thu Apr 2 16:27:21 2020 +0200

    Refactor sum agg function to use new function registry.

commit 844ddad12d1d8e25c469404282802eaa5181a855
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Thu Apr 2 16:16:41 2020 +0200

    Refactor statistics functions to use new function registry.
    
    - variance
    - geometric_mean
    - sdv
    - mean/avg

commit b1f9df7131c5c2c0066c047ff59754b0ffddc3c5
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Thu Apr 2 16:11:58 2020 +0200

    Refactor collect_set agg function to use new function registry.

commit caae8765eb394034ef71e66e805da8f0a91fb8e6
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Thu Apr 2 16:11:18 2020 +0200

    Refactor percentile agg function to use new function registry.

commit cbdbf0501a1b875bec7e060e1907d83fd24e7690
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Thu Apr 2 16:10:14 2020 +0200

    Refactor min/max agg functions to use new function registry.

commit e8e87ce8bfc131fec9499f5c1d4d802141a043a0
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Thu Apr 2 16:09:25 2020 +0200

    Refactor arbitraty agg function to use new function registry.

commit d5fc1c7955c908506f0857d132bfeb84fc5e41fd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Apr 19 21:11:26 2020 +0200

    Fix runDebug gradle task
    
    systemProperties weren't initialized correctly. This led to a exception
    once a debug client attached.

commit cd3c15899482bfea7c2698c7430ef0a7cccd16ac
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Thu Apr 16 16:29:35 2020 +0200

    Use new func registry for temporal arithmetic functions.
    
    - interval and timestamps

commit bfee8b5655c70ebc5c8639f449a64888f8289d76
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed Apr 15 15:17:35 2020 +0200

    Use new func registry for the if function.

commit 529401188c4d0c2d403f4f2b8bdd778d9333c33e
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed Apr 15 15:15:48 2020 +0200

    Use new func registry for greatest, least, nullif, coalesce.

commit 8133ffd16c39a7e2a626fd886ede5847b3b271af
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Thu Apr 16 10:37:47 2020 +0200

    Update Antlr to 4.8-1

commit 7c0f4035c80a26b6b3940f179af5e739d527ea20
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed Apr 15 15:37:24 2020 +0200

    Use bundled JDK for run and runDebug Gradle tasks.

commit 175ba1a64f23e9ffe43d32c63a44ae3afed95a57
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed Apr 15 11:09:22 2020 +0200

    Fix bug in selecting license object column.
    
    Selecting the license object column from sys.cluster results
    in the row with the object that contains null values for its
    keys even though the license is set and the access to each of
    the license object key separately return the correct result.

commit 47187777e4c5e1929da7ea7b5b4a1530cf35b2f6
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Thu Apr 2 11:04:43 2020 +0200

    Drop guava dependecy from sql-parser.
    
    Remove the Guava dependency from the sql-parser module.
    
    The library was mainly used to check preconditions
    (checkNotNull, checkArgument), implement equals/hashCode/toString
    methods, and as well provided a couple of util methods to join
    strings, etc. Such as all of the above can be easily replaced with
    `java.base` there is no reason to depend on Guava in the sql-parser module.

commit 765571dbd38578698d44798959c9193f4050321c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 9 16:05:59 2020 +0200

    Fix OFFSET application for UNION with ORDER BY
    
    The logical plan was correct, but the offset of the Limit operator was
    passed down too far.
    
        Limit[100;1]                          // Due to the offset application below, OFFSET 2 was already applied *before* the LIMIT operator
          └ Union[id, num]                    // passed down (limit + offset) as limit BUT also offset (1)
            ├ OrderBy[max(num) AS num ASC]    // Resulted in a OrderedTopN with limit 101, offset 1
            │  └ Eval[id, max(num) AS num]
            │    └ GroupHashAggregate[id | max(num)]
            │      └ Rename[id, num] AS t
            │        └ TableFunction[unnest | [col1, col2] | true]
            └ OrderBy[max(num) AS num ASC]    // Same as above
              └ Eval[id, max(num) AS num]
                └ GroupHashAggregate[id | max(num)]
                  └ Rename[id, num] AS t
                    └ TableFunction[unnest | [col1, col2] | true]

commit e06ad1dd190026a74f7612d52c03a6d6bfd6c2c4
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Fri Apr 3 12:59:32 2020 +0200

    Use new function registry for the row_number window function.

commit d237a2d54004cfb73cfaed78259127c06be6b255
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Fri Apr 3 11:19:27 2020 +0200

    Use new function registry for offset window functions.

commit 841bc53ac5a8849b21fc33f29421245b631a0fd3
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Fri Apr 3 11:19:11 2020 +0200

    Use new function registry for nth/last/first value window functions.

commit adfbd9a70a8a47e5187d0dc50cacf6aa0371f7e9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 3 10:32:59 2020 +0200

    Fix ordering on IP columns and scalar functions
    
    All the `DataType.compare` implementations had baked in `null` handling.
    This broke the `NULLS FIRST` / `NULLS LAST` handling.
    
    For example, the query:
    
        select name from t order by substr(name, 1, 1) nulls last
    
    Returned nulls first.
    
    If columns of type IP were sorted on Lucene level, it used a binary
    doc-value based sorting, which has a different ordering than the text
    based alphanumeric ordering that is used for IP types in other places in
    the pipeline. This switches IP types to use the `InputFieldComparator`.
    This may slow down the sorting, but it is necessary to ensure consistent
    ordering.
    
    Fixes https://github.com/crate/crate/issues/9842

commit 3e999b8e3cc8d82fc135757a5bdd01adb2acfd7b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 2 19:32:26 2020 +0200

    Use generics in DataType/Comparable

commit 801fcc9b1e070a209197e985ee2e8c168c1a0ec1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 2 18:35:40 2020 +0200

    Change DataType to implement Comparator

commit 97d1d64298e4898b03c11164ba6c0c963cc3cbd7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 2 17:46:13 2020 +0200

    Move null sentinel value functions into one class

commit 7b7cb7f6d480a7e77fa4dc640b7b03fae7c7e543
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 2 16:41:47 2020 +0200

    Fix warnings + minor style changes in SortSymbolVisitor

commit 91795c06d68ae6b0289ccd383191aa6df12723ee
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Apr 2 16:17:13 2020 +0200

    Add support for selecting most specific function
    
    If given argument types won’t result in an exact match of a registered
    function signature, multiple signatures may match with allowed coercion.
    Till now, the first matching signature is used which may be wrong as
    this relies on the order of signature registrations.
    
    Hereby we introduce a logic to select the most specific one based on type
    precedence, the signature with the lowest precedence of the types will
    be used.
    If that fails it will fallback to select just the first one if all
    signatures defines the same return type. All signatures are then
    semantically the same, so it shouldn’t matter which one to choose.
    To be deterministic, the first one is chosen.
    
    The last fallback happens when all given types are undefined but
    multiple matching candidates still exists after trying to select the
    most specific one.
    This case currently only happens for `concat(null, null)`, it matches
    both:
    
            `concat(text, text):text`
            `concat(array(E), array(E)):array(E)`
    
    because an `undefined` type is convertible to `text` and `array(E)`.
    
    In that case we also just select the first matching as the
    `concat(text, text)` was registered first and is the expected one
    (`concat(null, null)` must return an empty string).
    Maybe we can come up with a better solution for that eventually.
    
    This is again heavily inspired by Presto.

commit 998b7840187f9651925cb64f2d344d36c996d7ae
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Apr 2 13:09:04 2020 +0200

    Test: Fix NPE on parsing Byte values when executing via PG

commit 478e8e6857feb2fbac8619ba7e82a8a91971b7c0
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Apr 2 13:07:28 2020 +0200

    Add missing type precedence for timestamp types

commit b78d9736307ee63a5523a50c23b8b40168fc7cec
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 2 20:17:11 2020 +0200

    mergify: Add ignore_conflicts option to backports

commit 547eeda78fb02adeaa8a2c24adfd9742f5eabeec
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Thu Apr 2 12:56:00 2020 +0200

    Add a shortcut for building aggregate function signatures.

commit 6a30696f04357084e1c7892659f09437ea0748a5
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Thu Apr 2 10:52:13 2020 +0200

    Refactor string_agg function to use new function registry.

commit aa0c05e9ead609c41d3cbdae3e4b182aacce4734
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Thu Apr 2 10:51:55 2020 +0200

    Refactor array_agg function to use new function registry.

commit 1183ae12bc907d571efb94812ab28e8d20cd8ef4
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Wed Apr 1 16:54:02 2020 +0200

    Refactor count function to use new function registry.

commit 25ada36f58803016d61dd9c8918c3f33d709b2bb
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Mon Mar 30 13:56:56 2020 +0200

    Refactor cast scalars to use new function registry.

commit 8ce9ae1425f396285b8e6d6efe8d4c27354ca53a
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Tue Mar 31 21:13:34 2020 +0200

    Fix setting inner object type names in TypeSignature#createType.

commit f1b5e03a0592e8ba73c7dd0b5823df6f71de218d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 2 12:05:00 2020 +0200

    Optimize IS NOT NULL queries
    
    The `_field_names` index also exists for object columns. So we can
    always use `ExistsQueryBuilder.newFilter` for `NOT (<ref> IS NULL)`
    queries.
    
    This significantly improves the performance:
    
        Q: select min(obj['x']) from tbl where obj is not null
        C: 1
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |     8134.572 ± 5422.497 |    294.628 |  11127.396 |  11463.783 |  12676.666 |
        |   V2    |       87.163 ±   17.929 |     51.363 |     80.865 |    100.901 |    107.858 |
        mean:   - 195.76%
        median: - 197.11%
        Likely significant

commit 8fdeb380f3d082c21e309ee36798e88582bb9b2b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 2 11:26:40 2020 +0200

    Fix some raw type warnings

commit c8bdfc115a45e63d70d5644f853268c3ab632880
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 2 11:19:28 2020 +0200

    Extract NotQuery into a separate file

commit a540e0c0a38e2d6b8e0ca67063f3c91d18563296
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 1 12:49:24 2020 +0200

    Integrate row accounting into HashInnerJoinBatchIterator
    
    The HashInnerJoinBatchIterator already had a concrete dependency to
    RamAccountingBatchIterator, so the RamAccountingBatchIterator never
    acted as a "transparent" abstraction.
    
    Given that the knowledge about which rows should be accounted is always up
    to the implementation of another component, I think having a generic
    RamAccountingBatchIterator doesn't make that much sense.

commit e1f6e30b99ed6b79372be2d0cfeebdbabc6b231c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 1 16:38:18 2020 +0200

    Fix warnings in UpsertResults

commit 8c3b7af57b69c5cbfa6cbcc3a5832b7a15e0b2bc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 26 09:28:50 2020 +0100

    Fix raw types warning in DocSysColumns
    
    `DataType` → `DataType<?>`

commit 123dfcd3a64fee2c824b01fed237a4fb1e78f2c2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 1 15:20:19 2020 +0200

    Update jackson to 2.10.3
    
    https://github.com/FasterXML/jackson/wiki/Jackson-Release-2.10

commit 4aee8365a89dc9c521764972e5472a14f92bb704
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 1 10:37:14 2020 +0200

    Use netty IntObjectHashMap insteaf hppc in HashJoin
    
        Q: select * from articles inner join colors on articles.id = colors.id order by articles.id limit 1000
        C: 1
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |       60.402 ±  124.007 |     32.365 |     37.800 |     40.875 |   1478.716 |
        |   V2    |       37.489 ±    3.815 |     33.840 |     35.839 |     39.411 |     57.288 |
        mean:   -  46.81%
        median: -   5.33%

commit f9e4c325dac3e3f0f2bae3f9ff6ca7ce06b4a517
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Mar 26 14:35:56 2020 +0100

    Refactor format, ignore3vl, pi, substr  to new function registry

commit 8be09e603ef5e4341e389f077b8f41d561acfb78
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 31 16:23:23 2020 +0200

    Move ramAccounting/memory release closer to acquire

commit 98f04769928a21c0bd16afd7471ec7e5529fcc31
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 31 16:07:53 2020 +0200

    Use BlockBasedRamAccounting for projections
    
    Using `ConcurrentRamAccounting` directly has a large performance
    overhead. See https://github.com/crate/crate/pull/9830

commit 08607816c6f30703720e2413b49341108e12e51d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 31 10:44:05 2020 +0200

    Split calculateBlockSizeInBytes for the non-sharded case

commit 898b5c78acdcf2e117e6332103ecb08eda8c6c74
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Mar 26 10:27:52 2020 +0100

    Refactor all array scalars to new function registry

commit a661261609ec73382cbc17b8d0eed2fa5605d353
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Mar 25 13:08:18 2020 +0100

    Refactor all system information scalars to new function registry

commit 45be4c3e619b94c7e4d697422a10edc8ac33aa8d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 31 15:00:56 2020 +0200

    Use PKLookup for COPY TO if possible

commit dc747ec8261b6356bb5530a295b30c9d0a84399b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 31 14:52:47 2020 +0200

    Use shard projections on top of PKLookup

commit 253934dd5e53d75d5dff139c2429f504e724d7dd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 31 11:20:11 2020 +0200

    Unify lookup methods in PKLookupOperation

commit 858f216fc74ff5f868f8cd614332b1262d60297a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Mar 22 17:11:39 2020 +0100

    Update JDK to 14

commit f4d143f4e615f9247a02aa36ac237c320528d58a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 30 18:48:40 2020 +0200

    Use BlockBasedRamAccounting for HashJoin operation
    
        V1: 4.2.0-ac8af037f046b1a7c8a8167dea4d6381348e1c8a
        V2: 4.2.0-a0d2624c739a8e456db99e53891416196c06c7f4
    
        Q: select * from articles inner join colors on articles.id = colors.id order by articles.id limit 1000
        C: 1
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |      129.933 ±   26.256 |     91.958 |    125.718 |    128.930 |    347.124 |
        |   V2    |      100.603 ±   31.283 |     63.374 |     94.106 |     99.388 |    422.406 |
        mean:   -  25.45%
        median: -  28.76%

commit 9954b09f00722790e7fedd461b552a8f26b6d6d6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 30 17:37:05 2020 +0200

    Use BlockBasedRamAccounting for nested loop
    
    Using `ConcurrentRamAccounting` per row is expensive:
    
        # Results (server side duration in ms)
        V1: 4.2.0-ac8af037f046b1a7c8a8167dea4d6381348e1c8a
        V2: 4.2.0-21a155bf0387798958bf6eaf2c27585784cea62f
    
        Q: select * from articles CROSS JOIN colors limit 1 offset 10000
        C: 1
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |       61.793 ±   10.154 |     39.975 |     60.937 |     63.207 |    176.193 |
        |   V2    |       13.667 ±    8.858 |     10.774 |     12.397 |     13.342 |    133.641 |
        mean:   - 127.55%
        median: - 132.38%
        Likely significant

commit 78285d64c8c61c56f73fd0505a34de4095a53bf0
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Mar 25 15:54:08 2020 +0100

    Refactor all time/date scalars to new function registry

commit 78fb751677b7fca0960af30a6d2a45d093ca724e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 30 14:15:58 2020 +0200

    Trim remove prettyPrint and reformat flags from convertToJson
    
    All callees called the method with both arguments set to `false`.

commit 5994de96a7c6da756b343861c19600c0fdae5709
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 30 14:04:31 2020 +0200

    Avoid tuple construction to parse xContent to Map

commit 4902037109f4dcae5b33608ac5a48ffa41c966bc
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Mar 25 12:51:14 2020 +0100

    Refactor all string scalars to new function registry

commit 2cc9652d7327afdf22d725f0fce1c51f8e6f14f2
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Mar 25 11:33:51 2020 +0100

    Refactor all regex scalars to new function registry

commit ddfafbedba281cb33ee9dfc16b4be1acc207b87a
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Mar 25 10:07:01 2020 +0100

    Refactor all geo scalars to new function registry

commit 1b6f8c7f9ea68be93dab7d3af3ecccece09affc4
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Mar 25 11:21:31 2020 +0100

    Refactor all postgres scalars to new function registry

commit 89a24683c41dfbc0b3f3e7c6b37a028f2a0d68ff
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 30 11:05:06 2020 +0200

    Remove unused declarations

commit 57134ec91d976717becfe9e5206cd53a9f4512f0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 30 11:27:16 2020 +0200

    Use source lookup in fetch operations
    
    We used source lookups before the temporary removal (https://github.com/crate/crate/pull/9669)
    Current latest-nightly has a slight performance regression because it
    doesn't use source lookups:
    
        # Results (server side duration in ms)
        V1: 4.1.4-6a9f8ebc5fefd63f666caa6f28e29b4b214ac7fc
        V2: 4.2.0-ac8af037f046b1a7c8a8167dea4d6381348e1c8a
    
        Q: select * from uservisits limit 10000
        C: 1
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |      231.951 ±   14.242 |    201.630 |    235.172 |    238.319 |    403.620 |
        |   V2    |      267.224 ±   16.661 |    256.903 |    262.904 |    268.173 |    471.655 |
        mean:   +  14.13%
        median: +  11.14%
    
    With this change:
    
        V1: 4.1.4-6a9f8ebc5fefd63f666caa6f28e29b4b214ac7fc
        V2: 4.2.0-7b5543f3871db75290e72c93ce7ba7486be42f3c
    
        Q: select * from uservisits limit 10000
        C: 1
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |      230.902 ±   14.987 |    200.985 |    234.900 |    237.986 |    388.713 |
        |   V2    |      203.228 ±   11.706 |    197.643 |    200.649 |    202.306 |    409.048 |
        mean:   -  12.75%
        median: -  15.73%

commit 847bb99d63ad28029746544693604fc9494ef6e0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 27 14:39:29 2020 +0100

    Update estimated row size of Collect after prune or fetch rewrite
    
    Column pruning or fetch rewrite reduces the size of a row. That should
    be reflected.

commit dbde0a55ce1f9f65b4a7fc97a4f795e0634eb3ab
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Mar 29 19:06:17 2020 +0200

    Avoid HashMap creation for CSV to JSON conversion
    
    measureCsvParser_new  avgt   25  16.427 ± 0.211  us/op
    measureCsvParser_old  avgt   25  21.636 ± 0.156  us/op

commit ac8af037f046b1a7c8a8167dea4d6381348e1c8a
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Fri Mar 27 15:18:48 2020 +0100

    Fix flaky testConcurrentFunctionRegistering.
    
    Reverted the modification in `Functions#registerUdfFunctionImplementationsForSchema`
    introduced by https://github.com/crate/crate/pull/9808

commit 144fe2df48e4880211d5d5f46a0f8948e4e4fc82
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 27 15:05:00 2020 +0100

    Early return if no global checkpoint listeners
    
    Port of https://github.com/elastic/elasticsearch/pull/53036/commits/5b3e1a0fba668ed4e914b280ee3fe284c94b5329

commit ec63cdf4411e95d992b17a27bb8f81ab1525fa2b
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Mar 24 17:12:35 2020 +0100

    Refactor most arithmetic scalars to new function registry

commit d3b834f96a354b7b05049f29dabf402133059e67
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Thu Mar 26 15:37:14 2020 +0100

    Refactor UDF scalars to use new function registry.

commit a5801039635e334d8be1ae8a46e0e03551893e36
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 25 17:36:44 2020 +0100

    Add rewriteToFetch support to rename operator

commit 2b1633cc0ecbb31e7e29e3f972b49b16319d03de
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 26 10:15:42 2020 +0100

    Add rewriteToFetch to HashJoin

commit 315253f80106df2bd4b0bb3fb0cd352019a250e7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 26 10:07:35 2020 +0100

    Add rewriteToFetch to Eval

commit 6287124a8c684cd4e508e50bbedcae18e4ec1cc8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 26 09:30:24 2020 +0100

    Update gradle to 6.3
    
    https://docs.gradle.org/6.3/release-notes.html

commit 4666ab27e1f2059646b545f5b03c6b86c0f85855
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Mon Mar 23 18:05:52 2020 +0100

    Update admonition to link to tutorials section

commit fb5a401125bac0f12f29e6773710ed467e43a9f6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 18 18:24:35 2020 +0100

    Migrate to junit5 / JUnitPlatform
    
    Adds junit5 and switches gradle to JUnitPlatform.

commit 72309e9d401eb5c2de00f8a236174d31ed98346e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 25 14:19:12 2020 +0100

    Support fetch rewrite for NestedLoopJoin

commit 430ca591e16f276d7acca4dbf58489d7f9c592e5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 25 13:45:54 2020 +0100

    Enable query-then-fetch for Limit → Order → Collect

commit c79e587eb5b2310b951bf220340c5120049bd137
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 25 12:59:30 2020 +0100

    Make fetch rewrite rule propagate through the whole sub-tree

commit 9ebcc9597c24190e00fa38e4286cc3f9ecf9ecc5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 25 10:22:06 2020 +0100

    Add an assertion to limit allocated bytes for current thread

commit 674d707ddd601b67d18d63db861a72420678c8bd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 25 10:32:20 2020 +0100

    mergify: Remove delete branch action
    
    Activated the Github option to delete head branches instead.

commit 9de8dd194834cf15a4c6b5c7a3fbc1b17172967a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 24 16:41:31 2020 +0100

    Use column stats to derive size of a row in collect operator

commit 9c6983ab26de5128a33c6ed6412ac33fac092cf5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 24 16:21:58 2020 +0100

    Fix baseTables unchecked warning in plan operators

commit 363fdc269d28ac4c273be30ae797a743de58b9d6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 24 16:42:30 2020 +0100

    Update Lucene to 8.5.0
    
    https://lucene.apache.org/core/8_5_0/changes/Changes.html

commit f86c0cf32a3ae45ccf566fb1c0426f46ccdf145b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 24 16:56:18 2020 +0100

    Remove lucene-spatial
    
    It's going to be removed in Lucene 8.5
    See https://issues.apache.org/jira/browse/LUCENE-8369
    
    ES replaced it in a different way, see
    https://github.com/elastic/elasticsearch/commit/a8870ef98c9a25961914b408f25d27dabd3a5a11

commit 7b8326fbf9385fd8017f552ec87ad6b95f6bca86
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 24 16:13:11 2020 +0100

    Remove unused ExpressionToXYVisitor

commit f34ff334f00d9309d0d16f69c400297d7cb417ec
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 2 17:28:03 2020 +0100

    Use postgresql jdbc client instead of crate jdbc

commit 90d7d2bfd2937ccf1a1b2aee640b53bbb764d1c7
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Mar 24 13:26:44 2020 +0100

    Fix exact matches of function signatures
    
    In order to support correct function signature overloading, signature
    matching must be done in 3 steps:
     1) try exact candidates (no type variables, no coercion allowed)
     2) try generic candidates (with type variables, no coercion allowed)
     3) try all candidates with allowed coercion
    
    Follow up of 507cf5d7320b6d2cb29290fd72a0b7076a8c4842

commit 4078622d083d61c93a1b29c9a229c066e8b3e31a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 24 10:51:47 2020 +0100

    Revert "Update minimum wire compat version to 4.1"
    
    This reverts commit 06f8f2e1acf0c60ac839bd2427a31d91043fcbaf.
    
    It broke the rolling upgrade tests because nodes use their
    `minimumCompatbilityVersion` initially in the handshake. See
    
    https://github.com/crate/crate/blob/master/es/es-server/src/main/java/org/elasticsearch/transport/TcpTransport.java#L1384
    
    So a 4.1 node sends 4.0 as version.

commit 30b5e4950ed4548b4c1039adc46255bcf4fe604f
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Feb 28 12:01:20 2020 +0100

    Add new signature based function registry
    
    Signatures can be defined with type variables constraints to support
    constraints across given argument types, e.g. a `array(E), array(E)`
    signature requires all `E` types to either have a common super type or
    being convertible.
    Special logic of literal downcasts (avoid table-scans) is omitted,
    this should be re-implemented decoupled later on.
    
    Each function can be registered with different signatures (function overloading).
    The registry can be iterated to get all registered signatures.

commit b53e3911e240f0cd9dc6bef0541cc07c2a67a117
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Mon Mar 23 15:06:13 2020 +0100

    Add the `releaseZip` gradle task.

commit 5321bf48ec6c269a5f07b61707d66a48a1c58d3e
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Mon Mar 23 14:21:31 2020 +0100

    Add the ``useSystemJdk`` parameter for gradle compile and test tasks.
    
    By default the bundled JDK is used to compile code and run tests.
    The new system parameter makes Gradle to run its compile and test
    task with the host system JDK.

commit 60ab2a6b7216fbf162caa8e67c75f1b7b111abaf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 23 18:32:02 2020 +0100

    Use small block size if table stats are not available
    
    For system tables there are no table stats. This caused the hash join
    operation to default to 500_000 as block size, which is way too much for
    small tables. A lot of time is then spent creating hash tables which
    caused a couple of joins on system tables to take several seconds.
    
    This adds a much smaller fallback block size.
    
    `test_select_from_virtual_table_with_window_function_and_column_pruning`
    ran into timeouts because of this.

commit 06f8f2e1acf0c60ac839bd2427a31d91043fcbaf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 19 17:25:25 2020 +0100

    Update minimum wire compat version to 4.1

commit e62a5c5fb6e198623e280011b3b6abb5abd1b26a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 20 11:37:45 2020 +0100

    Remove unnecessary throws IOException in CompressedXContext.string()
    
    Port of https://github.com/elastic/elasticsearch/commit/43d6ec8bcd7a15aa81e38cc6ed7d651d7a77fb73

commit 189f544ea00233456dae89c9048a902c5872a6cb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 20 10:26:10 2020 +0100

    Quiet down shard lock failures
    
    Port of https://github.com/elastic/elasticsearch/pull/46368

commit 14703bf88a31a64c145d5bcf0c1a3b776c0504c5
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Fri Mar 20 11:59:55 2020 +0100

     Rename platform to os in JDKDownloadPlugin.

commit e4e20d0b5dc63c05149c5082f6cdc7a02ea137aa
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Fri Mar 20 11:27:40 2020 +0100

    Add support for setting architecture for the JDK bundle.

commit 70c694d8da4b9c5a2d88fe852cd7287cec2442a4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 20 11:44:11 2020 +0100

    Reflect 4.1.4 release

commit ec7e72eedb8a905ab154fd32632fca6763de39b4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 19 21:41:26 2020 +0100

    Replace Multimap in ObjectLiteral with Map
    
    It's not allowed to have duplicate keys

commit 23c491d53b03bea1dcc34d36068d1708ba93680d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 19 20:32:44 2020 +0100

    Remove guava from integration-testing, dns-discovery, es-testing, blob

commit 3ffa83c2d5af2a354b59207c3f9dfef976ba5bf3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 19 16:55:31 2020 +0100

    Fix WindowAgg column pruning
    
    The standalone outputs must match the outputs of the source operator.
    This wasn't the case. That led to assertion errors or class-cast
    exceptions.

commit 303a713dccbd1ae57370acc99491666498d5caac
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 19 00:12:28 2020 +0100

    Remove guava from common module

commit 9fea6fa079613f34a3e065a4b6da75f5e3a4a539
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 18 21:42:32 2020 +0100

    Remove guava from dex module

commit d949711604b9b2c0b73fcb6707fa68717457e84d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 18 11:30:53 2020 +0100

    Update graalvm to 20.0.0
    
    https://www.graalvm.org/docs/release-notes/20_0/

commit 12aa7eb24b75d5f14a86b8c2428241d19e7d934c
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Mar 17 10:46:29 2020 +0100

    Migrate tables snapshots, summits and operations_log to new SystemTable

commit ca9102849d0e9ee1a59dbf5ea66630c7ab35b69f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 18 10:01:46 2020 +0100

    Update netty to 4.1.48
    
    https://netty.io/news/2020/03/17/4-1-48-Final.html

commit 81c9fb3abde39855424a3630526f79e6049db1c8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 17 19:48:11 2020 +0100

    Replace AsyncOperationBatchIterator with AsyncFlatMapBatchIterator
    
    The AsyncOperationBatchIterator was a combination of two things:
    
    - Building chunks (batches)
    - Async invocation of an operation, and generating rows based on the
    result of this operation.
    
    This introduces a new `AsyncFlatMapBatchIterator` that is similar to
    `FlatMapBatchIterator`, but takes a mapper that returns a future.
    
    The "building chunks" part is separated by using
    `BatchIterators.partition`.

commit 3c3c3d44e3e21b4ef39a3f298b449a79c4b04dc6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 17 17:38:23 2020 +0100

    Improve encapsulation of components used in FetchBatchAccumulator
    
    - Renames `FetchProjectorContext` → `ReaderBuckets`. Is now used only
    for partitioning of the `_fetchId`s by `_readerId` into a `_docId` +
      later carry the result for the fetched values for the doc-ids.
    
    - `FetchRowInputSymbolVisitor` leaked a lot of the workings into the
    `FetchBatchAccumulator`. This is now encapsulated via `FetchRows`.

commit 65f0c34e0d8d26283d3e7453139a7e346cfe2ca7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 18 11:09:57 2020 +0100

    CI: Kill stale CrateDB processes before itest run

commit 88e51080dcd1c3af8a9e1ca4af0841d025c649f7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 17 13:54:47 2020 +0100

    Replace CollectRunnable in fetch operation with completableFuture primitives
    
    So far we had a `CollectRunnable` that merged the results into a map
    within the `run` using custom synchronization.
    
    Instead we can utilize the behavior of `runWithAvailableThreads` to
    retrieve the results and merge them post-op.

commit dfba29da43bef56e9220b2f045d3f2ce02b151d6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 17 11:28:24 2020 +0100

    Remove fetchRequired flag from ReaderBucket
    
    If there are no columns to fetch, then there shouldn't be a `_fetchid`,
    and therefore no fetch operation happening. So this flag is in a way redundant.

commit da6375c3722de1627a4285364f9d6eead280e973
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 16 19:41:09 2020 +0100

    Remove special partition column handling in fetch operations
    
    The `LuceneReferenceResolver` can deal with partitioned columns, so we
    can handle partitioned columns like any other column and remove some
    special handling.

commit 455ed723f8383b27277d825de1f86c71d815f697
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 11 16:27:35 2020 +0100

    Add fetch optimization rule for Limit->Collect sub-trees
    
    This adds back a `Fetch` operator and a rule for `Limit->Collect` to add
    the `Fetch` operator.
    
    This rule based approach will not work for more complicated cases. If
    joins are involved we'd need a rule that matches `Limit ->
    manyOf(anyOf(NestedLoopJoin, ...)) -> many Collect`
    
    But this rule already triggers a new execution variant that we
    didn't support before: More than one fetch phase in a single plan. This
    required changes to the `RoutingBuilder`

commit 47058765d90d0850cd465a4cdb7891127393af43
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 17 11:33:36 2020 +0100

    Extend PR template with reminder about sql_features table

commit e7a120b58dcde3c962f738eeb74f71cb2dc78f74
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 17 11:37:24 2020 +0100

    Tests: Update hadoop version to 2.8.5
    
    Looks like 2.8.4 is no longer available

commit b4c47701c231c010387079113e3d452aa85b4072
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 16 20:27:18 2020 +0100

    Migrate SysUsersTableInfo to SystemTable

commit 8e1cdac8d870df462efc8548146ee23f84b0acaf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 16 19:54:59 2020 +0100

    Migrate SysPrivilegesTableInfo to SystemTable

commit 8465e923b7648b6f6c5303d6dd4e3f57cae03966
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Mar 15 23:43:18 2020 +0100

    Migrate SysMetricsTableInfo to SystemTable

commit 3e40d02c32041329741f37d91c129c2835de9582
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Mar 15 23:21:25 2020 +0100

    Migrate SysChecksTableInfo to SystemTable

commit 33931e7cc90ea2edeee21f736131beafdc656ea9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Mar 15 23:00:01 2020 +0100

    Migrate SysJobsLogTableInfo to SystemTable

commit f12177ad6a3229cdec2228152c114c48373cf463
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Mar 15 22:20:47 2020 +0100

    Migrate SysJobsTableInfo to use SystemTable

commit 08734b59ac1fe76f66f728c46d0211d0d6e23620
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 13 15:38:45 2020 +0100

    Update docker run instructions in README
    
    This adds `-Cdiscovery.type=single-node` so that bootstrap checks are
    not enforced.
    
    Otherwise on many systems CrateDB won't start up because of:
    
        max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144] by adding `vm.max_map_count = 262144` to `/etc/sysctl.conf` or invoking `sysctl -w vm.max_map_count=262144`
    
    To try out CrateDB, setting `-Cdiscovery.type=single-node` should be
    fine.

commit b05266131a85b1027acf529eea6dc60c0771f30c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 12 20:51:48 2020 +0100

    Update checkstyle to 8.30

commit 26e4794e132ce5899777981104c64099d3e83d3e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 12 20:28:50 2020 +0100

    Remove pmd
    
    We don't run it

commit 08d1315068432e52e7c9fcc531b116dda3628500
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 12 13:49:30 2020 +0100

    Change EXPLAIN to print the logical plan
    
    - Is easier to read and should in most cases give enough information
    - Tests and EXPLAIN now share the same logic

commit 0c76cffa5b548424e6230920bc3191992ad70fee
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 12 11:12:07 2020 +0100

    Remove process from AnalyzedStatementVisitor
    
    It is a unnecessary indirection

commit 047ee3c28d287f9c49cd874014bb9f710289162a
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Mar 11 17:47:33 2020 +0100

    Update prerequisites in CrateDB development documentation.

commit cfd8186aa85b5807744ff2298427b1c0fdbdcd19
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Mar 11 17:26:23 2020 +0100

    Remove the G1GCCheck bootstrap check.

commit c89f19bf7eb6fd9278d228c33d19c7e63c907712
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Mar 11 17:18:32 2020 +0100

    Remove the JVM version node check.

commit 9462713bacc50b61e7d291590ea9551a8aa8a6a7
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Thu Feb 13 14:47:00 2020 +0100

    Use bundled JDK instead of host system JDK.
    
    This change makes it possible to configure a CrateDB JDK
    bundle via the jdks extension of the `jdk-download` Gradle
    plugin. See the JdkDownloadPlugin javadoc for the further
    usage instructions.
    
    The JDK bundle is used for compilation, tests and packaged
    with the CrateDB tarball.
    
    The JDK version, vendor and platform are provided
    as properties. Conveniently, you can pass the properties
    as system properties for Gradle tasks, e.g.
    
      ./gradlew test distTar  \
          -Dbundled_jdk_version=13.0.2+8 \
          -Dbundled_jdk_vendor=adoptopenjdk \
          -Dbundled_jdk_platform=linux

commit ac62329f46e16dba4ea8c2edaadad724f3a9238b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 10 16:14:54 2020 +0100

    Make sure inserts from lazy table functions are throttled
    
    Table functions like `generate_series` can generate a large result set.
    This ensures that inserts from such tables are using the throttle
    mechanism to not overload the cluster.

commit ba4ae1f595eaffdf3944747de33b8d95395df431
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 6 11:11:59 2020 +0100

    Add column pruning
    
    For cases like
    
    ```
    SELECT x FROM my_view
    ```
    
    Where `my_view` resolves to `SELECT x, y, z FROM tbl`
    We don't need to collect `y` and `z`.
    
    This was previously done implicitly to some degree with the fetch
    optimization, but it didn't work in all cases.
    
    This adds a new `pruneOutputsExcept` that can be triggered on a root
    node and propagates through the whole tree to remove any unused outputs.
    
    This is not done as an optimization rule. Optimizations rule are ideal
    when an optimization decisicion can be done in isolation looking at a
    small sub-tree. But in the case of column pruning it is necessary to
    build a lot of context.
    
    For example in:
    
    ```
      Limit
        └ Collect
    ```
    
    The `Limit` operator itself doesn't know which outputs are needed
    without involving its parent.

commit 08b2cdf87f8136e7f696d7c23a7bd673530f92c7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 10 13:29:19 2020 +0100

    Update netty to 4.1.47
    
    https://netty.io/news/2020/03/09/4-1-47-Final.html

commit da1cd62917ef4e0d2c348f3a00f21eaaa1aa5dec
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Mar 10 10:56:12 2020 +0100

    Add the `pg_catalog.pg_proc` table.
    
    Currently, only three columns are not null:
    - oid
    - proname
    - pronamespace

commit 6cff2b19a02e8e7912fa3f9ad7b142ea6bfff2ba
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 10 13:57:52 2020 +0100

    Fix top-n-distinct for cases where the group columns are a sub-set of the source
    
    `TopNDistinct.outputs` contained all outputs of the source instead of
    the *actual* outputs of the operator. This led to `ClassCastException`s
    on execution.

commit 6b287ab5e950aff11937096bd39d0623b7d03b74
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Sat Mar 7 00:15:02 2020 +0100

    Add the repeat scalar function.

commit db0c5a9849e4c8b2321aa38da7322695e86487bf
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Fri Mar 6 23:20:34 2020 +0100

    Add the length scalar function.

commit 5ccd5ca16880d539b4ee25f561221ce7372a498a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 5 23:51:15 2020 +0100

    Add server_version session setting

commit cf55a035e7841d78ca5f89dd83a904f8a0e22ad2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 5 23:33:21 2020 +0100

    Add server_version_num session setting
    
    For improved PostgreSQL compatibility.
    
    Closes https://github.com/crate/crate/issues/9673

commit 2e6e3d1b05a22909a04a30c89314b59c067aa7f7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 6 10:08:29 2020 +0100

    Fix array_agg return type declaration

commit 36bf1d3406f0f1326db37ac9a05fec1dfa53c611
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 5 22:54:45 2020 +0100

    Add array_agg aggregation function

commit 6085ffcc9bb8794980afae75d131e38da3bd9a65
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Mar 2 11:07:22 2020 +0100

    add entries for primary keys to pg_class and pg_index table.

commit 17ac163ea4f2b6719204c36058ecc8485c63f8d5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 5 17:04:26 2020 +0100

    Reflect 4.1.3 release

commit 5ab7c31cdb7831cbe773a2d94cd5df057c21f5ff
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 5 15:58:32 2020 +0100

    Remove unused declarations

commit f7f4aa6511fb1f8c0b2882a1c0ec8dc4a5320a6d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 5 15:14:36 2020 +0100

    Remove process method from AnalyzedRelationVisitor
    
    The method adds a useless indirection and makes debugging more annoying.

commit 9a0c25d303f3244b8ea7b20888166a668ebbd216
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 3 16:59:08 2020 +0100

    Implement proper formatting for window functions
    
    The `OVER ()` clause was missing from formatted window functions

commit fa5f245dd49ac4b992d10b0e0e5be838ca62da1e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 4 14:30:04 2020 +0100

    Change doctests setup and require crash >= 0.25
    
    crash 0.25.0 doesn't have an `execute` method anymore.

commit 79784e5180f1851364d08bf63edd8dbdd99a3169
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 4 11:18:40 2020 +0100

    Fix doctests (nail crash to <0.25.0)
    
    0.25.0 has API changes. We will need to adapt the testing setup. This is
    a temporary quick fix.

commit bde8d07fa61aab165260aa9d227be92e24eb09b4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 3 15:36:57 2020 +0100

    Improve table recreation sys check docs
    
    - Make sure the examples are tested
    - Document version compatibility
    - Add hint to avoiding reindex using partitions
    
    Replaces https://github.com/crate/crate/pull/8941

commit 1782309aee97ebb634527da7daa58bb48294f261
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 3 14:09:20 2020 +0100

    Remove ExplainLeaf & integrate SymbolPrinter logic into Symbol
    
    Some symbols delegated `toString` to `representation()` of
    `ExplainLeaf`, some to `SymbolPrinter`, some had their custom
    `toString`.
    
    In some places we then used the `representation()` of `ExplainLeaf`, in
    other places we used `SymbolPrinter`.
    
    To make the formatting of symbols consistent, this adds a
    `toString(style)` to `Symbol` and removes both `ExplainLeaf` and
    `SymbolPrinter`.

commit 15bdda2064bdc48603203ecfc93c918c37c616b2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 2 15:52:16 2020 +0100

    Port latest hybridfs configuration from ES
    
    https://github.com/elastic/elasticsearch/pull/52641/commits/a1d8d1cbec6a0c57d2598e8eddc212fd4b7a11af

commit de42e2767ea7999647221ac8c77d6a4458b7fdad
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Mar 2 15:20:16 2020 +0100

    adapt the start of ordinal_position for columns to 1

commit 45e4c14e8662be864f4310f42979afd2b3f5a08b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 2 12:15:32 2020 +0100

    Re-use subscript lookupByName method in subscript_obj

commit 30075af5b98b8bf9451d54c1564340ea2904ab85
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Mar 1 13:57:55 2020 +0100

    Update netty to 4.1.46
    
    https://netty.io/news/2020/02/28/4-1-46-Final.html

commit 98800004da06c9124c1e4c03523f89f7f1441cbd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 2 10:17:35 2020 +0100

    Make sure undefined type can be streamed as text to clients
    
    f013bbeae63e7e73f11c6d96268d04faa46e8ed4 enabled support for queries
    like:
    
        SELECT obj['x'] FROM unnest([{x=10}]);
    
    This worked via HTTP, but didn't via pg-wire because `obj['x']` has
    type `undefined`. `undefined` is mapped to `VarCharType` which didn't
    handle any instances other than `String`.

commit c34ca7b30c764d19d3721bec6704244c742ce876
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 27 18:31:47 2020 +0100

    Add type safe and less verbose SystemTable builder
    
    Adds a new `SystemTable` which contains a builder to create both the
    schema and expressions of a system table.
    
    This is indentend as a replacement for the `ColumnRegistrar`. The
    `SystemTable` has the advantage that the compiler enforces that the
    `DataType` definition maches the return type of the expression.
    
    Furthermore it allows nesting objects and the definition of object
    arrays.
    
    To showcase how it works the `sys.health` and `sys.nodes` tables were
    adapted to use it. In `sys.nodes` there was already a inconsitency
    between schema and expressions. (`os['cpu']['system']` and
    `os['cpu']['used']` were missing)

commit 55ce139c08d166123834efe7230fedcf182817cc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 28 14:46:08 2020 +0100

    Fix negative free disk handling in DiskThresholdDecider
    
    This applies parts of
    
    - https://github.com/elastic/elasticsearch/commit/36b03a22dc4def007786ed0ee15b6fbc601f07cc
    - https://github.com/elastic/elasticsearch/commit/668919f7896fa262fa40a97d2deef1eb9455b035
    
    To fix https://github.com/crate/crate/issues/9710

commit cabdf9cd9be900f5ad0c756b90e273be55fa968a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 27 08:45:46 2020 +0100

    Update gradle to 6.2.1

commit 7d419f184fe7d9cda7150a00944dde4d31b0703b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 26 16:13:28 2020 +0100

    Remove HavingClause
    
    Having a dedicated HavingClause is no longer necessary. We're not doing
    partition selection or `clusteredBy` extraction on a `HavingClause`.
    
    Such an optimization would only apply if the query can be pushed down
    all the way into the `Collect` operator.

commit b56197e2195e7a91b1b4f4b0b2ecac107e07cd96
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 26 15:36:40 2020 +0100

    Replace WhereClause on QueriedSelectRelation with a Symbol
    
    To make it clear that it is just a query expression, not a further
    analyzed `WhereClause` with `partitions` or `clusteredBy`.

commit 22a9933d11dfc4ce8552ff5b00b440fc40d8c8e6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 26 15:22:01 2020 +0100

    Inline QuerySpec into QueriedSelectRelation
    
    No need anymore for the indirection

commit f013bbeae63e7e73f11c6d96268d04faa46e8ed4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 13 16:23:25 2020 +0100

    Deduplicate fields and outputs
    
    Rough outline:
    
    - Removes `fields` from `AnalyzedRelation`. There are only `outputs`
    
    - Changes `Field` to `ScopedSymbol`, which is only added when a relation
      introduces a new scope. (E.g. in SELECT t1.x, t2.x FROM t AS t1, t AS
      t2, it is necessary to distinguish between t1.x and t2.x, so `AS t1`
      needs to introduce a scope)
    
    - Adds `AliasSymbol` to preserve the `AS <xy>` information
    
    - Merges `QueriedSelectRelation` and `MultiSourceSelect`. Also changes
      `QualifiedName` usages to `RelationName` - so that everything is unified to
      `RelationName` after the Analyzer.
    
    - Changes the `LogicalPlanner` to only process the clauses of a relation that
      are really there. (Only `QueriedSelectRelation` can contain WHERE, GROUP BY,
      HAVING, etc...)

commit fe831180d148578808931eea80186ac027797193
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 25 10:13:28 2020 +0100

    Change optimizer to re-try rules after children have been optimized
    
    In https://github.com/crate/crate/pull/9684 the initial LogicalPlan
    changes a bit. For example a `WhereClause` is never initially passed to
    the `Collect` operator, instead, a separate `Filter` is created.
    
    This `Filter` is then merged with `Collect` via the
    `MergeFilterAndCollect`, but this new reliance on this rule breaks the
    `MergeAggregateAndCollectToCount` because it wasn't re-applied after the
    children have been optimized.
    
    Changing the optimizer behavior then broke the `(lhs instanceof Filter)`
    checks within the `RewriteFilterOnOuterJoinToInnerJoin` rule because the
    source might already be a `Collect`.

commit 6307dddb5dcbf9912a6c38f6bbabbd1f1ec4d073
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 24 16:08:15 2020 +0100

    Make subscript expression behavior more consistent
    
    There was a bit of inconsistency with subscript expressions:
    
    - `obj_array['x']` worked if `obj_array` was a column, but not on literals
    
    - The behavior with sub-queries was also odd:
    
        cr> SELECT (SELECT {x=10})['x'];
        SQLActionException[UnsupportedFeatureException: An expression of type SubqueryExpression cannot have an index accessor ([])]
        cr> SELECT (SELECT {x=10})::object['x'];
        +-----------------------------------------+
        | CAST((SELECT {"x"= 10}) AS object)['x'] |
        +-----------------------------------------+
        |                                      10 |
        +-----------------------------------------+

commit c0c74823664d7c213b877df27d67ad0a9030b8a1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 24 14:29:46 2020 +0100

    Add support for GROUP BY on analyzed columns
    
    This removes the restriction in the planner. The operation already
    worked because the `LuceneReferenceResolver` does an implicit rewrite to
    source lookup if there are no doc-values or if the field-type is
    missing.
    
    The validation could also have been bypassed by using `UNION`, because
    it relied on pointer chasing on `Field` instances:
    
        select count(*), x from
          (select 'foo' as x union all select prose from tbl) as t group by 2;
        +----------+-------------+
        | count(*) | x           |
        +----------+-------------+
        |        1 | foo         |
        |        1 | hello world |
        +----------+-------------+

commit f3439b83517e127016790f8e6c2ef615b9de1c7a
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Feb 24 12:08:53 2020 +0100

    Tests: Disable automatic rebalancing on manual reallocation test
    
    Automatic rebalancing results in test failures/flakiness as the manual
    reallocation inside the test may run concurrently.

commit 910292074352ebc1452880d71513ef9a4aaf8c8b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 19 17:36:06 2020 +0100

    Update gradle to 6.2
    
    https://docs.gradle.org/6.2/release-notes.html

commit f8f96ca3a2cc750b0bd5b5491fb3183a08986c40
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Feb 12 20:31:49 2020 +0530

    Add tests for sequence and versioning

commit 420cbc0aa2e64b0b5d3707172961501a95636bb5
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Feb 21 11:43:32 2020 +0100

    [Test] Return local sql response var to ensure thread safety.
    
    The instance var `response` is not thread safe, returning a local
    `SQLResponse` var ensures thread-safety if the returning var is used.
    To avoid misuses, this instance var should be removed at all, but that
    requires a lot of test changes which we’ll postpone after the current
    bigger analyzer/planner refactoring is done (as this may touch a lot of
    tests as well).

commit 2c8965e954f242ee8bb194f6804e6c17b0fb1c4f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 3 17:23:14 2019 +0200

    Remove eager Collect → Get optimization
    
    We have a rule that does the optimization, so the eager optimization can
    be removed.

commit 1b419f97b7e288feb0bee4d5535535269a6e3370
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 23 15:22:00 2019 +0200

    Remove LogicalPlan.Builder

commit 07b982adf80cbc60b5f23a156cfda9fdd905aadc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 10 14:19:05 2019 +0200

    Temporarily remove fetch optimization

commit ff96df0fad8b53a5c298c43e93e8026ef7cbdd84
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 19 15:36:13 2020 +0100

    Make SymbolPrinting consistent & remove custom formatting hooks for functions
    
    The `SymbolPrinter` contained custom formatting logic for some
    functions, but not all. This resulted in inconsistend formatting between
    static and non-static `SymbolPrinter` usages.
    
    The options to fix this:
    
    1) Remove the static variant
    2) Remove the non-static variant
    3) Keep both, but make sure they behave the same
    
    3)
    
    sounds like a lot of effort.
    
    1)
    
    Sounds initially okayish. We'd have to have access to a SymbolPrinter
    instance everywhere. That's doable but troublesome.
    
    It would keep the formatting encapsulated within the function
    implementation, at first glance that seems like a good idea.
    
    But if we consider function implementations to be pluggable, then it
    doesn't make sense to allow those implementations to have custom
    formatting. Any custom formatting would require extensions for the SQL
    grammar so that the formatted functions can be parsed again.
    
    So 2) it is

commit 2ea1ac72779e5319e3edba25ea296f71db8e933d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 19 14:36:44 2020 +0100

    Merge SymbolFormatter with SymbolPrinter

commit ee39a732c3705e90412b8395d38ea4e3eeda1c37
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 19 18:29:08 2020 +0100

    Remove Set/Object[] support recurse sorting from LiteralValueFormatter
    
    We don't have a Set type anymore and arrays are always a List, never a
    object array.
    
    The `Sorted.sortRecursive` call for maps can also be replaced with a
    non-recursive sort because the value formatting itself is recursing into
    the elements.

commit fd8641c8ef4ce11b7340607e22c20a0361d2bada
Author: Autophagy <mika@crate.io>
Date:   Tue Feb 18 17:28:00 2020 +0100

    Removed initialisation of custom TrustStore
    
    Previously, we were initialising our own custom TrustStore, as the
    certificate for udc.crate.io was signed by StartCom CA, which was not
    present in the standard Java CAs.
    
    However, this had an unintended side effect of being unable to use
    Java's standard keystore. This divergence introduced a bug where
    https URLs using a Let's Encrypt certificate failed to be resolved
    within ``COPY FROM`` statements.
    
    As our udc.crate.io certificate is no longer signed by StartCom but
    instead by Comodo, we can remove this initialistion and let CrateDB
    use Java's own CA trustStore.
    
    This should also address crate/docker-crate#168

commit fbcecaa4626d6c34539424f3fd3ec26a299324d8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 18 15:58:07 2020 +0100

    Allow eager normalization of functions on non-literals
    
    I don't see a reason why it shouldn't be allowed.
    
    We can normalize condititions like `field = null` to `false` and `column
    and true` to `column`.

commit d11018e7f40f9e426ea9e9e202f0fe92f2c29f8f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 18 16:33:57 2020 +0100

    Fix rtrim to trim the right side in all cases
    
    `rtrim` only worked in the normalization case, but not in the late
    evaluation case because the functionInfo of the implementation contained
    the wrong name.

commit 3dbb11d873c7c2ce386c185deca5fcba8796ca1c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 17 11:05:59 2020 +0100

    Docs: Update insert reference to reflect column ordering behavior
    
    We changed the behavior about sorting lexically a while ago to instead
    order the columns by ordinal (as they appear in CREATE TABLE).

commit 840cb7cd7e47876ff9ca1bbb05d8102ef85df332
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 18 13:28:49 2020 +0100

    Make aggregation and group by semantic validation more readable

commit 3a12928f42b583614dfc98d74077cefb5ee6a75e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 18 10:47:20 2020 +0100

    Move select-list / group-by semantic check into dedicated class

commit 676b1b3591da3df6864107cfc1900bd22dc33b94
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Feb 18 11:31:28 2020 +0100

    Add documentation for the `discovery.type` setting
    
    Documentation was missing although we refer to it inside our
    guides on how to setup a single-node cluster.

commit 92e87cc295a3ec0c1ac434ee94ef588655b29e72
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 17 11:23:46 2020 +0100

    Fix raw type warnings in symbol implementations

commit a6415621a7f4ebc53acef9fe3a847573b8db984f
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Feb 17 11:09:18 2020 +0100

    Fix flaky ordered lucene collector kill test
    
    Existing test was flaky as it relied on a thread being dead after
    a certain amount of time, but the time will vary on each system.
    The test will now just ensure that the consumer gets the correct
    error propagate when killing the ordered lucene iterator implementation.

commit a5b04dcb6165f959f5e7f8b0a9add612ecfa5c4e
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Feb 17 13:21:44 2020 +0100

    Pass thread-safe ram accounting to projectors also on joins
    
    Some projectors like e.g. Fetch use the given RamAccounting by multiple
    threads and thus the implementation must be thread safe.
    
    Fixes join integration test regression introduced by
    d6f959c9c636ab41477c788f8ebb8ae6190a4dd2.

commit 5a40a952c5504da47202cfd5bb8278c6da563ee2
Author: marregui <miguel.arregui@gmail.com>
Date:   Tue Feb 11 10:58:24 2020 +0100

    Add the ``trunc`` scalar function

commit d023ca803def40812fa3661bbf7899fb328993a6
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Dec 20 17:41:46 2019 +0100

    Add test assertion ensuring QUERY breaker is reset to 0

commit cff426b3c5511d397694618d464cbfb408209e9f
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Feb 14 11:51:44 2020 +0100

    Do not account ram for incoming close fetch context responses
    
    On `FetchBatchAccumulator.close()` (which may called by a `kill`) calls,
    a fetch requests is sent to close open fetch contexts without waiting
    for the response by design.
    As job related resources may already be released (in this case the ram
    accounting), the response should not result in additional accounted ram.
    Also the response won’t contain any rows and such ram accounting isn’t
    needed.

commit d6f959c9c636ab41477c788f8ebb8ae6190a4dd2
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Dec 20 17:29:06 2019 +0100

    Remove `RamAccountingContext`, use new eagerly ram accounting instead.
    
    The old `RamAccountingContext` uses a flush buffer to prevent flushing to
    the circuit breaker on every accounted bytes. This leads to a possible
    underaccounting.
    Additionally the implementation isn't thread-safe but was used
    from multiple threads which also leads to wrong accounting.
    
    This implementation is superseeded by new `RamAccounting` implementations
    which are either thread-safe (`ConcurrentRamAccounting`) or eagerly allocate
    (on-demand) a block of bytes (`BlockBasedRamAccounting`, this one must be
    created dedicated per thread).

commit 5b84e5773b709a875a10c86c8e5b8e27a57e7c78
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 13 10:59:16 2020 +0100

    Add triage label to feature request template

commit 1c64481973721e0bba1dcece7e05303db2efded5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 13 10:58:40 2020 +0100

    Add hints for stacktrace inclusion in issue template

commit 4b0ff95797bac07f2cf8eaa836b340cc8027126a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 14 16:13:55 2020 +0100

    Reflect 4.1.2 release

commit f294d1d62b9acd791afd49b08e7787a5bc19f7f5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 14 12:24:33 2020 +0100

    Enforce Literal returnType / dataType relationship with type system
    
    Both Literal and DataType were already using generics for the value.
    
    We can enforce the relationship between Literal value and DataType value
    with the type system.

commit f17926bb6516e121e7786fd2f6935d523aa2a666
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 13 19:30:53 2020 +0100

    Fix `/ by zero` error in average row size calculation
    
    Fixes https://github.com/crate/crate/issues/9656

commit 0c5e8ef589e96bfc0120c12fb0f44fe8147f77e6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 13 16:28:52 2020 +0100

    Remove unused hasAggregates from AnalyzedRelation

commit be148abddde390e953165a2ef2aa609475f890be
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 13 15:48:06 2020 +0100

    Remove custom normalize from CurrentTimestampFunction
    
    The custom normalize implementation was added before we had a
    `evaluate` implementation for `current_timestamp`. But that changed a
    while ago (https://github.com/crate/crate/commit/e18fe9bbb0d25b5eb6f9073b0660a07fa7f89eeb)
    
    It isn't required anymore as far as I can tell.

commit 145f27e4782d7a0f3aa704a7030de68193d7d562
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 13 11:53:47 2020 +0100

    Add a `now()` scalar
    
    It is part of the escaped date/time functions of PostgreSQL JDBC:
    
    https://jdbc.postgresql.org/documentation/head/escaped-functions.html
    
    The behavior is the same as `current_timestamp`.

commit 5fd9871a1ca29ff4e8173ebd450cb44388274bcf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 13 12:17:05 2020 +0100

    tests: Add Ignore annotation to flaky test
    
    `test_lucene_ordered_collector_thread_dies_on_kill` is flaky.
    
        java.lang.AssertionError:
        Expected: is <false>
            but: was <true>
                at __randomizedtesting.SeedInfo.seed([E8DA75A1B1860703:78E50535B47434B6]:0)
                at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
                at org.junit.Assert.assertThat(Assert.java:956)
                at org.junit.Assert.assertThat(Assert.java:923)
                at io.crate.execution.engine.collect.collectors.OrderedLuceneBatchIteratorFactoryTest.lambda$test_lucene_ordered_collector_thread_dies_on_kill$8(OrderedLuceneBatchIteratorFactoryTest.java:214)
                at org.elasticsearch.test.ESTestCase.assertBusy(ESTestCase.java:828)
                at io.crate.execution.engine.collect.collectors.OrderedLuceneBatchIteratorFactoryTest.test_lucene_ordered_collector_thread_dies_on_kill(OrderedLuceneBatchIteratorFactoryTest.java:214)
    
    This adds an Ignore annotation for now, to unblock other PRs.

commit 07e4cb4435e1fa34d6172e01d924ff2c51a7fba5
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Feb 5 15:03:54 2020 +0530

    Add returning clause for insert to storage engine

commit 0fc21457d8dba6d19c95ba1025b5ddf8ec625fc2
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Feb 3 11:17:13 2020 +0530

    Add returnvalues and output fields for insert to analyzer

commit 40b92db610a5e37b7ecf5007a75d3728399d804a
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri Jan 31 21:01:57 2020 +0530

    Add returning clause for insert to grammar and parser

commit 98b350f90511e5356895c2b3597d074bf756d118
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri Jan 31 17:37:10 2020 +0530

    Add documentation for returning clause for insert

commit 846607c6357ff6b20afb1b8739b5942f7b735093
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 13 10:04:42 2020 +0100

    Allow implicit casts from TEXT to OBJECT again
    
    This fixes a regression that causes statements like the following to fail:
    
        INSERT INTO tbl (obj) (SELECT * FROM unnest([<jsonStrLiteral>]))
    
    Columns of type `OBJECT` were extended to have the `innerTypes` set in
    more places, this caused
    `stringType.isConvertibleTo(objectTypeWithInnerTypes)` to return false
    because `ALLOWED_CONVERSIONS` only contained an untyped object.

commit 710a402455784923ec58a80aca46f24ec838969b
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Feb 13 10:33:37 2020 +0100

    Return `issued_to` value if license is loading
    
    Return a static “loading” value for `sys.cluster.license.issued_to`
    if running in Enterprise mode and the license data is not yet available
    on node startup.
    This prevents the admin-ui from show the wrong view/style because it’s
    current view decision is based on a non-null value of that column.

commit 0666c0e8e0a46c5d3f889a42af018de84a58f237
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jan 30 09:30:55 2020 +0100

    Terminate ordered lucene collector on cancel/kill
    
    If an ordered lucene collector is running inside a child thread, it
    should stop processing and the thread should terminate if cancelled/killed.
    Otherwise it may still occupy resources (e.g. account memory) AFTER the
    job was killed and shared resources (ram accounting) are released.

commit 289d32dbf9a6bb8b7cfd0b1645ffea368008787f
Author: Johannes Moser <johannes@crate.io>
Date:   Mon Feb 3 16:09:24 2020 +0100

    Docs: Add that system columns can be used as part of RETURNING

commit 1fd3e6101dc18459cada7018fa42f9f886311d71
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 11 15:38:45 2020 +0100

    Prevent join filter push down rule from matching infinitely

commit 42b1b79064af5ce6cd2e282abdf57ed9c84c7002
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Feb 11 13:58:16 2020 +0100

    Make mergify merge rule to wait for all github actions tests.

commit 10e9d3a761c4179be172c4d75047f7ddaf9b58b5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 11 13:32:05 2020 +0100

    Add a safeguard to the optimizer to prevent infinite loops

commit f8870410f51df03fd8abcb4e428196ed3d309cd8
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Feb 10 13:00:33 2020 +0100

    Add ``mod`` alias for the ``modulus`` scalar function

commit dfe21ace3174454466cf4971a0ac8d7cfae83848
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Feb 10 12:52:22 2020 +0100

    Add missing documentation and tests for the ``modulus`` scalar.

commit 085c2187fc59d7c2cacee618875ae4b8661cf041
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Feb 10 16:46:45 2020 +0100

    Add the ``atan2`` trigonometric scalar function

commit 598b2069b02031bdabd2431cc306f0d3d2ddf00e
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Feb 10 19:56:36 2020 +0100

    Replace azure pipelines with github actions.

commit 548a16f32893e7cf22bdf45cd126baa10f60ffb7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 10 16:31:03 2020 +0100

    Update outdated RelationNormalizer docs

commit 8d172d2bd51faa07df4c2457af95fe21c8d1adf1
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Feb 10 15:00:02 2020 +0100

    Add `exp` scalar function.
    
    Closes #9581.

commit 1fba3598c041b7d34c4fac50290a9e956dd64564
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Feb 9 14:14:24 2020 +0100

    Unify Nullable annotation to jsr305

commit 979c186f2512502eb0debe3cadcf7a2170342958
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 10 17:15:44 2020 +0100

    Improve PGType type saftey and fix record serialization
    
    I forgot to update `writeAsBinary` from using a List to Row in the PR
    that introduced the RowType/RecordType.
    
    This wasn't caught earlier because the test for binary streaming is in crate-qa
    (https://github.com/crate/crate-qa/pull/138).
    
    The JDBC client uses text serialization for records.
    
    The commit here fixes the issue and adds generics to PGType, to prevent
    this kind of mistake in the future.

commit 22d0ff3bbe072d6ed0bf6c193370a3f212939664
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 10 11:57:29 2020 +0100

    Support record subscript syntax on row type

commit aa405d4a35e63f0392176a97058ea91e7c5a3c78
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 3 16:55:12 2020 +0100

    Add _pg_expandarray table function
    
    This function is used by JDBC (and apparently also by some ORMs).

commit cf128bff9e0dcf5f07744c1f363fc2f6489e11ca
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Feb 10 13:36:05 2020 +0100

    Add ``degrees`` and ``radians`` scalar functions.
    
    Closes #9580 and #9583.

commit fb67ef81e3d829e2da17b288c7f276b44b6e3f96
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 5 15:51:35 2020 +0100

    Support using table functions with multiple columns in select list
    
    This introduces a new `RowType` that represents expressions which have a
    `Row` as value. This is necessary to supporting using table functions
    with multiple columns in the select list of a statement.

commit b481f9d06c036d58c5340fb3fa0a20e146294dc9
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Fri Feb 7 16:35:58 2020 +0100

    Add some missing columns to pg_catalog.pg_type.
    
    Columns:
     - typbyval
     - typcategory
     - typowner
     - typisdefined
     - typrelid
     - typndims
     - typcollation
     - typinput
     - typoutput
     - typndefault

commit 18524df7d81c577742561ca7670693fe339f8b88
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Feb 3 13:29:52 2020 +0100

    Replace Nashorn with GraalVM JS engine in UDF.
    
    This changes replaces the Nashorn with GraalVM JavaScript
    engine, such as Nashorn is scheduled for removal in the
    future JDK version, see https://openjdk.java.net/jeps/335.
    
    Please note that we do  not use the GraalVM JIT compiler as the
    optimizing compile of the GraalVM JavaScript code, but instead
    the GraalVM JavaScript engine is used to compile and execute
    JavaScript code.

commit 0a9bbb91e575b12c11199bd8d5339b1454a01df7
Author: marregui <miguel.arregui@gmail.com>
Date:   Thu Feb 6 17:16:43 2020 +0100

    Add support for JOIN USING statements
    
    An alternative to JOIN ON, when the column name(s) are the same in
    both relations.
    
    e.g. SELECT * FROM t1 JOIN t2 USING (col1, col2)
         SELECT * FROM t1 JOIN t2 ON t1.col1 = t2.col1 AND t1.col2 = t2.col2

commit c4c60f7954629d5c118409daff2b8a528460cecf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 7 11:07:49 2020 +0100

    Improve error message in case parameter placeholders are used but no params given

commit 511c023933b4bba455cb5f4492c95e0a113f671a
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Thu Feb 6 23:25:22 2020 +0100

    Add the cotangent trigonometric scalar function.

commit 4da38e5eff931eda9c31786c9a4c24ae621abb64
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 3 17:38:56 2020 +0100

    Remove createTableInfo from SRF in favor of a objectType
    
    This removes a bit of duplication between using the TableInfo to
    describe the result columns and having a returnType that also describes
    the result.
    
    It also clarifies the semantics and implicit type change from objectType
    to a non-composite type in case a SRF it is used as an expression with a
    single column.

commit 5ac48b967c30f8432439684fc46a3d255151397f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 5 14:00:00 2020 +0100

    Make cast error message more verbose
    
    This adds the type of the source expression to the error message. This
    might seem redundant for literals, but with functions or columns it can
    be helpful to understand why a query is failing.
    
    There was also one scenario where the information was wrong (saying the
    target cannot be casted to the target - that didn't make sense).

commit 2c4246dfb43987ac8c9741338a99173f1d9f5cc6
Author: asdf2014 <asdf2014@apache.org>
Date:   Wed Feb 5 00:27:26 2020 +0800

    Using SortingProjector instead of SortingTopNProjector for testUsedMemoryIsAccountedFor test case

commit 3e237121a9625ad5e97d6eccbf069cf775e7036a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 4 17:32:21 2020 +0100

    Make TableFunctionCollectPhase more specific for table functions
    
    - Allows us to remove `Routing`, which required a `RelationName` to be
      created.
    - Made it clear that `OrderBy` was always null, which allows to remove
      some logic that handled the `not null` case.

commit f3c8be63b6f744eea3048e1abbde5dc2691e0e2d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 4 13:30:43 2020 +0100

    Add a dedicated operator for table functions
    
    Table functions are not tables, so we shouldn't treat them as such.
    
    Making table functions more concrete will later on allow us to:
    
    - Get rid of the `createTableInfo` and instead utilize the returnType to
      remove the redundancy that we have there.
    
    - Get rid of the `RelationName`. There is also a redundancy there. There
      is also a `FunctionName` that contains the same information.

commit 95e288bbdaa011e350f20cc2c108b9cd67e3e904
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 4 15:37:03 2020 +0100

    Make sure planner errors don't cause queries to get stuck
    
    If there were assertion errors during the execution of a multi-phase
    operator (sub-query), the query could get stuck.
    
    This only happened when a programmer mistake happened elsewhere, so isn't
    a user facing issue.
    
    This will make it easier to debug such issues as tests don't get stuck
    but fail with an exception.

commit 0aa03958f8e38340be46491adb0601aacdcad9f4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 3 14:19:26 2020 +0100

    Add support for PostgreSQL record access syntax for objects
    
    This adds support for `(object_column).child_column` syntax as
    alternative to `object_column['child_column']` to access the children of
    object columns.
    
    In PostgreSQL this syntax is used to access fields of composite columns:
    
    https://www.postgresql.org/docs/current/rowtypes.html#ROWTYPES-ACCESSING
    
    CrateDB currently doesn't have composite columns in the same form as
    PostgreSQL does, but `object` columns share a lot of similarity.
    
    We can later on still add composite/row types and have them interop
    mostly with `object` columns. (Basically treat composite type as an
    extension to `object(strict)` in most regards.

commit 9145c10ddf03336226132e9f22e160579004dc8d
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri Jan 31 15:46:20 2020 +0530

    Merge InsertFromSubQuery into Insert
    
    This merges InsertFromSubQuery into Insert and related functions
    using these types.

commit b847d3bf0015fedcf6704dd598db1e41f91362bd
Author: Matthijs <matthijs@crate.io>
Date:   Thu Jan 16 15:22:38 2020 +0100

    Replaced 'unnest' function for building sample tables in the docs with VALUES

commit 65d3f89da0bd223fab1d9cae27eeda4c85d937c4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 30 10:49:34 2020 +0100

    Remove noMatch from WhereClause
    
    We already have the query which can be `false` to indicate that nothing
    can match. Having a second dedicated `noMatch` flag made things more
    complicated, and led to bugs as call-sites forgot to consider both,
    `query()` and `noMatch()`.

commit a1ba6c792f9ef151987d00b2c00fd0fd270cea57
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 30 10:10:52 2020 +0100

    Remove unused replace from QueryClause

commit 53e4f4bde5e47fd287ca304dcf91381e3d3af1c9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 30 17:37:41 2020 +0100

    Use newer images on azure pipelines

commit 3d7fe7a05c49640cdf478339da92805e7fe04bce
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 30 16:20:01 2020 +0100

    Reflect 4.0.12 and 4.1.1 releases

commit dd5cfc872f9f0b34ce3355fbbf59dbce59d25514
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 29 18:33:07 2020 +0100

    Prevent select on multiple relations with WHERE .. AND FALSE from matching rows
    
    That a `WhereClause` can have `noMatch` set was ignored during the
    join-tree building.

commit f70bac9690873831184d79c24a0f0d4014211e5f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 29 14:45:14 2020 +0100

    Update AdminUI to 1.15.6

commit 9bc8337eb0aa29491f05aac96caf75ebacc96f36
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jan 29 09:49:24 2020 +0100

    Fix error handling while consuming a next batch
    
    Changes the signature of `BatchIterator.loadNextBatch` to throw an
    exception in order to force all callers/consumers to handle it properly.
    Swallowed exceptions would otherwise lead to stuck queries.
    
    Another option would be to adjust all `loadNextBatch` implementations
    to never throw any exception but return a failing future instead.
    As this could not be enforced, we decided to go the other way around.

commit a706fe3ad08eb73e7b4b43cf737d7236b7fba03e
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Jan 28 15:56:04 2020 +0530

    Improve bwc for returning clause for update
    
    This change simplifies the serialisation for upsert-related
    classes and makes it less error prone. It also adds a
    specific version check for all nodes in the cluster when
    a returning clause occurs in an update query.

commit 12241e4f0191ef7226a99fec2b7c575bb119a523
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 24 16:41:52 2020 +0100

    Do not store partition values, but include on select
    
    We've had two bugs, that to some degree negated each other:
    
    - In 4.0 and 4.1 we stored the partition column value within objects if
    using INSERT FROM QUERY.
    
    - We didn't include the value for nested partition columns if the parent
    object was selected. (If it was inserted using INSERT FROM QUERY)
    
    With the de-duplication of INSERT FROM VALUES and INSERT FROM QUERY we
    then always included the values.
    
    This now changes it to:
    
    - Never include the value
    - Always include the value on selects

commit 48123f46d6bfc02d853ed5ea277721873d89676a
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Mon Jan 27 13:09:24 2020 +0100

    Minor copyedit

commit 37a1ce8e02450ca8766f24cd5832297d174d1b0f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 28 16:21:20 2020 +0100

    Add the pi scalar function
    
    It is one of the functions returned by PostgreSQL JDBC
    `getNumericFunctions()`.

commit 67534ed0a8f288fdf78af73f85455e42518d00f1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 28 20:15:45 2020 +0100

    Update gradle to 6.1.1
    
    https://docs.gradle.org/6.1.1/release-notes.html

commit 548c30b2eedb6f2e5a4a00ff9c4e47ec82ce3570
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 28 15:39:10 2020 +0100

    Add ceiling alias for ceil scalar function
    
    `ceiling` is listed as numeric function by PostgreSQL JDBC
    `getNumericFunctions` implementation.

commit 06e54af9ce480e8cbcb49887c147adef25a6d6bc
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Jan 28 15:29:14 2020 +0100

    Replace object arrays with lists in SQL args parsers.
    
    This change removes unnecessary conversion
    list -> object -> list conversion when parsing
    the parameters of SQL requests.
    
    It also prevents the class cast exception in the insert
    from subquery statements with the unnest table function
    when using the HTTP protocol to execute statements. E.g.
    statements like
    
        `INSERT INTO t (id) (SELECT col1 FROM unnest(?))`
    
    previously would have failed with the class cast exception.

commit 8f3fea0d4d6a2ce660277132e3553d31ca69ece2
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Jan 27 22:42:15 2020 +0100

    Add changelog entry for crate object[] -> pg json[] remapping.
    
    See https://github.com/crate/crate/pull/9367

commit e097348d292464adac0c3af068fcadcfaa2a52e3
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Tue Jan 21 16:34:05 2020 +0100

    Minor copyedit

commit b99231e0b8f8fd88c87544972ad6111e0f941c9d
Author: Stéphane Campinas <stephane.campinas@gmail.com>
Date:   Tue Jan 21 00:14:14 2020 +0100

    Add encode and decode string functions
    
    Encode takes a binary string in hex format and returns a textual
    representation into the specified format.
    Decode does the opposit and returns the string into hex format.
    
    Close #9539
    
    Update changes.txt file
    
    Update blob/src/main/java/io/crate/common/Hex.java
    
    Co-Authored-By: Sebastian Utz <su@rtme.net>
    
    Update docs/appendices/release-notes/unreleased.rst
    
    Co-Authored-By: Sebastian Utz <su@rtme.net>
    
    Improve error messages
    
    Use string concatenation
    
    Add encode/decode methods to the Format enum and improve error message on unknown format
    
    Add tests for null inputs to the encode/decode functions
    
    Move Hex/Octal classes to the shared project
    
    Fix documentation examples of decode/encode
    
    Fix references to encode/decode in release notes
    
    Clarify the decoding of bytea strings in the hex escape format
    
    Fix handling of the Enum#valueOf exception which swallowed unrelated exceptions
    
    Format the new change in the changelog

commit 20e831913bc2a2a1b931b00e08d37579fc2a8ffc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Jan 26 20:49:44 2020 +0100

    Add a ascii scalar function
    
    See https://www.postgresql.org/docs/current/functions-string.html
    
    The JDBC client has a method which returns string functions. In
    PostgreSQL JDBC this method returns a constant which includes `ascii`.

commit 9e142a32af0f18f509677f69085b162c60016363
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Jan 27 10:56:47 2020 +0100

    Eagerly analyze statement in Session#parse.
    
    It removes special handling for statements analysis
    in bind, describe and execBulk.

commit f4da59b5f11af48cbe447dcd04d3559e60c1c57c
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Sat Jan 25 22:24:36 2020 +0100

    Rename PreparedStmt#unboundStatement to PreparedStmt#analyzedStatement.

commit 9da671e818737f1bae6a069d01799851861625e0
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Sat Jan 25 22:06:13 2020 +0100

    Rename Portal#boundOrUnboundStatement to Portal#analyzedStatement.

commit f684e08b9a2ef89c2da95ed45d62ddec65c79787
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Sat Jan 25 21:56:41 2020 +0100

    Remove ParameterContext from Analysis and SQLExecutor.

commit fb4ee243f3d26c18dff5f656582662109678aa7d
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Sat Jan 25 21:23:14 2020 +0100

    Remove bound/unbound analyzer notion in RelationAnalyzer.

commit da42574a7074c0ce1588c0dc512d222146a64570
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 24 14:32:49 2020 +0100

    Rename InsertFromSubQueryAnalyzer → InsertAnalyzer
    
    We no longer have the values / sub-query distinction, so we can trim the
    name.

commit 82d5f3b49e6b32201d413cf9927f03fe4228ac08
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Fri Jan 24 11:59:42 2020 +0100

    Impove types incompatibility exception message in insert analyzer.

commit f4cc2153aeeeaf74489f8119915b91f079b697ea
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Fri Jan 24 00:19:35 2020 +0100

    Remove former bound insert from subquery analyzer logic.

commit 77c6a63dd5551eda408f1f7f093eea846feecd06
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Thu Jan 23 22:49:07 2020 +0100

    Remove bound analyzer.
    
    Remove the bound/unbound analyzers notion by removing the former
    bound and using the unbound as the only analyzer. Now to analyze
    statements we use `Analyzer#analyze` which has the semantic of the
    former unbound analyzer.

commit 2063258827ff5016c06ef2accb0e74eaa475539e
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Thu Jan 23 22:25:00 2020 +0100

    Remove the AnalyzedStatement#isUnboundPlanningSupported mehtod.

commit 39786c7147e3258fb188ca0c77ceb738cc4957fd
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Fri Jan 24 00:17:09 2020 +0100

    Add validation for on conflict targets to insert from subquery analyzer.

commit 773fc16ae31f6219deca3c3b347f9687e2677350
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri Jan 24 12:57:10 2020 +0530

    Add returning clause for update to storage engine

commit a708b6052f076a935ac853a37c8c58f2c6c51ea8
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Dec 3 18:06:58 2019 +0100

    Add returning clause for update to grammar, parser and analyzer

commit 6f6ed90c955e389aaf18dd92710b6e2d1ae503dc
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Dec 3 18:04:47 2019 +0100

    Extend documentation for returning clause on update

commit 468ef007fa837696f37380360ab7aae665d5fe4e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 22 16:16:18 2019 +0200

    Deduplicate insert from values/subquery analyzer logic.
    
    This change deduplicates the ``INSERT INTO ... VALUES ...`` and
    ``INSERT INTO ... (SELECT ...)`` analyzer logic.
    
    It removes special ``INSERT INTO ... VALUES ...`` analyzer logic
    and parts of the dedicated execution logic for the insert from values
    case, e.g. `LegacyUpsertByIdTask`, `LegacyUpsertById`. Instead, we rely
    on the ``INSERT INTO ... (SELECT ...)`` anayzer and the new
    ``INSERT INTO ... VALUES ...`` plan.

commit 666eccb5e02384f1a8b6a5fca3560fcd470a732c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 23 11:01:13 2020 +0100

    Make sure nested geo shape columns are not added as top-level columns
    
    Fixes https://github.com/crate/crate/issues/9555

commit 96e235d01aa0138894739307771beb2edf9056b9
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Tue Jan 21 16:03:28 2020 +0100

    Copyedit

commit 322b9dc2be166c9702b38bb73cb7a061c19be9d6
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Tue Jan 21 17:31:53 2020 +0100

    Exclude unreleased release notes from code owners

commit 6bcafb02dc19039f0869da208d7928543872144e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 21 15:49:22 2020 +0100

    Add the `pg_catalog.obj_description` scalar function
    
    It is used by the PostgreSQL JDBC client if using
    `conn.getMetaData().getUDTs(...)`

commit 70e1a395e0b2888e0fc4dc1f4ea6d350a65af4d8
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Jan 15 11:05:44 2020 +0100

    Add test for insert from subquery/values into the same partition.

commit 3e74966e372f798f7fcf26958323213aba84a372
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Jan 15 10:09:04 2020 +0100

    Pass the return type info as a second argument of cast functions.
    
    Currently, it is not possible to resolve a function based on
    its return type. For instance, it won't be possible to generated
    an object cast function with the return type which inner types
    have to be considered. Therefore, to bypass this limitation we
    encode the return type info as a second argument of a cast function
    and resolve the return type based on it.

commit 4f98c5ee24b1491d40220ea9f39022c41743821a
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Jan 14 22:22:10 2020 +0100

    Merge CastFunction and TryCastFunction classes.

commit a4dbfe3ab03aa82a55576d38476d86a5997a0ebc
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Thu Jan 16 16:00:53 2020 +0100

    Implement equals, hashCode and isConvertableTo in ObjectType.

commit 656f0461ae995748ce483547409f9063108ef53f
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Jan 14 21:35:17 2020 +0100

    Add missing inner object types to columns index metadata.

commit 35d9ded63be29f5d602fe51158334d6f213a731f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 21 15:10:25 2020 +0100

    Inline evaluate in SubscriptFunction

commit fc7a1b8c507879bf29dabbbca370f9740f0c4e57
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 21 13:52:38 2020 +0100

    Support arguments of type long as index access to arrays
    
    This adds support for `array_expr[long_column]`.
    
    Previously the subscript function required the argument to be of type
    `integer`. That worked well for literals, because there `long` can be
    casted to `int`. But our implicit cast logic is more restrictive if
    columns are involved.
    
    This therefore extends the function signature to allow both `integer`
    and `long` arguments.
    
    PostgreSQL JDBC uses a query that uses this, a subset of the full query
    is:
    
        select
            con.confkey[pos.n]
        from
            generate_series(1, 32) as pos (n),
            pg_catalog.pg_constraint con

commit c455f66a0919a71d594c2d491bac0444dd1ba087
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 21 13:00:29 2020 +0100

    Move generate_series to pg_catalog schema
    
    Required for PostgreSQL JDBC

commit bf618fd2a486fdf526e4f944d6206e7de2e8e7b0
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jan 20 13:52:01 2020 +0100

    Add `version()` system information function.
    
    This function is used by some PostgreSQL protocol based clients.

commit 92856f2d10b57876ad0dcc63184d4130ce754e73
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 14 17:22:58 2020 +0100

    Add pg array type notation support
    
    To support casts like `...::text[]`, which is used by the PostgreSQL
    JDBC client.

commit a71ab20e37845be62dc3428429f4b893b7d1b8bb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 21 11:05:52 2020 +0100

    Bump version to 4.2.0-SNAPSHOT

commit ec9766495b38fb650fd7e19a7cd5c926db0aa036
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 21 10:17:42 2020 +0100

    Improve error message for CREATE VIEW
    
    If the query cannot be analyzed it now includes the error message from
    the analyzer. So people know if e.g. a column is not found.

commit 4c4a0dcb86c5207b3d42b279e493bbee341c6e67
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 16 11:58:43 2020 +0100

    Allow more characters in unquoted string elements of pg arrays
    
    The JDBC client requires support for unquoted `-` and `_` characters.

commit 696b6d9b52f5dce6c9fd9176f4f87c65ffd87a6b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 20 10:27:23 2020 +0100

    Fix subscript handling for ORDER BY

commit b0224f2a3a4774c6551c347f9efd59df357bf888
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 16 18:13:04 2020 +0100

    Fix subscript handling on top of other relations
    
    In a query like
    
        SELECT obj['x'] FROM (SELECT obj ...) AS t GROUP BY obj['x']
    
    a invalid logical plan was created. It looked as follows:
    
        RootBoundary[address['postcode']]
        GroupBy[address['postcode'] | ]
        Boundary[_fetchid]
        Boundary[_fetchid]
        FetchOrEval[_fetchid]
        Collect[doc.users | [_fetchid, address['postcode']] | All]
    
    Currently the `Collect` operator is trying to detect columns that are
    not intermediately used. If it finds any, it substitutes them with a
    `_fetchId`. This `_fetchId` is later picked up by the `FetchOrEval`
    operator and resolved to the actual columns that have been selected.
    
    In the scenario above, the parent was using `obj['x']` and the child had
    `obj`, but several components weren't taking the relationship between
    those into consideration.
    
    So the `Collect` operator assumed that `obj` is unused, but it got
    `obj['x']` as used column, which it couldn't interpret because the
    `RelationBoundary` operator couldn't handle the mapping. There was no
    `<PARENT_REL>.obj['x'] -> <CHILD_REL>.obj['x']` entry.
    
    This raises the question why we have a special notation for lookups into
    objects in the first place. We could also always build functions. One
    reason is that we've index structures for the nested columns for an
    object which we want to utilize.
    
    A `lookup obj -> extract key 'x'` execution would fully load `obj` and
    then parse it to extract the key. That can be an expensive operation if
    `obj` is large. Especially compared to the alternative execution: Using
    a column oriented data structure that we have specifically for
    `obj['x']`.
    
    Note that this fix doesn't yet utilize this. Instead we've:
    
        RootBoundary[address['postcode']]
        GroupBy[address['postcode'] | ]
        Boundary[address]
        Boundary[address]
        Collect[doc.users | [address] | All]
    
    We could follow up with optimizer rules to optimize this scenario.
    
    An alternative approach to fix this was in https://github.com/crate/crate/pull/9519
    
    Which changed the `obj['x']` lookup on the sub-relation to change the
    sub-relation itself.
    
        SELECT obj['x'] FROM (SELECT obj ...) AS t GROUP BY obj['x']
    
        would become
    
        SELECT obj['x'] FROM (SELECT obj, obj['x'] ...) AS t GROUP BY obj['x']
    
    This approach looks simpler, but also seems to break semantics: It
    introduces the notation that a child relation is modifying its outputs
    due to the actions of a parent relation.

commit c9204e8d9cbb1885599ca0604fc2f1f6b1600abf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 20 10:28:10 2020 +0100

    Fix varargs warnings in RamAccountingBatchIteratorTest
    
    Fixes:
    
        warning: non-varargs call of varargs method with inexact argument type for last parameter; new RowN(new String[]{"a", "b", "c"}),

commit 40a2ab71f7ed8bdc1cbf09e76d9ce3b45700566d
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri Jan 17 14:07:32 2020 +0530

    Add plain analyzer to fulltext analyzers

commit b992c4df50c02c16c7e7f1843fc639200145e816
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Fri Jan 17 11:19:47 2020 +0100

    Allow more lenient column type validation in VALUES.
    
    Currently, the column types in VALUES have to be an exact
    match which prevents using expressions that can be implicitly
    casted and `null` literals.

commit a3b28b07f6189e943a538bde35140a1873059ad5
Author: Naomi Slater <23469+mechanomi@users.noreply.github.com>
Date:   Thu Jan 16 19:32:54 2020 +0100

    Improve developer docs for building the CrateDB docs

commit 54c0a4f5d748626dfb5cd260c6a2959f35c5f2c9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 16 15:09:56 2020 +0100

    Fix system table type declarations
    
    We had a couple of more miss-matches between type declaration and types
    returned from system tables.

commit c2b89513b32bad9ecf4fdea2aadeb448806d60e5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 16 11:02:13 2020 +0100

    Fix ClassCastException / type declaration in sys.allocations
    
    `decisions` was typed as `object` but is an array.
    
    After the merge of https://github.com/crate/crate/pull/9456 this
    incorrect typing started causing a `ClassCastException`.

commit e8c6719ce74a15300b322ca0abb9c64b42e21970
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 16 10:56:21 2020 +0100

    Remove setNextRow overrid in SysAllocationDecisionsExpression
    
    Adapts the default implementation instead to handle the null case.

commit 2b621b8977d6b4f1aa808e457e1bce2494f163da
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 15 11:13:53 2020 +0100

    Fix sphinx dev command
    
    `sphinx dev` failed as it couldn't find the `sql_features.tsv` that is
    referenced in `docs/appendices/compliance.rst`.
    
    Changing the path itself in turn broke the `sphinx` command. Possibly
    because `sphinx-autobuild` and `sphinx-build` interpret the path
    differently.
    
    This changes the `sphinx` command to not rely on the `blackbox/docs`
    symlink to `../docs` which solves the issue.

commit c2da1682ed255c9560319b7221a5236aee30dfc9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 15 13:41:14 2020 +0100

    Release 4.1.0

commit 51aa7b3d01939902bd12f6a4e01320b490376672
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 15 10:19:39 2020 +0100

    Make sure CoordinatorTests do not run OOM
    
    Port of
    
    - https://github.com/elastic/elasticsearch/commit/5c72f24b5cf465899eee724632d602c13470c640
    - https://github.com/elastic/elasticsearch/commit/998bb47b4d571266a64b6f37e8b4f0f37e8aaa32

commit a02a70eda0a832b4b4f4da8b2590319a386d71be
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 15 11:24:23 2020 +0100

    Reflect release 4.0.11

commit 470eaa5acfa9b29df372d90c4f8d1cc371f512c0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 14 11:54:44 2020 +0100

    Support pg array value input notation
    
    See https://www.postgresql.org/docs/current/arrays.html#ARRAYS-INPUT
    
    The PostgreSQL JDBC client uses some queries which makes use of this
    notation.

commit 4b872f02ac0a8ff182ccf8e87f92be1d0d999b92
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Dec 17 16:09:15 2019 +0100

    Drop limitation from some copy integration tests.
    
    Such as COPY statements support unbound analysis,
    it is fine to execute tests without `UseJdbc(0)`.

commit 11310f297faa973f82b7c23e085de4adf4937bf3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 14 10:54:47 2020 +0100

    tests: Use unique data for occ doctests
    
    We've had some flaky sequence numbers. This change should allow us to
    rule out any interference with other test files.

commit ab1562b82a9bf5540dc1aae030d5e0c0fef5cf86
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 13 15:30:27 2020 +0100

    Remove arrays indirection for hash calculation
    
    - Replaces the `Function<.., Integer>` interface with
      `ToIntFunction<..>` to make sure there is no boxing
    
    - Avoids using `ctx` within the `ToIntFunction` implementation, to
      reduce the object lifetime. Only expressions & inputs are required for
      the hash calculation.

commit c0e0f687b772d5f1b69d98f8f807b93798b36808
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 13 19:39:07 2020 +0100

    Update netty to 4.1.45
    
    https://netty.io/news/2020/01/13/4-1-45-Final.html

commit ed73bd57a909f8248cedf44bdeb1cf59948b9a47
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 14 10:04:59 2020 +0100

    tests: Make sure disrupted connections timeout eventually
    
    This might prevent `testAckedIndexing` from failing occassionally.
    
    See https://github.com/elastic/elasticsearch/pull/42579

commit aa0e42711b5974edaafb543f85f887f5053838ba
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 13 16:37:03 2020 +0100

    Add support for ALL in array/subquery comparisons

commit d6941a76103b8d5e35a1637de71073c767e0fd57
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 10 16:17:04 2020 +0100

    Add a pg_get_keywords table function
    
    For better compatibility with PostgreSQL.
    
    The function is used in the PostgreSQL JDBC client in a query that is
    invoked when `getSQLKeywords` on `DatabaseMetaData` is called.
    
    We could also use the information in `crash` or the admin-ui for keyword
    highlighting and completion.

commit 8f24e185f0e686a808283b41c769f810abb5c739
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 10 14:13:49 2020 +0100

    Support table functions with schema in the parser

commit 380f1d02f5f52c8e89df91272acde0f5f9424fe8
Author: asdf2014 <asdf2014@apache.org>
Date:   Thu Jan 9 00:03:16 2020 +0800

    Expose the merge.scheduler.max_thread_count setting for non-SSD type disks

commit 70d3d5d288159ec0efd95ef75d929c1ef562fb42
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 9 22:07:19 2020 +0100

    gradle: Don't fail if tests filter doesn't match any tests
    
    This allows to use `./gradlew test --tests ClassName.functionName`
    without it causing a failure because one of the modules doesn't contain
    a matching test.
    
    This makes it easier to use `vim-test` which currently has trouble
    triggering tests in projects with multi-module setups.

commit a3108cee304902579e219535ccc7d01ee22729f5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 9 16:38:02 2020 +0100

    Reduce indirections for symbol casts

commit 2e4521530253fba9b46e56b89150969ce899623f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 9 12:03:47 2020 +0100

    Update outdated es/upstream reference in LICENSE file

commit b64c18d3635c23309fbf3aca4268cbf9fb0f71fd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 9 14:50:17 2020 +0100

    Fix flaky test failures due to open connection assertion
    
    Backport of https://github.com/elastic/elasticsearch/commit/e6f9f0666e2a2cfcd45ef33adb91c49bfc80ba4d

commit c15fa5c81ea344ab63c47e9738eeeab4b507a4e9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 9 10:47:03 2020 +0100

    Add toString implementations to Transport.Connection
    
    We've an assertion in the test layer that prints any open connections in
    the teardown. This increases the amount of information that will be
    printed to make it easier to reason about what is still open.

commit 4341426d3dd539c2f387adbae45d4c9b47b6bc60
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 9 11:48:02 2020 +0100

    Remove tableStats assertion from ANALYZE cmd itest
    
    We've had a test failure in our CI:
    
        REPRODUCE WITH: ./gradlew null -Dtests.seed=AFD89821BB5F96E6 -Dtests.class=io.crate.integrationtests.AnalyzeITest -Dtests.nightly=true -Dtests.method="test_analyze_statement_refreshes_table_stats_and_stats_are_visible_in_pg_class_and_pg_stats" -Dtests.nightly=true -Dtests.locale=pt-MO -Dtests.timezone=Etc/GMT-7
    
        java.lang.AssertionError:
        Expected: is <6L>
            but: was <7L>
                at __randomizedtesting.SeedInfo.seed([AFD89821BB5F96E6:42AC37B62636B5B1]:0)
                at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
                at org.junit.Assert.assertThat(Assert.java:956)
                at org.junit.Assert.assertThat(Assert.java:923)
                at io.crate.integrationtests.AnalyzeITest.test_analyze_statement_refreshes_table_stats_and_stats_are_visible_in_pg_class_and_pg_stats(AnalyzeITest.java:44)
    
    Couldn't reproduce is, so this is a guess:
    
    `TableStats` instances themselves should be save as there is one
    instance per node, but the `internalCluster` could somehow make problems
    if tests are executed concurrently due to it being a static attribue.
    
    This removes the extra assertion. We indirectly verify the stats
    anyway via `pg_class` and `pg_stats` queries.

commit 80f27ae4c045391c517856e84f00c58590e12b2a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 8 14:34:37 2020 +0100

    Make ReadOnlyException error message more verbose
    
    So that if you're looking at a log message from a client you've a better
    indication why that error happened.

commit 7c6846a366b58f06886508a8b2678e3dac26fbd2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 8 17:04:59 2020 +0100

    Make sure describe/bind analysis errors result in sys.jobs_log entries

commit 5ce39f4cb0aa9ec3869afa2dc1cb5a1383147ec9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 7 11:08:58 2020 +0100

    Group unreleased changes

commit bc60ee6b95fab54a3824008645f4efe047ae075b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 7 11:28:34 2020 +0100

    Update Lucene to 8.4
    
    https://lucene.apache.org/core/8_4_0/changes/Changes.html

commit adeb270b9b84797e6e1e58756595d98d6c2af312
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 7 12:02:06 2020 +0100

    Update JaCoCo and forbidden-apis
    
    Mainly for official JDK 13 support
    
    - https://github.com/policeman-tools/forbidden-apis/wiki/Changes#version-27-released-2019-10-12
    - https://www.jacoco.org/jacoco/trunk/doc/changes.html

commit 38bf0c03083dd74bf0bad7beba4a784ff056acfe
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jan 6 12:46:13 2020 +0100

    Always normalize the WHERE clause of relations
    
    Even if the relation is not a field-resolver (e.g. when using views),
    the WHERE clause must be normalized.
    Otherwise e.g. a ``current_timestamp`` scalar isn’t normalized on the
    coordinator node and runs into an NPE on a data node as no
    TransactionContext is set/available.

commit d03cabbe8d82f55212893160ea5e4abe2ead9b22
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jan 6 11:49:48 2020 +0100

    Fix data type of `sys.jobs_metrics.classification['labels']`

commit 5173b655a9fbf72028876ae7b6eb5c4d2431e307
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 19 11:58:53 2019 +0100

    Fix NOT NULL constraint validation for children of object arrays
    
    Given a schema like:
    
        payloads ARRAY(
            OBJECT(STRICT) AS (
                x INTEGER
            )
        )
    
    `payloads['x']` was typed as `integer` instead of `array(integer)`. That
    caused a cast error (`Cannot convert [10, 20, ..] to type integer`).

commit 422aa4b13c47da200052ef7d8a32675dd85f1fab
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 18 16:11:01 2019 +0100

    Update netty to 4.1.44
    
    https://netty.io/news/2019/12/18/4-1-44-Final.html

commit a1de4d53650471a8e33f3df44402b2dbdf7b3cf7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 18 14:34:01 2019 +0100

    Fix crate-node cli script for non-release builds
    
    On non-release builds the `bin/crate-node` script resulted in an error
    because it couldn't find the `NodeToolCli`. This couldn't be found
    because the `crate-app.jar` that was referenced in the `classpath`
    didn't exist. It was called something like
    `crate-app-4.1.0-SNAPSHOT-b144b29bea.jar` instead.
    
    This sets the `archiveFileName` to `crate-app.jar` so that non-release
    builds have the same jar name as release builds do.
    
    Adapting the classpath of the `crate-node` script dynamically didn't
    work out. Changing it to something like:
    
        classpath = sourceSets.main.runtimeClasspath + files("lib/${jar.archiveFileName.get()")
    
    Would require a dependency on the jar task which results in a cyclic
    dependency and breaks the build.

commit 309214125745a95f361b5bac1e4c288b6b51eb02
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 18 14:26:48 2019 +0100

    Fix NPE in verifyIndexIsDeleted on node startup due to stale index file
    
    See https://github.com/elastic/elasticsearch/commit/d10fa1ccbbe419919d5736722c621c3566971be4

commit b144b29bea398c64cf9323cdfeb32aecd197dee3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 17 22:42:31 2019 +0100

    Ignore free memory for shard request sizing
    
    To avoid having large individual shard requests that use up too much
    memory we added a criteria to down-size the number of records per shard
    request based on used & available memory.
    
    The problem of using the available memory is that it can hover within
    the threshold without triggering a GC for a long time. This will cause
    tiny shard requests and impact performance a lot. This can be especially
    noticable on a otherwise empty cluster where somebody is performing an
    initial import.
    
    The first criteria should be good enough, and if it isn't we can look
    into re-adding a second criteria that uses the circuit breaker totals.

commit ac24e79b312d6d810ddf131e2f557a61a52ac669
Author: marregui <miguel.arregui@gmail.com>
Date:   Wed Nov 27 21:13:16 2019 +0100

    Add interval (type) support for OFFSET PRECEDING/FOLLOWING in window functions
    
    When defining a window, to be used by one or several window functions, in
    RANGE mode the value of OFFSET can be of type interval e.g. '30 minutes'::interval.
    This value will be substracted (PRECEDING), or added (FOLLOWING) to the
    value of the ordering column (ORDER BY), the result will be compared to
    the value of the ordering column, for each row. This ofcourse makes sense
    when the ordering column is a timestamp.

commit b9dbbd97f7e441188ddb24f4155e6688642d660f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 17 11:35:16 2019 +0100

    Fix the type of fs.disks and fs.data in sys.nodes
    
    The columns were registered as `object` but are actually an array.
    
    That caused a `ClassCastException` after the merge of
    https://github.com/crate/crate/pull/9456 and potentially could also have
    led to serialization errors using the PostgreSQL protocol.

commit 6b29b5d003c2c6981ad1c50ff117c9b52b7ddf55
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 16 17:16:02 2019 +0100

    Fixed support for `readonly` property in CREATE REPOSITORY
    
    We documented the property as `read_only` but it is actually `readonly`
    and needs to be part of the internal `optionalSettings` properties.

commit 6938e630d0cc1757281360ed34e9e3e71e90dff8
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Dec 16 15:01:14 2019 +0100

    Fix ram accounting leak, close all created contexts
    
    Since c8b99d3a918d8e387cab1b1f53ecda94655a8133, the creator of a
    `RamAccountingContext` is responsible for closing it. Some created
    contexts were not yet tracked and closed.

commit d73b0d23d3ed7deac43ceef6c765854d89924be6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 16 12:27:56 2019 +0100

    Make object column size estimation more accurate
    
    `object` columns can grow very large, our constant estimate of 60 could
    have been way too low in many cases.
    
    In an `INSERT INTO .. (SELECT ..)` case that could lead to out of memory
    errors, as we created very large shard requests due to the
    under-estimation of the size of those.
    
    Follow up to https://github.com/crate/crate/pull/9452

commit 1255b4d15e2cc6063bee938a6073761e7017731a
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Dec 16 12:09:14 2019 +0100

    Fix initial merge buckets error handling
    
    If an error besides `RejectedExecutionException`, e.g. a `CircuitBreakingException`,
    is raised  while triggering the consumer initially inside the cumulative bucket
    receiver, the error isn’t propagated and thus the query will hang.

commit 64c6199816a2e13c2259f9c0bde6a7ee09f196da
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 16 13:03:08 2019 +0100

    Add support for casting objects to text
    
    Casting an object to text will result in a JSON string:
    
        cr> select {x=10, y=20}::text;
        +----------------------------------+
        | CAST({"x"= 10, "y"= 20} AS text) |
        +----------------------------------+
        | {"x":10,"y":20}                  |
        +----------------------------------+
    
        cr> select {x=10, y=20}::text::object;
        +--------------------------------------------------+
        | CAST(CAST({"x"= 10, "y"= 20} AS text) AS object) |
        +--------------------------------------------------+
        | {"x": 10, "y": 20}                               |
        +--------------------------------------------------+

commit 81ff1f5f73c2cba03b25fb1fa3a23a54e2bd9cdd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 13 11:19:05 2019 +0100

    Replace LuceneLongBitSetWrapper with regular BitSet
    
    The implementations which utilized the `LuceneLongBitSetWrapper` used a
    position of type `int` to set/read bits, so using a BitSet
    implementation supporting `long` as index is not necessary.
    
    Benchmarks fluctuate between around +/- 1%:
    
        Q: select e.name as employee, o.name as office from employees e right join offices o on e.office_id = e.id limit 50000
        C: 1
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |       45.114 ±    3.523 |     36.043 |     44.531 |     47.060 |     68.986 |
        |   V2    |       43.779 ±    3.680 |     32.375 |     44.263 |     46.189 |     58.703 |
        mean:   -   3.00%
        median: -   0.60%
        Likely significant
    
        Q: select e.name as employee, o.name as office from employees e full join offices o on e.office_id = e.id limit 50000
        C: 1
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |       46.818 ±    3.190 |     37.121 |     46.690 |     48.465 |     72.315 |
        |   V2    |       46.122 ±    3.685 |     36.927 |     46.136 |     48.158 |     63.124 |
        mean:   -   1.50%
        median: -   1.19%
        Likely NOT significant

commit 344fdeeb973f06e5f52947ba841ff839d3dbce00
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 13 11:11:37 2019 +0100

    Remove unused hppc dependency from dex module

commit 288bdec1d9451768c608df19eed35012605355aa
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Sun Dec 15 20:05:17 2019 +0100

    Account memory for undefined and undefined array types.
    
    Previously, the memory accounting for values of the
    ``undefined`` type would result in 0 bytes and 16 bytes
    for values of the  ``undefined array`` type, regardless
    the size of the array. The null values for both types
    would result in 8 bytes.
    
    Now we use ``RamUsageEstimator.UNKNOWN_DEFAULT_RAM_BYTES_USED``
    for the memory accounting of the above mentioned data types
    and be more precise about memory utilization.

commit 482643d0cb1d9d228e11a63590bafa8591f16bd9
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Dec 10 13:55:28 2019 +0100

    Partitioned columns can be omitted in insert from subquery.
    
    It should be possible to omit some columns of the partitioned
    by clause in the insert from subquery target columns definition.
    The insert from values statement allows it as well.

commit 039e49c927d57409394ab9d744bddda03ebf0927
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 10 16:45:18 2019 +0100

    Add a default implementation for Row::materialize

commit cf26d9754f6c860fa4eae798df6e1b381a52842a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 4 10:39:35 2019 +0100

    Switch from deferred to eager memory accounting
    
    Previously we'd only call the parent circuit breaker after 2MB of memory
    have been accounted for in a local `RamAccountingContext` instance.
    
    This adds a new `BlockBasedRamAccounting` instance which reserves memory
    in blocks eagerly.

commit a697f39c072cc9e3387ad3e273139e42e5c5da95
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 10 13:49:05 2019 +0100

    Reflect 4.0.10 release

commit 897e063a4be86ce34bb869f092eddb9aa911eeb8
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Dec 9 17:41:11 2019 +0100

    Fix estimatedRowSize of the Collect phase.
    
    The table size was falsely used instead.
    Follow up of 0729d4443eb1a62a8ea488c8f19b78411653e42b

commit 563edb2e98b0073bdacca05eea7ced101e2ff07f
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Sun Dec 8 18:01:03 2019 +0100

    Consider generated values when checking constraints on InsertSourceGen.
    
    Previously, check constraints were applied before the generated values
    were injected into sources, that would lead to incorrect insert from subquery
    behaviour for the cases a column uses both generated expression and not null
    constraint:
    
    ```
    create table t (x int, y as x not null)
    insert into t (select 1)
    ```
    The row count will be 0, such as the insertion will fail due to the
    not null check constraint violation.
    
    This change also drops the `InsertSourceGen#checkConstaint` interface method.
    Instead, we perform the constraints check in the generateSource method. The same
    approach is taken in `UpdateSourceGen`.

commit 0f4ffd9ee20d11bbfe983c29a509437f72225c3e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 2 12:21:34 2019 +0100

    Optimize hash code computation in hyperlolog_distinct for strings
    
        Benchmark                      Mode  Cnt    Score   Error  Units
        benchmarkHLLPlusPlusMurmur128   avgt   10   406.607 ±  9.385  us/op
        benchmarkHLLPlusPlusMurmur64    avgt   10   373.042 ±  2.249  us/op

commit c8b99d3a918d8e387cab1b1f53ecda94655a8133
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 6 16:58:55 2019 +0100

    Make RamAccounting creators responsible for closing
    
    This moves the creation of `RamAccounting` instances and closing of
    those instances further together, so that it is easier to reason about
    whether a instance is properly getting closed or not.
    
    The general idea is that whoever creates an instance must also make sure
    that it is closed.
    
    This also removes the `close` method from `RowAccounting` because that
    close call was generally leading to a duplicate close of the underlying
    `RamAccounting` instance.

commit d95c57f47953bfaff7459ff8dc294e3b57c3fe04
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 6 13:43:02 2019 +0100

    Make explain output for primary key lookups more verbose

commit 78751bd306e5d865d66eeeeb7c3f3ebb19706dc2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 6 12:56:48 2019 +0100

    Fix memory accounting leak with primary key operations
    
    The RamAccounting instance wasn't being closed after the primary key
    lookup operation finished. This could result in the circuit breaker
    eventually tripping all operations.
    
    In practice the flush buffer of 2MB prevented this leak from causing
    havoc as most primary key lookup operations stay beneath 2MB and
    therefore never increment the circuit breaker count.
    
    This makes writing a test case also difficult.

commit f821680b14a8b945bde3eca7fcaf5b5c7c7f73fc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 4 16:17:23 2019 +0100

    Support opt-in off-heap allocation for hyperloglog_distinct
    
    This adds a new setting to control if allocations should be done
    preferably on heap or off heap.
    
    Currently only `hyperloglog_distinct` is capable of utilizing off-heap
    allocations.
    
    Off-heap allocation with hyperloglog_distinct currently reduces
    throughput / increase latency, but should reduce GC pressure.
    
    JMH results:
    
        Benchmark                       Mode  Cnt    Score    Error  Units
        benchmarkHLLAggregationOffHeap  avgt   10  978.512 ± 76.352  us/op
        benchmarkHLLAggregationOnHeap   avgt   10  821.812 ±  2.713  us/op

commit 9ddaea3ca9350ff5486d2487984d525caaa0b896
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Nov 26 16:41:00 2019 +0100

    Fix map entry memory accounting at GroupByOptimizedIterator
    
    A HashMap uses a HashMap.Node instance for entries which uses 32 bytes
    instead of the previously accounted HashMap.SimpleEntry which uses 24 bytes.

commit 09261888192343c5a1f26ad859234757ce9590f3
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Nov 25 10:22:21 2019 +0100

    Correct BytesRef SizeEstimator
    
    Array header + alignment size were not accounted for.

commit 8f4406d881b2337e8e17fa188699a9c0ada7ded9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 4 15:40:45 2019 +0100

    Promote unnnest change in release notes to breaking change

commit ae65151a1a4344330e3c03ddda456dfa23660c36
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Dec 4 14:39:31 2019 +0100

    Do not implicit add ordering on unsupported data types.
    
    The plan optimization for subqueries introduced in e6c7b08954a23bc8d2910fdb61196882d46ef74e did not honor unsupported
    ordering on non-primitive data types.
    
    Fixes #9406.

commit def270fe2110a933107a573c1066788673f404e3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 4 10:16:45 2019 +0100

    Change HyperLogLogPlusPlus to use a ByteBuf instead of raw byte array
    
    Will allow us to switch over to using a off-heap ByteBuf.

commit a9ccba8c4ae54b2ab085f7125e00a572a904df14
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 4 10:10:16 2019 +0100

    Move HyperLogLogPlusPlus to enterprise package

commit bb23cb7b200dbc9c6425fcc8a5bd35e253e15fb3
Author: marregui <miguel.arregui@gmail.com>
Date:   Thu Nov 28 16:01:36 2019 +0100

    Rebuild version map when opening internal engine
    
    With this change, we will rebuild the live version map and local checkpoint using
    documents (including soft-deleted) from the safe commit when opening an internal
    engine. This allows us to safely prune away _id of all soft-deleted documents as
    the version map is always in-sync with Lucene index.
    
    Relates #40741 (https://github.com/elastic/elasticsearch/pull/40741)
    Supersedes #42979 (https://github.com/elastic/elasticsearch/issues/42979)
    
    Port of https://github.com/elastic/elasticsearch/pull/43202

commit fbb5637d0174db1263fcbedf3560e47d26f86d0d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 3 16:21:47 2019 +0100

    Replace RamAccounting roundUp with alignObjectSize
    
    The idea behind the `roundUp` was to account for object alignment
    overhead. We can use `RamUsageEstimator.alignObjectSize` to do that.

commit 22b9f4e7ef5a85bb1164bd2e8d9eb1a9fd2b2bea
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 2 16:40:47 2019 +0100

    Replace RamAccountingContext usages with RamAccounting interface

commit 62ebfb00681194505cc7648cc966d98b90d63d1e
Author: marregui <miguel.arregui@gmail.com>
Date:   Mon Dec 2 15:15:07 2019 +0100

    Simplify initialization of max_seq_no of updates
    
    Today we choose to initialize max_seq_no_of_updates on primaries only
    so we can deal with a situation where a primary is on an old node
    (before 6.5) which does not have MUS while replicas on new nodes (6.5+).
    However, this strategy is quite complex and can lead to bugs (for
    example #40249) since we have to assign a correct value (not too low)
    to MSU in all possible situations (before recovering from translog,
    restoring history on promotion, and handing off relocation).
    
    Fortunately, we don't have to deal with this BWC in 7.0+ since all
    nodes in the cluster should have MSU. This change simplifies the
    initialization of MSU by always assigning it a correct value in
    the constructor of Engine regardless of whether it's a replica or
    primary.
    
    Relates #33842
    
    Port of https://github.com/elastic/elasticsearch/pull/41161

commit 293a16a4042b03a1450616388e453feeb358d686
Author: marregui <miguel.arregui@gmail.com>
Date:   Mon Dec 2 16:30:53 2019 +0100

    Change vararg parameter type in signature of test, to remove compiler warning

commit 2c90055235c496ebe53afc591b57228d9064c084
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 2 12:38:33 2019 +0100

    Remove BigArrays from HyperLogLogPlusPlus
    
    Due to the removal of the bucket support we no longer need to use a
    BigArray instance.

commit 442a1bc485f60847a82a6a19398c449e2cde8f43
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 2 10:11:17 2019 +0100

    Remove bucket support from HLL
    
    We never made use of the bucket support within HyperLogLogPlusPlus.

commit 7c740bac274029f86ff9b96913e460d8986b3935
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 2 16:19:00 2019 +0100

    Remove RamAccounting from LuceneBatchIterator
    
    It is not the responsibility of the inner most BatchIterator to trigger
    circuit breaking errors.
    
    A component that allocates memory for buffering is responsible to fail
    and propagate that failure if it uses up too much memory.
    
    This aligns the `LuceneBatchIterator` with all the other data providing
    `BatchIterator` implementations. (ordered collect, collect from system
    tables, etc..)

commit 20b403ce86e3b22c1a8d46b6e79312e11e818b42
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Dec 2 13:02:34 2019 +0100

    Add the `values` table function and use it in `values` statements.
    
    The behaviour of the unnest table function has been
    changes to unnest nested arrays as well. The implementation
    of the `VALUES` statement uses the `unnest` table function
    which leads to the behaviour change of the statement. Therefore,
    we introduce the `values` table function that can be used for the
    `values` statement's implementation.
    
    `VALUES([[1, 2], [3]], [‘a’, ‘b’])`
    will return the following rows:
    
    ```
        [1, 2] | a
        [3] | b
    ```
    
    instead of
    ```
        1 | a
        2 | b
        3 | NULL
    ```

commit a0007366d8f595054d333af99029140291e25fd4
Author: marregui <miguel.arregui@gmail.com>
Date:   Mon Dec 2 12:08:12 2019 +0100

    Do not mutate engine during planning step
    
    This cleans up the Engine implementation by separating the sequence number
    generation from the planning step in the engine, to avoid for the planning
    step to have any side effects. This makes it easier to see that every
    sequence number is properly accounted for.
    
    Port of https://github.com/elastic/elasticsearch/pull/39571

commit 7aca94923d5dee86cfdc7763d8ea30bcc88d851e
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 22 14:40:16 2019 +0100

    Adds `partition_ident` column to sys.segments table.
    
    This column is useful to group segments per partition on partitioned
    tables.

commit 20eb5d994f15e68c0ae1ef38a7100ed51d953e96
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Dec 2 16:39:14 2019 +0100

    Use a list-table for sys.segments documentation
    
    Also adds description of the `node` object column.

commit 808328f049dc0b186e4ed47e4f1b70085b8fa356
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Nov 25 16:08:08 2019 +0100

    Use query-circuitBreaker BigArrays at shard collectors
    
    Follow up of c55be85a4f289dda5c23da1ec539aa01027ccc1d.
    
    This will also use the query CircuitBreaker for BigArrays used inside
    ShardCollectors (e.g. optimized grouping iterator) instead of
    the non-tripping injected BigArrays instance.

commit abf8dc7b9fdffbe5d3eb1775f1749820fd4ad8c0
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 29 11:56:41 2019 +0100

    Stop processing ordinals if killed or closed.
    
    Processing grouping keys and aggregation states consumes memory which
    could lead to an OOM if memory is already exhausted.
    It must stop processing once kill or close is called
    (e.g. when a CircuitBreakerException is already thrown due to missing memory).

commit ed3aea53d4a16f6047487db0cddc3ba1dc66406f
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Nov 27 14:36:51 2019 +0100

    Improve Snapshot Corruption handling in Edge Case
    
    This pull request is a backport of two closely related pull requests:
    https://github.com/elastic/elasticsearch/pull/47552
    https://github.com/elastic/elasticsearch/pull/47598
    
    The purpose of this pull request is to track shard snapshots and mark
    them as failed when either multiple data-nodes are lost during the snapshot
    process or shard snapshot failures occure before a node left the
    cluster. Before this was not the case, so a failed shard would not have been
    marked as failed during the snapshot finalization.
    
    The problem is fixed by correctly keeping track of all previous completed
    shard states as well in this case and add a consistency assertion to
    SnapshotsInProgress. More details can be found in the original prs
    mentioned above.

commit ddba3be7ec93060d2759d9a7382e00b7ecc7b95d
Author: marregui <miguel.arregui@gmail.com>
Date:   Fri Nov 29 13:25:43 2019 +0100

    Verify consistency of version and source in disruption tests
    
    With this change, we will verify the consistency of version and source
    (besides id, seq_no, and term) of live documents between shard copies
    at the end of disruption tests.
    
    Port of https://github.com/elastic/elasticsearch/pull/41614
    Required by https://github.com/crate/crate/pull/9394

commit c936225eea4935995081f6ce00ddcb469017002e
Author: Autophagy <mika@crate.io>
Date:   Thu Nov 28 17:33:40 2019 +0100

    Added a extra tag anchor for tables-need-to-be-upgraded warning
    
    At the moment, we redirect people, based on the error message, to https://cr8.is/d-cluster-check-3,
    which resolves to https://crate.io/docs/crate/reference/en/latest/admin/system-information.html#tables-need-to-be-upgraded
    
    However, this section header no longer exists, so the client no longer jumps to the relevant section. We cannot change the bit.ly
    link to point to the new header, so this commit just embeds that header tag into the same section as the actual target.

commit 717dcd3a9c4e4b4ee2584d44ae55f6c12725a371
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 28 16:18:16 2019 +0100

    Fix ALTER TABLE .. ADD to work if table contains nested primary keys
    
    This fixes #9386
    
    `AnalyzedTableElements.toMapping()` requires the individual table
    elements to be connected with their child elements to correctly generate
    the mapping for object columns.
    
    Internally when we process a `ALTER TABLE .. ADD` we implicitly re-add
    all existing primary keys to the `AnalyzedTableElements` structure, but
    if the primary keys were nested columns we didn't build the object
      graph.
    
    Furthermore, we first used the `ident(..)` setter followed by the
    `name(..)` setter, the `name(..)` setter implicitly created the `ident`
    which meant that all nested primary keys were changed to their top-level
    object name.
    
    This caused a `column "xy" specified more than once` error.

commit c0af96d73475b0c2a874b5b6062f5ff0bc55a9d7
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Nov 27 22:43:53 2019 +0100

    fixup! Convert array object argument to sql array instead of object.

commit 40d07e069c94b551c015afb799da2ffdf249fa9f
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Fri Nov 22 16:44:02 2019 +0100

    Convert array object argument to sql array instead of object.
    
    The conversion is used in testing layer only when we used the
    JDBC client.

commit 8e1ba6616f5e2027d4b9f0f081b99b51d26e6fc2
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Fri Nov 22 14:59:59 2019 +0100

    Map crate object array type to pg json array.
    
    Such as we support `PGArray` types there is no reason to map
    the CrateDB `array(object)` type to the pg `JSON` type, but rather
    to pg `PGArray(JSON)` type.

commit 4154a6f516c1423765c87a184a56202fdd9160a8
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Nov 26 23:09:05 2019 +0100

    Use the antlr parser for parsing pg arrays.
    
    Such as `PgArray#decodeUTF8Text` contained at least
    two known bugs related to parsing the `point` and
    `varchar` Postgres types, and was hard to extend and reason
    about, we decided to go with the Antlr parser to parse/decode
    pg arrays.
    
    This change fixes the above mentioned issues with insertion
    of the `varchar` and `point` type arrays and introduces a new
    approach to parse the pg arrays.

commit 3091e260f4e1c6546830d5ec47829b572329867e
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Nov 27 10:51:50 2019 +0100

    Speed up Snapshot Finalization
    
    This pull request is a backport of
    https://github.com/elastic/elasticsearch/pull/47283
    
    The purpose of this pull request is to speed up the snapshot
    finalization. This is archived by parallelizing the writes of the
    metadata in the snapshot finalization step. Also, this will
    generally speed up the snapshot process overall in case of large
    number of indices.
    
    This improvement makes sense, because the snapshot finalization
    takes much longer since https://github.com/crate/crate/pull/9327 is integrated.

commit 42a36970eb0308bdcd9a56d4cb51117fc0bb4100
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 27 11:17:26 2019 +0100

    Make unnest evaluation lazier
    
    Should avoid some list building & copy operations.

commit 34998f088b35d090cbdbac0c003e40b0c330ea86
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 27 10:42:59 2019 +0100

    Make unnest also unnest multi-dimensional arrays
    
    We had a miss-match between what type we reported as return type for
    unnest and what values we actually returned.
    
    For nested arrays we returned the inner-most type as return type:
    
        unnest([[1, 2], [3, 4]]) -> bigint
    
    But we didn't unnest the nested arrays, instead we then returned:
    
        [1, 2]
        [3, 4]
    
    This changes the implementation to do the unnesting recursive to be
    compatible with PostgreSQL and to fix the `ClassCastException` that
    occurred due to the return-type / value miss-match we had before.

commit 3ef450cc84c126a71bd4a2526992fd98de673d86
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 26 15:40:05 2019 +0100

    Integrate memory accounting into TopNDistinct

commit d22f568d8085cb35c39163dccfd8f5d78b0830a9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 25 13:54:07 2019 +0100

    Add dedicated top-n-distinct integration test & release notes

commit b61cb6b69195a8f26d1eb5b382fa8f2b0e459a3f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 25 13:16:07 2019 +0100

    Take cardinality ratio into consideration when optimizing to use TopN-distinct

commit a3a6b433ab3f21027ff2dba31decf787d51f8222
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 25 10:31:41 2019 +0100

    Use topN distinct optimization only if all nodes support it.

commit 9557147d48096129f73ec9212785689df6a2a037
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Nov 23 17:27:33 2019 +0100

    Optimize DISTINCT with LIMIT
    
    So far we executed DISTINCT or GROUP BY (without aggregations) as a
    pipeline breaker: Consume all rows from the source while keeping track
    of the unique rows encountered.
    
    The idea behind that was that if aggregates are present, we need to
    consume all rows to compute the correct values. But if aggregates are
    absent and we have a LIMIT present as well, we can do an early
    termination after we've seen N rows.
    
    This adds a new operator, projection, projector and BatchIterator to do
    that.
    
        Q: select distinct "cCode" from uservisits limit 20
        C: 15
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |      759.044 ±  556.896 |    245.728 |    503.497 |    593.555 |   2256.398 |
        |   V2    |       23.080 ±   46.996 |      1.784 |      3.432 |      4.471 |    141.736 |
        mean:   - 188.20%
        median: - 197.29%
    
        Q: select distinct "searchWord" from uservisits limit 20
        C: 15
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |     1116.272 ±  955.815 |    373.133 |    673.789 |    986.535 |   4350.002 |
        |   V2    |        3.275 ±    1.402 |      1.987 |      2.991 |      3.279 |     10.644 |
        mean:   - 198.83%
        median: - 198.23%

commit d0584471b51d2de1b99a73902eacbd4bb5d13650
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 25 16:16:36 2019 +0100

    Reflect 4.0.9 release

commit 628c5fdca926e9867af5966a3e4d149a6ced954c
Author: marregui <miguel.arregui@gmail.com>
Date:   Fri Nov 22 13:03:39 2019 +0100

    Disable merges in testRebuildLocalCheckpointTracker
    
    In this test, we keep track of a list of index commits then verify that
    we reload exactly every operation from the safe commit. If a background
    merge is triggered, then we might have a new index commit which is not
    recorded in the tracking list. This change disables merges in the test.
    
    Port of ES https://github.com/elastic/elasticsearch/commit/1ae53e6b20771fb29dec0095dc3a996e28540c08
    which addresses https://github.com/elastic/elasticsearch/issues/36470.

commit 705f770537cbec2baa1e3df09726650ea3b1022c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 22 22:20:11 2019 +0100

    Make sure to flush channel if client sends flush request
    
    `asyncpg` broke with the latest 0.20 update. They added support for
    PgBouncer which contains a change to replace a `sync` after a
    `parse/describe` sequence to a `flush`.
    
    (See https://github.com/MagicStack/asyncpg/commit/b043fbd3303272580f54d5aa89932384ec5fb973)
    
    Our `flush` handling was a no-op so far if there wasn't an `execute`
    before, but we're supposed to flush the channel.
    
    Before this commit the communication looked as follows and then got
    stuck:
    
        [DEBUG][i.c.a.s.SQLOperations    ] [Hinterer Geißstein] method=parse stmtName= query=CREATE TABLE t1 (x int primary key, y int) paramTypes=[]
        [DEBUG][i.c.a.s.SQLOperations    ] [Hinterer Geißstein] method=bind portalName= statementName= params=[]
        [DEBUG][i.c.a.s.SQLOperations    ] [Hinterer Geißstein] method=describe type=P portalOrStatement=
        [DEBUG][i.c.a.s.SQLOperations    ] [Hinterer Geißstein] method=execute portalName= maxRows=0
        [INFO ][o.e.c.m.MetaDataCreateIndexService] [Hinterer Geißstein] [t1] creating index, cause [api], templates [crate_defaults], shards [4]/[0], mappings [default]
        [TRACE][i.c.p.p.Messages         ] [Hinterer Geißstein] sentCommandComplete
        [TRACE][i.c.p.p.Messages         ] [Hinterer Geißstein] sentReadyForQuery
        [TRACE][i.c.p.p.PostgresWireProtocol] [Hinterer Geißstein] msg=P msgLength=51 readableBytes=51
        [DEBUG][i.c.a.s.SQLOperations    ] [Hinterer Geißstein] method=parse stmtName=__asyncpg_stmt_1__ query=INSERT INTO t1 (x) VALUES (?) paramTypes=[]
        [TRACE][i.c.p.p.PostgresWireProtocol] [Hinterer Geißstein] msg=D msgLength=20 readableBytes=20
        [DEBUG][i.c.a.s.SQLOperations    ] [Hinterer Geißstein] method=describe type=S portalOrStatement=__asyncpg_stmt_1__
        [TRACE][i.c.p.p.PostgresWireProtocol] [Hinterer Geißstein] msg=H msgLength=0 readableBytes=0
        [DEBUG][i.c.a.s.SQLOperations    ] [Hinterer Geißstein] method=sync deferredExecutions=0

commit aae03f5b51b690408e8972be64d367b07b4474d0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 22 15:18:29 2019 +0100

    Update Admin UI to 1.15.5

commit 40f2f08dbb5f5baff017e348e977882ade7872d7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 21 12:25:57 2019 +0100

    Approximate row counts in GROUP operator based on statistics

commit 918b928fd99528139b5c568c4921cde9f593c188
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 21 10:37:50 2019 +0100

    Make params available to LogicalPlan early on and use in selectivity functions

commit a8bad1e94de2dd8c87a1e3aee915e7930e0526f8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 20 16:51:58 2019 +0100

    Use null fraction for IS NULL selectivity calculation

commit 0729d4443eb1a62a8ea488c8f19b78411653e42b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 18 12:08:36 2019 +0100

    Utilize column stats to approximate selectivity of the where clause
    
    This is a first step to start utilization of the statistics that we've
    available.
    
    This first implementation only handles `AND`, `OR`, `NOT` and `=`. All
    other functions or operator default to a magic selectivity value.

commit 979282452791334ad04942b8252c8cb8cd2c5e7a
Author: marregui <miguel.arregui@gmail.com>
Date:   Wed Nov 20 16:13:15 2019 +0100

    Fix incorrect test InternalEngineTests.testRebuildLocalCheckpointTracker

commit b75936d5092ebcc71c85122d2eecf3b815282d33
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 20 10:38:54 2019 +0100

    Include orderBy of collectPhase in explain output

commit e589bbf2a03d32b6bf9ae07c4f3472c4e9e6681b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 20 09:33:17 2019 +0100

    Fix numHits must be > 0 regression

commit ed5cd253de1ff2cc7a1eeeb09fe087f46de85cc2
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Nov 14 18:11:47 2019 +0100

    Fix case sensitivity of unquoted column names in conflict clauses

commit b126ec5aaec7fd44d67759272180d8149b559d26
Author: marregui <miguel.arregui@gmail.com>
Date:   Wed Nov 13 20:13:33 2019 +0100

    Advance max_seq_no before add operation to Lucene
    
    This commit fixes the issue of potential mismatches between the max_seq_no in
    the commit's user_data and the seq_no of some documents in the Lucene commit.
    The mismatch could arise when processing an operation on a replica engine, as
    we first added it to Lucene, then to the translog, to finally mark seq_no as
    completed. If a flush occurred after step1, but before the marking, then the
    max_seq_no in the commit's user_data would be smaller than the seq_no of some
    documents in the Lucene commit.
    
    Port of https://github.com/elastic/elasticsearch/pull/38879

commit b469ea932a9144047b9721b5aa625e44ab64556a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Nov 16 17:35:01 2019 +0100

    Fix some int multiplication overflow warnings
    
    Reported by lgtm

commit 7d516e7c26df36cea357269bb4b7661b89278f4b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 14 14:44:29 2019 +0100

    Schedule at most one ANALYZE at a time
    
    With the recent changes to use `ANALYZE` for the periodic stats update
    the operation may also take a bit longer.
    
    We want to make sure that we don't run multiple ANALYZE operations in
    parallel, even if a user lowers the period refresh interval to a low
    value.
    
    So this changes the logic that the next update is scheduled after
    the previous one completed.
    
    So instead of
    
        |-----|-----|
              >+++  >+++
    
    We have:
    
        |----->+++|----->
    
    Where:
    
        | indicates a schedule start
        > indicates ANALYZE start
        + indicates ANALYZE running

commit f2ce96b0939dfca3c502bd1b6ca644651ab2876c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 14 15:37:18 2019 +0100

    Integrate RamAccounting into the ReservoirSampler

commit 6e7208632c68c47c9078f3c8763e4e7a85dbdbcc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 14 15:17:25 2019 +0100

    Further reduce disk lookups in ReservoirSampler
    
    Instead of doing `n * columns * numShards * numPartitions` value lookups
    this reduces the number to `n * columns`.

commit c0a07787a2956fb527b9a09b4846cda4bc6974ff
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 14 14:13:57 2019 +0100

    Fix null fraction calculation in ColumnStats

commit d5e456e5cdd22db0406fa74de776ae0a4294e2fa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 13 15:52:46 2019 +0100

    Add a `pg_stats` table to expose column statistics
    
    https://www.postgresql.org/docs/current/view-pg-stats.html

commit c112368fdeabbd66dce6f6e0d3091ccb6040dae3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 13 13:24:47 2019 +0100

    Keep a histogram over the samples in ColumnStats
    
    The histogram won't include values that also appear in
    most-common-value, similar to how it is done in PostgreSQL:
    
        select most_common_vals, most_common_freqs, histogram_bounds from pg_stats where tablename = 'tbl' limit 1;
        -[ RECORD 1 ]-----+----------------------------------------------------------------------------------------
        most_common_vals  | {10,20}
        most_common_freqs | {0.38961,0.0865801}
        histogram_bounds  | {30,31,32,33,34,36,37,38,39,40,42,43,44,45,46,48,49,50,51,52,54,55,56,57,58, ...,148,150}

commit 7850a48ce76f7ce93010f02a9b9577307e3e7e44
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 13 12:52:03 2019 +0100

    Generate most common values for ColumnStats

commit 1aef728ce9d14eb5a952b158e675fa28e4854e7d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 12 17:07:48 2019 +0100

    Change TableStatsService to invoke ANALYZE

commit 43b368bb052e8be4ba707501e438f2c6b47d919e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 11 15:14:38 2019 +0100

    Generate statistics over the data in tables
    
    This is a first step towards having statistics that we can utilize in
    the planner to optimize plans and to estimate memory requirements of a
    plan.
    
    This changes the implementation of the `ANALYZE` command from triggering
    a `sys.shards` query and updating the stats based on the result to:
    
     - Fetching samples per table from all nodes
     - Merging the samples and generating statistics based on those samples
     - Publishing the samples to all other nodes.
    
    There are still some TODOs which will require follow-ups:
    
     - The `TableStatsService` hasn't been updated to use the new `ANALYZE`
     - The `ColumnStats` contain some logic that can be used to generate the
     most common values and a histogram, but it doesn't do that yet.
     - The data is not used and not exposed.

commit 03d40da1719368089c457ffe1959a7d6a797c418
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 11 12:51:41 2019 +0100

    Move table stats components into a statistics package

commit 209158c620d1c430b5c71eb8bcf4181c94354be8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 11 10:27:05 2019 +0100

    Expose num docs from table-stats via pg_class.reltuples
    
    In PostgreSQL the `reltuples` column of the `pg_class` table outputs the
    number of rows in a table based on the statistics that are internally
    available. From their docs:
    
    > Number of live rows in the table. This is only an estimate used by the
    > planner. It is updated by VACUUM, ANALYZE, and a few DDL commands such
    > as CREATE INDEX.
    
    This commit mirrors the behavior of PostgreSQL.

commit a0a704f00ee1314b5fbdf2b11807a73bc8f3b116
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 8 15:22:07 2019 +0100

    Add an analyze statement to trigger statistics updates

commit 60e1600738c1a7f8f4eb75a415d596f9ef147351
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Nov 6 16:09:48 2019 +0100

    Make Snapshot Logic Write Metadata after Segments
    
    Backport of https://github.com/elastic/elasticsearch/pull/45689
    Write metadata during snapshot finalization after segment files
    to prevent outdated metadata in case of dynamic mapping updates.

commit c896b9676ece53dd16aec6e975f71acd0cd5d878
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 11 21:46:05 2019 +0100

    Update gradle to 6.0

commit 48568d30e74e531c22a6cb07815468c552c3a670
Author: marregui <miguel.arregui@gmail.com>
Date:   Mon Nov 11 16:19:20 2019 +0100

    Fix the flakiness in InternalEngineTests.testRebuildLocalCheckpointTracker

commit dfed1ca79cde0ecfb79e0aa16eca41bf597bfe19
Author: marregui <miguel.arregui@gmail.com>
Date:   Thu Oct 31 12:06:04 2019 +0100

    Advance checkpoints only after persisting ops
    Port of https://github.com/elastic/elasticsearch/pull/43205
    
    Local and global checkpoints currently do not correctly reflect what's persisted to disk. The issue is
    that the local checkpoint is adapted as soon as an operation is processed (but not fsynced yet). This
    leaves room for the history below the global checkpoint to still change in case of a crash. As we rely
    on global checkpoints for CCR as well as operation-based recoveries, this has the risk of shard
    copies / follower clusters going out of sync.

commit b293216ef6a5438bba07a82c5248a0460d93d0fe
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Fri Nov 8 10:03:08 2019 +0100

    Add internal cast functions for geo and object array types.
    
    It is possible to convert geo and object types to and from other
    types if the conversion is allowed. Therefore, there is no reason
    not to allow conversion geo and object array types.

commit 7d6c7c46bc0f7ea91fb776581598fdb4edadf91a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 7 09:37:46 2019 +0100

    Update Lucene to 8.3

commit 315ceb8cc6df2f8740f3009f206b4a4a64ec234e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 7 11:18:06 2019 +0100

    Reflect 4.0.8 release

commit 0c3a41d0e99f0c453bb94183ea18a02cf5deaa2d
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon Oct 28 13:46:01 2019 +0100

    Update crate-docs-theme config module name

commit 492993202e9317e634b232cd8c74741705fead3f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 6 11:11:45 2019 +0100

    Integrate memory accounting into LuceneOrderedDocCollector
    
    This adds a (naive) way to do memory accounting in the
    `LuceneOrderedDocCollector`.
    
    The `TopFieldCollector` pre-allocates a `PriorityQueue` with `batchSize`
    items. So this adds memory accounting for `batchSize * FIELD_DOC_SIZE`
    bytes. (It ignores the memory usage of `FieldDoc.fields` as we cannot
    know the memory usage up-front.)
    
    It also adds some logic that attempts to lower the `batchSize` (by
    evaluating the query). As the query evaluation might be expensive by
    itself, this is only done if the `batchSize` is sufficiently large.
    
    A better / alternative approach would be to follow the same pattern as
    used in https://github.com/apache/lucene-solr/pull/754, but it would
    require us to re-create the `LargeNumHitsTopDocsCollector` with support
    for memory accounting and support for `FieldDoc` (sorting by `Sort`
      instead of by score only)
    
    That's significantly more complex. This commit here is a "maybe it is
    good enough" fix to reduce the chance of OOM errors.

commit 80b49b68c3fd78500ca9315216e035cc9cc98832
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 6 09:39:38 2019 +0100

    Downsize batchSize to available number of documents
    
    The TopFieldCollector used pre-allocates `batchSize` items, which might
    blow up if `batchSize` is large.
    
    This change helps in cases where the actual number of documents is lower
    than the requested `batchSize` (which is based on the user supplied
    `LIMIT`)

commit bb4fae62014ba83a87928b682d1c95b01eddbeb8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 6 15:27:11 2019 +0100

    Fix NPE in StringPartitionTableParameterExpression

commit c0eb75922304f5190f3622898249b44b34149595
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 6 15:16:07 2019 +0100

    Update the admin ui to 1.15.4

commit c95761b5c66aca9c0ffa60986395aefe58e07b45
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 5 13:28:30 2019 +0100

    Remove volatile flags in (Lucene)OrderedDocCollector
    
    These components don't support concurrent access, so there is no need
    for the mutable attributes to be volatile.

commit 5d9c20c2a74f712f08b0b807f3546c6645cc6c68
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 5 11:48:57 2019 +0100

    Avoid iterator allocations in ScoreDocRowFunction
    
    `apply` of the `ScoreDocRowFunction` is called in an inner loop.
    Avoiding the iterator allocations should reduce GC pressure a bit.

commit 34d5dd46291e0dc7b5b13314f9c0cbd9d4fe3cbd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 30 14:30:34 2019 +0100

    Extend sys.snapshots with failure information

commit 17ed4b41fbf4bf5122aa233ca0d6a9563393d6e7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 4 17:17:59 2019 +0100

    Fix verify call in snapshotFile method
    
    In https://github.com/crate/crate/commit/db89c9c06c649a1b0b1a90ba9262b511521380ef
    the `verify` call was accidentally moved into the for loop, which broke
    the verify logic and could lead to incorrectly failing the snapshotting
    with a `CorruptIndexException`.

commit 09a2d656110575b379cdf587dade9de1c8d5c3d4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 30 17:17:13 2019 +0100

    Include a reason in the job killed exception
    
    In some cases we internally trigger a kill for a job. We've seen on some
    clusters that this happened but it was difficult to figure out the exact
    cause.
    
    By adding a reason to the exception it will be easier to determine the
    cause of a KILL operation.

commit ca95a507c4596c1b4471139992b072dc74a52fbe
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 4 13:22:08 2019 +0100

    Make sys.cluster a regular system table
    
    `sys.cluster` was handled in a special way with a separate
    `CollectSource` and `ReferenceResolver` implementation.
    
    This removes some of the special handling in favour of the
    `SysTableDefinitions` which is used for most other system tables.

commit a15c4326f5b004ec739211fb760d216b77f58e0a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 31 14:36:57 2019 +0100

    Use G1GC by default instead of CMS
    
    There is a JEP out (https://openjdk.java.net/jeps/363) that proposes to
    remove the Concurrent Mark Sweep GC in JDK 14.
    
    We recently did various work-load tests in an attempt to find gaps in
    our circuit breaker logic and in these tests we already focused on using
    G1GC.
    
    Overall it seemed as the latency (especially tail latency) is overall
    better with G1GC in the workloads we tried. So I think it is time to
    change the default.
    
    Users could still change back by changing the options manually in case
    they experience a regression with their particular workload.

commit 4095deb6da2a079bd658b23d3a20f05ce818a400
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 1 15:38:31 2019 +0100

    Fix function symbol formatting, quote if name contains spaces
    
    Function names containing spaces must be quoted when printed.
    Fixes #9311.

commit 1f02be886def869b9eb858a6f9cdeca517be77e0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 28 15:02:42 2019 +0100

    Add full integration tests for S3 snapshotting using minio

commit b655948510394ccefdd4ae42b631fc7ae6452ba5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 31 12:11:23 2019 +0100

    Remove duplicate ActionListener to BiConsumer converter function

commit 95a5f24f5b3099fb399826e4a2e398e1e45fa13b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 28 23:33:34 2019 +0100

    Remove separate lastThrowable attribute from IncrementalPageBucketReceiver
    
    Checking `isCompletedExceptionally` has about the same cost. (A volatile
    read)

commit 1f376f52dbf895d964bec85ada56f5050f123a2c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 29 22:33:29 2019 +0100

    Use StampedLock instead of ReentrantReadWriteLock in JobsLogs
    
    We don't need the reentrant characteristic, so we can go with a
    StampedLock which is cheaper.

commit f41382ee7ff55006839ae8512eef5f1ef5c52a09
Author: turbo-ele <eliash@gmx.at>
Date:   Thu Oct 24 11:30:49 2019 +0200

    Added note in docs for cluster.routing.allocation filters.
    
    .. to point out that applying such filters leads to deallocation of
    nodes where filters do not match.

commit 4146319559987b3726c1b034e0cb8f537c8b43a3
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Oct 28 10:54:41 2019 +0100

    Remove redundant normalization of relation in insert from subquery plan.
    
    The normalization is done in LogicalPlanner#normalizeAndPlan.

commit 17a40b0ddecb200fd78e654b19af4d5657d14cac
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 25 13:44:14 2019 +0200

    Change DirectExecutorService to a Executor
    
    There are already `instanceof ThreadPoolExecutor` checks for the other
    executors to check if it is okay to call shutdown, so we can also change
    the interface to `Executor` and have a simpler DirectExecutorService
    implementation.

commit 138c254cc0406ad6c01f31efe09f6b9df60548a3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 25 12:13:55 2019 +0200

    Change OutputS3 to use CompletableFuture

commit 4810705db5a1835029a67b3a19b214b56b636e83
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 25 12:24:57 2019 +0200

    Rename seq# powered OCC parameters to ifSeqNo/ifPrimaryTerm
    
    Backport of https://github.com/elastic/elasticsearch/pull/36757.

commit d0810488d6b6e00bebc38c24edad98ecff079f1a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 25 11:25:32 2019 +0200

    Tune handling of license, local and session_transaction_mode scopes

commit 55545328dcb13cba74d1ab0c9781af59cced8352
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 25 11:18:25 2019 +0200

    Remove support for updating both transient and persistent settings at once
    
    Due to how our `SET GLOBAL` statement works it is from a user
    perspective not possible to set both transient and persistent settings
    in one operation. So we can remove the internal support to do so.
    
    The internal setting merge logic (including persistent settings when
    updating transient settings) was already unnecessary outside of test
    cases because if transient settings were present, the persistent
    settings were always empty.

commit 54e395c7d1e18d82007817f1bf77c7fcd3af6fce
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Oct 15 17:14:45 2019 +0200

    Add unbound analysis for SET

commit 98bacf4946e8efb50034328ed8d33a6a6647fa6a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 24 19:53:29 2019 +0200

    Fix varargs warning in CIDRRangeQueryTest
    
        CIDRRangeQueryTest.java:62: warning: non-varargs call of varargs method with inexact argument type for last parameter;
            try (QueryTester tester = createQueryTester(colName, valuesToIndex)) {

commit 63f56c60468a3ef133fc213a4735b38eb367552b
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 25 09:45:25 2019 +0200

    Add detailed explanation to join-on-multiple-tables limitation docs

commit 5b47bf71d080ac563a97f80d589be1c2213bbfb9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 24 19:54:22 2019 +0200

    Update netty to 4.1.43

commit 9c3563aaa5fce8366f41feb77a4d712aba73ca88
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 24 09:58:02 2019 +0200

    Take memory usage into consideration when building result request pages
    
    Our default page size is rather large. There are two reasons for this:
    
    - To avoid extra latency caused by internal pagination requests
    - To avoid expensive operations (like `searchMore` in
    `LuceneOrderedDocCollector`, retrieving additional pages for sorted
    operations is costly)
    
    But if individual records are large this can use up a significant
    portition of the heap, so this commit introduces the used memory as a
    second criteria for the internal request (page) building.

commit 912946db82d9135abe646bf71a4efaf86df4b0f0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 24 14:15:40 2019 +0200

    Reflect 4.0.7 release

commit 94eafb249362c884c32363536312e1357d08e357
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 24 12:25:19 2019 +0200

    Rename AddColumnAnalyzedStatement as its no stmt anymore

commit e22caa9f512af8da75572d29a3c35d02ee5586a6
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 24 12:20:52 2019 +0200

    Rename plan `createStatement` methods to `bind`.

commit 8dc6d3b4dc42018b55c92eb5e6199371cf570cc5
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 24 12:06:31 2019 +0200

    Fix class names, rename Bounded* classes to Bound*
    
    *bounded* does not exists ;)

commit 0bdc701423c6a12032e477fa9ca6a6c2b480af3d
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 24 12:02:10 2019 +0200

    Rename AlterTableAnalyzedStatement, it’s no statement anymore

commit 30f09b30983223a5d1f4c9aef1c5873abe1c7008
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 24 12:00:18 2019 +0200

    Rename CreateTableAnalyzedStatement and remove stmt impl
    
    This class was not used as a statement anymore but only as an
    intermediate data holder, thus renaming it to a proper name.
    Also the statement implementation were no longer used and thus removed.

commit 5f79d574b6896cb0493f2e9185140ae47532494d
Author: marregui <miguel.arregui@gmail.com>
Date:   Thu Oct 3 15:03:33 2019 +0200

    Add support for binary iperator << associated to type IP
    
    The left operand must be an IP and the right operand a TEXT
    containing valid CIDR notation, e.g. '192.168.0.2' << '192.168.0.0/24'.

commit de7a8ec57c5df92d33adf4178e012a6e66dd3b12
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Oct 23 17:39:34 2019 +0200

    Add a try_cast test for all primitive types and random values
    
    This ensures that all DataType.value() calls are throwing the correct
    exceptions which are caught and transformed into NULL by `TRY_CAST``.

commit 326a739b4102c6ff17fe7c6af977ed4895564db7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 23 14:41:13 2019 +0200

    Handle array values in SET GLOBAL statements correctly
    
    Previously we'd call `.toString()` on an array which would write
    something like `[Ljava.lang.Object;@2139f2d3` as setting.
    
    This changes the logic to create a comma separated string. This allows
    users to for example set `cluster.routing.allocation.exclude._id` to an
    array of ids instead of creating a comma separated list on the client.
    
    Changing the `Setting` definition to support both object arrays and
    strings is currently not possible. The validator or parser both receive
    a string value as input instead of the raw object value.

commit bf01388e95d66a7b48b36649c6b218c860757517
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Oct 23 12:23:59 2019 +0200

    Fix generated column evaluation based on default constraint.
    
    When evaluating generated columns, possible default constraints of
    referenced columns must be taken into account.

commit a37215e2b0670adae2aae0fa5c15bebbd3895e10
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Oct 23 17:00:56 2019 +0200

    Remove JDK 12 java tests run
    
    We already run with JDK 13 and we still have a itest step using JDK 12
    which should be enough. This reduces overall suite runtime.

commit 21ce2b2ec8ff03cd090d35e16f30b66807c62fd4
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Oct 23 12:54:21 2019 +0200

    Fix exception handling at timestamp type parsing
    
    Convert parsing exception into IllegalArgumentException so ``try_cast``
    works as expected (returning NULL on parsing exceptions).

commit f940dd1f1292818c8d41d14f93eb5c1fbeda0420
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 23 12:12:28 2019 +0200

    Replace NPE on SET GLOBAL with more meaningful error

commit 1fa6cb9dde43714d4560d5560556f6030d79f534
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Oct 23 11:51:29 2019 +0200

    Add `copy to` statement to unbound analyzer.

commit e7150ee1822ccf14a227128f01edaeaae4cfa49a
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Oct 23 11:46:52 2019 +0200

    Remove unused code related to bound analysis.

commit deceb80aac805971735f00f3586a705572fdd110
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 23 12:00:20 2019 +0200

    Inline Strings.toStringArray
    
    In the two concrete uses the null check was unnecessary, as it is clear
    that the argument isn't null.
    
    This inlines the `toArray` call as it is simple enough.

commit fa367c288382b991a012504d1cef550f45c6bd98
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 22 11:08:39 2019 +0200

    Don't trip parent circuit breaker on low child breaker usage
    
    Due to the switch of using the real used heap memory in
    44e6b78b1cc2383920f596e13875d4fd0ca081ae it could happen that queries
    are rejected without there being any load on a cluster. Some queries can
    lead to high heap usage (and get aborted), but then nothing will trigger
    GCs as any subsequent queries will be rejected due to the parent
    breaker.
    
    In fe544cc90d0c0fd9eb08a20e015ef7fdc3fd22bb we already updated the
    recommended GC settings to avoid that to some degree, but it can still
    happen.
    
    This change introduces some kind of workaround. We avoid tripping the
    breaker if all the individual breaker account for less than 30 percent
    of the limit.

commit 3e880c6e2c84e81644cbddb69e830716263aa3d5
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Oct 22 10:49:33 2019 +0200

    Add `swap table` statement to unbound analyzer.

commit 7ea3d38f835e3d2e8124be217e0f88039bb5b8a1
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Oct 22 10:47:39 2019 +0200

    Generify `swap table` AST node.

commit 4053ca7dfe401a46771b92d7252e1bd3d1c6b60a
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Oct 22 11:21:07 2019 +0200

    Add `deallocate` statement to unbound analysis.

commit 1da5c98ff6da834ae23bf806261ba515aac69856
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Oct 22 11:14:57 2019 +0200

    Add `alter cluster reroute retry failed` stmt to unbound analyzer.

commit 4291aafa35044bc1480c1d6fe1cb80b440ee780b
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Oct 22 11:13:53 2019 +0200

    Add `alter cluster gc dangling artifacts` to unbound analyzer.

commit 3653a053c43f781668fda270c10c1fbf2ce270d7
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Oct 22 11:11:19 2019 +0200

    Add `begin` and `commit` statements to unbound analyzer.

commit 724fc96a6bfd28bdc6496f29c157e5b3577c8456
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Oct 22 11:09:04 2019 +0200

    Add `drop view` statement to unbound analyzer.

commit 1a89a69b617589c84b7936060d7ea6e1a1f8b38f
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Oct 22 10:39:15 2019 +0200

    Add `create view` statement to unbound analyzer.

commit aa798ad8d61b0df1ceba2c27b65026a13ae70290
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Oct 21 21:52:20 2019 +0200

    Add unbound analysis support for copy to statement.

commit 13c983fc3aeee5f4cc467843c4f0339c0a991a62
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Mon Oct 21 16:44:02 2019 +0200

    Changes usage of type STRING to TEXT in the docs
    
    The data type STRING will be deprecated in future versions hence the
    docs will use the supported data type.

commit 58fc8736fd250b47182a250245cdcf02b1fe378a
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Fri Oct 18 16:27:41 2019 +0200

    Add unbound analysis support for copy from statement.

commit aef9a327c8585df82dca84481ba8339159db7b1b
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Oct 7 14:24:05 2019 +0200

    Fix formatting of sys.segments table in documentation

commit 7cdd5e3e7f39ab45eb2910c7d5b32fb9ffc816e5
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Fri Oct 18 20:31:35 2019 +0200

    Add privileges statements to unbound analysis.

commit 1cccec84c63b0908b05bb9dc71201f5c658ef9f4
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Fri Oct 18 15:11:31 2019 +0200

    Add a dedicated plan for `alter reroute retry failed`.
    
    It allows us to drop GenericDDLPlan and related to it
    helper classes.

commit 940a251116da9ad3eb9aa756463962370131dac4
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Fri Oct 18 14:07:31 2019 +0200

    Add unbound analysis support for reroute statements.

commit f75323b6b56ad1e8bcefd436ae6a3773d0c6c503
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 17 14:18:27 2019 +0200

    Tweak memory accounting for strings

commit c55be85a4f289dda5c23da1ec539aa01027ccc1d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 16 11:46:53 2019 +0200

    Use query-circuitBreaker BigArrays for query execution
    
    The injected BigArrays instance uses the Request circuit breaker (for
    accounting only; it doesn't trip the breaker)
    
    For query execution we want to use the query circuit breaker and we also
    want it to trip the breaker. E.g. in the `GroupByOptimizedIterator` we
    create a `BigObjectArray` instance to hold all the keys. This should
    trip eagerly if under memory pressure.

commit 2476a790f63e4ac41fee67b35b3c5339ffaafcc9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 16 11:26:55 2019 +0200

    Ensure StreamBucket memory usage is accounted for
    
    GROUP BY operations on high cardinality columns could run into OOM
    errors as one big chunk of the used memory wasn't accounted for in a
    multi node setup.

commit b64fb7f4cbe93b1da35ce155f520458248070840
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 16 16:16:21 2019 +0200

    Remove AllCircuitBreakerStats
    
    The only usage of it was via the JMX bean which used it to retrieve the
    parent circuit breaker metrics. There was a bit of indirection and
    unnecessary work involved that we can get rid of.

commit 5dbc1e48305ff30b1ad368c631c73b3a2be99ff0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 16 15:28:30 2019 +0200

    Avoid Stats re-creation for circuit breaker JMX metrics

commit 81b86fd64c3c6906e21d56f33d3da2944c4dd492
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 16 15:14:39 2019 +0200

    Remove undocumented indices.breaker.type setting

commit cee43efec6b0ea5506f129c7557628026419f341
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Oct 16 22:06:38 2019 +0200

    Add unbound analysis support for kill statement.

commit dfee74d13473614c8aca98ee326619ca7bfdb725
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Oct 16 15:07:56 2019 +0200

    Add unbound analysis support for decommission node statement.

commit 08ab4b39c41aa5985ad2836513e7305ea36abd05
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Oct 15 23:08:20 2019 +0200

    Add unbound analysis support for create analyzer statement.

commit afedaf3c7845a737ad6796e839a2181b4f91541d
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Oct 16 14:37:28 2019 +0200

    Add unbound analysis support for drop analyzer statement.

commit 021335400b8dcfc6c797a7f29e3acf3da1da9f13
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 15 14:56:00 2019 +0200

    Expose `indices.breaker.total.limit`
    
    We documented the setting in https://github.com/crate/crate/pull/8709
    but it couldn't be changed using `SET GLOBAL`.

commit 412561c88eb7050f8d95173ec1ce0660262c3d66
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 15 15:28:08 2019 +0200

    hll: Avoid BytesRef instance creation to get bytes of String

commit 80b0f033d98c6110ce89b020bcd60ae66e4c2d75
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 15 16:13:39 2019 +0200

    Document memory requirements for hyperloglog

commit fb14b8541c33454ce6f0f2cbcabab643e18ebca4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 15 15:56:53 2019 +0200

    Make memory accounting of fixedSize types more accurate
    
    Utilizes RamUsageEstimator which is a bit smarter as it takes object
    alignments and things like UseCompressedOops into consideration.
    
    It may still be wrong, especially if a JVM other than OpenJDK/Oracle is
    used, but should be an improvement over what we did before.

commit b5e4d8e22f0aafd2e6bfc87b8576634e4501c3b8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 15 13:39:38 2019 +0200

    Drop _all mapping in template and index upgraders
    
    This will allow users to upgrade to CrateDB 4.0+ without re-indexing
    partitioned tables that have been created in CrateDB 2.x if all current
    partitions were created in CrateDB 3.x.
    
    This is a common case: Storing events partitioned by time, with a
    retention period of e.g. 30 days. So after 30 days all partitions have
    been rolled through.

commit 5033be2884df328fcaa50ac1ab6773c70035295e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 15 11:24:10 2019 +0200

    Add test case to protect against accidentally introducing new keywords

commit 0d7b390e4dbd47d3cb199886bcd864d5ead228a9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 14 16:06:40 2019 +0200

    Handle Throwable in OneRowActionListener
    
    Prevents tests from getting stuck if the function used raises an
    AssertionError.

commit 3b568a9c9f8f036e7210020e667aad20d7169129
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Oct 14 11:00:33 2019 +0200

    Add unbound analysis support for restore snapshot statement.

commit c90a4a01ee1651f5b493d5edc6420c72240135cd
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Oct 14 14:56:08 2019 +0200

    Add missing refresh table to unbound analyzer.

commit e02e6c54815c360a5b7e6cb080c42cffc0560b4d
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Oct 1 18:30:18 2019 +0200

    Add unbound analysis support for DROP TABLE

commit 777fa1386de6b896c139d0429f3acc7cca6a6466
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 10 19:16:24 2019 +0200

    Add missing alter table add column to unbound analyzer

commit 44c5701f31cdce1091f74a2595391e1b385779b1
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 8 14:22:02 2019 +0200

    Add unbound analysis support for DROP FUNCTION

commit dec841193c569046a6d319a0f6affdc4c6abd4c0
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 8 14:11:50 2019 +0200

    Add unbound analysis support for CREATE FUNCTION

commit 87e7267e2760ec184866b5a5ba0bbbccb4635cb9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 8 15:13:13 2019 +0200

    Set involvesIO to false for more in-memory system tables

commit 8ebd65d2a02037b60d19b48c29e2c9d661db92c4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 8 14:47:55 2019 +0200

    Avoid thread context switch for queries without IO

commit eef3616d5dadd14d92ce06162711c15be1715979
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 8 14:28:20 2019 +0200

    Remove dead code from MapSideDataCollectOperation
    
    The `else` branch was never used.

commit 4558b933bb140f6c1362249d7834b0784d856585
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 8 13:16:17 2019 +0200

    Add missing unbound analysis to UnboundAnalyzer

commit 05d4fc2911b913a08cc2c09019845b3bb0c9c523
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 8 11:51:43 2019 +0200

    Add unbound analysis support for CREATE BLOB TABLE

commit b9b788f267f7c2b719d49c79bcdcbec9f95f4e2f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 7 13:43:11 2019 +0200

    Add a translog_stats column to sys.shards

commit 94b7e9a1edb2e6fc9e1b37eb143be22eaa3780e4
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 8 09:59:30 2019 +0200

    Add unbound DROP USER analysis support

commit 0592f58fc2d26c5cf49532913d9005e4cc98d63b
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 8 09:44:42 2019 +0200

    Add support for unbound CREATE/ALTER USER analysis

commit 2d2cea6475be345d3725fb1c5efaa15b1c298405
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 7 11:34:34 2019 +0200

    Include root cause error message in CREATE REPOSITORY error messages
    
    Before:
    
        cr> create REPOSITORY s3_test type s3 with (secret_key = 'foo', access_key = 'bar');
        SQLActionException[RepositoryException: [] [s3_test] cannot create blob store]
    
    After:
    
        cr> create REPOSITORY s3_test type s3 with (secret_key = 'foo', access_key = 'bar');
        SQLActionException[RepositoryException: [] [s3_test] cannot create blob store: you do not have permissions to access the bucket []]

commit 520296f907ac0a812e23bfbab10ea839c333576e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 7 16:26:29 2019 +0200

    CI: Increase timeout on Jenkins
    
    Sometimes it takes a bit longer to get a slot on a build slave, in which
    case the total duration of the job can exceed 30 minutes.

commit e9da3523f6dbaa4e734b6c2564062ee9a1b19f91
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 7 14:31:36 2019 +0200

    Docs: Convert sys.shards table schema table to list-table markup
    
    The list-table markup is easier to edit/extend than the grid table
    markup.

commit 82d2e2b5c943e4d6965ca429d5bf6a5a43707d11
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Oct 7 09:51:05 2019 +0200

    Add support for unbound alter blob table analysis

commit 86cc41b940f32cb3c2ac0a5a5710b21e938eb48b
Author: Nikita <verkhovin13@gmail.com>
Date:   Wed Oct 2 08:58:52 2019 +0300

    Implement LTRIM() and RTRIM() functions
    
    Add support passing trimming text

commit 1de7f951d4c217e07e97f281099934e1f721fc5d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 7 11:20:48 2019 +0200

    Run tests with JDK13
    
    Updates Gradle to a 6.0 SNAPSHOT because earlier Gradle versions don't
    support Java 13.

commit ca2dc50a8accfc81cdf1c442e8ac86790d3f806e
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Fri Oct 4 18:35:55 2019 +0200

    Implement unbound analysis for drop snapshot statement.

commit bf860b42143c918863b80ae9e5164b903e4e7901
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Fri Oct 4 15:20:50 2019 +0200

    Implement unbound analysis for create snapshot statement.

commit 8bcaf3f6d58180a82d32768ce0d75dcb8234f379
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 4 15:51:27 2019 +0200

    Add did-you-mean functionality for RelationUnknown errors

commit c951301bca19d429012fe8b72db4c417ba108f47
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Fri Oct 4 14:07:12 2019 +0200

    Implement unbound analysis for drop repository statement.

commit 76ca35a29f2bfc0c887c235f8512c582a68937d8
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Oct 2 10:22:11 2019 +0200

    Implement unbound analysis for create repository statement.

commit b4cd067cabacb0d34a41738b3dd0602b49f2241b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 4 12:34:56 2019 +0200

    Include similar schema names on SchemaUnknownException
    
    Should help users who miss quoting and therefore can't match a case
    sensitive schema, or who simply have a typo.

commit 77b65ea65ad77dc831000f85118903c2dac0b81c
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Oct 1 15:53:50 2019 +0200

    Implement unbound analysis for optimize table statement.

commit 5f9ed12d4767f1a0e24c4d1f547d65faa2ed0cf4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 3 11:56:47 2019 +0200

    Reflect 4.0.6 release

commit 1d2fe70e2137b9aa9f89c6dbd466e5f8a06ddfce
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Oct 1 18:45:15 2019 +0200

    Correct docs path and remove crate/docs team from blackbox

commit e0ba6371eb1493861f96935dfad8c3f73972ca60
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Oct 1 18:42:32 2019 +0200

    Fix CrateDB logo path

commit 9aa8fdc2829de99dc22937a1b599f6ac04d03e48
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Oct 2 10:54:57 2019 +0200

    Streamline show statements analysers

commit 91b906c6e15dd895dca59528928da7576084a649
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Oct 1 17:12:24 2019 +0200

    Migrate ShowStatementAnalyzer to unbound analysis

commit 9d42bb9663731dd3b8ad60f7e23f5540922d27fb
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Oct 1 12:17:12 2019 +0200

    Streamline analysis for show create table statement

commit 64903881d7877a9958906b505637cfaaf3b16cdc
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 1 16:48:22 2019 +0200

    Add support for unbound alter table open/close analysis

commit b2828444d89e03114c24fa3ed60c46e120cbcce9
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 1 11:05:27 2019 +0200

    Add support for unbound alter table rename table analysis

commit 937caaf1254ab18e3bec82ece0e0a638a84c4e94
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 1 17:17:48 2019 +0200

    Add a seq_no_stats column to the sys.shards table

commit 1c72ac39c15bcf3180b3aec9a97c7a7b7ddd2306
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 1 17:20:01 2019 +0200

    Docs: Correct _node column description for sys.shards

commit 474e0eb2404ae29f0c7c2644859a534880fc4032
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 1 15:21:58 2019 +0200

    Tests: Close created sessions after use
    
    Not an issue, but `Session` instances should be closed after use.

commit c9abeb1413aa3ae504a27a4559815462c927d4a0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 1 21:20:49 2019 +0200

    Fix regression in RemoteCollectorFactory
    
    The ShardStateObserver returned too early in some cases, which could
    lead to a ShardNotFoundException in the following local collect.
    
    The decommission tests were flaky because of this.
    Regression was introduced in bef03ab8996071e6bf430758e55b191531a8eff8

commit 107f422ca5a1732ac514e017d68c060a5f29f05b
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Oct 1 16:29:51 2019 +0200

    Move docs to top level dir
    
    We have just added an "edit on GitHub" button to our docs theme. For
    this to work as the feature is currently implemented, the docs for each
    project must be located under `docs/` at the top level of the
    repository.
    
    This PR swaps the docs symlink at the top level with the `blackbox/docs`
    directory. The end result is that the docs live at `docs/` and all of
    the tests and scripts under `blackbox/` continue to work.
    
    Admittedly, it's a little awkward having to run `./blackbox/bin/sphinx
    dev` to build the docs that live under `./docs`, but this discrepancy
    will be gone once I get around to upgrading this repository to use the
    still-in-beta Crate Docs Utils (which will switch the low-level build to
    a Makefile located under `docs/`.)

commit 022b0665ff669d74c1efa2a11c01290b582d23ac
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Sep 30 11:55:15 2019 +0200

    Implement unbound analyis support for refresh table.

commit 73f35c764774d53ab3e3534c6502021ca36b3f4b
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Sep 30 15:37:27 2019 +0200

    Remove unused tableCreator field from ddl stmt dispatcher.

commit cca9fccabfd37d8c3891e0313554338b83c6db65
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 1 10:27:09 2019 +0200

    Add S3 repository `base_path` docu note to not use a leading `/`.

commit a13c47da0d921a303b064553d0b503cbd31272cb
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Sep 30 17:23:58 2019 +0200

    Add support for unbound alter table analysis.

commit a83e3b9a2231f110b64d3ca61c13c985d9c5be86
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 13 13:01:25 2019 +0200

    Add support for unbound alter-table-add-column analysis.

commit fe544cc90d0c0fd9eb08a20e015ef7fdc3fd22bb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 30 22:07:30 2019 +0200

    Update documented G1GC options to work better with circuit breaker
    
    See https://github.com/elastic/elasticsearch/pull/46169

commit 27a957c744da22ef62ad1dbb02292bff2cda90b5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 30 13:16:27 2019 +0200

    Fix synchronization in LocalCheckpointTracker
    
    See upstream changes:
    
     - https://github.com/elastic/elasticsearch/pull/38755
     - https://github.com/elastic/elasticsearch/pull/34667

commit 8e6f9773e9314324e7f6e9b2a961ae40d551832a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 27 20:41:10 2019 +0200

    Reflect release 3.3.6

commit bef03ab8996071e6bf430758e55b191531a8eff8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 23 17:02:59 2019 +0200

    Extract a ShardStateObserver from ShardStateAwareRemoteCollector
    
    This extracts a `ShardStateObserver` from
    `ShardStateAwareRemoteCollector`. This should separate the concerns of
    the components better. `ShardStateObserver` is only responsible to wait
    for a shard to become active again. Everything else moves into
      `RemoteCollectorFactory`.

commit 90d277b09368e0ad4fc6366a6e92024287365d05
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Sep 29 12:09:17 2019 +0200

    Remove some redundant != null checks

commit ad3f05340a440e409d00031efefb7268bf2b5dd3
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Sep 26 11:10:11 2019 +0200

    Add sys.segments table to expose lucene segment information
    
    The sys.segments table contains detailed information about
    the lucene segments for each shard.

commit cd0898d52b9cc636be25a25cee9d30aded9b5e67
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 27 13:39:47 2019 +0200

    Remove BigArrays argument to AggregationFunction.newState
    
    Given that `newState` doesn't have explicit support for the release of
    resources that might be created using `BigArrays`, we want to prevent
    the usage of it altogether.

commit bfea696c1665fe41007c9268985ca62e08283f54
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Sep 30 10:59:20 2019 +0200

    [Jenkins] Pin adopt JDK to 1.12.0-2
    
    adopt@1.12.33 JDK is not available anymore via jabba and using
    alias or ranges seems not to work with jabba and adopt.
    E.g. using "adopt@~1.12" or "adopt@>=1.12.0 <1.13.0" does not work.

commit 96f835c87dc76fd1deaa696e0c5e6feecbc93827
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 27 17:18:59 2019 +0200

    Only log create-table analyzer warnings once.
    
    Follow up of 27a5eafa6dc3a0d77b064b143b94fec0196bb6d2.

commit 5fe83210a8dda7dc0af90ebff2c718d7930f2054
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 27 10:38:29 2019 +0200

    Remove unused circuitBreakingInstance from BigArrays

commit 84838cc55334d19cc02f90ea913a5f204800faf3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 27 10:24:36 2019 +0200

    Use NON_RECYCLING_INSTANCE BigArrays for hyperloglog_distinct
    
    We've an error scenario where the `HllState` / `HyperLogLogPlusPlus`
    instances and therefore the underlying `BigArrays` wouldn't be closed
    properly.
    
    This can lead to request breaker over-accounting as the accounted bytes
    are never released.
    
    The error scenario is that the components using the aggregation
    functions initiate a new state but never get to call `reduce` /
    `terminatePartial` due to other runtime errors.
    
    This switches to a `NON_RECYCLING_INSTANCE` which doesn't use a
    `CircuitBreakerService`, and therefore skips accounting.
    
    We still do account the used memory via the `RamAccountingContext`
    instance:
    
        ramAccountingContext.addBytes(HyperLogLogPlusPlus.memoryUsage(precision));
    
    (This one is being released in error scenarios, as it is part of a
    `CollectTask`)
    
    Benchmarks indicate that this has no impact:
    
        Q: select hyperloglog_distinct("cCode") from uservisits
        C: 1
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |      242.028 ±   40.899 |    220.007 |    227.926 |    238.933 |    401.131 |
        |   V2    |      230.048 ±   23.691 |    216.598 |    226.355 |    230.648 |    387.358 |
        mean:   -   5.08%
        median: -   0.69%
        Likely NOT significant
    
        Q: select hyperloglog_distinct("visitDate") from uservisits
        C: 1
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |       73.615 ±   13.959 |     62.685 |     66.762 |     77.021 |    118.424 |
        |   V2    |       72.230 ±   15.620 |     58.605 |     65.624 |     73.728 |    123.976 |
        mean:   -   1.90%
        median: -   1.72%

commit 1853252fcd729d4a8a8d8b655bf7310f28389987
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 26 18:57:06 2019 +0200

    Allow unsafe for netty
    
    We inherited the netty options from ES where allowing unsafe is
    problematic due to the use of the security manager.
    
    We don't use the security manager and can allow netty to use unsafe.
    
    Note that according to ES benchmarks there was no visible difference
    between unsafe on or off.

commit 3367af27a7f63c57f8765090c511fa34d754110b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 26 20:32:28 2019 +0200

    Update netty to 4.1.42

commit 5c0fe773e15072835be5e5c3cec121aa3bdb527f
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Thu Sep 26 17:07:56 2019 +0200

    Avoid NPE in MockInternalClusterInfoService when adjusting NodeStats.
    
    We use the volatile nullable diskUsageFunction field to fake disk usages
    in tests. The function will be applied to the NodeStats on each ClusterInfo
    refresh. It is possible that the refresh happens before the field is set.
    
    See also MockInternalClusterInfoService in
    https://github.com/elastic/elasticsearch/commit/70b8d7bc64f165735502de9d8c5fa673fa21e02b

commit f98a2a1305ec18e58a9e12e345c78117ba8c5ca9
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Sep 26 14:43:51 2019 +0200

    Add assertBusy to DiskUsagesITest

commit c13ffcb9d9513967e1ea0d78b3933a638f4a1891
Author: asdf2014 <asdf2014@apache.org>
Date:   Wed Sep 25 00:17:01 2019 +0800

    Fix some spelling mistakes

commit 2151bfc20f700a4d38843a716086af11f83fe3ff
Author: meriam <meriam.kharbat@gmail.com>
Date:   Thu Sep 26 10:08:59 2019 +0200

    Upgrade Admin UI version to 1.15.3

commit 3b774d18e63fed89ef35a3d054a8c9ffb59a9f8a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 26 15:42:06 2019 +0200

    Remove incorrect parenthesis from optimize synopsis

commit 27a5eafa6dc3a0d77b064b143b94fec0196bb6d2
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jul 29 15:33:21 2019 +0200

    Implement unbound create table analysis support using generic AST nodes.

commit 3b2c04245b03097bedf87586a3514d2a59b8f181
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 29 14:16:45 2019 +0200

    Make Expression in CreateTable generic
    
    So far our statement processing logic consists of several steps:
    
    1) parse
    2) analyze (semantically, + annotate with information (e.g. types))
    3) plan
    4) execute
    
    Currently the structures used in 2) are mixed up a lot:
    
    a) Sometimes we keep using `Expression`
    b) Sometimes we eagerly evaluate `Expression` to a value (`Object`)
    c) Sometimes we convert to `Symbol`
    
    Besides differences in how we handle the expressions, we mostly replace
    the carrier classes with some kind of `AnalyzedStatement`
    implementation.
    
    Of these approaches, a) and b) are problematic:
    
    a: We can't generate a `ParameterDescription` for clients which are
    requesting the types for `?` or `$1` placeholders.
    
    b: The parameters for `?` expressions are only available after a `bind`
    message has been received. Currently we have some analyzers which
    require the parameters and don't work otherwise, which is why we've some
    kind of workaround in `Session`.
    
    So we'd have to go with c) in all cases. But that's a bit a annoyance
    because we've to duplicate all parser AST classes with an equivalent
    analyzed variant where the only change is that instead of `Expression`
    we've a `Symbol`.
    
    So this is an attempt to make the AST generic so that the type for
    `Expression` can be parameterized.
    This might be problematic in some cases (e.g. in `TableFunction`, making
    the type of `functionCall` generic makes it too generic)

commit 77bc5b1ec7dd7799b7bd75f37bfa6446f033c578
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 25 19:58:57 2019 +0200

    Add a node column to sys.jobs_log
    
    sys.jobs has a node column; logged entries should also contain the same
    node column. This can be helpful for diagnostics.

commit df2731aa66fa6b0955a1d2d692aeec20623f3ce7
Author: marregui <miguel.arregui@gmail.com>
Date:   Tue Sep 24 17:39:46 2019 +0200

    Add support for ILIKE in the where clause

commit a39b7f29d59279c9db5fb013838428087ca7b516
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Sep 23 11:23:40 2019 +0200

    Avoid overshooting watermarks during relocation.
    
    Backport of https://github.com/elastic/elasticsearch/pull/46079

commit 67d1aa0c218b9531c38cd994ee4eb571e62b83e3
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Sep 23 11:09:37 2019 +0200

    Decouple DiskThresholdMonitor & ClusterInfoService.
    
    Backport of https://github.com/elastic/elasticsearch/pull/44105

commit af1af1698ba295dff6c0feac2595ed98d036a036
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Sep 23 10:45:42 2019 +0200

    Add DiskThresholdDecider tests.

commit a140f949c76046bf0d305c5e0cb479bfa30a591d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 24 17:38:45 2019 +0200

    Remove JVM version dependent GC setting handling
    
    We require 11+, so we no longer need to handle <= 1.8 style GC flags

commit 032619bd3265d99c514e389a60fd3ccedf34cc8a
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Sep 23 16:09:55 2019 +0200

    Fix regression in reroute logic when a node passes disk watermarks.
    
    DiskUsage takes disk path total bytes instead of available bytes
    as the last argument.

commit a182ea4e415f645389c4a29b2a9431fe7feba376
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 23 15:26:45 2019 +0200

    Fix a NPE when client disconnects before responses are sent

commit e9e1a6a2c21c3aaf74e03318c2808169e1c16867
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Thu Sep 19 13:26:19 2019 +0200

    Re-add and deprecate the `node.store.allow_mmapfs` setting.
    
    We keep the old `node.store.allow_mmapfs` setting for backward
    compatability. In future versions it will be superseded by the
    newly the `node.store.allow_mmap` setting.

commit dfd497fd9a4bb1a841ee60f24eff268153ecc9da
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Fri Sep 20 19:22:30 2019 +0200

    Add Setting#getWithFallback method.

commit 264794d7d1f0cf7ec79e9ef55f3e28467fb978b9
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Thu Sep 19 13:23:40 2019 +0200

    Revert "Exclude `node.store.allow_mmap` from table/partition defaults."
    
    This reverts commit b87d828d192fd75021493f27af1e6063df1745b4.

commit 1422015aadef3724b92979e4be82944b651f7111
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Fri Sep 20 11:53:29 2019 +0200

    Reflect release 4.0.5.

commit 33c3c57d26cfce0e5d7c6f88f00f5e5b3f81c912
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Sep 17 11:22:05 2019 +0200

    Update admin ui to 1.15.2

commit 19a82b63c1b1cec6d423f8f1b83bf6111b5214cc
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Sep 17 17:26:34 2019 +0200

    Remove assertion about nodes in a request in AsyncAction
    
    NodeRequests with no nodes will result now in a noop.

commit b87d828d192fd75021493f27af1e6063df1745b4
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Fri Sep 13 15:22:50 2019 +0200

    Exclude `node.store.allow_mmap` from table/partition defaults.

commit 029878463699baf75ce1d2480338e67935d4778e
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Thu Sep 12 11:06:17 2019 +0200

    Recovery with syncId should verify seqno infos.
    
    Backport of https://github.com/elastic/elasticsearch/pull/41265

commit 7814f742989dafc8e3f6f4fabfb01a5267ba8de0
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Thu Sep 12 10:32:20 2019 +0200

    Make prepare engine step of recovery source non-blocking.
    
    Backport of https://github.com/elastic/elasticsearch/pull/37573

commit 720d3a17d7b8c7b9a77691f9c65f1df97f3927c3
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Sep 11 16:31:25 2019 +0200

    Make recovery source send operations non-blocking.
    
    Backport of https://github.com/elastic/elasticsearch/pull/37503

commit d5ffdfe058074960bbb42606314f9603ee36dfa8
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Sep 11 16:21:17 2019 +0200

    Prepare to make send translog of recovery non-blocking.
    
    Backport of https://github.com/elastic/elasticsearch/pull/37458

commit 807fd032005b70b86e248b9ef989728799cd6db1
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Sep 11 15:53:24 2019 +0200

    Make finalize step of recovery source non-blocking.
    
    Backport of https://github.com/elastic/elasticsearch/pull/37388

commit 4e2185e8d732d95e663f9be85acafa4106596d22
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Sep 11 12:01:13 2019 +0200

    Make recovery source partially non-blocking.
    
    Backport of https://github.com/elastic/elasticsearch/pull/37291

commit 6bd5d798b4f3145450d77f0879158327bad5d530
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Sep 11 11:19:57 2019 +0200

    Don't block on peer recovery on the target side.
    
    Backport of https://github.com/elastic/elasticsearch/pull/37076

commit 515731a9304b9ba2aeb5aca553598d2a289cf7e5
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Sep 11 10:26:18 2019 +0200

    Reduce recovery time with compress or secure transport.
    
    Backport of https://github.com/elastic/elasticsearch/pull/36981

commit 257e0600370e31004a8fdd31fb03ef1628c2b1e7
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Sep 10 16:33:37 2019 +0200

    Do not mutate RecoveryResponse.
    
    Backport of https://github.com/elastic/elasticsearch/pull/37204

commit f42a33ab2cb00766ad1b655b048eb8352137541e
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Sep 10 15:49:38 2019 +0200

    Backport PeerRecoverySource and RecoverySourceHandler tests.

commit e7a67b8cde880dcaff734a31d46ae4b8b28bd55b
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Sep 10 16:59:09 2019 +0200

    Fix disk-based allocation thresholds
    
    Readd node stats and related actions, disk-based allocation count logic
    and an integration test to make watermark thresholds working again.

commit 558f5c62b606fb77490e57014d46a3c7be640461
Author: asdf2014 <asdf2014@apache.org>
Date:   Wed Sep 11 00:52:00 2019 +0800

    Fix some spelling mistakes

commit 05fe1efbb1789f8f0cc817e58d30fdb35cfd87c4
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Sep 9 16:03:47 2019 +0200

    Expose ``store.type`` table param and ``node.store.allow_mmap`` setting.

commit ee040902b4a5aa726b6bde3eab2287fd847b824a
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Sep 9 15:43:00 2019 +0200

    Rename ``node.store.allow_mmapfs`` to ``node.store.allow_mmap``
    
    Backport of https://github.com/elastic/elasticsearch/pull/37070/

commit fbe67e950e16223e5c002bb6b1285f174ae1845f
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Sep 9 10:32:02 2019 +0200

    Add mmap cfs files for hybridfs.
    
    Backport of https://github.com/elastic/elasticsearch/pull/38940

commit b82adf2655c7258b81d10706aa05e52334502805
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Sep 9 10:30:05 2019 +0200

    Remove unused index store in directory service.
    
    Backport of https://github.com/elastic/elasticsearch/pull/37097

commit fbd199ab4905740432cb2c04b0e516b799e84c8f
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Sep 9 10:23:43 2019 +0200

    Subclass NIOFSDirectory instead of using FileSwitchDirectory.
    
    Backport of https://github.com/elastic/elasticsearch/pull/37140

commit c15928d45a58e18e553367864dd4142ae3f03d4b
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Fri Sep 6 15:30:54 2019 +0200

    Add hybridfs store type.
    
    Backport of https://github.com/elastic/elasticsearch/pull/36668
    
    This commit introduces a new store type hybridfs that is a
    hybrid between mmapfs and niofs.

commit 0eed6b980d9c0f9df1c8d2bdea08ca851f785f5e
Author: Robert Palmer <robd003@gmail.com>
Date:   Thu May 23 21:27:56 2019 -0700

    Adding elasticsearch phonetic analyzer / tokenizer

commit 024ff56b59a2292b10985b4ade7c065e1e942e17
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Fri Sep 6 15:59:24 2019 +0200

    Handle delete document level failures.
    
    Backport of https://github.com/elastic/elasticsearch/pull/46100

commit 12173ced0c9d9a969ab6a7bd0e52f4776ff9e8fd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 5 17:00:37 2019 +0200

    Extract more details of frame bound calculations out of WindowFunctionBatchIterator
    
    Before the `WindowFunctionBatchIterator` took the three arguments
    
        - WindowDefinition windowDefinition,
        - @Nullable Object startFrameOffset,
        - @Nullable Object endFrameOffset,
    
    This was a bit strange, as both `startFrameOffset` and `endFrameOffset`
    are also part of `windowDefinition`.
    
    This now extracts the pieces required for the boundary calculations
    altogether, so that the `WindowFunctionBatchIterator` is less coupled
    towards specifics of how we represent the frame definitions, and how we
    might evaluate expressions within those definitions.

commit 66d7679013c12523569011fb8d3eec564e0f7627
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Fri Sep 6 13:58:10 2019 +0200

    Handle no-op document level failures.
    
    Backport of https://github.com/elastic/elasticsearch/pull/46083

commit 0f48c4f846a19d7c1fe5f517cbdaad209cd6ca65
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Fri Sep 6 13:54:14 2019 +0200

    Avoid AssertionError when closing engine.
    
    Backport of https://github.com/elastic/elasticsearch/pull/43638

commit 39f4b0baf08b5468c217f22c3b3aea130b7134be
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Fri Sep 6 13:25:30 2019 +0200

    Bubble up exception when processing Engine#NoOp.
    
    Backport of https://github.com/elastic/elasticsearch/pull/39338

commit 1ec2443b5391f461c44891fc0865167fadf9513a
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Fri Sep 6 11:15:42 2019 +0200

    Fix InternalEngineTests#assertOpsOnPrimary.
    
    Backport of https://github.com/elastic/elasticsearch/pull/37746

commit ba075bfe53e817b14f97053a1a4c41eeb8b9dce0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 5 18:20:40 2019 +0200

    Optimize size estimation for arrays of fixed size elements

commit 618698ab5adc084455dabdd52cc1b2959ba8a6fc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 5 15:00:36 2019 +0200

    Remove partition tie break restriction
    
    Due to how an early version of our select query execution worked we
    added a restriction on predicates involving partitioned by columns. We
    required to be able to determine which partitions can match already on
    the coordinator node.
    
    Given how our execution pipeline has evolved, this restriction is no
    longer necessary. This commit therefore removes it.

commit 04c5c84d5adf6d264e36dd3beb13a22021bdc125
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 31 10:24:05 2019 +0200

    Move FrameBound tests into the package of the FrameBound class

commit 287c2d2a5b8407318b26fbcd298a414c40e8a2b7
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Sep 5 17:12:28 2019 +0200

    Do not add hidden settings to table default settings.
    
    Hidden settings should not be set by default on table creations.
    This would also break backward compatibility while creating tables
    in a cluster with older node versions (rollback upgrade).
    
    Follow up of https://github.com/crate/crate/pull/9085/commits/a5c724548f5480da052c23d05e68ab5bdeebd85b.

commit 56462038e0029dec2de795385cdaed822b908c3a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 5 14:53:13 2019 +0200

    De-couple param binding from WhereClauseAnalyzer

commit 2e495ae2325e5832bd696b80140a92cee5c8bfa2
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Thu Sep 5 14:53:17 2019 +0200

    Assert number of version lookup only if assertions are enabled.

commit c8e64a5da8f0d479a6ebc8c76d1ce53207ec8939
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 4 11:32:12 2019 +0200

    Update gradle to 5.6.1

commit 74af1cb2f8febf1383fefbdbd8b6155fe5970169
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Sep 4 16:50:33 2019 +0200

    Assert cluster state size in intergration test layer.
    
    Assert cluster state size ESIntegTestCase.ensureClusterStateConsistency
    to ensure cluster state consistency.

commit 5e7f6bbb34c88b0d01158d5b2e29f68273eb5b9b
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Sep 4 15:03:31 2019 +0200

    Fix column’s ordinal being NULL on tables created < 4.0.
    
    Tables created with < 4.0 don’t story any positional information inside
    their meta data, we must fallback to old behaviour in such cases.

commit 9929cb224ac566a00aa6fd4cbcf0478400d44166
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Sep 2 17:40:24 2019 +0200

    Fail engine if hit document failure on replicas.
    
    Backport of https://github.com/elastic/elasticsearch/pull/43523

commit 87b968d97df47fc5e6cadec8740e6b6c2b06f2b0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 4 11:20:37 2019 +0200

    Re-use EstimateRowSize in RowAccountingWithEstimators

commit d1c31b9e03869ee4e27c6191f92cc434f0c03a9b
Author: marregui <miguel.arregui@gmail.com>
Date:   Wed Sep 4 12:23:29 2019 +0200

    Simplify code by using java.lang.Math's available methods

commit 3b908fc00ef36ea544dd8b374e8f6ae03e32f522
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Sep 4 13:14:21 2019 +0200

    Move sync translog operation outside writeLock to improve performance.
    
    Backport of https://github.com/elastic/elasticsearch/pull/46203
    
    In Translog.trimUnreferencedReaders, current.sync() is called
    inside the writeLock. Taking it out of the writeLock can improve
    the indexing performance. See https://github.com/elastic/elasticsearch/issues/46201

commit 26047d3b5e4ec066cc01fc4322e47e9e19097eea
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Thu Aug 29 15:19:04 2019 +0200

    Use cause to determine if node with primary is closing.
    
    Backport of https://github.com/elastic/elasticsearch/pull/39723

commit c3406a9d9dec2a182da5949b5c7cbaeb0084c975
Author: marregui <miguel.arregui@gmail.com>
Date:   Mon Sep 2 21:22:54 2019 +0200

    Take memory usage into account for bulk sizing in ShardingUpsertExecutor
    
    Co-authored-by: Mathias Fussenegger <f.mathias@zignar.net>

commit 0883992292c35d6ad513374f14b436f57813cbcb
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Sep 3 15:03:18 2019 +0200

    Flush engine after big merge.
    
    Backport of https://github.com/elastic/elasticsearch/pull/46066
    
    This change will enable execution of the flush operation if we hit
    a significant merge (512MB by default) which frees diskspace sooner.

commit 74d3c56b8bd562f0ce15d1197d056fa06e4fdfb6
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Sep 4 10:27:04 2019 +0200

    Use separate translog dir in testDeleteWithFatalError.
    
    This test currently opens a new engine but shares the
    same translog directory of the previous opening engine.
    
    See https://github.com/elastic/elasticsearch/commit/790fdb156c37294e52fefcc9a8664928d99a8aa6

commit e84fb0260379e797810cbc52d1bdf6d0f5a73e5c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 3 17:40:48 2019 +0200

    Add a rule to rewrite Collect to Get
    
    We currently do the `Collect → Get` optimization eagerly when we
    initially build the logical plan, but that doesn't work for queries on
    derived tables or views, so this commit introduces a rule to do the same
    optimization.
    
    This is currently limited to queries where the fetch-rewrite doesn't
    apply (e.g ORDER BY containing all selected columns), because the fetch
    rewrite breaks Get lookups and happens eagerly.
    
    Once we change the fetch optimization to happen in a later phase, we can
    also remove the eager `Get` creation and only do it via rule.

commit 506be150988ffe4534c81c7b7c33636b968b68fd
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Sep 3 17:06:49 2019 +0200

    Improve ALTER TABLE ADD resiliency by using TransportAlterTableAction
    
    Update mapping, update template and update setting are now set
    using TransportAlterTableAction when adding a column to a table.

commit d2e64128622e79f33b90693dee1ca1d65c55bf21
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Aug 26 16:39:18 2019 +0200

    Improve resiliency of alter table operation.
    
    this will make alter table operations more resilient as all steps will
    operate on the cluster state, resulting in only 1 cluster state change.

commit 957c77577dc98945cef36c755c0c4f0d7ee10430
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Sep 3 11:47:06 2019 +0200

    Adds replication operation tests ported over from ES.
    
    Source was taken from commit https://github.com/crate/elasticsearch/blob/v6.5.1_cherry/server/src/test/java/org/elasticsearch/action/support/replication/ReplicationOperationTests.java.
    Including patch which was otherwise already applied:
    https://github.com/elastic/elasticsearch/pull/39584/files

commit 111c53f213f373f6dc31b0538d30f76acfa1cb33
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Sep 2 17:03:53 2019 +0200

    Always fail engine if delete operation fails.
    
    Backport of https://github.com/elastic/elasticsearch/pull/40117
    
    With this change, we will always fail the engine
    if we fail to apply a delete operation to Lucene.

commit 3a221cb0444e544f110c084717a99b1bf224c247
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Fri Aug 30 16:08:42 2019 +0200

    Port the InternalEngine testing layers and tests.

commit c0fd0b9ed44bcf2b4f7a3b45e6758e65f69b0346
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 30 14:46:56 2019 +0200

    Remove exposed expressionMapping() from RelationBoundary
    
    We can also utilize `Field.pointer` in the optimization rules where we
    move an operator past a RelationBoundary

commit 0e4e3cb6c28c37cef060b3594eb036fac4217c40
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 30 14:11:15 2019 +0200

    Switch fetch planning from expressionMapping → Field.pointer
    
    This removes the `expressionMapping` from the LogicalPlan. Only the
    RelationBoundary still exposes it.
    
    This also allows us to change the `expressionMapping` on a
    `RelationBoundary` to no longer include the expressionMapping of its
    source.
    
    This should make it a bit easier to understand for which symbol mapping
    exactly a RelationBoundary is responsible for.

commit ddd446cf980933e30d8ca4704ff929f4cb4bc8af
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 30 14:03:02 2019 +0200

    Remove unnecessary replaceRefs call + lambda allocation
    
    We used a `replaceRefs` call on a symbol which is a Reference, so we
    don't need to use the `replaceRefs` functionality and can get rid of a
    capturing lambda allocation.

commit c1ee95308d95706fbc9059018f66dfcdece196f9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 29 17:21:26 2019 +0200

    Make some toString/debug information more compact & helpful

commit 724c07587a0b6296aa56a7895a35733ae8d09390
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Aug 29 11:17:29 2019 +0200

    Reduce global checkpoint sync interval in disruption tests
    
    This should remove flakiness of the cluster disruption integration tests.
    See https://github.com/elastic/elasticsearch/pull/38931 and
    https://github.com/elastic/elasticsearch/commit/d49d9b53d6e0ac8acda61913489fa55e5118f0c5

commit e38109b4491325b56c5a2d04919b89af9dd27bdb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 29 16:52:46 2019 +0200

    Inline SymbolVisitor.process
    
    `process` only forwarded a call. The extra indirection makes debugging a
    bit more troublesome, so this removes it.

commit 8937be4f736555a034e4b49472493b677deaf5f6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 29 17:04:36 2019 +0200

    Remove duplicate window function processing in WindowAgg operator
    
    `extractColumns(windowFunctions)` already extracts all used columns from
    the window function including the window definition, there is no need to
    further extract columns from the individual parts manually.

commit 098afc518c78b5d56235ec9d5a84113f8bd9082d
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Thu Aug 29 14:43:34 2019 +0200

    Optimize StreamInput.readString.
    
    Backport of https://github.com/elastic/elasticsearch/pull/44930

commit 6a963ea57dcc3e7d99b66f5e18fa0dff97f25819
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Thu Aug 29 14:31:57 2019 +0200

    Avoid CharsRef allocations in StreamInput.
    
    Backport of https://github.com/elastic/elasticsearch/pull/44488

commit 4d8dfbfc623e1e3aab66874617ba1b4ace4af3df
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Thu Aug 29 14:13:14 2019 +0200

    Sync before closeIntoReader in Translog.rollGeneration.
    
    Backport of https://github.com/elastic/elasticsearch/pull/45765
    
    Make sure we move most of the data to disk outside of the writeLock
    in order to reduce the time the lock is held since its blocking
    all thread.

commit 77f45c2ae1aa00e5b1908a51d896d91392eac313
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Aug 28 14:44:04 2019 +0200

    Fix order by support on ignored object childs
    
    As the data type of an ignored object child is undefined, the reference
    resolver falsely returned a null- instead of a source-lookup-expression.

commit 50ae44e527461f2dc013f859e97b80f514e0133d
Author: Kevin Quarshie <kevin@crate.io>
Date:   Fri Jul 26 12:12:04 2019 +0200

    Create CLI tools doc, add crate-node reference

commit 21acf6f432abb1f09d2f274023967c606b588cde
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Thu Aug 8 15:16:19 2019 +0200

    Add CODEOWNERS file

commit 365d569ec199a4939624fdfda61089d1811cfbb7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 26 11:51:20 2019 +0200

    Rename collectPhaseId → fetchPhaseId in FetchProjection
    
    The name changed: `fetchPhaseId → collectPhaseId → executionPhaseId →
    fetchPhaseId` through several layers. The correct name is
    `fetchPhaseId`.

commit a897bc3b74fe93f8d869a6cd2988e0405cfab544
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 27 10:36:28 2019 +0200

    Fix TablesNeedUpgradeSysCheck to list partitioned tables only once.

commit 003e9501ace1d56f95ff73f8f9fb48891f5310ad
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 26 22:44:03 2019 +0200

    Support implicit casts to string in concat function calls
    
    Closes https://github.com/crate/crate/issues/9067

commit 30b295fb8085c003cdc56497cc468d00ce81a302
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Aug 23 10:28:02 2019 +0200

    Fix `ssl.resource_poll_interval` setting processing and docu
    
    The underlaying WatchService will poll the FS by default every 10s.
    Polling the WatchService for events in a different interval won’t have
    any effect until the poll interval of the WatchService itself is changed.
    This poll interval can only be changed to fixed intervals, defined by
    the JDK (currently ‘2s’, ‘10s’ and ‘30s’).
    This is now reflected at the setting documentation and the ssl provider
    will correctly propagate it.

commit 851dfa153cc3e66539d08afaeaba1e2009f9421a
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Aug 22 11:22:44 2019 +0200

    Add exception msg to reload-ssl-context test to assertions
    
    Adding the exception message should give us more information why
    these tests are failing.

commit d4c38f78019063ff5819d6d199f14fe2c7082989
Author: Lukas Bernert <lukas.bernert@crate.io>
Date:   Wed Aug 7 08:26:11 2019 +0100

    Fix broken paragraphs in aggregations and window functions docs

commit 724ad1135a91feef6c797e84e866b9e6a6cdfcf6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 22 15:59:38 2019 +0200

    Switch JDK_11 and JDK_12 in Jenkinsfile to use latest available

commit 539419a7150c9543ce1f543b9bbd37f97f4cfb1b
Author: asdf2014 <asdf2014@apache.org>
Date:   Thu Aug 22 00:12:22 2019 +0800

    Fix some spelling mistakes

commit e507bd56521195d7ec220e4cc7a351fd46db0d0f
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Aug 6 15:19:27 2019 +0200

    Add arithmetic operations +,- between timestamp, timestampz and intervals

commit c643b368cd65bf0f0a21b61576f0e8294d489313
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 5 13:03:32 2019 +0200

    Extend generate_series to support timestamp / intervals

commit d07551f090360690e3cf02e83ec57c1173d0438e
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Fri Jul 12 16:45:39 2019 +0200

    Add Interval support
    
    Add Interval literal to antlr grammar and adapt the parser to support
    it internally. Add IntervalType to the crate and postgres types and
    provide custom parsers to support the various interval formats.

commit ede5bf398a982a511e11a4c6fb97ab02994b725a
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Fri Jul 12 12:19:10 2019 +0300

    Add docs for the interval literal.

commit c95d15661a547595c26cd401326c6a6555060f43
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 14 15:53:11 2019 +0200

    Make RowConsumer listenable by default
    
    All but one RowConsumer implementations had already a future indicating
    when the RowConsumer was done. By making the `completionFuture` part of
    the interface we can get rid of the `ListenableRowConsumer` and
    `ListenableBatchIterator` implementations.

commit ec70f03717a51744b8d012298dcb4e8df0e1b373
Author: marregui <miguel.arregui@gmail.com>
Date:   Fri Aug 16 18:03:50 2019 +0200

    Check for over/under-flows in arithmetic operations
    
    Integer and bigint arithmetic operations +, -, * are strict, that is,
    overflows result in an exception being thrown.
    
    For the case of type integer, Integer.MAX_VALUE + 1, Integer.MAX_VALUE * n,
    and Integer.MIN_VALUE - 1, Integer.MIN_VALUE * n, where n >= 2, throw an
    exception indicating 'integer overflow'.
    
    For the case of type bigint, Long.MAX_VALUE + 1, Long.MAX_VALUE * n,
    and Long.MIN_VALUE - 1, Long.MIN_VALUE * n, where n >= 2, throw an
    exception indicating 'long overflow'.

commit fb1f5e50035c9c5cb0d1d5089469625c544446ab
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 21 15:50:23 2019 +0200

    Improve logging for DistributingConsumer and CumulativePageBucketReceiver

commit 61dca6941e6d497d6ce652c93beb679a9a94d148
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 21 15:35:23 2019 +0200

    Improve trace logs in RefCountSearcher
    
    Also lifts the class to top-level

commit acae2d7d0d18abc396f15d3c0d689d1b004d2337
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Aug 21 16:04:55 2019 +0200

    Reflect release 4.0.4

commit 414cd8339b216478a7a06b10e4c6353dba7cfc74
Author: marregui <miguel.arregui@gmail.com>
Date:   Tue Aug 20 17:13:12 2019 +0200

    Add support for optional env variable ITEST_FILE_NAME_FILTER
    
    If defined to a non empty string, task itest of module blackbox can will only
    consider RST files whose name contains the string. For example:
    
        export ITEST_FILE_NAME_FILTER="sharding"
        gradle :blackbox:itest
    
    results in only the doctests within file 'blackbox/docs/general/ddl/sharding.rst'
    being run. You can undefine, or set the var to the empty string to consider all
    RST files in subsequent runs of the task.

commit 8a7e23ee5d8fbdef4db42f3f6c2b159a533b920b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 20 20:20:41 2019 +0200

    Lift anonymous JoinOperations RowConsumer to top level class
    
    Having a name for the RowConsumer should clarify the semantics a bit.

commit efd97d0d8da0fa358234a144e2755f4461fdc249
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Aug 19 16:53:29 2019 +0200

    Correctly complete queries with enabled profiling.

commit bbfd5bd753a6cc6f4b1c511f01356d9572d577e4
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Aug 20 10:36:46 2019 +0200

    Remove usage of Optional in all `kill job` classes.
    
    The optional used as a null check in all kill job related
    statements. Therefore, it is fine to replace optional with null.
    It would prevent the allocation of 3 new objects per one kill statement.

commit 5a300ae028ec050863ea1603f308fe6ba2407f3e
Author: Lukas Bernert <lukas.bernert@crate.io>
Date:   Fri Aug 16 08:59:02 2019 +0100

    Fixed the reference in the release notes of the filter clause.

commit bf6616805520ece178c8b7ff494d732af29ae6db
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 19 11:25:35 2019 +0200

    Extend FieldReplacer to process MatchPredicate symbols
    
    A `match` on an aliased table wasn't re-written to a function because
    it's fields couldn't be resolved.
    
    We've a re-write in the RelationAnalyzer from `AliasedAnalyzedRelation
    -> AbstractTableRelation` to `AliasedAnalyzedRelation -> QueriedTable ->
    AbstractTableRelation` which uses the `FieldReplacer` to re-map the
    fields. This didn't process the `MatchPredicate` so that later on its `Field`
    keys couldn't be resolved to `Reference`, breaking a re-write from the
    `MatchPredicate` to a `Function`.
    
    Fixes https://github.com/crate/crate/issues/9041

commit a2c0c5d3b02b2c213d79b85ce8f6bdf54fac6777
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 19 16:12:47 2019 +0200

    Run doc-tests with faulthandler registered
    
    So that we can dump stacktraces in case it gets stuck

commit e75a33cd717b8111f83005f597e544aa524edb53
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 19 13:30:19 2019 +0200

    Revert "Make RowConsumer listenable by default"
    
    This reverts commit 119497448d4e5ceabba4b97ced13e588f8a5360f.
    
    Looks like it made some tests flaky

commit e0a26ee69b86ec8003dc88a5b7cc910a19690caf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 14 16:48:05 2019 +0200

    Make `bytesUsed` in `sys.operations` return the currently accounted memory

commit 12403ff2ccf8f76082bf661687b0ca11bd615bce
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Aug 16 13:06:28 2019 +0200

    Fix documentation header level of `pg_typeof` section

commit 119497448d4e5ceabba4b97ced13e588f8a5360f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 14 15:53:11 2019 +0200

    Make RowConsumer listenable by default
    
    All but one RowConsumer implementations had already a future indicating
    when the RowConsumer was done. By making the `completionFuture` part of
    the interface we can get rid of the `ListenableRowConsumer` and
    `ListenableBatchIterator` implementations.

commit bcb0e6b4b40fa88599d232948e51f29e7db5af9b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 13 15:01:38 2019 +0200

    Inline prepare in RootTask

commit b5a718f0ee1b482d535d1eaca664f730749b062f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 13 14:52:09 2019 +0200

    Remove `operationFinished` handling in `RootTask.prepare`
    
    The `RemoveTaskListener` already takes care of calling
    `operationFinished`, and that the listener is triggered is currently
    made sure by the prepare handling in `AbstractTask`.

commit a7afdda6d06264d0736c92bf02fd24db59056990
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 14 13:33:13 2019 +0200

    Remove unused nowInMillis from QueryShardContext

commit 9019577c287d77554ca178329ca60a1dd3dc0536
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 14 13:28:23 2019 +0200

    Remove DateMathParser
    
    Our rangeQuery call-sites make sure that the value fits together with
    the column we're about to query. So there is no need for any parse
    logic.

commit 2b4b2477f0864eb9c7643e95e66f10c383ff48c6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 14 13:15:34 2019 +0200

    Remove support for resolving date-math expressions
    
    We're not using that functionality internally.

commit b216d388f6a7ed64a3ceb05f6b6cdd821bb03d1e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 14 11:28:45 2019 +0200

    Set more informative source when acquiring searchers
    
    Should help with debugging in case of leaks.

commit 827858c2aafa2d5641e7a2b7575c4d05734e52c6
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Aug 14 11:37:22 2019 +0200

    Make GroupByOptimizedIterator process the aggregation filter.

commit 1eeba578bc485053909834608405e17f40457d21
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Aug 14 11:02:37 2019 +0200

    Fix incorrect amount to logger calls in TransportShardDeleteAction

commit cd804c3eccad1597aace55be25552adb1ea51c82
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Aug 13 12:11:54 2019 +0200

    Process window function filter symbols that contain subqueries.
    
    The window funciton filter that contains a subquery was not
    resolved correctly for the cases when an execution plan contains
    the FetchOrEval operator.

commit 95cb40e39574d3b0b3122f8fa7cab85a377b113a
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Aug 7 17:08:37 2019 +0200

    Process window function filter symbols in WidnowAgg.
    
    Window function filter symbols were not considered in WindowAgg
    during the creation of the execution plan. It has resulted in creation
    of an incorrect `Collect` plan operator.
    
    This change occurs when running distributed queries that contains
    a standalone reference and window function call against concrete
    table relations.

commit 067c729a94f519990427d1984a3d104bc0030ea6
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Aug 12 10:34:04 2019 +0200

    Extend SymbolPrinter with the function filter.

commit cd218e489d1684cf3e2104eb929102df4203165e
Author: marregui <miguel.arregui@gmail.com>
Date:   Wed Aug 7 21:07:16 2019 +0200

    Add the pg_catalog.pg_typeof scalar function

commit 51dc43fa5f293bcb15fe34b04c2e909896378d46
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Aug 12 18:00:16 2019 +0200

    Throw correct error if window func arg is not in grouping
    
    All symbols used for a window function must be part of the grouping
    symbols. This case was not handled and thus resulted in non-user
    friendly errors while trying to resolve these symbols.

commit ca83d49cf8ccc1f033494f1aff85ef792d075b35
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 9 17:24:54 2019 +0200

    Merge GroupBySingleNumberCollector and GroupingCollector
    
    This moves the extra null handling that we had done in
    GroupBySingleNumberCollector into a `Map` implementation, so that we can
    re-use the otherwise generic `GroupingCollector`.

commit 95caa666db08ac62213be0946398df88ee75a287
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 12 10:27:14 2019 +0200

    Support assignments to nested column where the parent is null
    
    Closes https://github.com/crate/crate/issues/8832

commit ed18312ee5c6331a3dce68bd5b628a71388ac484
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 9 14:48:50 2019 +0200

    Remove two-step nodeId resolving in BaseNodesRequest
    
    The only call-site has the concrete DiscoveryNodes already available.

commit f373b9c7fa138bd253cf7d00a7f583c7bf6dd72e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 9 14:13:29 2019 +0200

    Remove empty classes extending AcknowledgedResponse
    
    We can use AcknowledgedResponse directly in cases where the classes
    didn't carry any extra information.

commit 82c31ead4201f2ca9ee3df03be6cbbeb177ead63
Author: marregui <miguel.arregui@gmail.com>
Date:   Fri Aug 9 16:09:14 2019 +0200

    Increase limit for len parameter to 50000

commit e2b728ee5d9845d6c04b5a95faa0b07134a6eb6d
Author: marregui <miguel.arregui@gmail.com>
Date:   Fri Aug 9 15:25:23 2019 +0200

    Split different cases into different methods for readability

commit 933426abec3fcec20820ca26feefd167d942d5c1
Author: marregui <miguel.arregui@gmail.com>
Date:   Fri Aug 9 12:45:27 2019 +0200

    Add lpad and rpad scalar functions

commit 3f1bddc93a04695fb0994a6454c2d3fd02363d4d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 8 18:05:08 2019 +0200

    Remove the ActionResponse
    
    The class was empty, we can use TransportResponse directly instead.

commit 190cb742cd13ad617e19b1917012c8705a29ab67
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 8 17:39:48 2019 +0200

    Remove ActionRequest in favour of using TransportRequest directly
    
    With the removal of the `validate` machinery, the `ActionRequest` class
    became empty.

commit 2d0c237fa98a24761ac5d571f32cce8c77cbf2a7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 8 17:08:30 2019 +0200

    Remove the ActionRequest validation machinery
    
    In ES with the TransportClient the ActionRequest classes served as a
    user interface following a builder-pattern. `validate` was then used to
    verify that the user input is valid.
    
    In our case the users only interact via SQL with CrateDB, and all
    requests are otherwise created internally. So we don't need this kind of
    `validate` machinery, as any invalid request construction would be from
    a programming error and not from invalid user input.
    
    Furthermore, we prefer to immutable request classes, where the
    validation can be done eagerly in the constructor if necessary.

commit b461781efb7a7d2cdf2534c1b2cefdabf274eaf2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 8 17:00:30 2019 +0200

    Remove unused TransportAddress from TransportMessage

commit c78e018053f558f613c7e9737d225140e4fdf4aa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 9 11:50:43 2019 +0200

    Expose the index.codec setting on tables
    
    Closes https://github.com/crate/crate/issues/8938

commit bb9e49db13cb1767331fccf8d86e394651e22273
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Aug 9 11:50:18 2019 +0200

    Fixed dynamic resize logic of our long BitSet wrapper.
    
    The existing logic only increased the size by multiple of 2 while an
    incoming index could be much larger and thus resulted in an
    out-of-bound exception when trying to set the index.

commit 3a25ad2a88870e231436ec89cc31c7958d4a7717
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 8 15:43:10 2019 +0200

    Remove Streamable

commit e17e85bddba0a49e864b6c96990e977bd53fc60d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 7 17:50:16 2019 +0200

    Remove Streamable support from TransportResponseHandler

commit 35c27bdbce25d3681ebb07721530403665eb4b92
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 7 17:35:00 2019 +0200

    Remove unused newResponse from GenericAction

commit 432d8251ee8e9f25240a8c67214a647d7ccfdabb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 7 16:52:52 2019 +0200

    Migrate BroadcastResponse and related classes to Writeable

commit 96e3e8b7031792580fc77605828b170d7ad47572
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 6 16:26:33 2019 +0200

    Migrate RestoreInfo to Writeable

commit ebee5b37edebca7e1be49041764d79f03f41af7a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 6 16:21:17 2019 +0200

    Migrate ShardStats to Writeable

commit 7103a42ead9298b3120463e414090ada7d5b977f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 6 16:19:17 2019 +0200

    Migrate TransportBroadcastByNodeAction to use Writeable

commit 7dc1c8c3af6fd71b4b4b89c2b5cf3b2828c44f1a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 6 16:01:00 2019 +0200

    Migrate IndexshardStats to Writeable

commit e6e764b736969e34cc730641dee577fd5b73870b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 6 15:53:17 2019 +0200

    Migrate Alias to Writeable

commit 1c50d71fa3b064b5e2987fdc93d77c53bd62669f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 6 15:47:07 2019 +0200

    Migrate PendingClusterTask and ShardCounts to Writeable

commit fd3af6080bfddfaf49861a4222d9b2d3612c29fd
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Aug 7 16:45:10 2019 +0200

    Fix output symbols order in WindowAggProjection.
    
    It might happen that outputs of `WindowAggProjection`
    don't match actual outputs of the `WindowBatchIterator`.
    The reason why it happens is that the window function symbols
    in the window aggregation projection outputs list are placed in
    the beginning and the standalone input symbols are placed after
    them. The materialization of roww in the window batch iterator
    happens in a way that the result of the window function evaluation
    is placed in a prepared spare cell at the end of a row. That would
    results in a mismatch between outputs of the projection and the
    outputs of the batch iterator. It may lead to various exceptions,
    for instance, streaming the result of window function evaluation
    to a handler node might fail because of serialization exception,
    such as streamers for the values are created based on the outputs
    of the projection.
    
    One scenario where it can happen is a select statement with a
    standalone reference and a window function call that contains
    the partition by clause in its definition ran against against
    a concrete table relation.

commit 03d663d149b311ba37d5119cf7f5765c814ff8b0
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Aug 7 20:15:49 2019 +0200

    Account for the count(*) aggregate filter in optimizer.
    
    The `MergeAggregateAndCollectToCount` rule merges the aggregate
    and collect to the count operator if there is only a single
    collect star aggregate. The rule was neglecting the aggregate filter
    while building the new count operator. This changes add the filter
    to the count operator or merges it with an existing where clause
    query.

commit 911b95c5521ac6f8345501227dc2dd422208e8c8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 7 11:23:48 2019 +0200

    Migrate DataType to Writeable

commit a8ae94f06bfc25a98f1fc80ad94e52e61bbcef55
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 7 14:10:37 2019 +0200

    Fix a race condition resulting in an error on sys.shards queries
    
    `ShardCollectorProviderTest.testQuerySysShardsWhileDropTable` failed:
    
        org.apache.lucene.store.AlreadyClosedException: store is already closed
                at __randomizedtesting.SeedInfo.seed([13EBE2975358553C:2213A773335A3E0E]:0)
                at org.elasticsearch.index.store.Store.ensureOpen(Store.java:227)
                at org.elasticsearch.index.store.Store.stats(Store.java:361)
                at org.elasticsearch.index.shard.IndexShard.storeStats(IndexShard.java:902)
                at io.crate.expression.reference.sys.shard.ShardRowContext.lambda$new$0(ShardRowContext.java:59)
                at com.google.common.base.Suppliers$ExpiringMemoizingSupplier.get(Suppliers.java:243)
                at io.crate.expression.reference.sys.shard.ShardRowContext.size(ShardRowContext.java:116)
                at io.crate.execution.engine.collect.NestableCollectExpression$FuncExpression.setNextRow(NestableCollectExpression.java:74)
                at io.crate.execution.engine.collect.ValueAndInputRow.apply(ValueAndInputRow.java:61)
                at io.crate.execution.engine.collect.ValueAndInputRow.apply(ValueAndInputRow.java:41)
                at com.google.common.collect.Iterators$6.transform(Iterators.java:783)
                at com.google.common.collect.TransformedIterator.next(TransformedIterator.java:47)
                at com.google.common.collect.Iterators$5.computeNext(Iterators.java:636)
                at com.google.common.collect.AbstractIterator.tryToComputeNext(AbstractIterator.java:141)
                at com.google.common.collect.AbstractIterator.hasNext(AbstractIterator.java:136)
                at io.crate.data.InMemoryBatchIterator.moveNext(InMemoryBatchIterator.java:82)
                at io.crate.data.CloseAssertingBatchIterator.moveNext(CloseAssertingBatchIterator.java:55)
                at io.crate.data.MappedForwardingBatchIterator.moveNext(MappedForwardingBatchIterator.java:42)
                at io.crate.execution.engine.distribution.DistributingConsumer.consumeIt(DistributingConsumer.java:109)
                at io.crate.execution.engine.distribution.DistributingConsumer.accept(DistributingConsumer.java:100)
                at io.crate.data.ListenableRowConsumer.accept(ListenableRowConsumer.java:40)
                at io.crate.execution.engine.collect.CollectTask.lambda$innerStart$0(CollectTask.java:142)
                at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:624)
                at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
                at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
                at java.lang.Thread.run(Thread.java:835)

commit 50f166bc667edc8ff58379dc2bb5e333cfc4b0f1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 7 09:38:10 2019 +0200

    Register subscript for objects only once instead of per return type
    
    So far we encoded the return type for subscripts on objects
    (`obj['x']['y']`) into the method name.
    
    We did this to preserve the type information which we can determine
    based on the object type and by the given path (`[x, y]`).
    
    We did this because of how our `Function` is constructed (by using the
    FunctionResolver, which doesn't allow us to keep onto this return type
    information).
    
    This commit now follows a different approach: We first create the
    `Function` with `undefined` as return-type and then utilize
    `normalizeSymbol` to try to get the concrete type from the given
    arguments and `ObjectType` information.
    
    The main motivation for this change is to get rid of
    `allRegisteredTypes` from `DataType`, which means a migration from
    `Streamable` to `Writeable` more difficult.

commit 5636103d5fa542667619c55b3071a71ef457b73e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 7 11:29:47 2019 +0200

    Fix flaky timezone function tests
    
    `String.format` must not be used without an explicit `Locale` since we
    randomize it in tests.

commit ecce3219acefb39dcfd5db108d964545e28fd9f1
Author: marregui <miguel.arregui@gmail.com>
Date:   Tue Aug 6 16:35:37 2019 +0200

    Add AT TIME ZONE syntax

commit be8860175a881f80f07c7f8b8f8c79387264cd06
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Aug 6 16:59:17 2019 +0200

    Reflect release 4.0.3

commit 48e7fccc40ece10d0993c05ade555b712dba9c9f
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Aug 6 21:13:48 2019 +0200

    Support functions without arguments in FunctionCopyVisitor.

commit 816c8ec512696e5a74183f94e6a61ea8fdf67718
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 6 15:04:16 2019 +0200

    Remove Streamable from ClusterBlock and Segment

commit fab25b05f90650f833a0b864a98574a149781707
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 6 14:57:21 2019 +0200

    Remove unused RequestCacheStats

commit 29539d68a78e6bacf612f0218ef5bac4722e7565
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 6 14:45:53 2019 +0200

    Remove unused interface implementations from RecoveryStats

commit d5abb122691972b5ebff0ceb9cb36889761f9799
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 6 14:43:00 2019 +0200

    Migrate ShardStats and QueryCacheStats to Writeable

commit d8942de42193f74b2a2a5ffdeeaac0f80f2a6d7b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 6 13:57:33 2019 +0200

    Migrate ReplicationResponse.ShardInfo to Writeable

commit ced5ab83b863d0f978dc5bb1c7511479cb8378a9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 6 13:44:46 2019 +0200

    Migrate DocStats and StoreStats to Writeable

commit f72483206c715094ff15bba8044fe302dc228738
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 6 13:40:03 2019 +0200

    Remove unused Streamable implementation from VerificationFailure

commit 1372a6e475f9c6fb5feeb30c720bcb3330f910a6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 6 13:38:01 2019 +0200

    Migrate NodeOperation to Writeable

commit 4ab0846a2468086bf394cf85ec70a41f48704892
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 6 13:36:45 2019 +0200

    Migrate FunctionArgumentDefinition to Writeable

commit 6b1992ceafa7c8a4abb34a40872d82b952f2f69b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 6 13:33:28 2019 +0200

    Migrate GeometricMeanState to Writeable

commit aa4432ee5d44ac841bb16e915569cbf87f0ab42c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 6 15:16:06 2019 +0200

    Expose the total_shards_per_node cluster.routing.allocation setting

commit d2217d3e007c5531d991238d018cb793247ae76a
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Aug 6 10:42:41 2019 +0200

    Add support for the filter clause in window function calls.

commit fcd3073505f5e4f7f269d530c410f3f192cc761e
Author: marregui <miguel.arregui@gmail.com>
Date:   Mon Jul 29 18:13:19 2019 +0200

    Add timezone scalar function

commit a538bbde19338461d020e5e4ecc42b18ad26f656
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 6 11:07:05 2019 +0200

    Remove StdDevState wrapper class
    
    We can use `StandardDeviation` directly, reducing a bit of indirection.

commit 85de3397b91eb40f236bba00d5658b89f00a36f9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 6 10:59:50 2019 +0200

    Remove VarianceState wrapper class
    
    We can use `Variance` directly and get rid of a bit of indirection.

commit 8c48929550caf74a583a07cafafd58d431bf3002
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 6 10:51:14 2019 +0200

    Migrate Variance to Writeable

commit f40b246094bdaf1e68ca53611b2529bff3d9e118
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 6 10:46:10 2019 +0200

    Migrate DistributionInfo to Writeable

commit be7993a827799289761d1371f412dd9c785d798c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 6 10:43:59 2019 +0200

    Migrate ShardResponse.Failure to Writeable

commit d1bd3491fd0b7fbc87c678d6d9dd00a3f4268751
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 6 10:41:59 2019 +0200

    Migrate UserDefinedFunctionMetaData to Writeable

commit fbfa822c11095617316903da1f8cbe7086cb65ff
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 6 10:28:10 2019 +0200

    Remove never populated properties from ExtendedOsStats.Cpu

commit be45d7b79476788ee49c94c07faf10ee51a0cbcf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 6 10:24:34 2019 +0200

    Migrate ExtendedOsStats to Writable

commit 432d92c145b488d6aa1fffca85d329fae150ec29
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 6 10:15:21 2019 +0200

    Migrate NodeStatsContext to Writable

commit aa25eab00c49c231645ffc7fd865076f3ea2d3da
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Aug 5 16:04:56 2019 +0200

    Fix selecting columns twice under different output name
    
    If a column is selected multiple times using different identifiers
    (e.g. once using the real column identifier and second using an alias),
    one of the columns wasn’t found if a relation boundary exists.

commit 677d3e6c3731c7bc66a5e88ce6960963af22ac4b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 5 16:19:32 2019 +0200

    Fix value removal logic in `collect_set`
    
    If a value was collected more than once and removed the same number of
    times it still appeared in the result.

commit 2c651153681492d5460a6fdad170ff08bc47f208
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Jul 30 17:11:13 2019 +0200

    Add support for the filter clause in aggregate expressions.

commit 07a466c1e44f640efcbad1332fa015b3b6b7100f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 5 13:14:38 2019 +0200

    Change return type of table functions to Iterable
    
    We don't need the `Bucket`s `size` property, so we can change the return
    type to `Iterable`, which will allow us to make some implementations a
    bit simpler as we do not have to calculate the final result-size
    up-front.

commit d65a59eb8914c5d2b2b5c0fde9399c978e6703c1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 31 16:37:03 2019 +0200

    Remove unused `arePeers`

commit 0fb27713c3cd16e3d843407e6f0c2dae701302e8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 31 16:35:50 2019 +0200

    Add docs to FrameBound.PRECEDING and FrameBound.FOLLOWING

commit 3b9bd4d84ac61203297beddb80788e6fff063add
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jul 31 17:49:50 2019 +0200

    Fix `build_snapshot` value inside version JSON payload
    
    The build number was used instead of the `isSnapshot()` boolean.
    This results in falsely displaying CrateDB’s version as a ``—-SNAPSHOT`` version at the AdminUI.

commit f9b4fb3d2532c47979db72ecfbf55dc0ed335504
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 31 15:29:59 2019 +0200

    Fix offset preceding/following calculations for windows with partitions
    
    The methods to calculate the frame boundaries were allowed to jump
    outside a partition, which resulted in frame boundaries that were too
    large.
    
    This is a fix for an unreleased feature, so no changes entry.

commit aea575930f27f28c6321a9b2d1a3ad943097abff
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 30 10:22:57 2019 +0200

    Require only a list of columns to describe the rows in the wf test framework
    
    The position of the column within the provided rows is implicit by the
    position in the list of column idents.

commit e6c5e898f889db4a65cd76084917d57ca5667e6c
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jul 31 13:15:27 2019 +0200

    Fix time zone offset parsing for value `+0000`
    
    This special case wasn’t covered by existing offset patterns.

commit 71a4d543ecb342ac11e4f5d683627787003e6ec3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 30 17:09:57 2019 +0200

    Rename WindowFrame.Type to WindowFrame.Mode
    
    `FrameBound` has a `Type` as well.
    
    Using `Mode` for `ROWS | RANGE` and `Type` for `CURRENT ROW | UNBOUNDED
    PRECEDING | ...` should help clarify what is what.

commit 906583f80522cf034e734f4989c470da8045eee6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 30 16:57:24 2019 +0200

    Avoid redundant streaming of offest start/end values
    
    The `startFrameOffset` and `endFrameOffset` values are already streamed
    as symbols as part of the `WindowDefinition`.

commit f83e1fdee0226ac93aed029b277bcd2ecab54f05
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 30 16:43:46 2019 +0200

    Improve errors raised by window function test framework
    
    The `.get(..)` call on a `CompletableFuture` will result in a
    `ExecutionException`, this is not the error we're interested in.

commit a80c7112441eac735dc411ae792cf8f707d00e67
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 30 15:17:21 2019 +0200

    Make offset symbol in FrameBoundDefinition non-nullable
    
    By defaulting it to `Literal.NULL`, so that the value is null, but not
    the symbol itself.

commit fbd2213ab3d11e2dccc2292623230d9acd94dc37
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 30 14:18:16 2019 +0200

    Remove the offset start/end value from window function test framework
    
    These values can be inferred from the window definition and don't have
    to be passed in separately.

commit b8db0d400045394d9fcb5f9a6f0840f5314f8b1f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 26 11:16:23 2019 +0200

    Remove SettingsFilter in favour of masked settings
    
    With 4.0 we introduced masked settings, which are similar to filtered
    settings in that they prevent the display of sensitive information.
    
    We don't need both and can remove the filtered settings in favour of
    masked settings.

commit 1108e70b259dde0d99496838ec9dd43b467dc33f
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jul 29 16:45:31 2019 +0200

    Remove unsupported table settings from default config
    
    Configuring general table settings (affecting all tables) is not supported since CrateDB 2.0.0. We missed out to remove them from the default config file.

commit 9a1134933514cb45ac22aa7deaa49cc59909c067
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Jul 29 14:13:13 2019 +0200

    Fix calculation of the mid index in binary search code of List2 methods.
    
    The sum might overflow to a negative value for the large start
    and end indexes.
    See https://ai.googleblog.com/2006/06/extra-extra-read-all-about-it-nearly.html

commit f69a012a9f055f6579e76549f74761838bc42e01
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 29 12:57:43 2019 +0200

    Inline AstVisitor.process
    
    The method delegated to `node.accept(..)`. We can avoid that
    redirection.
    
    It made stepping through visitors with the debugger more troublesome
    than it needs to be.

commit 4a7687badd57979bd7007308554453df811286f1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 26 09:52:16 2019 +0200

    Update lucene to 8.2.0

commit 25b0996dfc2f961690ee107b15156f458d87930c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 26 09:45:26 2019 +0200

    Update netty to 4.1.38

commit b7cfc84517856e8df566b09aeff3e35ebb761513
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 25 14:24:56 2019 +0200

    Rename TableParameterInfo → TableParameters
    
    The Info suffix doesn't convey any additional info.

commit ca7f927d3d4d30c20d1272cea7b95a30fe335555
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 25 14:20:02 2019 +0200

    Remove Setting definition indirections
    
    `TableParameterInfo` contained a lot of constant definitions for
    settings that are defined elsewhere.
    
    This removes them, as there is no real benefit by having them.

commit 2027f1017573f6ecf8ba2a243d933cdd2c0466f0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 25 15:45:15 2019 +0200

    Remove the orphans handling from create table
    
    We made DROP TABLE an atomic cluster state update a while ago, so there
    shouldn't be cases anymore that can result in orphaned indices or
    aliases.
    
    Removing the logic that deleted those orphans on a CREATE TABLE should
    therefore be safe. (And if not, it should expose any bugs and we can
    then fix the root causes)

commit bcc150ddd72e508ec19a03910b8c3c75d0ed1f3e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 25 10:32:15 2019 +0200

    Remove some remaining set type artifacts

commit 3efa58e3268995f7215041c76d85d42d2a144891
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 24 11:42:08 2019 +0200

    Unify drop blob table and drop table analyzers
    
    The `DropTablePlan` can also handle the removal of blob tables, so we
    can use the same analyzed statement type.
    
    It also removes the `noop` flag in favour of an explicitly nullable
    `table`. (Before if `noop` was true it already implied that the table
    was null)

commit 1a10b89f8c6f14a581f64a33c1b8bffc15dfa229
Author: marregui <miguel.arregui@gmail.com>
Date:   Tue Jul 23 15:05:47 2019 +0200

    Add left and right scalar functions

commit 8f6d05164cc1826655195850da515dbe7287b51b
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Jul 17 12:27:21 2019 +0100

    Add support for offset PRECEDING/FOLLOWING window frames.

commit 796bcfd7300811395bf8142d4588dcdc4f23f72f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 23 10:02:21 2019 +0200

    Add blackbox/.mypy_cache to gitignore

commit 55755c8374a89f48868244d0e43e559364fe2bd8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 18 14:28:29 2019 +0200

    Add VALUES as top level relation
    
    Besides improving SQL Standard compatiblity, this will allow us to
    de-duplicate the INSERT FROM VALUES / INSERT FROM query logic by
    treating VALUES as a regular relation.
    
    Internally it is currently being re-written to ``UNNEST`` as it lets us
    avoid having to add a new operator, execution phase, execution plan and
    execution task. The downside is that we've a row-orientation ->
    column-orientation -> row-orientation roundrip.
    
    We can later on optimize that if it turns out to be necessary.

commit 3ede9c1edefe75ae58c75cdb6ec2b672f682ad7b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 22 15:10:11 2019 +0200

    Jenkins: Update openjdk 12 version
    
    `-1` is no longer available.

commit 54ec8c6379434766875ccc3870b8915b4dffd237
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 15 17:33:25 2019 +0200

    Migrate ArrayType from Object[] to List<T>
    
    - Allows us to remove the `hashableValue` method
    - Will make it easier to support grouping on arrays, or even objects, as
    the default hashCode/equals implementations will behave more or less
    correctly
    - Will make it easier to implement aggregations like `array_agg`

commit b337829d276abfd74a03c49c28f9504c0119e3d6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 15 16:35:24 2019 +0200

    Remove BytesRef exception from Literal type/value-match assertion
    
    Values of type `DataType<String>` can no longer be `BytesRef` instances.

commit c7790da2eccb287d5b812454d23379c9f24861e3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 18 09:34:09 2019 +0200

    Fix java version parsing for EA builds

commit 3fb0dd2170f4533cab018b5084717b16b84c3521
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 16 15:08:03 2019 +0200

    Migrate GeoPointType to use Point and map points to oid 600
    
    This changes our internal representation of geo points to use a `Point`
    implementation instead of a `Double[]`.
    
    `Point` is a narrower representation that doesn't allow invalid states
    by design. (length != 2, or nullable x/y coordinates can't be
    represented anymore)
    
    The internal streaming doesn't change, so this is fully backward
    compatible on the transport level.
    
    On the fronted side:
    
     - The HTTP representation doesn't change, it is transmitted as a double
     array
     - On the PostgreSQL side the streaming changes as I also changed the
     type mapping to map to the PostgreSQL ``point`` type. This should
     improve compatibility with PostgreSQL tooling.

commit d9f89d4efadc53ad9aa24392c8e6da17ccaeaf2d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 15 15:54:03 2019 +0200

    Merge CollectionType and ArrayType
    
    With the removal of the SetType we no longer need the CollectionType
    abstraction.

commit 4d93a6438b0d20baf827783a8c234513b75e0347
Author: Kevin Quarshie <kevin@crate.io>
Date:   Mon Jul 15 14:00:17 2019 +0200

    Change index page header to title case

commit c236cfa9f061974af86441db5a157efe5f4d1a75
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 12 16:21:24 2019 +0200

    Reflect release 4.0.2

commit e69ff874ef339be5255c149b47064eabb688bf7c
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Jul 11 17:06:40 2019 +0200

    Bump version of admin-ui to 1.15.1
    
    Fix an issue in the admin ui that prevented partitions from showing
    up in the table detail view.

commit b366d5df8c93e076ffbb29134110e869baa33f06
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Jul 9 18:36:14 2019 +0300

    Push filters beneath ProjectSet if they target `standalone` outputs.

commit 075b28cf205de0239b7047be6cfe1c6ebb7a7f1a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 10 15:55:34 2019 +0200

    Fix version handling for unknown future versions
    
    Also bumps the `minimumCompatibilityVersion` to 4.0.0

commit 96d9035e7109fa97c2d6859050b9011ef7be6926
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 9 15:09:15 2019 +0200

    Remove the process method from LogicalPlanVisitor
    
    This method only called into `arg.accept(...)`. There is no need for
    this indirection.

commit 7dec613995874ea7c422ad5651e759cffdd767bd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 9 15:03:49 2019 +0200

    Include limit, filter, project-set and window-agg labels in StatementClassifier

commit ce7b36703adf8d85312e3060de2f1a4c8cffb029
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 9 14:55:29 2019 +0200

    Lift visitor in StatementClassifier to top level

commit 36dccb5c3f0938005ff4e60e849a6a923deeab18
Author: Lukas Bernert <lukas.bernert@crate.io>
Date:   Tue Jul 9 11:15:34 2019 +0100

    Fixed broken reference

commit 87b43e45ae08b2a88a0dd6e2000ec8f22ade56b0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 9 16:58:43 2019 +0200

    Avoid creating tables that are not used in SelectOrderByIntegrationTest
    
    No test used the parted table and some tests don't use the characters
    table.
    
    Creating them on each test run & tearing them down again unnecessarily
    slows down the test suite.

commit 6a18ad562c6d0f0b0865e1c83bda5d97910ee206
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 9 16:56:11 2019 +0200

    Make `missingValue` an enum
    
    It was so far an `Object` that was always a `String` that was either
    `_first` or `_last`.

commit 5a905b14c8db57b7dc7f2464bd838f2bf7e7b4f7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 9 16:33:29 2019 +0200

    Adjust SortOrder.missing for non-nullable nullsFirst flag

commit 138bc59e5e2ba615e9bd4caa84ccec97087c0754
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 9 16:22:03 2019 +0200

    Implement missingObject for all primitive types.
    
    Would've caused a failure if someone used a ORDER BY on a scalar
    function that has a `timestamp without time zone` return type.
    
    Currently there is none, but could be a UDF.

commit 03fe58ff9725c8444e53814c715a2734d0e37e67
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 9 15:53:42 2019 +0200

    Enable arithmetic functions for timestamp without time zone

commit 49f380d05dca61f130b32fce4db92cd1e799efef
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Jul 2 16:13:34 2019 +0200

    Add support for the named window definition.

commit 19ced7099a98bf14885bf7e91e1db224f809c549
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 8 16:20:41 2019 +0200

    Reflect 3.3.5 and 4.0.1 releases

commit 61a78a03f5937963832c4b00914098cd33a7cc13
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 4 17:17:43 2019 +0200

    Remove subQuery planning logic from RelationBoundary
    
    We can re-use the existing MultiPhase operator instead for better
    separation of concerns and it will open up the possibility to remove the
    RelationBoundary in cases where relations do not introduce new scopes.

commit 96def88f22a2697cef409139d8e1ce870611ba15
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 5 10:07:01 2019 +0200

    Don't use doc lookup in insert from sys-tables
    
    Columns selected from sys tables in an INSERT INTO got re-written from
    `x` to `_doc['x']` due to the change in
    6e3e072b7b4f390a124993d32a94dd1d73f01233
    
    This fixes the re-write rule.

commit 57773381c09f31e3011138f8d4f6cb64349c089a
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Jul 4 15:25:16 2019 +0100

    Fix the CURRENT_ROW end index in ROWS mode to yield an exclusive bound.

commit 89923824e34c1690252ac062b92e2d4e720f7f41
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 4 15:51:57 2019 +0200

    Drop QueriedSelectRelation normalization optimization
    
    See conversation in https://github.com/crate/crate/pull/8898

commit 83d820a9adbccb3fdba30e58bea6cad7b443d038
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 4 13:26:20 2019 +0200

    Replace OrderedLimitedRelation with QueriedSelectRelation
    
    This removes the `OrderedLimitedRelation` as it is very similar to the
    `QueriedSelectRelation`, except that the query clauses it can have were
    more restricted.
    
    But given that the base interface `AnalyzedRelation` supports all query
    clauses and given that the LogicalPlanner treated both relations the
    same, we can get rid of `OrderedLimitedRelation`.
    
    Saves us the hassle of having to deal with one more concrete relation
    type in various visitors.

commit 4345087c1ba44e51a5f9ad2b8aefa0f331203117
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 4 11:39:49 2019 +0200

    Replace QueriedTable with QueriedSelectRelation
    
    The two relations were semantically pretty much the same, except that
    `QueriedTable` put a more narrow constraint onto the inner relation.
    
    This therefore extends the `QueriedSelectRelation` to have a generic
    type for the inner relation, so that we can keep the type information of
    the inner relation in a couple of places.
    
    Having one concrete relation type less to deal with will make other
    refactorings a bit simpler.

commit 6e3e072b7b4f390a124993d32a94dd1d73f01233
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 4 11:32:19 2019 +0200

    Change insert from subquery planning to not rely on outputs mutation
    
    This is in preparation to:
    
    a) De-duplicate fields() and outputs()
    b) Get rid of the QueriedTable

commit 9bc857c1a912211aeca8107426725b75dd660cca
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 4 09:41:44 2019 +0200

    Docs: Correct promote replica synopsis and rename node_id → node

commit f6d447e370f8cfd4160f784afb9d6f833db4318f
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Jul 2 17:05:05 2019 +0100

    Add support for ROWS window frames.

commit 953d413769c8e662a70cfd51c6033ad81c99762a
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Jul 3 10:34:50 2019 +0200

    Link lead and lag function docs in the changelog entry.

commit d3400ce5f015442e140ea50f0331c481cc74bdfe
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Jul 3 09:55:05 2019 +0200

    Use partition instead of frame end in getRowInPartitionAtIndexOrNull.
    
    The method relied on the upper frame bound to get calculate
    index of a partition end. It could lead to incorrect behaviour
    In case when the end of frame has the ``current_row`` type.

commit 43775ef05d9e22d3930812a4fbae1c6cdbe0f583
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 3 10:09:07 2019 +0200

    Remove mocksocket dependency
    
    mocksocket wraps the `Socket` and `ServerSocket` APIs with
    `AccessController` blocks. Given that we don't enable the security
    manager we can use the regular `Socket` and `ServerSocket` classes.

commit 13ba430ae068aed39f2cbeb7d41d50b50f8d6c08
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 3 10:03:57 2019 +0200

    Update test dependencies (randomizedrunner, mockito)

commit de80a0060522212c98323026dab7c24c0786b741
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 3 09:56:59 2019 +0200

    Update hppc to 0.8.1

commit cf99b80e86b37efcb80fadfd459c4efc5003627a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 3 09:51:33 2019 +0200

    Update guava to 28-0

commit b79c1d8c3981ae9f4b260a27345051d6265fb753
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 2 17:28:35 2019 +0200

    Docs: Cross-ref from wait_for_active_shards to promote replica

commit 901712b75c3608bd72b081d28fdbb10685f0b6b8
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jul 2 14:59:06 2019 +0200

    Fix a Generics type issue at the StaticTableInfo
    
    Follow up of fa99398c12f25b2799f86ba0f60e63f24b06c31b.

commit d1551921ad8e5385d4345898dbfd06febe58b3ce
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jul 2 14:42:43 2019 +0200

    Fix a possible NPE on the `sys.allocations` table.
    
    `explanations` can be null which must be supported by the used map
    implementation.
    
    Follow up of fa99398c12f25b2799f86ba0f60e63f24b06c31b.

commit 20a552071d9abe0a7b5b30b598f7d142675e4f36
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 2 15:37:36 2019 +0200

    Support node name as arg to alter table reroute in all sub-commands.

commit 740c73ed600f3a73f88a065f5224f8994c00693e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 2 14:53:35 2019 +0200

    Remove the double dispatching in RerouteActions
    
    The `DDLStatementDispatcher` already has the concrete statement
    available, so the `RequestBuilder` inside `RerouteActions` isn't
    necessary.
    
    It also de-couples pure logic (request building) from IO (transport
    action execute)

commit 4969530931d190fbe68ba13705a86e2d40a16162
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 2 14:16:05 2019 +0200

    Support both node ids and names in promote replica

commit e6824a5b69119fb6c1a816d4bb652e854f1325d7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 2 10:08:14 2019 +0200

    Add promote replica sub-command to alter table

commit 7428846cbeea73174410c78edfe260c5847184dd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 2 09:16:38 2019 +0200

    Extend the write.wait_for_active_shards docs

commit a3d89ff18d8912ed3333d3d8d233e60fb5c08356
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Jul 1 23:27:36 2019 +0200

    Update the ``sql_features`` table with supported features.

commit a8eba874bac836b4161f0be2618012e8313ebd4e
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Jul 1 17:14:33 2019 +0100

    Add support for the lead window function.

commit 1b13e8b4f42635b3a06d00dad83502b352ed2bfe
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 1 17:24:04 2019 +0200

    Update gradle to 5.5

commit aafee345dbbd044b666e33ba01d71bf6abeff2b2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 1 15:28:46 2019 +0200

    Update netty to 4.1.37

commit 57953690bd4fa6135865b27595ae4e177b966de0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 1 15:14:27 2019 +0200

    Update to Lucene 8.1.1

commit 30264350d755e16a4bff6e640f965c109cd95e35
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Sun Jun 30 22:03:26 2019 +0200

    Implement the ``lag`` window function.

commit daeebe9a0471b28db763ffb347cc278c49ef2752
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Jul 1 15:05:53 2019 +0200

    Limit ranges of WindowFrameState::getRowInPartitionAtIndexOrNull.
    
    Previously, calling the getRowInPartitionAtIndexOrNull with negative
    index argument on a partition that has a preceding partition could
    result in fetching a row from the former. This commit enforces the
    limits to prevent such situations.

commit b99787f177eec54c49fb65482c1b3a4a20f12118
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 27 16:54:21 2019 +0200

    Change default for wait_for_active_shards to 1

commit 35c30151d81a66eb51126caeb5e0562f4cb6e9f5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 28 11:45:30 2019 +0200

    Expose write.wait_for_active_shards under settings of table_partitions

commit 615855cd2efa95c202f41e9d1434629e294a0946
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 1 15:45:37 2019 +0200

    Bump version to 4.1.0-SNAPSHOT

commit a4d49fe072039d46057a795050cb6be8bf8b5727
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 1 14:01:19 2019 +0200

    Change TablesNeedUpgradeSysCheck to check for re-index requirement
    
    The check with ID 3 was initially the sys-check that checked for tables
    that need to be re-created (See commit da9a66e918b57c487d56a6ec3ae6bbed60b7db93)
    
    This changes the logic of the check back to check for the re-index
    requirement as a segment upgrade alone isn't sufficient to make tables
    compatible for the next major version.
    
    It also changes the severity to low (given that no action has to be
    taken if there are no immediate upgrade plans).
    
    Within CrateDB 4.x this will trigger for tables created in 3.x.
    With a backport to 3.3 this will trigger for tables created in 2.x.

commit 7fc712f85ee046a3f22a9117732cc3f4ef084e66
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 28 15:41:56 2019 +0200

    Replace CompletableFutures.failedFuture with JDK failedFuture
    
    Since we're no longer on JDK8 we can get rid of our custom failedFuture.

commit fa99398c12f25b2799f86ba0f60e63f24b06c31b
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Jun 24 11:34:39 2019 +0200

    Cleanup static system and information tables to be more concise
    
    Merge expressions and column definitions together to be more concise
    and typesafe and to remove redundancies and boiler plate code.

commit 591d5ab3dd224a5045af834f9810ec49427ce6a3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 27 13:56:22 2019 +0200

    Make sure nested columns default expressions are considered
    
    The `defaultExpressionColumns` in the `DocTableInfo` didn't contain
    entries for nested columns, which caused other parts to not fill in
    missing values properly.

commit b20e5d32c15992066d999bc3df0f4894d4e9d4ca
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Jun 26 15:41:43 2019 +0200

    Support all drop statements in SqlFormatter.

commit b9be1d412e5b9f2f20750b43cea8ba9986d912a8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 26 15:49:52 2019 +0200

    Validate values for nested object column that contain generated expressions
    
    Previously in a table like:
    
        CREATE TABLE t (obj object as (x int, y as x + 1));
    
    With an INSERT like:
    
        INSERT INTO t (obj) VALUES ({x=1, y=3});
    
    We silently overrode the `y` value with `2` (the result of the generated
    expression). This was inconsistent with the behavior of top-level
    generated expressions where we throw an error if the provided value
    doesn't match the computed value.
    
    Co-authored-by: Savvas Makalias <savvas@crate.io>

commit fa45373f8aa5d725e7d9fa4a9d7179d3cf80b2fe
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jun 24 11:33:55 2019 +0200

    Fix ordering by literal constants.
    
    Ordering by literal constants is currently not supported by the (lucene)
    collector and also result in a NO-OP. Thus literal symbols are filters
    out of the ordering symbols.
    
    Relates https://github.com/crate/crate/issues/8851.

commit e5032b5c4633b06f7347e1b15761e70fde42d580
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Jun 24 17:15:29 2019 +0200

    Format and unify sql statements in window function docs.

commit c3c7c0c6a030ad94b7f4f318965bbe35eeef3f1c
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Jun 24 16:41:21 2019 +0200

    Add over clause into the `select` sql reference doc.

commit a151154143608d55c05ea7626c9756d11d98bed0
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Jun 25 15:52:16 2019 +0200

    Version bump (4.0.1-SNAPSHOT)

commit 082a5efdc48ffde27225c06fbb2784605a9661d7
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Jun 25 14:57:07 2019 +0200

    Point to correct Version file.
    
    io.crate.Version -> org.elasticsearch.Version

commit 4eb625b8bbe5af5c396cb015ee81366ce1869508
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Jun 25 12:04:47 2019 +0200

    Prepare release 4.0.0

commit f923d6bac657a387e4e9c6768fdea32cb1738fd3
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Jun 19 15:15:56 2019 +0200

    Remove the SetType.

commit 39c87c50b3eac9d2fdf3b4752c87e22d5ad787dd
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Jun 19 15:07:44 2019 +0200

    Make collect_set removable cumulative.

commit fa07fefc338cddc4c7889f6e5a14271caf8314c7
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Jun 19 15:06:01 2019 +0200

    Add a new object type to allow serialisatino to Map<Object, Object>

commit 564fee89ccb5fec658855cd83b57b56ba3ef7225
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jun 24 11:19:50 2019 +0200

    Revert "Do not move Order below Union if ordered by literals"
    
    This reverts commit 33ece05e4dd88afc551317df3c028e2b9ce6f660.
    The fix was wrong as it only solved this special union case
    while ordering by literal on simple selects still raises errors.

commit 72dae93ab15ecb2ab87e1fc52b177e5f1d573484
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Jun 24 10:38:42 2019 +0200

    Update the SQL standart to CrateDB compatibility docs.

commit 999c3d83b20532a8d76104a1224675f2684c9cd7
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Jun 12 18:39:57 2019 +0200

    Cleanup static table definitions to be more concise and typesafe.
    Add additional register methods to ColumnRegistrar to be able to
    register Columns and the related RowCollectExpressionFactories directly
    in a more typesafe way without defining the expressions separately in
    static tables. Also migrated the majority of the static tables.

commit 60e9bb4ec8855d3d461fcf6b60e8b46ff9b41b12
Author: Kevin Quarshie <kevin@crate.io>
Date:   Sat Jun 15 18:38:28 2019 +0200

    Change directive headings and page titles to sentence case

commit 33ece05e4dd88afc551317df3c028e2b9ce6f660
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jun 21 10:26:44 2019 +0200

    Do not move Order below Union if ordered by literals
    
    An order on a union always references to the position on each sub relations
    outputs. If one symbol is a literal, it must be applied after the union as
    each sub relation may return different literals.
    In such cases, the push down must be prevented.
    
    Fixes https://github.com/crate/crate/issues/8851.

commit e17ed0dde7b9c996777cf9852cfeee9f5767959d
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jun 20 12:13:26 2019 +0200

    Fix subscript resolving on table relations.
    
    On e.g. joins, a source relation will result in a direct table relation
    without any queried relation on top.
    But as only query specs on queried tables will be normalized (fields are converted References) we must ensure that Fields can be converted also without any normalizer involved.
    
    Example query:
    ```
      SELECT t1.id FROM t1, t2 WHERE t2.id = t1.obj[’t2_id’]
    ```
    
    Another solution would be to ensure normalization of the MSS QuerySpec using possible concrete table relation field resolvers.
    This would result in similar code we got rid of by https://github.com/crate/crate/commit/2578d2d36cc6541a9d8d16951f7019cb7c466307#diff-1b895cc06f385597827363a84e3cdebb.

commit 4d9f7d6f3e736c979dfc9a2f1c0fa6355fca5385
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Jun 20 16:15:19 2019 +0200

    Refactor NestableCollectExpression from an abstract class to an interface.
    There is no good reason for having NestableCollectExpression as
    an abstract class, interfaces are in general easier to handle.

commit be07ebd4ac98c53f121e6bfc74893d37766a6d1f
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Thu Jun 20 10:38:01 2019 +0200

    Upgrade AWS SDK version to 1.11.576.

commit a3a19f9e508970f9dcfe9f353d2c61304827ecc4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 20 10:36:23 2019 +0200

    Update release notes to reflect 3.3.4 release

commit 61e2d8b27a679c08f8f0722b76baf6e32fc509df
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Jun 19 16:19:01 2019 +0200

    Replace StaticCredentialsProvider with AWSStaticCredential.
    
    StaticCredentialsProvider is deprecated.

commit 55482e5ef032805becb37821b40426588fea8e7f
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Jun 19 16:19:44 2019 +0200

    Use lower case function for s3 endpoint setting parsing.

commit 02676a805621e4e09ed43eb53f25b3c508349a92
Author: Savvas Makalias <savvas@crate.io>
Date:   Thu Jun 20 10:53:31 2019 +0300

    docs: remove fix entry from unreleased as the issue was not exposed to customers
    
    This regression was introduced by bd56b2e which is not released yet
    so there is no need for a fix entry.

commit a9382ec538822a1365fbdf9062998af9ba3cb7ad
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 19 15:07:43 2019 +0200

    Group breaking changes into topics in unreleased release notes

commit bd69a4ee78ff9116d6012a46f3df83eaa05e13ec
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 18 10:46:03 2019 +0200

    Group unreleased release notes by topics

commit da5073f3308233ea4ffb03d0ba2e76549eaf45e8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 19 14:43:06 2019 +0200

    Remove SQLBulkResponse
    
    When we switched from our transport java client to JDBC we kept some
    compatibility classes in the test layer to avoid having to adapt all
    tests and to bridge between using JDBC & directly using a `Session`.
    
    The `SQLBulkResponse` was one of these compatibility classes that also
    contained an `errorMessage` that was never accessed. So this removes the
    class in favour of a rowCount array to enable us to writer simpler
    assertions. (`assertThat(rowCounts, is(new long[] { ... }))`)

commit 89bb0161a420a574de8091c008169c4307a555e5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 19 12:21:04 2019 +0200

    Fix row count reporting for `on conflict.. do nothing` conflicts.
    
    This fixes an issue where bulk requests with `ON CONFLICT (id) DO
    NOTHING` would get an error response for the items that had a conflict.
    
    We used a BitSet to represent the successful responses. This limited us
    to 2 states: Write happened (rowCount 1) or write failed (rowCount -2)
    
    We also need to take care of the third state: Write was ignored (rowCount
    0).

commit 15159d80398a123885a3b48e18a7a1298ed777cf
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Jun 19 09:27:20 2019 +0200

    Revert "Add optimizer rules pre-grouping by root plan type."
    
    This reverts commit b374088f167dc0aac85d42015f9b591eb2d9686d.

commit 37fa8018e13228dc2a9981094dab7cff79b4cb9d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 18 16:03:19 2019 +0200

    Jenkins: Set timeout once globally instead of per gradle call

commit 2f9ad85b85dd87fa72231d71e878e92eacce776b
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jun 18 18:17:55 2019 +0200

    Fix table swapping on left/right outer joins
    
    When tables are switched the join type must be inverted as well.
    This is important for LEFT/RIGHT joins and otherwise results in wrong join execution.

commit 4f04480525f7f621b3faa3b822be2e1453a36230
Author: Markus Holtermann <markus@crate.io>
Date:   Tue Jun 18 09:38:51 2019 +0200

    Fix spelling mistake in comment
    
    Refs a8119ebd6ffded90916bb37194b131577ed5f05e

commit b374088f167dc0aac85d42015f9b591eb2d9686d
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Jun 17 21:39:11 2019 +0200

    Add optimizer rules pre-grouping by root plan type.
    
    It improves the performance of the rule application by
    pre-grouping rules by the root plan instance type they operate on,
    due filtering out all rules except potentially applicable once.

commit 4729e6d7c16ac2d5b02bc99d1894d4751536556b
Author: Savvas Makalias <savvas@crate.io>
Date:   Tue Jun 18 11:26:45 2019 +0300

    docs: 'Alter table add column' with default clause is not supported

commit 67958c420f6cd5dfa0db990308d6c6270d2df875
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 17 15:44:17 2019 +0200

    Stop SeedHostsResolver on shutdown
    
    Backport of ES 42844

commit 5e91ecffe3715ec7059745c2e5b9872549af417c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 17 15:40:13 2019 +0200

    Don’t ack if unable to remove failing replica
    
    ES backport of 39584

commit 440bb520f4608592a3643d0f0f05549512d8ef46
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 17 15:32:11 2019 +0200

    Adapt ShardStateAction to use TransportRequestDeduplicator
    
    This is a partial backport of ES 37870
    
    We already had the TransportRequestDeduplicator but hadn't adapted the
    `ShardStateAction`.

commit e312298551f9d5d8949824aa82aaa176b9ebb96b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 17 15:12:37 2019 +0200

    Avoid bubbling up failures from a shard that is recovering (BP ES #42287)
    
    Backport of 42287 from ES.

commit 7f1fb8713ac1ab02007b7635bef3b969022e525b
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Thu Jun 13 16:38:21 2019 +0200

    Remove multi-client support from s3 repository.
    
    This functionality is not exposed to users.

commit fe629cb0b9dbd03cc2129c1704d4053e1e7472a3
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jun 17 16:20:24 2019 +0200

    Fix outer-to-inner-join plan optimization of FULL outer
    
    On full outer joins, filter must stay on top of the join phase even if they
    are pushed down to the relevant source as both sides can generate NULL
    which may be filtered out after the join.

commit 07e48eeb7d791272f1d5f7b27de6ee4907fc4b5f
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jun 17 16:17:30 2019 +0200

    Adds trace logging to the Optimizer rule matching

commit cdf111cac3965728b5bc07cbf87cd0232e0c36eb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 17 13:18:45 2019 +0200

    Make sure bulk operations are tracked in jobsLog
    
    Fixes a regression introduced in https://github.com/crate/crate/pull/8805

commit f738ad66452781d33382a374601da36646f95242
Author: Sebastian Utz <su@rtme.net>
Date:   Mon May 27 17:15:03 2019 +0200

    Add support for relation aliases with column aliases
    
    To support queries like:
    
    ```SELECT foo.x from unnest([1]) as foo(x)```

commit ae9272c91f25b6aedc28d6ca9da6ef4b79cba433
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 3 14:50:41 2019 +0200

    Make relations aware of subscript paths

commit 4bcd78d1a5a96f0fe9ad950867d06db005923019
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 17 09:09:22 2019 +0200

    Validate deferred executions before triggering any
    
    `test_execute_batch_fails_with_read_operations` was flaky because did
    the validation ad-hoc on each statement. So we sometimes already
    executed a valid subset of the batches.

commit 34c55b5233f2ec2aac23ffee59136400a140d05b
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Thu Jun 13 15:03:25 2019 +0200

    Backport some of s3 repository tests.

commit 86fdf9e026a1c23bc3ccb63e7ce91af6b4aec209
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 14 10:51:23 2019 +0200

    Add more benchmarks for grouping operations
    
    - A baseline benchmark to have a reference to what's possible without
    any abstraction overheads
    - Same for Lucene, with `NumericDocValues` and `SortedNumericDocValues`
    
        measureGroupBySumLong                                avgt   10  710.172 ± 40.041  ms/op
        measureGroupBySumLongOptimized                       avgt   10  606.413 ±  1.816  ms/op
        measureGroupBySumLongOptimizedOnLuceneBatchIterator  avgt   10  878.274 ±  8.251  ms/op
        measureGroupingOnDocValues                           avgt   10  414.473 ±  8.890  ms/op
        measureGroupingOnLongArray                           avgt   10  227.142 ±  0.268  ms/op
        measureGroupBySumLongOptimizedOnLuceneBatchIteratorWithNumericDocValues        avgt   10  848.663 ± 15.214  ms/op
        measureGroupBySumLongOptimizedOnLuceneBatchIteratorWithSortedNumericDocValues  avgt   10  944.336 ± 81.760  ms/op

commit 72b50f30f8520cbb6ac5f55b28908fde71eef4d9
Author: Savvas Makalias <savvas@crate.io>
Date:   Fri Jun 14 16:21:34 2019 +0300

    docs: Column list order update

commit 28dcd91abe77925be55141a7489fc5d39eeb1dd6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 14 11:01:10 2019 +0200

    Use optimized bulk execution if applicable for batched deferredExecutions
    
    If we have a case like:
    
        addBatch(STMT1, args1)
        addBatch(STMT2, args2)
        addBatch(STMT2, args3)
    
    We can execute STMT2 using the bulk processing functionality.

commit 353564d93b0e330525a4af808788761dd552ca2c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 13 15:34:25 2019 +0200

    Fix NullPointerException of `crate-node` with missing config
    
    Before:
    
        ↪  ./app/build/install/crate/bin/crate-node unsafe-bootstrap
        Exception in thread "main" java.lang.NullPointerException: supplier.get()
                at java.base/java.util.Objects.requireNonNull(Objects.java:246)
                at java.base/java.util.Objects.requireNonNullElseGet(Objects.java:321)
                at org.elasticsearch.cli.EnvironmentAwareCommand.createEnv(EnvironmentAwareCommand.java:89)
                at org.elasticsearch.cli.EnvironmentAwareCommand.execute(EnvironmentAwareCommand.java:84)
                at org.elasticsearch.cli.Command.mainWithoutErrorHandling(Command.java:124)
                at org.elasticsearch.cli.MultiCommand.execute(MultiCommand.java:77)
                at org.elasticsearch.cli.Command.mainWithoutErrorHandling(Command.java:124)
                at org.elasticsearch.cli.Command.main(Command.java:90)
                at org.elasticsearch.cluster.coordination.NodeToolCli.main(NodeToolCli.java:45)
    
    After:
    
        ↪  ./app/build/install/crate/bin/crate-node unsafe-bootstrap
        ERROR: the system property [es.path.conf] must be set. Specify with -Cpath.conf=<path>

commit 63ae34a98b3771c819af29ad2e511fe245b47bee
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 13 11:51:05 2019 +0200

    Close related portals if a prepared statement is closed
    
    From the PostgreSQL wire protocol docs:
    
    > Note that closing a prepared statement implicitly closes any open
    > portals that were constructed from that statement.
    
    We didn't do this so far, which caused the issue described in
    https://github.com/crate/crate/issues/8782
    
    This fixes https://github.com/crate/crate/issues/8782

commit e6c673500977eaf599fe490ebc764083579cdc55
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 12 18:10:44 2019 +0200

    Make Portal a data structure and move execution logic to Session
    
    According to the PostgreSQL wire protocol documentation, if a prepared
    statement is closed, any portals that used the prepared statement must
    also be closed.
    
    To do so we'll have to find all portals that use a given prepared
    statement. This is currently difficult to accomplish as the
    `BatchPortal` can contain many prepared statements. So we'd have to
    split the portal or remove relevant parts.
    
    Given that that would be rather complex, this commit re-organizes the
    portals to make a fix easier to do in a follow up commit. There is now a
    single portal that is a data container and the execution logic is moved
    into the session.
    
    This way each portal has exactly 1 prepared statement that it can
    reference.

commit 8c668af22df824a2d2521b6426b5329eaf498513
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 13 10:08:59 2019 +0200

    Move inner classes out of Session to top level

commit 7fe43a0b896c8948c31eaa457e1c9ec376a29e2a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 12 23:33:38 2019 +0200

    Move forWireTransmission exception handling out of Session
    
    This makes the error handling in Session consistent. We've had 2 places
    in the Session where an exception was wrapped with `forWireTransmission`
    and a lot more where it wasn't. This removes the 2 places and instead
    adds the handling to the `PostgresWireProtocol`.

commit 2285f3335e99e6ef61e4c7f3a1e30dce5a3860c4
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jun 13 12:04:10 2019 +0200

    Fix PrimaryAllocationIT test
    
    Ensure that the newly started node is correctly re-using an existing
    data directory.

commit 6a10f2f08825480edc7b84ca00d84c36873cbdf4
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jun 13 11:58:15 2019 +0200

    Update dev tool for applying ES patches
    
    Adds path rewrite for `test/framework` -> `es/es-testing/`

commit ce8724193e9db34ba61b7fe14acf8fe30b5612f9
Author: kevin quarshie <kevin@crate.io>
Date:   Wed May 22 16:52:13 2019 +0200

    Change titles to sentence-style capitalization

commit a1eb513109c693ffa40140a5d64a77ae9163e0de
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Jun 12 15:58:36 2019 +0200

    Release resources correctly in SslReqHandlerTest.
    
    Fixes the Netty's ByteBuf leak test checks.

commit 96c54fae3eeb3abb8b5e9ed0bd79acc2c2dbb63e
Author: Savvas Makalias <savvas@crate.io>
Date:   Tue Jun 11 17:53:57 2019 +0300

    docs: Fix reference for Primary Key constraint

commit c8c332a16e2df90b7bb7637aa79bd3ac8c04e18a
Author: Savvas Makalias <savvas@crate.io>
Date:   Thu May 30 12:23:12 2019 +0300

    Add support for default clause

commit 526d32093c9af34d0858641924ece41703cdf360
Author: Andrei Dan <andrei@crate.io>
Date:   Fri Jun 7 17:12:04 2019 +0100

    Evaluate is null predicates against UNDEFINED data types (eg. field in ignored object)

commit 357adbeaf265d03ce84f8876efd31902eec0582e
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Jun 11 09:17:31 2019 +0200

    Remove parenthesizedPrimaryExpressionOrSubquery grammar rule.
    
    This rule is obsolete, all cases that it handles are covered with
    the nestedExpression and subqueryExpression rules.

commit a1c1f4f5567ed51cb37ca5a8fd683d7109b9b27b
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Jun 11 15:29:25 2019 +0200

    Support the extract scalar on timestamp without time zone.

commit e667ad82be58ec79a9d41c6865c2748eed913e1f
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Jun 11 11:49:29 2019 +0100

    Allow UNBOUNDED PRECEDING - UNBOUNDDED FOLLOWING frames.

commit ad84e19c20ee93fe883e64eb8652e3eefe846168
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Jun 11 11:48:53 2019 +0100

    Fix window functions link in the release notes.

commit 5a6f75db4efe7d0911b82267b92dfaa6f3c59635
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 6 16:20:48 2019 +0200

    Port over part of UnsafeBootstrapAndDetachCommandIT from ES

commit f8683963252d794c3e2907f538552d80aa89436b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 5 15:19:03 2019 +0200

    Add `crate-node` cli

commit 0d59b76c47a9e0e6757d6f8cb6469f39f40e5990
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Jun 10 14:32:31 2019 +0100

    Remove the set type from the grammar.

commit 8c6f4e01e52e336cc59f39e7fb1a9a222f28a3db
Author: Andrei Dan <andrei@crate.io>
Date:   Sat Jun 8 14:37:44 2019 +0100

    Drop support of Set type from casts and change collect_set to return array.
    
    This commit reduces the scope of the crate SetType to only be an intermediate
    aggregation type for `collect_set` as it proved to be a source of bugs as
    we never documented and truly fully support it (eg. collect_set was failing
    over jdbc). `collection_count` and `collection_avg` are changed to also work
    with arrays instead of sets.

commit 95bdd4c2cefa25305b56a65d2a775ba9c8c59873
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Fri Jun 7 17:20:47 2019 +0200

    Fix cast corner case in analyzed column definition.
    
    It was not possible to create a cast expression for analysed column
    definition and generated expression in cases where a column definition
    has a predefined data type of the array type and generated expression.
    The reason was the negligence of the column definition’s array collection
    type when checking whether generated expression type is convertible to
    the predefined type.

commit a261f8bc6711294782979f22ba89b611583544ff
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Jun 5 16:10:16 2019 +0200

    Increase test assertion timeout for ssl reload tests.

commit ef839d88bee1358cdb97f248d1b5270adf8687ce
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Thu Jun 6 15:58:32 2019 +0200

    Fix a bug in creating collector ctx for group by a single text column.

commit 0334f5f223a4474162014c63586e7c8350814926
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 6 14:31:58 2019 +0200

    Improve error message if a column is used as arg to table function
    
    `FieldProvider.UNSUPPORTED` has a better default error message.

commit 7e7f3ea59e51b232768b2c350b9a17a3e601d961
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Jun 6 11:45:24 2019 +0100

    When computing the start of a CurrentRow -> UF frame find the first peer in the list.
    
    Instead of requiring the first peer index in the api, which was used only for
    Current Row -> Unbounded Following frames, look it up in the list of rows.

commit 91d375b9faff1868e01c5f1e5828beb33167f9c1
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Jun 6 10:54:32 2019 +0100

    Added findFirstNonPeer and arePeers to Lists2 and use them in FrameBound
    
    Previously we went the way of having the FrameBound receiving higher order
    functions that determined if rows are peers and found the first non peer.
    This commit moves this logic in the FrameBound which will now receive a
    Comparator and will call into Lists2 to process the peers in order to yield
    the frame boundaries.

commit a0e0dd141cebf0b96209cf3b31948aa315d36729
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Jun 6 10:50:23 2019 +0100

    Move Lists2 to the shared module

commit b927356dc579e3a479723db9514f659263b99b89
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Jun 5 19:48:26 2019 +0100

    Extract the frame bounds end/start processing in every FrameBound type.

commit e6299384e821b55ea915dbf22afcf51d69334779
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Jun 4 13:56:51 2019 +0100

    Convert the NthValue itest over UNBOUNDED FOLLOWING frame to a unit test.

commit e4f8896cb4490651908a134e0d4262fd87e1fe47
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Jun 4 13:35:49 2019 +0100

    Document the unbounded following window frame.

commit e80ee6cf1427508083184185ed8e997ea9bcb3a7
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Jun 4 13:35:28 2019 +0100

    Default the end frame bound to CURRENT ROW if not specified.

commit 8fe0c906458f877f13348d9d7b31592fc66b4e38
Author: Andrei Dan <andrei@crate.io>
Date:   Fri May 31 19:37:02 2019 +0100

    Add support for executing aggregations in a remove cumulative way.

commit f26d3fb4b323df349832212421bf3eb3c70f852f
Author: Andrei Dan <andrei@crate.io>
Date:   Thu May 30 22:59:10 2019 +0100

    Compute windows for CURRENT ROW -> UNBOUNDED FOLLOWING and naive execution.

commit bf28a18159a59e8112236c6896db9b1400b08fb3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 5 23:30:44 2019 +0200

    Make ram accounting more correct in GroupBySingleNumberCollector
    
    The Groups overhead should be accounted for each time the supplier is
    used, not just when it is initially retrieved.
    
    This is currently a non-issue as the supplier is only used once.

commit ed0529c2ddae21d7873a2ca925e7d875ab36e447
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 5 22:54:53 2019 +0200

    Use GroupBySingleNumberCollector also for timestamp types

commit 90b035e9c226315c86929ed2066e6256c9eb8bc2
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Jun 5 22:18:46 2019 +0200

    Support date_format on timestamp without time zone.

commit 3847100d6ab63264e7231f8d45566b1b87cd05e3
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Jun 5 13:34:14 2019 +0200

    Allow cast between timestamp data types.

commit 81c519fe0c476e774950b29f079d00244aebcf02
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 4 22:37:46 2019 +0200

    Add eclipse gradle plugin
    
    Allows to use https://github.com/eclipse/eclipse.jdt.ls

commit 909bb8762033fb0707ef67721c775762de6c380f
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Jun 4 16:35:01 2019 +0200

    Add the `pg_get_userbyid` scalar function.

commit 7d734c0442a7381c64aa7faf0e39c61e13561c44
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 5 00:12:30 2019 +0200

    Support date_trunc on timestamp without time zone

commit 1eafe0019e8773e5d03345ef76150f55757e06d5
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue May 28 14:29:56 2019 +0200

    Reload SSL context on keystore files change.

commit 3b6be27be11485686d03eff5bd0f1fe53a95a642
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 3 11:03:32 2019 +0200

    Make "Cannot resolve field references" error msg more user friendly

commit 5cbe87880ccb303a23bb35fd6a272486724fbcf4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 3 10:34:55 2019 +0200

    Include instructions to set max_map_count in bootstrap check error message

commit 513bd251955a2852dfd039638398190085e70e52
Author: Savvas Makalias <savvas@crate.io>
Date:   Fri May 31 15:15:18 2019 +0300

    Fix NullPointerException when neither the data type nor the generated expression were provided at 'alter table add column' statement

commit 2d0da779fbfd3bac399508c8f366598c2618c1fe
Author: Savvas Makalias <savvas@crate.io>
Date:   Fri May 31 12:39:24 2019 +0300

    Fix NullPointerException when neither the data type nor the generated expression was provided at 'create table' column definition

commit 420f35d635bd08eedd346592709788569508b16e
Author: Andrei Dan <andrei@crate.io>
Date:   Wed May 29 15:51:51 2019 +0100

    Push Filter below WindowAgg if on partition keys only.

commit a9ab29228de1492e9deedac7a50a83b78dec3468
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 29 10:03:03 2019 +0200

    Support caching of GenericFunctionQuery

commit 27ff50578dc8a01a454f62309e601cc401c13950
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon May 27 16:23:11 2019 +0200

    Remove deprecated metrics from sys.nodes

commit 1d77698b3627ab44d7c70b9f228ecaf90e1723ad
Author: Savvas Makalias <savvas@crate.io>
Date:   Wed May 29 14:48:54 2019 +0300

    Allow 'current_schema()' function resolution when the 'pg_catalog' schema prefix is included

commit 4382ca60508d2e00230060a509d5a3f060ff042d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 28 16:48:23 2019 +0200

    Update jmh to 1.21

commit 0da32418e0d5d61d3e1fa699a27fa8d5ded2e133
Author: Andrei Dan <andrei@crate.io>
Date:   Tue May 28 15:30:59 2019 +0100

    Add testMappingTimeout disruption test.

commit 880278a981149430ebb53dae4326d44eea04ad8e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 28 11:46:31 2019 +0200

    By-pass using a CompositeBatchIterator if there is 1 individual iterator

commit b1148b75d4198abb05c011c6e3fa3615c1d55150
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 28 11:45:46 2019 +0200

    Share some common logic between Async/Seq CompositeBatchIterator

commit 040b4c79a83a883ceba2572c895fd0207bf309bc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 27 16:15:06 2019 +0200

    Remove the `type` from `Get`
    
    We effectively only have 1 type that is always `default`.

commit c604c0848e846d93785aadfb68c0857b096a696c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 27 15:53:07 2019 +0200

    Make attributes in ParsedDocument final

commit c45156865c01594ecfcd4986cb2b55abb5198972
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 27 15:43:58 2019 +0200

    Remove DocumentMapperForType
    
    The `Mapping` was always `null`, so we can get rid of the
    `DocumentMapperForType` and use the `DocumentMapper` directly.

commit 0a5c628d742a4a5fb5643f3c667eaf158d60a26c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 27 15:40:18 2019 +0200

    Remove unused appliedOperations counter from TranslogHandler

commit 72eb382f2cd6f3d61503d2d151d2abb04dd707f9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 27 15:11:52 2019 +0200

    Remove the type from SourceToParse
    
    We always use `default` as type.
    
    This is a step towards removing the multi-type support internally.

commit 6b6bdc3aadc652ae731d75ee2d6ba88a585e9de2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 27 14:34:10 2019 +0200

    Remove defaultMappingSource
    
    We're not creating new mapping types dynamically and the
    defaultMappingSource stayed always the same (empty), so it can be
    removed.

commit bf4e2f50ea10fafac744e5a125ceaaa096740ce0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 27 14:01:01 2019 +0200

    Remove dynamic type related logic from MapperService
    
    We are always using the same type and never update the default template
    for new types.

commit 9b7235b0ba4acf0ac81c97aa1266c819a195bed9
Author: Savvas Makalias <savvas@crate.io>
Date:   Tue May 28 10:14:51 2019 +0300

    Add checkstyle ConstantName rule

commit 907e57db93e9f89dad58eca2bc04f296bb663184
Author: Savvas Makalias <savvas@crate.io>
Date:   Tue May 28 10:14:01 2019 +0300

    Use uppercase for constant field names

commit 14b915225b7b8f0666d07af24a9086759d7cd365
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 27 16:39:51 2019 +0200

    Make `testSelectToRoutedRequestByPlanner` faster
    
    The condition that the columns must be `message, pk_col` got invalid due
    to our change to keep the columns in the order as they are in the CREATE
    TABLE statement.
    
    Due to that the `awaitBusy` block never succeeded and also didn't cause a
    test failure due to the condition not being an assertion.

commit fa0fd609986a2eaa26db28ea200d6fbb419a7ed4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 27 16:34:17 2019 +0200

    Reduce `prepareCreate` usages in tests

commit f31122f8c4688fc54cc80ea12e54b4ae375186b1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 27 12:23:35 2019 +0200

    Remove deprecation logging from ByteSizeValue

commit 7ec125eefd47241a28ba28c5f1ff27a1caf2fba2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 27 12:13:54 2019 +0200

    Remove unused parts from MultiMatchQueryBuilder
    
    The only part we used was the `Type` - which this commit moves to a
    top-level enum which allows us to remove all of MultiMatchQueryBuilder.

commit 35081e5bfc22bb71931a46e04a218a078d4bc29c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 27 11:54:57 2019 +0200

    Remove default number of shard change deprecation logging
    
    We're not changing the default again and we're making sure that the
    number of shards is pre-defined in our CREATE TABLE routines.

commit 14f01ea2b67201dd5c21931a699fd2642f1ec93f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 27 11:46:22 2019 +0200

    Remove deprecation logging from TypeParsers
    
    We're not using these options when we generate the field mappings.

commit 10fd7c679b658d1ecde747c6ca7bb7c8ccb52875
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 27 11:39:35 2019 +0200

    Remove deprecation logging for negative node_left.delayed_timeout

commit 37b24445a44b00d8c6078e3ff03a3a4b9eb4d499
Author: Savvas Makalias <savvas@crate.io>
Date:   Mon May 27 15:44:47 2019 +0300

    Remove SecureSettings

commit f344bee9a698981adb7d2d0a927219ce86542d3b
Author: Savvas Makalias <savvas@crate.io>
Date:   Mon May 27 14:01:28 2019 +0300

    Remove 'SecureSetting.InsecureStringSetting'

commit e49e083724732a4028bcfa66ce1082f407d74752
Author: Savvas Makalias <savvas@crate.io>
Date:   Mon May 27 14:00:20 2019 +0300

    Change remaining insecure settings to masked Settings

commit a813ce0ee57cbf46fea90ebfd02e16c42fd30323
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Fri May 24 14:20:12 2019 +0200

    Use the ServiceLoader approach to integrate SslContext.
    
    The SslContext is loaded to HTTP and PostgreSQL protocols related
    modules via SslContextProvider using the ServiceLoader approach.

commit 883391a5fb0e83818fb5ee178352fec0b288699d
Author: Savvas Makalias <savvas@crate.io>
Date:   Mon May 27 10:22:11 2019 +0300

    Change S3 repository insecure settings to masked Settings

commit 4fba12ff1b4f39abe8d7508ddafa578f30f31bd9
Author: Savvas Makalias <savvas@crate.io>
Date:   Fri May 24 15:55:27 2019 +0300

    Change Azure repository insecure settings to masked Settings

commit cdc65ed8a53d0f085d371d235badedb9d0bb345f
Author: Savvas Makalias <savvas@crate.io>
Date:   Fri May 24 15:54:30 2019 +0300

    Allow setting masking when querying 'sys.repositories'

commit 0825fcea6360a054e491f71322078515f3542e28
Author: Savvas Makalias <savvas@crate.io>
Date:   Thu May 23 16:58:32 2019 +0300

    Introduce 'Setting.Property.Masked' for masking sensitive information

commit 6bea6d70cf92b4195a09264e1a2fadd646a08f6f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 24 19:01:30 2019 +0200

    Enable gradle build cache

commit 29012e8a8a34f577d6d300b25132bc366b0d5b15
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 24 16:47:32 2019 +0200

    Extract test logger from build.gradle

commit 98c915aef9124e10b0853ee4db19c8c0aa0d5133
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 24 15:44:30 2019 +0200

    gradle: Remove testLogging.exceptionFormat
    
    We use a custom test logger that already outputs the full stacktrace on
    a failure.

commit 75762912f1971afde2440a6446ee1bb8baf24896
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 24 09:58:58 2019 +0200

    Take awareness attributes into consideration for pk lookups
    
    This implies that PK lookups will now also hit replica shards.
    Given that writes on replicas are synchronous this doesn't conflict with
    the real-time (no refresh required) gurantee of PK lookups.

commit 1dfcb0c80927fab640dda2b434c565ffee97c095
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Fri May 24 17:25:19 2019 +0200

    Remove obsolete MQTT artifacts.

commit a9dc8fa2bdf68138d2c44e300dc595a97ad6314c
Author: kevin quarshie <kevin@crate.io>
Date:   Wed May 22 16:52:13 2019 +0200

    Change headings to sentence case
    
    Co-Authored-By: Naomi Slater <nslater@tumbolia.org>

commit 8e804410f03e49b200210b5047bd216ccb421443
Author: Savvas Makalias <savvas@crate.io>
Date:   Mon May 20 10:43:24 2019 +0300

    Add settings-related unit tests

commit ac3f8403b519066610bb4eb939734ee1ffd479f0
Author: Sebastian Utz <su@rtme.net>
Date:   Fri May 24 11:48:43 2019 +0200

    Mute coordinator test related to #41967
    
    See https://github.com/elastic/elasticsearch/issues/41967.

commit ec752e7b2df894af1552c24c92ab0c79d625bcb6
Author: Sebastian Utz <su@rtme.net>
Date:   Fri May 24 10:06:30 2019 +0200

    Fixes CoordinatorTests suite-timeout/deadlock.
    
    Always use a new ClusterSettings instance on node creation instead of
    a static one to avoid deadlocks on registering settings updater.

commit a23d96e7ffc758d1f561c3125484e7c24c0eb36c
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Thu May 23 15:05:45 2019 +0200

    Drop support for s3 repository client settings in crate.yml.
    
    The client settings can be provided only as parameters
    of the `CREATE REPOSITORY` statement. The reason for
    this change is to prevent exposing client credentials in
    plain text by setting access and secret key in crate.yml.

commit fef153289190fc1d7b5fb8e23a6da64bd0fc64ac
Author: Sebastian Utz <su@rtme.net>
Date:   Thu May 23 12:17:18 2019 +0200

    Adds note to CHANGES about fixed resilience issues

commit 42ba9883a42cdbc46cc052ea723f9da35a49b6cd
Author: Sebastian Utz <su@rtme.net>
Date:   Thu May 23 11:51:47 2019 +0200

    Minor layout changes of zen2 related upgrade notes
    
    Use a table for documenting changed settings.

commit 0dc2c614c742d31221538632f763380b6464775a
Author: Sebastian Utz <su@rtme.net>
Date:   Wed May 22 11:45:59 2019 +0200

    Adds more context to discovery related upgrade notes.

commit ef85d2d9c9024461ad2efe15fcee48b878587a06
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 23 15:46:39 2019 +0200

    Get rid of AbstractKeyStoreSettings abstraction in SslConfiguration
    
    In order to understand how `TrustStoreSettings` work one had to jump
    back and forth between `AbstractKeyStoreSettings` and
    `TrustStoreSettings´.
    
    There was also a tight coupling between `Setting` definitions and the
    key store abstractions, which was unnecessary and made testing a bit
    more troublesome.
    
    `exportRootCertificates` did two things: It extracted the certificates
    *and* concatenated them with other certificates.
    
    This PR tries to resolve these problems.

commit db7fcf287fb7b80de444fce8026b05f3dd7c3cea
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 23 16:31:42 2019 +0200

    Make SslConfigurationTest runnable in intellij with jdk >= 11

commit 0159c0fe3e6a1fcc8033d9460d1c129d7b330863
Author: Sebastian Utz <su@rtme.net>
Date:   Wed May 15 15:13:53 2019 +0200

    Enables coordinator tests as no flakiness was spotted recently

commit ea0a6d8fa23cdf01629ba6e247084bbebde83e9c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 22 19:09:02 2019 +0200

    Allow using SET GLOBAL as user with AL privileges

commit 94d1691f6f2f5ffd13ba27c013eeeb10fad0d162
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed May 22 18:41:21 2019 +0200

    Fetch sys.jobs and sys.jobs_log rows that belong to current user.
    
    This doesn't apply to superusers.

commit 435a23a58827d2f0a10781e6b2ea2c681d045eec
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 23 14:03:36 2019 +0200

    Remove LGTM requirement for mergify merge
    
    - Due to the switch to the checks API on LGTM the `No code changes
    detected` state is no longer detected by mergify as succeeding, which
    would block it from merging.
    
    - LGTM doesn't report alert introductions as error, the only scenario
    where it fails is if it fails to build.
    
    - It sometimes takes a long time (longer than Azure pipelines)
    
    We should still get the analysis results and can look at it
    occasionally.

commit 79c37585228af16d3252034319f817eccabce841
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 23 13:08:34 2019 +0200

    Reflect 3.3.3 release

commit c219acf7f762b5621ada8bba07b9c310d3885da9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 22 15:10:33 2019 +0200

    Add a new privilege type 'AL' that allows to manage users

commit bc3ce8c1221b56512f095ee9ccb19cfd75c1199d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 22 19:11:26 2019 +0200

    Remove SET SESSION mention from DQL privilege docs
    
    Using SET SESSION doesn't require any privileges at all.

commit 5be9318a3707585696515943e018a71eb2861846
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed May 22 11:57:11 2019 +0200

    Provide azure repo client settings only via `create repo` parameters.

commit 8779096263b6594e8c6b2abd93ba41e69a80d575
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 22 14:35:04 2019 +0200

    Merge access control components into 1 class and remove from SessionContext
    
    `StatementAuthorizedValidator` and `ExceptionAuthorizedValidator` seemed
    a bit mouthful and not communicating their purpose ideally.
    
    This introduces a `AccessControl` interface that encapsulates the
    functionality.

commit ed22a320baaa99ffc593577391ed56c333f0d047
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 22 09:50:44 2019 +0200

    Use env variables for JDK definitions in Jenkinsfile

commit f19129e23b931982be740685c00508d5fce52ecf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 21 16:57:14 2019 +0200

    Run itests also with adopt jdk 12

commit 86fea10b9b7e65d0a260725e9bc1f004ade38eda
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 21 16:26:16 2019 +0200

    Jenkins: Utilize jabba to select jdks used in tests

commit 1404cf0a6fd69cf5f127984930abaef0924122b7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 21 23:39:48 2019 +0200

    Change Fields.add API to enforce key matching Field.path
    
    It shouldn't be possible to add a field under a different path than
    `Field.path`.

commit 2be0b2ab87315ddfc5f96d9945c9641f42aa3c99
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 21 23:32:21 2019 +0200

    Use regular HashSet for pendingExecutions in Session
    
    The portals don't implement equals/hashCode, so they default to identity
    equals anyway.

commit 0cfa7ef71b369e40998fbe230115c27f475e3d2e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 21 23:18:36 2019 +0200

    Avoid duplicate ReferenceCounted release
    
    `request.release()` releases the content as well. This generated an
    exception which was swallowed.
    
    Spotted the exception generation in profiling traces.

commit 0e43064908c8698ca63a7efbe981558bd3cf52e0
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue May 21 11:31:58 2019 +0200

    Remove unsued code that supports multiple clients in Azure repo.

commit 57897af7f5d1ed966004c9e94882b7d10342d086
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue May 21 15:10:57 2019 +0200

    Expose only supported azure repo statements params.
    
    Currently the azure storage client specific settings
    can be set only via crate.yaml, and are not considered
    if passed as parameters of the `create repository` statement.
    
    This commit limits `create repository` statement parameters
    to the repository specific once and reuses the setting defined
    in AzureRepository instead of redefining them in RepositorySettingsModule.

commit a76455914a2b1d7c88bd07888ec8dcdaceb86931
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 21 15:41:46 2019 +0200

    Document total circuit breaker limit

commit 46eee11bccec15aaf7fe84cc32a003bb35282fe7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 21 11:29:12 2019 +0200

    Migrate ShardId to Writable

commit db291e04fb5cab76d7c7b3322f81c6f1daab2495
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 21 11:11:42 2019 +0200

    Remove unused isRetry flag from ShardUpsertRequest

commit baa59b4def7a8aa22d9931597a7c5fc96f5c61cd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 21 10:54:08 2019 +0200

    Have circuit breaker succeed on unknown mem usage
    
    Port of https://github.com/elastic/elasticsearch/commit/06c0055c0f4756bf7b3db84c9e476e7a20a9758d

commit 44e6b78b1cc2383920f596e13875d4fd0ca081ae
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 21 10:50:31 2019 +0200

    Circuit-break based on real memory usage
    
    Port of https://github.com/elastic/elasticsearch/pull/31767/commits/80644aadd64656ee10e867c5938afc3f7d4c2c4a

commit dc624fb607b3d383e73ee50510f28a3d219ef668
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 21 10:18:37 2019 +0200

    Remove some unused declarations

commit 9346fabf9acd4632c0809af96bc74ad021a32989
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 21 09:58:15 2019 +0200

    Remove unnecessary null checks from LogicalPlanner
    
    `normalizeAndPlan` never returns null

commit 16c5d37db87870e5cb9e72f9ff7dd5db8a84881e
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon May 20 15:04:35 2019 +0200

    Change azure repository client affix settings to normal settings.

commit 771890ffb79ddcb1af7c5c06632e4043ef580d61
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 20 16:21:55 2019 +0200

    Fix jobs logs expiration interference with cluster coordination
    
    If the `jobs_log_expiration` setting was set the cluster discovery
    didn't work as the scheduled task which cleans up entries from the jobs
    log conflicted with the cluster coordination tasks as they were using
    the same scheduler.
    
    This adds a dedicated scheduler to the `JobsLogService` to avoid any
    interference.

commit 48725062c7bc3fc53198bedfb67552ec3649c93b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 17 16:42:59 2019 +0200

    Update checkstyle to 8.16

commit 0ebab9f5f2eb628e3c78c958aeca97f65226e076
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 17 17:21:09 2019 +0200

    Add a rule to move filters beneath GROUP BY
    
    Views (and WITH clauses in the future) make simple optimizations like
    these more important as it is less likely for users to be able to
    manually optimize it.

commit 4bc66ab1ac70e828948fad27a77fe10265b245b2
Author: Sebastian Utz <su@rtme.net>
Date:   Mon May 20 09:13:01 2019 +0200

    Fix startup script conditional for older shells.
    
    Follow up of https://github.com/crate/crate/commit/e544a27ddd2997172c31c650bce899fa6b742a95.

commit 0c18a04873b0a41eb12d069ceaf23a012d58762e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 16 17:39:21 2019 +0200

    Merge OutputName and ColumnIdent

commit f2fef629880adbcf1b88065446e748430cfb3274
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 17 10:57:50 2019 +0200

    Resolve parameters in view definitions when the view is created
    
    Creating a view like
    
        CREATE VIEW v1 AS SELECT ?
    
    Didn't resolve the parameter, which broke queries on the view and the
    `information_schema.views` table.

commit 809f85db924fddf319afb6feb9e287892d02874a
Author: Andrei Dan <andrei@crate.io>
Date:   Fri May 17 10:41:48 2019 +0100

    Changed linearizability checker to allow collecting history concurrently.
    
    Partial backport of https://github.com/elastic/elasticsearch/commit/55c36540efd01d7af2d60131f90db3bceb353006
    
    Translation of ConcurrentSeqNoVersioningIT will come in a future commit.

commit e544a27ddd2997172c31c650bce899fa6b742a95
Author: Andrei Dan <andrei@crate.io>
Date:   Thu May 16 15:18:10 2019 +0100

    Build the crate classpath manually
    
    Fixes an issue where the classpath is not correctly built when running on
    java 8 and a javaagent is specified (namely an empty classpath entry `::`
    is included in the classpath).

commit c19414a938f17c3b4628ef00c16076357304dbbd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 16 15:14:59 2019 +0200

    Avoid using raw Setting objects

commit 725508c9ab0e27ed16e25e09b5201086f2345835
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 15 10:44:24 2019 +0200

    Update netty to 4.1.36

commit 1e71a86606a56ad228397376929ed4801e0c8615
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 15 17:30:54 2019 +0200

    Rename validate to isValid in SysCheck
    
    To clarify whether `true` is good or bad.

commit 1e4498bc5b693534ba52fbbd41d992470d524259
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 15 17:04:51 2019 +0200

    Utilize `getLeastDiskEstimate` in DiskWatermarkNodesSysCheck

commit a4a302e512c66e03d98d5ae70964e34effb8b6f3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 15 16:58:22 2019 +0200

    Remove unused xcontent code from FsInfo

commit 67e89a20cd11f07642661946c0b3a2daf5bfd775
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 16 10:24:59 2019 +0200

    Fix precedence of double colon cast operator
    
    `x::double / y::double` was processed like `(x::double / y)::double`

commit 74624570ae60295db6c3a964191206aabf6f9c6f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 15 17:12:33 2019 +0200

    Fix watermark sys checks
    
    All watermark sys node checks failed if
    `cluster.routing.allocation.disk.threshold_enabled` was set to false.

commit db94f55039ea38477e60ab85d5eef4b0bc428b92
Author: Andrei Dan <andrei@crate.io>
Date:   Wed May 15 08:24:19 2019 +0100

    Annotate the disruption tests as slow (disabled by default)

commit 98c99ea35c77c7a4714038f46c70fcab0d54bd45
Author: Andrei Dan <andrei@crate.io>
Date:   Tue May 14 13:06:26 2019 +0100

    Fixed SequenceConsistencyIT by executing the final read against the master.
    
    Arghhhh

commit 9d9cfc248ec7fb6d782cb469bbe943ec9785f9d8
Author: Andrei Dan <andrei@crate.io>
Date:   Tue May 14 09:59:53 2019 +0100

    SequenceConsistencyIT extends AbstractDisruptionTestCase

commit 4cd374794a05fd88445bc64f1e926a353a8aeaf9
Author: Andrei Dan <andrei@crate.io>
Date:   Tue May 14 09:59:31 2019 +0100

    Add Cluster, Discovery and MAster disruption integration tests.

commit ab74819b93446dc3d0216bc28dc7d257bec55bd6
Author: Andrei Dan <andrei@crate.io>
Date:   Tue May 14 09:59:01 2019 +0100

    Reduce the tests jvm heap size to 1g

commit ab75adbfa2c94406cf37ee37e48e0902872f1da3
Author: Savvas Makalias <savvas@crate.io>
Date:   Tue May 14 21:37:40 2019 +0300

    Cleanup repository setting definitions used for validation at 'Create Repository' statements - s3

commit 41c09b9eb5784cd4e65e2688dc2b88769e6bedcb
Author: Savvas Makalias <savvas@crate.io>
Date:   Tue May 14 21:30:33 2019 +0300

    Cleanup repository setting definitions used for validation at 'Create Repository' statements - url

commit ebfb9571056aa8e82467d57494433139078d297f
Author: Savvas Makalias <savvas@crate.io>
Date:   Tue May 14 21:28:53 2019 +0300

    Cleanup repository setting definitions used for validation at 'Create Repository' statements - fs

commit 5bdf60929b38b931f3adc1456a20ee20fbb4a094
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed May 15 17:27:39 2019 +0200

    Remove KeyStoreWrapper, SecureStringSetting, and SecureFileSetting.
    
    Classes are not used.

commit 1a09c8c5d0b5ea4ee81230b0abc2e5d93c2f2cf0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 14 11:46:14 2019 +0200

    Require only a DocTableRelation in the Get operator
    
    Fixes a unchecked warning

commit 4159ba3d2fce79af900544481d50a89dd03a37a5
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue May 14 15:18:50 2019 +0200

    Remove policy files from plugin modules.
    
    The policy files are not used, such as we do
    not utilize JVM Security Manager in CrateDB.

commit fbcfef7abccf2b3d8867ad0f1c419ce321d19137
Author: Savvas Makalias <savvas@crate.io>
Date:   Tue May 14 11:29:08 2019 +0300

    Remove unused HDFS repository setting 'concurrent_streams'

commit b08d846c867dfc269e1435ba920fa884a1ea4310
Author: Sebastian Utz <su@rtme.net>
Date:   Wed May 15 10:38:40 2019 +0200

    Ignore new trial license if a license exists.
    
    Follow up of https://github.com/crate/crate/commit/0df95b92f89041a02ebb8b230afe3813b3c816b0.
    Trial licenses are always self-generated by the cluster and thus should
    not result in an error/exception if another license already exist.

commit 06b833498349bebca3c6fc8ee0963d4f3edc6059
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 13 13:35:34 2019 +0200

    Clarify the merge to handler scenario in FetchOrEval

commit 527e78f6dd7f0d30a3d116a7f507eb066cf5146c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 13 13:24:22 2019 +0200

    Keep data distributed for ordering
    
    If there is no limit or offset it is not necessary to merge the data to
    a single node to sort it.
    
    To sort data it is not necessary to merge the data

commit 454d30430342f2313f958bab75cc4bec555213a7
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Fri May 10 15:52:27 2019 +0200

    Add the Azure Storage repository plugin.

commit 9387e969a8b33aae3de4db4c38d5e617c8d96913
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 14 13:58:37 2019 +0200

    Reject port ranges in `discovery.seed_hosts`
    
    Backport of https://github.com/elastic/elasticsearch/pull/41905.

commit 2578d2d36cc6541a9d8d16951f7019cb7c466307
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 14 14:45:58 2019 +0200

    Remove index() from Field
    
    To favour `pointer`
    
    - In two cases `pointer()` can be used instead
    - One case was dead code and shouldn't be supported
    - One case can be changed easily

commit 0b86eead99ae0b0a75f8d3611fbf6d5f485f7029
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 14 15:21:19 2019 +0200

    Handle serialization exceptions during publication
    
    Backport of https://github.com/elastic/elasticsearch/pull/41781.

commit bb4dd09cd0e62f3a65fd2aab1454e275f73ca066
Author: kevin <kevin@crate.io>
Date:   Thu May 9 18:16:57 2019 +0200

    Add note about SET SESSION privilege limitation
    
    Co-Authored-By: Naomi Slater <nslater@tumbolia.org>

commit 6f47ea5e721ae48fdbcb78ad4939157b103be804
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 10 16:27:38 2019 +0200

    Add a ForwardingLogicalPlan to reduce some boiler plate code

commit 3e785d837adc3ffb29cd31a4552f180cec59a53c
Author: Sebastian Utz <su@rtme.net>
Date:   Mon May 13 10:13:06 2019 +0200

    Publish test cluster state while SQL executor building
    
    By starting the `Schemas` service immediately inside the
    SQLExecutor.Builder, it will listen to cluster state updates and thus
    will now fail with the same behaviour like real clusters (e.g. creating
    duplicate tables will fail).

commit c1dcb860fbfead68d3cf0f9ce708ed9ce60b002a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 9 10:26:34 2019 +0200

    Update gradle to 5.4.1

commit 52844afcef9b92531a6e2186deea97939894ec70
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue May 14 09:22:01 2019 +0200

    Remove policy files from es upstream code.
    
    The policy files are not used, such as we do not
    utilize JVM Security Manager in CrateDB.

commit d92050e5b792e161019ee457ef207512126b87e4
Author: Sebastian Utz <su@rtme.net>
Date:   Wed May 8 11:57:06 2019 +0200

    Add zen2/discovery related upgrade notes.
    
    Beside some removed and renamed discovery settings, the new zen2
    implementation requires some additional setting
    `cluster.initial_master_nodes` to be set on update.

commit 35865df9683d7337b26375032a0641357a6e9d6b
Author: Sebastian Utz <su@rtme.net>
Date:   Mon May 13 14:24:33 2019 +0200

    Create default template in a dedicated service
    
    The Schemas class is heavily used in unit tests where most test rely on
    synchronous cluster state publishing. The default template state
    change was triggered asynchronously by the Schemas event listeners
    which may caused an existing (synchronous) state change to be
    overwritten resulting in test failures.

commit 086de62d17d3b8da325064b2aa852fac77de285f
Author: Savvas Makalias <savvas@crate.io>
Date:   Mon May 13 09:40:48 2019 +0300

    Change S3ClientSettings Affix Settings to normal Setting

commit e69d4847994bc3485c820ef16533f851dffcac40
Author: Andrei Dan <andrei@crate.io>
Date:   Fri May 10 15:14:57 2019 +0100

    Testing: Add support for execute on a specific node

commit 04555f27853474481de5e23447942b2b750fde35
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Apr 16 21:29:02 2019 +0100

    Test sequence versioning under network partition.
    
    Speed up the possible delayed recovery of unassigned shards.
    
    Move the seq consistency test to seqno package
    
    Fix the flakiness that was caused by the primary failing too fast.

commit f0212298bde0bc6c5a8e5711a9da5c9acd4b8aef
Author: Andrei Dan <andrei@crate.io>
Date:   Mon May 13 08:39:11 2019 +0100

    Fix timeout due to not enough replicas started (as it's just one data node when creating the table)

commit b97fbba48326d5f0bebdfcfd7d9a28221648523e
Author: Andrei Dan <andrei@crate.io>
Date:   Thu May 9 11:24:41 2019 +0100

    Add the PrimaryAllocationIT disruption IT

commit 8c44eac3845779c0d7aa1e6f1c2590cf1a34285e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat May 4 16:49:25 2019 +0200

    Add a rule to move filters beneath UNION

commit a00fd338d20c8e9fed934f6c4cc02707105f2ff0
Author: Sebastian Utz <su@rtme.net>
Date:   Fri May 10 15:54:39 2019 +0200

    Support host names as `initial_master_nodes` entries.
    
    Adds support for using the `hostname` of each node in addition to
    `node.name` or `<IP-Address>`, so same values used for
    `discovery.seed_hosts` can be used.

commit 8377c94d67489d3e84c0a7e4ff71bdc713aca9ea
Author: Sebastian Utz <su@rtme.net>
Date:   Fri May 10 14:39:39 2019 +0200

    Fix flaky testWhereRefEqNullWithDifferentTypes.
    
    Reset cluster state before re-creating a possible existing table,
    this ensures the test is working on the correct table definition.

commit 741a047efbfe0519fd9deb7ba449a6618cb6fed1
Author: Sebastian Utz <su@rtme.net>
Date:   Fri May 10 14:05:20 2019 +0200

    Fix flaky testArrayLengthWithAllSupportedTypes.
    
    Reset cluster state before re-creating a possible existing table,
    this ensures the test is working on the correct table definition.

commit cc473b7e9f4b401993ac31846dad8a2a107b1d38
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 10 11:54:39 2019 +0200

    Tests: Use withFeature to create FeatureMatchers

commit c8358f5e8648086363c37ef9a59c6e2b2858a64d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 9 17:31:53 2019 +0200

    Fix incorrent field de-duplication
    
    In a scenario like so:
    
        create table t1 (x int);
        create table t2 (x int);
        insert into t1 (x) values (1), (2), (3);
        insert into t2 (x) values (2), (3), (4);
        refresh table t1, t2;
        select * from (select * from t1 left join t2 on t1.x = t2.x) tjoin;
    
    The query returned the value for `t1.x` twice because it got
    de-duplicated due to the fields looking identical. Both had
    `relation=tjoin` and `path=x`.
    
    To address this, this changes the Field to contain the symbol the field
    is pointing to. This way it includes a reference to the underlying
    `t1.x` or `t2.x` `Reference` symbols and it correctly detects that the
    fields on the upper level are different.
    
    This should also make it easier to later on de-duplicate `fields()` and
    `outputs()` on `AnalyzedRelation`

commit 7060a54b557c03de3ce57fa0f0f946eadb24e28b
Author: Savvas Makalias <savvas@crate.io>
Date:   Wed May 8 13:38:25 2019 +0300

    Unify blob store compress setting
    
    This bundles relevant es upstream commits:
    Blob store compression fix (#39073)
    Unify blob store compress setting (#39346)
    Blob Store compress default to true (#40033)
    Simplify BlobStoreRepository Constructor (#40653)

commit 0df95b92f89041a02ebb8b230afe3813b3c816b0
Author: Sebastian Utz <su@rtme.net>
Date:   Thu May 9 16:18:22 2019 +0200

    Ensure a trial license won’t override any existing license
    
    This fixes a race condition which could occur when a `SET LICENSE` stmt
    is issued while a trial license is registered concurrently.

commit 5cfc3efcb4a3523ff1a414f3729a2f7b2d0f6742
Author: Sebastian Utz <su@rtme.net>
Date:   Fri May 10 09:20:17 2019 +0200

    Disables the coordinator unit tests as they introduces flakiness.

commit 218547b16ee35dc45f4f54d12045d870a4059adc
Author: Andrei Dan <andrei@crate.io>
Date:   Wed May 8 13:09:38 2019 +0100

    Add PrimaryTermsTest and removes fake allocation id after recovery is done
    
    Backports https://github.com/elastic/elasticsearch/commit/f789d49fb35f88fae7d2a966593fa1a34cdbaa54

commit f30cbb42ae38972644d5746eef180c0aeae5e257
Author: Andrei Dan <andrei@crate.io>
Date:   Fri May 3 11:41:53 2019 +0100

    Add documentation for seed based discovery.

commit c82138f9f94ceef83f6cdf7dc6fe18a1e5cfea95
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Apr 10 10:54:26 2019 +0200

    Integrate Zen2 related code from ES master
    
    This integrated the new Zen2 discovery coordination which supersedes Zen1
    (removed all Zen1 code).
    All code is taken from ES master commit 86e4b04301f3ceda0218a271c908fe5123ad7d6f.
    Beside Zen2 related code, some improvements related to circuitbreaker,
    task api, test setup, node bootstrap and big array handling were taken over.
    
    Remove minMasterNodes sys check
    
    Don’t use MockHttpTransport on blob, http and users tests.
    
    These test suites require a real http transport.

commit 1b3de2388592b984284424921172ed6cee7c585a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 6 17:06:06 2019 +0200

    Remove the redundant `isNoOuterJoin` property

commit 359d0e8320100ad22c1c1b8f5a928f4f30de5a80
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 8 16:37:58 2019 +0200

    Make the attributes in QuerySpec final
    
    To make sure we don't start mutating the QuerySpec again.
    
    We could even remove it completely if we inlined all attributes into the
    corresponding AnalyzedRelation instances, but before looking into that,
    we could first look into merging some of the instances as some have a
    similar shape.

commit c8760d1cb542907d9dea5b1e96d634cdfbc8ad8f
Author: Savvas Makalias <savvas@crate.io>
Date:   Wed May 8 13:08:20 2019 +0300

    Cleaned up repository loggers
    
    Each repo should use its own logger.
    In the case of 'HdfsRepository', it was using both its own logger and also the one inherited from its base class.

commit 2d5d11db55f8ca07ee4f91dfa938f23b15ca6318
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 8 12:20:33 2019 +0200

    Remove querySpec property from AnalyzedRelation
    
    This makes it harder to mutate relations and removes the redundancy we
    had since we introduced the outputs/where/... properties on the
    AnalyzedRelation
    
    It will also enable us to further tune the AnalyzedRelation classes.

commit e2b09c572f5ec0e551dd3318f6683e373c520306
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 8 11:20:51 2019 +0200

    Remove the implicit soft limit for HTTP clients
    
    The soft limit was initially added as a protection against out of memory
    errors, but a while ago we've integrated the circuit breaker into the
    response building. So if the result set would be too large, the circuit
    breaker would kick in.
    
    This allows us to remove the soft limit.

commit 10765947283b1ba2707ed5225687f6f160ec7e15
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 7 11:29:02 2019 +0200

    Remove eager predicate push down from RelationNormalizer
    
    We've introduced a rule that moves filters beneath joins, so we no
    longer require the early predicate push-down logic in the
    `RelationNormalizer`
    
    As a side effect of this change it uncovered a bug in the recently
    introduced outer-join rewrite rule.
    
    Some plans will now include a `_fetchid` on some more nodes, since table
    relations per default have all columns in their outputs. (So the
    `Collect` operators `_fetchid` inclusion logic kicks in.
    
    This should be resolved in a follow up, that changes the way that the
    fetch optimization is done.

commit 95bcc216dd76f347802645710a33486ed679489d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 29 14:00:17 2019 +0200

    Remove semi-join re-writes
    
    The semi join rewrites were done early based on the analyzer structure.
    We eventually want to have these re-writes as part of the optimizer
    implemented as a rule.
    
    Given that the semi join rewrites defaulted to false and were flagged as
    experimental this simply drops them. We can re-add them later on as a
    rule once we start working on correlated sub-queries where we might want
    use them per default.

commit e7a974f09e58afc624951eff536c7d5d6e9b4fd0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 6 16:29:03 2019 +0200

    Re-implement outer to inner join rewrite as a rule

commit 9ef14163064956880c7bb294030453c74456a2bf
Author: Sebastian Utz <su@rtme.net>
Date:   Mon May 6 10:52:31 2019 +0200

    Remove fake testing table info builder
    
    Instead, real table infos using the SQLExecutor are build making
    unit test relying on existing table infos “real world” scenarios.
    
    This also eliminates the need to maintain a fake table info builder
    which already lead to some wrongly built tables, see test adjustments.

commit b02a51279355b4661947496a3226f0861d58bfbe
Author: Sebastian Utz <su@rtme.net>
Date:   Mon May 6 10:35:07 2019 +0200

    Remove artificial limitation to allow casts to `SET`
    
    Adjusted 2 unit tests which relies on an argument of the `SET` data type
    to use the cast instead of a fake column of type `SET` which is not
    allowed. Further commits may forbid using such a fake column.

commit 0c5e2d2c283df5960dda0a9aab5103f3d7f917c5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 6 14:49:52 2019 +0200

    Add a rule to move filters beneath nested loop joins
    
    See previous commit.

commit ee415018ce9161654f37caf6b3200427e1f66cb2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 3 11:10:16 2019 +0200

    Add a rule to move filters beneath hash joins
    
    Currently we do an eager predicate push-down in the
    `RelationNormalizer`. (`MultiSourceSelect.createWithPushDown`)
    
    This commit adds the same logic based on the optimization rule
    framework. This has the advantage that it also works for more complex
    queries that involve sub-queries.
    
    This doesn't yet remove the logic from the `RelationNormalizer` as it is
    still required for the outer-to-inner-join rewrite to work.
    
    Once we've the outer-to-inner-join rewrite also done as part of an
    optimization rule, we can remove the push-down logic from the
    `RelationNormalizer`.

commit 903fb034881845b3fa0894ae0a6b09cd4d840d83
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 6 11:22:54 2019 +0200

    Tweak authentication failure logging
    
    We usually see a pair of logs like this:
    
    ```
    [2019-05-05T17:16:04,447][WARN ][i.c.p.h.HttpAuthUpstreamHandler] password authentication failed for user "crate"
    [2019-05-05T17:16:04,447][WARN ][i.c.p.h.HttpAuthUpstreamHandler] unauthorized http chunk
    ```
    
    This removes the "unauthorized http chunk" as it usually follows the
    first log entry, and extends the first log entry to include connection
    details.
    
    It also changes the log level to info as this usually doesn't require
    any intervention from an administrator.

commit 9c60d6dc0c3b5556e8c0f0f871df0317b2f41e80
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 3 20:01:00 2019 +0200

    Add a rule to push filters beneath order operators
    
    This optimizes queries like
    
        select * from (select * from t1 order by a) tt where a > 10

commit ed826a75f7da313e6a07315cab4ab000f1c1e719
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat May 4 15:33:28 2019 +0200

    Add a rule to remove redundant FetchOrEval operators
    
    This is mostly a cosmetic change to get less verbose logical plans. We
    applied the same optimization already before at the time we build the
    execution plan.

commit e67a0480867fefe1dea27dc713b6e67c6f8121b8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 26 16:50:40 2019 +0200

    Change collect operator to depend on table instead of queried-table

commit 841170f694e4d7a6529b5fb332ba899b32c03412
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 3 11:35:09 2019 +0200

    Optimize filters on views or subqueries
    
    This adds a new optimization rule `MoveFilterBeneathFetchOrEval` to
    optimize `Filter -> FetchOrEval -> X` to `FetchOrEval -> Filter -> X`
    
    This in turn enables other already existing rules, most importantly
    `MergeFilterAndCollect` which enables us to utilize Lucene indices to
    run the filters efficiently and also runs an optimization to narrow the
    partitions being searched to those that can match the filter.
    
    This optimization is particularly important to work efficiently with
    views.

commit b1b4f5f2fd9cce019fc94bbac5f380a30d7e522c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 2 17:23:36 2019 +0200

    Remove the base classes used for LogicalPlan
    
    `ZeroInputPlan`, `OneInputPlan` and `TwoInputPlan` became mostly useless
    with the migration from `tryOptimize` to the new rule based framework
    which introduced `sources()` and `replaceSources()`. So this commit
    removes them.
    
    This also removes `LogicalPlanBase`, mostly because it led to some
    questionable `outputs` initializations (`super(lhs, rhs, new
    ArrayList<>());`) and didn't have a concrete purpose.
    
    It also makes it more visible that many `estimatedRowSize`
    implementations are rather bad.
    
    We'd probably be better off introducing something like a
    `ForwardingLogicalPlan` as many operators delegate most method calls to
    a source. Its purpose would be clearer.

commit 6a186bdbe29c207f433a18a022ff8f240af9239d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 2 14:05:05 2019 +0200

    Re-implement ORDER BY push down using rule framework

commit c8005e7c6a64e7b25e9c46089b258bfc3a76db0c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 2 14:29:03 2019 +0200

    Re-implement count(*) optimization using the rule framework

commit a963af701ff9337e02a05402dfdb87590058a44d
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Apr 30 16:45:09 2019 +0200

    Remove null checks for list ctor parameters in Node classes.
    
    AstBuilder uses visitCollection that returns an empty list
    if a visitable object is null.

commit 910f26f5ece4a1c99450e1352402bcd2d5518adc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 30 17:03:34 2019 +0200

    Add a rule based optimizer
    
    So far we have a couple of optimization rules as concrete implementation
    within an operator (`LogicalPlan.tryOptimize`).
    
    This is a first step to separate these rules from the operators
    themselves.
    
    The advantage of doing so is that we'll have more flexibility in regards
    how we apply the rules and the implementation + testability of the rules
    also becomes simpler. Each rule only needs to take care of one very
    specific optimization, instead of having *all* possible optimizations
    for an operator within the `tryOptimize` of that operator.
    
    The `Rule`, `Pattern`, `Match`, `Captures` approach is heavily inspired
    by Presto. (Except that I removed a lot of parts we don't need (yet))
    
    The `Optimizer` itself is currently straight forward and can later on be
    optimized further. (It only tries each rule after another, without any
    re-iteration or other smarts)
    
    As this is a first step it doesn't remove all `tryOptimize`
    implementations and keeps some methods that will later on be removed
    (E.g. the `updateSource` methods of `OneInputPlan` and `TwoInputPlan`)

commit 3aed6a6f4928ac6ad0fbddab2ef9afaed1db5d37
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Apr 30 14:27:28 2019 +0100

    Register udfs against the pg_catalog schema.

commit bd56b2ef2309a4e917d44e438ebda678032b7b6c
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Apr 30 16:04:25 2019 +0200

    Simplify (add)ColumnDefintion parser rules.

commit 290103d6297916332fb98c8df410228a8479ac6a
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Apr 30 15:04:44 2019 +0200

    Document the `pg_get_expr` function.

commit e1d270b78bb7ce983e95d45eafcfd03ce258507f
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Apr 30 10:20:33 2019 +0100

    Improve error msg for window definitions oredered/partitioned by arrays.

commit 1d76052c2f84834b32323154aea9fda042f13b99
Author: Michael Kleen <mkleen@gmail.com>
Date:   Mon Apr 29 15:28:32 2019 +0200

    Replace deprecated mockito method calls

commit 023ec682dfbe18cf7b05f2c727b3d898f142a03e
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Apr 23 12:56:56 2019 +0200

    Use Netty ByteBuf Bulk Operations for Faster Deserialization backport from https://github.com/elastic/elasticsearch/pull/40158

commit 112c3b10ae92a475db8d0e314c203a14324c78fb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 29 12:06:33 2019 +0200

    Replace process calls with accept in InputColumns
    
    `process` always calls `accept` - we can remove this indirection which
    makes stepping through the debugger more troublesome.

commit 2326c8d63fb8adaf591f25d515af639467f14855
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 29 12:00:22 2019 +0200

    Change InputColumns to be strict instead of lenient
    
    Previously the InputColumns class would continue if a symbol wasn't
    found in the `sourceSymbols`. This changes the behavior to fail as it is
    always an error case if a symbol cannot be resolved.
    
    This helps detecting errors closer to the point where they occur instead
    of at a later place.

commit 635e7250b60fca293611a1adefe451d13afbcaf7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Apr 28 16:02:47 2019 +0200

    Tests: Add occasional reduce steps to aggregation test framework

commit 8fa835c3df71017cf1dd25528a094c948df74171
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Apr 28 15:41:49 2019 +0200

    Tests: Change executeAggregation to return a single value
    
    It never returned more than 1 value.

commit 9d2c22b8497b848685596ed813539e3c41d019a4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Apr 28 13:03:10 2019 +0200

    Add the string_agg aggregate function

commit c0155f80c85e4e1f80bfc54902fe128c20ba326b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 26 15:04:35 2019 +0200

    Merge AnalyzedRelation with QueriedRelation
    
    In the long term it would be beneficial to:
    
    - Have a analyzer structure that is closer to relational algebra
    operators (This implies a simpler alias handling without
    `setQualifiedName` based mutations; No more `QuerySpec` including its
    mutations, and no more fields() outputs() duplication)
    - Have a rule & cost based planner
    
    This is a step back in order to be able to make two steps forward into
    this direction.
    
    Currently most attempts to change structures in the analyzer get stuck
    at some point. One of those pain points is the eager predicate push down
    of joins:
    
    We turn a `SELECT * FROM t1, t2` into `SELECT * FROM (SELECT * FROM t1)
    t1, (SELECT * FROM t2) t2` and at the same time run an eagier predicate
    push-down. This is done too early and led to:
    
    - Us having `QueriedRelation`s everywhere in the planner
    - Us depending on having `QueriedRelation`s in the planner (E.g. due to
    making use of the `outputs` for various operations.
    
    To move the predicate push down into the planner, we first need to make
    the planner work with `AnalyzedRelation`s, which is what this commit is
    about.

commit 156565c531c792f55a87a2e69952cf20afd1fbd8
Author: Andrei Dan <andrei@crate.io>
Date:   Fri Apr 26 15:13:03 2019 +0100

    Account for used memory in the sorting projector.

commit 82c6e82b82277f7163f33fae198db6a0cc2de5dd
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Apr 25 11:13:06 2019 +0100

    Account for used memory in the sorting topN projector.

commit 4170a7bdac4a6ef632bbfbf330b708a6902d6a1e
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Apr 23 17:02:01 2019 +0200

    Port ES snapshotting code.
    
    - Fix two races condition that lead to stuck snapshots (https://github.com/elastic/elasticsearch/pull/37686)
    - Improve resilience SnapshotShardService (https://github.com/elastic/elasticsearch/pull/36113)
    - Fix concurrent snapshot ending and stabilize snapshot finalization (https://github.com/elastic/elasticsearch/pull/38368)

commit fef3d2d244aee2b33df29f6b9d5078d488cd4f25
Author: Jodok Batlogg <jodok@crate.io>
Date:   Fri Apr 12 13:53:38 2019 +0200

    adding covenant code of conduct

commit 7a1fda5d8cfa9d3921b8fd72ac2350ba966f56d8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 25 15:07:50 2019 +0200

    Update hamcrest to 2.1

commit 16e76021449abd77be7062ec56a3c53a0e875e75
Author: Michael Kleen <mkleen@gmail.com>
Date:   Wed Apr 24 15:36:21 2019 +0200

    Remove unused deprecated index.ttl.disable_purge setting

commit ec920352471e19c277762b05d733dc4b4f52affe
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 24 10:29:01 2019 +0200

    Remove deprecation logger from AnalysisRegistry
    
    Was unused

commit 2804891a7bd07c7db5bf4b8e756718e7fedda9a9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 24 10:23:56 2019 +0200

    Remove deprecation logging from IndexTemplateMetaData
    
    Indices from CrateDB >= 3.0 should already use `index_patterns`

commit cc541bb7a04d189b3f7fb192f84b8a081ec0b296
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 24 10:14:47 2019 +0200

    Remove deprecation logging from DateUtils
    
    We didn't expose the deprecated timezones to users and don't use them
    internally.

commit 2a5eca4f5e959f3d2ffafbfc5ec4f1fd8f17e6af
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 23 16:36:59 2019 +0200

    Drop deprecation logging from PutIndexTemplateRequest
    
    PutIndexTemplateRequest is not exposed for end-users and we already
    updated the names we set.

commit 650f6dbc11a3031e594645708e4ca6ce55fe86bc
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Apr 24 14:39:09 2019 +0100

    Improve primary terms documentation.

commit 96e7496e48dfa7c3d1df0bda5296056842816f18
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 24 10:41:01 2019 +0200

    Remove analyzeGraphPhrase override in MatchQuery
    
    The linked issue has been fixed in Lucene 8

commit 0ffaf6c1e95044deba0d4abd0ea01937b0505a91
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 24 11:01:01 2019 +0200

    Remove duplicated code between OperationRouting and RoutingProvider

commit f6d12c417c65467f6d5a6503b4c928310d7b73fd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 23 15:59:01 2019 +0200

    Remove deprecation logging fro index.shard.check_on_startup
    
    We never exposed the setting, so we don't need deprecation logging for a
    possible value removal.

commit f5ab64520556eea3f8c9449352617931fb5d2cf0
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Apr 23 15:00:21 2019 +0200

    Enable Bulk-Merge if all source remains backport of https://github.com/elastic/elasticsearch/pull/37269

commit db89c9c06c649a1b0b1a90ba9262b511521380ef
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Apr 18 14:29:29 2019 +0200

    Fix lgtm warnings

commit 0e0c2a1c75aff0748dc248d67a3d8ad3ff05724b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 23 12:07:13 2019 +0200

    Remove the shard limit enforcement logic
    
    We inherited the logic from ES. So far it resulted in a deprecation
    warning if the shard limit was exceeded. In ES 7 the limit became a hard
    limit that aborts index creation.
    
    Given that we didn't expose the setting, and that the strict enforcement
    might be a bit too imposing on partitioned tables, this removes the
    enforcement logic altogether.
    
    We might re-introduce this at a later point more tailored to our
    tables/partitioned table structure.

commit 8076960f18887ad73c2879a63c2fe1df17678b02
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 23 11:28:43 2019 +0200

    Use CopyOnWriteArrayList for killAllListeners
    
    The killAllListeners are only written to on node start-up and are
    afterwards effectively read-only (on each kill request), so a
    CopyOnWriteArrayList suites the workload better.

commit 8a4dbe91fabd68f0622d0addff80fd6927cb65b6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 23 10:57:33 2019 +0200

    Remove the IndicesRequestCache
    
    - We didn't utilize it
    - We didn't expose the settings

commit d0b865ef471171dd404dd99645536537b56ede4d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 19 12:13:34 2019 +0200

    Remove AbstractComponent
    
    Follows the change in ES upstream.
    
    Since loggers do no longer require to be initialized with the settings
    to log the node name properly, the AbstractComponent became mostly
    useless and only pulled in the Settings as dependency which are often
    not used at all.

commit 2b64ea8e4e377c92088c1e5e05b99eeef1c7f749
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 23 09:44:27 2019 +0200

    Add min and max values for `http.max_content_length`
    
    Removes the deprecation logging and adds min/max values to follow ES
    upstream.
    
    Note that we don't even document the setting currently.

commit a28461200b6144310c310c1ddc5ecad28507f5b0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 23 09:35:17 2019 +0200

    Update netty to 4.1.35

commit 857cce0bbd78419bf741e2c7ccff3738f4402e9e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 19 13:48:45 2019 +0200

    Remove unused & deprecated routing preferences
    
    We didn't expose them.

commit 836b1bb176b3c1ce4116e2d812597b37da8a6740
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 19 11:39:51 2019 +0200

    Strip down GetResult
    
    - The `version` attribute was unused (and the same as the one in
      `DocIdAndVersion`)
    
    - There was a contract that if `exists=true` then `DocIdAndVersion !=
      null`. This cannot be expressed in a nice way with assertions, so this
      removes the `exists` flag and properly marks `DocIdAndVersion` as
      nullable.

commit c4ad56a567c1c5a6a3c45862037ecb391ed1cecf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 19 11:28:05 2019 +0200

    Make version, seq# and term# variables final in TransportShardUpsertAction
    
    We can avoid the 2nd pair of variables by declaring the variables final
    initially.

commit e99d02cd2a0b1628a6c235f64d6df2914074dcfc
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Thu Apr 18 11:39:07 2019 +0200

    Use java instead of guava collections in datatypes class.

commit ebac6fed52fd8048f8acf2e3c276cbef721953f0
Author: Christian Bader <christian.bader@crate.io>
Date:   Thu Apr 18 15:51:09 2019 +0200

    reflect release 3.3.2

commit 7124af2359a1156ab6f50a4dde4780a7e9a81e86
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Thu Apr 18 11:10:25 2019 +0200

    Use names of registered data type to build cast functions.

commit 0175c8d964e670fe15d7d8a4d5c6f30749ea6a38
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 18 11:26:26 2019 +0200

    Drop the commons-lang3 dependency
    
    The functionality we used is already available from other dependencies.

commit e6ad4ad097dd2c1a71146eab901196fa7d331ad3
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Thu Apr 18 12:18:35 2019 +0200

    Remove unused shard upsert request class.

commit 4b973ca981d310f870d01742fb1b4eb4ff720834
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 18 10:23:38 2019 +0200

    Remove some unused declarations

commit 97ec4ef238e60a81deaf057c2ae1b667b40a553c
Author: Savvas Makalias <savvas@crate.io>
Date:   Wed Apr 17 10:48:50 2019 +0300

    Add support for SQL standard timestamp format

commit 50451567995c9df4ba473ab74b01eee37930fde4
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Apr 17 14:12:29 2019 +0200

    Use java date/time parsers for crate timestamp types.

commit cbfbdd5ece4c1f935abab33daf2d9e4d2f3a02d8
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Apr 16 14:33:21 2019 +0200

    Add minimum_index_compatibility_version, minimum_wire_compatibility_version to sys.node table

commit 45e79693eb103ef87eeefa5f1ea3ca15f61e6827
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 17 13:28:05 2019 +0200

    Replace the LocalSysColReferenceResolver with MapBackedRefResolver

commit 125382ec87f266e7c352d1bc4941f99748ead0db
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 16 18:03:51 2019 +0200

    Optimize `findFirstNonPeer` to use a binary search approach

commit 0b4a61ea98aec0a8b820655bcace4e8bde4706ca
Author: Christian Bader <christian.bader@crate.io>
Date:   Tue Apr 16 14:10:35 2019 +0200

    Reflect 3.2.8 release

commit 98dc76654a7fd3e2d58a45ce62a62f2dcdf5d55f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 16 13:46:03 2019 +0200

    Make the window function computation phase lazy again
    
    Although the first phase (partitioning + ordering) acts as a pipeline
    breaker and doesn't benefit from any lazyness in the evaluation, the
    last phase that computes the window functions can be done lazy.
    
    This helps with performance in queries that have a limit, as we can stop
    evaluation once the limit has been reached.

commit 115e645817f422fd3f1e531c7f7589336d00319e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 16 11:24:52 2019 +0200

    Move t-digest and HdrHistogram dependencies into sql module
    
    They aren't used within es-server

commit 93d92f9d64d89e58fb17fa80b171479187b164dd
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Apr 15 22:59:53 2019 +0200

    Add the `timestamp without time zone` data type.

commit 98e5b45fbce3f72ae48a47be5a11ec8f75706ded
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 15 14:39:06 2019 +0200

    Run sort phase in window function execution in parallel

commit 1043f82ca64440d63d5026c734d4245ef4c944b4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 16 11:03:59 2019 +0200

    Remove guava usage from udc module

commit 94d7af0efcf8310de16419569f1bf2914e83f550
Author: Savvas Makalias <savvas@crate.io>
Date:   Mon Apr 15 14:16:38 2019 +0300

    Add support for type 'string' cast operator

commit aff46297d959f04faf90763eb1e2bdbfffe17222
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Apr 15 22:27:46 2019 +0100

    Use seqNo and primaryTerm for internal versioning on upserts.
    
    This also adds seqNo and primaryTerm support to Engine.Get (code backported
    from https://github.com/elastic/elasticsearch/commit/65a9b61a9162d4a9f5181b164ce4d23ee343b56e

commit a2be129040c030eee18237db8fd66307a3a775c3
Author: Savvas Makalias <savvas@crate.io>
Date:   Fri Apr 12 13:18:26 2019 +0300

    docs: Improve scalar evaluation description when used in From clause as a relation

commit cfa41047eb52ce8050a7d7d622faa06ea9ed4493
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 15 15:49:30 2019 +0200

    Fix limit processing in queries of insert into statements
    
    We prohibited the use of ORDER BY, OFFSET and LIMIT in the top level
    query of INSERT INTO statements, but it was still possible to wrap the
    ORDER BY, OFFSET and LIMIT within another sub-query within the query to
    avoid this restriction - but in that case the clauses weren't being
    processed correctly as we applied the write projection too early.
    
    This removes the restriction (as it is mostly a artificial limitation,
    coming from a time when our execution plan building was less modular)
    and fixes the handling.

commit 2650e8a6c8345bd1abacf78a987e865a48c8824d
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Apr 15 11:22:51 2019 +0200

    Make nested subqueries ignore the limit of outer subqueries.

commit 91f12bd1ffaa664ac9d4be115e15e6b36e6fde4d
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Apr 11 16:55:22 2019 +0100

    Remove versionType from Translog.
    
    Code migrated from https://github.com/elastic/elasticsearch/commit/df1380b8d3267d70771a640c7bac5a04fb63a8e1

commit 2c990c20d0edff0973e3cbbd4b8c5ea11606484a
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Apr 11 11:10:04 2019 +0100

    Added support for optimistic concurrency control based on sequence numbers.
    
    This commit encapsulates migrating some code that enables optimistic locking
    support for insert and delete actions in es
    https://github.com/elastic/elasticsearch/commit/733a6d34c1d08f3a1c50fc5a283733cc994b4343
    
    It also adapts the CrateDB support to include the seqNo and primary term in the
    DocKeys and make user of the user specified sequences when executing delete and
    insert against a primary.

commit cfbc3d464f81133e78f934c4062bb972a39347ed
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Apr 10 11:52:41 2019 +0100

    Migrate ES code to support external occ based on seq_no and primary terms.
    
    Code migrated from https://github.com/elastic/elasticsearch/commit/f6b5d7e01387c09a449f67e2678cf852f58770b1

commit 188bf77a39d8a89e9a633dce0cfb18d34d1f72f1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 12 21:41:32 2019 +0200

    Fix resource leak warning in MainAndStaticFileHandler

commit 33261f15719d5091c6b6f0596d8dd667ddbf8bb5
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Thu Apr 11 16:29:21 2019 +0200

    Deprecate usage of `timestamp` as timestamp with tz.

commit 0e4d3ba6a855555031cf318d4c4121d82fd0a6dc
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Thu Apr 11 16:20:36 2019 +0200

    Add `timestamptz` and `timestamp` aliases for timestamp with tz.

commit 3943b348fc7a4b51a8fea5e5a4544809f29514f5
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Mar 27 21:57:49 2019 +0100

    Rename the `timestamp` data type to `timestamp with time zone`.

commit b287a24f8bf7da1b99af0968f04cb3fc20fc84ef
Author: Savvas Makalias <savvas@crate.io>
Date:   Thu Apr 11 10:36:03 2019 +0300

    Add support for handling scalar functions as table functions

commit 7550b9ecfd8ea8065b7194cc7670000bddb8faee
Author: Autophagy <mika@crate.io>
Date:   Tue Apr 9 16:59:36 2019 +0200

    Reflect 3.2.7 release

commit ee8e292e682b7ba769cb8438eb690d421e935f75
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Apr 9 16:23:28 2019 +0200

    Add the `max_index_keys` session setting.
    
    The session setting has no effect on CrateDB and add to enhnace
    compatibility with PostgreSQL.

commit ad871bfbe6793c0351bc2a7f32c26af5a5df37dc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 8 14:08:45 2019 +0200

    Change WindowBatchIterator to be a pipeline breaker
    
    This integrates the ordering logic into the WindowBatchIterator to
    simplify the framing logic as it can be done on a List instead of a
    source BatchIterator.
    
    The assumption was that this should improve performance as it would
    avoid extra row-allocations. (Before we had 1 full materialization in a
    extra ordering BatchIterator + additional materializations in the
    WindowBatchIterator; Even without ORDER BY the WindowBatchIterator was
    materializing all rows due to the peer logic)
    
    But benchmarks indicate that the performance is roughly the same:
    
        Q: select avg("adRevenue") over (partition by "cCode" order by "visitDate")
                        from uservisits
        C: 1
        | Version |         Mean ±    Stdev |        Min |     Median |         Q3 |        Max |
        |   V1    |     9261.637 ± 1215.407 |   8200.260 |   8569.312 |  10257.467 |  12525.779 |
        |   V2    |     9123.659 ±  916.305 |   8147.050 |   8643.932 |   9782.795 |  11572.873 |
        mean:   -   1.50%
        median: +   0.87%

commit 21dda622dfa8aeec7147280cf2fd4623551bcb74
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Apr 9 16:50:16 2019 +0200

    Make the `show all` statement display the session description.

commit c14e1e14ffa28249c691aaa762f442085853f041
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 9 15:37:28 2019 +0200

    Replace Ordering/Comparator chaining with a specific implementation
    
    This replaces the ordering chaining using `nullsFirst` / `reversed` with
    an implementation that handles both reverse and nullsFirst flag
    directly.
    
    In addition, it removes the implicit `reversed` that we had in place for
    priority queues. This sometimes resulted in double reversing which is
    confusing and overhead.
    
    Main motivation is to reduce the call stack for ordering operations and
    to have a better basis to integrate expression evaluation into ordering
    later on.

commit 326885a46357b67ccd5ffd7a1d3a52cc095b5266
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Apr 9 16:36:21 2019 +0100

    Expose _seq_no and _primary_term as system columns.

commit 41d341ebaa64f96f8a22ba262df895473bc3df2b
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Apr 8 17:18:12 2019 +0100

    Remove unused IndexSettings from LuceneReferenceResolver.

commit 06102f72627eedf044fc09bdadb2b6d3c755e7a9
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Apr 9 16:29:17 2019 +0100

    Add support for loading the seqNo and primaryTerm into DocIdAndVersion.
    
    Code migrated from https://github.com/elastic/elasticsearch/commit/f6b5d7e01387c09a449f67e2678cf852f58770b1

commit a3aa29939a04ca949ae500502df2934d7f94076f
Author: Savvas Makalias <savvas@crate.io>
Date:   Thu Apr 4 15:52:02 2019 +0300

    Add internal pg type 'name' info on pg_catalog.pg_type

commit af90474038c279f3418f80660505e63352a33d55
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Apr 8 15:07:33 2019 +0200

    Change `show param` implementation to a rewrite to a select query.

commit 0114e5f3f77c417058a2d92f2b1caddbf9c4dca8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 9 13:44:10 2019 +0200

    Eagerly resolve the default for nullsFirst in OrderBy
    
    We kept a `null` value for `nullsFirst` and resolved it very late in the
    execution layer. This PR removes this `null` case by eagerly resolving
    it to `true` or `false` depending on if the ordering is ASC or DESC.

commit 97cb4ecc4ef855ad6e9039409244af1f6f4abeba
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Apr 9 13:21:21 2019 +0200

    reflect release 3.3.1

commit b803d90844e44330570a3b745a53976defb3a9d1
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Fri Apr 5 12:22:26 2019 +0200

    Implement the pg_catalog.pg_settings table.

commit 01191078c4cf1c775e47c62944d137baf3b94019
Author: Savvas Makalias <savvas@crate.io>
Date:   Thu Apr 4 11:28:52 2019 +0300

    docs: Document all supported session settings

commit fe5f26458ae1cff7bbfe6c423f5829697794e8f0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 5 11:39:20 2019 +0200

    Run blackbox tests on medium jenkins slave

commit 1a64bd31c2eb39b6e22f80acef9a40794525abf6
Author: Andrei Dan <andrei@crate.io>
Date:   Fri Apr 5 14:26:28 2019 +0100

    This fixes a few bugs on processing window functions over partitioned windows.
    
    Namely, due to the fact that window functions are executed for every row in
    the window set we previously introduced a caching of a result mechanism (as with
    each window func call the entire window frame is passed so the result for the entire
    frame is calculated on the first window func call). With partitioned windows, we have
    to re-iterate (start on row 0 again) with every partition so we now take that into
    account when deciding if we should recompute the window function. This fixes an issue
    where aggreates/nth_value functions would include results from previous frames in the
    computation by now resetting the internal state of the window funcs.
    
    The row number functions for partitioned windows was also broken due to the
    fact that the row number resets with every partition. Renamed
    windowRowPosition -> zeroIndexedRowNumber in the WindowBatchIterator and simplify
    how it's computed to fix this - the initial intention was for the windowRowPosition
    to also represent the number of emitted rows, but we have a dedicated field for that
    so its computation is now much simpler.
    
    Fix the window frame boundaries.

commit f991ba7979109891dd33b0112e8964a26354464a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 5 10:45:33 2019 +0200

    Migrate test_dns_discovery to unittest and include on PR tests

commit a1b08bce4a2a3d85036271bf72066ad2ba948dbb
Author: Savvas Makalias <savvas@crate.io>
Date:   Fri Apr 5 09:38:26 2019 +0300

    Fix a class cast exception when accessing 'pgtype.typlen' over wire protocol

commit 631da7346b57d086a52fe55d7bc4534acb8a3191
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 4 14:36:08 2019 +0200

    Fix logger.debug call to provide right number of arguments

commit 2199b886486ecb49ba7317e4cb6e6244050d54f8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 4 16:45:41 2019 +0200

    Migrate blackbox tests to cr8 CrateNode
    
    We've occasional port binding errors in our blackbox tests. Switching to
    `CrateNode` from `cr8` allows us to bind to port 0 and retrieve the
    http_url by sniffing the logs.
    
    This should resolve the port binding errors

commit 1b7fe18aa66889e54afbaf75bdf1aff57fb6f70d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 4 10:21:41 2019 +0200

    Remove unused logic from JvmInfo

commit 7dd4092861a6a0a747f9864732b92322b0303b28
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 4 10:14:41 2019 +0200

    Remove unused customs in MetaDataCreateIndexService

commit 1677c930d8ca5b91ddfee92e8c8def4091f1dd27
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 4 10:26:40 2019 +0200

    Extend PR checklist with a note about breaking changes

commit 8bc26c901fd626ebb7a86190faca11ca1cc5a27c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 3 16:18:18 2019 +0200

    Fix handling of multiple window definitions
    
    The missing `equals` and `hashCode` implementation from `WindowFunction`
    caused window functions with the same function and column name but
    different window definitions to be merged.

commit 3029e30587fdd43226005eb1779de00e9e39c815
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 3 17:02:32 2019 +0200

    Update the admin UI to 1.15.0
    
    No user relevant changes. It is required for compatibility due to the
    recent `schema_name` → `table_schema` column name change in the
    `table_partitions` table.

commit 52706e441931f50be19f809102a1356bdb410f52
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Apr 3 16:50:11 2019 +0200

    Update antlr to 4.7.2.

commit 391e167bb018bf084e3407d146745f9ca6fb355e
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Apr 3 16:16:47 2019 +0200

    Change deprecated RAMDirectory to ByteBufferDirectory

commit 79e4f75c36506d891f2d6e6da0f409847ba11bf5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 3 12:05:35 2019 +0200

    Don't stream WindowFrameDefinition as optional
    
    The `WindowFrameDefinition` is always available

commit a40d78d11d41dcbe5b36388b945acb45145f9891
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 3 13:18:21 2019 +0200

    Tweak current_setting documentation

commit 68aa93f81e69a08056aa5166a29f4f6db0104b85
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Apr 2 15:06:59 2019 +0200

    Drop the uploadArchives and related jars generating gradle tasks.
    
    Published artifacts were used for plugin development.
    Such as it is not clear how we proceed with plugins development
    and the https://github.com/crate/crate-example-plugin repository
    is quite outdated, we are dropping this task for now.

commit 48e4d91d967e22f7e1396ff52d3c8aad2c1a3492
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 28 12:01:14 2019 +0100

    gradle: Migrate more modules away from compile

commit 2bf9bf202b0e348263817df9e3ff8aac68f058fa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 28 11:45:26 2019 +0100

    gradle: Migrate enterprise modules away from compile

commit c2c93c4e86595ac754a1b5ff5e029fae3e1d9d1d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 28 11:41:03 2019 +0100

    gradle: Migrate dns-discovery away from compile

commit 0f087db69f02fbee72b383c7b3da6a5453e9c43a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 28 11:40:05 2019 +0100

    gradle: Migrate azure-discovery away from compile

commit 034e7a7ad0e4274c84d203ea673acd2cfd287770
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 28 11:35:21 2019 +0100

    gradle: Migrate dex away from compile
    
    `compile` is deprecated:
    
    https://docs.gradle.org/current/userguide/java_plugin.html#sec:java_plugin_and_dependency_management

commit de912ea6c878023d6dd0b54a5f331d4f628f4891
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 29 20:17:03 2019 +0100

    Execute window functions with partitions distributed

commit 7b699aa311cee976f642934c80453ee886e90421
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Mar 27 15:30:59 2019 +0100

    Remove deprecated nGram, edgeNGram, htmlStrip Tokenfilters names in favour for ngram, edge_ngram, and html_strip

commit 021248f77e5375eaea1ce11151c4f2f67349127c
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon Mar 25 17:06:03 2019 +0100

    improve user privileges docs

commit 9e9404f1b88404f0b188dac2725f1c6b1a11b946
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Apr 1 16:35:44 2019 +0200

    Remove indexsort configurations and related methods.

commit edd5b0472e86e3d68017cdaa96928c35c13c2181
Author: Savvas Makalias <savvas@crate.io>
Date:   Mon Apr 1 14:55:31 2019 +0300

    Implement 'current_setting' scalar funtion

commit ad1a8c8673b8cffbe2a94e36f046f47b4352ac91
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Fri Mar 29 16:43:31 2019 +0100

    improve CrateDB editions docs

commit 27baf508bfdeb02b0b7cff90983d75533a50993a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 29 10:42:38 2019 +0100

    Make orderBy processing in WindowAgg a bit less imperative

commit 071893c0d8a052092f3fb48bc7faa4ff7116c95f
Author: Savvas Makalias <savvas@crate.io>
Date:   Thu Mar 28 16:25:10 2019 +0200

    Refactor TransactionContext to serialise session-related information

commit 6076a104570384e6907a9a430c22e6f200406c4f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 29 11:16:01 2019 +0100

    Fix limit application in nested window agg operators
    
    If there are multiple window definitions we cannot eagerly apply the
    limit, as the calculations within the window functions might be based on
    all rows.
    
    Furthermore, if a offset was present the result was also cut off. The
    following query returned only 3 instead of 5 rows for example:
    
        SELECT
            col2,
            avg(col1) OVER (ORDER BY col1),
            avg(col2) OVER ()
        FROM
            unnest(array[1, 2, 3, 4, 5, 6, 7], array[10, 20, 30, 40, 50, 60, 70]) as t (x, y)
        ORDER BY
            col2
        LIMIT 5 offset 2

commit 60036c016ee52a34a32b03dabcb5a00eb286903e
Author: Autophagy <mika@crate.io>
Date:   Fri Mar 29 12:57:40 2019 +0100

    Reflect 3.3.0 release

commit 4491302df8c7869fd2fb30cb48aba5fd4b428473
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 28 20:35:59 2019 +0100

    Update guava to 27.1

commit 8545a2822b263cae6f686b7d98d945eac3fb0564
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Mar 28 15:19:46 2019 +0100

    Rename column information_schema.table_partitions.schema_name
    to table_schema to align with information_schema.tables

commit 8d37c7a5eadc2a413f9f64b4badb39ec67c6fce7
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Mar 28 16:31:28 2019 +0000

    Extract used columns from received symbols (as ordering can be on functions)

commit 720aa1fe3c5256d6dcddb7dc271f04e9b64d4ddb
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Mar 28 14:21:55 2019 +0100

    Remove unused totalCompressedSize of ClusterStateResponse

commit 661c74430066ce2ed6dd59cf08f1f1de5dea3c80
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Mar 28 14:25:26 2019 +0100

    Remove unused vars from RecoverFilesRecoveryException

commit a38a20cc161b73009d7c371d8e3816a722d93a49
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Mar 26 17:49:28 2019 +0100

    Remove unused ClusterGetSettingsResponse

commit 69f90439abb0b3dae00e597f3bd65ca16e7e989e
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Mar 22 13:59:51 2019 +0100

    Remove unused streaming support of various Elasticsearch classes

commit 3750330a2d70002c5ec6a835031c914687e33188
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Mar 27 15:00:24 2019 +0000

    Add documentation and examples for the PARTITION BY clause.

commit 371ff4e5de60bd783da719f0f805484824cfe75d
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Mar 27 10:13:18 2019 +0000

    Drop empty line and unused field.

commit a67d0633e7d25d9fcc4a430c8fc77d9453ccbae6
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Mar 27 10:13:05 2019 +0000

    Add support for partitioned windows.

commit 1655daf0acd0af8898ada08bc9bca2a355678e9a
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Mar 20 16:24:11 2019 +0100

    Migrate to lucene 8.0.0

commit 14354afc163cb6af850607ee18dfab5f9df740f2
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Thu Mar 28 11:37:03 2019 +0100

    Do not quote identifiers that contain digits between characters.

commit 9e2e3b4555f6010d67e0d19cc6acb47405d7affc
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Mar 28 10:14:01 2019 +0100

    Limit HEAP of license blackbox test instances to 256MB
    
    As multiple instances are started by this test suite, HEAP should
    be limited to avoid any OOM. Also instance in this test do not
    require much HEAP.

commit 148ad93b5e0ee9fee9786170355c083757c3cdf3
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Mar 27 14:46:54 2019 +0100

    Added quote_ident scalar string function.

commit 70bfe94303319b88d8a94f17ad24c2b6ef961a0f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 27 16:45:57 2019 +0100

    Remove undocumented netty settings
    
    Those settings are deprecated and have also been removed in ES 7.0.

commit c736842a191c211afcf33b99244a86026fe91c87
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 26 10:59:22 2019 +0100

    Remove most of the rest-layer infrastructure logic
    
    We've only 3 concrete handlers: `/_blobs`, `/_sql` and `/` (including
    serving static files).
    
    `/_blobs` and `_sql` was already implemented as a netty handler. This
    does the same for `/` and removes most of the REST machinery since we do
    not support plugging in rest-handlers.

commit 4d5617eebd0b46e4eae167896688621be83b5929
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Mar 27 13:27:48 2019 +0100

    Quote identifiers that contain leading digits or whitespace.

commit 5b28aebddb7a0204a3dbf921225881db6baedd13
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon Mar 25 16:52:24 2019 +0100

    improve docs for COPY FROM

commit a0074943a8c94012067c9cce777a369a2115524c
Author: Savvas Makalias <savvas@crate.io>
Date:   Wed Mar 27 09:14:16 2019 +0200

    docs: minor improvements

commit dda07e913b04675b689b128146c451fb4ea1e3f4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 26 11:27:13 2019 +0100

    Update netty to 4.1.34

commit 6ecddb5288f523eed3f9954578b03f24a1617cf5
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Thu Mar 21 09:17:09 2019 +0100

    Rename data types to corresponding PostgreSQL data types.
    
    | Current Name | New Name             |
    | ------------ | -------------------- |
    | ``short``    | ``smallint``         |
    | ``long``     | ``bigint``           |
    | ``double``   | ``double precision`` |
    | ``float``    | ``real``             |
    | ``byte``     | ``char``             |
    | ``string``   | ``text``             |
    
    The old data types names are registered as aliases for
    backward comparability.

commit 41af1cfa712e3fd6d4b83a84ca5b035d206a2ad6
Author: Autophagy <mika@crate.io>
Date:   Tue Mar 26 15:45:21 2019 +0100

    Reflect 3.2.6 release

commit 7da1e5843d3cbfc868c3c8f473088e29d4ff47db
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 26 11:13:30 2019 +0100

    Remove the supported enpoints check in CrateRestMainAction
    
    We removed all unsupported endpoints, so there is no need for this
    restriction anymore.

commit cdbfe96ef4824aa053c253f8294b283a89e8843d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 26 13:32:42 2019 +0100

    Remove unused TransportGetSettingsAction

commit 35b0c61f79bfd8617828ad3081ee8604db58d48e
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Mar 26 11:22:49 2019 +0100

    Add jenkins step to run JAR building tasks
    
    This verifies that our JAR building gradle tasks are working properly.

commit 5facab83c52cacff3701298052071248bc1508aa
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Mar 26 11:21:47 2019 +0100

    Remove unused :app gradle tasks for jar building
    
    - Use `sourceJar` instead of removed `buildSourceJar`
    - Use `javadocJar` instead of removed `buildJavadocJar`

commit bfa13607c3b8cd91e5f7119eba41a47513815bd2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Mar 24 18:00:13 2019 +0100

    Make attributes in WriterProjection final

commit 8eef161894633628e6f6d929948ae713b5bdde68
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Mar 26 09:49:01 2019 +0100

    Add missing PG mapping for ``array(ip)``
    
    Also ensure that a PGArray.FLOAT8_ARRAY will be mapped to a
    ``array(double)`` instead of a ``geo_point``.

commit 9d19a5f555e58c99d2c6168290610a0fc993e092
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Mar 25 22:22:54 2019 +0100

    Use AST visitors to process data type definitions.

commit 5680360ed8ff19649df820a1e483bc4322bd910a
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Mar 25 21:55:28 2019 +0100

    Do not replace backquotes in unquoted ident visitor.
    
    The CrateDB's parser does not support backquoted identifiers.
    We use the context text, instead of ``IDENTIFIER`` such as
    context can have either ``IDENTIFIER`` or ``nonReserved``.

commit 7c95e8a08251c432e85325805797f354ebd2dfb5
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Mon Mar 25 21:37:30 2019 +0100

    Split the ident rule into quoted and unquoted ident rules.

commit 5cc51a76a1442b24534ef6f6e9badcf362dd5b29
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Mar 21 17:59:49 2019 +0100

    Removed deprecated `license.enterprise` setting.
    
    Enterprise functionality cannot be disabled anymore when running the
    CrateDB enterprise edition, one must switch to the community edition
    instead.

commit 33932e07b645b0a2bc6ac498560a9256de2aa24e
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 25 16:03:35 2019 +0100

    Fix gradle tasks to build javadoc + source JAR files.
    
    The `execute()` method is no longer available on Gradle.

commit 67f6e4c9b99679dacaeee9a81e8bb3f36a4e243b
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 25 15:44:41 2019 +0100

    Upgrade Admin-UI to 1.14.0
    
    - Updated CrateDB & CrateDB CE logos
    - Fixed display of unlimited license expiry date

commit f65b28db197a7711a5ab29a860497d78634c5dd8
Author: Roman Meingassner <roman@crate.io>
Date:   Wed Mar 20 12:08:55 2019 +0100

    Clarify multi value fields in GROUP BY docs
    
    A customer reported that for him the documentation is missleading in
    regards to GROUP BY.

commit daf7f2c54dbbe904f1735acc1419c4eb20e56725
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 22 15:49:29 2019 +0100

    Expose _docid
    
    This provides users a fairly cheap way to reduce the amount of records
    considered for otherwise expensive queries where the accuracy doesn't
    matter too mach. By filtering on `_docid` using a modulo operation users
    can reduce the amount of records before hitting a GROUP BY or global
    aggregation.
    
    A more detailed description of this will be part of the guide.

commit b700cc5c6166342edf8d341bb848ce95cd8ff087
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 22 09:59:34 2019 +0100

    Add timeouts to all tests run on jenkins
    
    A bad change I tried in https://github.com/crate/crate/pull/8347 caused
    the tests to get stuck which ended up stalling the whole CI pipeline.
    
    This adds some timeouts so that the tests fail eventually and don't
    block everything.

commit 2a0c9f1495f5567fe38f83ed9a6defd122c59573
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Mar 21 16:07:04 2019 +0000

    Make window order by symbols part of the statement outputs and replace/map them.

commit 1e49c7c55538c99bd34afcc228e3d47721372c62
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Mar 22 11:44:19 2019 +0100

    Upgrade Admin-UI to 1.13.0
    
    This release won't depend on the deprecated `license.enterprise`
    setting anymore to distinguish between enterprise and community
    edition.

commit bbbaca3a319c470e335f04bc218bed3e1d9e89b3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 21 15:16:03 2019 +0100

    Remove HTTP pipelining code
    
    - Afaik none of our clients utilized it
    
    - https://www.w3.org/Protocols/rfc2616/rfc2616-sec8.html says: Clients
    SHOULD NOT pipeline requests using non-idempotent methods or
    non-idempotent sequences of methods. Given that we expose everything
    under `_sql` with POST it would be difficult for clients to distinguish
    when it is safe or not to use pipelining.

commit c7a13e2fa48e24a6f1ee4a8f33395709cd6c1dc1
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Mar 21 13:49:53 2019 +0000

    Avoid NPE if a window is ordered over a column that has null values.

commit 625937ae4f106168a4072584b35653ba791aa581
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 21 15:35:19 2019 +0100

    Remove secure value prompt code
    
    We haven't documented it and don't support it.

commit 30088ce77af1fa95bf309298f371ec08c45fcee7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 21 10:45:32 2019 +0100

    Merge CrateSettingsPreparer with InternalSettingsPreparer
    
    Most of the custom logic of the CrateSettingsPreparer is no longer
    required due to some of the changes we did:
    
     - https://github.com/crate/crate/pull/8423
     - https://github.com/crate/crate/pull/8380
    
    The setting validation code we had is also not required, as it happens
    later on anyway in `Node.java:335`:
    
        Caused by: java.lang.IllegalArgumentException: Failed to parse value [foo] as only [true] or [false] are allowed.
            at org.elasticsearch.common.Booleans.parseBoolean(Booleans.java:73) ~[crate-app.jar:4.0.0-SNAPSHOT-cbb485973]
            at org.elasticsearch.common.settings.Setting.get(Setting.java:404) ~[crate-app.jar:4.0.0-SNAPSHOT-cbb485973]
            at org.elasticsearch.common.settings.Setting.get(Setting.java:398) ~[crate-app.jar:4.0.0-SNAPSHOT-cbb485973]
            at org.elasticsearch.common.settings.AbstractScopedSettings.validate(AbstractScopedSettings.java:428) ~[crate-app.jar:4.0.0-SNAPSHOT-cbb485973]
            at org.elasticsearch.common.settings.AbstractScopedSettings.validate(AbstractScopedSettings.java:344) ~[crate-app.jar:4.0.0-SNAPSHOT-cbb485973]
            at org.elasticsearch.common.settings.AbstractScopedSettings.validate(AbstractScopedSettings.java:315) ~[crate-app.jar:4.0.0-SNAPSHOT-cbb485973]
            at org.elasticsearch.common.settings.AbstractScopedSettings.validate(AbstractScopedSettings.java:286) ~[crate-app.jar:4.0.0-SNAPSHOT-cbb485973]
            at org.elasticsearch.common.settings.SettingsModule.<init>(SettingsModule.java:86) ~[crate-app.jar:4.0.0-SNAPSHOT-cbb485973]
            at org.elasticsearch.node.Node.<init>(Node.java:335) ~[crate-app.jar:4.0.0-SNAPSHOT-cbb485973]
            at io.crate.node.CrateNode.<init>(CrateNode.java:60) ~[crate-app.jar:4.0.0-SNAPSHOT-cbb485973]
            at org.elasticsearch.bootstrap.BootstrapProxy$1.<init>(BootstrapProxy.java:184) ~[crate-app.jar:4.0.0-SNAPSHOT-cbb485973]
            at org.elasticsearch.bootstrap.BootstrapProxy.setup(BootstrapProxy.java:184) ~[crate-app.jar:4.0.0-SNAPSHOT-cbb485973]
            at org.elasticsearch.bootstrap.BootstrapProxy.init(BootstrapProxy.java:255) ~[crate-app.jar:4.0.0-SNAPSHOT-cbb485973]
            at io.crate.bootstrap.CrateDB.init(CrateDB.java:157) ~[crate-app.jar:4.0.0-SNAPSHOT-cbb485973]
            ... 6 more

commit 4afe0ffe77ad5bc28efe29d8623a763e2be8264b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 21 14:09:15 2019 +0100

    Remove unnecessary sourceSets definitions
    
    - sql/build.gradle redefined the default
    - app/build.gradle definition is unnecessary

commit 53cb4836c6602fce3e7fe41097bd0f53416bf1f4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 21 13:58:43 2019 +0100

    Update gradle to 5.3

commit 55994e964c2f13740f4dd484461792118f1b0d56
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 21 13:55:36 2019 +0100

    Gradle: Remove duplicate java compatibility definitions
    
    There is one definition in the root `build.gradle` that is sufficient.

commit 7d65c269725642012ae5649d9aa5e56e4c46fec0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 20 13:54:35 2019 +0100

    Add intellij codeStyle defaults that are closer to our style
    
    - Force braces for if/dowhile/while/for
    - Put arguments into separate lines if they wouldn't fit into 1 line and
    align them.

commit 0d4bee6c45b442be5e0fe93edbdaf015478845c8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 20 17:24:30 2019 +0100

    Remove setting of GLOBAL_NETWORK_HOST_SETTING default
    
    `resolvePublishHostAddresses` already applies the default if it is not
    set.

commit 68c804b2f9e79e27bfe865dfec13ab272ecb127e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 20 17:13:41 2019 +0100

    Remove TRANSPORT_TYPE_DEFAULT_KEY override
    
    This is already set by the `Netty4Plugin` if it is loaded which is
    always the case. (See `CrateNode` -> `CLASSPATH_PLUGINS`)

commit 12d6cfb2b1901a034d8613ef12534682ae640f45
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 20 17:08:03 2019 +0100

    Remove special clustername default handling
    
    The setting definition already uses `crate` as default value.

commit 6549a0c4e4acf93a9a25188164fa1ac5b595a58f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 19 16:40:54 2019 +0100

    Remove document re-ordering logic
    
    Given that we removed the parent mapper logic, we shouldn't need the
    document re-ordering logic either.

commit 5cd217c33687611cfe55842fb5aedb9b10992656
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 10 12:13:06 2019 +0100

    Handle SimpleCaseExpression conversion separate from SearchedCaseExpression
    
    `convertCaseExpressionToIfFunctions` had two separate case conversion
    logic bundled into one function. Seems simpler to split it up.

commit be64caef425ffdd63fe2f42b4f005fe4b03891b0
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Mar 20 13:52:25 2019 +0100

    Upgrade Admin-UI to v1.12.0
    
    This new version contains support for displaying the `max_nodes` of
    an enterprise license.

commit f111353f72416e210394eabe0fa4f598e7d5ac44
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Wed Mar 20 10:21:21 2019 +0100

    Add SQL syntax documetation for COMMIT and BEGIN statements.

commit 4eafc1d06d6e9a795916fe48522747d2029c69ba
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Mar 19 23:12:49 2019 +0100

    Drop support for BytesRef conversion in data types.

commit 476c24d45a556b625946319f4464a0916cfa3fef
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 20 09:39:26 2019 +0100

    Make sure we don't utilize FieldNamesFieldMapper.termQuery

commit 817b793698a7d9bb23eb7fdf33e03085322d447f
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Mar 20 09:13:38 2019 +0100

    Fix flaky license check unit test
    
    Follow up of c8b05ebbd80f666c1120681bed3fc593b7e062ff.

commit e50b2f7618a7461525072de1eaeb5f5ebeb8dc0b
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Tue Mar 19 21:18:36 2019 +0100

    Dispatch only 1 or 3 args trim function from parser.
    
     There is no need to distinguish between the trim function with
     two (trim mode is not provided - BOTH) and three arguments, such
     as it requires to check the number of arguments in the function
     implementation. Therefore, we always dispatch the trim function
     with the explicitly set trim mode.

commit 914c58a672ad4a29553a2618432157ca5ce3ff9b
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Tue Mar 19 13:51:23 2019 +0100

    made spacing in the release notes consistent

commit 19555b7121f4523ddb4087bd718f52a16f00cb6e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 19 16:12:17 2019 +0100

    Advise developers to not use the intellij gradle plugin
    
    Seems like it is still broken - or at least doesn't set all options
    correctly.

commit 94b37594fe57c6dd7176214353c065ef45ced28f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 19 16:05:58 2019 +0100

    Make small adjustements to the developer docs
    
    - Remove the `runDebug` part since we don't explain how a debugger would
    be attached. People familiar with gradle and remote debugging will know
    that it exists anyway.
    
    - Re-order distTar & installDist, given that distTar is a subset of
    installDist it makes sense to explain it first.

commit c8b05ebbd80f666c1120681bed3fc593b7e062ff
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Mar 18 17:11:00 2019 +0100

    Fix license cluster check to warn in case of expiration
    
    Add minor code cosmetics suggested from seut

commit 2dc777139a10761f6cc195efdcb770a705f3da2f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 19 15:53:37 2019 +0100

    Fix the gradle run command
    
    Failed with:
    
        Exception in thread "main" java.lang.AssertionError: expected error listener to be registered
                at org.elasticsearch.common.logging.LogConfigurator.checkErrorListener(LogConfigurator.java:147)
                at org.elasticsearch.common.logging.LogConfigurator.configure(LogConfigurator.java:122)
                at org.elasticsearch.bootstrap.BootstrapProxy.init(BootstrapProxy.java:224)
                at io.crate.bootstrap.CrateDB.init(CrateDB.java:155)
                at io.crate.bootstrap.CrateDB.execute(CrateDB.java:135)
                at org.elasticsearch.cli.EnvironmentAwareCommand.execute(EnvironmentAwareCommand.java:71)
                at org.elasticsearch.cli.Command.mainWithoutErrorHandling(Command.java:124)
                at org.elasticsearch.cli.Command.main(Command.java:90)
                at io.crate.bootstrap.CrateDB.main(CrateDB.java:88)
                at io.crate.bootstrap.CrateDB.main(CrateDB.java:81)

commit dde8a01ff91c2a5ab21be120ae913f5a39475257
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 18 12:25:18 2019 +0100

    Keep the ordering of columns based on the CREATE TABLE statement
    
    To improve compatibility with postgresql this introduces a `position`
    property that is used to preserve the ordering of columns based on their
    appearance in the CREATE TABLE statement.
    
    Object children are still ordered by their name.

commit 843d8cfc2e1ae7900cce847f7dfb7084985b84ab
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Mar 19 15:24:29 2019 +0100

    Return NULL for unlimited license expiry date.
    
    Internally we use a sentinel to indicate an unlimited expiry date.
    This is not known to users and may confuse, so just return NULL in
    such cases.

commit 61a92fb993147b668fc89f1bb21750011273ca3f
Author: Savvas Makalias <savvas@crate.io>
Date:   Fri Mar 15 09:39:26 2019 +0200

    Implement 'trim()' scalar string function

commit 22cabd7c21344663ca11c82ccae9cfef5eb5d159
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 19 13:46:43 2019 +0100

    Remove special BytesRef handling from TestingHelpers
    
    These are no longer necessary since we switched to using `String`
    directly instead of `BytesRef`.

commit 59bee38b1d3535590128972704f672b82eb544eb
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 18 13:20:42 2019 +0100

    Update `license check` documentation.
    
    With recent changes, the license check will also verify the `max_nodes`
    license value. Also no license check at all is available on the CE
    distribution.

commit 0c9bb39a0dcbaa69148e3be0d1d39abe0917dc9a
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 18 16:16:01 2019 +0100

    Correct documentation of the `processor` node setting
    
    The setting is used to adjust internal components, it won’t change
    how much CPU’s are used by the runtime/process.

commit b6002f218566638836f1a50bff492020c79e2ce1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 14 16:56:57 2019 +0100

    Clarify new USR2 behavior in release notes

commit c27fdf36c9ba7b532410e96ba808acb48ce71393
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 18 10:39:03 2019 +0100

    Docs: Remove example that implies dynamic column_policy default

commit 67e7f3bd4c95f3713b9235fd6e9c7b81a8720b18
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 18 15:23:25 2019 +0100

    Reduce special handling for partitioned columns in DocIndexMetaData
    
    It will be easier to add a sort attribute to the `Reference` this way.

commit 56964df8fd48eec96d00704163b613c8f13d4704
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 18 13:10:07 2019 +0100

    Change how the internal references map for the DocTableInfo is built
    
    This will make it easier to introduce a property to the `Reference` by
    which to sort on later on.
    
    Otherwise we'd have a `ColumnIdent` as key, on which we cannot sort if
    the `Reference` is going to have a sort criteria.

commit c8733e1f5ebb4e0fe63a1b5f99934fce76f3ceac
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon Mar 18 14:42:32 2019 +0100

    improve COPY TO/FROM docs

commit 292b8cdc8809faa2e304a9c2a28a59c21d5caf23
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 18 12:16:19 2019 +0100

    Add license blackbox test for the community edition

commit 33d5dded2130cde6b6683dfa991ba70bfae9b4ac
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 18 09:56:01 2019 +0100

    Move license decrypting into license implementations

commit 27ec2f662da7f78f979483e20a529ed8b48c4f69
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Mar 15 18:17:17 2019 +0100

    Convert `license` project into an enterprise module
    
    The community edition must run with any license registered, also no
    trial license should be generated.
    
    The license check won’t be available at the CE as well.

commit 9895e4ffd00fed12f793fd7cda21a2202085e8c1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 15 16:57:50 2019 +0100

    Replace columnPolicy string attributes with the ColumnPolicy enum

commit 9150968d0c01f28af4ad8344bd6be81674688ce2
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Fri Mar 15 11:37:06 2019 +0100

    Add the ``string_to_array`` scalar function.

commit 0a49ee3e463d4aeaee79562bcbc1fe3926ea94b0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 15 11:26:08 2019 +0100

    Make clusteredBy and partitionedBy concrete on CreateTable
    
    Having a generic `CrateTableOption` didn't really have any benefit.
    
    Changing it to be more concrete will make it easier to make
    `CreateTableAnalyzedStatement` immutable.

commit cc20663240343b43b7c131f7c68b5bcd4a96004a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 14 16:16:25 2019 +0100

    Remove some setting default overrides
    
    Given that we no longer have the strict CrateDB/ES source split we can
    adapt the defaults in the es modules instead of adding overrides.

commit 0052f134d176a0d53ec7d90c053ccffcd10865c3
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Wed Mar 13 17:45:24 2019 +0100

    Run documentation integration tests for community edition.
    
    Add a new task `ceItest` to run a subset of the documentation
    integration tests (some docs which are using enterprise only
    features are excluded).
    The task is also added to the Jenkins CI steps to ensure a
    working community edition.

commit bea60d67c3e7b03ee92427bf74d9b41f46f4db3d
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Mar 14 20:47:53 2019 +0100

    Fix order-by push down on sub-select queries
    
    When optimizing a sub-select query, new source outputs of a boundary
    were not processed and thus wrong outputs were returned to an upper
    logical plan which resulted in mapping errors.

commit 2e25ed02694e838cdf281bef1b0be6fc20f26cd0
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Thu Mar 14 16:31:27 2019 +0100

    mention graceful stop in run documentation

commit 1a8a35cb1b82c94d5577c7cfa45a8e28540db5fc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 14 15:50:09 2019 +0100

    Remove the Netty4InternalESLogger
    
    netty already ships a Log4J2LoggerFactory that can be used.

commit abdc36e55971eeb941226dd7d2a3145b39fad470
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 14 15:40:20 2019 +0100

    Remove ESLoggingHandler
    
    The base class can be used directly instead.

commit e80cd3c9af630508816372043bdc9bd6edf81ab7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 14 13:30:02 2019 +0100

    Change default column policy to strict
    
    Being lenient/dynamic by default caused some users to not catch typo
    errors in their insert statements as they were unaware of this behavior.
    
    Making `dynamic` a opt-in instead of a default should cause less
    surprises for users.

commit ca1296bcdcca2d4eb7fa35927164f5c54895db9c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 13 10:07:02 2019 +0100

    Remove the deprecated license.ident setting

commit f6a28eb1757d3cd57972290f55569e832078ab6f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 13 17:22:56 2019 +0100

    Remove the deprecated USR2 signal handling

commit 120f51eb2c5951f48844dd9a80f40827b732f25f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 13 17:11:55 2019 +0100

    Include a trial-prefix in the `issued_to` of trial licenses
    
    Enables us to easier distinguish trial licenses in the UDC pings we
    receive.

commit 7ac5b49910b65b4e40cd8dc89365f594fe9acd37
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Mar 5 16:03:50 2019 +0100

    Add subscript expression support on sub-relation columns.
    
    This adds support for subscript expressions on an object column of a sub-relation.
    Examples: ``select a['b'] from (select a from t1)`` or
    ``select a['b'] from my_view`` where ``my_view`` is defined as ``select a from t1``.

commit bb5bc6fdb736a5ed790e8188b054755fd811f86a
Author: Savvas Makalias <savvas@crate.io>
Date:   Wed Mar 13 12:45:53 2019 +0200

    Implement and expose 'pg_type.typnotnull' column

commit b80b74fe87f0a221f4e36565855044ec9335b7b3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 13 11:40:02 2019 +0100

    Log the license once when it is first initialized

commit 7d82b1814fb687e08dd421edd302d946da28a8b9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 12 16:00:10 2019 +0100

    Docs: Adapt trial license section to node number limitation

commit dff3c6fe01e41a53968fb6ac13cb0b3c8a465f99
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 12 15:52:33 2019 +0100

    Adapt LicenseCheck to handle node restrictions

commit cebfed59a68871390d5ed441e70eea32f1308d5e
Author: Savvas Makalias <savvas@crate.io>
Date:   Mon Mar 4 11:43:15 2019 +0200

    Add 'number of nodes' restriction to license

commit cda3a6a2cb115b396210278874822c3000b06ca2
Author: Savvas Makalias <savvas@crate.io>
Date:   Wed Mar 13 09:32:27 2019 +0200

    Fix pg function resolution when schema is included

commit 4ce55280de1eac43f9b7ec47717fd93a666c53d3
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Mar 12 16:28:25 2019 +0100

    Fix memory accounting of window functions
    
    A LinkedList entry will consume 32 bytes in worst case scenarios, accounting less
    will result in OOM exceptions on heap pressure.

commit a00d7e7e772c3a805826f8892be1a5f02f626b56
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jan 3 12:21:20 2019 +0100

    Rename `user_defined_type_*` columns to `udt_*`.
    
    SQL Standard defines these column names prefixed with `udt_` instead
    of `user_defined_type_`.

commit f1e95348bdd0ecfbfb31d749d84be004ecad47ad
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jan 3 11:43:08 2019 +0100

    Change `information_schema.columns.is_generated` to String type.
    
    SQL standard defines ``is_generated`` as String and not Boolean.

commit de79aa97ef5607c5e21d1c6768fd21c5f2dcdbe2
Author: Savvas Makalias <savvas@crate.io>
Date:   Fri Mar 1 14:02:01 2019 +0200

    Allow decommission statement when license is expired

commit 1b1d9df64c2d396a140fc78c4992a6074a8b6c57
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 12 13:41:01 2019 +0100

    By-pass license validation on development instances
    
    This ensures that we have non-flaky tests once we merge the max-node
    limitation (https://github.com/crate/crate/pull/8322) by treating
    instances that are bound to loopback as development instances.
    
    This is the same pattern we use to check if we should enforce bootstrap
    checks.

commit 5d7e6e5b1de5e337e7834a4291a0ed3a20458df3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 12 11:24:14 2019 +0100

    Add number of available processors to UDC pings

commit 67b8624737f4d7fca4470e915f8a5012ad665627
Author: Autophagy <mika@crate.io>
Date:   Mon Mar 11 17:39:50 2019 +0000

    Reflect 3.2.5 release

commit ca8c294b08e140f745e2a5481b4a5c44b49a2d40
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 8 15:12:46 2019 +0100

    Update docs to reflect licsense.enterprise deprecation and CE
    
    Co-authored-by: Savvas Makalias <savvas@crate.io>

commit b78152fe3df1f137cde4abdf9c74b97fd8026d9b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 8 10:04:03 2019 +0100

    Mark `license.enterprise` internally as deprecated
    
    Co-authored-by: Savvas Makalias <savvas@crate.io>

commit 925b99eae781c7208b462ebdd34e07cc8313d4ac
Author: Savvas Makalias <savvas@crate.io>
Date:   Fri Mar 8 14:47:00 2019 +0200

    Implement and expose 'pg_type.typarray' column

commit 90165e5eb3add1489637133a92f7424f25dad652
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 8 11:01:43 2019 +0100

    Fix exception handling in SysSnapshots
    
    `repository.getSnapshotInfo` can raise an exception if the snapshot is
    unavailable or can't be read.
    
    This shouldn't affect queries on `sys.snapshots`.

commit 9c2a42610448e917ea345663f21e3252c247c2d7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 7 15:08:50 2019 +0100

    Replace manual error raising with assert methods in JmxIntegrationTest

commit 608c1e8bd68678f35bf5f980398d3cc0a74e4977
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 7 14:41:20 2019 +0100

    Remove the deprecated avg duration and frequency JMX metrics

commit 8da1ba368cb50a84bde6765758967a2c93dd82a6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 8 10:07:17 2019 +0100

    Remove enterprise enabled distinction in PrivilegesMetaDataUpgrader
    
    If a user is using the community edition, there are no UsersMetaData, so
    no migration will be done anyway.

commit cee5816c1c83c64059b6919a8d8be0449f4e7722
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 7 14:03:46 2019 +0100

    Remove CollectorFieldsVisitor
    
    The `addField` functionality wasn't used and what was left was basically
    equivalent to what the `SourceLookup` already does.

commit 31b271bb1fcc71daa1c5094aa49ae61e732c5b39
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 7 12:53:10 2019 +0100

    Remove unused functionality from itest layer

commit b3d677199c46421aa419a80103dcef8885ad4412
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 7 11:29:22 2019 +0100

    Remove dead FilterRepository

commit 21dcb0935dd194b232bec41174c6abc617ed39a0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 7 11:29:09 2019 +0100

    Remove unused methods in FileSystemUtils

commit f371fe0eacca1d4585e02b22d03262cfc70d699f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 7 11:01:58 2019 +0100

    Remove RefreshPolicy from write operations
    
    We never exposed a way to influence the refresh policy. It was always
    `None`.

commit 1697ec911aa7057d25b3202a025ef0702c5db095
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 7 10:01:43 2019 +0100

    Remove PATH_JOINER constant
    
    We can replace the usages with `String.join` or `StringJoiner`.
    Moving from guava utils to stock java utils.

commit f0f53ced08fde3d668148a0f3ef0f4effd9d49aa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 6 11:29:48 2019 +0100

    Remove submodule calls from Jenkinsfile
    
    Since the Jenkinsfile is bound to the state of the repo we can remove
    the submodule calls as there aren't any submodules anymore in the
    current master.

commit 8a2542786e6c2b4343828fd01a698da149cc9310
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 6 11:27:36 2019 +0100

    Apply a timeout to blackbox tests
    
    We've had some tests run for 10h+ blocking some of our slaves.

commit 0575ff8a872ddcb1a731598e8059c635700664d8
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Mar 5 16:09:20 2019 +0100

    Add a gradle task to release a CrateDB Community Edition distribution where Enterprise related libs and plugins are excluded.
    
    Include the bin and config folder explicitly to the community edition distribution. Unfortunately gradle is skipping these folders in a custom distribution for unknown reasons.
    
    Extend developer documentation to add community edition build.
    
    Add bin/config folder explicitly in main distribution for consistency.
    
    Package enterprise related libraries to lib and not to lib/enterprise.
    
    Rename crate-community-edition to crate-ce and modify dev docs.
    
    Remove /lib/enterprise from CRATE_CLASSPATH, because its not needed anymore.
    
    Remove /libs/enterprise from crate.bat.

commit cc49e034bc2bb3d776ec90624f93b6136ff31d43
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 6 14:35:03 2019 +0100

    Remove PortPool from blackbox tests
    
    The global `GLOBAL_PORT_POOL` instance was misleading. The way we invoke
    the tests in our CI (`./gradlew hdfsTest monitoringTest gtest`) we call
    3 separate processes in sequential order. Each process does a new
    import. So we had 3 `GLOBAL_PORT_POOL` instances.
    
    This removes the `PortPool` altogether, as the locking was also
    unnecessary. (We're not running the tests multi threaded)
    
    This all gave a false sense of security that didn't function the way it
    was intended.

commit a6821ee4b635c2a05f45b4903d247d9e4dd5c19a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 6 09:47:34 2019 +0100

    Make PARTITIONED_TABLE_PART package private
    
    Internals of the encoding scheme of indices or templates shouldn't leak
    outside but be encapsulated within IndexParts.
    
    This should help avoiding bugs like in 9380b8a3f71d652492d0e651f04160bc6d524406

commit b59ff73b02c9f89754f9f8be2d15bb8095e9df7d
Author: Savvas Makalias <savvas@crate.io>
Date:   Tue Mar 5 10:45:34 2019 +0200

    Char sequence \\' in Escaped String Literals result in ParsingException

commit 286d974aa377614ddc18782e79b2c4a9765f02b3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 6 10:16:16 2019 +0100

    Fix java version parsing for JDK 12 variants
    
    Running CrateDB with the following java:
    
        ↪  java -version
        openjdk version "12" 2019-03-19
        OpenJDK Runtime Environment (build 12+33)
        OpenJDK 64-Bit Server VM (build 12+33, mixed mode, sharing)
    
    Resulted in an error in the logs:
    
        [ERROR][i.c.e.r.s.c.n.JvmVersionNodeCheck] [Cima Ovest] Error
        parsing java version=12 error=java.util.NoSuchElementException
    
    And the cluster check appeared, saying that 12 must be >= 11

commit b45ab5343f4770612e8655437a93e267453d5f50
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 5 17:38:23 2019 +0100

    Remove more unused components

commit 18da25ad87f61614aca31924c50de11e7c045402
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Wed Mar 6 08:00:05 2019 +0100

    fix formatting

commit 76a8d753c938f28439bcf557ae23a7037ae58a9a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 5 14:06:28 2019 +0100

    Restructure blackbox tests and switch to built-in python unittest
    
    - We can get rid of zope-testrunner which in our case didn't bring any
      benefits
    
    - With this new structure the editor tooling works better due to less
      PYTHONPATH magic
    
    - We get resource leak warnings. This commit also includes fixes for
      most of them. (One requires a crate-python upate)

commit 9380b8a3f71d652492d0e651f04160bc6d524406
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 5 09:57:26 2019 +0100

    Fix template upgrade logic to handle templates in custom schemas
    
    The template upgrade logic wasn't applied to templates in a custom
    schema. This broke inserts into partitioned tables that were created in
    earlier versions with settings that have meanwhile been removed.

commit b73a43f4ff3b79f252fe89925b0b8ff47b2ee81b
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Tue Mar 5 10:45:02 2019 +0100

    Change mocking of Inputstream#read from ArgumentMatchers#any() to ArgumentMatchers#any(byte.class) to be more specific.

commit 5346fc21229b35111ae8b10be2e5bee28cae9add
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Mar 4 12:12:04 2019 +0100

    Replace depedency Securemock with Mockito. CrateDB never used a SecurityMananager therefore we can use plain Mockito.
    
    Fix Unit Test by changing ArgumentMatchers#anyMap to ArgumentMatchers#any. ArgumentMatchers#anyMap does not support null values anymore in Mockito.
    
    Fix Unit Test by changing mocking of Inputstream#read.

commit d83b533929c31627bd446cf632f1ab83961618c1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 4 23:23:44 2019 +0100

    Remove ConcurrentDequeRecycler
    
    We didn't document the `cache.recycler.page.type` setting, so it was
    only used occassionally in tests.

commit d504b729de72e1d3672d741bbd1a74269bc781d2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 4 22:39:15 2019 +0100

    Remove unused MergeStats

commit 3c7427a7b0b25386caf77a953b5cf3945c596a26
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Feb 21 16:31:49 2019 +0100

    Implement object data type with inner types.
    
    Inner types of object typed columns will now be resolved and value
    types are ensured. This makes it possible to be complete type safe
    on object column values and also improves streaming.

commit 92b1a75cc4abbf161f7b7606bcf8fb2da10f3753
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Thu Feb 28 14:04:03 2019 +0100

    session settings docs copy edit

commit f1c9ddb059e66096d816a179a845d4c1313dc60c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 1 16:30:37 2019 +0100

    Remove the node ingest setting
    
    We never exposed this and removed ingest related components

commit 653b4ec9fe50346c5c9229c246e4b08497a6c8e7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 28 15:03:55 2019 +0100

    Set log level for ignored set session statements to info
    
    `warn` seems a bit too much as these messages have informative character
    and are not worrysome from a operations perspective.

commit b2f72a4cea16e36fc3cad0a904a3ae8e93a0f78f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 1 09:13:34 2019 +0100

    Remove TypeFieldMapper
    
    We don't expose `_type`, so users can't query on it.
    And the _type facility is also going to be removed in ES.

commit e05b7729d2de88fcc065052bfd524337680eed4a
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Thu Feb 28 17:40:16 2019 +0100

    Fix odering of MetaDataIndexUpgrader

commit a4e20eeb13fd4e37d3d94bd4362a4da4c3d1d799
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 28 13:24:24 2019 +0100

    Make reads against the metrics histogram thread-safe.
    
    The `ConcurrentHistogram` is only thread-safe for writes, not for reads.
    As recommended in the documentation of the `ConcurrentHistogram` this
    changes the code to use a `Recorder`.
    
    It also introduces a `MetricsView` as a means of indirection to create a
    "read-only" histogram only once. (The column expressions of the
    `sys.jobs_metrics` table each called `histogram` individually)

commit 4b37fc360e42d4d9a5555f9abe89a6f6590574a5
Author: Savvas Makalias <savvas@crate.io>
Date:   Thu Feb 28 00:59:06 2019 +0200

    Support backslash escaped single-quote in Escaped String Literals

commit 5d1d2791990f87ffa96a8096c4ead4ff3df9b086
Author: Savvas Makalias <savvas@crate.io>
Date:   Wed Feb 27 13:30:01 2019 +0200

    Fix '\\' handling in Escaped String Literals
    
    The escaped backslash char of the double backslash char sequence (i.e. '\\')
    in the Escaped String Literal was ignored and as a result, the second backslash
    was considered as the escape char for a consequent match. Correct behavior
    is to output a single backslash char which is not considered as an escaped char.

commit 4c40fbb75539ec47de7d36294d4a37d74888c08d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 26 09:49:47 2019 +0100

    Remove UidFieldMapper
    
    Cherry pick of ES upstream PR 29224

commit e108482126c6ade2916723bff9d8de2525e7109b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 25 17:56:21 2019 +0100

    Extend adapt-es-path.py script to handle deleted files

commit ec8a0d57807420f44e7952f6a2167cee2c8114a9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 25 16:32:34 2019 +0100

    Remove unused index mapper related code

commit 8933baef8f11432847c6579a2666be2792d233af
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 22 16:53:14 2019 +0100

    Make error more user friendly if a user attempts to decommission a node
    
    Instead of:
    
        UnsupportedFeatureException: Can't handle "AnalyzedDecommissionNodeStatement{nodeIdOrName=Literal{Wilde Leck, type=string}}
    
    The users will now get:
    
        User "<name>" is not authorized to execute statement

commit 21d1c811913d47ac189992072b7b5ed139b445e4
Author: Savvas Makalias <savvas@crate.io>
Date:   Mon Feb 25 16:59:31 2019 +0200

    Remove unused Setting: 'cluster.graceful_stop.reallocate'

commit c696c6358b781d5d074bbdcd53398e6ee82666cd
Author: Savvas Makalias <savvas@crate.io>
Date:   Mon Feb 18 10:07:30 2019 +0100

    Support string literals with c-style character espaces

commit d63e302040f9d57fe045e2b147156cd35e4d72ee
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 25 12:13:01 2019 +0100

    Remove unused nested field related code

commit e062da8b131b9e1444e8430e4b58e45e97d967a3
Author: Autophagy <mika@crate.io>
Date:   Mon Feb 25 14:11:48 2019 +0100

    Reflect 3.2.4 release

commit 5084e0f4dcea34e2c803bb2ff0f87c7bb20e7c91
Author: Savvas Makalias <savvas@crate.io>
Date:   Mon Feb 25 14:16:32 2019 +0200

    Ignore .gradletasknamecache file

commit 7d03c47c3565433f189e35f54063dff4e126018e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 22 16:37:16 2019 +0100

    Move most ReadOnlyNodeIntegrationTest test cases into a unit test
    
    We don't need to spin up nodes and everything to verify that we
    categorize the statement correctly.
    
    One integration test to make sure things are wired up correctly would be
    enough. This still keeps some more as integration tests because we
    currently don't have an easy way to generate the repositories in the
    `SQLExecutor` cluster state and the statements in question to eager
    repository/snapshot validation.

commit 34bc47390aeadc5a5bfded645cb13b6073a7081f
Author: Andrei Dan <andrei@crate.io>
Date:   Fri Feb 22 15:16:26 2019 +0000

    NestedLoopJoin: don't switch tables if order by was pushed down.
    
    We allow order by push down optimisation for the nested loop join if the
    order by is on fields from the left relation because the nested loop preserves
    the order of the left input relation.
    This commit prevents further applying the "swap left and right relation"
    optimisation as then, the previos left and ordered relation would end up
    on the right side and the join results would not be ordered anymore.

commit be084585e95e5b005991ade0008897e2cf6b25e8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 21 17:44:37 2019 +0100

    Remove deprecated ON DUPLICATE KEY syntax

commit 9c242dc14f45a0fc8f7f958caf57823d655c256c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 20 16:15:23 2019 +0100

    Remove more unused ES components

commit fcb930c961d3eff068eada499a47dabd85061e99
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 21 14:09:37 2019 +0100

    Exit with a more friendly error if there is no java installation

commit 470157768b60f8eaf1daeadf18732e83aabbaac6
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Thu Feb 21 14:38:43 2019 +0100

    upgrade admin-ui to 1.11.4

commit 9eb897cd1a514637314ed4ec6b00c79ee123da94
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Feb 21 15:21:48 2019 +0000

    JoinIntegrationTest: reset table stats and circuit breaker after tests that alter them.

commit d7e9b0210ba21d026fd8db7a956daedd257f4b1b
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Feb 20 18:00:01 2019 +0000

    Create a new stream every time we request the iterator of a stream backed iterable.
    
    The GroupBySingleNumberCollector exposed an Iterable backed by a Stream
    as a final (finisher) result. Iterable doesn't prevent the user from calling
    iterator() multiple times but java streams cannot be re-iterated.
    This fixes a possible "stream has already been operated upon or closed"
    exception by using a new stream on every Iterable.iterator() call.

commit b6a54d1d738a34a9dbe6ca33dd5a129a24db183d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 20 13:59:52 2019 +0100

    Migrate ClusterBlock from Streamable to Writeable

commit 39635e45876c56c445d1472bd8f9bb7c095ace96
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 20 13:59:35 2019 +0100

    Add script to cherry-pick patches from ES upstream

commit d06f1b94813689634e94d1e14004d299427b9582
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Feb 18 20:11:36 2019 +0100

    Remove deprecated log methods
    
    Fix prebuild example jars to work with new Logger

commit 90561f53af6f54dac0172196ea58a1480123e64b
Author: Michael Kleen <michael.kleen@crate.io>
Date:   Mon Feb 18 17:17:02 2019 +0100

    Change calls to deprecated Loggers#getLoggers to LogManager#getLoggers

commit 802d4c38226fecb392c46c8c7742e444f965dece
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 19 16:26:53 2019 +0100

    Remove SystemCallFilter / security related components
    
    System call filters can also be set by external systems, like `systemd`.
    
    Although it is nice that CrateDB locks itself down by default, this is
    not our expertise and we'd rather like to focus on other things that
    cannot be solved by external components.

commit 548df077ea83ed045313451be51ae3ea75c7dd4f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 19 15:39:40 2019 +0100

    Remove more unused ES components

commit b05f466a6f0bccdf6ccf83e5d9c2261e0bc6ad1c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 19 15:13:11 2019 +0100

    Remove unused properties from QueryShardContext

commit e3b6ddd976d8b378ce4459f89b7f810806607954
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 19 16:40:06 2019 +0100

    lgtm: Set java version
    
    Otherwise it attempts to build with Java 8

commit 762cb1951569cd5826bebb40f90b43d37c186571
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 18 15:49:28 2019 +0100

    Remove BWC error handling from SettingsModule

commit d6d100a09801686e178994cd297fb12050b3205f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 19 11:43:27 2019 +0100

    Remove the AutoCreateIndex class
    
    We forced the setting to false and it isn't in use anymore.

commit 035a7c107a1830416268a029181528f1bbce189f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 19 11:32:06 2019 +0100

    Remove indexing slow log code
    
    Not used, we've our own jobs log based slow logging.

commit e347e68f72dab76b97f065ad226316ac03b1388d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 18 20:54:41 2019 +0100

    Remove more unused ES components

commit 8cb530c388746812fdb27a7f50c6571ad8419ff7
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Feb 19 10:31:39 2019 +0000

    Update sum_of_durations column description to mention the value is in ms.

commit f8c719a56621bf495d9799ce02ac70d832ac5ecb
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Feb 19 08:57:37 2019 +0000

    Correct sys.jobs_metrics table name in changes entry.

commit 10cd10f3f2a40b8c862623c66bc759aee107b3fa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 18 12:43:14 2019 +0100

    Bump java version to 11

commit ff1b1e8eb1818359718a5160bb783989aa23636d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 18 14:46:11 2019 +0100

    Remove ingest framework and mqtt
    
    Both were deprecated for removal.

commit 43607586a6d633ec3b8852ab20eb7b80bfeff5ae
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 18 11:41:02 2019 +0100

    Remove more unused ES components

commit ac74c8be28f86aba2de5eb8a63afc9d7c204789d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 6 13:58:55 2019 +0100

    Replace ES branding with CrateDB in some log messages

commit fc354a95f7244098c60ca2d8e3b51e9ed6e2928c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 31 15:57:09 2019 +0100

    Remove unused ES components

commit 8bb1e05b4c139ad4edc27214f58b3058d54bb643
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 31 14:36:07 2019 +0100

    Remove the http.pipelining setting
    
    Got deprecated and has never been documented / exposed in CrateDB

commit a589aac147c802b67c29afb749df1096e1ee28b8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 31 14:14:29 2019 +0100

    Remove the deprecated http.enabled setting

commit 1791c115fc1477a29802abaa29adf5d65df4280c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 30 18:25:55 2019 +0100

    Remove pre CrateDB 3.0 index compatibility code

commit 6cadd5fbdf1112c00153fb8633780b74ec71c2d8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 30 17:56:29 2019 +0100

    Remove versions prior to CrateDB 3.0

commit 468a392eea3b86cb3ac5322abbc4515b2269027e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 31 10:43:56 2019 +0100

    Remove the index threadpool and rename bulk to write

commit 49708264656bc03b084718f07ca0f02e6a2f596f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 30 16:18:17 2019 +0100

    Merge the two Build classes

commit 3a7b21657ac1ef699770df76ea283a8e2ef5ad99
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 25 16:00:35 2019 +0100

    Merge the crate Version class with the ES version class

commit 3cf8169561a45293f40fc0d0e07801e6095ca38f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 24 17:08:25 2019 +0100

    Remove streaming related version checks

commit c70aea8ba10e6ca72e833cec86643489e23ab060
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 17 17:52:55 2019 +0100

    Remove ES components not used in CrateDB

commit 603ce0d406eef957602fea443dffa7d5ef6d5f5b
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jan 14 09:15:25 2019 +0100

    Remove Elasticsearch REST API
    
    CrateDB uses it's own engine to write and read data. Accessing or
    even writing data using the ES API could lead to inconsitent
    data/state.
    Also lot of functionality exposed by this API was never offically
    supported by CrateDB.

commit b99ae47741721aba36cb40c9ec847ce7ffebf41f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 11 10:50:01 2019 +0100

    Remove ES components not used by CrateDB

commit cee831f6dc403bdf4a9a1406cb189ead0ccf7b4a
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jan 10 11:27:36 2019 +0100

    Remove ES components not used in CrateDB
    
    For example the secure-sm module.

commit 23461f6526471ce7534ce8dbdf6aab8fd4374bd5
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jan 10 10:02:47 2019 +0100

    Copy over required ES sub-projects from ES fork upstream module
    
    Remove ES upstream git submodule.
    This is the first step to take over relevant ES code instead of including
    the whole ES fork. CrateDB already only uses some parts of ES including
    CrateDB relevant patches. Moving the relvant code to the CrateDB code base
    lowers the complexity of patches and also makes it possible to only include
    what is really needed (< decreases code size and thus complexity).

commit 2e052a8a19e49ca3a32693efffebe0c110cfdf80
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 18 12:04:46 2019 +0100

    mergify: Change 3.1 backport rule to 3.3

commit 89c047589e222e7474a625245504f073fa958c76
Author: Andrei Dan <andrei@crate.io>
Date:   Fri Feb 15 14:38:27 2019 +0000

    Expose the failed count QueryStats metric.

commit 6f9d2d50d076b9120f553e8eb8965ee5149b3d51
Author: Andrei Dan <andrei@crate.io>
Date:   Fri Feb 15 14:33:18 2019 +0000

    Record the failed statements count, grouped by type, and expose in sys.metrics.

commit 5ffb8043eeff75c236d9b9e18c7bc203447a44d8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 15 16:20:24 2019 +0100

    idea: Change unused import inspection level to error
    
    To align with checkstyle which prevents us from having unused imports.
    
    This doesn't prevent intellij from compiling code with unused imports,
    but makes unused imports a bit more visible.

commit 6d5c1ab201c41891172574184a57f41698773e6f
Author: Andrei Dan <andrei@crate.io>
Date:   Fri Feb 15 11:24:14 2019 +0000

    Move deprecation changes under the Deprecations category.

commit e436bbf47d59216ab29d5605d0b55552f62a9c5b
Author: Andrei Dan <andrei@crate.io>
Date:   Fri Feb 15 10:23:07 2019 +0000

    Mark the query frequency and average duration QueryStats metrics as deprecated.

commit 486deb9ebddd21c16dc0ef17ef98bd9c53adf2a3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 15 11:11:53 2019 +0100

    Fix null constraints check for partitioned columns
    
    The `ReferenceResolver` used to resolve the values for the null
    constraint checks always returned null values for partitioned columns.
    
    This prevented inserts from subquery into partitioned tables with a not
    nullable partitioned column from succeeding.
    
    Fixes https://github.com/crate/crate/issues/8244

commit 1df6dcb50883cb0f4d154ade99585a82597483f3
Author: joemoe <johannes@crate.io>
Date:   Tue Feb 12 10:52:13 2019 +0100

    Clarified the casting documentation on changes shipped with 3.2.

commit 55bda381b9a48b92aeadeb5be029ac4b1b358b1a
Author: Michael Kleen <mkleen@ipioca.local>
Date:   Wed Feb 13 16:57:42 2019 +0100

    Remove uneeded dataset

commit 639b1ac2e4cd16f83643993e73ef5aea544c0144
Author: Michael Kleen <mkleen@ipioca.local>
Date:   Wed Feb 13 16:30:48 2019 +0100

    Add testcase + testdata for upgrade check

commit 41b4a143e248f1d0973362eade70b15c691d79c1
Author: Savvas Makalias <savvas@crate.io>
Date:   Wed Feb 13 16:06:17 2019 +0100

    Mark setting 'cluster.graceful_stop.reallocate' as deprecated

commit f4ad2d4fa90c7f127fbb5ac5b532e54f5fc9424d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 13 17:02:59 2019 +0100

    Avoid blockSize variable re-assignments in RamBlockSizeCalculator
    
    Use intermediate variables to make it a bit more readable.

commit f675a9353cf343af85e9ddff9d28126c8aa128cc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 13 16:34:53 2019 +0100

    Remove generics from HashInnerJoinBatchIterator
    
    Since we depend on `Row` elements for materialize anyway, we can drop
    the generics.

commit d02df5fca8cc0e766c3a05caa0890cda30d35eeb
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Feb 12 15:09:23 2019 +0000

    Expose the totalCount and sumOfDurations query stats.

commit bd64324671a427a149a3e3c1a72c7c9658444324
Author: Savvas Makalias <savvas@crate.io>
Date:   Thu Jan 31 14:59:19 2019 +0200

    Add window batch iterator benchmark

commit 97bc226b8835c9cbb8e240af21aeab6ee2d7d46f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 13 14:29:46 2019 +0100

    Handle dynamic property and _meta version changes in template schema updates
    
    Adding a dynamic column to a table created in an earlier version could
    fail with an error like `Can't overwrite elasticsearch=6010499 with
    6050199` or `Can't overwrite dynamic=true with true`
    
    See https://github.com/crate/crate-qa/pull/104 for complete end-to-end
    integration tests.

commit e4f14082ddbbb63e605f829ff78ff5a36944f79c
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Feb 13 14:23:09 2019 +0000

    Change the blackbox tests to run on a large agent.
    
    We're spawning multiple crate instances in monitoring tests so we need more
    memory.

commit 3626127d332f8865ef88bca4eca27decd9a0272d
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Feb 13 14:19:44 2019 +0000

    Change itests to run on a medium size agent (shouldn't require so much memory)

commit 2357e6586299d562f2576af0adda81391ac99d0d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 13 10:19:50 2019 +0100

    Mention try_cast in value-expressions documentation

commit 38454f566b437dd1924cfc9b195ba25b0c1d3afa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 12 12:39:21 2019 +0100

    Fix generated partition column handling in inserts
    
    The logic to resolve an `InputColumn` didn't work correctly if the
    partitioned column of a table is based on a generated column which uses
    a child column of an object column.

commit 180e45ce23b2ddc154e9e8d32bbff94044019486
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Feb 11 17:05:14 2019 +0000

    Query stats are exposing the metrics based on the sys.metrics measurements.

commit d08c33fede5d6fb26bf050484aa5301f8543742e
Author: joemoe <johannes@crate.io>
Date:   Tue Feb 12 10:15:26 2019 +0100

    fixed capitalization in headlines.

commit 984c59a82ae2780509d7e548ba2bcc2090e4e53b
Author: joemoe <johannes@crate.io>
Date:   Mon Feb 11 16:39:43 2019 +0100

    added links, more information and structure to the 3.2. release notes

commit 578e0b388f46ae8e4f35b42dc1d7c44f1605d0c6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 8 11:56:21 2019 +0100

    Run blackbox tests also on each PR

commit f3e0b2b6c5f71dc13ce701789d91610ca17ed842
Author: Johannes Moser <johannes@moser.wtf>
Date:   Mon Feb 11 17:00:42 2019 +0100

    Update blackbox/docs/appendices/release-notes/unreleased.rst
    
    Yep, better
    
    Co-Authored-By: scjimenez <33090557+scjimenez@users.noreply.github.com>

commit 28491eea18a9e4de48a3673f46f74178ff29cd52
Author: Stephanie <33090557+scjimenez@users.noreply.github.com>
Date:   Mon Feb 11 16:27:23 2019 +0100

    Update unreleased.rst

commit 2f86e215ecc3f438d6ee9ea8526896f7832f84a1
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Feb 11 16:01:11 2019 +0000

    Build the main enterprise:functions module under a test configuration.
    
    We run the benchmarks as tests so in order to test the functionalities
    defined in enterprise:functions we need to make them available in the
    test jar.

commit 1ab720ea0e8f9432878747861c1c38f5a6ff06c8
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Fri Feb 8 14:08:35 2019 +0100

    Fixed an issue that caused the basic auth prompt to fail in safari

commit f258de43101154fed2f93f1a739f888bf12a324c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Feb 10 21:26:04 2019 +0100

    Move ESClusterUpdateSettingsTask logic into plan
    
    There is no need for the indirection.

commit dd17fe6189f9088d78c44eb6845a10c75362e125
Author: Andrei Dan <andrei@crate.io>
Date:   Fri Feb 8 14:24:23 2019 +0000

    Expose sum_of_durations in sys.jobs_metric

commit 124e11fc224cc9cd55187e21b73963b6dd252c76
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 8 20:45:23 2019 +0100

    Inline logic from DeleteAllPartitionsTask into plan
    
    There is no advantage to having an indirection.

commit 1b8b4247e946d7173a68d0d86a633a37e2708a08
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 7 22:56:13 2019 +0100

    Remove Mqtt mentions from dev docs
    
    It's going to be removed soonish.

commit 81db6de7c064a9ae9df5d709e50e7f068b1709b1
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Feb 7 16:27:40 2019 +0000

    The ChainableActions undo mechanism doesn't work for a one action chain.

commit 04d5ea36beac52dcdcea0953ab47449608603c90
Author: Savvas Makalias <savvas@crate.io>
Date:   Thu Feb 7 16:25:42 2019 +0200

    Fix 'availability:none' case for node decommission

commit c43a310f26074b56d1b7ca7660016c86277e77bb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 7 15:29:54 2019 +0100

    Force Pygments to 2.3.1 for rtd builds
    
    Looks like rtd defaults to Pygments 2.2.0
    (https://github.com/rtfd/readthedocs.org/blob/8f0c78dde5edcc85acf90462a8518735a25482d3/readthedocs/doc_builder/python_environments.py#L281)
    
    Which then fails because it is used with python 3.7:
    
    ```
    Traceback (most recent call last):
      File "/home/docs/checkouts/readthedocs.org/user_builds/crate/envs/latest/lib/python3.7/site-packages/pygments/lexers/sql.py", line 350, in get_tokens_unprocessed
        line = next(lines)
      File "/home/docs/checkouts/readthedocs.org/user_builds/crate/envs/latest/lib/python3.7/site-packages/pygments/lexers/sql.py", line 284, in __next__
        return next(self.iter)
    StopIteration
    ```

commit 63292c651fc80b2975bcff14967f70d5a2b665bf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 7 20:42:07 2019 +0100

    Update gradle to 5.2

commit 83b861856f3f80c31336074a67f93827507127d6
Author: Autophagy <mika@crate.io>
Date:   Thu Feb 7 20:49:03 2019 +0100

    Reflect 3.2.3 release

commit af73b67625ab258ef50c100f7718731d883747a5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 7 15:05:37 2019 +0100

    Fix parsing of 12-ea java version strings in node check

commit 4a158581ef8dadff07398f36328d18833dbe93e0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 6 18:46:30 2019 +0100

    Run tests with jdk12

commit fb884eef74426aeded4bfb96e2b5d7bfdc9c259d
Author: Savvas Makalias <savvas@crate.io>
Date:   Wed Feb 6 15:45:51 2019 +0200

    Mark the `USR2` signal node decommission as deprecated

commit 774c1a7bf95a5f80dc9e04c1b9aa2c57ce7fc565
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 6 11:35:02 2019 +0100

    Add a node check that checks the JVM version
    
    We're planning to drop support for JVM < 11 with CrateDB 4.0. This adds
    a node check to inform users about it.

commit 74aaaf9ed4ff2b5ef42aec099bc1118e9fe18edf
Author: Savvas Makalias <savvas@crate.io>
Date:   Tue Feb 5 12:36:20 2019 +0200

    Change node decommission statement to blocking

commit 96ff5344bb8ec0b653f8cde438b5e0ec39d7036a
Author: Autophagy <mika@crate.io>
Date:   Wed Feb 6 10:17:21 2019 +0100

    Reflect 3.1.6 release

commit dc0d0377fb15e0f83b49d0326304184dbeeeece4
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Feb 4 15:20:30 2019 +0000

    Enable jobs counter throttling for IO iterators regardless of partition creation.
    
    6ab7b340f248d34f1ea8a0bf9a5905222b0ea247 intoduced a regression where the
    node jobs counter throttle would come into effect only if the partition
    creation throttle was active. This commit corrects the logic for the 2
    types of throttle to work together and not be exclusive.

commit ed82104c8e088b33f37c6df257a06b7deb066aa1
Author: Stephanie <33090557+scjimenez@users.noreply.github.com>
Date:   Thu Jan 31 14:08:26 2019 +0100

    Update README.rst

commit f0977a527be10d825949ccf802bc963f23ec21d5
Author: Stephanie <33090557+scjimenez@users.noreply.github.com>
Date:   Thu Jan 31 12:43:30 2019 +0100

    Update README.rst

commit 90a649940d087dddef4e740f62ae4ef5b59df450
Author: Savvas Makalias <savvas@crate.io>
Date:   Thu Jan 24 16:37:40 2019 +0200

    Implement node decommission using sql statement

commit 3fdb751526388f646a40582c3627b0786e21700b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 30 09:50:09 2019 +0100

    Fix null argument handling in unnest
    
    Fixes https://github.com/crate/crate/issues/8177

commit c2eef30788932cb895d237b625c486de9b26b2a8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 29 15:55:26 2019 +0100

    docs: Clarify that sys checks won't be disabled with the fs allocation decider

commit 46d20d28e535cae3c9422df52fae53ecd2f78444
Author: Autophagy <mika@crate.io>
Date:   Tue Jan 29 15:27:34 2019 +0100

    Reflect 3.1.5 release

commit 1887609619d7fb02f953160962e02f210c648b9f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 29 12:02:41 2019 +0100

    Avoid int truncation in QueryStats avgDurationInMs calculation

commit 08988add77b801be324465a62db87a8736bcdd34
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon Jan 28 16:44:05 2019 +0100

    update screenshots

commit 86df930b607e854c1f971fd608053f2bf89072b4
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Jan 28 15:27:16 2019 +0100

    Re-enable the annotation processor for jmh (disabled by default with gradle 5+)
    
    See https://github.com/gradle/gradle/issues/6296

commit 182d471ddea4ad764c2203a610cbaca8ee648a00
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jan 28 11:10:29 2019 +0100

    Only throttle on update/delete if IO is involved
    
    If no IO is involved to collect the source data used for UPDATE or
    DELETE operations, we don’t want to throttle as we want to free the
    in-memory source structures as fast as possible.

commit 6ab7b340f248d34f1ea8a0bf9a5905222b0ea247
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 25 14:51:57 2019 +0100

    Only throttle on upsert if source IT involves IO
    
    If IO (disk, network) is involved the source iterator should pause when
    the target node reaches a concurrent job counter limit.
    Without IO, we assume that the source iterates over in-memory structures
    which should be processed as fast as possible to free resources.

commit 91a670ef081d6755a6f8e509c187d5e4a836e6d7
Author: Andrei Dan <andrei@crate.io>
Date:   Fri Jan 25 13:55:30 2019 +0100

    Add benchmarks for the bounded and unbounded sorting collectors.

commit 455570b8988cd79070c8071347b31da80850ade1
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Jan 23 18:00:57 2019 +0000

    Use a threshold above which switch from a bounded to an unbounded priority queue.
    
    In order to process ordered queries we use a PriorityQueue to store the rows
    and then pop them in the correct order. This caused issues as before we used
    a bounded queue with the bound being limit + offset. This was overly pessimistic
    as the number of rows available in the table could be much lower than that,
    but the PriorityQueue container was reserving the memory for this worse case.
    
    This changes the implementation to use a threshold over which we switch from
    using a bounded queue to an unbounded queue that will grow as needed.

commit ab1ae9875c05268bb6005222d21e1fd4abfc1118
Author: Andrei Dan <andrei@crate.io>
Date:   Fri Jan 18 14:47:52 2019 +0000

    Make comment consistent with code.

commit ad70009b612cabede21df0775c659f3ae52b8a82
Author: Savvas Makalias <savvas@crate.io>
Date:   Fri Jan 25 13:21:57 2019 +0200

    Expose column pg_type.typnamespace

commit 0b3ff07071501b22a19686c7f178337b5c1257f1
Author: Autophagy <mika@crate.io>
Date:   Thu Jan 24 21:24:56 2019 +0100

    Reflect 3.2.2 release

commit 644c70b9fc91e1e22adf2178c220d80980f29d76
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jan 22 17:43:31 2019 +0100

    Add documentation note on how to use the G1 garbage collector

commit e2ab05afad3980359f0cd663def3af12107cf964
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jan 24 17:25:34 2019 +0100

    Ensure the license tool jar name contains no classifier suffix.
    
    Since Gradle 5.1, the classifier is null and thus the shadowJar tool
    will create a JAR without any classifier suffix.
    By setting the `classifier` to null explicit, the output JAR name
    of the licensing tool will always be the same.

commit 95aebf910d20278185583919e6f082ebf5c30b91
Author: Savvas Makalias <savvas@crate.io>
Date:   Thu Jan 24 15:09:35 2019 +0200

    Expose pg_type.typlen column

commit f150ed278c953b9f7a1f1526854d62b9c6695f8e
Author: Autophagy <mika@crate.io>
Date:   Mon Jan 21 14:40:37 2019 +0100

    Update the 'Writing Documentation' for developer docs
    These docs were outdated and no longer valid. Instead of invoking the
    bash scripts directly, we can now advise that developers run the test
    builds and tests via gradle, since this also ensures bootstrapping (and
    the developer no longer needs to care about that).

commit 80b66db02f1a14e8df53f444e189466014ed2f2a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 23 16:01:26 2019 +0100

    Add Jenkinsfile
    
    This integrates the Jenkinsfile into the repo so that we can have
    version-bound test configurations.
    
    Older branches for example might not support the newest JDK.

commit 51deebaeb6a39875181d60c75752b7885027ca3a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 22 15:11:29 2019 +0100

    Mark ingest framework as deprecated

commit f9a362db33bbae6bd852358c2a3ca8b17414a7a5
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Jan 22 14:58:15 2019 +0100

    hard wrap comments

commit 1da048d0f40d200de4c3b4cafb3fa55866f3ec00
Author: Savvas Makalias <savvas@crate.io>
Date:   Mon Jan 21 12:27:49 2019 +0200

    checkstyle: Activate SingleSpaceSeparator rule

commit 76bac2e2e60fd2ad259288a05acec19254c81e30
Author: Savvas Makalias <savvas@crate.io>
Date:   Mon Jan 21 10:55:20 2019 +0200

    docs: Update doc to indicate that some window functions are supported

commit 9ea607b14c558419db62e3842ad61524d52b27d3
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 18 18:01:11 2019 +0100

    Add `current_schemas(bool)` scalar function.
    
    The `current_schemas` scalar function does belong to the `pg_catalog`
    schema and thus support for schema based scalar functions was
    implemented.

commit 45e83d8b850c55f2c72139671e027bf0dc2e5886
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Jan 20 21:23:23 2019 +0100

    Upgrade gradle to 5.1.1

commit 7b104fb8507c36bb076398b4180046fffd43bc11
Author: Savvas Makalias <savvas@crate.io>
Date:   Mon Jan 14 11:54:47 2019 +0200

    Add window function testing framework

commit c5e2fc13df4c4d5b1397e4ebc65b5c304d8d4702
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 18 14:14:00 2019 +0100

    Replace indices exists high level API usage in tests

commit 7ae0de651b8c1e2e10e63ff9242fe0ecb6a4553f
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 11 17:12:01 2019 +0100

    Remove usage of ES client at the crate node settings test

commit 7ec7f0cbd1a11caa4582e607f08dca96650e4063
Author: Stephanie <33090557+scjimenez@users.noreply.github.com>
Date:   Fri Jan 18 12:52:36 2019 +0100

    Update CONTRIBUTING.rst

commit c7a3a107576e43768eac1973d7b0f0db04ba33a9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 18 11:04:42 2019 +0100

    Replace usages of ES search API in tests

commit 083298f5b76e297f484b74a1be1ecd38be9e73d7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 17 15:16:55 2019 +0100

    Tests: Change ColumnReference tests to avoid createIndex usage
    
    Extracted parts of the `QueryTester` so that the
    `DocLevelExpressionsTest` class uses a low-level API to create the
    IndexService and related required components as the high-level API will
    be removed.

commit 1244bf995c647b39d9dc2b9945fc2a44edeef1c0
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Jan 17 11:55:35 2019 +0000

    Implemented the first_value and nth_value functions.

commit 725eb5985ea2709531bcb50d13021488532a8d79
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Jan 17 11:56:17 2019 +0000

    Collect only the fields/references window function arguments (ie. don't literals)

commit 005564fe6a5369414c63fae525f3e4a36a8f39af
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Jan 17 09:57:44 2019 +0000

    Minor cleanups around window functions.

commit 69bb817d2d70f865c267208eb0c6637c131ff3f9
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Jan 17 14:39:43 2019 +0000

    Rename outputTypes to standaloneInputTypes used for memory row accounting.

commit 2ec73ed1846497ddb723540ea14a863a66df7148
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 17 11:39:15 2019 +0100

    Fix a NPE in TablesSettingsExpression

commit b5009ffe0ec7be5808e3f66073d9368fe0f0452a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 17 11:27:26 2019 +0100

    Tests: Replace some ES API usages with SQL

commit 21ecec07915eda6c5fbe8fdd36ad6c14c6d7acd2
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jan 17 11:00:20 2019 +0100

    Fix flaky sys.nodes time out test.
    
    If cluster state tasks are still pending on the master node, this
    test may fail with "no-more-master" related exception. Lets wait
    until all tasks are done to prevent that.

commit df416b16d7a309b1b60b92ac3e7138e150fa0e39
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jan 16 21:46:50 2019 +0100

    Centralize setting name/key building of custom analyzers.
    
    Use builder methods of the CustomType Enums for generating MetaData
    (persistent) setting names and setting definitions.

commit fbad037d794c1ceb20041c5a2fe9845996ebfc64
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jan 16 14:48:36 2019 +0100

    Add ``DROP ANALYZER`` statement support.

commit a131c70a83ffc76b03b1232325ab59010cc97763
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jan 14 19:36:59 2019 +0100

    Display custom analyzer settings inside information_schema.routines
    
    The definition of custom analyzers, char_filter, token_filter and
    tokenizer as string inside the
    `information_schema.routines.routine_definition` column.

commit b21e1387ac4dc6842854e66977e811ec7944c82d
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Jan 16 14:07:11 2019 +0000

    WindowFrameState holds all the rows in the frame.
    
    We started initially by having the WindowFrameState hold only the "new" rows
    in the frame because this made accumulating the rows in aggregations trivial.
    
    This however is not a consistent definition of the window frame. This commit
    changes it to hold all the rows in the frame (as one would expect) and also
    corrects the lower bound index to reflect this.

commit 9aaff9337ce66163524d0ca114f9d23a3af1c082
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 16 17:00:43 2019 +0100

    Remove ES GetSettings API usages in tests

commit 68a8e4bb94fec5d19c60f2867606677cf40feb93
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 16 13:36:48 2019 +0100

    By-pass ShardGetService and use IndexShard.get directly
    
    - We're always loading the source
    - We're not making use of the ParentFieldMapper functionality.
    - We're not making use of the metrics counting, so we can avoid the
    `nanoTime` calls.

commit 1bc99facb75b6d22d57723c1169fb05ff5c0b51a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 16 13:43:42 2019 +0100

    Remove the type property from ShardRequest
    
    We always use the same type constant.

commit cb34814c269eb8514f0de9e67692054a2dc8bd24
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 16 11:51:16 2019 +0100

    Remove Get API usage in InsertIntoIntegrationTest

commit c05b9202600d7b1f572192ef5f9e1df8eccc52df
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jan 14 21:06:59 2019 +0100

    reflect release 3.2.1

commit a3ff02628d5b91a4ea7352274e2fd22f7b143fb3
Author: Andrei Dan <andrei@crate.io>
Date:   Fri Jan 11 16:39:44 2019 +0000

    Implement the last_value enterprise window function.

commit cdd502e871d3e12594eebc37ab4ecba530aab821
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jan 15 16:25:05 2019 +0100

    Fix a NPE on to-inner-join rewritable outer joins
    
    If a function was used as a select symbol, it was removed by accident
    because it was compared directly instead of traversing into the function
    tree.
    
    Fixes https://github.com/crate/crate/issues/8103.

commit 9a6698677490f214e7637026e0b78f3376172941
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 14 12:08:07 2019 +0100

    Remove ES Index API usage from ArrayMapperTest
    
    Also splits the test into unit and integration tests

commit 9d0808161f0b0ac6789a723348fca84a3c18242e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 9 16:10:24 2019 +0100

    Remove DeleteByIdTask indirection
    
    This inlines the logic into the DeleteById plan. The separate task is a
    leftover from when we still had a Task interface for the execution
    logic.

commit a1d789fad30e09520a656c1bdf70690dfb0ab117
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 11 12:11:03 2019 +0100

    Remove createIndex and prepareIndex usage from TransportSQLActionTest

commit 74ae2837cf91a8db29e69277bcf3e4d77f44822b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 11 11:47:41 2019 +0100

    Remove testGroupByMultiValueField
    
    Tests a case that cannot be triggered via SQL API.
    
    Some of the ColumnReference implementation in questions also already
    have unit tests in place (e.g. `testIpExpressionOnArrayThrowsException`)

commit 9568acec67b74899127ea2016a455edc869ec022
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 11 11:37:39 2019 +0100

    Remove some ES API usages in tests

commit 86cbb6bc9491dae3cc29716bd68e3e36fa578d01
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 10 15:10:10 2019 +0100

    Change support probot message to refer to discourse instead of slack

commit ba2ad9ce28f1b9ba4285824c5e112324fa7cdc09
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 10 14:53:04 2019 +0100

    Add a pg_catalog.pg_description table
    
    The table is always empty as we don't support adding comments to
    database objects.

commit 387f5128d1a65dd8240c91bfb4406bc6d0d6a058
Author: Savvas Makalias <savvas@crate.io>
Date:   Wed Jan 9 21:54:22 2019 +0200

    Fix window functions evalution output ordering

commit ebb8cc56e4746197dabdefbe53c599a115a01699
Author: Savvas Makalias <savvas@crate.io>
Date:   Wed Jan 9 15:31:30 2019 +0200

    Implement row_number window function

commit 199d753712161530ec251b90f42fbf15ae98d121
Author: Savvas Makalias <savvas@crate.io>
Date:   Tue Jan 8 16:03:04 2019 +0200

    WindowFunction interface extends FunctionImplementation

commit f337a758e39f002d250d92ee0169926e8da187f0
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Thu Jan 10 14:57:05 2019 +0100

    improve doc notes for superuser

commit 104ec3a7d9d60804f64b77e17275e4acd32a2ee3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 10 12:11:44 2019 +0100

    Support any expression in the CASE operand
    
    Previously we didn't support operands like `OR` or `~` in `CASE
    operand`. This extends the support to allow all kind of expressions to
    improve compatibility with postgres.

commit 070df5a8b4ea5f2c0b55efd572328bf57f5a62b0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 10 15:29:20 2019 +0100

    Fix a NPE in `array_difference`
    
    If the first argument to `array_difference` was a column and the second
    argument a `null` literal it resulted in a NPE.
    
    Due to some implementation detail of the test framework this case wasn't
    caught although a test-case existed.
    
    This therefore replaces the `InputApplier` used in the test framework
    with a combination of `FieldReplacer` and `InputFactory` to have a
    behaviour that is closer to the production usage.
    
    If `assertEvaluate` receives too few Literal arguments it will now also
    raise an error instead of converting any fields to null literals
    implicitly. In most cases this is not what a user wanted.

commit 1fabcd40254696ecd3677c820af8ef8f08b93ce3
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Jan 10 13:37:52 2019 +0000

    Rename enterprise:hll to enterprise:functions as it'll hold multiple functions.

commit 127b1714257da25524f151bfa80bad046650c8cc
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Thu Jan 10 15:57:16 2019 +0100

    improve geo shape docs

commit c2ffe738e1fb4de70bc5a7caf73a07de780a123d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 10 16:15:49 2019 +0100

    Only build PRs on azure, no branch pushes without PR

commit 71871b685c071d0d38d4649791d0fee77523c07f
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Dec 19 11:27:28 2018 +0000

    Docs: Mention window functions under the `sql` section.

commit 42c2fb7d20e7cbfe85ae49201070e73348b6f297
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 9 17:20:53 2019 +0100

    Inline DropTableTask into DropTablePlan

commit b0a2e9e0da8a61b46e1e61f672629063934a865e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 10 10:59:40 2019 +0100

    Remove generics from BulkShardCreationLimiter
    
    It doesn't access the elements, but only the size of the
    `itemsByMissingIndex`, so we can remove the item-type generics.

commit 1adb48f994a4cfa98619c48f6c4e54f4c16b4461
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 10 10:54:13 2019 +0100

    Make the required arguments in BulkShardCreationLimiter concrete
    
    Using the generic `Settings` hides the information what is required.
    This makes the dependency on number of shards and number of replicas
    explicit.

commit 1f5e4cf7f6536d4bd8adb2e1ec6134373c70d843
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 9 16:29:12 2019 +0100

    Remove UpdateByIdTask indirection
    
    This inlines the logic into the UpdateById plan. The separate task is a
    leftover from when we still had a Task interface for the execution
    logic.

commit f45d430a5766592d40989a0083ac95dbfd311b54
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 9 16:45:33 2019 +0100

    Inline CreateAnalyzerTask into CreateAnalyzerPlan

commit e67e9c4ab421e3b9a3245d72bcd99b741c11e24a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 9 14:47:42 2019 +0100

    Fix FailureOnlyResponseListener to propagate failures correctly
    
    This fixes a race condition that could lead to stuck queries.
    
    If a job failed to be initialized correctly the
    `FailureOnlyResponseListener` erroneously marked the job as successfully
    initialized and called the `RowConsumer` with the failure. In some cases
    `consumer.accept` might already have been called, in that case the
    second call is being ignored and the failure was swallowed, leading to a
    stuck query.
    By marking the job initialization as failed the
    `InterceptingRowConsumer` will trigger an internal kill and cause the
    query to fail correctly.
    
    One case where this happens is if the `IncrementalPageBucketReceiver` is
    in use - it triggers the consumer eagerly - but it waits for an internal
    future to complete (via `loadNextBatch`).
    
    If one job initialization failed (e.g. due to a node being stopped),
    this future would never get triggered as it would wait forever for
    upstream results.

commit 21c7dc29da74264998ff191d6b7c2ea7f098108c
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jan 9 09:46:54 2019 +0100

    Rename sub-project `core` to `common`
    
    The former `core` sub-project does not contain *core* components of
    CrateDB but rather more *common* ones. The old, wrong name caused some
    confusion.

commit 7b55bd00bd5894a8e92732a2cee45e34ae00f262
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jan 8 16:56:38 2019 +0100

    Use buffered output streams on file writers
    
    This will improve performance by not writing to disk on every row.
    Relates https://github.com/crate/crate/issues/8034.

commit ca2de83bfe9e7a7c5a30893b462485459b90d8d1
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jan 9 09:48:37 2019 +0100

    Add mergify backport rule for 3.2, remove rule for 3.0

commit 27de09452d9d4ca3b86214e86e6ee94721329eb0
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jan 9 09:23:33 2019 +0100

    Bump version to 3.3.0-SNAPSHOT

commit f0eeb854335d7899d59dd931e8de61efe3489a63
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 8 15:34:30 2019 +0100

    Allow reads on table functions even if license is expired
    
    `crash` invokes queries like `select null as \"user\", current_schema as
    \"schema\"` on startup. These failed with `License expired`, causing
    crash to exit.
    
    This fixes the check to allow such queries so that crash can be used to
    enter a valid license.

commit 9cadfdec339a068dea122fd18f7c926317921684
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 8 10:43:10 2019 +0100

    Add support for casts to nested arrays

commit d4a90d2115cb64129e43dcff512cef91980ac925
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 8 10:16:46 2019 +0100

    Fix parameter type detection for nested relations
    
    The ``ParameterDescription`` message didn't contain the types for
    parameter placeholders inside sub-relations. That caused errors with
    postgres clients relying on that information.

commit 092abeba916573c7d9cff8e57dd852408307fbc5
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jan 8 10:48:20 2019 +0100

    Undo of every chained action must only be called once.
    
    This fixes the ChainableActions error handling to only call the `undo`
    rollback operation on each action once.
    Also ensure that each possible error will only occur once in the final
    result.

commit e5c95e8c3e32ac3f4ef3705f2d4dbdbdf6aa8371
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 7 13:58:34 2019 +0100

    Update tryOptimize javadocs to describe common implementation logic

commit adb20f275ce430f341c7489f60800e9854a62114
Author: Alastair Appleby <alastair@crate.io>
Date:   Fri Jan 4 11:30:34 2019 +0100

    Added example of using double quotes for nested table parameters
    
    Added extra blank line

commit 2ff1ce985ea1262b2ec82d9d3bc812c194211b60
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 4 11:16:30 2019 +0100

    Revert "Change `information_schema.columns.is_generated` to String type."
    
    This reverts commit f61642739158ef6116186acf570c6b392717723d.
    This commit breaks crate-jdbc and 3.2 bwc compatibility, changes are postponed.

commit 40d24b54401c45348bbb8870868fccd45799232b
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 4 11:14:15 2019 +0100

    Revert "Rename `user_defined_type_*` columns to `udt_*`."
    
    This reverts commit 1d068f63e1b37a7744a2920c23fbcec6296e9d20.
    This commit breaks crate-jdbc and 3.2 bwc compatibility, changes are postponed.

commit 1d068f63e1b37a7744a2920c23fbcec6296e9d20
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jan 3 12:21:20 2019 +0100

    Rename `user_defined_type_*` columns to `udt_*`.
    
    SQL Standard defines these column names prefixed with `udt_` instead
    of `user_defined_type_`.

commit f61642739158ef6116186acf570c6b392717723d
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jan 3 11:43:08 2019 +0100

    Change `information_schema.columns.is_generated` to String type.
    
    SQL standard defines ``is_generated`` as String and not Boolean.

commit f08ea2dea15505e5e120963a982a846fb8483b2d
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Dec 20 14:39:47 2018 +0100

    Fix sql parser to forbid repeated create table options.
    
    The sql parser allowed repeated ``PARTITION BY`` or
    ``CLUSTERED BY | INTO`` tokens on ``CREATE TABLE`` statements which
    resulted in a corrupted table.
    
    Fixes https://github.com/crate/crate/issues/8030.

commit 419ddfab9974487805408d432b78de272b22cb7b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 20 10:39:19 2018 +0100

    Don't add mappings from files in CreatePartitionsAction
    
    This is not required.
    
    - We ensure our partitioned table template always contains the latest
    mapping
    - We haven't documented anything about including mappings from a
    mappings directory
    - We don't have tests for this functionality

commit ecf2ee8795efe65b80345be213521eb455197ca8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 20 10:34:07 2018 +0100

    Remove index setting defaults logic from CreatePartitionsAction
    
    The templates for partitioned tables must always include the shard
    settings, otherwise something is wrong and we should let it fail to
    detect the issue instead of silently providing defaults.

commit ee15af7806690db2388cf46d4e3a9cb3875e3b7b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 19 20:34:16 2018 +0100

    Remove the DirectFallbackExecutor
    
    This removes the DirectFallbackExecutor in favour of a `forceExecute`
    method. It was difficult to reason about an isolated component. (Should
    it handle the RejectedExecutionException or not?)
    
    It is also fragile, if at some point it would receive a different
    executor the component itself would break.
    
    In the other cases where the DirectFallbackExecutor was used we already
    make use of `CompletableFutures.supplyAsync` which is safe (but it fails
    instead of running in the caller thread).

commit da315d31504f3760778971b8f31b02eac345e95d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 20 10:05:26 2018 +0100

    Bump version to 3.2.1-snapshot

commit b69afde02768fb4e5278b2d52d9705c7c4cf602c
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Dec 19 15:20:06 2018 +0100

    Use random PSQL port for blackbox tests
    
    To avoid any port binding issues.

commit 553fc0886dac929f9e9342d251a81fdcf16db8bf
Author: Autophagy <mika@crate.io>
Date:   Wed Dec 19 17:09:13 2018 +0100

    Changed gradle writing folders using outputs.file to outputs.dir
    
    Otherwise, it produces the following error:
    ```
    FAILURE: Build completed with 2 failures.
    
    1: Task failed with an exception.
    -----------
    * What went wrong:
    A problem was found with the configuration of task ':app:collectEnterpriseModules'.
    > Cannot write to file '/home/mika/sandbox/crate/crate/app/enterprise' specified for property '$1' as it is a directory.
    
    * Try:
    Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.
    ==============================================================================
    
    2: Task failed with an exception.
    -----------
    * What went wrong:
    A problem was found with the configuration of task ':app:downloadPlugins'.
    > Cannot write to file '/home/mika/sandbox/crate/crate/app/plugins' specified for property '$1' as it is a directory.
    
    * Try:
    Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.
    ==============================================================================
    ```
    
    I assume this was introduced with the Gradle 5.0 upgrade.

commit bc29ede532155a851a97d3f2905d97db9373ba77
Author: Autophagy <mika@crate.io>
Date:   Wed Dec 19 11:10:19 2018 +0100

    Prepare 3.2.0 release

commit 9227c962c25ad7004919df35faffd93ff72d4877
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Dec 19 13:55:44 2018 +0000

    Rename InputColumn from* methods to map* to signal the outcome.

commit e04600b5e13bff0a7a18bd076bfbdcc7eb9d94dd
Author: Autophagy <mika@crate.io>
Date:   Wed Dec 19 12:49:31 2018 +0100

    Reflect 3.1.4 release

commit c750df284619a2ba8ba6d0d24fc742663e1d7e1a
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Dec 18 16:47:03 2018 +0000

    Make orderByIndexes non-nullable.

commit 16f3e78c4b885327f866a3d7885ff7a5cc6dd0a6
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Tue Dec 18 13:57:47 2018 +0100

    upgrade admin ui to 1.11.3

commit 5c512e6ebaa5e09357447fe0e3bcab660962c46d
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Dec 18 16:20:23 2018 +0000

    Account for the memory used by the WindowBatchIterator.

commit c927c8eaf0d08482323565f8b6b262eb93b440c9
Author: Savvas Makalias <savvas@crate.io>
Date:   Tue Dec 18 00:10:19 2018 +0200

    Remove unused method AlterTableOperation::getNodeForResize

commit ab8948427b32feabe50299e56664cce2a4956fd8
Author: Savvas Makalias <savvas@crate.io>
Date:   Mon Dec 17 18:36:43 2018 +0200

    Log possible dangling indices at node startup

commit 94e0b0448821a1e1b441eb1c33032d89cb832277
Author: Andrei Dan <andrei@crate.io>
Date:   Fri Dec 7 18:11:28 2018 +0100

    Window functions: support ORDER BY inside the OVER clause.

commit a488fc6feda28eb7f14849a9df45728aed452c79
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 17 11:11:04 2018 +0100

    Fix array_difference to work with nested arrays and objects with arrays

commit b27c15e90205b542ba0fc5327ebae74a49b376cc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 14 17:18:41 2018 +0100

    Fix array_unique for object items that contain arrays
    
    Follow up to https://github.com/crate/crate/pull/8004

commit ae9d608ecbb74d75389ed9f6b294c730ac4a4b94
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 14 15:13:35 2018 +0100

    Fix array_unique for nested arrays

commit c550665904caee37e09d377cb40869ba8a0fbf2a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 14 12:29:41 2018 +0100

    Allow casts from geo_shape to object
    
    `try_cast` already worked, we should allow `cast` as well to have the
    proper symmetry of the functions.

commit 81ef6afc0163ce69b50b7c3851255fd121e8502f
Author: Savvas Makalias <savvas@crate.io>
Date:   Thu Dec 13 16:45:22 2018 +0200

    Remove shard allocation restriction from the table shrink flow

commit b46dc73134af56f8699bf925e42e25f4ce708800
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 12 16:45:24 2018 +0100

    Make sure errors are propagated to the RowConsumer (sys.jobs leaks)
    
    This ensures that errors raised in the execute implementations of Plans
    are always forwarded to the RowConsumer so that the listeners on the
    RowConsumers future are triggered. Otherwise statements would remain
    stuck in sys.jobs
    
    This is a follow up to be5e329bca3b65577ba0e272bd6f18c5f18c2f09

commit fffc440bd566f547dfd5a376fdb78b65cf02aa25
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon Nov 12 17:03:48 2018 +0100

    simplify requirements.txt and document docs dir in LICENSE

commit 6a4a2c9552dcd1fdfb17c25466b28bf37656096a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 7 16:33:46 2018 +0100

    Add a ALTER CLUSTER GC DANGLING ARTIFACTS command

commit 34fe38e418323cef5ea7f167d397afe1265d6bd8
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Dec 11 16:46:45 2018 +0100

    Add support for per-table shard allocation filtering.
    
    Shard allocation filters can be set/reset as table parameters on
    `CREATE` and `ALTER` statements.

commit 78f68ecd977cb7ee005fb53749b2dd6e4279d667
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Dec 11 16:51:22 2018 +0100

    Fix documentation of table routing allocation parameters.

commit 4fa9100df5c9f5bb9bc40231dde8eae0a5a3f9a7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 11 15:26:00 2018 +0100

    Remove the requirement for a backup index in shard resize operation
    
    Makes the swap + drop atomic so that we've fewer error scenarios.

commit 8ce8dc5fafea22df66d3ca3d63bf849aeddf6760
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 11 14:31:31 2018 +0100

    Remove the activeShardsObserver from the resizeIndex operation
    
    The resize transport already includes a wait-for-shard operation, so we
    don't have to do it again on the coordinator node.

commit 7129dbb10bbcbd7e026c4e807fff0d60dee563ef
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 11 11:06:50 2018 +0100

    Add support for increasing the number of shards

commit 0709a8c97b8fcafd236799c459ad3f475e6553bc
Author: Savvas Makalias <savvas@crate.io>
Date:   Fri Nov 16 15:22:11 2018 +0200

    Add shard shrinking documentation

commit 9c9b162431fa671f83a89ae4a137e5399967cba4
Author: Savvas Makalias <savvas@crate.io>
Date:   Wed Nov 28 10:07:05 2018 +0200

    Separate Shrink Integration Test to use randomized schema

commit e6ff61c0a0fced916c6dfdcd309d39650b37d32b
Author: Savvas Makalias <savvas@crate.io>
Date:   Mon Dec 10 18:01:15 2018 +0200

    Delete possible existing tmp indices from previous shrink operation

commit 7360d08a4d7c50886be756994b98a9ab778fd45b
Author: Savvas Makalias <savvas@crate.io>
Date:   Wed Nov 28 10:07:05 2018 +0200

    Implement index shrinking execution

commit bf3fa866c1fbdc755da73b71eefd117ff99c0c49
Author: Savvas Makalias <savvas@crate.io>
Date:   Tue Nov 20 23:43:01 2018 +0200

    Implement analyzer changes to support table and table-partition shard shrinking

commit cd009d7484f855665e07cc616ca2dab0c5b00aa1
Author: Savvas Makalias <savvas@crate.io>
Date:   Mon Dec 10 17:44:03 2018 +0200

    Filter out temporary indices from DB catalog

commit 40c25e55db532a04f3beb2886ad58a9537fb49ad
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 10 13:26:16 2018 +0100

    Update es/upstream to remove the pre-release warning

commit a42c95f6102cb052f62e69b336b67456ca3842e2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 10 11:34:54 2018 +0100

    Run tests with jdk11 on azure pipelines

commit d2438ed88cc9e37fe3b064a36671decc234243ed
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 10 11:33:32 2018 +0100

    Remove the isEmptyRowTable check from IsStatementExecutionAllowed predicate
    
    There is a separate `visitTableFunctionRelation`, so the
    `isEmptyRowTable` isn't required - it always evaluated to false.

commit b39c0f0b8223c9ee360b909d96787570c79bc3a9
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Dec 10 14:00:05 2018 +0100

    Update `renaming tables` documentation related to close/open removement.
    
    Tables won't be closed/open during rename operations anymore, reflect
    that also in the documentation. Also due to that, rename tables are
    an atomic operation, add a CHANGES entry about that.

commit 17994fb9c35b75cd1520cbc23db26380a9951cc6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 10 15:37:18 2018 +0100

    Make table health computation lazy

commit 5700aea49f021c2b3549f3fdea5d1171ffc1f870
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 7 17:32:40 2018 +0100

    Tune the github issue template a bit

commit 9cb614b04539ce4aee1cde5cb2dde8db392c6acf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 10 14:10:55 2018 +0100

    Remove the logger argument from CumulativePageBucketReceiver
    
    Due to the logger changes with ES 6.5 we no longer need to pass the
    parents logger instance around to have the node name within the log
    messages.

commit 849d05306918e3740807c7de87ca57189428048e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 10 10:52:39 2018 +0100

    Share template copy logic between rename and swap table

commit 43b5fe3f0cb55899fd8900e31b80519527ccf829
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 10 10:43:58 2018 +0100

    Re-use ActionBuilders.waitForShards in swap relations action

commit 4c2f5e21bf76609da8fd8a728291a90bf4feebb1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 10 10:29:09 2018 +0100

    Drop the RenameTableResponse
    
    We can use the AcknowledgedResponse.

commit 3839606f126769e1c1e0837acb6c4fd7ec579475
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Dec 7 11:00:54 2018 +0100

    Remove integration test restriction to non-jdbc usage related to row count.
    
    Row counts are always returned even for non-DDL statements since
    crate-jdbc >= 2.5.0.

commit 8b3e3924e881a75cce1b0e6ff6e75e008959db36
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 30 16:26:05 2018 +0100

    Upgrade crate-jdbc to 2.5.1 (JDK 11 compatible).
    
    Also servers row count will be returned now also for non-DDL statements.

commit 1673f3c9afbc5548b63805aa1c52cbc587c0dd24
Author: Andrei Dan <andrei@crate.io>
Date:   Fri Dec 7 13:03:38 2018 +0100

    Only allow window functions in select list and order by.

commit 00ebd5d466b3c55769d6c9cef2a593d5b651c9cb
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Dec 6 11:16:23 2018 +0100

    Document window functions.

commit f9cd3373409ed6e343ab3b7e40ef3b8eefc5f226
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Dec 6 11:14:25 2018 +0100

    Allow other outputs next to window functions in the select list.

commit 66682f2fac6a3bffe6260d789fefbfb91df7380c
Author: Andrei Dan <andrei@crate.io>
Date:   Sun Dec 2 12:45:47 2018 +0000

    Execution of window functions.

commit de1cd835285b74b1d4321c9e5bcfa70a7d73f070
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Nov 29 16:25:27 2018 +0000

    Only allow window and aggregate functions with the OVER clause.

commit 0d175ff336d009c1b47bfa415d870ffaf6f28c7c
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Nov 28 17:26:51 2018 +0000

    Implemented the WindowAgg operator.

commit 66a5d4a9603037ac5d25c519d58f19b2a8dcbfa5
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Nov 20 10:04:20 2018 +0000

    Window functions analyzer support.

commit 85793320a2e089ba1abc48a2428db68d5439248b
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Nov 20 17:05:55 2018 +0000

    Fix OrderBY hashcode to respect the equals/hashcode contract.
    
    Before we used Objects.hash and we passed array objects (the reverseFlags
    and nullsFirst) but Objects.hash delegates to Arrays.hash which for objects
    will simply call hashCode(). This broke the contract and we could end up
    with 2 OrderBy instances that are equal but have different hashcodes.

commit 3b076c8bc3f6afac59b0c566aeca03fcab3c3d52
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 14 17:04:58 2018 +0100

    Add parser support for the OVER clause to function calls

commit c04f34f597cda32382515937b35e8686a870c2a2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 7 11:27:45 2018 +0100

    Drop the requirement to close tables for rename

commit 9e8aa81723c1546d9b9fc06ff7749d2850f9d02d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 7 15:13:24 2018 +0100

    Remove some ShardUpgradeRequest.Builder overloads
    
    One overload was only used in tests.
    The other provided a default for `validateGeneratedColumns` without any
    indication whether it defaults to true or false - so it is better to be
    explicit about it at the call-sites.

commit 72c8d001e7d69d11123ffb3b9365d42223ff38b9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 6 14:00:45 2018 +0100

    Switch privileges on table swap

commit 71e6e80f1cb76e7e85165723766721e65bedfeb6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 5 15:00:31 2018 +0100

    Add planner and executor support for swap table

commit 7415269d5e4218db49ffea11f3bb78f78a5564fd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 5 12:09:33 2018 +0100

    Add analyzer support for ALTER CLUSTER SWAP TABLE

commit f30cebf48911f399b17896aa3b0740ece49b48a9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 5 11:18:37 2018 +0100

    Add synopsis and parser support for ALTER CLUSTER SWAP TABLE

commit 8d0428b2b8cbd54d9c7bcee89c58157b25bc18c4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 6 16:06:28 2018 +0100

    Extend Scalar javadoc to refer to useful abstractions

commit 1b651a0ad9e0802185bd88e76adb3d428ad4a26a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 6 16:03:12 2018 +0100

    Use DoubleScalar for sqrt implementation

commit a2cd6cb5fd054bb30499d924ae8410f97dd567a2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 6 15:58:26 2018 +0100

    Make evaluate in SubscriptObjectFunction static

commit d78b0382bc86b2ca08d735808661dd96a2a1babb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 6 15:55:47 2018 +0100

    Use UnaryScalar in abs implementation

commit 8470bc6d51387d1c471cd4bfefe27f3ac254bcf3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 6 16:52:53 2018 +0100

    Tests: Make RamBlockSizeCalculatorTest deterministic
    
    Paging.PAGE_SIZE is mutated in some tests, that could cause the tests in
    RamBlockSizeCalculatorTests to fail.

commit 2e9f1ff0c90c4e4061e2e8c905a5d87b408dc388
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 6 17:11:44 2018 +0100

    Optimize no-op check in UserManagerService
    
    The MetaData can change more often than the users/privileges within it,
    so we can check the latter to avoid re-building the `User` instances.

commit da01459995dbfd3836748d118800114a108d2bac
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 5 20:56:30 2018 +0100

    Change RoundFunction to use UnaryScalar

commit 9606448d545f86c354f84ceadf46b8d4ba4b71b1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 5 20:51:12 2018 +0100

    Change FloorFunction to use UnaryScalar

commit 2ab3df8a73adf4142de504f39273e2ba647210ef
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 5 20:28:29 2018 +0100

    Migrate CeilFunction over to use UnaryScalar

commit d5a04f0863ad4c7ecbaeb373caa19ea4be4d342c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 5 20:02:40 2018 +0100

    Enforce double as return type in DoubleScalar
    
    This prevents us from passing an invalid FunctionInfo instance into
    DoubleScalar.

commit 60dae518091ea59d07c05a698cc589f0da2ffeab
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 5 19:56:57 2018 +0100

    Tests: Remove BytesRef leftovers from scalar function tests

commit a798efea7008739c336f3133c122746a00592ab0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 5 17:50:43 2018 +0100

    Rename `indexName` on RelationName to `indexNameOrAlias`
    
    If the `RelationName` refers to a partitioned table it is not actually
    the name of an index but the alias name.

commit e18fe9bbb0d25b5eb6f9073b0660a07fa7f89eeb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 4 15:10:57 2018 +0100

    Support using functions that require a transaction context in generated columns
    
    Generated column definitions which use scalar functions depending on the
    active session like `username STRING GENERATED ALWAYS AS CURRENT_USER`
    caused failures on update statements because the generated columns are
    computed on the shard and relies on `evaluate`, but these functions
    didn't implement `evaluate` but relied on `normalizeSymbol` being
    executed on the coordinator node.
    
    This adds a new `FunctionTxnCtx` which is available for `evaluate` of
    scalar functions to resolve this issue,
    
    To be able to create the `FunctionTxnCtx` on the shards/collect nodes,
    this adds the userName and currentSchema to the `JobRequest` and
    `ShardUpsertRequest`. It also removes the `User` from
    `RoutedCollectPhase`, since we're able to retrieve it now on
    shard/collect.
    
    An alternative approach would have been to inject the generated column
    into the assignments of an update statement. But then we would have
    required a way to distinguish between generated columns we have to
    validate (user supplied) and generated columns that don't require
    validation (because we injected them).
    That's because we wouldn't have been able to validate columns depending
    on `current_user` (no evaluate implementation) or `current_timestamp`
    (undeterministic, value changes between coordinator and shard)

commit 0a138ccaa99491c75970d1ca05d874c124429950
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Dec 4 14:04:26 2018 +0100

    improve generated columns docs

commit 65be539cdce1eebed7ef562fed35a75356800243
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 22 16:47:14 2018 +0100

    Move relation normalization into the planner
    
    This moves the normalization step into the planner so that we hold onto
    the original statements structure a bit longer. Doing the normalization
    early in the analyzer prevents us from re-creating the formatted SQL
    statement. This is because the normalization changes the statement
    structure:
    
    For example:
    
        SELECT u1.name FROM users u1, users u2
    
    Becomes
    
        SELECT u1.name FROM
          (SELECT name FROM users) u1,
          (SELECT 1 FROM users) u2
    
    If we formatted the SQL statement based on this and re-analysed it we
    would add another relation layer.
    
    See also https://github.com/crate/crate/pull/7933
    The SQLPrinter had workarounds in place for this issue, but fixing the
    workarounds broke other things.

commit 5f6923542638e65f229a8c16ec3199663da0014b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 11 09:31:11 2018 +0200

    Optimize isKeyWord

commit 796d3852decf77d9d4a9ef8ff56f83a8a2a5ba93
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed Nov 14 15:00:57 2018 +0100

    reword CrateDB licensing documentation

commit 1a91d4dbc589fd2d94e1b4720154ded574d18f00
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 29 14:03:41 2018 +0100

    Move distinct handling into the planner
    
    This moves the analysed statement structure closer to the parser AST and
    as a side effect allows us to properly execute statement with `DISTINCT`
    and table functions in the select list.
    Before these statements raised an error that table functions must appear
    in the GROUP BY clause.

commit 689232184a6abde8ccf4ab81cc3054cc3e3db5ed
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 27 15:09:01 2018 +0100

    Remove SQLPrinter
    
    The SQLPrinter contains a couple workarounds to deal with our lossy AST
    -> AnalyzedAST conversion (mainly the loss of alias information).
    
    The problem with these is that by trying to fix the analyzer structures
    we break the SQLPrinter's workarounds, making it hard to solve the root
    issue.
    
    This therefore removes the SQLPrinter until the analyzer structures are
    improved.

commit dfc3f79327847b2eaf40bbebca372a3d5c9165e7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 27 14:28:47 2018 +0100

    Remove SQLPrinter usage from create view
    
    Using the SqlFormatter instead. This is a small behaviour change in that
    the `*` in queries will no longer be resolved before saving the view
    definition.
    
    This will allow us to remove the SQLPrinter until we can re-add it with
    less workarounds. (See follow up commit)

commit 1a0329634f73a8cbda7088a84109c4b8440c6008
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 3 11:20:40 2018 +0100

    Adapt deprecated Loggers.getLogger usages

commit be5e329bca3b65577ba0e272bd6f18c5f18c2f09
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 3 12:17:46 2018 +0100

    Fix an error handling issue that led to sys.jobs leaks
    
    Some `plan.execute` implementations raise an error instead of properly
    triggering the listener.
    
    This led to a leak of statements in the `sys.jobs` table as the
    component responsible for removing the entries wasn't triggered.

commit 3ccd989786cc70d5fd362f352f0e5288562e0a54
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 29 17:33:37 2018 +0100

    Move type validation for grouping columns into executor
    
    To bring the validation closer to the component which contains the
    restrictions that prevent grouping on array columns. (Our grouping
    implementation wouldn't hash arrays correctly)
    
    This is also a requirement for https://github.com/crate/crate/pull/7941
    to not break anything. With the above PR columns in the select list will
    no longer be moved into the GROUP BY property of the analysed relations
    and will therefore by-pass the group by validation.

commit cc0698a091ec85a154c3c30b4a63471651afa65a
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 30 09:30:30 2018 +0100

    Fix replace(string) documentation header

commit 27c5adcc89def4b8c86f30b769a6c277bbbc6ffd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 29 10:53:28 2018 +0100

    Don't require shippable for mergify to merge
    
    We're going to remove it in favor of Jenkins slave running on the new
    AWS ARM instances.
    
    Shippable is currently broken due to what seems to be a JDK issue in the
    image.

commit a1b9f8523c326bd881fed5e75ccd9267795fbbbf
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed Nov 28 14:55:59 2018 +0100

    add note about file URIs on Windows

commit 5d5934f53273d4aa8332336815bcf84d552ccfb3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 28 11:23:33 2018 +0100

    Use `Strings.replace` instead of regex based stdlib replace for replace scalar
    
        ReplaceFunctionBenchmark.replaceWithCommonStrings  avgt   50      59.030 ±      2.565  ns/op
        ReplaceFunctionBenchmark.replaceWithStdlib         avgt   50     329.253 ±      4.937  ns/op

commit 51fe12913ab42f29d1fd54306de2396425d5006f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 28 11:08:12 2018 +0100

    Change the `replace_string` scalar to `replace`

commit da15d38f44a7eeb43efeec3c5d124cf69c895a62
Author: Semen <semenmiroshnichenko@gmail.com>
Date:   Sat Oct 27 22:24:35 2018 +0200

    Implement REPLACE_STRING() function like in PostgreSQL, add tests

commit 9bee064d42b7bb62aaa1ea9e09af9dd3c0b1e8f3
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Nov 27 12:10:56 2018 +0100

    Remove obsolete BulkActiveShardsObserver.
    
    Since ES 6.1, the ActiveShardsObserver can observe shards of multiple
    indices which makes our implementation obsolete.

commit c4bb97f421013190516110ac4c66ccf92a523e44
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 8 13:31:33 2018 +0100

    Add the pg_database table and current_database function

commit 54178b123a4d0d913c023715c885b18039f67b2f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 27 13:37:52 2018 +0100

    Update es/upstream to include fix for netty 4 tests

commit bdd52e7c5960aaea268004e75c0b57a97dd42c83
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 26 15:54:54 2018 +0100

    Update gradle to 5.0

commit 9928fb96e9cb2d108976f479af8e8d08df1150c9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 26 15:54:16 2018 +0100

    Remove spotbugs
    
    We didn't make use of it and have already other static analysis tools in
    place.

commit 684a2bc76f26d6ad82b393a7970f32bab6a49b21
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 26 15:48:36 2018 +0100

    Remove unused primaries attribute from ShardsInfo

commit 4ca7421986ea42a9f89bd49a64da8594c414b4d7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 26 11:46:38 2018 +0100

    Upgrade to elasticsearch 6.5.1

commit 24dd241d2f0abcb37bdae30cc27afe7e0710d42d
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 23 17:27:39 2018 +0100

    Add support for ``SHOW ALL`` to show all session settings.

commit 068834267f23a9c324be168a6f64133f4a52eefd
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 23 16:28:56 2018 +0100

    Move session setting setter/getter logic into dedicated class
    
    Create a new SessionSetting class which abstracts the set and get of
    a session setting. Also it contains type information of each setting.

commit 573d273370b711cd8b37383b3fbe6d191211d970
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 23 13:28:07 2018 +0100

    Add support for ``SHOW session_parameter``

commit a7475f91f0bf844080a9ca338040f00ef68f9eb3
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Oct 16 23:47:08 2018 +0200

    add ping_interval and ping_retries to cluster config docs

commit 1b0e59ca511103bd116058625a980d8567b910e9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 22 18:38:49 2018 +0100

    Fix srv discovery tests for systems where 127.0.0.1 doesn't resolve to localhost

commit 5fb0a436f821fb2d2b3070ad43fd3abf0c1634ba
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 23 08:59:10 2018 +0100

    Remove changes explain representation fix changes entry
    
    The fix only applies to 3.1, on master it resulted in a different
    issue which was never released and thus no entry is needed.

commit 02a448a08557cead4d4c0d5ba470f852aa23a97b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 22 18:39:59 2018 +0100

    Remove the groovy testing dependency
    
    It's no longer in use since we've removed all tests written in groovy

commit d14807d99435b4419c64809c1e17af9589b251a8
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Nov 22 10:48:21 2018 +0100

    Fix xContent serialization of routing entires.
    
    Since ES 6.3.0, the XContentBuilder is more strict and throws an exception
    instead of using any objects toString() method, so any hppc object must
    be converted upfront.
    Also using toString() for the routing location entries (IntArrayList),
    resulted in a wrong representation.
    
    Relates 740bcc9d038f37d1d0b21f73242cf637925db79f.

commit a04f8a061ea6a2cfd8d347a8f0264d4eab075c56
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 21 15:59:24 2018 +0100

    Change Field to not implement Path directly
    
    It resulted in very confusing `Field.toString` output if a Field was
    derived from an existing Field as it started to recurse.

commit 244f0dc86691b9ac6d818bec73b46f28090767c5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 21 17:51:23 2018 +0100

    Remove left and right setters from UnionSelect

commit 0229ab9293d68df55077069528c99f5cc7f8f36e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 21 15:18:35 2018 +0100

    Process OrderedLimitedRelation correctly in RelationNormalizer
    
    Looks like this didn't cause any issue so far, but it was incorrect and
    might trip us in the future.

commit 6209af65cf5a485a952541d8e18a4985aa0b8a7a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 21 13:33:19 2018 +0100

    Create Function with immutable args to avoid extra copy

commit 773b1559cf145bbf50610b8f3cb120741678712a
Author: Ent <last_ent@outlook.com>
Date:   Mon Nov 5 21:50:44 2018 +0100

    ADD INITCAP support for scalar strings.

commit 13047f6f9ffb3660be003e0a5b439b53b0f86a37
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 20 16:38:29 2018 +0100

    Guard against required mapping update on replica
    
    Syncs our logic with the ES logic

commit e8911def804ebee5f293aaaba0adf820be24e45e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 20 16:36:03 2018 +0100

    Make indexResult handling more defensive
    
    Adds some assertions to safe-guard against illegal states.

commit b5a84093ff0cb76d8a0280770e0c23a9083e4d6c
Author: Savvas Makalias <savvas@crate.io>
Date:   Tue Nov 20 17:07:39 2018 +0200

    Refactor TableParameterInfo to remove verbose class hierarchy

commit 0768e586f2dc2d4601e203df073ff1f8c1d236fd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 19 12:19:23 2018 +0100

    Throw a meaningful error on invalid license keys
    
    `SET LICENSE 'foo'` resulted in a BufferUnderflowException

commit 81a727c1205c192cc0c47e99a9939f8a5cc8cdb8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 19 12:11:28 2018 +0100

    Add assertion to decryptedContent
    
    To avoid a NPE in case we ever extend the LicenseType

commit 1d76784aaaa1d5631af2b25bbd87e5515d98e864
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 19 12:10:07 2018 +0100

    Throw a meaningful error if public key is missing from the distribution

commit e09c3dca3cf52a4156b0805d6499b6bea44b09c4
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 16 17:35:45 2018 +0100

    Use netty dns resolver for dns-discovery.
    
    Current dnsjava library is not jdk11 compatible as it uses an
    illegal reflective access, resulting in a warning.

commit 9d5b19c9f6bac62cc8cd5b4e43d565dee22437a8
Author: Autophagy <mika@crate.io>
Date:   Mon Nov 19 14:43:43 2018 +0100

    Reflect CrateDB 3.1.3 release

commit 84386de01be1c81e754a12f14668ee1d7922ab44
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 14 16:26:31 2018 +0100

    Allow SET SESSION statements on expired license
    
    To enable postgres client connections. They invoke some `SET SESSION`
    statements when establishing the connection and it should be possible to
    use them to invoke `SET LICENSE`.

commit f38280949bf0a161e84bf8b6c8d7eefb8363815c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 19 10:57:37 2018 +0100

    Add oid mapping for text and text array
    
    Clients that try to encode parameters using the text type got a failure:
    
        Can't map PGType with oid=25 to Crate type
        Can't map PGType with oid=1009 to Crate type

commit afa3469854317b20bcb55ba2e2a266d235102f9b
Author: Savvas Makalias <savvas@crate.io>
Date:   Wed Nov 14 17:14:58 2018 +0200

    upgrade the admin-ui to 1.11.2

commit dfb3528dcb75736aaba25991429135d45474fbcb
Author: Savvas Makalias <savvas@crate.io>
Date:   Fri Nov 16 17:25:24 2018 +0200

    doc: fix section hierarchy in create_table doc

commit 1ef9a21539bb7845de33ae3e9a26eafa2f88b315
Author: Andrei Dan <andrei@crate.io>
Date:   Fri Nov 16 11:08:33 2018 +0000

    Tests: validate extended ascii chars in generated schemas are not allowed.

commit 69355adcc4b4322a03593b46d8f8bf59234a10ae
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 14 14:29:16 2018 +0100

    Fix various deprecation warnings

commit 136ad72ae00fa9bac50464d7652b2bf08bade026
Author: Savvas Makalias <savvas@crate.io>
Date:   Wed Nov 14 11:14:34 2018 +0200

    license: rename object fields to 'expiry_date','issued_to'

commit 8230418469fab50256d94529117b7284d69b6b19
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Nov 13 13:43:35 2018 +0100

    Remove sqllogictests, moved them to the crate-qa repository.
    
    See also https://github.com/crate/crate-qa/pull/92.

commit 7a03881873d77de5d8011a51a6a380e377efb7ab
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 12 17:00:25 2018 +0100

    Update templates first before updating mapping of the index
    
    The mapping updates for partitioned table had a race condition that
    allowed the types of the partitions to go out of sync. The reason for
    that was that we updated the index mapping first and relied on its
    validation logic. The template was simply replaced if the former
    succeeded:
    
        Create index for partition1 with x=string
        Update template -> success
        Create index for partition2 with x=long
        Update template -> no verification but blind overwrite -> success
        Data in _raw:
          {x=foo0}
          {x=10}
        Mapping according to template: x = long
    
    This changes the logic to update the template first with type
    verification.
    
    `testConcurrentPartitionCreationWithColumnCreationTypeMissMatch` was
    flaky because of this.

commit 5a3786ef6a7e5470eff723b1a7fcc9415d2e2817
Author: Savvas Makalias <savvas@crate.io>
Date:   Wed Nov 7 10:44:58 2018 +0200

    doc: change 'Tables Needs to be Recreated' section from active checks

commit 65437b02dbde547de5231e914f1b63101eb04100
Author: Savvas Makalias <savvas@crate.io>
Date:   Wed Nov 7 16:12:11 2018 +0200

    license: Fix PingTask to include license information

commit 67faa44b64f411abd5ce51dc5657b4a6d0eeeed8
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Thu Nov 8 10:16:08 2018 +0100

    upgrade the admin-ui to 1.11.1

commit 50f2b9cd945d870ff673aee28942f45ae371909d
Author: Dan Markwat <daniel.markwat@gmail.com>
Date:   Wed Nov 7 19:50:36 2018 -0500

    Replace user with security.principal in hdfs repo
    
    The 'user' parameter to the hdfs repository wasn't used by the
    underlying es-repository-hdfs plugin. This has been replaced by
    'security.principal' in the CREATE REPOSITORY settings to allow
    user queries to specify it and pass it down to the plugin.
    
    A test was added to verify this would occur and wouldn't garble
    the special characters, such as '@'.
    
    Relevant documentation was updated based on experiences
    configuring this plugin for Hadoop 2.8.1 and expanded on to
    capture some of the nuances of working with secured, HA HDFS
    and the es repository-hdfs plugin.
    
    Cleanup doc errors and move changes to top of file
    
    Move changes to Fixes for hdfs repo fix

commit fe1af408e85ebabf6ea0d73e5d1212da2597764e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 8 16:28:30 2018 +0100

    Make blackbox jmx tests compatible with Java 11
    
    Changes the JMX cli from jmxterm to sjk (jvm-tools)

commit e4de09eb146ce121d23c5b74ec8eea212b3da5ac
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Nov 8 16:59:48 2018 +0100

    Simplified stmt execution allowed on multisource select types.
    
    Solves LGTM alert on “Boxed type is never null”

commit d84e9da66808df53e6099b0174efc050a8b31eee
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Nov 8 16:30:00 2018 +0100

    Adapt pg_catalog tables to reflect PGSQL 10.5 changes.

commit 2ffc85803578646b6f11d601a9b5058aec881352
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Nov 8 16:28:03 2018 +0100

    Bump emulated PostgreSQL protocol version to 10.5

commit 8078881a6116a6a8b034a0c42feec3d64e27d17a
Author: Savvas Makalias <savvas@crate.io>
Date:   Thu Nov 8 15:56:30 2018 +0200

    license: rename sys.cluster field license['expirationDateInMs'] to license['expiryDate']

commit 40a8c2c231b267611794e1ada973bb6a872b5e00
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 8 14:08:00 2018 +0100

    Adapt HyperLogLogDistinctAggregationBenchmark to BytesRef change

commit 153479927f63b160e3fef2f7df249cd0ce0d284e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 8 11:00:11 2018 +0100

    Remove http.enabled from crate.yml
    
    The setting is deprecated in ES.
    
    We haven't documented the setting elsewhere.

commit 9f537dd41b0865b06dea3b07c92d544c3b57bad6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 7 15:45:10 2018 +0100

    shippable: Use shared ARM nodepool

commit d322d5b20a00bf3bbe63a1b209db9ecca88fdb50
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 7 20:13:08 2018 +0100

    Fix the portal resume handling
    
    The execution+sync of a suspended portal with the postgres wire protocol
    resulted in too much work being done and multiple sys.jobs entries being
    generated which were then not cleaned up correctly in all cases.
    
    This shuffles the logic around a bit and moves the hook to remove the
    jobs entry into the `RowConsumerToResultReceiver` which is kept alive
    across suspend. (The `ResultReceiver` components are re-created on the
    execute message, making it more difficult to attach the sys.job hook
    onto their future)
    
    Fixes https://github.com/crate/crate/issues/7808

commit 6191df702064e32c287e9d44ce7906d74df8ba01
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 7 15:36:08 2018 +0100

    Docs: Link to supported parameters in ALTER TABLE reference

commit 8acacb28409d12d53b06f1a183226b2a1c5eb40e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 7 10:17:46 2018 +0100

    Bump es/upstream to include NPE fix for tests without assertions

commit d222f83b8f5ea37d3c31798ec3ba490c49a51de0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 7 14:27:25 2018 +0100

    Fix GroupingBytesRefCollectorBenchmark
    
    Broke due to the migration from BytesRef to String

commit 9523585154de31993793fb00f201731ac2cb8300
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 6 18:17:35 2018 +0100

    Protect against negative durations in system metrics histogram
    
    System time adjustements can lead to negative durations as we utilize
    the start and end time of query execution instead of having a separate
    duration clock.

commit fd287326730a19264a08c70eb7be86e10d76f8a7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 6 10:30:21 2018 +0100

    Use id 6 for licensing expiration sys check
    
    We currently can't recycle old ids because we cannot modify the cluster
    check links.

commit 6ab3adb0fef8207830600255400205ce77e10699
Author: Savvas Makalias <savvas@crate.io>
Date:   Tue Nov 6 15:16:48 2018 +0200

    license: Fix accessing null 'sys.cluster.license' children issue

commit 72d91f96fbc64729e613a5ce5a5075745b337a00
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 5 13:33:02 2018 +0100

    Include a CLI to generate license keys

commit c1786dce5753b72cc0c3e5fcba20efc7e14cfc6a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 6 14:51:08 2018 +0100

    Tests: Update monitoringTest to reflect thread pool change
    
    Follow up of 0c58490c5b3f79f6f05ccb60afd1b46f5e77859b

commit a2d87814e7617569dfdb9f4db91d7905e47497c6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 5 11:33:44 2018 +0100

    Update es/upstream to include javadoc fix

commit bc8f112c7e0d24d216c5b669efb2e9b4620b2a65
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Nov 6 13:12:40 2018 +0000

    Fix jmhJar dependency to enterprise:hll

commit 261f5951f4cf3af4a0a793253b4b2c91ee0ac30d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 5 16:38:06 2018 +0100

    Tests: Make testSelectIncludingUnassignedShards fast
    
    The prepareHealth call always blocked for 30s, making this test always
    require more than 30s.

commit 0c58490c5b3f79f6f05ccb60afd1b46f5e77859b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 6 09:57:18 2018 +0100

    Correct thread pool name used for handler merge
    
    Follow up to 1b04cc98a2b90f455ce22d03add5ab757707629b

commit 6b738304195da5199d76dbf49ab2d3d89a5d8c0f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 5 17:30:51 2018 +0100

    Make snapshots retrieval lazy
    
    We can avoid building a list up-front.
    
    The incompatibleSnapshotIds logic was unnecessary, since we called
    `getSnapshotIds` instead of `getAllSnapshotIds`. The former doesn't
    include incompatible snapshots.

commit 1b04cc98a2b90f455ce22d03add5ab757707629b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 5 20:48:14 2018 +0100

    Run merge operation on handler in Search threadpool
    
    Some sys.snapshots queries failed occasionally because there is a new
    assertion that verifies that operations on the `BlobStoreRepository`
    happen in either Generic, Snapshot or Search.

commit 569c696b60a94d60a9c99b753199504b7308a89b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 5 11:07:11 2018 +0100

    Use readSlice instead of readBuffer in readStartupMessage
    
    We don't need to copy the bytes at that point - a view of the buffer is
    sufficient.

commit 78d4828ddca80aa8faff2f372d70f3454a145f0a
Author: Savvas Makalias <savvas@crate.io>
Date:   Sat Nov 3 01:38:39 2018 +0200

    license: correct expiry notification messages

commit 9451cc93b39e966445a048dbad55a4664aa7131d
Author: Andrei Dan <andrei@crate.io>
Date:   Sat Nov 3 20:23:10 2018 +0000

    Remove the groovy plugin and the GroovyTestSanitizer

commit b88d06406479f74e00ab8e4692cefe0d2e1c3f07
Author: Andrei Dan <andrei@crate.io>
Date:   Sat Nov 3 20:20:40 2018 +0000

    Convert InsertPlannerTest from groovy to java.

commit c5c426f7f41823b4003cb6ece70346568f15538b
Author: Andrei Dan <andrei@crate.io>
Date:   Sat Nov 3 20:06:58 2018 +0000

    Convert CopyToPlannerTest from groovy to java.

commit 436e9e2a4ecee5c404e3f0b3e412401ac1a6833c
Author: Andrei Dan <andrei@crate.io>
Date:   Sat Nov 3 19:55:53 2018 +0000

    Convert CopyStatementPlannerTest from groovy to java.

commit c72fb953ab9ff995c926be8350b82a4d8e38064f
Author: Andrei Dan <andrei@crate.io>
Date:   Fri Nov 2 17:13:48 2018 +0000

    Converted TableFunctionITest from groovy to java.

commit 356cb61f8043c573402994a791c9384628930d8d
Author: Andrei Dan <andrei@crate.io>
Date:   Fri Nov 2 16:59:19 2018 +0000

    Converted URLFileInputTest from groovy to java.

commit a2333c5891e4674c0da423c9e05294edeef1b5fd
Author: Andrei Dan <andrei@crate.io>
Date:   Fri Nov 2 16:57:17 2018 +0000

    Converted NodeFiltersTest from groovy to java.

commit 49dc4d01d444f1a24f86b17d5030a603fac0553b
Author: Andrei Dan <andrei@crate.io>
Date:   Fri Nov 2 16:50:40 2018 +0000

    Converted NodeOperationCtxTest from groovy to java.

commit d14146f7ed6e7386849895e27a1b041a69cf5eac
Author: Andrei Dan <andrei@crate.io>
Date:   Fri Nov 2 09:14:35 2018 +0000

    Return the updated child license fields

commit eecc6a2f746e2113cc5db008104d651b62513377
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Nov 1 10:55:55 2018 +0000

    Replace the usages of FluentIterable with java Streams.

commit 27080bf5880bcdf71fe9760b6760ff630f1335dc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 29 11:07:19 2018 +0100

    Upgrade to Elasticsearch 6.4.2

commit af28ecf91bf1f8355126be1ad8487c740a2571ba
Author: Savvas Makalias <savvas@crate.io>
Date:   Tue Sep 25 21:43:46 2018 +0300

    Implement licensing
    
    - Add licensing module and plugin
    - Implement `set license 'licenseKey'` statement
    - enterprise: Implement trail license generation at startup
    - Implement license verification
    - Expose the current license information in the `sys.cluster` table.
    - enterprise: Add LicenseExpiry sys check to signal when the license is close to expiry.
    - enterprise: Block sql execution when license expires (exceptions: sys queries and `set license`)
    - Deprecate setting: 'license.ident'
    
    Co-authored-by: Andrei Dan <andrei@crate.io>
    Co-authored-by: Savvas Makalias <savvas@crate.io>

commit 65ae6376477f6e69cecc5f66626acd48c9e39062
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 30 16:52:10 2018 +0100

    Tests: Enable ByteBuf leak detection in test suites
    
    This will be part of the `ESTestCase` with ES 6.4 - this is a backport
    to de-couple the test fixes from the actual ES 6.4 upgrade commit.
    
    The leak-detection setup code in `CrateUnitTest` and
    `SQLTransportIntegrationTest` will be removed again with the upgrade.

commit 3ede5c0a1912804006c33cb59ef3ed50231efed5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 30 17:36:14 2018 +0100

    Make sure ByteBuf would be released before assertions are hit

commit e7716b96a4b96882b4fd8f07759e7c53c0638150
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 30 13:13:21 2018 +0100

    Update netty to 4.1.31
    
    https://netty.io/news/2018/10/30/4-1-31-Final.html

commit bb81072fc5f9f5b33eb90e45dd700b465ac6c525
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 31 10:12:44 2018 +0100

    Fix ByteBuf leak in MqttIngestService
    
    Issue was caught by the changes being introduced in
    https://github.com/crate/crate/pull/7828
    
    There is no dedicated test because it will be caught with the generic
    leak detection.

commit 9196f66499a1a765bdca7f8fc61e005730aae85e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 31 09:02:07 2018 +0100

    Fix a ByteBuf leak when sending rows to pg clients that contain failing expressions

commit c2128019c106c33559cb31f57b75b861ec74b7a0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 25 17:22:18 2018 +0200

    Use UnaryScalar to implement negate functions

commit a4ba6831cb212ff01c4a823010ce6a1665cae201
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 25 17:10:33 2018 +0200

    Enforce FunctionInfo with 1 argument in UnaryScalar
    
    De-duplicates the `FunctionInfo` constructor calls and ensures that
    there is no FunctionInfo with more than 1 argument used.

commit 6f0fbb9c3ca238e0d1f07be91ab092f993b144f6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 24 16:38:22 2018 +0200

    Mergify: Delete branches after merge

commit b358b03f3d50808c9ca688362da65d5029793d46
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 24 23:38:49 2018 +0200

    Replace LiteralNestableInput with constant
    
    NestableCollectExpression.constant does the same.

commit 269d94a56c70bc198319db5166ad3c2ccae6a592
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 22 12:14:55 2018 +0200

    Tests: reduce amount of rows inserted in testCreateOverloadedFunction
    
    The test doesn't require that many rows.

commit cc1da2f04603bd33bab2e8f578ecc8b94bfec1fe
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 22 12:13:15 2018 +0200

    Replace Guava Predicate with JDK Predicate in MatchOptionsAnalysis

commit bde372b4c7048dba2ce9e9153348e4395786592f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 22 12:10:13 2018 +0200

    Create privilege rows lazy
    
    There is no need to create a list.

commit 366f1c9e37b01fd0fc28fd35235e26163a9c2632
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 22 12:02:49 2018 +0200

    Remove ClusterService from AbstractSysNodeCheck
    
    Only a few concrete implementations need to clusterservice. There is no
    need to have the dependency everywhere.

commit 38c46389020f29fa0d735ec5f1354b3c491bde75
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 25 15:48:32 2018 +0200

    Fix ClassCastException on sys.allocations queries
    
    Follow up to https://github.com/crate/crate/commit/b5bb2cb742b725893925d97eba399d199dc87e6e

commit 982056dce124dda6a6d8d76f11d22332bc49a5a7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 25 11:53:41 2018 +0200

    Update es/upstream to include AllPermission fix
    
    Missed to apply https://github.com/crate/elasticsearch/commit/e3ec3c9dd840bb8b52a1fe06896e22166c92fd6a

commit b17420c593695aba50751f46636e10ee412e4117
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 25 11:40:08 2018 +0200

    Flush channel periodically when sending data to clients via pg
    
    To avoid memory buffering up indefinitely if large tables are streamed
    to clients.
    
    Internally we utilized paging already (between collect nodes and
    coordinator nodes), which is why the circuit breaking mechanism didn't
    trigger.

commit ddf27496383510164b56b1ce7ba2b569ba07a8b1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 24 16:32:44 2018 +0200

    Create results list with correct size in CompletableFutures
    
    Not necessary to go through the stream/collect facility

commit dc3d19e24ba30339fcc2cc8d92bdadb5f9d488b9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 24 23:19:59 2018 +0200

    Replace RowTransformingBatchIterator with a function + map

commit 8bc33df2433898b1c9738fa2be2edc93fd98493e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 24 15:16:02 2018 +0200

    Remove some unused declarations

commit 4892969a2df12287b89d88fed1758fed81e6eabc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 25 11:28:18 2018 +0200

    Disable total hits tracking in OrderedDocCollector
    
    The `create` overload we used has been deprecated. Note that we'll
    currently not really benefit from setting trackTotalHits to false. It's
    used to be able to early terminate the collection, but that's only
    possible if the index is itself sorted and if the sort criteria matches.

commit 5cf268d3b143f023c3b32c69fd443c745828c402
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 23 15:18:34 2018 +0200

    Remove BytesRef conversion logic from js udf layer
    
    We no longer work with BytesRef but with Strings directly. So the logic
    there can be removed.
    
    Follow up to https://github.com/crate/crate/pull/7799

commit 442ae14ce3f12c100d7d300eb816be30bd16b401
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 24 16:09:47 2018 +0200

    Remove duplicate size accounting in BroadcastingBucketBuilder

commit 216e835cac5fa3dc2e5248f361a04b6d5d11dfab
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 24 16:07:30 2018 +0200

    Remove synchronization from BucketBuilders
    
    The `DistributingConsumer` which uses the bucket builders has a single
    iteration loop so there is no concurrent access to the bucket builders.
    (Although thread switches can happen)

commit 59403a79b2fa61b9162e15f193d9fbd30116c736
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 16 14:58:04 2018 +0200

    Upgrade to ES 6.3

commit ad4a35126e4e09dc372edd1c8c97bf589cef96ca
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 22 16:32:23 2018 +0200

    Update t-digest to 3.2
    
    Fixes an issue in the percentile calculation

commit b5bb2cb742b725893925d97eba399d199dc87e6e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 17 10:54:36 2018 +0200

    Migrate from BytesRef to String
    
    Using BytesRef instead of String was an optimization we did to avoid
    unnecessary utf8 to utf16 conversions. But we never benchmarked how much
    of an optimization it really is.
    
    In order to work with utf8-encoded BytesRef everywhere we patched ES to
    handle BytesRef within the XContent logic. In ES 6.3 they separated
    x-content into a separate package that has no Lucene dependency. So we
    either would've had to extend our patch or see if dropping it altogether
    is an option.
    
    Benchmarks indicate that switching to `String` doesn't result in a
    noticable performance regression.

commit 149b2d5fc731d5c14fc5afaec789839bf8cdd325
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 10 16:52:45 2018 +0200

    Deprecate mqtt
    
    Some reasons:
    
    - Hasn't seen much adoption
    - It is incomplete (e.g. only supports QoS 1)
    - It would require further ongoing maintenance (for MQTT v5 for example)
    - Using an external broker usually has more advantages than
    disadvantages

commit d0da46c1db10a13c3639041ba79f8e15c142f8af
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 22 11:42:16 2018 +0200

    Fix privilege check in case table aliases are present
    
    We've to do the privilege check on the underlying table, not on the
    alias.

commit da9c9f87a3a79aaec02f0d205f492d7588eba3b1
Author: Autophagy <mika@crate.io>
Date:   Fri Oct 19 13:21:39 2018 +0200

    Reflect CrateDB 3.1.2 release

commit e089e0c0ecafd5853ef9bd0349fe36c309e14620
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 18 21:11:37 2018 +0200

    CI: Update mergify.yml for new engine
    
    See https://medium.com/mergify/announcing-the-new-mergify-engine-7bb2eceeb778

commit b3446c43d59f138303e3984d8791e11e5a468677
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 18 16:05:48 2018 +0200

    Fix hashCode implementation of MergeCountProjection
    
    The hashCode implementation led to a Stackoverflow due to an infinite
    recursion.
    
    Since projections so far aren't used in Maps or Sets this wasn't an
    actual issue.

commit 7681165ab3a8001f13797d211b4f8304cb8b114a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 17 11:55:22 2018 +0200

    Make ports on NodeStatsContext concrete

commit d38e76e97a230a45c4dd587b3c402a17a399e7f5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 17 11:38:03 2018 +0200

    Tests: Remove usage of deprecated ThreadDeathWatcher

commit 8357b83799d1220973ca8dceed2c8bdf6ff57c97
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 17 11:34:53 2018 +0200

    Tests: Remove unnecessary method overloads from DocIndexMetaDataTest

commit 4aa5f0e6871b28423edb0551b6402e1387bddd11
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Oct 16 23:26:09 2018 +0200

    move MQTT settings to the config section of the docs

commit 8753722dec6af517ea924e0510809cd393db6f3e
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Oct 17 11:33:25 2018 +0200

    Always mark archived settings to be removed on alter table.
    
    We must always mark archived settings to be removed on alter
    table operations as we do not know at this stage if the table
    contain any archived settings (tables only list supported settings).
    Follow up of 82815b7f84f64ec7f427b32b0c2df8afd1cdb38b.

commit 23432462a8e291ef69799629ff43b590d57335be
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Oct 17 09:29:33 2018 +0200

    Store current versions on new table partition
    
    The versions were taken from the partition template which may not equals
    to the used versions when a new partition is created.
    Versions are now always written using the current ones instead of the
    ones stored inside the template.

commit a0df820e6850e176ec804b23a505032084b0fa5f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 15 17:39:52 2018 +0200

    Remove partition unrelated alias handling
    
    Since `DROP TABLE` is an atomic operation on the cluster state we should
    no longer run into the issue of having orphaned partitions or aliases.
    
    Furthermore, since we do not support the ES API there shouldn't be a way
    to create an alias across different tables so we can remove the logic
    that would handle such cases.

commit 9eb1ce5acdd90444189cbc9e08e6ce63c85ba4f6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 15 17:06:20 2018 +0200

    Tests: Remove TestingTableInfo usages in UpdateAnalyzerTest

commit 5665b3a919950fc57fa0efe5594f7ee77ea28924
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 15 16:52:07 2018 +0200

    Tests: Remove TestingTableInfo usage from CopyToPlannerTest

commit 69dbd106cf3180988fdb9db5d9126e7e0c9373b0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 16 11:14:37 2018 +0200

    Tests: remove testClusterNameInPathCheckDoesNotFailWithDefaultConfig
    
    The node check has been removed a while ago

commit b76932051e8e540c8c3a620b7e23d002ea5d0a4b
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 16 12:40:11 2018 +0200

    Only filter settings of partitioned table templates on upgrade
    
    Other templates (like e.g. random testing templates) can contain unknown
    settings which is wanted, don’t touch these.
    Follow up of 82815b7f84f64ec7f427b32b0c2df8afd1cdb38b.

commit e16b1595bec5ab258b1f3bc50e538627bd38f175
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 16 11:44:18 2018 +0200

    Update es/upstream for AllPermission fix

commit 82815b7f84f64ec7f427b32b0c2df8afd1cdb38b
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Oct 15 21:54:57 2018 +0200

    Filter out archived settings on table altering.
    
    Filter out unsupported(old) settings at (partitioned table) templates on
    cluster upgrade and private and archived settings on table altering.
    Updating a table setting including any archived or private setting
    fails otherwise by settings validation.

commit d0bdaa626482eb3bd56741e07303c2b3202fd143
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 15 15:11:05 2018 +0200

    Fix array_length query generation for >=
    
    testArrayLengthWithAllSupportedTypes failed with seed
    749F087E446B5B70:ED052D6D893AC621
    
    (Resulted in the generation of 2 empty strings)

commit 9a555548c71196936cced8271f9446417a394f75
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 10 16:30:02 2018 +0200

    Update guava to 26.0

commit a26d16c4da91ffbeeff357fc667f2dcfdddd2b54
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 15 14:20:38 2018 +0200

    Remove usage of deprecated newInstance on TransportResponseHandler

commit c0eb60d46788ba7219aeceeac41eceee64b00dd1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 15 11:50:07 2018 +0200

    Make sure CORS preflight requests are handled before auth checks
    
    See https://fetch.spec.whatwg.org/#http-access-control-allow-credentials
    
    > For a CORS-preflight request, request’s credentials mode is always
    > "omit", but for any subsequent CORS requests it might not be. Support
    > therefore needs to be indicated as part of the HTTP response to the
    > CORS-preflight request as well.

commit eecb9b53dfe4a43b23273d5bfbc0ed95bf79aacc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 15 14:27:18 2018 +0200

    Switch to psycopg2-binary
    
    Fixes a warning:
    
        crate/blackbox/.venv/lib/python3.7/site-packages/psycopg2/__init__.py:144:
        UserWarning: The psycopg2 wheel package will be renamed from release
        2.8; in order to keep installing from binary please use "pip install
        psycopg2-binary" instead. For details see:
        <http://initd.org/psycopg/docs/install.html#binary-install-from-pypi>.

commit b1c772d13956b960ca17a8b4361adac95fe46e52
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 12 13:24:56 2018 +0200

    Upgrade to ES 6.2.4

commit 4c844d450bd60be08715b1aa3e77129b7d60698e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 15 10:38:20 2018 +0200

    Tests: Close IndexService on QueryTester.close
    
    We've seen some flaky tests due to the IndexService still being active
    after the tests have completed.

commit 526a0e0c66fba897a6bae3a6ca753230fdbdf625
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 11 18:25:36 2018 +0200

    Fix implicit->explicit join condition conversion.
    
    The conversion helper did not retain the given join pair list order which
    resulted in a wrong order of join operations and so may caused a join to
    fail as the join condition symbols could not be resolved.

commit 38ca8347d0f0a43e0de78f7561c3ec192096b8a7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 11 17:01:45 2018 +0200

    Tests: Remove TestingTableInfo usage from GroupByPlannerTest
    
    There were again some contradicting usages. "empty_parted" used the
    routing for "t1" which had shards on 2 nodes, the name implies that it
    should be empty, which for partitioned table means there are no shards
    at all.

commit 1bcf0e1c20feeea370e1a781c8bfe9fab1b7d990
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 8 16:20:50 2018 +0200

    Optimize query building for array_length and array_upper

commit ecf06f24a36bbe239801e8fbecc8279cbe4d51f6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 10 11:12:16 2018 +0200

    Tests: Add more tests for array_length queries
    
    Various cases will be optimized, so they'll end up using different
    Lucene queries which is why we should test all different cases.

commit 06e654fdf1a7451ce3b1859f011b04c53ae98b63
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Oct 10 15:24:36 2018 +0200

    Fix parsing of pg array literal single char elements
    
    If an array literal element value contains only 1 char, it was not
    decoded correctly and ignored.
    Follow up of 6058407e8f24dc13db2ce23fd5794c950a958b24.

commit 40d6d68d06d23f946c0601ad5872aeff2035b7e8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 10 15:58:50 2018 +0200

    Set CORS headers if cors is enabled on blob endpoints
    
    Fixes https://github.com/crate/crate/issues/7719

commit e54696155cb41add956c3c9044ea3ec324137a2b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 10 10:09:22 2018 +0200

    Tests: Use QueryTester in LuceneQueryBuilderTest

commit ac9d52e2cd8492c1efd74562c5ee5ee467b82a17
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 9 17:12:09 2018 +0200

    Tests: Add test utils to simplify writing lucene query tests
    
    This adds a new `QueryTester` that can be used to index document and run
    queries against an index.
    
    This sets up most of the "real" components involved in a regular
    cluster, but avoids much of the overhead (networking). So using it is
    cheaper than running a full blown integration test.
    
    This also adds some dedicated tests for `array_upper`, as I plan to
    optimize these queries later.

commit 18d2e4e205b7217733cc8e38b5d731c8496b1ed6
Author: Savvas Makalias <savvas@crate.io>
Date:   Fri Oct 5 16:20:20 2018 +0300

    Move TransportAction bindings in TransportExecutorModule

commit cad3005707a986fdc8791da7c3be5cde629dc18b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 5 10:23:39 2018 +0200

    gradle: Update shadow plugin to 2.0.4

commit e8de85fb30758430986439c6280eb9340670b1e6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 9 14:41:11 2018 +0200

    Run tests on azure pipelines also with JDK 8

commit 4ae250506463e8123ab973afe2e7badb9c388d5b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 9 14:38:24 2018 +0200

    Drop appveyor and travis
    
    Azure Pipeline covers windows and linux and runs the same test.
    Jenkins covers the full test suite, so we don't need appveyor and
    travis.
    
    Azure Pipelines has Github checks API integration and seems to have more
    parallel builds than appveyor.

commit 8680dc94d864bba08192dc48a45fbb6acb2f9a72
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 8 15:23:19 2018 +0200

    Expose array_upper as array_length as well

commit 55469aa87063ae4fa061391a31d41857f4e58f6f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 8 15:19:41 2018 +0200

    Avoid duplicate `value` calls in array_lower / array_upper
    
    If the second argument is itself a function we would unnecessarily
    evaluate it twice.

commit b6a74dc9f450b49593587f780053bef4a0c4b353
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 9 14:35:12 2018 +0200

    Replace travis badge with azure pipelines badge in README

commit ce9b4bc9d08c1a6aadfd97621ee70947784a86b2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 9 11:17:58 2018 +0200

    Re-work comparison operators to use composition
    
    This changes the operator implementations to use a `IntPredicate` that
    indicates if the comparisons result should be considered a match or not
    instead of having an abstract `compare` method that is overriden by
    several sub-classes.
    
    The motivation for this change is to be able to re-use the
    `IntPredicate` implementations later on in a query optimization for
    `array_length` / `array_upper`.

commit d7b82416b97bb4b45aab6259f60bd04125e50a1f
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon Oct 8 16:40:36 2018 +0200

    correct literals markup

commit d0ce329851299707f521c53118590f341ff1e17f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 5 14:38:21 2018 +0200

    Do not throw IOException in StreamBucket.Builder#add
    
    All call-sites simply wrapped the IOException into a RuntimeException.
    We can do that directly within the StreamBucket.Builder to avoid the
    try/catch blocks elsewhere.

commit 2325c3f5625cb5200236ea93bd1bf079a8b5d66d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 5 14:30:47 2018 +0200

    Change StreamBucket to use Writable instead of Streamable

commit b2f86e11c8762c7f5fec04edc6ed93db86472745
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 5 12:07:44 2018 +0200

    Make StreamBucket usage concrete
    
    Several components used the generic `Bucket` interface but the main
    purpose of these components is to serialize buckets across the wire, so
    we can make it concrete.
    
    This allows us to remove some unused code that would've copied the
    `Bucket` into a `StreamBucket`.

commit d4973328afa24d068f704d3a0fd18c3aa6603938
Author: Autophagy <mika@crate.io>
Date:   Fri Oct 5 13:56:00 2018 +0200

    Amend 3.0.7 notes with notice about changes to CREATE REPOSITORY
    
    In 3.0.0, a breaking change was introduced that removed the 'region'
    setting from the accepted parameters of the CREATE REPOSITORY query,
    instead opting to infer the region from the endpoint parameter.
    
    However, between 3.0.0 and 3.0.6, this 'region' setting was accepted as
    valid syntax, meaning that CREATE REPOSITORY queries that should not
    have been accepted, were. This was fixed in 3.0.7 with 37a4feec5afe8e6355caa08f69597b78582a6cd1
    
    This commit adds a notice to the release notes of 3.0.7, warning that
    the behaviour of the CREATE REPOSITORY query may break between 3.0.6 and
    3.0.7.

commit d96f2b2569f89cf0be453a5356384c943336e1dd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 4 16:51:39 2018 +0200

    Enforce setting the streamers to retrieve rows from DistributedResultRequest
    
    There was an implicit contract that the streamers have to be set to
    de-serialize the rows. This changes the API to make the contract
    explicit.

commit e5be6f5a739371814d2558d53a37fe81a5c3abcf
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 5 10:22:28 2018 +0200

    Remove docu mentioning postgres array literal constants are not supported.
    
    We DO support this syntax for quite some time already.

commit 6058407e8f24dc13db2ce23fd5794c950a958b24
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 5 10:15:05 2018 +0200

    Fix decoding of postgres array literal constants
    
    Unquoted elements and single element arrays were not decoded correctly
    and resulted in empty arrays.

commit 762122248e0c8da1bfcb214c8f443497c695a7c5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 5 10:04:01 2018 +0200

    ci: Don't run tests in parallel on azure pipelines
    
    Seems to be too much for the machines. We've had test failures within
    `assertBusy` blocks.

commit 25122b619e05959cf370f360b9d8ec844c6165de
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 3 14:47:34 2018 +0200

    Do not recurse into function arguments on group by semantics validation
    
    It is valid to group by a scalar function, so there is no need to
    traverse into a scalars argument to generate an error message.

commit dd48ee42417aba3bc8220edb86f189f9ea753c47
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 4 16:14:00 2018 +0200

    Allow ANY = on object columns
    
    We can compare objects and ANY is implemented on top of it, so we can
    remove this artificial limitation.

commit dd80b517371c37fdd4a4a356c6b249809265c5d4
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Sep 18 16:58:05 2018 +0200

    change to "on conflict do update set"

commit 64b65fc8de3103a2ea877047b32e06af1f1677f7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 4 14:56:34 2018 +0200

    Remove TODO about reference nesting and simplify logic
    
    The TODO was a bit miss-leading, the logic that is in place there makes
    sense. Creating children of object arrays as array themselves within the
    TableInfo would break insert validation and type mapping.

commit f8c0df54e863ae4362c8ef574e607c158cb2a952
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 4 11:33:42 2018 +0200

    Keep original stacktrace if possible
    
    The source of an error was usually `esToCrateException
    SQLExceptions:185`, because that was where we convert exceptions to get
    the right status code / avoid leaking information to a user.
    
    The original source of the error is usually more useful. So this changes
    the logic to use the original stacktrace if possible.

commit 961128454e48642f9914e0ab23c2b20aa69fcef4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 3 13:54:42 2018 +0200

    Allow mixing aggregations and table functions

commit 375c3d65557f68c3832d57367cfae5365eede17c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 4 11:35:16 2018 +0200

    ci: Increase request timeout for azure pipelines

commit 6b3dd85420bd6634ca9b129ea38c47612a7a5035
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 4 10:07:07 2018 +0200

    Tests: Enforce all tests to pass to merge a PR

commit baa9f385041b3ee7a462a25796e3daef9c3f0fda
Author: azure-pipelines[bot] <azure-pipelines[bot]@users.noreply.github.com>
Date:   Tue Oct 2 15:04:03 2018 +0000

    Set up CI with Azure Pipelines

commit bee146eae9b456d66aaff6cbc3fb713d93802cc0
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Oct 1 11:15:39 2018 +0200

    Use default SHIPPABLE env var instead of custom one.
    
    Shippable provides already some standard ENV vars, lets use them.
    See http://docs.shippable.com/ci/env-vars/#stdEnv

commit fb6f74b90bd757fc43315361c8c6ee6f6e5b4c74
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 3 10:41:31 2018 +0200

    Handle _fetchId correctly in the ProjectSet operator
    
    In a query like `select unnest(arr), x` the Collect operator is allowed
    to re-write `x` to `_fetchId`. The `ProjectSet` operator didn't handle
    that case correctly.

commit 4550229bc57442a29c3fa3dd0f8b20a675e025a3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 2 13:58:42 2018 +0200

    Throw a sensible error if table function is used in WHERE

commit 434a66e2e2f02ffd6bf972793713d8d4224f3ca1
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Sep 25 14:33:41 2018 +0200

    drop superfluous FROM clauses

commit 4234389566615c7cc394087e9e9f209caafef116
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 1 16:45:32 2018 +0200

    Add the generate_series table function

commit 6393ccd3896562628e565a5165f7ae5c240a33d4
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Oct 1 19:31:32 2018 +0200

    Add PgConstraint table.

commit 52ebae1422e2691af42bb3b9c7d64c69f759c7e7
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Sep 27 11:23:10 2018 +0100

    Add PgIndex table.

commit 00199d2b26128f170059cde4e30a14e047710892
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Sep 26 18:49:02 2018 +0100

    Add PGType.typtypmod column

commit 330f5c937da521d5c360222c3b94a2a469d16f4b
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Sep 26 18:46:19 2018 +0100

    Add PgAttribute table.

commit 9fa1acaa9290da9f35426f659f0355f5968b6233
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Sep 25 19:48:53 2018 +0100

    Add PgAttrDef table definition and pg_get_expr scalar.

commit 9a09a882be827e2ca756a1d75688e78d424337c7
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Sep 18 17:55:38 2018 +0200

    Add PgClass and PgNamespace table for postgres compatibility
    
    OID's are created using a Murmur3 32bit hash of the idents.

commit 2acc4cc5dea1e1ed89693505689a3dac651203be
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 1 15:51:29 2018 +0200

    Restrict table functions in select list to 1 column

commit e6e077058fa96959da39476812d7197a45c586df
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 1 12:29:16 2018 +0200

    Support table functions in the select list

commit afed02d0de26e4050b71fe3e4a665dd017bf3040
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 28 16:44:40 2018 +0200

    Add a Projector implementation to apply row generating functions

commit 7bada0eba0e3f01cdc7bffacefa967277e48fdb2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 28 15:01:15 2018 +0200

    Add a `FlatMapBatchIterator`
    
    This can later be used to support row generating functions in the select
    list.

commit 998c2a51d1e2ebea4ec858ed02f6aceeb4c7e06e
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Oct 1 11:09:11 2018 +0200

    Fix gradle `run` and `runDebug` tasks.
    
    Setting the `es.path.home` to `sandbox/crate` will fix running theses
    tasks as otherwise no valid configuration files are found
    (a valid `log4j2.properties` is required) and CrateDB will refuse to start.

commit bc44ce517b70b7588699c6810aa49fcc7e911454
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Sep 27 23:25:28 2018 +0100

    Implemented the ``array_lower`` scalar.

commit 2eaa5eb464f4a5edfe72c1b970cc4f9e83bdea73
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Sep 27 17:36:36 2018 +0100

    Implemented the ``array_upper`` scalar.

commit 0d6ea5c0d38ff060441e3c555d7eed006d3524dc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 28 11:17:21 2018 +0200

    Update netty to 4.1.30

commit eb0c4c695154808253bb8c4eeb66207601e353f7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 27 17:30:20 2018 +0200

    Support using type aliases in CREATE TABLE / ALTER TABLE

commit 62ffbc860ce6ceb7f8bc40059fd8688e72dfbba0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 27 15:32:12 2018 +0200

    Add some type aliases for casts
    
    For increased postgres compatibility.

commit 9a155764721b3412e8277a3a851173c70f8467f0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 27 14:23:39 2018 +0200

    Remove hard-coded data type names from parser grammar
    
    To support type aliases we need to allow any identifier as type name.

commit 5ae139ca2f40d2e3d868d8ffe655bf9855d2b398
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 26 16:27:27 2018 +0200

    Tests: Replace USER_TABLE_INFO with create table statement

commit 1a48aed3457b8497dc8be9a5967f5d34cb3becf2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 26 11:20:10 2018 +0200

    Tests: Replace TestingTableInfo usage with addTable in WhereClauseAnalyzerTest

commit 15512bc7d35097ae8277246d41327555252c6a4a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 26 13:40:53 2018 +0200

    Make SymbolToTrueVisitor a singleton
    
    It has no state, so we can have a single instance.

commit f1b902626ca8600e7cae8fcff8fbda8f8ef60b36
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 26 10:51:39 2018 +0200

    Tests: Replace TestingTableInfo usage with addTable in LuceneQueryBuilderTest

commit 55f75d4257cf5dbf186849bf41618f358a18318c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 26 14:18:46 2018 +0200

    Re-integrate NullEliminator into query-building
    
    `normalize` of the `WhereClause` wasn't called, so the `NullEliminator`
    wasn't used.
    
    This integrates the `NullEliminator` into the `LuceneQueryBuilder` to
    make sure we generate optimized queries.
    
    It looks like not using the `NullEliminator` didn't result in queries as
    bad as they used to (https://github.com/crate/crate/pull/6799), but
    re-integrating it leads to better queries.

commit b291c974055ec7e27053545c8cd15e411de3418f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 26 13:22:20 2018 +0200

    Remove deprecated ValueSymbolVisitor

commit 3a678e406bcbb26b630b8fcaf0aecf6ccbe5c207
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 26 11:54:35 2018 +0200

    Replace usages of ValueSymbolVisitor

commit 8fb76165d92ed60076486bfbc0cbc2032ceb0322
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 26 11:38:15 2018 +0200

    Avoid using ValueSymbolVisitor in CopyAnalyzer
    
    It is deprecated.

commit 2a966b48d8e80b5791521299f37e42691d55ea3a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 26 11:28:57 2018 +0200

    Avoid using ValueSymbolVisitor in WhereClauseAnalyzer
    
    The ValueSymbolVisitor is deprecated

commit 7c27d25e5682bf275607bad6a06f22aaf07720c9
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Sep 25 14:46:09 2018 +0200

    correct order of sys.shards columns

commit 22c954b9a4076112e71bf9fcefa6e874c98a3cb2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 26 11:21:42 2018 +0200

    Use common terminology for methods in Lists2

commit 1b4094e1a0601a63c888158e193fc1c8900fd2e2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 26 10:36:55 2018 +0200

    Tests: Initialize Schemas correctly in SQLExecutor
    
    We need to trigger an initial `ClusterChangedEvent` in order to load
    custom schemas.

commit c239e0c4672048178b52148597ca0ff29543f69e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 26 09:49:54 2018 +0200

    Reflect releases of 3.0.7 and 3.1.1

commit 06ef320df3912194aacc0a1af3dc5e1441026f44
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 24 17:43:18 2018 +0200

    Remove Value symbol
    
    We've used the `Value` symbol primarily as a `type` marker for a couple
    of projections. We can use `InputColumn` for the same purpose to reduce
    the "symbol vocabularity" a bit.

commit fdefc834e8677ea76cf0a16cb01c18a727af97d5
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Sep 25 13:33:55 2018 +0100

    Drop redunant schema check (if table's missing we report it)

commit be4f49619f9a53520d8f4b1e8ae684dc8b147da5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 24 21:09:35 2018 +0200

    Tests: Utilize base methods in LogFunctionTest

commit 5c4b56d0812aa0381669569b287c0fc2a2fb9c1a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 24 19:31:32 2018 +0200

    Update gradle to 4.10.2

commit 210b4b806c980937a4b2b8d23033b48a9a21f9ba
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 24 21:18:30 2018 +0200

    Tests: Move schemas unit tests into unit test class
    
    Running the `SQLExecutor` based unit tests against a `clusterService`
    instance setup via the integration test setup can cause issues. It is
    messing with the cluster state.

commit 51aa233c1526ad0b4ad89ec4b5fcb9dde3eeeab1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 24 17:27:18 2018 +0200

    Remove unused isRawSourceInsert from ShardUpsertRequest
    
    Became unnecessary due to the work done in https://github.com/crate/crate/pull/7647

commit 7bdaa339f67fe7ef6602627a7451c94af86411c8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 24 14:38:34 2018 +0200

    Encapsulate function lookup logic within Functions
    
    Moves `getImpl` from `ExpressionAnalyzer` into `Functions` - making all
    other methods private.
    
    Although it made testing a bit more convenient in a couple of places, it
    shouldn't be possible to by-pass the regular function lookup logic.

commit e75972a92cadd42c0c2900669453a037ffec3b0b
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Sep 24 15:11:59 2018 +0100

    Docs: clarify the search schema is iterated over and show how to set it.

commit a2fb4d4502b732f5d63d9f2ba5e98d004b116b9f
Author: Andrei Dan <andrei@crate.io>
Date:   Sat Sep 22 16:38:57 2018 +0100

    Resolve user defined functions against the search path.

commit 75e8ed6d70b3e7fc3f2fb8c196e028385ea449cc
Author: Andrei Dan <andrei@crate.io>
Date:   Sat Sep 22 16:37:37 2018 +0100

    Testing: support for configuring the search path on the SQLTransportExceutor.
    
    Also renmaned `SQLTransportExecutor.defaultSchema` to `currentSchema` as
    in the search path context the "default" schema is not a valid concept
    anymore.

commit 00ad886e57af83fae2e06afc0d3af0a0d104717f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 21 16:15:26 2018 +0200

    Remove a SessionContext constructor overload
    
    The constructor was mostly for testing convenience and the defaults for
    `option` and `defaultLimit` were in two places. (Session and
    SessionContext). This removes them from SessionContext

commit cd484ded8e345c640163ec4e207c9a5626391f85
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 20 11:03:05 2018 +0200

    Tweak NegativeLiteralVisitor API
    
    That it uses an Visitor internally is an implementation detail. A
    `negate(Symbol)` makes more sense to a caller than `process(Symbol,
    Void)`

commit d01f7b97a6642a29675286e23f6015db99fecfe0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 20 10:57:37 2018 +0200

    Make expression negation errors consistent

commit 90264395755982541f032e6429e2d13fc89b3ffe
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 20 10:34:27 2018 +0200

    Remove unused SafeExpressionToStringVisitor

commit b6e624b2e55e32b5c8c408f2a0e03207e513a434
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 19 19:46:27 2018 +0200

    Migrate FunctionInfo from Streamable to Writable

commit 49582562830530c1eefef1fe5b516468875a740a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 19 19:28:08 2018 +0200

    Migrate FunctionIdent from Streamable to Writable

commit 215b795576a3009ff304e28fb6d2bf1cf8420007
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 21 08:20:19 2018 +0200

    Mergify: set automated backport labels
    
    See https://doc.mergify.io/automated-backport.html

commit 0791cb1ac5942cc2f613779e64c48a327be9a22b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 20 11:39:48 2018 +0200

    Raise unknown function instead of NPE if calling missing UDF

commit c300f40abc698633caac7a99582452d19341f06d
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Sep 19 16:21:55 2018 +0100

    Deprecate SQLExceutor.addDocTable (addTable should be used instead)

commit ecac4183684ca3751c62fa414ab9cdc7943165d3
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Sep 19 12:18:36 2018 +0100

    Testing: add Schema resolveTableInfo/Relation tests.

commit 401daa93a87d15ce8a8a0ed579cf81e337aaf1d2
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Sep 19 11:04:44 2018 +0100

    Testing: SQLExceutor exposes the schemas to ease table resolution testing.

commit 1f3975a36b7f28029cc905b077ca807c7c92e2ef
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Sep 12 15:13:41 2018 +0200

    Analyzer: Resolve the relations (tables and views) against the search_path.
    
    We now support a list of schemas in the search_path (pg_catalog being the
    first, implicit, one in the list). When analyzing statements we now resolve
    the relation's schema (if not specified) against the configured search_path
    by iterating over the list of schemas and yielding the first one that contains
    the relation. The `create table` statement is the only exception to this rule
    which, if the schema is not specified, will use the default schema (ie. the
    first one in the search_path)
    
    In case we don't find a matching schema we will report this using a schemaless
    message in the form of "Relation x unknown".
    
    This also drops the PostgresITTest.testCustomSchemaAndAnalyzerFailure test
    as we'll not report that schema is unknown but relation unknown.

commit 9ef159ef2afd164040fcfaedc56fc93902113268
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Sep 11 12:13:28 2018 +0200

    Added SearchPath that models a list of schemas used for resolving tables.

commit 9becf0b0b473f1936f1a92c6044019576c558ce9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 19 21:27:45 2018 +0200

    Inline createUnknownFunctionException
    
    We don't need to wrap a single `new T..` call into its own function and
    there is no need for an extra full list copy to generate a string.

commit e879da6e75217611d3088c9ce0dcdf9ff59dec60
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 19 18:55:38 2018 +0200

    Remove genIntInfo and genDecimalInfo
    
    Both methods did the same thing

commit e6973a4cf83d7e9e05b9d9840e14c667398ff077
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 19 18:24:30 2018 +0200

    Remove unused MappingsApplier

commit 9d5e7c2ee3ea1103de48426e9c00408b1dd08743
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 18 10:28:56 2018 +0200

    Support function evaluation in subscript index expressions
    
    Previously the subscript logic always jumped into the "create array
    subscript" branch when `subscriptContext.index()` wasn't null, which was
    the case if it is a function - which might still resolve to a string.

commit a8c6ec7d4ee596a8c5aad1b732839dcdad0317f5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 19 11:08:28 2018 +0200

    Update mergify config to use enabling_label

commit 2f712082be4b34a4c7daac7dfae8f75583452579
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 5 10:53:54 2018 +0200

    Allow query operations on nested arrays

commit 480db605f884a39c4b064c684d62f1e571b83efd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 5 13:52:38 2018 +0200

    Make method signature in AbstractAnyQuery resemble SQL syntax

commit 0f997fb836c2ab2c0369a65d2d7a4846fc939218
Author: Savvas Makalias <savvas@crate.io>
Date:   Mon Sep 17 17:32:42 2018 +0200

    Docs: Add documentation for array(subquery) expression

commit 148bb02a6915e21b624a75336e85df1775c02832
Author: Savvas Makalias <savvas@crate.io>
Date:   Thu Sep 13 15:28:43 2018 +0300

    Implement analyzing for array(subquery) expressions
    
    Restrict access to visitArraySubQueryExpression()
    Use same functionality on array expression to decide whether single/multiple rows are allowed in children subquery expressions
    Add array(subquery) tests for analyzer and also integration tests

commit 4268ba2acd0a029ee69f46f12c6eb4be510cdb95
Author: Savvas Makalias <savvas@crate.io>
Date:   Tue Sep 11 12:20:06 2018 +0300

    Implement parsing for array(subquery) expressions

commit 616c19fedab864095adbc5269ed6fafd3ddf752e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 10 21:23:29 2018 +0200

    shippable: Run tests against master
    
    Changed https://app.shippable.com/github/crate/crate/settings to only
    run on PRs

commit 70c427ea8d3848a2d3d920ad78d4b1d3810e62ba
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon Mar 19 20:11:09 2018 +0100

    clarify 0-1 replicas note

commit a8b5c0dc70f12083a02ab45e93d9be2110d72b12
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 18 10:02:09 2018 +0200

    Extract duplicated symbol lookup logic into functions

commit 8ed5a9c3cff174ada79ffcfe69016fb5e4d1b84c
Author: Ruslan Kovalov <ruslan.kovalyov@gmail.com>
Date:   Sun Sep 16 14:08:00 2018 +0200

    use generic parser rules for priviliges statements
    
    There is no benefit in using special parser rules in this
    case, such as we do not use any visitors for them and access
    them via context.

commit c5be1adba4d467c8ae6ab2302f0ab379e3d355a9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 5 15:59:40 2018 +0200

    Optimize obj = {} expressions to utilize the index if possible

commit b8302e2f39754990bc6b37ff2634a21b376e9e06
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 17 11:02:09 2018 +0200

    Merge Maps and StringObjectMaps

commit 4a3c92bd0f129568d29ffe35771c686fbed4c56f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 17 10:54:07 2018 +0200

    Remove unused commonAncestors

commit 5f9027c190277adb2e3ef990025b09b9e9c6a5f1
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 14 17:07:10 2018 +0200

    Fix batched statement execution.
    
    The batch portal used wrong parameters on `sync` (executing).

commit a7295908dd908b3438e4ad6cfd51d49806d2cb3c
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jul 17 10:21:13 2018 +0200

    refactor statement properties validation/processing
    
    Use ES Setting logic instead of crate’s SettingApplier, this will
    remove complexity and streamline setting validation.
    Also inherit settings for a partitioned table from a normal table instead
    of having duplicated definitions.

commit fb92ca16e883407dab8b09d4cd99a47f9d0cedf1
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Sep 13 17:01:18 2018 +0200

    Bump version to 3.2.0-SNAPSHOT

commit 54f697f04755acbdf3c8b6fc8996a209dcbcbc9c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 10 13:34:49 2018 +0200

    Fix table creation with generated columns inside objects
    
    Something like `create table t (obj object as (x as 1 + 1))` resulted in
    a NPE because the generated columns of objects were not initialized,
    causing them to have `null` as `dataType` and no formatted expression.
    
    This also adapts the generated column injection logic to account for
    nested columns. This has the side effect that `_raw` is no longer
    deterministic. But the actual format of it should be considered an
    implementation detail and not matter.
    
    This is marked as change instead of a fix, because it will only go into
    `3.1`. The scope of the changes is too large for a backport to `3.0`, so
    `3.0` will receive a small fix that turns the `NPE` into a friendlier
    error message.
    
    Resolves https://github.com/crate/crate/issues/7642

commit c16b4645aca80ebea363d0ba7868550b44665cc7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 11 14:21:56 2018 +0200

    Extract source generation logic for update operations
    
    Similar to 9edee05b218ea07a6a95977d721230dfc374455b
    
    This makes the components easier to unit test and shares some logic with
    the insert source generation.

commit d92d161362bc4c755b8243a4357f09618133eeba
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 11 14:32:37 2018 +0200

    Remove SourceAndVersion from TransportShardUpsertAction
    
    `version` was always set to `GetResult.getVersion()`, which can be
    accessed directly.

commit d5452918e1e489e2d99291db10bc04649d2f3d4d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 11 11:42:49 2018 +0200

    Make getByPath implementations consistent
    
    Previously one implementation aborted early if a key wasn't present in
    the dictionary, returning the last value instead of null.
    
        getByPath({o: 1}, ["o", "x"]) --> returned 1 instead of null

commit 9edee05b218ea07a6a95977d721230dfc374455b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 10 16:52:17 2018 +0200

    Extract source generation from TransportShardUpsertAction
    
     - Should make it easier to write unit tests
    
     - Should help to avoid spreading the generated column logic all over the place
    
     - Avoids unnecessary operations. For example, previously we generated a
     `BytesReference` source from the incoming row which was then discarded
     if it lacked some generated columns. Furthermore, some of the generated
      column "setup" code is done once per bulk request instead of once per
      item.

commit 9d636c3eec8339c806974f150e7a45d09a74b07b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 10 21:17:48 2018 +0200

    Make attributes in FunctionExpression final

commit 086ac62a01459e103a09b102d5f0f6f8fff9f447
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Sep 10 10:19:54 2018 +0200

    MergeCountProjection: implement hashcode

commit a90aa48b8b43161a29e3eaf89859ea140724a79b
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Sep 3 21:25:19 2018 +0300

    Use io.crate.*.CompletableFutures.supplyAsync that fails the stage on error.
    
    We favour failing the completion stage in case of erorrs when submitting a task,
    rather than using try/catch blocks which are easy to forget.
    The crate.CompletableFutures.supplyAsync makes sure the exceptions are propagated
    in the returned CompletableFuture.

commit fb4ee5fad521b7a324f1fbbeb8528e45291180d2
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Sep 3 15:46:32 2018 +0300

    Add CompletableFuture#supplyAsync(Supplier, Executor) to forbiddenApis.

commit 0524db0f8f88eba5d45493eff27a7f18e897fb10
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Sep 3 11:47:06 2018 +0300

    Handle executor rejected execution exception when accumulating bucket rows.

commit ed1816dff9c0e16946e5fe8f18e2c01d0f934693
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 6 14:47:55 2018 +0200

    Fix warnings in AlterTableOperation
    
    The `partitionName` argument was always `null`, so the `getIndexNames`
    method can be removed.

commit db4b4f816f4f716874e86457ca619b26a771d5e3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 5 12:14:11 2018 +0200

    Merge LikeQuery and LikeQueryBuilder

commit e2605e4369a40919aa4a874b71c8a72b0ab26fca
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 5 11:58:30 2018 +0200

    Remove CmpQuery by re-using RefAndLiteral

commit 1e77cae66bb1c28ce1fa0b3283fef2b0999e24b5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 5 11:32:33 2018 +0200

    Move distance query building functionality into 1 class

commit ac448c02a468aa1caac71b3a4f2b501a47d05a25
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 5 11:18:56 2018 +0200

    Move static inner classes from LuceneQueryBuilder to top level
    
     - Reduces the level of nesting inside the LuceneQueryBuilder.
    
     - Makes it clearer that those query components have a single
     responsibility and could be unit tested.

commit 0fac1a405bdace79dc581c57e0634e498c2921ff
Author: Bas van Schaik <github@subscriptions.traiectum.net>
Date:   Mon Aug 27 13:22:35 2018 +0100

    Add LGTM.com code quality badges
    
    Remove whitespace

commit 559485ae02ed774378c16cba3a3075899efc44a8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 4 16:03:39 2018 +0200

    Add some toString implementations
    
    Can be useful for ad-hoc debugging.

commit 42ef7c045112967a153159a0fbe3a20b401d3cee
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Sep 4 16:40:38 2018 +0200

    remove unsupported S3 repository settings, add supported ones

commit d9e2198c4ccb703adcbadc8fef964a9eebd628b8
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Sep 4 16:39:41 2018 +0200

    fix processing of all supported S3 repository settings
    
    Some settings were just silently ignored, related ES PR:
    https://github.com/crate/elasticsearch/pull/151

commit 63d438db1648aa61e4faa4b5b8e0da8974f33071
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 4 15:52:42 2018 +0200

    lgtm: Set python version to 3
    
    See https://lgtm.com/help/lgtm/analysis-faqs#how-python-version-identified

commit eb17340f17cbf0405e658b60dd615a42295a44e8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 4 14:27:02 2018 +0200

    Remove throwable arg on AbstractTask close
    
    Should make the difference between close and kill a bit clearer.
    Close is the success case, kill the error case.

commit adbecb4e677b3a6bd5156bbd36c730a217b2e4e3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 4 14:16:27 2018 +0200

    Remove unused throwable arg from AbstractTask innerClose

commit dbeb0b4fb417b5d8e6388904dc516687e3828093
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 4 14:43:56 2018 +0200

    Remove some unused declarations

commit 0d3193b9301a96f7f445199946e8f6b5817d46d1
Author: ghatwala <ghatwala@us.ibm.com>
Date:   Mon Sep 3 04:43:26 2018 -0400

    Added changes to fix ArithmeticIntegrationTest failure on ppc64le

commit cb8d527627382343dbe9d016f860d44160aac56f
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Sep 4 07:48:29 2018 +0300

    Fix BatchPagingIterator behaviour to first check if killed and then if closed.

commit 32b21def343bb50f487cb894535145574ca34d7d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 28 16:26:26 2018 +0200

    Remove unused return value from AbstractTask.close

commit 18586c612ab673668332c2fd6ca6f6d07a56bb04
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 28 16:23:07 2018 +0200

    Make throwable in AbstractTask.kill Nonnull
    
    The `Killable` interface has a `Nonnull` annotation, so the
    implementation can have `Nonnull` as well.

commit 527847c605cd4d22943f2c1238aa083f5e740c58
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Aug 28 15:27:11 2018 +0200

    Drop the equals override in DataTypes.
    
    TimestampType used to be a subclass of LongType and we wanted the types
    to be equal (to enable semantically the same behaviour). This is not the
    case anymore so we can drop the equals method override.

commit 3f6e3bdcdc80efd37ef09eaa8d7e00294086fc69
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Aug 28 15:06:14 2018 +0200

    Implement missing hashcode()s.

commit 719b82f0ccb835fb78daaafe0a0b2ea6b3b4a080
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 28 20:17:06 2018 +0200

    Update gradle to 4.10

commit c2c83c00f961587059f75831e2f9687496c1011b
Author: Autophagy <mika@crate.io>
Date:   Tue Aug 28 15:01:52 2018 +0200

    Reflect CrateDB 3.0.6 release

commit 3fa4f455d74507e3aa216618b97f2e50113368d2
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Aug 28 17:07:12 2018 +0200

    Disable cgroup tests for build with shippable CI.
    
    The os for shippable builds is Linux but docker images
    are used where cgroups are not available.

commit 03795d872f39442b16ed4ad17e1fac8931531492
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Aug 28 12:24:32 2018 +0200

    Add configuration for shippable CI

commit 357f8eafe487e82ff6caaf5767722fb7ee24c129
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 28 15:07:21 2018 +0200

    Avoid retry handling for killed tasks
    
    This adds a `recentlyFailed` cache to `TasksService`. This is used to
    avoid the retry logic in `TransportDistributedResultAction`.
    
    This `recentlyFailed` can have false negatives. So we might not detect
    that a task has been killed. But for all pragmatic purposes this is
    fine. The main use for this is to avoid the retry scheduling, to speed
    up failure cases (especially in our test suite).

commit c5d1834412e62a28551801ca3dff16dd311bd6d0
Author: Autophagy <mika@crate.io>
Date:   Tue Aug 28 11:28:15 2018 +0200

    Prepare 3.1.0 release

commit bda4fa62338a6d14f41f5d2708b8a677983472e4
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Aug 27 16:22:34 2018 +0200

    Execute the bucket rows accumulation in an async manner.

commit 86f8ec388c4ea936b94d89e4ab655e7f288cc33f
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Aug 28 12:22:33 2018 +0200

    CHANGES: reflect core improvements implemented in the tiger mask cycle.

commit 0029194a672bf0b6eee6f4a39c0cfb733075f7ca
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 27 15:44:16 2018 +0200

    Make fetchMore API in BatchPagingIterator less error prone
    
    Previously the `BatchPagingIterator` used `fetchMore` to request more
    data, which was then supposed to be supplied via `loadComplete`.
    
    This changes the communication API so that `fetchMore` returns a future
    which will contain the result. Due to that:
    
     - It becomes impossible to call `loadComplete` early without having
     called `fetchMore` first. Removing a possible error case.
    
     - `PagingIterator` usage is further encapsulated within the
     `BatchPagingIterator`
    
     - It is easier to write a unit test for the `BatchPagingIterator` with
     a paged source.
    
    The `CumulativePageBucketReceiver` could probably be reworked further to
    make better use of the changed API, but I tried to keep the changes
    there minimal for this commit.

commit b60aca7d4b6e56327c43ca881b86c254c11d9604
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 27 17:40:35 2018 +0200

    Remove buckets variable in CumulativePageBucketReceiver
    
    It is possible to use the keys from `listenersByBucketIdx` for the same
    purpose.

commit d07339bb80255ef332c20de1bd6810e50328cff9
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Aug 27 15:10:07 2018 +0200

    use existing collect expression for same reference
    
    If a reference occurs multiple times, an existing collect expression is
    used instead of creating a new one.
    This reduces the memory footprint (allocations) and also slightly
    improves performance.

commit f6d1ce987d4376475c64cf22d91168de6072e4d7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 27 14:51:50 2018 +0200

    Tests: Improve testing of kill behaviour after loadNextBatch

commit 2d3950b51d82758540500d40f8bd738d47742724
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 27 14:24:23 2018 +0200

    Improve logging for task completions
    
    Log the task instance instead of the mostly useless CompletionState.
    Follow up to 2477c92e97702b91e92ce63e1c8530440f5f5d11

commit 0846aab01f2427ddbe008aaeed008f5263d05412
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Aug 25 21:48:52 2018 +0200

    Update netty to 4.1.29

commit 1c161531a7ce1ffa2e43609c9e85eda238464532
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 27 13:02:06 2018 +0200

    Avoid deadlock in testSendUsingDistributingConsumerAndReceiveWithDistResultRXTask
    
    Follow up to 200dda1542bf426cbbde1f1101023b17fcec9eb4
    
    Calling `PageResultListener` early could lead to a deadlock in the test,
    due to the the DistributingConsumer using a `directExecutor`.
    
    This also moves the `PageResultListener.needMore` call outside of the
    lock.

commit 200dda1542bf426cbbde1f1101023b17fcec9eb4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 24 16:14:59 2018 +0200

    Do not track listeners for exhausted upstreams
    
    The listeners can always be triggered immediately.

commit 3e9351f22d1719f95d98311a071aa34a238ada87
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 24 11:04:43 2018 +0200

    Avoid removal and re-adding of empty buckets for exhausted upstreams
    
    Previously we removed all entries from `bucketsByIdx` whenever a page
    was complete and then on the next buckets re-filled in empty buckets for
    all `exhausted` upstreams.
    
    This changes the logic to keep buckets for exhausted upstreams.

commit 47cba53c2ccff5ede6e9171c0a0fd7011dd4713e
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Aug 23 15:22:58 2018 +0100

    Incremental data receiver: avoid multiple consumer triggers and request more data earlier.

commit c1a6b1b30916c1fdd37b2ce184763f62dceb33d3
Author: Andrei Dan <andrei@crate.io>
Date:   Fri Aug 24 10:42:12 2018 +0200

    Fail the CollectingBatchIterator resultFuture when an exception occurs.

commit cfc15093e86e66202883125f28821056e772cfa8
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Aug 14 14:08:33 2018 +0200

    create shard inputs only once per query instead of once per shard
    
    By using shard based collect expressions, inputs can be
    created once per query for all shards, thus avoid allocations.

commit ebcbb279dec3c64bc870d8ecf9db6a4473440c78
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Aug 23 17:44:55 2018 +0300

    Fix RamAccounting calculation for grouping by primitives.
    
    1. Previously, the RamAccounting took place took place on every
       row by adding the overhead per row. The Maps used though are
       expanding by doubling the size once a certain threshold is reached.
       This resulted in OutOfMemory exceptions. E.g.::
    
         SQLActionException: 500 Internal Server Error 5000 OutOfMemoryError: Java heap space
            at io.netty.util.collection.IntObjectHashMap.rehash(IntObjectHashMap.java:457)
            at io.netty.util.collection.IntObjectHashMap.growSize(IntObjectHashMap.java:395)
            at io.netty.util.collection.IntObjectHashMap.put(IntObjectHashMap.java:128)
            at io.netty.util.collection.IntObjectHashMap.put(IntObjectHashMap.java:312)
            at io.netty.util.collection.IntObjectHashMap.put(IntObjectHashMap.java:37)
            at io.crate.execution.engine.aggregation.GroupBySingleNumberCollector.addWithAccounting(GroupBySingleNumberCollector.java:243)
    
       The problem is solved by RamAccounting in batches at the point
       that the HashMap is about to grow (double its size).
    
    2. The bytes calculated per Object[] holding the grouping states
        was 16 instead of 24 which also lead to OutOfMemory exceptions.

commit 278d77563a3e34503b297c473ec80fc92e5ee902
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 23 16:14:58 2018 +0200

    Make DistResultRXTask implement Task directly
    
    `DistResultRXTask` already has a `CompletionFuture` via the inner
    `PageBucketReceiver` which can be used for synchronization purposes.
    There is no need to inherit a second future via the `AbstractTask` base
    class.

commit 9e72cf55c07029e5eac08eeb382fcda8b596ccf4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 23 15:45:19 2018 +0200

    Replace HashMap with IntObjectHashMap to reduce memory footprint

commit 2477c92e97702b91e92ce63e1c8530440f5f5d11
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 23 15:37:27 2018 +0200

    Move logging for task actions into RootTask
    
    Instead of having each task take care of start/kill/stop logging we can
    do it centralized in the RootTask.
    
    So far it was done in the `AbstractTask`, which arguably is also a
    single place, but possible `Task` implementations not extending
    `AbstractTask` would lack the logging logic or have to re-implement it.

commit 06388966af3b970152eab3b69798db1852b6d3b3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 23 14:33:35 2018 +0200

    Remove releasePageResultListeners from PageBucketReceiver interface
    
    The `PageBucketReceiver` knows internally when it is done because it
    triggers the `completionFuture` itself. Releasing the listeners can be
    done internally as well.
    
    The single usage looked like this:
    
        pageBucketReceiver
          .completionFuture()
          .whenComplete(.. ->
            pageBucketReceiver.releasePageResultListeners()

commit fc873df4ff6de94eefa8222e59fde290272864b0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 23 09:49:03 2018 +0200

    Remove killed from PageBucketReceiver
    
    Having `kill` is sufficient. Both methods had the same semantics.

commit b2e82e9fd05717afbd9df4df8b9249a0e1376270
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 23 08:58:30 2018 +0200

    Remove some public methods from DistResultRXTask
    
    Users of the `DistResultRXTask` task have to use `getBucketReceiver` to
    get access to the right `PageBucketReceiver`.
    
    The public methods were only used in tests.

commit d34caf0239ed3409663dac15d610a991d48c49f5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 21 17:02:27 2018 +0200

    Change GH PR template to include a checklist

commit c06be9143d2f6a5c15bc07b1f24f922e4014b509
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Thu Aug 9 12:10:05 2018 +0200

    tie garbage collection logging config docs together

commit 5a31e5589871ad70fbb4e781bd80f3afb035b9bf
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Thu Aug 9 12:21:03 2018 +0200

    link to memory config guide, light copyedit

commit 5b42863c47a13b81d37e83cb6bfbfa9c258e38a9
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Aug 21 15:34:21 2018 +0200

    improve performance of sys table expressions
    
    By computing and storing the value on each next row, accessing the value
    multiple times will not decrease performance as computation won’t be
    repeated.
    Multiple expression value access can happen when a row is not materialised
    and different components are accessing the value, e.g. ram accounting +
    result building.

commit 257c0e4178a437c0202f3b12eef6ac430791aaa0
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Aug 21 17:14:51 2018 +0100

    Tests: relax the assertion on circuit breakers jmx output (especially the limit)
    
    We encountered some flakyness on asserting the exact value of the CB limit
    in jenkins so this commit changes the assertion on the exact value to
    verify that the value is positive.

commit 6addad18104908095f6031a1621c3563026c8fb6
Author: Autophagy <mika@crate.io>
Date:   Thu Aug 16 13:30:22 2018 +0200

    Add default schema to exception and statement validators
    
    This commit aims to fix an issue where users with privilges on a schema,
    for example 'abc', but not on 'doc', would not be able to use an alias
    on a table within 'abc'. This is because the schema would be given the
    schema of 'doc', rather than the default schema of the user's sesstion,
    and would fail when privileges were checked.

commit ffed852b697baa854cf532512850e9d79e254a85
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Aug 20 11:24:11 2018 +0100

    Implement an incremental page receiver used for group by and aggregates.

commit 93e9d7702ed66c7b763fbf64c589078b9ddf0d41
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Aug 15 14:03:51 2018 +0100

    Extract the `CumulativePageBucketReceiver` from `DistResultRXTask`.
    
    This commits aims to decouple the `PageBucketReceiver` and the `DistResultRXTask`.
    We will introduce buckets receivers that don't necessarily wait for all the
    buckets of a page before processing the buckets and we want to be able to
    plug these various strategies into the `DistResultRXTask`.
    Also, this removes the `failure` method from `PageBucketReceiver` as `killed`
    should always be used (there is no "resume" after a failure).

commit 994f0a5e9afaac870e3cd7465792160b8e9e83c9
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Aug 14 14:34:59 2018 +0200

    fix processing of the `operator` option of the MATCH predicate

commit 63ca841902563f5630cdb859237dce7d0f46f137
Author: Michael Beer <michael@crate.io>
Date:   Fri Aug 10 10:45:49 2018 +0200

    Added missing Python modules used for sqllogictests

commit a254e2f1cdb8698df7953974130330292d104699
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Aug 9 15:46:12 2018 +0200

    expose all circuit breaker stats via JMX

commit 0448c08bd84594e9c4852029fc2744b39740ea3b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 6 14:27:34 2018 +0200

    Make kill argument non-nullable in Task

commit 2ef669b6542ce4d5fa57f9f53b06a7c7046fde6a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 6 13:06:17 2018 +0200

    Remove the public cleanup method from the Task
    
    Tasks either successfully finish running in which case they have to
    cleanup after themselves or they're killed from outside in which case
    they've to stop running and also cleanup after themselves. There is no
    scenario in which a explicit cleanup from outside makes sense.
    
    The comment that `cleanup` might be called at any time was also bogus.
    No implementation supported that.

commit f05630d813ee736e0eb5eee6a823906e90427d09
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 6 12:07:18 2018 +0200

    Remove the public close from AbstractTask
    
    Tasks close themselves implicitly if their operation finishes. It must
    not be possible to close them from outside. (There is `kill` to
    interrupt them)
    
    The only exception to this is the `FetchTask`.

commit 946cff6a06f01389dba9a40a4ebd77fa5d510979
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Jul 31 18:03:06 2018 +0200

    simplify docs requirements.txt

commit 00d646fdd0e62769cdcf87e54781ce0e41b5c22c
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Aug 6 09:09:18 2018 +0100

    Optimize group by single primitive columns.
    
    We initially did this optimisation for long columns, this is an extension
    of the same optimisation for byte, short and integer.
    
    Benchmark                                                    Mode  Cnt    Score   Error  Units
    GroupingIntCollectorBenchmark.measureGroupBySumInt           avgt  200  819.425 ± 8.276  ms/op
    GroupingIntCollectorBenchmark.measureGroupBySumIntOptimized  avgt  200  676.864 ± 6.254  ms/op
    
    GroupingByteCollectorBenchmark.measureGroupBySumByte                                      avgt  200  603.575 ± 2.576  ms/op
    GroupingByteCollectorBenchmark.measureGroupBySumByteOptimized_usingSingleNumberCollector  avgt  200  573.886 ± 2.754  ms/op

commit 4e6e86f317fd87304f8fad9611c34df22d7f12f1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 6 13:57:24 2018 +0200

    Remove measure logic from CollectTask
    
    We've `EXPLAIN ANALYZE` which can be used to get the duration breakdown
    of specific queries instead.

commit eb3ce82e10e03c130c4e3c7023e7db2a6448d225
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Aug 2 11:23:40 2018 +0100

    Docs: Add a couple examples of cluster state changes

commit 674d9a1e55107f9be5396318fab95e61cff9ae81
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 3 14:14:09 2018 +0200

    Reimplement our own SourceLookup
    
     - Avoids Visitor creation per document
     - Doesn't gather unused fields (FieldsVisitor gathers uid, id, routing
     and parent per default)
     - Has no content-type detection (We only support JSON sources)

commit 058787f96c795064518fdbf4fb0d3ef9f2672fbf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 3 13:44:32 2018 +0200

    Optimize value lookup in ChildDocCollectorExpression
    
    Previously we converted the path for a nested column to a "dotted column
    name", and then converted that dotted column name back into an array on
    each document using a regex based splitter.
    
    That's unnecessary overhead. This commit changes the code to use a
    `List<String> path` based value extraction.

commit 823159e9ec5cb8809fce30693b8d563b3ebb3f88
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 3 17:09:58 2018 +0200

    Fix streaming of the clusterStateVersion in sys.nodes

commit 4848804c0270ad39de1ec2a96296b1abda204141
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 25 23:10:55 2018 +0200

    Remove equals/hashCode implementations from LuceneCollectorExpression
    
    Shouldn't be required and was inconsistent (E.g.
    `GeoPointColumnReference` having `equals` but not `hashCode`)

commit 552a0d69efe5700480c8e44de1e6c19ec02db99a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 2 15:08:03 2018 +0200

    Update jdbc version used in tests

commit 8d6a8c01ea07b053a1ad942d9c330ee22db2a844
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 2 15:51:39 2018 +0200

    Tests: Avoid mocking TransportKillAllNodeAction for Java11 compat
    
    Due to the use of an old mockito version which doesn't yet work with
    Java 11 some tests failed with a NullPointerException.
    
    Since updating the ``securemock`` to be based on a newer mockito version
    is not trivial this changes the tests to not use mocks.

commit 82a4df782b6651140ecc369121c2726e50ed380a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 2 10:55:53 2018 +0200

    Update netty to 4.1.28

commit 59d6147e208a010283efc67c88c0c71c0cb83622
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 1 17:40:56 2018 +0200

    jmx: Add a test-case for the NodeInfo ClusterStateVersion

commit c7b233ea1ec63747e4ce717a4a6e455bd11fb866
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Aug 1 16:08:56 2018 +0100

    Use primitive long instead of Long.

commit bc39f474d33a0d5bb1e16677769d5213fcc350c0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 31 13:00:14 2018 +0200

    probot: Reduce daysUntilClose from 14 to 7
    
    People usually either respond rather quickly or not at all. So let's
    reduce the duration until an issue is closed without feedback a bit.

commit 48dc123d67ca5cbf287f545f0178e1d864b89419
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 1 15:47:44 2018 +0200

    tests: Make selectGroupByWithBreaking faster
    
    Removes the create table and insert overhead by changing the query to
    run against a system table.

commit 81a4eb92b4822f5f9ada1214419607f090205034
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 11 13:10:57 2018 +0200

    Tests: Reduce number of threads spawned if -PtestForks is used
    
    Should help reducing context-switching and system overload, making the
    tests overall a bit faster.

commit dbf82b188ef696a72bdca4b52ac534fe20576c2d
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Thu Jul 26 16:51:30 2018 +0200

    loosen RTD dependencies

commit f227a42a41d86c29cbf337ef23b7aa144f99fb0a
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jul 31 08:13:37 2018 +0200

    reflect release 3.0.5

commit 750b4a8dacc144961199ba3460689159325d2cd0
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Jul 30 17:24:28 2018 +0200

    Expose the cluster state version via JMX monitoring.

commit 7bcc5a6e485e5f8b5a7d8482f32bd2ac34cac2e5
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Jul 30 16:21:52 2018 +0200

    Expose cluster state version in the sys.nodes table.

commit 3b24067cdfe5d1dc611672d3fb48454286d9f07a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 30 17:42:10 2018 +0200

    Add test case for group by on single long column with null values
    
    Judging from the coverage report we've no other GROUP BY tests on long
    columns where there are also null values present.

commit 6852e3f01775ee1efee8cb28e80dd440d23fa925
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 3 11:18:08 2018 +0200

    Optimize group by single long columns

commit 71940e50768d75d80e80e7eb02055758e6467c7b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 30 11:58:01 2018 +0200

    Remove onRow abstraction from AggregateMode
    
    Follow up to 5f93c9f6615bc47b17916bd2a218faf7feabd01d
    
    Since we're already using different accumulators to optimize the
    `reduce` we no longer require the `onRow` abstraction.

commit 4cb2584370e73c2e601f3c7f1cf8a468d863d4f1
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Jul 27 16:05:14 2018 +0200

    Fix issue with index upgrader introduced with previous fix.
    
    New mapping created after purging the "dynamic_templates" element
    is missing the root "default" element. This results in an exception:
    `java.lang.IllegalStateException: Can't derive type from mapping, no root type:...`
    which prevents a CrateDB node from bootstraping.
    
    Issue was caught with `test_upgrade_paths (bwc.test_upgrade.StorageCompatibilityTest)`
    of `crate-qa` when trying to upgrade from latest `2.3` to `3.0.4` version.
    
    Followup of: c3a321f28a9a0abd1d963180007f88aeaaee13be

commit 5f93c9f6615bc47b17916bd2a218faf7feabd01d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 26 19:52:15 2018 +0200

    Avoid new state creations in the group by reduce step
    
    If we're reducing/merging results from the upstreams in the group-by
    operation, the incoming rows already contain states. We can use that
    existing state instead of creating a new state per first-seen-key.

commit b99678ea93bd4d2a8856544e0b2191d940dafda0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 26 09:58:52 2018 +0200

    Replace iterator based loops with indexed loops in GroupByOptimizedIterator
    
    Showed up in profiling. It is a micro optimization, but this is executed
    per doc.

commit 8ad1eaa8fcaf61e76aaa409f836811da8f912ab1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 26 19:38:13 2018 +0200

    Fix es/upstream pointer
    
    https://github.com/crate/crate/pull/7472 changed the upstream
    accidentally.

commit fc5977cb4d8e93c62ea34f5170b3fa9dd57f645b
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Sun Jun 24 14:45:08 2018 +0200

    fix up enterprise licensing documentation

commit cc8225769c763977d515fb4c165c32039a909589
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 23 12:30:23 2018 +0200

    Update netty to 4.1.27

commit e94076dcd5bb9c264e16bc2231200846c36feedb
Author: Autophagy <mika@crate.io>
Date:   Mon Jul 23 14:40:51 2018 +0200

    Reflect 3.0.4 release

commit 424306e288a1c815ef9592922cac15a6f80ab407
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 23 10:31:26 2018 +0200

    Skip node normalization in ShardCollectSource
    
    We're doing a shard-level normalization later on, and there are no node
    level references which would require a separate normalization step. We
    can remove the node normalization step.

commit 488d60f18ad26209ec6572e3da5b5479e1c930f6
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jul 20 09:50:22 2018 +0200

    add ``ThreadPool`` JMX MXBean which exposes statistic for each pool

commit 777560c6863041a4fe37e913d3277f44000184c6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 19 15:18:54 2018 +0200

    Don't use optimized group by string key for high cardinality ratio

commit 4688f47270ad7fd94c3930622ae695253d1125bb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 6 16:39:22 2018 +0200

    Optimize GROUP BY on single string column
    
    This adds a new specialized BatchIterator implementation which can be
    used if a GROUP BY on shard-level for single string column is done.
    
    This specialized BatchIterator implementation utilizes Lucene ordinal
    values to reduce the number of key value retrievals from one per row to
    one per unique key value.
    
    Cases which should see a big improvement are GROUP BY on low cardinality
    columsn with few aggregations.

commit b8c79e645dc49feb470d54f53fe38798f22e9615
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jul 18 15:53:11 2018 +0200

    fix registration of the new index/template upgrader
    
    follow up of https://github.com/crate/crate/commit/c3a321f28a9a0abd1d963180007f88aeaaee13be

commit 88be3abaefc9e75eb97f8f3df94baebbba1f9e0c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 18 10:44:19 2018 +0200

    Update gradle to 4.9

commit c3a321f28a9a0abd1d963180007f88aeaaee13be
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jul 17 14:12:36 2018 +0200

    add template upgrade service to upgrade the `crate_defaults` template
    
    The `crate_defaults` template once created was never updated and so
    could contain invalid values when created within an old CrateDB version.
    CrateDB v1.1.0 to v2.2.0 created templates which are not compatible
    with versions >= 3.0.
    Also this old dynamic templates could then already end up in newer indices
    so they must be purged from existing indices or snaphots.

commit 95f4290ffc82e55acace6a8037536a05ce131ab9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 11 12:09:15 2018 +0200

    Make attributes in Reference final

commit 4f5bb6ac8003d2a61f07e46cc9f5d9ad29a13b23
Author: Robert Axelsen <13132899+robaxelsen@users.noreply.github.com>
Date:   Mon Jul 9 20:25:39 2018 +0200

    Fix broken docs link

commit f939705597c457e730d948b5dbee11e2df1bf5bd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 10 14:58:19 2018 +0200

    Switch to int64 binary timestamp encoding in pgwire
    
    Some postgres clients do not check for the server parameter for the
    binary encoding but simply assume that the newer int64 binary encoding
    is used.
    
    Examples are pgx, and asyncpg.
    
    (E.g. https://github.com/MagicStack/asyncpg/blob/3565ef8c68beb3cf5c22dce50388c9d226360a3f/asyncpg/protocol/codecs/datetime.pyx#L69)
    
    This changes the encoding to make these clients work. The double
    encoding has been removed from Postgres a while ago:
    https://github.com/postgres/postgres/commit/b6aa17e0ae367afdcea07118e016111af4fa6bc3

commit 918d35d4b0e6c11def597ce55ab7392efc305efe
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 9 16:49:24 2018 +0200

    Re-use GetResultRefResolver in TransportShardUpsertAction

commit 05cf64ef2ef8838ae4f82dd6add4addfe9518e0b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 9 16:33:52 2018 +0200

    Tests: Avoid mocking in UserAuthenticationMethodTest

commit 77bdce6ba295cdf2a18eac2d98345f7894d5c1e3
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jul 9 17:03:11 2018 +0200

    updated elasticsearch upstream to latest v6.1.4_cherry commit
    
    recent changes: see https://github.com/crate/elasticsearch/pull/150

commit 814380f2c8b2c73941fb882eb9562b39d5fa7871
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 6 15:14:54 2018 +0200

    Run sys.shards and sys.nodes queries in GET thread-pool
    
    The MANAGEMENT threadpool is used for certain cluster management
    activities. We shouldn't have user invoked read queries interfere with
    those.
    
    This therefore changes the threadpool used to GET which was so far not
    used at all.

commit 299ea5bd354999dee3f24879a995a53f6e231e10
Author: Emily Woods <emily@crate.io>
Date:   Fri Jul 6 09:09:10 2018 +0200

    Exclude netty from es/repository-hdfs
    
    Exclude modules ``netty`` and ``netty-all`` because they are introducing
    different versions of Netty.

commit a83dce6b034aa268cbdd7cc9e7c2638312c41d80
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 15 16:06:48 2018 +0200

    Disable jacoco for Java 11
    
    Doesn't support it yet and likely won't until Java 11 is released

commit 740bcc9d038f37d1d0b21f73242cf637925db79f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 5 16:07:07 2018 +0200

    Make shards in routing primitive ints

commit ff1f3743c0231146131a5ad221bb5260d3700818
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 6 12:02:49 2018 +0200

    Avoid wrapping GetResult in a GetResponse

commit d2c934019c51c8fbc4374864fd908c45b2782010
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 5 13:52:17 2018 +0200

    Replace guava Function with jdk Function in Buckets

commit da7f937e93fa20295015b03b1659123453a03994
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 5 16:35:32 2018 +0200

    Remove close and kill handling from LimitingBatchIterator
    
    The `LimitingBatchIterator` forwards most calls to its delegate which
    should have proper kill/close checks. Therefore we can avoid the
    additional kill/close state checks in the `LimitingBatchIterator`. (They
    were part of the `CloseAssertingBatchIterator`.

commit 00fa318821dd8f06e641592a3656f1c25ef4cff7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 5 13:58:15 2018 +0200

    Avoid ShardId creations to create UnassignedShard

commit 01f8490ac0ed74611365148ad9759fc9441693b5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 5 14:12:17 2018 +0200

    Remove unused functionality from TreeMapBuilder
    
     - and avoids the duplicate map initialization

commit 57c65931192023f07604000fa942d7a8b39435c7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 5 14:56:15 2018 +0200

    Utilize Projectors in ProjectingRowConsumer

commit 73c8d92e68cccd1b607a331d86e10ff8ec51e6e3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 5 13:40:57 2018 +0200

    Update javadocs in ShardCollectSource

commit fe47570690af32763f64b17221fb98894c871aa6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 5 13:23:24 2018 +0200

    Remove CrateCollector and BatchIteratorCollectorBridge

commit c096a4a8318f85504a5446cf0f0e1394f177e9b7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 5 13:00:56 2018 +0200

    Remove getCollector from CollectSource

commit 1e885cf9ac200b57a5c49395b7a51f64f110403f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 5 11:54:53 2018 +0200

    Remove CrateCollector related components

commit 31c80bc993f05b7bf3a3f731c3bc3394dc3c5b90
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 5 11:11:36 2018 +0200

    Change createMultiShardScoreDocCollector to return a BatchIterator

commit 1835614af9ab685a592364b823459f3878fe6ce9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 5 11:03:06 2018 +0200

    Change getShardsCollector to return an Iterable

commit fe7837366dcdc789bc8852d1ac82b685ba911007
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 5 10:44:18 2018 +0200

    Add a `getIterator` method to CollectSource
    
    This will eventually replace the current `getCollector`. The
    `CrateCollector` interface is going to be removed.

commit c51e0288dd2c9cf4550a3dc6606c145dfec4b530
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 4 17:51:29 2018 +0200

    Avoid using MultiConsumer in PKLookupOperation

commit ca3b87a8583d29eacae797c2064e48efa202343c
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Jul 4 20:16:15 2018 +0200

    Tests: Remove unused settings class

commit 5579dd5e87ec64eb01d0371fffbf3699c2336fb4
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Jul 4 18:32:50 2018 +0200

    Fix ignoring changes to Query CircuitBreaker settings.
    
    CircuitBreaker was passed during construction of Singleton instances and
    stored in them as a class attribute, so any runtime changes to the settings
    where not picked up.
    
    Replaced the CircuitBreaker with CircuitBreakerService or a provider Function
    as a class attribute and whenever needed the CircuitBreaker is requested by
    the Service which keeps the updated instances of CircuitBreakers.

commit d229691913214e3a86bd37e87cd9875ea74f5a26
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 4 16:17:59 2018 +0200

    Replace AsyncBatchItCollector by utilizing CollectingBatchIterator

commit 3aeeab73fa2cfc0bd14e00ce59ff77d48c17787e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 4 14:43:41 2018 +0200

    Re-use CollectingBatchIterator for NodeStats retrieval

commit fe14d0b5c5fed5304aa7a451db9752047ec93321
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 4 14:23:24 2018 +0200

    Support non BatchIterator sources in CollectingBatchIterator

commit 1032edd7159ef9e122f1121040adbc499d674bb2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 3 14:54:45 2018 +0200

    Use switch statement in LuceneReferenceResolver
    
    Also avoids the `unnest` call in some cases where it is not necessary.

commit 4aba99f46fa5b1f1b64bbfbbf9c215e5e8688921
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Jul 4 10:46:54 2018 +0200

    use default keystore type for SSL context

commit 213c6e7e4f32ad7179ed299fab72836459b83238
Author: Autophagy <mika@crate.io>
Date:   Tue Jul 3 14:11:03 2018 +0200

    Clarified path.data setting change in 3.0.0

commit f3cad35047e88a05cef33e5f56520ec037dedbb6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 3 09:32:13 2018 +0200

    Update gradle to 4.8.1

commit c7c3f0976d66a1ace569a869ba7557ad436aa99b
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Jul 2 15:36:58 2018 +0200

    Tests: Make sys.jobs_metrics integ test deterministic.
    
    Wait until all 100 queries are logged in the JobsLobs (meaning they
    are also added to the ClassifiedHistograms) before issuing the assertion
    query on sys.jobs_metrics.

commit 99e147933e75848c1340571a2fa1c06b2486ad12
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jun 29 16:17:19 2018 +0200

    reflect release 3.0.3

commit 33f0c20db81808dc98b099995f3e787295972052
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Jun 29 17:10:09 2018 +0200

    Fix error thrown when deleting/updating an empty parted table.
    
    UnsupportedFeatureException: Delete projection can only be executed on a shard] and
    UnsupportedFeatureException: Update projection can only be executed on a shard] where
    thrown instead of 0 rows returned when deleting or updating by Query an empty partitioned
    table (partitions list -> empty).
    
    To implement a new logic is added so that Projections with higher granularity
    than the ProjectorFactory are skipped. e.g.: ProjectorFactory has NODE, so
    projections with DOC & SHARD granularity are skipped.

commit a7f0c3032e13cb5b842dff1596fbc3edb3530620
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Jun 29 17:07:14 2018 +0200

    Tests: Fix code formatting and warnings

commit 90e4343fe17200c9f517ee246d38e7e307e05739
Author: Andrei Dan <andrei@crate.io>
Date:   Fri Jun 29 16:50:51 2018 +0100

    Fix pg_type typname column value typo for timestamp type.

commit d30c02d07760f485aa92a669637ad881245c85ff
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 29 15:47:45 2018 +0200

    Docs: Remove outdated partitioned table limitation
    
     - ORDER BY on partitioned by columns work since 6f85ba5271748f693c9715f2f634f27591c34e5e

commit 28eef7b569639a69619e804ecd0b05d7affca675
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jun 29 11:35:59 2018 +0200

    fix flakiness of testJobLogWithEnabledAndDisabledStats
    
    There was still a flakiness when the select statement used to validate
    if the set statement was correctly logged, appeared inside the queue
    while the assertion was expecting an already follow up statement.
    Solved now, by not using a statement to validate the correct size change
    propagation.

commit bdebaa293b0c8a6f1c7f0eafdb1aed8d87a45d14
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jun 29 11:47:45 2018 +0200

    updated crate-admin to 1.10.3

commit bf7d4e0c58c3aa263ba1091bc9a80ecd576f518c
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jun 29 09:56:26 2018 +0200

    docs: clarify usage of host based authentication

commit 05d7904c725061bb3796069a7c0ad1b69d09615b
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Jun 21 12:29:12 2018 +0200

    Allow downcasts of Literals if convertible
    
    The patch makes it possible to downcast Literals with higher precedence in
    expressions which also contain other castable arguments.
    
    ```
    Before: int_arr[1] = 123 => to_long(subscript(int_arr, 1)) = 123
              ^^^^^      ^^^
             castable  castable
    After:  int_arr[1] = 123 => subscript(int_arr, 1) = to_int(123)
    ```
    
    This has the advantage that the conversion is only performed once for the
    Literal, whereas it might have to be performed for every record in case of a
    column. The LuceneQueryBuilder is only able to generate a fast Lucene index
    query if no cast function is applied.

commit 16221c39690527576732fb324c11ee1649b8648b
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed Jun 27 16:17:40 2018 +0200

    Add missing partitioned table setting 'blocks.read_only_allow_delete'

commit bf19903480330fd13feae63aafcdd034c11e36a6
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Jun 28 12:19:31 2018 +0200

    Expose settings for s3 credentials.
    
    Since support for environment variables and java properties for S3
    credentials has been dropped, we expose these settings so that the
    user can configure default credentials in the yml file (or through
    cmd line switches during startup). This would also prevent from
    forcing to define the credentials in the ``CREATE REPOSITORY`` SQL
    statement which will make them to be visible in the ``sys.repositories``
    table.

commit f5b74cc1ef6f4946d927626349ab03cb924cf368
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Jun 27 14:41:57 2018 +0200

    Docs: Drop support for AWS credentials using env vars and java props.
    
    ES6, in favour of secure settings and keystore,  has dropped support for
    reading AWS credentials (used for EC2 discovery and S3) throuh environment
    variables ``AWS_ACCESS_KEY_ID`` and ``AWS_SECRET_ACCESS_KEY`` as
    well as java system properties ``aws.accessKeyId`` and ``aws.secretKey``.

commit 3f311d39ae7c2a1adcdbbc3174bcffa246a84885
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Jun 28 11:08:16 2018 +0200

    Add additional integration test for SQL comments
    
    Additional test for comments on the same line. While already being tested in one
    of the cases above, it gives us more confidence that larger statements with
    comments work correctly.

commit 006630df634f5bd1d46282121e6d1fdbc985b119
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 27 10:30:15 2018 +0200

    Avoid anonymous ChildDocCollectorExpression class creations

commit 9c8673f9b22b290060b810133778e0069dd863d6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Jun 23 00:00:03 2018 +0200

    Replace String.format with simple concat

commit 6a5b945b0a67ccda88198da0a1f72285ab457f73
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed Jun 27 12:28:30 2018 +0200

    Add support for multiline comments
    
    This enables to use multiline comments like
    
    ```
    /* this
       is a multiline
       comment
    */
    -- this is a line comment
    select 1
    ```
    
    Co-authored-by: Emily Woods <emily@crate.io>

commit e74dc54cd350a6226b0eeeb76b3993552481b76e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 22 15:49:30 2018 +0200

    Change distributed result rx threadpool dispatching
    
    We've dispatching into the search threadpool each time a node is
    receiving a result from another node. Most of the time this is a very
    short operation (keeping the reference), only when a full page is formed
    and the `RowConsumer` is triggered is it taking a longer time.
    
    This changes the dispatching logic to do the short operations in the
    `SAME` threadpool and only dispatch into search once the consumption is
    triggered or continued.
    
    This should help reducing `RejectedExecution` errors on clusters with a
    larger number of nodes.

commit bf1ad2d2e25f24e11e5cd084ef2b25036dbb5177
Author: Robert Palmer <rob@voxsnap.com>
Date:   Fri Jun 22 21:48:46 2018 -0700

    Added a TimeZone parameter response for Django psycopg2 clients
    
    Issue: https://github.com/crate/crate/issues/7468

commit 9e7eb532c156f54a603174bbab0514f4e95405c6
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon Jun 25 17:21:28 2018 +0200

    fix indentation

commit a14be57295c5949e3209d7c78b58dc879c727798
Author: Autophagy <mika@crate.io>
Date:   Mon Jun 25 11:16:00 2018 +0200

    Fixed syntax support for ALTER BLOB TABLE RENAME/REROUTE/OPEN/CLOSE queries
    
    This means that we now syntactically support queries like ALTER BLOB
    TABLE OPEN, as described in our documentation. The operations themselves
    are still unsupported on blob tables, but this now has the
    expected/documented behaviour and will also return a useful error
    message to the user, rather than an SQL syntax error.

commit 8d6f66ecdc70e4c4d8992d303b5cab43e985aaef
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed Jun 13 22:55:22 2018 +0200

    document JS Array method handling

commit 7d586ed172d9dbf5e8cb7485b765db7f0c7d9232
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jun 21 22:43:12 2018 +0200

    move closing of log sinks into JobsLogs
    
    The JobsLogs component is responsible for handling all sink related logic,
    and so should the close-old-sink-after-replaced or on instance closing.

commit fdf7c70f68181c676017f20b512ce7fc0529c883
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jun 21 19:01:38 2018 +0200

    fix possible job/operation log entry loss when settings changes
    
    When a new log sink for the `jobs` or `operations` is created due to a
    settings change, concurrent created entries could have been lost.

commit bda2619fd907e537f7ce323b7bf6380a400d465a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 19 14:28:20 2018 +0200

    Remove crash from tarball bundle
    
     - None of our current distribution packages include crash
     - We generally recommend to have crash installed on developer / user
     machines and connect remotely to CrateDB. Our packaging should reflect
     that.
     - Installing crash is just a `curl` and making sure `python` is
     installed.

commit dd1b88f3f40d445054d71dce827a2140c38dac85
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 21 16:59:49 2018 +0200

    Utilize ThreadPoolStats for thread_pool node expression

commit cc6cc5b73b68925217e2021028c966e6f82b3c7a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 21 10:57:28 2018 +0200

    Integrate thread-scaling into OrderedLuceneBatchIteratorFactory
    
    Another follow up to e488e992ca4a4829d71143bd74c40e711ae6d478

commit 5b8d8e100de728be5b4566fc34a917fad04c5780
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 21 09:37:46 2018 +0200

    Restrict max thread-utilization per query to number of processors
    
    Should further help to avoid rejected execution errors on clusters with
    a high number of shards without sacrificing query performance if nodes
    are mostly idle.

commit 554dca837688cdc8a93c09ea64f019fbbb5a8bf6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 21 09:16:49 2018 +0200

    Integrate thread-scaling logic into fetch operations
    
    Additional follow up to e488e992ca4a4829d71143bd74c40e711ae6d478

commit 87712fc273ea79ff607e91771a737f7d582a4ef7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 20 11:34:50 2018 +0200

    Tests: Update hadoop version used in tests
    
    Looking at http://www-eu.apache.org/dist/hadoop/common/ it appears that
    `2.8.1` is no longer available.
    
    This also improves the error reporting in such a case because before it
    only printed a cryptic error:
    
        Test-module import failures:
    
        Module: tests
    
        urllib.error.HTTPError: HTTP Error 404: Not Found

commit 23bdc0fcb93127d8b407ee51f3264587784c1d7e
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed Jun 20 15:56:01 2018 +0200

    Gather all items in PkLookupOperation if necessary to support repeat

commit eef4afeeb60e65a0c8591e500f167327703fa0a1
Author: Maximilian Michels <mxm@apache.org>
Date:   Fri Jun 15 10:01:06 2018 +0200

    Add Block Nested Loop algorithm for single node cross/inner joins
    
    The block nested loop algorithm is an extension to the nested loop
    algorithm. Instead of processing the items of the right relation once for every
    item of the left relation, it builds blocks with items of the left relation and
    processes the blocks for each item on the right.
    
    This should save IO operations. Benchmarks have shown that the performance
    increases significantly in a single node execution context. When multiple nodes
    are involved, the performance may be worse because there is already a paging
    functionality built in. For optimal performance, the smaller relation is always
    changed to be on the left side.
    
    Due to the nature of the block nested loop algorithm, not being able to
    preserve the order of the two relations, we can only use it when no order by has
    been pushed down.
    
    The following interfaces were created in the to keep the
    CrossJoinNLBatchIterator in the :dex module.
    
    - BlockSizecalculator
    - RamAccounting
    - RowAccounting

commit 33eeab6c394e2542590861ca69ee6298eaa844b9
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Jun 14 15:55:51 2018 +0200

    Reuse IntObjectHashMap in HashInnerJoinBatchIterator

commit b2ffecbefd98958b791693f7550b4b518f6d61f0
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jun 18 17:15:14 2018 +0200

    convert array access into a terms query + generic function
    
    Lucene itself doesn’t support to filter on an array element, therefore
    an array access was resulting in the generic function filter fallback.
    By using a terms query in conjunction with a generic function filter,
    Lucene can pre-filter which results in a huge performance increase.
    
    An excerpt of a rough local single node benchmark where 1 row out of 1mio matches:
    
    +-------------------------------+-----------------------+---------------------------------------------+
    | branch                        | runtime_stats['mean'] | statement                                   |
    +-------------------------------+-----------------------+---------------------------------------------+
    | master                        |          3349.532433  | select a from array_access where a[1] = 101 |
    | s/optimize-array-access-query |            15.7341995 | select a from array_access where a[1] = 101 |
    +-------------------------------+-----------------------+---------------------------------------------+

commit 3162a9d384a1e8b07e22bc7e36fe3ccf1a734cba
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 20 10:18:23 2018 +0200

    Make IdCollectorExpression compatible for old indices
    
    Fixes a regression caused by 4bafcae4a5
    Test for this is in https://github.com/crate/crate-qa/pull/66

commit e488e992ca4a4829d71143bd74c40e711ae6d478
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 19 15:25:16 2018 +0200

    Re-implement thread utilization down-scale logic
    
    With the BatchIterator refactoring we also removed the usage of
    `ThreadPools.runWithAvailableThreads` for queries involving concurrent
    shard-projections. Due to this clusters with a high number of shards per
    node could run earlier into `RejectedExcecution` errors.
    
    This integrates the downscaling logic back into the
    `AsyncCompositeBatchIterator`.

commit 068990e68f982b250fad64cfa90ea4b7f7120925
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 24 15:01:50 2018 +0200

    Update netty to 4.1.25

commit 59cf7b7713b99205809e838715d7c619e07047b1
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jun 19 12:13:13 2018 +0200

    docs: update reserved keywords in lexical structure

commit 7a3d578d0815851279881669f7aecf3b1c910427
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 14 15:04:10 2018 +0200

    Docs: Update jobs, operations and logs section
    
     - The default changed, jobs stats are enabled by default.
    
     - Re-phrases the first paragraphs a bit to make it clearer that:
    
       - The "currently active jobs and operations" do not have a size limit
       or expiration policy. This only applies to the jobs and operations
       logs
    
       - The memory limit is an additional mechanism that works
       independently of the size or expiration eviction policies
    
       - Removes the sentence that implied that logs eviction can be
       disabled entirely.
    
     - Added a few phrases to mention the new filter settings

commit c05cebdc6f16e64b20cbe570da2be81f908b98d7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 6 17:01:55 2018 +0200

    Parameterize CompletionListenable generic correctly

commit fb20469dd6c3781321e4cc0e364f48c24050f6bb
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jun 18 17:34:14 2018 +0200

    updated crash to 0.24.1

commit b75b20964a2856d3a1550f153eac5dabd34b8235
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 18 16:36:32 2018 +0200

    Handle blob indices correctly in RelationName / IndexParts
    
    Affected only tests where we created `RelationName` instances directly.
    In production code we used `indexMetaData.getIndex().getName()` to
    retrieve the index name.

commit 1cb1bc6c062b1c86d48d33b3b97fa5071aedd38f
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Jun 18 12:24:09 2018 +0200

    Automatically regenerate outdated parser classes via Gradle
    
    This patch auto-detects changes in the parser grammar source files and
    regenerates the parser classes. Without this patch, the sql-parser module had to
    be rebuilt manually whenever the parser grammar files changed.

commit 2e8e88894a3492fb38d3586bf52ae6a2edb2385e
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon May 28 23:47:52 2018 +0200

    rewrite config docs

commit 02744a55d5cdb2d1f9df1d5dfb863f180fffa2e7
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed Jun 13 23:09:55 2018 +0200

    document processors setting

commit 9173eef11aacb8aabf541294b56f58a329913df5
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Sun Jun 17 21:08:53 2018 +0200

    improve unreleased changes doc

commit 4377aba4f154e67d9cad2c1eb1a21e9a029c998c
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jun 14 15:17:56 2018 +0200

    add support for the `COMMIT` statement for better client support

commit 5484b326d99003fd4364073b964ffd309b9549d4
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jun 14 15:48:41 2018 +0200

    add new integration tests for Postgres compatibility

commit d4fa94507aa45dcb456fbab93e49b68420f14fb1
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Jun 13 14:11:58 2018 +0200

    add postgres compatible syntax to begin statement
    
    this only adds the parser support for the postgres syntax of `BEGIN` as
    described in https://www.postgresql.org/docs/10/static/sql-begin.html
    all parameters of the statement are ignored. the reason for adding this
    syntax is to support the golang lib/pq implementation as a client.

commit 135713bc848a8614928193fd073b1483852b7359
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Jun 18 14:00:48 2018 +0200

    Docs: Improve why ignore3vl() could be beneficial

commit 38eb7d8efc7fbde1200772ca9e859c06518fa00c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 15 15:03:21 2018 +0200

    Validate jobs filters on SET GLOBAL statements
    
    With this change users will receive an error on invalid filters instead
    of the error being logged.

commit 392ea40394559883e4a5e8f8654f009fc78d6f26
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 15 15:25:02 2018 +0200

    Update checkstyle config to allow empty lambdas

commit 96e5f32c68c45ccd201ca553cf70f2cf301f3aac
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Thu Jun 14 22:23:13 2018 +0200

    improve use of admonitions

commit de8182d29651ae0512cdd7ca3c341eadd75df1a3
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jun 15 12:59:08 2018 +0200

    fix error handling at the postgres protocol
    
    On all server side errors one “errorResponse” and one “readForQuery”
    message must be sent to the client. Only if the client cancelled the
    operation by itself e.g. due to a new statement while the old has unfinished
    results, no “readForQuery” should be sent.
    The existing code was doing this by checking for a “InterruptedException”
    which could also be thrown by server side failures (e.g. kill), this
    “marker” exception is now replaced by a concrete “ClientInterrupted” exception.
    Also currently 2 error responses were sent sometimes instead of just 1.

commit 2cc94452d2e816ad74f6281ba8f5bd3db6c82ebf
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Jun 15 14:36:10 2018 +0200

    Added changelog entry for new function ignore3vl()

commit 7640c93f3e449c905615b49d3b6b92f010efe773
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Jun 13 17:34:11 2018 +0200

    Add documentation for ignore3vl() function.

commit 074c0f0c9beaccc3d4955b518195d058b92959e6
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Jun 14 15:16:28 2018 +0200

    Implement ignore3vl function.
    
    - Implemented as a normal scalar function that translates NULL=>false
    - Implemented as a marker for LuceneQueryBuilder to skip 3-valued logic on queries

commit 4bafcae4a5eafa64f01374b7c83fefe16bf56196
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 15 11:05:50 2018 +0200

    Use stored fields to lookup _id
    
    Using the fieldcache requires a lot of HEAP as it loads all values of
    the field into memory.
    This should improve the performance for most uses-cases, but can result
    in a performance decrease for delete queries which match most records.
    
    Benchmark results:
    
        Q: delete from t where id < 300
        C: 1
          119.44% mean difference
                    V1   →    V2
          mean:  329.456 →  83.083
    
        Q: delete from t
        C: 1
          50.59% mean difference.
                    V1  →     V2
          mean:  4606.528 → 7725.752

commit e66b3bdb97a3eefdb041850bac19832ef9cf2356
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Jun 13 19:53:04 2018 +0200

    Display the phases execution times separately for better visualisation.

commit de76cf498dec032dddb7223262310b1a1764de25
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 13 17:19:25 2018 +0200

    Expose number of open connections via JMX

commit 1d8fdf1d4094d54629c8254dfa3d031d9c760f84
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 14 14:38:22 2018 +0200

    Include user in persistent jobs log messages

commit e4853dfc7412ba5f060365943c3c057fd17d86bf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 13 16:41:24 2018 +0200

    Expose the number of open transport connections

commit 446b9e04482c0fc02fa623597eef31d8c37481e8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 14 11:13:01 2018 +0200

    Fix doc_test and testutils pycodestyle errors

commit 05e03b4a2fa5e7fa1a55866d17f36130c4f4d734
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 13 17:29:46 2018 +0200

    Fix pycodestyle errors in sqllogictest

commit 9adc60f0d8acf7c20b3388115b9f6310c2560a29
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 13 17:29:04 2018 +0200

    Fix pycodestyle errors in hdfs tests.py

commit 43ba4b60b5904d395a108a1ba35bac1cda5051c8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 13 17:28:04 2018 +0200

    Fix pycodestyle errors in monitoring tests.py

commit 5a9fa576357f138f6f6df8ae59f0ebfc39ceaaca
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Jun 13 11:47:28 2018 +0200

    Fix the TimestampType equality definition (to not be identical to the LongType)
    
    The Timestamp type is treated as an extension of the Long type because of the
    common storage format, but the type semantics are very different.
    This makes the TimestampType "idenfity itself" as different than the LongType.

commit be1b2cabef58a6c6a1d7003d9b6091a2389d1d53
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 13 14:45:19 2018 +0200

    Expose the number of postgres connections

commit cbf6992a29d6ba6803a98a8debdfb794abd1bdb4
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jun 13 14:56:12 2018 +0200

    fix kill integration test assertion
    
    The missing context exception can only occur with either JobExecutionContext or
    SubExecutionContext but not with a SearchContext

commit 78924b4c081d58f99ac8658177c7e7d0caade389
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Jun 13 12:24:38 2018 +0200

    Test: Fix flakiness of ESLoggingHandlerIT (transport-netty4 module).
    
    Point to new cherry-picked commit: 307a4d03c6571a20219fd86b25a73bb8e3d9d081
    Cherry-picking this commit to our v6.1.4_cherry branch seems
    to resolve the flakiness of ESLoggingHandlerIT in transport-netty4 module.

commit 078bf18a813bc7c4cec552008add408b9f4cdd5d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 13 10:39:46 2018 +0200

    Expose number of HTTP connections
    
    This adds a new `connections` column to `sys.nodes` to expose the number
    of total and open connections made via HTTP.
    
    `connections` was choosen as top-level column instead of nesting it into
    `network` because `network` is deprecated and we prefer to have a lower
    number of nestings.
    
    Other protocols (transport, postres) will be exposed separately.

commit a0533a6db7cfef708d4971f46f6381d49c4f2e85
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 13 10:25:11 2018 +0200

    Remove change detection from jobs filter update
    
    The settings-update-consumer is only triggered if the setting actually
    changed, so there is no need to compare the new filter with the old
    filter.

commit 1f01e9420d0f21a6fac1f9c655e99d564a618020
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 12 14:38:05 2018 +0200

    Integrate CHANGES.txt into sphinx build
    
    Symlinks `CHANGES.txt` to
    `blackbox/docs/appendices/release-notes/upcoming.rst` so that we've the
    file validated via sphinx-build and it's also integrated into the
    release-notes docs.

commit 38e870b5a812f9b6ce0af8e776faf6a349d2b91b
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jun 12 14:39:22 2018 +0200

    fix create analyzer sql syntax reference documentation
    
    when using a parameterized tokenizer/token_filter/char_filter, one must
    use a ccustom name while defining the base built-in to use by the
    `type` parameter.

commit 08f586a4cfae59545d54d4a7c3353749f5118693
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 12 12:10:00 2018 +0200

    Rename NestableCollectNestedObjectExpression → ObjectCollectExpression

commit 35e457fd45f4f7b1960218e8916278f5325df035
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 12 11:49:42 2018 +0200

    Merge NestableContextCollectorExpression into NestableCollectExpression
    
    Pretty much all expressions that implemented the interface extended
    directly from the abstract `NestableContextCollectorExpression` as they
    utilized the default `setNextRow` implementation.
    
    This therefore merges the interface with the abstract class to simplify
    the class hierarchy a bit.

commit 031ad7607908be45fd12183648252b8a4ac5c4d7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 12 10:39:11 2018 +0200

    Add a stats.jobs_log_persistent_filter setting to log queries to file
    
    This is an addition to `stats.jobs_log_filter` which enables user to
    also persist query entries to the regular log file. This has the
    advantage that the information survives a node restart but the
    disadvantage that it is not queryable.

commit 66e533815745de6bdfea7d4e1ce64637596c1ba0
Author: Sebastian Utz <su@rtme.net>
Date:   Wed May 16 17:41:10 2018 +0200

    implement support for `COPY FROM … RETURN SUMMARY`
    
    The source URI and a possible URI failure will be collected by new collect
    expressions. Also these expressions will be collected dedicated as
    `sourceInfoExpressions` as they should be always collected while the normal
    once could fail e.g. through an invalid json entry. Source URI processing
    failures will result in NULL values for `success_count` and `error_count`
    to indicate that no item/row was processed at all.

commit 3f77deeb317f39350c5c9dc34b8e4e8b100ccd27
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 11 16:28:01 2018 +0200

    Add a jobs_log filter setting to control entries being recorded
    
    Depending on the retention policy (size or expiration), `sys.jobs_log`
    might be flooded or grow too large in size on a high traffic cluster.
    
    This introduces a new `stats.jobs_log_filter` setting which can contain
    an expression evaluated against a `sys.jobs_log` record to determine if
    it should be included in `sys.jobs_log`.
    
    This can for example be used to only include entries with a certain
    duration (`ended - started > 30`)

commit fd819a4d315c3463c9a98a938da1e9d9890ad427
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 12 11:14:09 2018 +0200

    Move NestableCollectExpression into execution.engine.collect pkg
    
    So that it is in the same package as the `CollectExpression`

commit 4cbe62e4c52c4cd33dcc0e15e119c4090833fa8c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 12 11:12:26 2018 +0200

    Rename RowCollectExpression → NestableCollectExpression
    
    The difference between a `CollectExpression` and a (previously)
    `RowCollectExpression` is that `RowCollectExpression` extends
    `NestableInput` instead of `Input`, so this renames it to
    `NestableCollectExpression` to reflect that difference better.

commit 21f1c5c354e39e933f4173f7fed439597782e755
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jun 12 09:15:03 2018 +0200

    reflect release 3.0.2

commit 024b21f023e1cf734ff25518b77cadd7e6b228fb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 11 11:13:13 2018 +0200

    Remove unused functionality from TimeExpiring
    
     - `instance()` was never used
     - Instances were only created to temporarily hold onto the delay and
     interval, which were immediately used in the next call. So this also
     changes it to a static method.
     - Renames `TimeExpiring → TimeBasedQEviction` and
     `registerTruncateTask → scheduleTruncate`

commit c8724c4f41b7d9667aa71f0488db47fe3479b7eb
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Jun 11 16:18:31 2018 +0200

    Fix extraction of docKeys expressions from WHERE clause.
    
    If an equality expression refers to a table column on both sides
    then the extracted docKey contains a Reference instead of a parameter
    or literal which cannot be handled during the plan building, as the
    docKeys are supposed to contain only literals, parameters (eg: $1) or
    replacable scalar subquery symbols.

commit e662aa46f335644b2ea1d29d20723c788598ab17
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 11 13:31:34 2018 +0200

    Remove unused and deprecated ExtendedNetworkStats

commit afaf8c428f8209b8463a47d849f47e80d394f68f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 8 11:47:10 2018 +0200

    Fix generic warning in FileCollectSource

commit 851904060a7028b7e98ce78f8cb9629320106129
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 8 11:46:46 2018 +0200

    Extract readerNumber calculation into a function

commit 50b00ce991d241c9c5d8fa8c2465eb9ec7386b79
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jun 8 13:37:52 2018 +0200

    add note about profiling times of individual phases

commit 25d81afdecd477d7d2d726c6886ab69828d5df42
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Jun 6 12:25:43 2018 +0200

    docs: add example for labels in sys.jobs_metrics

commit 8727d3efa00670f771ea35ab1a305501d1639e9e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 7 09:40:51 2018 +0200

    Trim long durations for sys.job_metrics
    
    We're only tracking durations up to 10 minutes, anything longer caused a
    `ArrayIndexOutOfBoundsException`:
    
        ArrayIndexOutOfBoundsException: value outside of histogram covered
        range. Caused by: java.lang.IndexOutOfBoundsException: index 12669]
        occurred using: {"stmt": "COPY benchmarks.query_tests FROM
        's3://crate-stresstest-data/query-tests/*.json'"}
    
    This changes the logic to normalize the durations to at most 10 minutes.

commit ba8bd6a91ad4630bbc7afe7480f046519de9d2b4
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jun 7 11:55:00 2018 +0200

    classifiy insert from subquery/table function as INSERT

commit 5e00692b93217d7ee68764efac7f5b99a1380b6c
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jun 7 11:06:32 2018 +0200

    sort statement classification labels ascending

commit 284d8dc7025fd0fd207533c76ef0175fe88e8d90
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Jun 6 15:46:50 2018 +0200

    expose statement classification in sys.jobs_log table

commit ce3e3ee954ba1fffdfb7f525c614d5feb312c850
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 5 14:10:32 2018 +0200

    Add docs for query breakdown output of explain analyze

commit c566d3636cc467eb6b834ff2f751493f182c8dc0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 5 16:20:36 2018 +0200

    Rename JobExecutionContext related components
    
    `Context` is a bit of a weasel word that we tend to overuse, so this
    renames a couple of components.
    
     - `JobExecutionContext → RootTask`
     - `ExecutionSubcontext → Task` (+ all concrete implementations)
     - `JobContextService → Tasks`
    
    `Job` wasn't choosen because a `Job` is at the statement level. In a way
    a `Job` consists of multiple `RootTasks`.
    
    Settled for `RootTask` and `Task` instead of `Task` and `ChildTask` to
    make the several concrete `Task` implementations less verbose.
    
    `Operation` may have fit better, reflecting `sys.operations` but we use
    that name already for the "operation implementations".

commit c1b3e6c156471b554c869992998ad649df8f1a1b
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Jun 6 12:03:23 2018 +0200

    return 0 in sys.jobs_metrics if min value is udefined
    
    in case the histogram of a classification does not contain any non-null values
    we want to return `0`, not `Long.MAX_VALUE`

commit 094c8f3308cee5971f1438e1e1c77bf59c9ddfbb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 5 14:41:28 2018 +0200

    Fix a array index out of bounds warning
    
    Solves a warning reported by `lgtm`.
    The `MapFunction` is registered to a multiple of 2, so it wasn't a real
    issue.

commit 1a52eddea28a22b2acc08255cfb46e726a7d3ef6
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jun 5 15:02:59 2018 +0200

    fixed formatting and style in changelog

commit 0e5f32a5af1a7b31979694714ea6ab4f5371b7c8
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jun 5 14:38:47 2018 +0200

    handle STRING_ARRAY argument type in UDFs correctly
    
    This fixes an `ArrayStoreException` that occurred when using a
    STRING_ARRAY as parameter for a Javascript user-defined function, such as:
    
    ```sql
    CREATE FUNCTION array_join(ARRAY(STRING))
      RETURNS string
      LANGUAGE javascript
      AS 'function array_join(a) { return Array.prototype.join.call(a, ","); }';
    
    SELECT array_join(['a', 'b']);
    ```

commit c5d73ef825fefcf5ba75d22db55682052d7aebf7
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon May 28 16:41:37 2018 +0200

    classify statements based on their plan
    
    this is used for sys.jobs_metrics and may also be used for sys.jobs_log

commit f5238b3023c6ccde63ea19a4d4b80fc8db171718
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 25 16:14:58 2018 +0200

    Add a sys.jobs_metrics table
    
    This adds a table which contains query duration latencies.
    This is an initial version. We may later improve on this to:
    
      - Classify queries in some way. E.g. by type (select, update, ..) or
      even down to operator level
    
      - Reduce the overhead of the metric gathering by using
      connection/thread-local metric recorders

commit 8339e2e8298ef63f317f33658215e17265d004b2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 4 16:41:45 2018 +0200

    Include profiled query-breakdown in explain analyze
    
    Example output:
    
        {
          "EXPLAIN ANALYZE": {
            "Execute": {
              "gAEQ5137SS6sQ95sdhLYYw": {
                "1-fetchPhase": 0.342663,
                "0-collect": 0.45208,
                "QueryBreakdown": [
                  {
                    "QueryName": "BooleanQuery",
                    "QueryDescription": "(x:[1 TO 1] x:[2 TO 2])~1",
                    "Time": 0.036334,
                    "BreakDown": {
                      "score": 0,
                      "match_count": 0,
                      "build_scorer_count": 0,
                      "create_weight": 0.036333,
                      "next_doc": 0,
                      "match": 0,
                      "score_count": 0,
                      "next_doc_count": 0,
                      "create_weight_count": 1,
                      "build_scorer": 0,
                      "advance_count": 0,
                      "advance": 0
                    },
                    "Children": [
                      {
                        "QueryName": "PointRangeQuery",
                        "QueryDescription": "x:[1 TO 1]",
                        "Time": 0.004096,
                        "BreakDown": {
                          "score": 0,
                          "match_count": 0,
                          "build_scorer_count": 0,
                          "create_weight": 0.004095,
                          "next_doc": 0,
                          "match": 0,
                          "score_count": 0,
                          "next_doc_count": 0,
                          "create_weight_count": 1,
                          "build_scorer": 0,
                          "advance_count": 0,
                          "advance": 0
                        }
                      },
                      {
                        "QueryName": "PointRangeQuery",
                        "QueryDescription": "x:[2 TO 2]",
                        "Time": 0.001363,
                        "BreakDown": {
                          "score": 0,
                          "match_count": 0,
                          "build_scorer_count": 0,
                          "create_weight": 0.001362,
                          "next_doc": 0,
                          "match": 0,
                          "score_count": 0,
                          "next_doc_count": 0,
                          "create_weight_count": 1,
                          "build_scorer": 0,
                          "advance_count": 0,
                          "advance": 0
                        }
                      }
                    ]
                  }
                ]
              },
              "Total": 1.524312
            },
            "Plan": 0.192691,
            "Analyze": 0.358621
          }
        }
    
    Co-authored-by: Andrei Dan <andrei@crate.io>

commit 8cb493975efbc3e747a5cc8f85a12c6779e3b9e1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 4 15:44:17 2018 +0200

    Make ProfilingContext nullable
    
    The `JobExecutionContext` had already checks to see if the profiler is
    enabled, resulting in 2 levels of "do something or not" checking. Once
    on the use-site of the profiler and once inside of the profiler via
    different `Timer` instances.
    
    This removes the inner level to have the checks consistently in the use
    sites.

commit cc673cf7b710a69bb132608e71bdadc55eb47f4c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 28 14:26:54 2018 +0200

    Mark es.api.enabled as deprecated
    
    The `es.api.enabled` API has been valueable to get information that is
    or was not exposed via SQL. In some cases it could also be used to
    repair a broken state by using low-level APIs.
    
    But it also opens up many possibilities which we don't cover with tests.
    Due to that it was never officially supported.
    
    It also prevents us to make bigger changes within the ES parts of the
    code-base, which we might want to make in the future. We should
    deprecate this rather earlier than later to make it easier for people to
    migrate and add missing functionality before it's finally removed.

commit 94b956615caeaf2de58f5b75e0d40a95f72bd397
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 4 23:14:20 2018 +0200

    Fix some boxed variables warnings

commit 1c2e54e41556128684658af0e1c60eab503d7cd5
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Jun 4 16:05:42 2018 +0200

    Upgrade gradle to 4.8

commit 5b6455b6b84931685501c7330401f02d2e2f42f9
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Jun 4 16:20:13 2018 +0200

    Upgrade forbiddenapis and spotbugs pluings

commit 6d72805d2b87ff5ba4e03710efe715bdb8a053a2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 4 14:54:32 2018 +0200

    Rename TimeMeasurable → Timer
    
        Timer \Tim"er\, n.
          1. A timekeeper; especially, a watch by which small intervals
              of time can be measured; a kind of stop watch. It is used
              for timing the speed of horses, machinery, etc.
              [1913 Webster]

commit 08ae80a83dc6e397059a0ded27843f808857ba98
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 30 17:18:16 2018 +0200

    Make writeValueTo in streamer generic

commit 4e7a3310871833ca2056c096f901a4cd2b287e43
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jun 1 13:43:50 2018 +0200

    close local JobCollectContext in case of EXPLAIN ANALYZE
    
    If the execution of EXPLAIN ANALYZE has created a local JobExecutionContext on
    the handler node, it also needs to be closed correctly on the 2nd phase
    of the EXPLAIN ANALYZE which collects the profiling results from the
    involved nodes.

commit ccea92ac19a41ed9c183ad4f7b8faa082207f0c8
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Jun 1 22:13:17 2018 +0200

    Add node info to "HTTP SSL support is enabled/disabled" msg.
    
    Use non-static logger variable initialized with settings to
    provide the node info for this log message.

commit 9598cd3c68f08a31b07b81bf256c63bd4b909df3
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon May 28 21:38:23 2018 +0200

    rewrite config doc

commit 62d02b3fd5799f21f1c450d4cd2f180f27692a7f
Author: Maximilian Michels <mxm@apache.org>
Date:   Fri Jun 1 15:52:32 2018 +0200

    Return size zero when the StoreStats have already been closed
    
    The StoreStats are not available anymore when the shard has been deleted.

commit be88b38fd3a7289c5cdf327b49f0e06ada504e10
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue May 29 21:18:19 2018 +0200

    integrate enterprise config docs into rest of config docs

commit c3c1468487748a2bd05a3b1b2efe5a3a9d3e804c
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jun 1 08:50:42 2018 +0200

    add CHANGES entry for EXPLAIN ANALYZE feature
    
    that has been introduced with e032a9341e22d1fc0dbde6ff036a9f759f7c6b10

commit e032a9341e22d1fc0dbde6ff036a9f759f7c6b10
Author: Andrei Dan <andrei@crate.io>
Date:   Thu May 10 17:06:26 2018 +0100

    Introduce the EXPLAIN ANALYZE statement for query profiling
    
    `EXPLAIN ANALYZE stmt` executes the given statement and measures the
    duration of the analysis, the planning, and the execution itself.
    
    The execution duration is split up into the individual phases of the execution
    on the nodes involved in the query.

commit 01cd564355b4a5a03e7b8b584771221579a5d066
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue May 29 17:42:20 2018 +0200

    remove redundant os config docs

commit f81c1548c07d705bfc9d435e9c94ad7a76c6de45
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 30 13:31:34 2018 +0200

    Keep session alive between HTTP requests

commit 0a183409a4ad6eb0f54310bba70539b94633d3be
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 28 14:09:58 2018 +0200

    Prepare HTTP SQL handler to keep sessions open per HTTP connection
    
    Main motiviations:
    
     - Being able to later on introduce a `sys.sessions` table that lists
     open sessions with their user, search_path, and so on
    
     - Having metrics per session to avoid threading synchronization
     overhead. For example `JobsLogs` and the `Histogram` introduced for
     `sys.query_metrics` could be per session and merged ad-hoc if the
     results are used.

commit 1e85287a4384ae39627e4229d44faa73b4c231ce
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue May 29 19:11:24 2018 +0200

    rewrite environment variable docs

commit 4d5d9893ad96c29a8de258f346de07bb7225433b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 30 16:56:57 2018 +0200

    Remove synchronized from Variance result
    
    It's not used in a multi-threaded context and results in a warning in
    `lgtm` because `StandardDeviation` extends `Variance` but doesn't use
    synchronized.

commit 804ccb9d5b4eecd2c3eb3afab9b024dc96a843de
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 30 14:55:34 2018 +0200

    Report min_lucene_version in sys.shards correctly for empty shards
    
    It would return the lucene version at the time the index was created
    instead of the latest version. (Which will be used once a new segment is
    created)

commit 726cdfb236a5c3b7fcf7688eebe89f38e865fb9e
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu May 17 16:09:55 2018 +0200

    Postgres Wire Protocol: Add section about Simple Query protocol mode

commit e19f17575ad931e0b1857cbdcaa0eb0574fbe6f4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 30 14:11:21 2018 +0200

    Ensure using empty bulk args does not result in an error

commit 027e62e6c67993b65717489bba06a35a94144892
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 30 10:37:49 2018 +0200

    Avoid using headers for errorCode in SQLActionException

commit 979670e2b778dcfad587cfceef3253433610d20a
Author: Maximilian Michels <mxm@apache.org>
Date:   Tue May 15 12:09:10 2018 +0200

    Add typbasetype column to pg_catalog.pg_types table
    
    This is required for compatibility with psql-odbc.

commit a1751bd31f5e29ac3cf5e39e7e4fc550b7a0238c
Author: Maximilian Michels <mxm@apache.org>
Date:   Tue May 15 11:55:37 2018 +0200

    Add support for `SHOW TRANSACTION_ISOLATION` statement
    
    The statement `SHOW TRANSACTION_ISOLATION` works just like `SHOW TRANSACTION
    ISOLATION LEVEL` but is necessary for compatibility with psql-odbc and PowerBI.

commit 441f694bef4c098da397e27133240c98ddff01c1
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed May 30 09:32:51 2018 +0200

    upped version to 3.1 snapshot

commit df732f289a1c533169ecfd5c0d733fb4f566e59d
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed May 30 08:23:40 2018 +0200

    prepare release 3.0.1

commit 8c1b0f61da700ce66f6f8636734a85fe4d1542be
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 29 14:10:24 2018 +0200

    Remove special bulk_args length zero handling
    
    `session.sync()` will complete immediately if there were no prior
    `session.execute()` calls. There is no need to register a dummy
    `ResultReceiver` that isn't used.

commit fb28f49b90c0b3530574225f6c9404b2f7b95021
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Tue May 29 14:08:27 2018 +0200

    upgrade admin-ui to 1.10.2

commit 1ff58b86bd913ec259bdc7eb3d55c98088ab1f33
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 29 10:27:32 2018 +0200

    Remove redundant null checks from CrateThrowableRestResponse
    
    Testing `t != null` and `sqlActionException != null` is not necessary.
    `t` can't be null at that point and it doesn't matter if it's a
    `SQLActionException` to include a stack trace.
    
    Also changes the scoping of the `SQLActionException` to make it clear
    that it's only used for the error code.

commit 1037c41f7e755005b8ff50c57ad95f01507a882f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 28 16:40:17 2018 +0200

    Decouple RestChannel from Rest*ResultReceiver

commit 30c902ee3edba3a6bfcc1d8924802005be6aa78e
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri May 25 13:47:32 2018 +0200

    release resources that are required to read node names from file

commit f7cc35cddd16abfd4918e3f66a1d15857a2b880e
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed May 23 12:16:37 2018 +0200

    add lgtm.yml for path classification

commit eaf489a1b8f6ec5f8fd3f4c9d43457075820665c
Author: Autophagy <mika@crate.io>
Date:   Mon May 28 17:26:04 2018 +0200

    Reflect 2.3.11 release

commit 98c521b371c3713a245505bb604136f5d6f64663
Author: Sebastian Utz <su@rtme.net>
Date:   Mon May 28 17:02:32 2018 +0200

    removes unused generics from ShardUpsertExecutor

commit 477f0c48894a00d82cfc99e3e3747d03dc296069
Author: Sebastian Utz <su@rtme.net>
Date:   Mon May 28 16:18:09 2018 +0200

    fixes copy-from-file-pattern test
    
    Changes the test back to really use a pattern instead of a fqn file,
    reverts changes made by https://github.com/crate/crate/commit/a9b4e24d4b101052ea20e807e86ffeed207e3db7.
    Also removes invalid/senseless `testCopyFromDirectory` test.

commit bd37e0e36a3b93cd8891112f7ca35fc03766cc63
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 28 14:17:26 2018 +0200

    Make SQLRequestParser stateless
    
    We've already had a stateful context object that is used as a "builder".
    There is no need to have *both*, the parser having a state and having a
    stateful messenger object.

commit e167a614ba35dfe0b06d1bba8e1eee95c0eab3b6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 28 14:11:49 2018 +0200

    Remove content type detection from /_sql
    
     - `xContent(source)` is deprecated
     - support for a content type other than `application/json` was never
     documented.

commit bb564cc55c1d1defade93f0b0e6c170ace39719b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 28 13:21:11 2018 +0200

    Make factory method naming for SessionContext and TransactionContext clearer
    
    Makes the usage intention a bit clearer. These methods are convenience
    for system related purposes, but are not valid to use for regular user
    invoked operations.

commit 8e738aee7d6765d3c1cff2c350f6c6ff67755069
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri May 25 16:27:48 2018 +0200

    fix the default log file name to crate.log
    
    if `cluster.name` setting was not specified

commit 40cc9f21afc49984242516a1099e5bd217efd22b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 28 11:20:09 2018 +0200

    Make user on JobContext non-nullable
    
    We've made the `User` in the `SessionContext` non-nullable a while ago,
    so the user in the `JobContext` can never be null.

commit 55bd198c2fe39458812d01dc5990561c8ccdbdea
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 25 17:04:17 2018 +0200

    Avoid one level of supplier indirection for sys tables

commit b9ac722f7bac3235b47b1a25aa946cdee2a8eb21
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 25 16:57:58 2018 +0200

    Produce result for sys.health lazy
    
    Replaces a `.collect(Collectors.toList()));` call with `::iterator`

commit 095302164495bc19cb4c45986ed389730b672802
Author: Autophagy <mika@crate.io>
Date:   Fri May 25 15:15:19 2018 +0200

    Reflect 2.3.10 release

commit 4ec61861bb9ba6f59f244459ea8a18ce1d467174
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu May 24 17:26:22 2018 +0200

    QueryStringSplitter: Remove trailing whitespace
    
    This only splits the query string if the resulting queries are not empty. It
    also adds an empty statement in case the query string doesn't contain any
    splittable query.

commit 3bdd28eebc3cdb0c46e1e55a67d7c75e72b51de6
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu May 24 16:21:37 2018 +0200

    QueryStringSplitter: Fix single quote escaping inside single quotes
    
    There was an issue with detecting quoted single quotes inside single
    quotes. This would split `'text'';'` into `'text'';` and `'` where it shouldn't
    have been split at all because the single quotes are escaped.

commit cae2444a3860d8c0ed855979f9af5496266fb93f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 24 23:12:09 2018 +0200

    Add gradle entry to editorconfig

commit 7a00d68e22af1c5e497690fe965b76ed5f77eb0a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 23 16:33:48 2018 +0200

    Avoid unnecessary SubQueryAndParamBinder instance allocations
    
    `convert` creates an implicit instance. This changes some usages to
    create an instance manually to re-use it.

commit 32e541e39d4f07a5067906d4cd483e8c905defc1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 23 16:29:05 2018 +0200

    Remove unused param from BulkPortal

commit a756dae4131b104fc426f4fe8234d432fbb133ac
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 23 16:26:56 2018 +0200

    Remove unused withVersions from DocKeys

commit ccec44245d249744f8d861585ed48fa5e6ce1401
Author: Maximilian Michels <mxm@apache.org>
Date:   Tue May 22 17:35:35 2018 +0200

    Fix printing of aliased literals in select list / groupBy / orderBy
    
    Literals have to be taken special care of when used in a select list or in a
    group by / order by.
    
    - They have to be quoted to resolve their output name
    - Their alias has to be resolved in case they have one

commit c8dc72d618dcc9b897be1cae0966c7de56d098c5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 24 17:31:13 2018 +0200

    Update checkstyle to 8.10

commit d1345c69cb43e3e5939a2ba385e111cdc9753d5c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 24 13:38:03 2018 +0200

    Remove some unused declarations

commit 71756597ef6f1b732317cd77018fed08922f913b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 24 14:41:08 2018 +0200

    Update guava to 25.1

commit f677bce4676b1db4755b517c2b666add985d1b34
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 24 15:20:43 2018 +0200

    Remove clone from Function
    
    A Function is immutable so there should be no reason to clone it.

commit 607801131279f77643ab79b8aa354d5d09b284da
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 24 17:13:34 2018 +0200

    Make gradle quiet by default
    
    Seeing compile errors in the default output is incredibly hard because
    of the deprecation warnings. Nobody is paying attention to the output,
    so this:
    
     - Mutes the sun API warnings regarding SignalHandler
     - Removes the deprecation warnings. Use `-Plint-deprecation` to get them or
     view them in the IDE

commit 0b6063825fac5310b7671d3a7975205b515cdacb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 24 16:46:25 2018 +0200

    tests: Fix deprecation warning in PipelineRegistryTest
    
    `exceptionCaught` is deprecated in the interface.
    
        PipelineRegistryTest.java:48: warning: [deprecation] exceptionCaught(ChannelHandlerContext,Throwable) in ChannelHandler has been deprecated
            public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception {

commit 629619ec784bb20bbdee4aa8480ea2d4d182d3ab
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 24 12:07:31 2018 +0200

    Add .mergify.yml
    
    Config for https://mergify.io/ to automatically merge PRs once all tests
    pass and it has been reviewed.
    
    In order to avoid merging before the author has given the okay, this
    requires a new status check `mergify/allow` which has to be set
    manually.

commit 61c5ff9b81b424d8c90ffaa031af9225af8f342a
Author: Autophagy <mika@crate.io>
Date:   Wed May 23 12:09:44 2018 +0200

    Added upgrade guide for CrateDB 3.0.0

commit 8551c84ddeaba3cf7f01b0c68ba19ee99b1d61bf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 24 14:17:44 2018 +0200

    Avoid wrapping RuntimeExceptions in a RuntimeException
    
    It can break `instanceof` checks against more concrete exception types.
    This might have caused flakyness of `testDeletePartitionWhileInsertingData`

commit a6eefcbd06ec931c2ab8ea1dd9b839a34ceabaac
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 23 15:24:52 2018 +0200

    Add config for probot no-response

commit 6c4ffe0b0f3de7563286d54bb7c74c00a2352624
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 23 20:53:47 2018 +0200

    Revert "use human readable, consistent names for execution phases"
    
    This reverts commit 4e338ebbf2eeedfacd722f42d2fdc8b6b1133ac3 because it
    caused tests like `testSelectWhileShardsAreRelocating` to become flaky.

commit d9d6febcbe1de47e7479761d44af893fe5b1717e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 23 13:58:52 2018 +0200

    Split up github issue templates

commit 044eb5621610b758e653306a77aa4fa5bdfa7143
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed May 23 14:31:32 2018 +0200

    add local toc to all release notes

commit d04f45a43d2634c6c0f83b03e5e2e6dfb829a21a
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue May 22 13:35:53 2018 +0200

    restructure appendices

commit 51f63dcef84e997267283390db823eedfe3af197
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue May 22 13:21:58 2018 +0200

    update wording to match other projects

commit 07d7f65020fba7f5dd7587a5076e796fc1d60b91
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 23 14:44:51 2018 +0200

    Add config for support-requests probot

commit 25d3454cca3f9ef181cf5ee3b5e4ecadedcd0c48
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 22 17:23:57 2018 +0200

    Remove replaceSymbols from projections and phases
    
    That we mutated symbols after scalar-subquery execution to inject
    literals was done for pragmatic reasons before we had the
    LogicalPlanner.
    
    This removes the mutation methods and instead makes sure that the
    symbols are converted before projections or phases are constructed.

commit ab080ecb088be3554dab9ca2e6960f5e3fdeda09
Author: Autophagy <mika@crate.io>
Date:   Fri May 18 17:03:58 2018 +0200

    A few improvements and corrections to 3.0.0's release notes

commit 18c7480726521caeb92159c91556eb50035d430d
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri May 18 14:48:44 2018 +0200

    use consistent, human readable context names

commit ef4ea853490f74a6b50304c64b2eceae28cdde70
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue May 22 14:28:06 2018 +0200

    Fix issue with blob tables and sys.health.
    
    Only DocTables where handled before and as a result a
    ClassCastException was thrown in case at least one Blob Table
    exists in the cluster.

commit 23de2eb77ece9beecfe52e46836a3d6963ff8bc0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 22 15:04:07 2018 +0200

    Use ref.column() instead of ref.ident().columnIdent()
    
     - It's shorter + law of demeter
     - We might be able to eventually remove the tableIdent/referenceIdent
     altogether

commit c6ad24fa3bfbf1c7dc77b074c9bcff6309c1b137
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Sat May 19 20:49:19 2018 +0200

    Fix plan printout for EXPLAIN on count(*) queries.

commit 28cdf92037115da4ac06db2a0faa59bdc7a2e42e
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Sat May 19 20:45:50 2018 +0200

    Test: Add basic tests for PlanPrinter
    
    PlanPrinter is used for EXPLAIN statements and it lacks unit tests.

commit cbc557a0006b80b6f5aea888dd6933fa2ac8b43e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 22 10:55:05 2018 +0200

    Do authentication check only once per connection
    
    Verification of the password is very expensive, so we should only do
    that once per connection to avoid an immense performance overhead.
    
    Average of 100 `select 1` on a re-used connection:
    
        Before patch: 49.64 ms
        After  patch:  1.98 ms

commit 4e338ebbf2eeedfacd722f42d2fdc8b6b1133ac3
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri May 18 13:37:21 2018 +0200

    use human readable, consistent names for execution phases

commit 9d3ac8b79eeebf0cf5bf823a1c922897343fcdc8
Author: Emily Woods <emily@crate.io>
Date:   Fri May 18 15:38:27 2018 +0200

    Update Data Manipulation documentation to include CSV as an accepted  input format

commit 459d79fe511e80a40a29b9659d92260c48d1e800
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 18 09:38:54 2018 +0200

    ci: Avoid logictest submodule checkout on travis

commit fd434a997bb544d01ed7b54167edd0130f45e226
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Sat May 19 12:53:28 2018 +0200

    Test: Fix test for multiple simple queries and query failure.
    
    The Completetable future simulating the failure was returning an Answer
    with and exception instead of throwing the dummy exception. As a result
    the error response instead of containing the message of the dummy exception
    had a ClassCastException. The behaviour was caught by Java9 jenkins tests
    as the message of the ClassCastException differs from the one in Java8.

commit 3f242e4205de5cce987f93f58b6ef5a679d6d785
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 18 11:39:05 2018 +0200

    Avoid duplicate method calls in HashJoin.dependencies
    
    Avoids duplicate allocations or calculations in case `dependencies` is
    not just a simple property.

commit add043898f6ef5ee61286f541ab34cf8e85f538b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 17 17:21:05 2018 +0200

    Remove trappy PartitionName constructors
    
     - `PartitionName(tableName, values)` was trappy because it implicitly
     used the `doc` schema. Using this constructor outside of a test would
     most certainly be a bug in that it doesn't use the default session
     schema.
    
     - `PartitionName(schema, table, values)` was mostly used in tests and
     since it implicitly creates a `RelationName` instance this commit also
     removes it to encourage re-using existing `RelationName` instances and
     avoid `RelationName -> schema, table -> RelationName` roundtrips.

commit 7ac1e9cf36cd636b4cc38b97dca4a5312c3b7931
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 17 17:03:57 2018 +0200

    Remove unused indices function

commit 873ffaf4bb6829922fc3ee1fdf02f3e3c1f8d7ef
Author: Autophagy <mika@crate.io>
Date:   Thu May 17 14:01:40 2018 +0200

    Reflect 2.3.9 release

commit 8f1b80fe9f0d71789fdf66cf20c896bf301fc505
Author: Sebastian Utz <su@rtme.net>
Date:   Thu May 17 09:59:46 2018 +0200

    replaces recursive upsert retry with iterative solution
    
    The recursive retry caused stack overflows when retrying unlimited.
    Also adds an upper retry limit to prevent unlimited retries on unexpected
    item states (e.g. unexpected version).

commit da7a291bb171e2d3c43c9dc96fc127dfc2a7ed59
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 16 11:49:44 2018 +0200

    Fix memory leak in hyperloglog_distinct
    
    The `HyperLogLogPlusPlus` instance was not closed, leading to a leak of
    the underlying arrays that are acquired using `BigArrays`

commit 8d695d2c09e591230feaac33d471b2133cd1e591
Author: Autophagy <mika@crate.io>
Date:   Wed May 16 19:24:50 2018 +0200

    Remove .txt extension from LICENSE in build pipeline

commit cfaf252b5b100080407e497b7270f19ee970517e
Author: Autophagy <mika@crate.io>
Date:   Wed May 16 18:32:34 2018 +0200

    Change release notes generation process to look for rst files, not txt

commit f9e6c79ac5f8502142093c916103657c738ed3fa
Author: Autophagy <mika@crate.io>
Date:   Wed May 16 09:55:19 2018 +0200

    Prepare 3.0.0 release

commit eca1285e70f44bee7f7c12a4b230d561558c6f7e
Author: Autophagy <mika@crate.io>
Date:   Wed May 16 11:24:21 2018 +0200

    Reflect 2.3.8 release

commit 6ec26b89fc2a4c56914d255e31eea16d9194b73b
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed May 16 10:54:56 2018 +0200

    Remove limitation in docs about PSQL SimpleQuery mode

commit 3deedf0c71c08d3959ade1bf7ce5d4789fa8f314
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed May 16 10:54:18 2018 +0200

    Add missing CHANGES entry for PSQL multi query support
    
    Entry for 86f135bf69826d26dc144885323a99205e8ab010

commit c7d36b6abe827a76956376b1f803556b7b372433
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon May 14 14:20:39 2018 +0200

    Add benchmark for splitting multi-query string

commit 86f135bf69826d26dc144885323a99205e8ab010
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon May 14 14:19:56 2018 +0200

    Implement multi-query support for PSQL Protocol's SimpleQuery
    
    The Simple Query of the Postgres protocol allows for a query string to contain
    multiple statements delimited by semicolon. This patch implements support for
    this feature.
    
    Queries are run through the `QueryStringSplitter` which splits a query string
    into multiple statements. The resulting statements are executed serially and a
    result is returned for each query. Only after processing all queries, the
    ReadyForQuery message is sent back to the client.
    
    See: https://www.postgresql.org/docs/9.5/static/protocol-flow.html

commit 360ef8262fb628ca11df9ea7461fcd982d8597ce
Author: Maximilian Michels <mxm@apache.org>
Date:   Fri May 11 16:40:46 2018 +0200

    Delegate exception handling and interrupts to ResultReceiver future
    
    The sync method of the Portal returns a CompletableFuture<?> which previously
    could contain a Boolean indicating interruption of the query execution.
    
    With this patch, interrupts are now indicated through an InterruptedException.
    This exception and all other exceptions are registered at the Future and the
    return value is ignored.

commit 59fce0b39d4f8658c40e2dc4c686648f1a8f2f07
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue May 30 23:11:37 2017 +0200

    LICENSE and NOTICE improvements
    
    CrateDB is not a product of the Apache Software Foundation (ASF),
    however, we have decided that it is prudent to follow the ASF's own
    guidelines for applying the Apache License 2.0 to our project.
    
    We are following most of the principals set out in this document:
    
        https://www.apache.org/dev/apply-license.html
    
    However, some principals do not apply, or we have chosen not to apply
    them on a case-by-case basis.
    
    For the purposes of this patch, the three main changes are:
    
    - Removed several out-of-date sections from LICENSE. Specifically, if we
      are not bundling the bits of a third-party dependency in our Git
      repository, we are not documenting that software for the purposes of
      LICENSE or NOTICE.
    
    - We have made a minor exception to the above principal, and have chosen
      to document the nature of the `es/upstream` Git submodule.
    
    - The NOTICE file has been improved with a few small fixes and a better
      description of how we are handling the documentation of licensing
      matters.

commit 2661f55e3539319179fa3d5622ba249e04e293c5
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue May 15 19:47:34 2018 +0200

    remove legacy docs themes files

commit b9b3e64e76156c487e2210c213105ac74fbd87fb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 15 11:33:48 2018 +0200

    Always pass queryShardContext to termQuery function
    
    This is a no-fix, future proofing change.
    The code in question is only called for boolean fieldTypes which do not
    make use of the `queryShardContext`, but it's not marked as nullable and
    may break with future ES updates.

commit 0d7d7e6d23b65b8ba78b098657b27c322ea56c33
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 15 11:28:04 2018 +0200

    Fix a NPE occuring using != ANY on a timestamp column

commit 0dc5792f322a551472a70fad9584baaffb8cf9da
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 15 11:24:20 2018 +0200

    Fix a NPE that occurred using ANY on timestamp arrays

commit 457040c2d9517e10ec5c9e9ba6c643c7af207e83
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon May 14 22:52:00 2018 +0200

    Add comment for OrderBy not pushed-down through a Filter.

commit 5b619986bab030870b4910f8ccd674a974fd8ab0
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Mon May 14 16:30:37 2018 +0200

    update admin-ui to 1.10.1

commit 7a098a2eab250748ef31bf86e9994eb408fe0f0a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 14 16:50:13 2018 +0200

    Improve cast error messages
    
    Previously something like the following was returned:
    
        Cannot cast io.crate.metadata.functions.params.Param$ConvertedArg@8865e2f to type integer_array

commit 8758d3fd5ed80df86719ac75908444c0015298eb
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu May 3 23:42:07 2018 +0200

    Decide for distributed NL execution also when joinCondition exists.
    
    Previously a distributed NL execution was decided when a filtering
    took place as a remaining WHERE clause after the join operation.
    The reason behind this is that when rows are filtered out, benchmarks
    show that distributed execution results in better performance.
    
    This was not the case if there was a joinCondition on the JoinPair but
    not WHERE clause filtering. Since implicit to explicit rewrite was introduced
    more queries would end up with joinConditions but no extra WHERE clause filtering.
    After verifying with benchmarks that this filtering still results in better
    performance when NL is planned to be distributed, it's decided to plan
    for distributed NL if either joinCondition of where filtering (or both) is
    present.
    
    Benchmarks:
    
             |  All rows match conc=1 | All rows match conc=15 | 4/5 of rows filtered out conc=1 | 4/5 of rows filtered out conc=15
    =========+========================+========================+=================================+=================================
    Dist     |               2192.042 |               5308.429 |                        3634.034 |                        8647.100
    ---------+------------------------+------------------------+---------------------------------+---------------------------------
    Non-dist |               1896.855 |              5171.366  |                       14893.225 |                       40718.666
    ---------+------------------------+------------------------+---------------------------------+---------------------------------

commit aaade4ebc07dc35285ce44d3604ca403f6b03a83
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu May 3 12:21:49 2018 +0200

    Convert implicit join to explicit.
    
    When 2 tables are joined implicitely through a WHERE clause condition,
    convert this join an explicit ``JoinPair`` as if it was written using
    the ``t1 JOIN t2 ON ...` syntax.
    
    The reason for doing that is that modeling the joins with JoinPairs
    gives more flexibility to apply optimizations,
    e.g.: execute the join operation using the HashJoin algorithm.

commit 523d2d5f2eede72a3742a56fa7d9285b12632935
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed May 2 21:45:40 2018 +0200

    Rename HashJoinDetector to EquiJoinDetector

commit 39a8e76cb1ae16ac1667948c3f3711bc80ea5f12
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon May 14 15:16:33 2018 +0200

    Fix issue with HashJoinBatchIterator producing wrong results.
    
    Fixed condition, which decides a switch to the right iterator, to also
    check if the left iterator is already exhausted (allLoaded() == true).

commit df1c566876ec7b2c251cdb1b4559821a1b800c99
Author: Sebastian Utz <su@rtme.net>
Date:   Mon May 14 16:24:54 2018 +0200

    Fixes `columnstore` boolean parsing
    
    The `columnstore` column setting value was casted to a boolean instead
    of parsing it to a boolean. This is fine for normal tables, as boolean
    strings were implicitly converted to booleans whereas this is not
    happening for index templates.

commit d2e698e971df8fc90679e3c97fb7184cd9e5fee2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 2 15:28:04 2018 +0200

    Remove duplicate where analysis & pkCol extraction logic
    
    The `WhereClauseOptimizer` was introduced to do a preliminary analysis
    of the `WHERE` expression without accessing parameters or sub-query
    values. This was necessary to support scalar subqueries in `DELETE` and
    `UPDATE` but it duplicated some logic.
    
    This commit streamlines the logic a bit:
    
     - `WhereClauseOptimizer -> DetailedQuery` is now the first step.
    
     - A `DetailedQuery` can be converted to a (bound) `WhereClause` without
     re-extracting primary key columns.
    
     - `WhereClause` no longer contains `docKeys`, these are part of the
     `DetailedQuery`. If they're available no `WhereClause` should be built.

commit 7991f81a61dbb1180bf6618935b6464b19e207a2
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Sat May 12 21:50:36 2018 +0200

    update bundled crash to version 0.24.0

commit b686fc87de41c6eda1b1a4924172d610a12cb9ec
Author: Emily Woods <emily@crate.io>
Date:   Thu Jan 11 17:08:07 2018 +0100

    Add support for COPY FROM with CSV input format
    
    Add support for CSV file inputs in COPY FROM statements.
    The input type is inferred using the file's extension or can be set
    using the optional WITH clause and specifying the 'format'. If the
    format or extension is provided as neither csv nor json, it will
    default to handling as json.
    
    Test: Add benchmark tests to compare performance of COPY FROM with CSV and JSON.
    Docs: Update COPY FROM docs to include CSV as a supported format.

commit ea090622c805f1ac7aff396f863f07a51e705473
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed May 9 15:32:28 2018 +0200

    Docs: Remove `translog.flush_threshold_ops` table setting.
    
    This setting has been removed since ES5 upgrade.

commit 5ec8bc18089ce6c2bbecb8ccd463aa5cca56692f
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri May 4 17:29:08 2018 +0200

    Fix bug with distributed NL and pushed-down Order By.
    
    When the left relation of a Join has an Order By then this might be
    a pushed-down OrderBy that needs to be preserved. In that case if the
    NestedLoop is planned as distributed the left relation must remain on
    the left and shouldn't be broadcasted to the execution nodes as this
    will break the ordering.
    
    The positional order by of the left relation must also be exposed to
    by the Join operator so that a proper wrapping Merge phase is added.
    
    Benchmarks showed that it's better to execute a distributed NL with
    the big relation being broadcasted even if it's bigger (in numOfRows)
    rather than running non distributed:
    
             |  All rows match conc=1 | All rows match conc=15 | 4/5 of rows filtered out conc=1 | 4/5 of rows filtered out conc=15
    =========+========================+========================+=================================+=================================
    Dist     |               2135.051 |               5307.234 |                        3383.737 |                        9010.810
    ---------+------------------------+------------------------+---------------------------------+---------------------------------
    Non-dist |              10768.582 |              29048.164 |                       17138.134 |                       42107.285
    ---------+------------------------+------------------------+---------------------------------+---------------------------------

commit 3f6c47ceee7dc3430d4de5b14056d43836f38bbd
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri May 4 21:52:10 2018 +0200

    Test: Small fixes
    
    - Removed irellevant annotation
    - Renamed methods for clarity
    - Make usage of NesteLoop explicit

commit 1c76cacb61e7ef62052e84364831a315f3cc5125
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 4 14:15:58 2018 +0200

    Fix COPY TO with WHERE on primary key
    
    This adds support for shard projection execution using the
    `PKLookupOperation` in order to support actions like `COPY TO WHERE
    pkCol = ?` which choose a primary key lookup strategy but also require
    shard projections.

commit c2849708d349e03763d970d71f5407c439153f13
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu May 3 16:15:26 2018 +0200

    Check SqlPrinter round trip when analyzing or planning statements
    
    This enables two checks for all unit tests which use the `SQLExecutor`:
    
    1) Statements which are analyzed, are analyzed and printed twice. The printout
    of both statements has to match.
    
    2) Statements which are planned, are printed and planned again to check if both
    plans match.
    
    This provides test coverage in addition to the `SqlPrinterTest`.

commit 1cc9c84b1da25516195b207cd3343538dc014912
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu May 3 16:04:51 2018 +0200

    SqlPrinter: Correctly print where clauses in join clauses
    
    Where clauses can be pushed down to the tables involved in a join. These tables
    then need to be printed as subqueries which need to have a QualifiedName. The
    name is generated from the fully-qualified table name.

commit 5ec2f525e2ee99bceb53e03eabe009bbf391abbb
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed May 2 19:35:20 2018 +0200

    SqlPrinter: Generate false where clause if there is no match

commit 5c1f9bf5e3252d4474276fd6c6ec60256a825f84
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed May 2 18:06:00 2018 +0200

    Replace table type by array type
    
    The table type was almost identical to the array type. Reprinting the query
    would leak the table type while providing no additional benefit over the array
    type.

commit bf89987f3f44bd5457bf4080ed4d9322dda2b8c5
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed May 2 12:36:33 2018 +0200

    SqlPrinter: Remove obsolete check

commit c0e7a20725ffef9eb0e318252ce16ffad0b62852
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed May 2 10:42:40 2018 +0200

    SqlPrinter: Minor fix to increase readability

commit ecbe22eeda480e1ead84b8facb03e0f1dd7efc81
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Apr 30 17:44:29 2018 +0200

    Generate QualifiedName for DISTINCT subqueries

commit d280b250c21ccbc868d60106cdac10b4dfc1b9b3
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed May 2 11:21:16 2018 +0200

    Ensure correct return type of SelectSymbol if wrapped in cast function

commit 3af9ee1ede09cd8c8dcf5c98cb6bac11197964e6
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Apr 30 16:10:51 2018 +0200

    SqlPrinter: Fix aliases of fields in subselects

commit 56158c53e3bc503204b13f91ad99dc7956f32b90
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Apr 30 14:24:31 2018 +0200

    SqlPrinter: Fix view used in joins

commit 31eeacd959e0acfc3a9eda5a194d49d9ff5e11ad
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Apr 30 14:19:07 2018 +0200

    Fix printing of table functions and arguments

commit f902581e16035c151dd3f163ab37a65818ab58f5
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Apr 30 11:52:22 2018 +0200

    Fix space in array printing
    
    The space is not only important for consistency but it also determines the
    output name which influences semantics when using it as a grouping key.

commit 2e5af3cfae077dc14d92c868a5e32981e5f7386a
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Apr 26 18:43:39 2018 +0200

    SqlPrinter: Fix UNION with three tables

commit e6c1ba400021cfcbeb4db75e3096a7237be709fa
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Apr 26 15:37:13 2018 +0200

    SqlPrinter: Fix Select statements in joins

commit fabdf7754486b55e195e1b8ab9da8ef2e07d7182
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed Apr 25 13:08:21 2018 +0200

    Planner: Fix equal implementation of plans

commit 03ff9dad4c099718b8b340df35f1a57f4101315b
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed Apr 25 12:48:16 2018 +0200

    SqlPrinter: Print SelectSymbol when wrapped inside another symbol

commit b9e6b91e4aa5e8bc62eb4e1cd7b4bc8c3cdc15ca
Author: Maximilian Michels <mxm@apache.org>
Date:   Tue Apr 24 16:01:24 2018 +0200

    Print NULL consistently in upper case
    
    Null needs to be converted to the same literal representation to be able to use
    it in groupings or when selecting it as a col.

commit 46503738c714a0a24771e416919a8db5991f02b6
Author: Maximilian Michels <mxm@apache.org>
Date:   Tue Apr 24 15:53:17 2018 +0200

    Implement printing of GROUP BY literal

commit 3555c8b75b18a5b0c45900f14bbad3e8b765fcf6
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Apr 23 16:30:38 2018 +0200

    Implement SQL printing of cast functions for collection types

commit a715130e9b5ead5205e0828d94980fcea4d687fa
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Apr 23 16:01:14 2018 +0200

    Implement SQL printing of subscript notation

commit e7737c0696af7e04076fb2c2b247773bba10b7c4
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Apr 23 13:15:08 2018 +0200

    Implement SQL printing of match predicate

commit 8f3af7c7ae759ea6b12be25ee59ad590abf6ed3c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 4 15:28:23 2018 +0200

    Remove non-partitioned table handling from ShardPartitionOrphanedExpression

commit fde69130e169d28e8b026b007e20e77e78ab8850
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 4 15:27:18 2018 +0200

    Rename PartitionName.tableIdent → relationName

commit 353e2f53afafa117a64a549639f3122755db2078
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 4 15:13:59 2018 +0200

    Make BiFunction constants final in NodeJobsCounter

commit bd61a0b033af169e83715af214be227b103d9f92
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 4 16:30:26 2018 +0200

    Fix two potential resource leaks

commit 6ffcd3b0ba306c97255ca8f90373d3040ae61bd7
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu May 3 10:17:53 2018 +0200

    remove changelog entry that has been released already

commit d82a8daa5387c3a4049e99ab270cf21fde97f85d
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu May 3 10:04:46 2018 +0200

    fix formatting of changelog entries
    
    mainly double backticks for inline code

commit dbf54fb6e41e5f7b3712b115ec40e8b65ccb21de
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu May 3 09:36:32 2018 +0200

    reflect release 2.3.7

commit a7a1a739f690c467b90643ba88b18e155d7186df
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon Apr 30 17:35:07 2018 +0200

    clarify MATCH() syntax wrt explicit indexes

commit 60af8c664d64ba5b206a39dec7a519257745a69d
Author: Sebastian Utz <su@rtme.net>
Date:   Thu May 3 14:32:57 2018 +0200

    Don’t run hash join distributed on limited source relations
    
    If one of the source relation has a remaining limit/offset, running
    the hash join distributed is not possible as every hash join operation
    only sees a slice (distributed by modulo) of the source relations data.

commit 660933ebfa6f19d9d8017122146b9b10dc928fdf
Author: Sebastian Utz <su@rtme.net>
Date:   Thu May 3 14:46:42 2018 +0200

    Test: decrease the simulating loadNextBatch delay
    
    E.g. the HashJoinBatchIteratorTest is heavily using this batch simulating
    component, small delays on loadNextBatch will dramatically decrease the
    time for this test suite (~50s to now ~3s).
    Small delays should be fine for verifying the expected behaviour as well.

commit 308123e7aab1df7425097b88b5e6114e3b3b2820
Author: Sebastian Utz <su@rtme.net>
Date:   Thu May 3 11:41:33 2018 +0200

    cleans up join plan builder code
    
    also sets the correct distribution of left & right on nested loop plans.
    this won't fix anything as the wrong distribution would have been corrected
    by the same-node optimization, but it clarify the plans.

commit 1818a1b8ccd057b1d569072e730e80182959fc7c
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed May 2 17:10:52 2018 +0200

    Fix extraction of hash join symbols.
    
    When analyzing the query only ``=`` in the top level or
    ``=`` as part of a top level ``AND`` can be used for
    hash join symbols extraction.

commit 86062ec3395849ceb3878431d35d47ab4be18095
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed May 2 17:08:07 2018 +0200

    Fix detection of equi-join.
    
    NOT(t1.a = t2.b) is not a valid equi join.
    
    Generally when analyzing the query only ``AND`` and ``=``
    is allowed in the top level.

commit 7d0ad7dc5935aae07de55cc13d18b40a5b8ee9ca
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 2 16:44:31 2018 +0200

    CopyAnalyzer: Move QuerySpec definition closer to use-site

commit 067e49e4fc41bc2a9aeeb26fc6696f27f2c8c74c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 2 16:12:15 2018 +0200

    Make more methods in CopyAnalyzer static

commit f9f25129b86684adcd4f6c1496b9278bb4e0b534
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Apr 24 23:02:48 2018 +0200

    tidy .gitignore

commit 8eff7cd682bb0c54f282c476142986ba3320a5ed
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Apr 24 22:06:52 2018 +0200

    ignore 'out' doc generation dir

commit 96c12775df3f819d7db5327d17664e3f175ad521
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 2 14:45:48 2018 +0200

    Do where clause optimization in planner instead of analyzer
    
     - Aligns select handling more closely with delete and update handling
     where the `WhereClause` optimization is also done in the planner.
    
     - Solves an issue with the round-trip printing that is being introduced
     in https://github.com/crate/crate/pull/7195
     (Running the `WhereClauseAnalyzer` expands generated columns, so
     printing the analyzed statements includes additional expressions in the
     whereClause)

commit a34437addd93b30a79320af2264e32ce8aa04625
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 27 16:02:25 2018 +0200

    Change whereClause on Count/CollectPhase to a query symbol
    
    Should make the code a bit more comprehensible and less trappy.
    Both `docKeys` and `partitions` are never used on the collect nodes. In
    fact, besides the `query` nothing of the `WhereClause` was streamed.

commit 40c7425c1a5aeb856b6d0c2dd99ac31becc2e2fe
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Apr 27 15:08:17 2018 +0200

    use PAGE_SIZE as maximum block size for hash joins
    
    On distributed joins, we must ensure that all parallel join phases
    will eventually switch to the same relation to conform to the contract of
    the DistributingConsumer that all receivers must respond before a next
    batch is loaded/pushed. If the parallel join phases would decide for
    different block sizes which would require a next batch on the left relation,
    this contract wouldn’t be achieved, as one would ask for a next batch of
    the left relation while the other already switch to the right relation.
    This would then result in a distributed dead lock as neither the
    DistributingConsumer of the left nor of the right relation would get a
    response from all receivers/join phases.

commit 2c7f916e00e59e4a2b6fac1e66182c35bd75e3ac
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 27 14:01:56 2018 +0200

    Prevent column names with schema to match on table aliases

commit 1112483b36ae015e4d1841935edd32438413f720
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Apr 30 14:44:15 2018 +0200

    remove unnecessary resources from es-core module sourceSets
    
    This fixes an issue that popped up with Gradle 4.7 and IntelliJ 2018.1.2
    where java sources could not be found at compile time.

commit 2f864ada36d53b3e421119c1f15d1938fbcd3ed9
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Apr 27 15:50:49 2018 +0200

    Test: Add test for binary enc/dec of multi-dimensional arrays.
    
    Added an ignored test to remind us that encoding/decoding of
    multi-dimensional arrays is problematic when null values are involved.

commit e8fd62774c95a56b59ddb770c0517ca934003708
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Apr 27 15:50:16 2018 +0200

    Fix binary encoding/decoding of arrays for pgsql wire protocol.
    
    Missing adding the 1st integer that denotes the total length
    to the total length value.
    
    Problem "caught" by npgsql driver and caused some tests using a Reader
    to fail unless "CommandBehavior.SequentialAccess" is used.
    
    Text encoding/decoding used by other clients (like psql and JDBC) is
    working correctly.
    
    See: https://github.com/crate/npgsql-cratedb/commit/f476e5b8c75b3cdb0357e7a00faf388753be41d8#diff-a000be0a80d3d652a45775d249a46509R223

commit 7f33b24446f416ab4cb2abaf82c70d571f8b540c
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Apr 27 15:47:48 2018 +0200

    Test: cleanup redundant code

commit 9d23c44caddcc0915a8e0d8e7020a82e3af49fa1
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Apr 30 10:26:15 2018 +0100

    Stop handling the USR2 signal on windows platforms.
    
    Windows does not support sending signals, so attempting to handle them
    just results in a big warning message at startup (when there's actually
    nothing wrong).
    This commit disables the attempt to even handle the USR2 signal on windows
    platforms.

commit a3cbdcfecb82231a8488631a077f07fdd7c2f31e
Author: Autophagy <mika@crate.io>
Date:   Fri Apr 27 22:47:21 2018 +0200

    Fixed typo in geo shape precision documentation

commit b3bc54bcdfa9371553e0ce4d0fc3b08dad635711
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Apr 24 22:04:23 2018 +0200

    link to GitHub

commit e9c429b0e6868034cae32bd2da05a9d6b8004f78
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 27 11:55:29 2018 +0200

    Remove create_bwc_index script
    
     - The script contains hard-coded CREATE TABLE statements, so it is hard
     to re-use
    
     - The `prepareBackwardsDataDir` functionality used to load old indices
     has been removed from `ESIntegTestCase`
    
     - We've `crate-qa` for bwc tests
    
     - Indices for old versions could probably be created using `cr8` with
     something like:
    
        cr8 run-crate version \
          -- @crash ... \
          -- @zip -r bwc_data_path.zip '{node.data_path}'

commit 32dfc19700b4decc7da5f689f1a7256bb774faab
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 27 11:42:21 2018 +0200

    Rewrite queries on _uid to _id
    
    The previous logic of prefixing literal values with `default#` was
    broken. Since `2.3` uids no longer include the `type` name (`default`).
    `_uid` and `_id` became equivalent.
    (See f9c5009acabdc695ba15b50fc3ffd7bd57a4809c)
    
    For older incides (created prior to `2.3`) the re-rewrite didn't work
    either. We changed `_uid = '1'` to `_id = 'default#1'` which is wrong on
    two levels:
    
     - The assumption that the user uses the `_id` values to query `_uid`.
     If a user writes a query on the `_uid` column he should be able to use
     values retrieved from `SELECT _uid ...`
     - Using `_id` in the query with a literal re-written to match the
     `_uid` values.
    
    This simply removes that logic altogether, the fieldMapper layer will
    create the correct queries on the `_uid` column.

commit ab26a8880b6df2f45c66f14371eadc23731a3a74
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 26 16:48:07 2018 +0200

    Require Symbol instead of WhereClause in LuceneQueryBuilder
    
    The `WhereClause` is quite overloaded, containing things like `docKeys`
    and `partitions`, both irrelevant for the `LuceneQueryBuilder`.
    
    Changing the dependency makes it clear that nothing but the `query` is
    used.

commit d7072abae069878b2b210f9525dfdeb9072bc173
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 26 09:56:06 2018 +0200

    Make TO_TRY_CAST_MAP final

commit 53c8558faa914dc1859ca8240a2742c669e09469
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 26 09:51:36 2018 +0200

    Avoid suspicious List.indexOf call in ensureColumnCanBeUpdated
    
    Fixes a warning due to `List<GeneratedReference>.indexOf(Reference)`

commit 310d94beec9df30ce6834e26a63a8d37b0bb83e5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 26 14:38:37 2018 +0200

    Set repeat requirement for right source of hash join
    
    The `HashInnerJoinBatchIterator` calls `right.moveToStart` so the repeat
    requirement needs to be set to true.

commit 4bf66f274e032a7a1e73437cf9fdde5e67e69684
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Apr 25 13:58:10 2018 +0100

    Update ES upstream pointer to include the insecure settings.

commit c08f41ea49670ba8a27be5785632877bba92d4e6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 24 16:14:27 2018 +0200

    Remove unused DummyStatsProvider

commit 2352132ec1fb880ea626eff865c4cddcb16527b0
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Apr 24 14:04:05 2018 +0200

    Docs: Updated settings of `CREATE REPOSITORY`.
    
    With ES6 the `region` setting is not used at all, instead
    the `endpoint` should be using a URI which specifies
    also the region.

commit a430a38bc7a7b5a32e885be1efe052caaad99c37
Author: Maximilian Michels <mxm@apache.org>
Date:   Tue Apr 24 12:45:13 2018 +0200

    Test: Cast if convertible when both arguments are not castable
    
    This verifies the changed behavior in the recent master that a conversion will
    be attempted, if convertible, even if both types are not castable.

commit c11314d22283be4a2c77c6a7382505c31c7ea9fa
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Apr 23 18:14:37 2018 +0200

    Respect castability of argument when converting against inner type
    
    When converting an argument to match an inner type of a parameter, we previously
    assumed that argument would always be castable. This doesn't have to be the
    case. So we preserve this information now.
    
    This happens for parameters of form:
    
    [long,                     array(integer)]
     ^^^^                      ^^^^^^^^^^^^^^
     May be castable to int     Not castable
    
    The above is an example for parameters of form:
    
    ```
    FuncParams.of(Param.ANY,
                  Param.ANY_ARRAY.withInnerType(Param.ANY))
    ```

commit 1c7f1d3bfc3629602f8bb6a4cea246dbd247724c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 23 13:06:08 2018 +0200

    Favor object unknown exceptions over missing privileges
    
    This changes the privilege checks to throw `SchemaUnknownException` or
    `RelationUnknown` instead of `MissingPrivilegeException` if the current
    user is not allowed to see the objects in question. This is done to
    prevent information leaks due to slightly different error messages. For
    example, previously the following errors were raised:
    
        select * from does_exist;
        MissingPrivilegeException: Missing 'DQL' privilege for user 'arthur']
    
        select * from does_NOT_exist;
        MissingPrivilegeException: Missing privilege for user 'arthur'
    
    If a user has visibility permissions (= any of `DDL`, `DQL`, or `DML`)
    then the user still gets a more detailed `MissingPrivilegeException`,
    like `Missing 'DQL' privilege for user ...`.

commit 2c3013e37936d5ab356d04b4e252f31fdf00ba00
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 23 14:24:12 2018 +0200

    Replace maps in UserPrivileges with sets
    
    A `HashSet` internally still uses a `HashMap` but this makes it clear
    that the values are unused.

commit 88c3f76264bddb50bf276df0b7cc112ceddf6f64
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Apr 23 20:19:57 2018 +0200

    fixup! use modulo based distributed hash join

commit a99a216137c327a4abf564e927fb98b654cac52b
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Apr 16 15:00:49 2018 +0200

    fixes decision when a hash join block finished processing
    
    As it is not guaranteed that a batch will deliver the defined number
    of rows (it can be less or more), it’s not possible to make decisions
    based only on this.
    To solve that we will additionally estimate and track how much batches
    of the left relation are required to finish processing 1 block.

commit b00110d11ddd3ccaae85cab42c97676f5704e9de
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Apr 6 14:13:58 2018 +0200

    use modulo based distributed hash join
    
    as benchmarks shows that distributing the hash join using the modulo
    distribution approach is always faster, it will be used by default
    for all hash joins now.

commit 7d82c7690fac9c01816d63e874ac929f8bc5991b
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Apr 19 18:28:43 2018 +0200

    Isolate sources in FROM clause to avoid leaking fields
    
    The relations in FROM clauses all shared the same `RelationAnalysisContext` which
    could lead to problems when referring to fields of a relation which already had
    been added as a source.
    
    For example:
    
    ```
    select * from t1, t2 inner join t1 b on b.x = t1.x
                   ^^^   ^^^^^^^^^^
                 implicit explicit
                  cross    inner
                  join     join
    ```
    
    The second join would see the fields of t1 because the FROM elements are
    evaluated one after another and added to the sources of the relation
    context. However, this is not legal in SQL and would throw a runtime exception
    during execution:
    
    ```
    UnsupportedOperationException: Can't handle Symbol x
    ```
    
    With this change, this now fails in the analyzer with
    
    ```
    UnsupportedFeatureException: Cannot use relation "doc.t1" in this context. It is
    only accessible in the parent context.
    ```

commit 3045c1bcdb46683f771666df22ccf20bb860607a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 23 11:15:20 2018 +0200

    Remove null-user specific code from UserManagerService
    
    Due to a previous change the user can no longer be null.

commit 135008b30974aa9d67d064233f43bb7871b12931
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 19 15:14:17 2018 +0200

    Update gradle to 4.7

commit 15b2da9569622c6029c0c95a2e2d21806e9cc095
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Apr 19 08:46:32 2018 +0100

    Document the stats logs behaviour when memory or size limits are hit.

commit 15822b1b58c124651b6dfb5327ab9984b37bd48a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 19 17:13:49 2018 +0200

    Run everything as super user without enterprise enabled.
    
    This makes the `User` non-nullable.
    
    For all practical purposes this shouldn't change the behaviour from a
    users point of view.
    
    If enterprise is enabled and host-based authentication is *enabled*, a
    user was already mandatory to be present.
    
    If enterprise is enabled and host-based authentication is *disabled*, a
    user could connect as `null` user, which behaved the same as if
    connected as `crate`. This now changed so that it defaults to `crate`.
    
    If enterprise is disabled, everything ran under a `null` user context.
    This also changed to run under a `crate` user. Since there were no
    privilege checks without enterprise and functions like `user` are not
    available without enterprise, this change is mostly invisible to users,
    with the exception of `sys.logs` entries which now default to `crate` as
    user as well.
    
    Two main motivations for this change:
    
     - Being able to avoid null checks for the user
    
     - Not having to worry if a `null` user means "has no privilege" or "has
     all privileges"

commit 365efd933c8eb198e761077fedb91b0eddbcd360
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Apr 20 09:47:43 2018 +0200

    docs: remove note about limitations of views

commit e7aa070b56b6aca1fe31075a729741e291085648
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Apr 19 17:15:11 2018 +0200

    fix incorrect responses on BLOB API after an error occurred
    
    The BLOB API returned error responses (e.g. when a BLOB was not found)
    multiple times which caused the client to receive a wrong response.
    Only one response is consumed by the client at once, and therefore the
    next request consumed the leftover response of the previous request.
    This happened on HTTP connections that had the `Connection: keep-alive`
    header set (which is default in HTTP/1.1).

commit 01a5fae8491f9267affb830a1be5ac397c90a896
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Apr 11 15:37:13 2018 +0200

    complete batch iterator future on failure while merging buckets
    
    mergeing buckets can be caused by a loadNextBatch call on the batch iterator.
    at this point the iterator already returned a future to the consumer,
    so we must complete this future. closing the iterator won’t help as nothing
    is ongoing, all is waiting for the future to complete.

commit 0ec6c04c3e225db7cd32bdcf0d3f40f57ebef179
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Apr 11 15:34:36 2018 +0200

    batch iterator must finish page iterator on close to release resources
    
    specially if the page iterator is accounting memory to the circuit breaker,
    no finishing it will cause the accounted memory not to be freed.

commit 090246d6067273731e4f39545f253c1932d243df
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 10 14:52:11 2018 +0200

    release PageDownstreamContext listener immediately if isLast
    
    if the downstream contains another PageDownstreamContext in the chain,
    this downstream won’t respond as it is possibly waiting for a parallel
    other upstream. if both chains share the same upstream, all is stuck as
    the upstream will only send the next data if all downstream phases
    responded.

commit 53b13dc14cf248e7646ef39f3f22efcc634e3e0b
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Apr 19 12:56:32 2018 +0200

    Ensure plans of printed analyzed statements remain consistent
    
    When printing analyzed queries with the SqlPrinter, we want to ensure that printed
    queries have the same execution plan as the original queries.
    
    This is a safety measurement for our VIEW support. Queries are analyzed and
    printed before they are stored as a VIEW.

commit acec415d89b76da33d673a42889ca1c3c1cad0ee
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed Apr 18 16:44:27 2018 +0200

    add admin UI features to enterprise page

commit 46c9e3c75625d1575b7d01b74fed81e769853b8f
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Apr 17 15:07:28 2018 +0300

    Add developer guidelines regarding debug/trace logging.

commit a8069ce008578c5c41a64aa23fc4f52fb320aa3e
Author: Maximilian Michels <mxm@apache.org>
Date:   Tue Apr 17 15:50:30 2018 +0200

    Extend SqlPrinter to print all JOIN types
    
    This enables us to use queries containing join operations in views.

commit 987242b579aebf0ef05638bf8843912a91dfd14e
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon Apr 16 17:02:02 2018 +0200

    fix code block formatting

commit 0b0bb9da2157239cbc98fbc4388f808cff0ad057
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 17 12:11:13 2018 +0200

    Docs: Fix typo in logging.rst

commit 6a9cbd226f817c33a1c71025773e1cfd1a9de5b8
Author: Maximilian Michels <mxm@apache.org>
Date:   Fri Apr 13 17:09:18 2018 +0200

    Docs: Add paragraph on meaningful commit messages
    
    The community raised concerns about some of our commit messages. We agreed
    commit messages are important and wanted to update the CONTRIBUTING page.

commit 5a986092b3ed8ffc1d5f84a16b6469809032e8f7
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Apr 17 10:41:32 2018 +0100

    Rename ec2 cloud.aws.* settings to discovery.ec2.*.

commit cb6f23c26da531a8ca67fdd2b12cc449b1203eab
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Apr 16 18:26:45 2018 +0200

    Always fully-qualify the output names in SqlPrinter
    
    Whenever possible, we fully-qualify the output names used in the SELECT
    statement. This avoids name clashes whenever columns with the same name are
    used.
    
    Unique column names will be necessary when we implement printing for table
    joins where duplicate column names can occur.

commit 4ed988287e50b4c287c53857e0ba3957600a5e89
Author: Maximilian Michels <mxm@apache.org>
Date:   Fri Apr 13 18:03:12 2018 +0200

    Extend SqlPrinter to print subqueries
    
    This enables us to use subqueries in views.

commit 0859c74d554eba17bba23a6178e580dfff09605c
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Apr 16 14:00:39 2018 +0200

    Add schema documentation for sys.jobs/operations tables.

commit 03c37202f85f941cb1ed0414be40511c5a2a1a09
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Apr 12 11:56:01 2018 +0200

    create correct logical plan for joins on views
    
    added a querySpec to the AnalyzedView, which contains the fields of the
    subrelation as outputs, because FetchOrEval generates its outputs from
    the outputs of the source relation (AnalyzedView)

commit 132e48cdd92d31164b65a12061575ba014d259fd
Author: Maximilian Michels <mxm@apache.org>
Date:   Fri Apr 13 16:26:00 2018 +0200

    Extend SqlPrinter to print VIEW analysis
    
    This enables us to use VIEW queries for views.

commit 4a6efba5df6dee78b8d9111d487f55371e8685fd
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Apr 13 15:25:28 2018 +0300

    [test] Fixed JMX monitoring tests.
    
    - Some tests where running without an associated CrateLayer.
    - Check for exception on jmx query and fail.

commit abd170ba6f716a5297f207698bc00eae6dc91e3f
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Apr 13 15:24:53 2018 +0300

    Register new NodeInfo MBean.
    
    Followup to: 384077dbc3037af50798209b004e120d37d26c8d

commit 6c0d6af89add940fbbaf7defd37ca59ee650839c
Author: Maximilian Michels <mxm@apache.org>
Date:   Fri Apr 13 10:43:19 2018 +0200

    Extend SqlPrinter to print UNION analysis
    
    This enables us to use UNION queries for views.

commit c9df2ca6339e1a859ca49bfb900c31098edbb3b7
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed Apr 11 14:29:59 2018 +0200

    fix AWS env var instructions

commit 384077dbc3037af50798209b004e120d37d26c8d
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Apr 12 16:35:56 2018 +0300

    Implemented a new NodeInfo MBean to expose information through JMX.

commit f86a35cc385b1af3de5350f787a2a55b1cc2a071
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 12 16:05:34 2018 +0200

    Make ANY work with nested arrays

commit e5cc8b7eafb7c952c30241067fe9e55ba5f96819
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 11 14:17:25 2018 +0200

    Change AnyOperator implementations to use composition
    
    Arguably this is a bit of a personal preference. Main reasons for the
    change:
    
     - `AbstractAnyLikeOperator` extended from `AnyOperator` and overwrote
     `doEvaluate`, rendering the `compare` method useless. `compare` was the main
     extension point of the `AnyOperator` class.
    
     - It was hard to see the differences between all `Any*Operator`
     implementations because of the boilerplate.

commit 7ce5c387715ef80e36b8af0aa7dcfa2b7fda7005
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 11 15:08:05 2018 +0200

    Tests: Adapt NOT LIKE ANY tests to use scalar test infrastructure

commit bd716d8c9da3ce6f5ec99f845c37d4db0ef0ea6a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 11 14:51:26 2018 +0200

    Tests: Adapt LIKE ANY tests to use scalar testing infrastructure

commit d057a4b72a3fec9c38843e6e00aa070e9f9db18c
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Apr 11 14:49:25 2018 +0200

    Display node information in sys.jobs.

commit d98de3d80fe3efc9738a20ad33b2b5fa40b4126e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 11 17:47:35 2018 +0200

    Do not require permissions to use table functions
    
    Queries like `select 1` are commonly used for simple connection tests
    and table functions don't expose any stored user data so we can allow
    them to be executed.

commit c9583d9528aceef875b2f2bd56972e02c4dd81a6
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Apr 11 15:04:27 2018 +0300

    Fixed typo and minor rephrasing for PR template.

commit 4881eacfcb85d2912598e63331abc314b88ad675
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Apr 11 14:55:16 2018 +0300

    Update documentation for `discovery.type: ec2` breaking change.
    
    - ``ec2`` is no longer a valid value for ``discovery.type``. Instead ``discovery.zen.hosts_provider``
    needs to be set to ``ec2``
    - ``discovery.type`` can only be ``zen`` which is the default or ``single-node`` which is only used for testing
      purposes and it was not exposed in documentation. Therefore it's removed from documentation.
    
    See ES Breaking change:
    https://www.elastic.co/guide/en/elasticsearch/reference/current/breaking_60_settings_changes.html#_discovery_settings

commit 33100f8bef858ae689af31b7c1cf4c93d47725fd
Author: Maximilian Michels <mxm@apache.org>
Date:   Tue Apr 3 09:30:31 2018 +0100

    Add same-statement precondition to BulkPortal
    
    The BulkPortal is currently used when the same statement is bound to a portal
    twice. This is not always correct since different statements can be send after
    sending two identical statements. We should fail early when the statements
    change.

commit 6f85ba5271748f693c9715f2f634f27591c34e5e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 10 18:05:41 2018 +0200

    Support ordering on partitioned or analyzed columns
    
    Ordering on analyzed or partitioned columns was already possible in
    certain circumstances. For example if a UNION was involved.
    
    This makes the support consistent for all cases.

commit b6d00ab72ed3a025b82c179b875d4a7c66416463
Author: Matthias Steinböck <matthias.steinboeck@gmail.com>
Date:   Tue Apr 10 18:26:41 2018 +0200

    adds sphinx labels for ddl, dml and index

commit d925c3aecb06e27948300abf9a16d41a10022093
Author: Maximilian Michels <mxm@apache.org>
Date:   Tue Apr 10 17:45:23 2018 +0200

    Always use RelationName for checking existing Views

commit 3c5069394aea6f34996476ec24575cc2834e4b33
Author: Maximilian Michels <mxm@apache.org>
Date:   Tue Apr 10 10:15:10 2018 +0200

    Add TransportCreateTableAction to perform check for existing views
    
    When creating tables, we have to check for existing views now. This can only be
    done in a safe way (i.e. preventing race conditions) if we perform the check
    for existing views in the same master process which creates the tables itself.
    
    This wraps around TransportCreateIndexAction and TransportPutIndexTemplateAction
    to implement a check for views.

commit c7b0e8ba7ba06e5ac60070e2d11712b0fb6a8ae9
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Apr 9 10:51:26 2018 +0200

    Move table creation/modification classes into table package

commit 5ad2e68780b26d88950f87a1323e4f687f8371d4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 10 14:31:32 2018 +0200

    Update jacoco to 0.8.1
    
    0.8.1 supports Java 10

commit 0540413d174ccb9d43696dadb9d82781135b3658
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 4 16:33:01 2018 +0200

    Merge QueriedDocTable and QueriedTable
    
    There are two motivations for doing so:
    
     - Generify the analysed relation structures and bring them closer to
     the initial parser AST.
    
     - Reduce the amount of components which know about the "user" and
     "system" table difference. Ideally only a small part of the planner
     would have special logic and the relevant execution engine parts.

commit 3d4ff7edaed9d39d5e8fedf8dca3963544412415
Author: Maximilian Michels <mxm@apache.org>
Date:   Fri Apr 6 17:50:15 2018 +0200

    Check for existing views before table creation
    
    This is a safety check which fails before attempting to create a table if a
    corresponding view exists. Another check needs to be added during the table
    creation process to ensure that no race condition can occur when a view is
    created parallel with a table.

commit b7ea440e1b3a5331922dbcd2f42d3540c7d037c4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 10 11:24:43 2018 +0200

    Update to Elasticsearch 6.1.4

commit f8e8f4d63005c66be3bfa89ab41ffbd85cc47328
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 9 17:58:54 2018 +0200

    Remove unused routing property from ShardRequest

commit 42a9ff39bf082ad3a3f05f5f90e0c9260cab4ef7
Author: Maximilian Michels <mxm@apache.org>
Date:   Fri Apr 6 17:01:15 2018 +0200

    Initialize logging before accessing any loggers
    
    This ensures the logging is setup before any logging code is run. The previous
    approach to setup the log4j.configurationFile property caused log files with
    names of unset properties to show up. This change ensures that the properties
    have been set.

commit 5eea7f0f6abb198dc4af7904348e19d3678d81e8
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Apr 6 15:02:41 2018 +0200

    create schema if view was created in non-existing schema

commit 854a75c33fb0af91235bfe15a72aea30b321d87d
Merge: 28f3db8c76 ed185d5f21
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 9 13:22:46 2018 +0200

    Add privilege handling for views

commit ed185d5f21c0ede9cc4a31805fdfc85e73ab9cbd
Author: Maximilian Michels <mxm@apache.org>
Date:   Fri Apr 6 11:37:03 2018 +0200

    Add documentation for VIEW privilege class

commit bfdc49995d284864b97c72b1167b629a8e6bbb1f
Author: Maximilian Michels <mxm@apache.org>
Date:   Fri Apr 6 10:51:09 2018 +0200

    Correct statement order in privileges documentation

commit ffeb4d48940b09136b58edbe1badb7ea02615b8b
Author: Maximilian Michels <mxm@apache.org>
Date:   Fri Apr 6 11:37:24 2018 +0200

    Add CHANGES entry for view privilege class

commit bff15431908f9c472d609b158fd4e8632657dbc4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 5 15:08:18 2018 +0200

    Add an owner column to information_schema.views

commit ffd949a2f68e9e33826b52728763022bd4b02943
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 5 10:03:13 2018 +0200

    Add privilege validation for DROP VIEW

commit 5266e026d822614b9d01e0ff1d8a7cedbf319666
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed Apr 4 17:11:38 2018 +0200

    Add VIEW clazz to user privileges

commit 8edcac377626e86c3b2c0cced14e9a311f1c3925
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 4 11:30:54 2018 +0200

    Document query privilege behavior on views

commit d1f17e73ea847ae9298eee877622dd1d486dc285
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 3 17:16:29 2018 +0200

    Add privilege validation for queries on views
    
    In order to query a view a user needs to have DQL permission on the view
    itself (directly or via hierarchy). In addition the owner of the view
    needs to have DQL permission on the underlying relations.
    
    This model allows us to:
    
     - Give users the ability to query views without exposing the underyling
     tables to them.
    
     - Prevent users from granting themselves permissions to tables in a
     schema for which they lack DQL permission in case they have DQL and DDL
     permissions for another schema.
    
     - Make sure DENY and REVOKE indirectly affects all views created by the
     user who had the permissions revoked.

commit d7a79539838cda545427a6efd35c0c00a389de08
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 3 15:55:55 2018 +0200

    Introduce a dedicated view relation
    
    So far we've immediately resolved a view to its query definition,
    loosing the information that a view was involved.
    
    In order to implement privileges for views we want to keep the
    information of the view available after the analysis so that we can keep
    the current privilege check pattern (Doing the privilege check after the
    analysis based on the result)

commit 112d13d4903cfc42e21d25664a5ea6bde585143b
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Mar 30 11:14:36 2018 +0200

    store view owner in view metadata

commit a384bdff2f40a9b54e16526c861729eea786c27d
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Mar 30 10:28:02 2018 +0200

    use session user as owner for view in CREATE VIEW statement

commit 28f3db8c765b18bb6bff3821fbeb6f69f128e68b
Author: Maximilian Michels <mxm@apache.org>
Date:   Fri Apr 6 12:55:23 2018 +0200

    Verify conflict target columns in DO NOTHING clauses
    
    The conflict target was only verified for the DO UPDATE SET clause, but not for
    the DO NOTHING clause.

commit 2ef2a9788950941990f378c965443f1d4c6ad8c4
Author: Maximilian Michels <mxm@apache.org>
Date:   Fri Apr 6 12:54:25 2018 +0200

    Update SQL compliance page for ON CONFLICT

commit f8fce8722b693d3735f7fafc917fc2d706986158
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 6 17:07:10 2018 +0200

    Parallelize sqllogic runner
    
    Speeds up the logicTest task a bit: `20min → ~2min`
    
    Tried to parallize the queries within a single file first, but the
    latency of a single query is too low. It is too slow to dispatch
    enough queries to benefit from threading on that granularity.

commit d4e62e17ee068ee7c4c7aed22d0d8494a96a149c
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Apr 5 16:19:07 2018 +0100

    Extract the calculate block size logic in a separate component.

commit b85b864ed58034cb9b9c5c747c6faee2f5cfd6df
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Apr 5 15:52:55 2018 +0100

    Use "rows to be consumed" to hint the number of rows to be processed in a join

commit b6a951c7874cdb819177a377126e85abd2a417f3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 6 13:37:26 2018 +0200

    Tests: Enable some sqllogic view tests

commit 28f1506416558f2b52d59c8058e2b4da879ee2d6
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Apr 6 14:17:45 2018 +0200

    fixes integer overflow on hash join block size calculation
    
    If the available HEAP in bytes is greater then Integer.MAX_VALUE,
    casting to integer will result in a negative number due to the overflow.

commit 9d16c7aa76d629c3c26316beff48dd09da605ec5
Author: Andrei Dan <andrei@crate.io>
Date:   Fri Apr 6 10:54:52 2018 +0100

    Avoid NPE when explaining a cross join.

commit 21ec5bc3f08b7bcd33704aa1de3f17c4805b2484
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Apr 5 18:53:07 2018 +0200

    Avoid NPE when build hash is not available
    
    This closes #7129.

commit 613a4cfa2b0846cce03117ad65efbaee1dcdf335
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 5 11:38:32 2018 +0200

    Disallow creating views in read-only or blob schemas

commit f8e04f5dd773c2c839bc4c7f60dbe26445ced496
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Apr 2 08:30:31 2018 +0100

    Add support for ON CONFLICT DO NOTHING
    
    This adds support for the `ON CONFLICT DO NOTHING` clause in insert
    statements. When duplicate key conflicts are discovered, e.g. due to a primary
    key constraint, no values will be inserted and no errors will be returned.
    
    Example:
    
    ```
    CREATE TABLE t1 (id int primary key, other string);
    INSERT INTO t1 (id, other) VALUES (1, 'str');
    
    -- No values will be inserted if 1 already exits for id
    INSERT into t1 (id, other) VALUES (1, 'test') ON CONFLICT (id) DO NOTHING;
    
    -- Same statement, the conflict target (id) is optional
    INSERT into t1 (id, other) VALUES (1, 'test') ON CONFLICT DO NOTHING;
    ```

commit d3070c6bc80a3c7fcf614d8389e5fcfda21184fe
Author: Maximilian Michels <mxm@apache.org>
Date:   Fri Mar 30 12:01:42 2018 +0100

    Document ON CONFLICT DO NOTHING

commit 82003accddd742f2255d52812f2c3bd3e571fb32
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed Apr 4 18:32:42 2018 +0200

    Add additional integration test for duplicate key updates

commit 0e06aff10fe7b267ba4ca499da53a47757ad22dc
Author: Autophagy <mika@crate.io>
Date:   Thu Apr 5 10:52:09 2018 +0200

    Reflect 2.3.6 release

commit 6d781d7b1ed8dbd47918de5047f5fd9cb3553a2c
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Apr 4 19:20:00 2018 +0100

    Optimize the block hash join to account for joins with limit
    
    Unordered joins which contain the limit statement with a very low value
    compared to the default block size should use the default block size
    instead of what the node is able to handle. The node might be able to load
    the entire left table in memory in which case the block size would be the
    table row count. This resulted in creating a very large block but we were
    only interested in few results (indicated by the limit on the join statement).

commit d096464338fc1e02591dc0067d5870e3d2f34d7f
Author: Maximilian Michels <mxm@apache.org>
Date:   Tue Apr 3 15:42:15 2018 +0200

    Initialize logging with log4j2 configuration file
    
    This gets rid of the following warning message at startup by initializing the
    logging with our log4j.properties configuration file.
    
    ```
    ERROR StatusLogger No log4j2 configuration file found. Using default
    configuration: logging only errors to the console. Set system property
    'log4j2.debug' to show Log4j2 internal initialization logging.
    ```

commit 017727ba8f107f41fce89037d26f0835fa9fb233
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Apr 4 13:43:48 2018 +0200

    squashed changelog entries of information_schema changes

commit 3f999a77a3d3cfbf6a2c6e85b3a3e2d5bc935590
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Mar 29 23:06:55 2018 +0200

    updated primary key constraint of information_schema.table_constraints

commit 03c28b52cb960ce17c50baa47f9ebac8a39af08d
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Mar 29 22:45:34 2018 +0200

    updated primary key constraint of information_schema.referential_constraints

commit c4b288a05f30896db43113e9d4db9fa7ed671155
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Mar 29 22:42:25 2018 +0200

    updated primary key constraint of information_schema.table_partitions

commit d3f30dd73dccfded002f6e0d17d53b055f1fe336
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Mar 29 22:38:05 2018 +0200

    updated primary key constraint of information_schema.key_column_usage

commit 44eac4ae209f49d07ea18ebea4e557e89df3fdc5
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Mar 29 22:32:51 2018 +0200

    updated primary key constraint of information_schema.columns

commit da504848d3f1ba322a58f18dd227f4df4666b776
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Mar 29 15:12:26 2018 +0200

    updated primary key constraint of information_schema.tables

commit 364461e6bba82535c07b40e48a24bfc7d2ce88b4
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Mar 29 12:19:46 2018 +0200

    removed unused constructors in InformationTableInfo

commit 9fbd81f134e489813940c4741f4f9a424635a602
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Mar 29 12:07:06 2018 +0200

    use ColumnRegistrar in InformationTableConstraintsTableInfo

commit d17eaf980dd15b9d511dfa4abf8c8bbd34c01f0c
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Mar 29 11:57:32 2018 +0200

    use ColumnRegistrar in InformationIngestionRulesTableInfo

commit 47c2e6df010fd314535d5dac4bee81ff6885d9e2
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Mar 29 11:51:33 2018 +0200

    use ColumnRegistrar in InformationSqlFeaturesTableInfo

commit 9cdcd874ae803cab1c12dde3a1ca001f97bce3b7
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Mar 29 11:45:10 2018 +0200

    use ColumnRegistrar in InformationRoutinesTableInfo

commit 40ebe8bf0e88f9f6b408cdbf5e2dfa8ed428b1fb
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Mar 29 11:41:14 2018 +0200

    use ColumnRegistrar in InformationReferentialConstraintsTableInfo

commit b3f4b2a79f386be2a32b3ece8fc80dd4551ce40b
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Mar 29 11:36:36 2018 +0200

    use ColumnRegistrar in InformationKeyColumnUsageTableInfo

commit 11700f8e9860d46cbbff8c6abfa6dfb6e93af966
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Mar 29 08:36:58 2018 +0200

    use ColumnRegistrar in InformationColumnsTableInfo

commit 21d6c157287f92fe8d9cf55bf2b4905896b8e5df
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Mar 29 08:18:14 2018 +0200

    use ColumnRegistrar in InformationSchemataTableInfo

commit 7e879d4749ed062990455d9291b27e191cbe4838
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Mar 28 09:59:45 2018 +0200

    use ColumnRegistrar in InformationPartitionsTableInfo

commit eb538d9997f3afd78166fcd6a21e86d2cbfcf4af
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Mar 28 08:58:26 2018 +0200

    use ColumnRegistrar in InformationTablesTableInfo
    
    to build columns and reference map

commit 934cfc62a61419c46ef7bf58a3871b1fd3dcdaed
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Apr 4 09:48:43 2018 +0200

    fixed logrotate filename pattern in log4j2.properties

commit 29889ac5ea4361bf325ab7360a2a9857ebd926c9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 3 11:57:42 2018 +0200

    Add privilege validation for CREATE VIEW

commit 9d82ebbab57ea953afcecab9a91b66c693750633
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 29 12:28:32 2018 +0200

    Rename TableIdent → RelationName
    
    Should fit bettter since it is now being used for views as well.

commit e055e6e07467acee6f6f518deba0316f0586fb43
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 29 15:50:04 2018 +0200

    Remove some unused declarations

commit 820cb9d76341f60d4709a991040c7eacb1e1556b
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Mar 28 19:02:27 2018 +0200

    Fixed WHERE pushDown through tryOptimize().
    
    Regression caused by b0f602c800d66ea501f422d7b246bd0438d5cc95.

commit 293f2ba0a5aa146345664c001888761b44ee9b2f
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed Mar 28 13:41:33 2018 +0200

    Update documentation to include conflict_target

commit 384efbf5a449499f14da682cf6ef028f6924b7fe
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed Mar 28 14:06:18 2018 +0200

    Implement conflict_target for ON CONFLICT clause in INSERT
    
    The conflict_target specifies the columns which are part of a primary key
    constraint. According to the PostgreSQL INSERT syntax, specifying the
    conflict_target is mandatory.
    
    https://www.postgresql.org/docs/9.5/static/sql-insert.html

commit 47960ab4aad9650ba0bce7b8d1941451776c3782
Merge: 08befffcad 2232fdaa1a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 29 11:25:20 2018 +0200

    Merge basic simple view support

commit 2232fdaa1ae06e8ffcfc831783d28cb966937c79
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Mar 28 15:46:18 2018 +0200

    removed views from list of unsupported features

commit 27deb722ad5d206db96a59359a5cbc7ab9cc2cb3
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Mar 28 12:22:16 2018 +0200

    fixup: show not-analyzable views in information schema

commit 6c64c47045d75c485907636d166522e5434d522b
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Mar 28 08:22:57 2018 +0200

    updated sql features list

commit fb92bf10358819d48a72bee478ab9238b5424fca
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 27 17:05:01 2018 +0200

    Add changes entry for view support

commit f4a5189fec37a537724e6aeaff66a517cd2cff2e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 27 14:02:12 2018 +0200

    Validate view name in CREATE VIEW

commit caf7d03d4b6320e3476492a80b140b2381787fb1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 27 10:53:17 2018 +0200

    Add round-trip format/analyse validation to create view

commit 178c8d2f69eb6db8d62eb2c90a7a1177948ed8bb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 27 11:42:17 2018 +0200

    Adapt show tables to exclude views

commit 91c6aea0d3f6627b0bd4d7d6eb2029892fbb79f3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 27 11:00:50 2018 +0200

    Make sure view name conflict detection works with partitioned tables

commit e2b797f7f43532da0eb0d9e19202a70b4365a518
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 27 12:16:29 2018 +0200

    Add more view documentation

commit 449478a3ac7a31d9db74f29250d7a16c8c7a494b
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Mar 27 08:03:29 2018 +0200

    added note about dropping views in documentation

commit a2151f4380c55c4a8759b0ee0c822d2c2cb71965
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 26 17:25:40 2018 +0200

    Add CREATE and DROP VIEW reference docs

commit 80e0e815a96f151ebf2f8f2335d8f1e4142fd51e
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Mar 22 17:24:11 2018 +0100

    added information_schema.views system table

commit ec9a9cd557d4e987c082f677dd8231856b51c5a7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 20 16:00:14 2018 +0100

    Add support for view resolving to the RelationAnalyzer

commit 69dd6c13a71f669d8404d0615fea259222af829d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 21 14:14:16 2018 +0100

    Fix table function formatting in SQLPrinter

commit db48a3596b7172db9740ab13a3bc5c040a31f56a
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Sun Mar 25 15:22:17 2018 +0200

    extracted RelationInfo from TableInfo and use it as base for ViewInfo

commit 452d5e0288d4bdf080068a21ce705255784204d9
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Mar 21 15:15:06 2018 +0100

    expose view information in information_schema.tables/columns

commit 641eedffa0da17c3aa1a05dccfe797e122dcc5f3
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Mar 22 11:57:44 2018 +0100

    removed unused Views class

commit eda7f45218997404a651456e170b982bfd692f61
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 20 14:49:57 2018 +0100

    Add DROP VIEW support to the planner and executor

commit eb4f7cd1dccb60a1efe76a149c90709dab28a436
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 20 14:09:24 2018 +0100

    Add analyzer support for DROP VIEW

commit d943ab4084e73a63b4e61048fa55e15118b2b5b7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 20 13:55:42 2018 +0100

    Add parser support for DROP VIEW

commit bbea08bbeb0bb07d5114b9becf293758307f4589
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 15 15:52:23 2018 +0100

    Add analyzer, planner and executor support for CREATE VIEW

commit bd8b049f2ea679ed33a6e559ad1fa492d33b07c7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 16 11:26:59 2018 +0100

    Add a SQLPrinter to format AnalyzedRelation as String

commit c214b8c147616abd14fd851f26bbf13eb8285cae
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 15 15:26:39 2018 +0100

    Add parser support for CREATE VIEW

commit cd977fad28bdaf401528dd90c3bf0ace7423ac62
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Mar 19 13:26:21 2018 +0100

    added custom metadata for views
    
    The ViewsMetaData contains the full qualified view name and the analyzed
    SELECT statement as string. For simpler extensibility of the XContent the
    view properties are stored as an OBJECT with the view name as the key of
    that object.
    
    Example:
    
    ```json
    {
      "views": {
        "doc.myview": {
          "stmt": "SELECT a FROM t1 WHERE b = 1"
        }
      }
    }
    ```

commit 08befffcad3a5522bb06df47bb90057e69bc2b4f
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Mar 28 13:47:20 2018 +0200

    Added test to avoid future regressions.
    
    Relates to: https://github.com/crate/crate/pull/7110

commit 867491d3cb89fc7bba8dc905ecd179a000553249
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 28 11:52:40 2018 +0200

    Support running bootstrap.sh from project root

commit 66988c1f4f48d87bad327ed4327fb68a95146fb4
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon Mar 19 20:42:58 2018 +0100

    update requirements.txt for docs

commit 7fd33088ebc43fb3ab9e5bcc132d0f54078b87b0
Author: Maximilian Michels <mxm@apache.org>
Date:   Tue Mar 27 11:46:04 2018 +0200

    Add ON CONFLICT DO UPDATE SET clause to INSERT synopsis

commit 9d3bae22d2a683e0b22627cdd058d9ca13e9aa24
Author: Maximilian Michels <mxm@apache.org>
Date:   Tue Mar 27 11:29:30 2018 +0200

    Deprecate the ON DUPLICATE KEY UPDATE clause

commit afe0a4690eeee62c9c5494e46381186a153ea0ba
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 27 14:06:33 2018 +0200

    Rename InvalidTableNameException → InvalidRelationName
    
    To be able to use the exception also for view name validation.

commit dd74441fffad332b966364230f13b5e9e6e35b99
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 26 15:58:09 2018 +0200

    Make type guessing for arrays more lenient
    
    Some JSON libraries encode `[ 0.0, 1.2 ]` as `[ 0, 1.2 ]` which resulted
    in a `Mixed dataTypes inside a list are not supported` error.
    
    This changes the logic to be a bit more lenient and allow casts that are
    known to be safe and not cause runtime errors.
    
    Closes https://github.com/crate/crate/issues/7067

commit a61f9a189f596524ef75472e01137fafe085201e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 26 22:09:28 2018 +0200

    Remove querySpec property access where not required

commit 454d0d4190d9ff64a3581f2d4d0b1870b6d111f3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 23 19:28:42 2018 +0100

    Remove QuerySpec#replace

commit 54ddc1b19c8d132f3038b42ee82a6bf3938004bb
Author: Maximilian Michels <mxm@apache.org>
Date:   Fri Mar 23 18:59:33 2018 +0100

    Document ON CONFLICT DO UPDATE SET

commit 86c597d987fb42afb32964570a7d75683999db1e
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Mar 22 10:51:50 2018 +0100

    Add support for ON CONFLICT DO UPDATE SET with EXCLUDED table
    
    This adds support for insert queries containing ON CONFLICT DO UPDATE SET
    expressions with EXCLUDED table references. Tests verify identical semantics as
    the ON DUPLICATE KEY statement.
    
    Examples:
    
    ```
    CREATE TABLE t1 (id int primary key, other string);
    INSERT INTO t1 (id, other) values (id, 'str');
    
    -- Set other to 'backing up' on duplicate key 1
    INSERT into t1 (id, other) VALUES (1, 'test')
      ON CONFLICT DO UPDATE SET other = 'backing up';
    
    -- which is identical to
    INSERT into t1 (id, other) VALUES (1, 'test')
      ON DUPLICATE KEY UPDATE other = 'backing up';
    
    -- Overwrite other with 'test'
    INSERT into t1 (id, other) VALUES (1, 'test')
      ON CONFLICT DO UPDATE SET other = excluded.other;
    
    -- which is identical to
    INSERT into t1 (id, other) VALUES (1, 'test')
      ON DUPLICATE KEY SET other = values(other);
    ```

commit 12b7aec83d64c0a42e32111dcbeb00c577504f5e
Author: Maximilian Michels <mxm@apache.org>
Date:   Fri Mar 23 11:04:41 2018 +0100

    Remove test only resolveField method from FieldResolver

commit af3649593b89b2d882aecda6914b07f2175f879a
Author: Maximilian Michels <mxm@apache.org>
Date:   Fri Mar 23 10:54:05 2018 +0100

    Add missing @Override annotation

commit 4a7d824d1c88610e60ab96863e1bfda34dde6219
Author: Maximilian Michels <mxm@apache.org>
Date:   Tue Mar 20 18:33:25 2018 +0100

    Add parser support for INSERT with ON CONFLICT
    
    This adds parser support for
    ```
    INSERT INTO ... ON CONFLICT DO NOTHING
    INSERT INTO ... ON CONFLICT DO UPDATE SET col = expr[, ...]
    ```
    
    The first statement throws an exception until implemented.
    
    The second statement behaves just like
    ```
    INSERT INTO ... ON DUPLICATE KEY UPDATE col = expr[, ...]
    ```

commit ea92cd57ff1616ec200f00ee36362513f24429b3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 23 14:33:04 2018 +0100

    Implement tryOptimize for Filter operators
    
    This allows two subsequent filters to be merged and enables the
    `Collect` operator to merge a parent filter into its `WhereClause`

commit a17d1179cf9bdc7557ee60da5fb7a288a2b1d1ff
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 22 15:53:06 2018 +0100

    Remove SubselectRewriter
    
    The way the `LogicalPlanner` works we end up getting similar or the same
    execution plans without having the `SubselectRewriter` doing its
    collapsing logic.
    
    There are two reasons to remove the `SubselectRewriter`:
    
     - It currently relies a lot on the `QuerySpec` and the ability to
     mutate it freely. This mutation is problematic because we've no means
     in place to safe-guard invariants - for example that the fields of a
     relation must match the outputs of a `QuerySpec`.
    
     - The analyzer shouldn't be doing optimizations, even if they're always
     applicable. We've already a infrastructure in the Planner to optimize
     plans and should use that instead.
    
    This commit introduces a performance regression affecting JOINS
    involving subqueries as the `WHERE` clause push-down, no longer happens
    in all cases in the same way. There will be a follow-up to re-add this
    using the `LogicalPlan#tryOptimize` functionality.

commit ca24114153734c0a12e3b3452eae5b44a8d8295b
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Mar 26 13:19:12 2018 +0200

    do not allow renaming  a table when connected to a read-only node
    
    fixes #7068

commit d5e0d35b1d948d666615801ad239142626dfef6c
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Mar 23 17:13:58 2018 +0100

    Fixed: DEALLOCATE gets stuck when explicitely issued through HTTP.
    
    Followup of: 30773e7c9738170dd2dcb3418634129a87e1b58b

commit 56f2e854079bc8ed4ee4318c5db9f7d7831cd553
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Mar 23 15:49:53 2018 +0100

    Fixed ClassCastException in describe() of BatchPortal.
    
    The issue was discovered by new crate-qa test:
    https://github.com/crate/crate-qa/pull/51/files#diff-4ebb99449d934c2947c0fbc26ced5d93

commit 7fcf8bb1d9b06b17e86799a68ee548c4e17cf5fa
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Fri Mar 23 17:57:16 2018 +0100

    fix formatting for 2.3.5 release note

commit 6072de2f9c580ce707c06020add60b8477bcba5d
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Thu Mar 22 18:43:26 2018 +0100

    turn release notes header paras into a NOTE section

commit e42a78dddf90c957fa1df373dad3b2cabb54d88d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 23 14:52:00 2018 +0100

    Replace queryClause with query in Filter operator
    
    This will make it easier to merge Filter operators as we won't have a
    HavingClause/WhereClause mixture.

commit 5b608408a338af183281e8fc3d0b2388dee44d0f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 23 10:11:22 2018 +0100

    Print QueriedSelectRelation with alias if available

commit bbb418cfd344057fc331cd3dbc490473dc0f9e18
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 22 14:24:21 2018 +0100

    Remove visitSymbols from QuerySpec
    
    QueriedRelation#visitSymbols should be used instead.

commit d650b6ba763d7b0f5133c6a0c729ed4c04c784db
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 22 14:02:41 2018 +0100

    Remove castOutputs from QuerySpec
    
    This removes the casts from the analyzer and instead injects a
    projection with casts in the planner.
    
    Doing the casts in the planner has the advantage that we only need to
    cast the outputs and don't have to adopt the group keys or order by
    items.
    
    Main motivation of this change is to to reduce the usage of the
    `QuerySpec` to eventually get rid of it.

commit 9e790bf67fe14de9eef7a7f87639ea273a89351c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 22 13:26:19 2018 +0100

    Correct outputs of Insert operator
    
    The outputs of insert is the row-count, not the outputs of the subquery.

commit 103472de3fc26057a73e434eeacd99be1d8fbf4c
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Mar 21 18:05:31 2018 +0100

    Added documentation for DEALLOCATE statement

commit 30773e7c9738170dd2dcb3418634129a87e1b58b
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Mar 20 17:43:18 2018 +0100

    Implement execution of DEALLOCATE statement

commit 9e4d7f0d3121d8a34b6c330eabd36f1f0ca73a24
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Mar 19 15:27:36 2018 +0100

    Implement Analysis for DEALLOCATE statement

commit 965044bda8d2c80fa90bb89adf6b25aa8a4bf13e
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Sun Mar 18 19:50:29 2018 +0100

    Implement parsing of DEALLOCATE statement

commit 8dabbfd0cbf5ba342fb9b580c73c6286915730a8
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Mar 22 13:35:43 2018 +0100

    return NULL for undefined columns of non-sharded tables
    
    in information_schema.tables
    
    affected columns are:
    
    - number_of_shards
    - number_of_replicas
    - self_referencing_column_name

commit 895846c519f15a62ab5dd834bb4c2ec25991c156
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Mar 22 10:09:20 2018 +0000

    Amend comment with further clarification.

commit e416ce132b287dd2966ddcd4e482deb4648efcfd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 19 17:54:32 2018 +0100

    Add FormatSpec to CountAggregation for proper symbol formatting
    
    Instead of printing it as `count()` it will now be printed as `count(*)`
    
    This is in preparation for `CREATE VIEW` for which we need to be able to
    convert an `AnalyzedStatement` into a `String` that can be parsed again.

commit fbfc9fe2d5830da4b7be42c00d4a877a63860254
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Mar 21 15:40:25 2018 +0000

    Fix the job log test by waiting for what we expect to be in the log to be there.

commit 99ffbdfbe849d72550d7a899625a3b733a49cce0
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Mar 21 16:24:33 2018 +0100

    Fixed leaking portal & prepStatement entries on Session.close()

commit 542babef5aa7668daf78b031aba781d2b1417942
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Mar 21 08:24:49 2018 +0100

    removed Iterable interface from SchemaInfo and use getTables() instead
    
    This change has been done in preparation for views, where the SchemaInfo
    may also provide a list of views, not only tables.

commit 1ae396a0fdba1f208b5aa14a7236e4cf863946f8
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Mar 20 16:54:15 2018 +0100

    reflect release 2.3.5

commit 872934273cf298f74e3b8056348774a697d39687
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 21 09:58:22 2018 +0100

    Adapt process_test to ignore RelationUnknown
    
    Follow up to 435599c789ecb6a7c6823be33740509a235bf84b

commit 122b7fd5e5dcbc2c52fca1162c45131ae40ea499
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Mar 20 17:39:03 2018 +0100

    Make NoopPlan singleton and avoid instantiations

commit 435599c789ecb6a7c6823be33740509a235bf84b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 20 17:23:26 2018 +0100

    Merge TableUnknownException and RelationUnknownException
    
    With the introduction of views we'll no longer be able to tell for sure
    if a relation that's not resolvable is a missing table. This commit
    therefore replaces `TableUnknownException` with a more neutral
    `RelationUnknown` error.

commit 427a063a4144dee3368d42ae45f1d89314157443
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Mar 20 11:44:26 2018 +0000

    Fix @UseJdbc to work with tests annotated with @Repeat as well.

commit f5a1e3a3a6b3f434071e16c947155615d6dd0b9c
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Mar 20 11:37:54 2018 +0000

    Identify test annotations for test methods annotated with @Repeat

commit e93b7528805ef69ad197d1816b06b53326197ee1
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Tue Mar 20 12:26:05 2018 +0100

    upgrade admin-ui to 1.9.0

commit ed2334a85c34bf9afa5f8e5b8be4b6ba86785584
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Mon Mar 19 15:59:46 2018 +0100

    upgrade admin-ui to 1.8.4

commit 22cf52ff8ba9320ce8332877877f88f189cdd0ba
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Mar 20 09:19:38 2018 +0000

    Track the TIMESTAMP, BYTE and SHORT types in the sorting visitor.
    
    Ordering by a scalar that returned ``timestamp`` would fail and cause the
    query to get stuck because we were not expecting a timestamp type in the
    order by.
    This commit also adds the ``byte`` and ``short`` types in case we'll add
    scalars that return these types.

commit 59b410318f5d56c12f1607c0ee3208958122823e
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Mar 19 14:01:39 2018 +0100

    Fix NPE for SHOW CREATE TABLE with plain type index
    
    This affects table indices defined like the following:
    ```
    CREATE table t1 (f1 string, f2 string, INDEX bla using plain(f1,f2));
    ```
    
    The `SHOW CREATE TABLE t1` would throw a NullPointerException.

commit 3bfaa775076053b69b535515ede427d61da6509a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 19 17:06:22 2018 +0100

    Make attributes in Field final

commit 8942af2770861d461d8287801c62a74dbccb712d
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Mar 19 15:16:33 2018 +0000

    Avoid NullPointerException in the InputFieldComparator which could stuck queries.
    
    For STRING columns null is a valid missing value, but we had a null check in
    place for missingValue with caused a NPE.

commit 5761f7b95424d57615c29004040975fb8fe46c5d
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Mar 19 14:28:37 2018 +0000

    Move order by integration tests to dedicated class.

commit 06d7200d4d5d72f617df095b265235f1be24d275
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 16 15:46:51 2018 +0100

    Hide overloaded SymbolPrinter#print
    
    We already expose `printQualified` and `printUnqualified`. Those cover
    all functionality.

commit dc6a66c4f66037cd3e6c610be7f55ed0b4f396fa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 16 13:56:34 2018 +0100

    Remove maxDepth handling from SymbolPrinter
    
    We should be able to print anything that we were able to parse, so there
    is no reason to have an artifical limitation in the `SymbolPrinter`.

commit 09294a2098739f4cf47985592a03219511d23a3c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 16 11:40:19 2018 +0100

    Rename SIMPLE_FUNCTION_FORMAT_SPEC → NAME_PARENTHESISED_ARGS

commit 9ae5b49dcdefbc914fd9e789d817ee9f88dad1b0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 16 11:30:13 2018 +0100

    Remove FUNCTION from SymbolPrinter
    
     - Still used guava instead of jdk `Function`
     - Only 1 usage
     - The name `FUNCTION` was bad; it didn't convey the information which
     print style is used.

commit 89704e21bb2b6bf47145b1d7750cd91bf6155bd5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 15 11:45:35 2018 +0100

    Extend the github issue template

commit b74b132ab30e9f6fcd48c84bda5d2bc7bee2bf02
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 15 15:54:49 2018 +0100

    Rename TableAlreadyExistsException -> RelationAlreadyExists
    
    So we can re-use the exception for views.

commit c6904d21d502c28d85f968a91648fb6e99790033
Author: Emily Woods <emily@crate.io>
Date:   Thu Mar 15 08:39:28 2018 +0100

    Change string literal in sys.allocations explanations to use 'alter cluster' instead of es api

commit fe994ff1a1d0a5df1958b8a8f0e7a0faf204d8f7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 15 11:30:21 2018 +0100

    Remove explicit UseParNewGC JVM flag
    
     - The parallel new collector is enabled automatically if the CMS
     collector is enabled
     - `UseParNewGC` was deprecated in JDK8, produces a warning in JDK9 and
     has been removed in JDK10

commit 36b99f606da5cdfa048b5b292a05dd2143d9e9fa
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Mar 15 09:25:02 2018 +0100

    Implement constraint_schema and table_schema in key_column_usage table correctly
    
    Up to now these columns returned always "public", but now they correctly
    refer to the table_schema colum.

commit 480a3c1db9cb137186057a822d6fd5dfcc8f0d1e
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Mar 14 14:55:52 2018 +0000

    Track memory usage for ordered queries.
    
    Ordered queries were not recording the used memory against any circuit
    breaker. This commits wraps the BatchIterators we create for ordered
    queries within a `RamAccountingPageIterator`.

commit 2b42fb2db236516cbfa9863a155622cf75a4d0f5
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Mar 13 16:21:24 2018 +0000

    Allow for custom key type when createing PagingIterators.

commit 4c350edf995fb428e313fe491a97ce7c806e3055
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 14 14:22:55 2018 +0100

    Tests: Disable jacoco if running on Java10+
    
    See https://github.com/jacoco/jacoco/issues/629

commit 9307a85cc439d12b839b2831285fe4a8b776a3f7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 14 11:25:09 2018 +0100

    Make sure queries using push execution do not get stuck if a context is missing
    
    A distributed group by query, or a query using paging could get stuck if
    for some reason the context for the distributed merge is missing.
    
    With this commit a kill is now invoked if the context was not found to
    make sure all resources are released.
    
    If the context wasn't found due to a previous kill, the second kill is a
    simple no-op.

commit 35ba4de13797f8b205b19e387e163836482ce917
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 14 10:45:47 2018 +0100

    Increase max retry delay on missing downstream job context
    
    This increases the max retry delay from about 420ms to 5.1sec. `420ms`
    can be quite low, especially if there is a lot of GC load on a node or
    in case of a cluster that is operated over multiple network zones.
    
    Ideally we'd eliminate the race condition, but that will probably
    require streaming changes.

commit 717dd9d1bc95eaf6df47a24ebbf0c0550004cdf4
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed Mar 14 01:15:42 2018 +0100

    fix name of macOS

commit ee64b2c7f9464dd6447003b83efd8958f07bb523
Author: Yakov Zaytsev <me@ysz.io>
Date:   Mon Mar 5 15:50:19 2018 +0300

    fix gradle :blackbox:bootstrap on macOS

commit 8d8cd3b55b7e911115e7a9aa871a262eee40533f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 12 16:58:21 2018 +0100

    Tests: Fix statement logging on timeout

commit c9ec537c8c1cce403541b8c793db5f424da20fa7
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Mar 12 17:03:09 2018 +0100

    Tests: Fix flakiness of testJobLogWithEnabledAndDisabledStats.
    
    Added assertBusy validations to make sure that changes issued by
    `SET` stmts are applied on both nodes of the cluster.
    
    Follow up to: 521414b6778d3e0f2f012e3afb2209f20e240cfd

commit 86fb8cd1c09cd781fe55d2211e48ebe6edc655d3
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Mar 12 16:07:46 2018 +0100

    Tests: Fixed ElasticsearchTimeoutException flakiness.
    
    Previously we started 2 nodes (one with enterprise disabled and one with enabled) manually
    but on top of the random number of nodes started since we didn't use any ``@ClusterScope`` configuration.
    As a result some times a high number of nodes were bootstrapped which caused the Timeout because of the time
    spent to retrieve the jobs from all nodes.
    
    Fixed by adding the ``@ClusterScope`` annotation and restricting the test to 2 nodes, and also
    manipulate the settings by overriding the ``nodeSettings()`` bootstrap method.

commit eeaa7d76b4bc8bf432645a5e4c2df39264645471
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 12 11:07:17 2018 +0100

    Fix a NPE in IpColumnReference
    
    Fixes a regression introduced by the ES 6.0 upgrade.

commit 1c0ddbaa3564f1144c7892f66a5801af07f811e7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 8 16:29:52 2018 +0100

    Wait for clusterState changes before invoking retries
    
    This commit makes sure that we wait for the clusterState to have changed
    before invoking a retry. This should reduce the chance for the retry to
    fail again, which is likely the case if it used the same cluster state
    again to calculate the routing.

commit 6a4e6516e59fafacc140ec68c2d4e2921a436c2f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 8 15:49:29 2018 +0100

    Tests: Extend graceful shutdown test to run more queries

commit 373621954a95c6280e229eb5cdeb0d42747bc41c
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Mar 7 14:44:58 2018 +0100

    Tests: Replace old log4j.properties with log4j2.properties

commit d86140f27bc6c0a57a0ccc40049eacf7745134b5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 7 13:52:24 2018 +0100

    Make sure sys.health returns RED if the cluster is not functional
    
    Querying `sys.health` could either fail with a
    `NodeDisconnectedException` or run into a timeout if the cluster is not
    functional. This commit adds a fallback mechanism that makes sure the
    table entries are returned, but are marked as unhealthy.

commit 47a58463356307771c8da3963370fc14da6f6d27
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 7 10:11:50 2018 +0100

    Fix some typos in the documentation

commit f8948e5b19ceb1e50c45ccb3bcb8b110186d021c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 6 22:22:26 2018 +0100

    Respect $JAVA_HOME on version check for GC logging
    
    `bin/crate` uses `$JAVA_HOME/bin/java` if it exists to launch crate, so
    we also have to use that java to do the version check to determine the
    GC logging options.

commit 027acd39e80f54c354fb9e77ef917f6982e5b630
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 6 11:31:37 2018 +0100

    Do not fail sys.checks queries if the table upgrade check fails
    
    If the cluster drops below `discovery.zen.minimum_master_nodes`, the
    `TablesNeedUpgradeSysCheck` failed because it tries to execute a query
    that targets nodes which are no longer reachable. (because the cluster state is no
    longer updated).
    
    This caused the whole `sys.checks` query to fail which is not nice.

commit e5a797eba2866cc1c35dcd3c3c0c4a6441cb549c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 6 11:06:48 2018 +0100

    Use local state to determine cluster state on HTTP /
    
    If the number of nodes in a cluster drops below
    `discovery.zen.minimum_master_nodes` the cluster state is no longer
    being updated, so the state will keep containing nodes which are no
    longer reachable.
    
    This caused requesting `/` to run into a timeout. This changes the
    internal cluster state retrieval to use the local state to immediately
    respond with 503 in such a case.

commit 521414b6778d3e0f2f012e3afb2209f20e240cfd
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Mar 6 14:24:19 2018 +0100

    Tests: Make testJobLogWithEnabledAndDisabledStats deterministic.
    
    Follow up to: 60460c4cb30f83bdff69388688324e3ab3401395

commit 261287df99803cfe9f7794e534128665992e5435
Author: Autophagy <mika@crate.io>
Date:   Tue Mar 6 14:05:58 2018 +0100

    Reflect 2.3.4 release

commit 6e35eeb7010f78836167ec2428ffe8b48b947a54
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Mar 6 12:18:12 2018 +0100

    Upgrade gradle to 4.6

commit 6710eee8e612c46c9c8c7e2dfb78dd0318186d7a
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Tue Mar 6 11:08:48 2018 +0100

    updated the admin-ui to 1.8.3

commit 4186569947584d71d6bf8afab8df97bfdd81e5ea
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Mar 5 15:16:37 2018 +0000

    If the source/target is convertible to the other, attempt the implicit cast.

commit 032d80111b7a21373eaa9f750984181913323e43
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Mar 5 14:40:00 2018 +0100

    Added test to avoid future regressions on WhereClause analysis.
    
    Check https://github.com/crate/crate/pull/6994 for further info.

commit 765a3c1706362533f5b0186448d2fd2be63354d8
Author: Autophagy <mika@crate.io>
Date:   Mon Mar 5 14:26:24 2018 +0100

    Fixed install script java version parsing command

commit d858f75179bc692515e248a52bfa3c98a90ac823
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Mar 1 11:54:01 2018 +0100

    Optimize HashJoin execution by switching sides of relations.
    
    After benchmarking we concluded that the smaller table should be on the right side
    of the hash join. In case the left table is loaded into memory in blocks then the right side
    is repeated, therefore is better to be the smaller one. In case the left table fits into one block
    and there is no repetition of the right one then the benchmarks showed that performance is slightly
    better if smaller table is on the left side, but the difference is minimal.
    
    So as a conclusion we switch tables when building the execution
    plan to ensure that the smaller table is on the right side.

commit 4cecb8fa42aaa4255f7dfe9d6100383462a1936f
Author: Michael Beer <michael@crate.io>
Date:   Fri Mar 2 15:08:16 2018 +0100

    fixed incorrect filtering of enterprise jars when assemble
    
    Filecollections need to be filtered by using a JDK path that inserts the
    correct file path separator on Unix and Windows platforms.
    Previously this issue caused a jar hell issue if Crate is build and
    assembled on Windows platforms.

commit f0102b1fc07ed1385a6166f262ce015f4eecebf7
Author: Autophagy <mika@crate.io>
Date:   Wed Feb 28 16:43:45 2018 +0100

    Fix NPE when trying to reroute a shard to/from a non-data discovery node

commit aaea8ac058017bd82c05c6b5526b503179da9d8e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 1 17:17:05 2018 +0100

    Fix order by push down for joins
    
    The `Order` operators `tryOptimize` implementation was specific to
    `UNION` and didn't work in the case of JOINS where the outputs of the
    new source are different from the outputs of the old source.
    
    For example, here is how it works for Union:
    
        select x from t1
        union all
        select y from t2
        order by x
    
        --------
    
        ORDER [U.x]
        UNION
            COLLECT [t1 | x]
            --
            COLLECT [t2 | y]
    
        tryOptimize -->
    
        UNION
            ORDER [x]
            COLLECT [t1 | x]
            --
            ORDER [y]
            COLLECT [t2 | y]
    
    The logic how this symbol mapping takes place (`U.x -> y` in the example
    above) was implemented in the `Order` operator, but that logic is
    specific to `Union`. In a `Join`, the mapping must be different:
    
        ORDER [t2.x]
        JOIN [t1.x, t2.x]
            COLLECT [t1 | x]
            --
            COLLECT [t2 | x]
    
        tryOptimize -->
    
        JOIN [t1.x, t2.x]
            COLLECT [t1 | x]
            --
            ORDER [x]
            Collect [t2 | x]
    
    Here the mapping is `t2.x -> x (Field -> Reference)`.
    
    In order to fix this, this commit moves the mapping logic into a
    separate function that can be passed as argument to `tryOptimize`, so
    that each parent operator can pass different implementation to its
    children.

commit 9bdd878aebc1a7d824a1b10ba6133f91b97bbed4
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Mar 1 23:30:54 2018 +0100

    fixed java version parsing for windows batch file
    
    to fix garbage collection logging

commit 344d39700d2ecbe61e34dbfda6c11011cd974a90
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Mar 1 21:33:49 2018 +0100

    fixed java version parsing in start script
    
    The output of `java -version` changed from Java 8 to Java 9, so we need
    to parse the version string differently.
    
    Example from Debian:
    
    ```console
    $ /usr/lib/jvm/java-9-openjdk-amd64/bin/java -version
    openjdk version "9.0.1"
    OpenJDK Runtime Environment (build 9.0.1+11-Debian-1)
    OpenJDK 64-Bit Server VM (build 9.0.1+11-Debian-1, mixed mode)
    $ /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/java -version
    openjdk version "1.8.0_151"
    OpenJDK Runtime Environment (build 1.8.0_151-8u151-b12-1-b12)
    OpenJDK 64-Bit Server VM (build 25.151-b12, mixed mode)
    ```

commit 94a7106ff1a52f2d3cfe81aa075bef262a67a278
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Feb 27 11:47:33 2018 +0000

    Enable hash-join by default and document it.

commit 6a25ff92a27ffdfc2bbe77875abfdf1d0a527d6f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 28 11:20:30 2018 +0100

    Add http.cors settings to sandbox crate.yml
    
    So that the instance started from within intellij can be used with a
    development instance of the admin-ui.

commit 4f5384f9718c257c90dbeb305b0e20db6387b7a5
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Feb 28 12:48:40 2018 +0100

    mentions prometheus as an usage example of the JMX HTTP exporter

commit 8d7b13486af94842341200fb857aed61c102a00c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 28 10:50:10 2018 +0100

    Fix graceful stop tests
    
    Broke with 906afa147fc7216ae29a358dca58d2c361090761

commit c62135ac0f0b6e433af5df66ef7e3ceb4c80780b
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Feb 28 11:24:51 2018 +0100

    adds health definition documentation of `sys.health`

commit 1a2eaf348e6d307a6422cc44a2aacb292b8bde39
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Feb 26 09:06:43 2018 +0000

    Dynamically calculate blocksize based on the estimated row size and available heap.

commit bf693d5376fca83f9ec55cb76f72fd7d759384d8
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Feb 22 15:13:59 2018 +0000

    RamAccountingContext.release substracts from the breaker what this context added so far.

commit 41238cd1c85e006b021acda7fb9ca2201b2b19b7
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Feb 22 14:01:19 2018 +0000

    Moved HashInnerJoinBatchIterator to the sql module

commit d8de146011a56e6ec6a0db88305bae866739f6b3
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Feb 22 12:17:10 2018 +0100

    Use UnsafeArrayRow to avoid copying the already materialized row

commit 72e06e5b93f828aa2fa52d04d9e5b767511e3efb
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Feb 22 11:07:10 2018 +0000

    Unit test different block sizes

commit eb243b83cd8861c97e6301ce81dfa99524db8388
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Feb 21 11:49:36 2018 +0000

    Converted HashInnerJoinBatchIterator to implement the block hash join algorithm.

commit 2e495712251a4712423bcca3ab877abf35368ce0
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Feb 21 11:43:15 2018 +0000

    Moved Paging to dex/data and removed depedencies on execution.

commit 906afa147fc7216ae29a358dca58d2c361090761
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 27 14:29:44 2018 +0100

    Rename _node → node on sys.operations and sys.shards
    
    We reserve the `_` prefix for system columns, since `node` is now
    handled as a regular column it doesn't fit anymore.

commit 8016cb2166cc380dbc0a6a3ba1eeb1d7cdb80bf2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 27 16:14:38 2018 +0100

    Set HeapDumpOnOutOfMemoryError by default

commit 2d6d871043970958dfb9afe20a32b2563fe39124
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Feb 27 13:33:41 2018 +0100

    implements new `sys.health` table
    
    this table exposes health information of every table and partition

commit 6f526246927b1b1e8471f1acdb901addbc2e7803
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Feb 27 10:35:43 2018 +0100

    Updated garbage collection JVM options for Java 9

commit ad8906296d8ab0675bf02be6f0e0e323c6b1cdbe
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 27 11:15:06 2018 +0100

    Make sure the session is closed in http
    
    This is mostly for completness/correctness, it's currently a non-issue
    as the session will be garbage collected anyway and there are no global
    resources being hold onto.

commit fe828d99def72420bcd20eae5f8d99abc06d5783
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 26 14:50:33 2018 +0100

    Change _node on sys.shards to only include name and id
    
    This also makes it visible by default (`select * from sys.shards` will
    include it)
    
    This allows us to remove a lot of duplicated expression code and avoid a
    second normalization step.
    
    `id` is being included so that users still have the possibility to join
    with `sys.nodes`. `name` is included because it's the most useful
    property for diagnostics.

commit 92c6456aa1531a0aff9d128d560529bbbc8000e8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Feb 25 16:17:16 2018 +0100

    Change _node on sys.operations to only include name and id

commit 4604220f54274409657ecf7de8757a49962be897
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Sun Feb 25 21:21:28 2018 +0100

    Refactored EXTRACT function implementation
    
    EXTRACT functions may return different data types depeding on their
    field value, e.g. EPOCH returns DOUBLE whereas others return INTEGER.
    
    In order to resolve the EXTRACT function already in the analysis we
    cannot allow a parameter expression in the field argument.
    
    Fortunatelly, parameter expression as field argument was never
    documented. The documentation now clarifies that only string literals
    and identifiers are allowed for the field.

commit 60460c4cb30f83bdff69388688324e3ab3401395
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 26 17:46:30 2018 +0100

    Tests: Make testJobLogWithEnabledAndDisabledStats deterministic
    
    Follow up to 63fe701491643fff24629fa7a657949b45113c4c

commit 09739e0d8716c22d937922097a9e8ee368c72b55
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Feb 26 17:12:28 2018 +0000

    Drop the hash join reorder optimisation as it's currently incomplete.

commit b5f28b166de30220b2915c3bef8e8a9267640477
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Feb 23 16:15:43 2018 +0100

    Added some class-level comments for TableStats/TableStatsService

commit a16fa21749655f20d2345603ec2be7b05ed63156
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Feb 23 13:56:33 2018 +0100

    Fixed 2 issues for TableStats.
    
     - Fix group by columns: Followup of 0e54d7ddea034812a3ff36822e8c8acd1936fe2a
     - Only calculate numDocs and Size for primary shards
    
    Added an integration test.

commit cc41467110ebde2ece824badbbaf905cbb1afd6d
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Feb 21 12:34:36 2018 +0100

    adds documentation/links for exposing JMX via HTTP

commit bceeac63f4c3b8b1dead4a170feeffa639c55151
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 23 11:10:00 2018 +0100

    Tests: Ignore TableUnknownException in test_graceful_stop_concurrent_queries
    
    This is a temporary band-aid to avoid flaky test failures until we've a
    proper fix in place.

commit 16f3ab95e6009a726bcfab5a790867d5389c5098
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Feb 21 08:59:08 2018 +0100

    added documentation for garbage collection logging

commit d46105e564b986906435d16f03ffe6e8f947b40d
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Feb 20 17:49:09 2018 +0100

    Enable garbage collection logging by default
    
    This change requires changes to the CrateDB .deb and .rpm packages, as
    well as to the Docker image.
    
    With that change, CrateDB logs garbage collection times to
    $CRATE_HOME/logs. Log files are rotated with a maximum file size of 64MB
    and kept 16 rotations.
    
    To change default log path, file size, rotation, as well as to
    completely disable GC logging, there have been introduced various
    environment variables.

commit d74a4f70210e39a0a4139dce5a57ee12598070db
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 22 14:41:32 2018 +0100

    Add a github PR template

commit 63fe701491643fff24629fa7a657949b45113c4c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 22 13:57:26 2018 +0100

    Tests: Fix flaky testJobLogWithEnabledAndDisabledStats

commit 506c867eb2a477041cbad41268b175a6fd7682a6
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed Feb 21 19:31:52 2018 +0100

    fix case

commit 66e79bb4b96d2332f8d51fbf203479622028efca
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 21 15:55:35 2018 +0100

    Do not wrap IndexNotFoundException in UnhandledServerException
    
    This broke the retry detection as it didn't recognize the
    `IndexNotFoundException`.
    
    Although the wrapping happened in a `try / catch` block where there is
    already a `IndexService` acquired the `ShardCollectorProvider`
    re-acquires it and if the index moved or got deleted it can still raise
    a `IndexNotFoundException`
    
    `doc_tests.process_test.crate_TestGracefulStopDuringQueryExecution`
    could fail because of this.

commit 1fd091871f7668f8ee22096f3d783bb5fc3bdd29
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Feb 21 11:05:29 2018 +0100

    Rename UseRandomizedSession to UseRandomizedSchema.
    
    Initially we thought of merging ``@UseHashJoins`` & ``@UseSemiJoins``
    with ``UseRandomizedSession`` but this is causes issues when overriding, eg:
    
    @UseRandomizedSession(schema=true, useHashJoins=0.5, useSemiJoins=0.5)
    TestSuperClass
    
    @UseRandomizedSession(schema=false, useHashJoins=0.5, useSemiJoins=0)
    TestClass
    
    @UseRandomizedSession(useHashJoins=true)
    testMethod()
    
    Then when we get the annotation of the method we get the one that is on
    the method itself and not a "merged" version with the annotation of the class.
    This means that for the example above the active config for the ``testMethod()``
    would be: ``schema=true, useHashJoins=1, useSemiJoins=0.5`` because for schema
    and useSemiJoins the default values would be used.
    
    A solution would be to merge the annotation from the class/method hierarchy
    manually but this makes things quite complicated.
    
    Instead we rename the ``UseRandomizedSession`` to clarify that we have 3
    separate each for the specific randomness config we want to achieve.

commit 0e54d7ddea034812a3ff36822e8c8acd1936fe2a
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Feb 20 23:26:39 2018 +0100

    Added a method to get the estimated size per row in TableStats.
    
    To be able to calculate an average size per row we fetch also the
    sum of the `size` column for each table from `sys.shards`.

commit dc5d9bc147521307efbd6ea61ffdea2b585af255
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Feb 20 18:18:13 2018 +0000

    Resolving search routing can return null. Make our code more resilient to that.

commit f0fecc20a926bdbead2fba03f879b451bad18f98
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Feb 19 18:37:33 2018 +0000

    The clusterBy field should be empty in the WhereClause when it's not explicitly used.
    
    When analyzing the where clause for a table with a composite pk and clustered
    by the implicit _id, we encounter multiple pk columns and values but the actual
    cluster by column (the _id) will not explicitly exist in the where clause.
    Even though all columns that are part of the composite pk are explicitily used
    in the where clause when we look for the cluster by key, we will look for _id.
    In this particular case we need to construct the WhereClause with an empty
    `clusterBy` field and allow an id function to compile the _id value based on
    the pk values.
    
    Before this commit there were a mix of values that were passed to the
    `clusterBy` field, namely `null`, an empty set or a set containing
    values and our code treated empty set and null differently, empty set
    being considered as "routing values are present". Since there were no
    actual, explicit routin values, this later resulted in a NullPointerException.
    
    This commit fixes this issue and passes on an empty set as `clusterBy` field to
    `WhereClause` and makes the field non-nullable.

commit 7cb24d6a02f0bad7a7f5c8ba01f4348be8236b7e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 20 13:12:20 2018 +0100

    Remove Nullable annotation from JobsLogs.operationFinished
    
    `jobId` and `operationId` are always available

commit 099bbc9307d10d390a6bedc8b00635f4c04aa70d
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Feb 20 12:36:13 2018 +0100

    Remove support for deprecated HTTP ``X-User`` header.
    
    The X-User header has been deprecated in 2.3.0 in favour of
    the standardized HTTP Basic Auth header.

commit e1b5680a8e6b486246404af5b53b81b194946acf
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Feb 20 11:31:56 2018 +0100

    clarify visibility of credentials when used to create snapshot repository

commit d98a6f8f86d48dabd8870c9c9d26be19d3800080
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Feb 15 09:18:07 2018 +0100

    doctests: randomize test order

commit 01c6cc1d8c002aea8d5fd31ccd1f93326147b3ff
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Feb 7 15:43:50 2018 +0100

    doctests: drop all tables after each test

commit 3f2adb5e02724d12f89ba84f1be3ba04c096c183
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Feb 13 16:19:41 2018 +0100

    adds hashjoin iterator JMH benchmark

commit c0c93c9e83abb7eaf01d07bc55a96990d4c7a263
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Feb 13 15:16:49 2018 +0100

    Implement Logical/Execution plan for HashJoins.

commit 1ce9a04cebe222151b43af3bffc2d41ebe8661a7
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Feb 9 00:34:44 2018 +0100

    Added a RamAccountingBatchIterator as a wrapper of a BatchIterator.
    
    Introduce this new class that calculates the memory occupied by the elements of the
    BatchIterator. The memory is increased on every successful moveNext() which means that
    a row is emmitted by the iterator and can be consumed by the caller.
    
    Typically this wrapper class can be used when the BatchIterator consumer "reads" all
    elements of the iterator and keeps them in memory. eg: HashInnerJoinBatchIterator
    
    Also Added functionality to calculate extra size for each row.

commit 76eafce5ff3d42dc271807c8d2f27b3c0bf103f1
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Feb 9 21:39:28 2018 +0100

    Added a group of tests to simulate hashing collisions

commit 2c83b803f21406f821b45eae52d166b39168d963
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Feb 8 15:17:32 2018 +0100

    Implemented BatchIterator for inner equi-joins using HashJoin algorithm.
    
    To improve performance and mem usage of hash-join iterator:
    
    - Use hppc IntObjectHashMap instead of Multimap.
    
    - Use `ArrayList` instead of `LinkedList`.
      `LinkedList` is better suited for CPU perfomance when we don't know the
      number of elements added but consumes more memory since each `LinkedList#Node`
      holds prev and next pointers adding more bytes for each element added to them.
      In our case the LinkedList was used to implement the "chain bucket" in case of
      duplicate values/hash collisions. In the average case this "chain" has only a
      few elements so if an ArrayList is used it would be rarely resized() and would
      only add a constant memory overhead.

commit e73db94230c7eaa5c8120037c83fac920e647d0a
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Feb 7 14:25:24 2018 +0100

    adds EQ hash join condition symbols extractor

commit 3e9999b99ca240ab8c2ddb01ec631f546656ebd9
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Feb 7 15:21:54 2018 +0000

    The LogicalPlanBuilder evaluates the join statement and decides which operator to use.

commit da7ef178d7150e25524ae73ffb261822bec9640a
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Feb 1 17:20:01 2018 +0000

    Add support for randomizing the `enable_hashjoin` setting in tests using @UseHashJoins

commit a2408f24e28109ae8eb6686961b31d624979d477
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Feb 1 17:59:29 2018 +0100

    Adds helper class to detect if hash join is possible.
    
    For hash joins, it must be possible to hash one side of a EQ operator.
    This only works if everything inside this argument is tied to the same
    relation.

commit 87eab9326c103089a7c5f2c174c4aaa841765f6c
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Feb 1 15:48:12 2018 +0000

    Introduce the `enable_hashjoin` session flag.

commit e5f85709251c27db64c2c025f89578a19ab9e217
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 14 14:26:10 2018 +0100

    Avoid early node termination on graceful stop
    
    Although we move shards away from a node that is being decommissioned,
    there is still a small window where it might run operations not
    involving shards, like a distributed merge, or even receive new
    operations because other nodes based their routing decision on a
    slightly outdated cluster state.
    
    This commit therefore changes the DecommissioningService to also check
    for the number of active operations before invoking the node shutdown.
    
    In addition, it adds a slight delay - this is a bit of a duct-tape fix
    but it works for most cases and can easily be backported.

commit 4f82d236aabc7bb824ee1f8d6a1e8685039fb63b
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Feb 14 14:39:36 2018 +0100

    clarify UDF overloading in documentation

commit 4e29ae5d1685b870d44520af8bad966b1d39650e
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Feb 15 16:56:28 2018 +0100

    reflect release 2.3.3

commit 488c458ade14a7000c15363378961ea880a4bdb5
Author: Andrei Dan <andrei@crate.io>
Date:   Fri Feb 16 13:46:05 2018 +0000

    Drop changes entry for the fix as the bug was not released.

commit 9749f083ad6c395e7627b09add1cf8ef1e44fe6d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 16 17:41:36 2018 +0100

    Make select queries more resilient in case of IndexNotFound errors
    
    `IndexNotFoundException` can occur when the last remaining shard of an
    index has been moved away from a node.
    So far we only retried on `ShardNotFoundException`.

commit bb5412147d3bfc7ec37ccb82808dc2284a56d872
Author: Maximilian Michels <mxm@apache.org>
Date:   Fri Feb 16 14:43:52 2018 +0100

    Add epoch argument to extract function
    
    Epoch returns the number of seconds since Jan 1, 1970 in double precision.
    
    ```
    > extract(epoch from '1970-01-01T00:00:01') => 1.0
    > extract(epoch from '1970-01-01T00:00:00') => 0.0
    > extract(epoch from '1969-12-31T23:59:59') => -1.0
    
    > extract(epoch from 1234000) => 1234.0
    > extract(epoch from -1000) => -1.0
    ```
    
    Note that the int boxing didn't change here. The boxing already happened in
    the GenericExtractFunction when evaluate is called.

commit 4084a3771e0641b585d8083a49ddb038ba177f2c
Author: Michael Beer <michael@crate.io>
Date:   Fri Feb 16 13:23:55 2018 +0100

    updated documentation for threadpool types
    
    threadpool type "cached" has been removed in ES5 and type "scaling" has
    been introduced with ES2.

commit 9b9b16c8108e9e6d177ad90bfad775bcee74418d
Author: Andrei Dan <andrei@crate.io>
Date:   Fri Feb 16 12:12:59 2018 +0000

    Use a LinkedHashSet instead of HashSet when working with the used columns.
    
    We need a predictable and consistent iteration order for the columns used
    in statements as we built the outputs based on the used columns.
    Currently when looking to apply the order by push down optimisation we
    identify the columns in the parent and then in the child (where we will
    be pushing down the order by) operator based on index in the operators
    output.
    
    Test order by push down for uncollected column in join statement.

commit 05548e6323e5832a28110385b2af2443b02272ce
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Feb 15 15:44:34 2018 +0100

    Upgrade Crate Python to v0.21.2

commit 90628668dea3ee314faf6f6ed25bfb09a6a531ad
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed Feb 14 15:40:05 2018 +0100

    fixup! PR comment

commit 798b799d297da8d4407977d0d5014160ea1767cf
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed Feb 14 15:12:33 2018 +0100

    fixup! Add note about documentation update to changes

commit 65163a7550a6a48c9550d09cd11204f503b10747
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed Feb 14 14:20:30 2018 +0100

    Clarify max_token_length for tokenizers
    
    The semantics have changed. The token will not be discarded in case it exceeds
    the length, but it will be split up.

commit 4e09f0e5108cf0f57c3519b3d87f97ec586e2b63
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed Feb 14 14:12:44 2018 +0100

    Add max_token_length to whitespace analyzer

commit 8a81b2871d0517e81cf2a8e0de3c18a76e25e038
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 14 10:46:02 2018 +0100

    Make sure all affected jobs are killed on node disconnects
    
    Previously we run the `broadcastKillToParticipatingNodes` logic only if
    the node that was killed didn't coordinate any jobs at all. But it's
    necessary to always run that to ensure there are no stuck jobs.

commit ac5c2cbaa5df87117bcddb04885021fa9d36a01d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 13 10:36:46 2018 +0100

    Replace unsafe SQLDirectExecutor with a quickExec function
    
    The SQLDirectExecutor wasn't thread-safe as it used the Session which by
    design is stateful and not thread-safe.
    
    This could cause the portals inside the Session to be promoted to a
    `BulkPortal` which then caused regular `Bulk operation not supported for
    RootRelationBoundary` errors during queries on `sys.checks`.

commit d0cca6fbaae63a57beb778b00e3da9a5df3f05ef
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Sat Feb 10 17:13:14 2018 +0100

    fixed xcontent parsing for user defined functions meta data

commit a2a5519d77cc0a238621c7491820666cb7881c4e
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Feb 12 17:14:27 2018 +0100

    Fixed randomized schema test execution.
    
    The usage or not of a randomized schema was decided by an old
    check and therefore random schema was selected only if semi-joins
    was enabled for the test (randomly 50-50 chance).

commit 86f1f49199b8e5bf5c057ae82cb71b48d0af93a0
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Feb 9 20:56:24 2018 +0100

    Added missing joinCondition attr to streaming test

commit 8b8e51384b8d1d60567f3c81e8e9f9bb2c2b1e26
Author: Maximilian Michels <mxm@apache.org>
Date:   Fri Feb 9 17:01:00 2018 +0100

    Add table setting max_ngram_diff and max_shingle_diff
    
    The index settings `index.max_ngram_diff` and `index.max_shingle_diff` are
    exposed as table settings.

commit 37704d7bf15ae20b0dc1bbb3e249cebc5182ef1c
Author: Maximilian Michels <mxm@apache.org>
Date:   Fri Feb 9 16:57:44 2018 +0100

    Clarify min_ngram and max_ngram parameters

commit f8b252b872e20af78645db0840a1a140dbc74759
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Feb 8 19:08:40 2018 +0100

    Enable job statistics by default

commit fb7ea09fb36aa9db1c8306e2ec1f7b3ed26717ef
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 7 17:51:05 2018 +0100

    Update aws sdk to 1.11.223
    
    To match version used in the repository-s3 plugin

commit a2f4bb93ce50800c5172fb5251a64ea057f2ba31
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 8 22:25:46 2018 +0100

    Remove anonymous HashMap class creation in NodeThreadPoolsExpression

commit b83c099b459308936fd13d19119231720a76ce1e
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Fri Feb 9 14:18:01 2018 +0100

    upgrade admin-ui to 1.8.2

commit c442be86fa01535b98893d0352db9a53841eb515
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Feb 9 11:56:45 2018 +0100

    Simplify code by removing null checks and use of instanceof.
    
    - The `query` cannot be null instead it's set to Literal.BOOLEAN_TRUE
    - `instanceof Literal` replaced with `isValueSymbol()`

commit 1f3742c31097e37bfdf52cb5d190ce9203be5047
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 8 20:30:14 2018 +0100

    Change extension of doc files from .txt to .rst

commit 0a64975e8c5548fbcc80bf2b08bc9fa972021364
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Feb 8 16:23:42 2018 +0100

    Clarify stem_exclusion in docs

commit a58b488fd4ed9b220e67e224a655cbc49d21dce3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 8 11:00:37 2018 +0100

    Set waitForActiveShards to ALL on open table

commit 6f48bc70243150983d2118daaad0960e6d695e7d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 7 22:45:15 2018 +0100

    Wrap log statements with varargs in isDebugEnabled

commit 62ca5b806e8404c6b1d030408b989ac12e3658ca
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed Feb 7 19:17:15 2018 +0100

    Add ports tests from PostgresNettyPublishPortTest to MqttNettyNetworkConfigTest
    
    This ensures that the network tests are on-par with the network tests for PSQL.

commit 031440ba3b8b97faf433b32acdab3578e339612c
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed Feb 7 18:18:48 2018 +0100

    Propagate bind and publish port settings and add tests
    
    The bind and publish port would always default to _local_ because the settings
    are not automatically read in the NetworkService anymore. Instead, they have to
    be passed to the NetworkService, otherwise the bind and publish address will
    always be _local_.

commit 42b0eff5575c76a7885babd508922508e609d9b0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 7 22:58:43 2018 +0100

    Fix PreExecutionBenchmarks
    
    With the ES6 upgrade we started to make use of
    `buildNewFakeTransportAddress`, this is problematic because it causes
    `RandomizedTest` to be loaded, resulting in `NoClassDefFoundError`:
    
    java.lang.NoClassDefFoundError: com/carrotsearch/randomizedtesting/RandomizedTest
            at org.apache.lucene.util.LuceneTestCase.<clinit>(LuceneTestCase.java:393)
            at io.crate.testing.DiscoveryNodes.newNode(DiscoveryNodes.java:42)
            at io.crate.analyze.PreExecutionBenchmark.setup(PreExecutionBenchmark.java:74)
    
    This is because for benchmarks we need to exclude randomizedtesting.
    Otherwise we'd run into RandomizedContxt errors because benchmarks are
    not run within a test runner.
    
    This re-implements `buildNewFakeTransportAddress` to avoid that.

commit c6a299081d94381975390911deec5eb451d03c7a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 7 22:54:23 2018 +0100

    Remove hamcrest and securemock from benchmark dependencies
    
    Not used and it doesn't make sense to use assertions or matchers in
    benchmarks.

commit f98f2074395d605ff9534a693a006558b12fd860
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Feb 7 17:55:13 2018 +0100

    Renamed class and added comments to clarify usage.

commit bc51c80dcffe6c70d7be921f828dd2d46313896b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 7 16:11:56 2018 +0100

    Update gradle to 4.5.1

commit f0605dd95b0f450582742274268cd91f1b42bb8c
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Feb 6 16:48:28 2018 +0100

    use cgroup memory probe provided by elasticsearch

commit 6c3b45f8c766292e887a68b68441acd5b990bf63
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 1 17:56:36 2018 +0100

    Upgrade to ES61

commit 9d0836c924c434709372d37bdf6b986db8b1763f
Author: Autophagy <mika@crate.io>
Date:   Wed Feb 7 12:38:41 2018 +0100

    Added OperationOnInaccessibleRelationException to replace UnsupportedFeatureException when dealing with closed/readonly/blocked operations
    
    When attempting an operation on a closed table as a user, instead of the expected exception of an Unsupported Feature being raised, it would instead raise a nonsensical missing privileges exception. This is because this operation would originally throw an UnsupportedFeatureException, which would have no information about the table it was performed on. The privilege checking mechanism would then attempt to check the privileges on nothing and, finding nothing there, throw the incorrect exception.

commit 8d7dda45be0c1289469be4b5346677e6575d2fb7
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Feb 7 14:16:52 2018 +0100

    the gradle itest command now prints the executed tests
    
    and omits the setup/teardown output

commit 6f347f6a715a18d12c29ffb3c7de298a06d3aca3
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Feb 7 11:51:35 2018 +0100

    do not merge default crate.yml with custom config path yaml
    
    if you define a custom configuration path via -Cpath.conf then the
    settings in the default crate.yml located in $CRATE_HOME/config must not
    be loaded and merged

commit 6580674c52d0d5f7585853b88aa4e70966c59060
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Feb 7 13:29:12 2018 +0100

    adds note to ignored objects docs about grouping/aggregation usage
    
    explicitly mention that ``ignored`` objects cannot be used for grouping
    or aggregations

commit fe9549217121be2b7ab2f11e0f4782653fe953ca
Author: Maximilian Michels <mxm@apache.org>
Date:   Tue Feb 6 18:25:05 2018 +0100

    TransportCreatePartitionsActionTest: Ensure cluster state is updated
    
    When creating a new index directly with the TransportCreatePartitionsAction, we
    must ensure that the ClusterState is updated correctly. Otherwise the cluster
    state of the test base can result in an inconsistent state.
    
    See IndicesClusterStateService.java:360

commit 2473df2e6e62ba14674db437627c7889583768c1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 5 22:16:17 2018 +0100

    Remove ClusterIdService
    
    With the ES6 upgrade the ClusterIdService became a simple wrapper around
    the `clusterUUID` on the cluster metaData.

commit ff23942c7f40cdabc03b2feefae18e7e3d123dee
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 6 11:13:01 2018 +0100

    Ignore closed partitions on REFRESH TABLE
    
    Fixes https://github.com/crate/crate/issues/6846

commit b861e2bcd272db8ed11da5e3cfe280321c65a36e
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Feb 5 22:12:39 2018 +0100

    expose blocks.read_only_allow_delete table setting

commit da3d23cfdeb83ad56c163da6a4420832bba3401a
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Feb 2 11:26:49 2018 +0100

    implemented flood stage disk watermark node check
    
    This node check is triggered when a disk on a node exceeds the flood
    stage threashold as defined with the
    `cluster.routing.allocation.disk.watermark.flood_stage` setting.

commit ebac4f6fa643dcaed0690a4ec87f5bfe0ac053f3
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Feb 5 15:52:29 2018 +0000

    Extracted NestedLoopJoinPlan from Join and renamed it to JoinPlanBuilder.
    
    We will soon have more than just the nested loop join algorithm, this
    prepares the current structures for that. It extracts the current
    nested loop plan into its own component (NestedLoopJoinPlan) and makes the
    previous Join (which was a plan builder and the nested loop plan) be just
    a LogicalPlanBuilder which currently builds the NestedLoopJoinPlan (in the
    future it will make decisions about which join algorithm to use and will
    create the appropriate plan)

commit 2b4b31a6033fc9d27ae67c3e649438afe561902d
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Feb 5 15:54:51 2018 +0100

    Update azure and dns discovery dependencies

commit 7dcde1b34d08d1aa839f287584d5726d7d735c65
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 1 21:13:54 2018 +0100

    Update netty to 4.1.19
    
    4.1.20 is also already out, but it seems that
    https://github.com/netty/netty/issues/7617 causes problems with our
    thread leak detection.

commit eed87295dc9e57ce0e023b7c1d74e245e7dc1d4d
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Feb 5 14:38:57 2018 +0100

    Fix failing test.
    
    Followup of 2f0493b44e5210bb3447b071cf80ee624106d446.

commit c2afe6937d5606adce7defc3cc1fe4e793a3477f
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Feb 5 11:42:27 2018 +0100

    Override disk.watermark.* settings of CrateLayer
    
    These changes are necessary due to the new watermark.flood_stage setting in ES
    6. The testing layer has been adapted and will be released once we have upgraded
    to ES 6.1. We can then remove these again.

commit 2f0493b44e5210bb3447b071cf80ee624106d446
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Feb 5 12:39:25 2018 +0100

    Fixed error in privileges validation for UNION queries.
    
    Added missing visitor overriden methods for UnionSelect and OrderedLimitedRelation
    (wrapping a UnionSelect when ORDER BY and/or LIMIT is involved).

commit 5c6e0cbd7ed83d638f2af8c6ebdd1b3c707a43b6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 2 16:07:57 2018 +0100

    Fix array assignments and type inference of params inside arrays
    
    Assignments like `SET ob = [?]` where `ob` is an object array didn't
    work correctly because a `to_object_array` cast is not supported and the
    type of `[?]` was inferred as `array(undefined)`.
    
    Instead of adding the object array cast function, this commit changes
    the `cast` implementation of a `_array` `Function` symbol to propagate
    to its elements. This has the advantage that type inference for the
    `ParameterDescription` message will work as well.
    
    Fixes https://github.com/crate/crate/issues/6835

commit 872dbe812252c791dfd93233c9f2e3bd321634f1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 5 09:43:32 2018 +0100

    Remove usages of Settings.getAsMap
    
    `getAsMap` has been removed in ES 6.1

commit ca85327d981bd3e61c3320d209b1bda770d267fa
Author: joemoe <johannes@crate.io>
Date:   Sat Feb 3 12:37:26 2018 +0100

    enabled sitemap generation through sphinx module in the docs

commit d8cf4eb476384433530d079dc2ec4ede31227e62
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 2 11:37:43 2018 +0100

    Fix IS NOT NULL predicate on object array columns
    
    Fixes https://github.com/crate/crate/issues/6834

commit 13625484c495cf7e0f6d1010e71a5f89aa94589e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 2 10:37:37 2018 +0100

    Replace anonymous classes with LiteralNestableInput in ClusterLoggingOverridesExpression

commit a24e061b67a2fe23e6cea227de23fc2a92fff315
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 2 10:22:03 2018 +0100

    Move `LiteralNestableInput` out of `sys.shards` pkg
    
    This `NestableInput` implementation is not shards specific.

commit 474b9a8d73bad2ca083de2cae1781eca3d95b730
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 2 10:19:47 2018 +0100

    Rename ReferenceImplementation -> NestableInput
    
    A `ReferenceImplementation` is just a `Input` that can contain children.

commit bf325b96d29b93cca1e92b72af26e4764eaee62e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 2 10:16:09 2018 +0100

    Move ReferenceImplementation from metadata to expression pkg
    
    Doesn't fit into metadata as it is used for expression evaluation.

commit 01fceb3e62a9bf182bfbe24edf01c13a065007f4
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Jan 18 10:39:41 2018 +0100

    Upgrade to Elasticsearch v6.0.1
    
    - Update Elasticsearch (v6.0.1) and Lucene version (v7)
    - Bump es submodule to current v6.0.1_cherry
    
    - Add new mocksocket test dependency
    
    - Addapt to sequence numbers in TransportUpsertAction and TransportShardDeleteAction
      Remove versionType from item as it doesn't need to be persisted
      Remove OpType from ShardRequest.Item which previously has become obsolete
    
    - Do not set `index.mapping.single_type`
    
    - Fix blob recovery integration
    
    - Do not populate ingest rules eagerly
      The cluster state isn't ready yet when a ingest rule listener is
      registered. We can depend on the rules being processed once cluster change
      events arrive.
    
    - Add es-analysis-common module
    
    - Add es-common-url module
      Re-add support for url type repositories
    
    - Added cluster.routing.allocation.disk.watermark.flood_stage setting
    
    - Add proper fix for config path loading
      Preserve path.conf command-line argument
      Make home variable consistent in startup scripts
      Pass home variable via regular argument
    
    - Don't explictly disable _all mapper upon field creation
      This prevents printing deprecation warnings and prepares for the next release
      which will remove _all entirely.
      _all is disabled by default.
    
    - Override disk.watermark.* settings of Python test layer
      This can be reverted once crate-python > 0.21.1 has been released.
    
    - Replace transient ClusterId with the ES cluster UUID in MetaData
    
    - Remove redundant class loading test which checks for removed ClusterId
      The test case is redundant because there are other tests which check loading
      duplicate classes throws a JarHell.
    
    - Make sure parallel test execution doesn't run into port conflicts
      With high parallelization the publish/bound ports could get out of sync,
      causing the clients connect to wrong instances leading to all sorts of
      strange errors.
    
    Co-authored-by: Christian Haudum <christian.haudum@gmail.com>
    Co-authored-by: Mathias Fussenegger <f.mathias@zignar.net>

commit e931f63575c7764e4bab83097813b97f4d6311ce
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jan 25 16:17:00 2018 +0100

    use real names of tokenizers in headlines

commit 18187308bc0e9bb75e7a027d26cfc5802763d037
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jan 25 16:01:09 2018 +0100

    added simple_pattern and simple_pattern_split tokenizers to docs

commit 396d50bb68270124ed7fe0bdc2dced05e4594657
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jan 25 15:15:52 2018 +0100

    put built-in tokenizers into meaningful order
    
    1. word tokenizers
    2. partial word tokenizers
    3. structured text tokenizers

commit d2bb2379c84d73fc882921d0689c3af3e52f6b47
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jan 19 16:39:09 2018 +0100

    removed compatibility layer for routing hash function
    
    the routing_hash_function column in the information_schema now always
    returns the only valid hash function name: Murmur3
    
    this is in preparation for the ES6 upgrade. the patch
    https://github.com/crate/elasticsearch/commit/d424dd0b744921a512b12d62add8e07485a29606
    does not need to be applied any more

commit 687ac37f18b4be479a7c498e8fcc4d6261134469
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jan 19 13:29:40 2018 +0100

    removed "recovery.initialshards" table setting
    
    it was already deprecated and will be removed in ES6

commit 6dd32b6ce9c4f9ed315712db50e6e94458d1b226
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jan 19 11:51:40 2018 +0100

    bumped version to 3.0.0-SNAPSHOT

commit 6bac2c34bf7c3f4524d690e61e58c062630ae304
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jan 18 09:53:32 2018 +0100

    removed compat layer from LuceneQueryBuilder

commit 1054334dfe09276f79b84aa53e7f01f75bfcaf65
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jan 18 09:41:36 2018 +0100

    removed TablesNeedUpgradeSysCheck

commit a1f05f69c8be971cd53075cbf8af8af8b371d8e2
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jan 18 09:15:11 2018 +0100

    removed LegacyIpColumnReference

commit 261b7cb103fb172188fbb4dd829c1e4558f111f9
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jan 18 09:09:49 2018 +0100

    removed index version check from HLL aggregation

commit b1cee9e3ff9aa1ebd7194c73a9341794741d6bd2
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Feb 1 16:52:37 2018 +0100

    Refactor the classes of the NestedLoop Batch Iterators.
    
    We will soon implemenent non-NestedLoop batch iterators, so:
     - Introduce a new JoinIterator abstract class to extend from.
     - Move the CrossJoin logic into a separate iterator: CrossJoinNLBatchIterator
     - Introduce a new JoinIterators utlity class which creates the appropriate Iterator.
     - Rename iterators by adding the NL (nested loop).

commit 785818e73c65754bff8f432a8f3414fc085e0c3e
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Feb 1 14:25:08 2018 +0000

    Rename the session `semi_join` key to `enable_semijoin`.
    
    This change is part of an effort to have the query planning session
    configurations follow a consistent naming scheme (ie. postgres uses
    `enable_${feature}`).
    No `CHANGES` entry is created as the semijoins are not documented.

commit 7ae8a92182299fd3b0f1e8b6af1c169e5a0dd6a8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 31 10:20:12 2018 +0100

    Tests: Include test call-chain stacktrace on errors
    
    It was hard to see which statement led to an error if a test case
    executed multiple statements using the jdbc testlayer. This adds the
    stacktrace of the test call-chain so that the line of the statement that
    caused the error is visible:
    
        at io.crate.testing.SQLTransportExecutor.executeWithPg(SQLTransportExecutor.java:311)
        at io.crate.testing.SQLTransportExecutor.executeTransportOrJdbc(SQLTransportExecutor.java:157)
        at io.crate.testing.SQLTransportExecutor.exec(SQLTransportExecutor.java:120)
        at io.crate.integrationtests.SQLTransportIntegrationTest.execute(SQLTransportIntegrationTest.java:335)
        at io.crate.integrationtests.SQLTransportIntegrationTest.execute(SQLTransportIntegrationTest.java:473)
        at io.crate.integrationtests.TransportSQLActionTest.testSelectKeepsOrder(TransportSQLActionTest.java:88)

commit 6bc7a075a1ba61e3879a220eacc7555539b5bad7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 30 21:27:35 2018 +0100

    Do not require DQL permissions for BEGIN and SET SESSION
    
     - BEGIN wraps other statements, the permissions of the inner statements
     are validated instead.
    
     - SET SESSION only affects the user session, there is no need to
     require permissions.

commit c031f4e7ba9c68ca67acdaade58c8092eeb523c5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 29 20:16:50 2018 +0100

    Update jacoco to 0.8.0

commit c9d03e948da13b551eb67519c9da244e5457f58d
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jan 15 22:21:51 2018 +0100

    re-use an unbound analysis for execution planning
    
    changes the portals to re-use an unbound analysis when available and supported.

commit 3e2fcbceebc371f7c29598fcd2eb0a5a9b196c61
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 19 11:00:40 2018 +0100

    supports full explain on unbound analysis

commit e86d1accc5e846c0175a7a4d2a3b5dd1720c889f
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jan 18 15:07:55 2018 +0100

    moves where clause optimizing to execution plan building
    
    actually the current where clause analyzer is the optimizer while the
    the optimizer is the analyzer.
    the optimizer is now used while statement analyzing which is required
    when analyzing unbound queries.

commit 4373a5801b21a69405c88a658737ea331f7f8118
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 26 18:50:14 2018 +0100

    Improve various logging messages
    
     - Include jobId if available
     - Print searchContexts correctly (it printed all allocated slots
     instead of only the actual contents)

commit b454e3d841698d3470f8a42e291cd6cf2c0022db
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jan 29 15:11:00 2018 +0100

    exposes sql disabled flag via JMX
    
    The SQLOperations class already has a boolean flag defining if new
    SQL statements should be accepted for processing. E.g. when doing a
    gracefull shutdown, processing SQL must be disabled.
    This commit exposes this flag via JMX under a new metric `NodeStatus`.

commit f41e58af804db7a3d715008a8f411dc6a9400e5c
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Sat Jan 27 18:10:37 2018 +0100

    Move OrderBy push-down optimization for joins.
    
    Until now the OrderBy push-down optimization took place in the Analysis phase,
    and if a successful pushdown was applied it prevented the re-ordering of the
    relations of the join in the LogicalPlanner which in turn could prevent the
    usage of new join algorithms (eg. hash-join).
    
    This changes moves the OrderBy optimization from the Analysis to the
    LogicalPlanner. So now the OrderBy optimization is done through the
    `tryOptimize()` mechanism which is already in place.
    
    The OrderBy push-down can only be applied if the symbols of the OrderBy refer
    to the top-most left relation of the join tree. This condition is still valid
    after this change but the join tree is allowed to be already re-order in an
    optimal way based on the join conditions (apply as many join conditions as
    early as possible). In the near future the join tree can already be created in
    an optimal way also because of the join algorithm chosen and on top of that we
    can still try to apply the OrderBy push-down.

commit 3943a1c4c4ab3c09ed81b9f81b666bdd0d083337
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Sat Jan 27 18:08:42 2018 +0100

    Minor code optimizations/formatting + class comment

commit 28416c6b139909e5c87122b3a20b5bfbc96bdef7
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jan 26 11:54:55 2018 +0100

    use wheels where applicable for blackbox bootstrapping
    
    this removes the warnings of bdist_wheel command not available:
    
    ```
    Building wheels for collected packages: livereload, MarkupSafe, port-for, sphinx-autobuild, sphinxcontrib-plantuml, tornado
      Running setup.py bdist_wheel for livereload: started
      Failed building wheel for livereload
      Running setup.py bdist_wheel for livereload: finished with status 'error'
      Complete output from command /home/christian/sandbox/crate/crate/blackbox/.venv/bin/python -u -c "import setuptools, tokenize;__file__='/tmp/pip-build-etyjqkv6/livereload/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\r\n', '\n');f.close();exec(compile(code, __file__, 'exec'))" bdist_wheel -d /tmp/tmpd3rcmrdapip-wheel- --python-tag cp36:
      usage: -c [global_opts] cmd1 [cmd1_opts] [cmd2 [cmd2_opts] ...]
         or: -c --help [cmd1 cmd2 ...]
         or: -c --help-commands
         or: -c cmd --help
    
      error: invalid command 'bdist_wheel'
    ```

commit 5207e2de5358ee62d99332fb6145074b58f9f143
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 25 19:26:01 2018 +0100

    Update gradle to 4.5

commit 9b944d07394f7a763868bbcb6a6a8677fbd60905
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 26 16:57:31 2018 +0100

    increases version to 2.4.0-SNAPSHOT

commit 413a9080874610002a75401efa158fdc0e3ca3bb
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 26 12:37:49 2018 +0100

    refactors package structure of expression related classes
    
     - io.crate.execution.expression -> io.crate.expression
     - io.crate.analyze.symbol -> io.crate.expression.symbol
     - some classes at:
            io.crate.analyze.where -> io.crate.expression.eval

commit f64d6df185b3aa93c8bd270a41b79e3bc5e3cd88
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 26 09:56:07 2018 +0100

    normalizes where query while nulls are eliminated
    
    This ensures that NULLs are completely optimized on one WhereClause.normalize() run.
    Before that, normalize() must have been run at least twice to ensure that all nulls
    are eliminated and query was optimized (this is currently the case through
    node- and shard-expression normalization, but could change in future).
    
    Example:
    
            `where null or x = 1 or y = null`
    
    nulls replaced afterwards normalized:
    
            `where false or x = 1 or null`
    
    normalized and afterwards nulls replaced:
    
            `where false or x = 1 or false`
    
    normalized and afterwards nulls replaced including post-normalize (now):
    
            `where x = 1`

commit 2fdb9a0b05e954f8aa4ff22bb06f24a88c18dc83
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 26 09:59:17 2018 +0100

    fixes traversal while eliminating nulls inside queries
    
    follow up of https://github.com/crate/crate/commit/799cdff2a7b41a2bf618b7639bc3b99a0c6a991d

commit ee71e9f8ef585c21fb6e3ffb50fec28112a5da18
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 25 20:17:15 2018 +0100

    Make sure precentile return value matches return type
    
    The percentile function returned an single double value if the fractions
    argument only contained a single item. This then caused an error because
    the return type of percentile was advertised as double_array.
    
    Fixes https://github.com/crate/crate/issues/6801

commit 49dcc75a6d2c8274749f4576f6885f5cdee84fdd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 24 21:00:15 2018 +0100

    Update jmh to 1.20

commit 0a6df7b0f454232b2adf355b27173d329b69b8f0
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Jan 25 14:19:31 2018 +0100

    Clarify comment regarding outer joins affecting the OrderBy pushdown.
    
    If an outer join is involved between any relations of the MSSelect then
    the pre-ordering breaks because of the null values emmited.
    
    Renamed variable for better clarity.

commit c750e6bcfff1c75d0da31f2745933ecc5a7cf974
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 19 21:54:43 2018 +0100

    re-analyze where clause after sub-query excution
    
    Fixes an error if a subquery is used in comparison with a routing/clustered-by column.
    
    This fix requires to adjust how an explain plan output is generated because
    a logical plan containing a sub-query symbol cannot be built into an execution plan without
    executing the sub-queries. Introducing a logical plan printer which kicks in
    if building an execution plan (and so using the execution plan printer) fails.

commit 799cdff2a7b41a2bf618b7639bc3b99a0c6a991d
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jan 24 16:41:03 2018 +0100

    fixes NULL handling while normalizing the WHERE clause
    
    If an argument of a logical operator evaluated to null, this operator
    was not normalized and ended up at the lucene query builder which isn’t
    able of converting this type of query into a lucene query and so created
    a generic function filter.
    This introduces a logic to replace NULL’s with FALSE inside a where
    clause which results in a normalizable query whenever possible.

commit 1d51f9b476430d10795ebbc0d319d3b64c35a629
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jan 25 09:53:30 2018 +0100

    increased version to 2.3.3-SNAPSHOT

commit 9cc56ec3840754f39a2faf6b303ead7cfc1fbfa9
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jan 25 09:05:04 2018 +0100

    prepare release 2.3.2

commit cc20309834367da951283b3a0580264279192cf9
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jan 25 08:59:18 2018 +0100

    reflect release 2.2.7

commit f7a4869b26e1b08a174bd9644f337f1a27afd5c0
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jan 23 17:17:43 2018 +0100

    renamed bootstrap.mlockall to bootstrap.memory_lock in crate.yml

commit 6628e67f230d4e401a956ea7082e8d9d62dbc0e3
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Jan 23 21:36:04 2018 +0100

    Minor code refactoring to avoid duplication.
    
    Initialize variables once in setup() method.

commit 58bffe44c9c75d52422793a5cd68ff6791e8dd22
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Jan 24 14:24:48 2018 +0100

    es upstream: remove non-existant syscall
    
    that caused crate to crash on startup on Ubuntu with specific kernel
    versions

commit d4be146187e377ad4842388d7ca928c7e3ee30f4
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Jan 24 08:36:37 2018 +0000

    Table2 has 2 shards for each partition

commit e6c7b08954a23bc8d2910fdb61196882d46ef74e
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Jan 19 23:56:43 2018 +0100

    Optimize performance of IN or = ANY with subquery.
    
    The IN() or = ANY() are translated to a Lucene's TermInSetQuery.
    The TermInSetQuery is sorting the list of values to optimize the execution
    of the Lucene query. In this case, since those values are the results of the
    subquery we can optimize the time spent for the construction of the TermInSetQuery
    object by presorting those values in our subquery execution.
    
    This small perf optimization can significantly improve total execution time
    when a large number shard of the outer table is queried. That's because for
    each shard a TermInSetQuery is built and therefore a sorting of the values
    takes place.
    
    Related to: https://github.com/crate/crate/issues/6755

commit dc390eeb34441fad41cbdb38256038b43580dacf
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Jan 19 23:56:20 2018 +0100

    Improve testing for Order operator in LogicalPlanner.
    
    Added reverse flags and nullfirst flags arrays to Order printout.

commit f927ee546efd918820f94cb65f4a22bd988af3d9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 23 10:47:52 2018 +0100

    Change customSort implementation to not extend XFieldComparatorSource
    
    See previous commit. Since we're not using ES merge functionality we're
    not required to implement XFieldComparatorSource.

commit 789fd702bd2a04a07a8faefca62f89bbdefc9609
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 23 10:40:46 2018 +0100

    Change NullFieldComparatorSource to not extend XFieldComparatorSource
    
    Since we're not using the ES fetch/merge functionality we don't need a
    `XFieldComparatorSource`, a regular `FieldComparatorSource` is
    sufficient.
    
    This also makes upgrading to ES 6 a bit easier as the
    `XFieldComparatorSource` is going to change a bit.
    
    In addition this commit also changes the `missingValue` implementation
    to match the implementation of `XFieldComparatorSource#missingObject`

commit b838a4ac7dd37f85a3b5ea2ae2c1b3040fb08929
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Jan 23 09:38:15 2018 +0000

    Drop upgrade notes in favour of paragraphs

commit dee05ec14c0e2a90ab4ea592d32c768accee2e0b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 22 15:03:47 2018 +0100

    Tests: Don't use keywords as random schema name
    
    Some tests don't quote the randomized schema, resulting in a
    `SQLParseException` if the randomized schema is a reserved keyword.
    
    For example `TableAliasIntegrationTest` failed with seed
    `66B61DA5AB259CDB:215D1BB444DC21B4`.
    
    (cherry picked from commit 6ae46427043653cf320c1d804d1c77a7a02392fb)

commit 1f0379bf67dab7b375971f5888b2abeadc3718e6
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Jan 15 10:42:40 2018 +0100

    Add an architecture overview to the developer guide
    
    This is the beginning of a rough overview of CrateDB's architecture. It is only
    a starting point and I hope we can expand it over time. The goal is that people
    new to the project can get an idea of what technology we use and how the project
    is structured.

commit 98e5fe3d911c8ffdf605c7259f738b24ef1c4085
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Jan 22 17:05:43 2018 +0000

    updated crate version to 2.3.2-SNAPSHOT

commit 0328f4bd5258f82f817f64a237bc05ad37d2397b
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Jan 22 16:31:47 2018 +0000

    Prepare release 2.3.1

commit 4005ecd953d98e384659698c4191ff581664463f
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Fri Jan 19 13:13:23 2018 +0100

    drop info admonition in favour of paras

commit c0d71f9cbf1f1c44eb72e8b19824f379e18c2a8b
Author: Maximilian Michels <mxm@apache.org>
Date:   Fri Jan 19 11:05:35 2018 +0100

    Allow cast of Function symbol
    
    By allowing casts of Function symbols, we prevent downcasts in expressions
    involving functions as function arguments which have lower precedence than other
    arguments. For example:
    
    Select round(float_col) + 1.1
    
    As of now results in: Select round(float_col) + 1
    Now this results in: Select to_float(round(float_col)) + 1.1

commit f8aefba8ab22d9035b366ab10e082fa60ea14b20
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Jan 18 21:25:02 2018 +0100

    Fix failing test because of randomized locale.
    
    Followup of: 9cff70a14bc44d92b82145b652bbde64cc224fbe

commit 4e2f523d90495938559b811198be706279ba46c0
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jan 18 16:11:46 2018 +0100

    removed LegacyLongFieldMapper usage from LuceneOrderedDocCollectorTest
    
    in preparation for ES6 upgrade

commit 737db50677b96d77d0dca5afebee09d8c8a25a5c
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jan 18 16:11:06 2018 +0100

    removed LegacyIpFieldMapper usage from IpType
    
    in preparation for ES6 upgrade

commit 1903ce738a2788502c356056c31ea4cd93e3c120
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed Jan 17 14:01:30 2018 +0100

    Refactor HostBasedAuthenticationTest to test key sorting
    
    - Remove test-only code in HostBasedAuthentication
    - Enable testing of key prefixes in HBA config
    - Add a test case to ensure a natural order of keys in the HBA config.

commit ba64d41f221addf8087ccc5ac25b85b12e0836b7
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed Jan 17 14:00:43 2018 +0100

    Ensure natural order of keys in HBA config
    
    The order depended on the order defined in the config but didn't necessarily
    result in the natural order of the keys.

commit d966be5966947b3fa4940ee44b2bcc674d348f4b
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Jan 18 12:39:37 2018 +0100

    Add toString override for Blobstore classes
    
    Subclasses of ReplicationRequest should have a toString override in the
    Elasticsearch v6.x. All other subclasses already have an override.

commit 9cff70a14bc44d92b82145b652bbde64cc224fbe
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Jan 17 15:09:20 2018 +0100

    Fixed timestamp string encoding/decoding for psql protocol.
    
    - Changed encoding of timestamp to string to fit the parsing implementation for Go driver.
      The new encoding seems not to break any other postgres client which support multiple formats.
    
    - Changed decoding of timestamp from string to fit the strings as those are sent by Go driver.
      Seems that other postgres clients (even JDBC prepared stmts) send the timestamp as long (msecs)
      or as VarChar pg type.
    
    Fixes: https://github.com/crate/crate/issues/6735

commit f3fa6f3e7b55866bd1eb1565f1135c84ec810818
Author: Autophagy <mika@crate.io>
Date:   Wed Jan 17 16:57:09 2018 +0100

    Reflect 2.2.6 release

commit dd4aac0afae3d5d75ea484205d4d737d916c9370
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 16 14:51:33 2018 +0100

    Add some basic documentation to the execution package

commit 18f7528c85edff9f0253e77b38db1c03fb944a18
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 17 12:20:21 2018 +0100

    Don't require generated primary key column parts to use PKLookup
    
    We can apply the expansion logic we use for partition columns on primary
    key columns as well, so that the primary key detection logic works. This
    allows the planner to generate a primary key lookup plan, so that these
    queries will have real time semantics.
    
    Fixes https://github.com/crate/crate/issues/6768

commit 9aa13fa5c1daadad8e666ad428c162c237f5551c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 16 16:37:32 2018 +0100

    Rework SetBucket classes into a BucketForwarder
    
    The difference between `SetBucketActionListener` and `SetBucketCallback`
    was hard to understand based on the class names. This should clarify
    what these components do.

commit e5c930558fbe80549b069bff2c219e639f32ce02
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Tue Jan 16 15:05:16 2018 +0100

    upgrade admin ui to 1.8.1

commit 8df25f2f056737c8d33b220549b94ebcfc951f49
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 16 16:20:12 2018 +0100

    Fail if downstreams request more data in direct response mode
    
    If the "direct response" mode is used we don't support paging. So
    downstreams cannot request more data from their upstreams.  We should
    make sure we create no execution plans that result in such a
    constellation by being defensive and fail. If we didn't, we would likely
    produce incorrect query results.

commit b066c46c19c9461a5422d4e3a09776e2ddc3956d
Merge: 9d5334694b 934c5df366
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 16 18:04:26 2018 +0100

    Group related execution packages closer together

commit 934c5df36670b507c393ec9c5aaf11cf26b12228
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 16 14:13:44 2018 +0100

    Merge remaining executor components into execution

commit 8018a6850e15796b6a38375001bd3807b64f9a01
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 16 14:10:01 2018 +0100

    Move user package from operation to auth

commit f320a283935558ac71a68353e82f6706a8b25edc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 16 14:07:13 2018 +0100

    Move remaining components from `operation` to the `execution` packages

commit f15907478547b471e9207e8028380498a069202b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 16 13:59:20 2018 +0100

    Introduce a package containing components for expression evaluation

commit 7b9d2a0e3856cfb456a0011ae5bdb7e01e6baa89
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 16 13:53:38 2018 +0100

    Move count related components into the execution package

commit 7f19f3425bfa0930cf43eb3c67b0c243e3eff532
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 16 13:51:55 2018 +0100

    Move collect related components into the execution package

commit 9d5334694bcc67a1531e6816fbbc3ed3ae4ce1d7
Author: Andrei Dan <andrei@crate.io>
Date:   Fri Jan 12 19:39:41 2018 +0000

    Use a collector dispatcher when a shard is not available for collection.
    
    When we attempt to collect the rows we might run into situations where the
    shards are temporary or permanently unavailable (ie table dropped).
    In the later case, we fail the operation.
    In the former case however, instead of failing, we now monitor the target
    shard's state and resume collection when it becomes available again (this
    can translate into a remote collection in case the shard relocated to a
    different node or a local collection if the shard is still/back on the same
    node)

commit f93c331e1df92b180a8b0e2c48b2ccced28350af
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Fri Jan 12 12:44:05 2018 +0100

    fix up definition table syntax, etc

commit 06c46146d1c3271d410eb044422bc048447bcb43
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Fri Jan 12 11:31:07 2018 +0100

    change docs output dir

commit d1abc48a18ce1e2a533ef9f095d83a874c507229
Merge: ee9d414bf6 31188f1f03
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 16 11:24:06 2018 +0100

    Restructure packages to group related components together

commit 31188f1f03250a6abf399265ceae5214a12fed23
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 15 17:17:11 2018 +0100

    Group components used for DML statement execution

commit ec59d407f88ea6702573b2a7909d1f20db0378be
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 15 16:59:42 2018 +0100

    Group components used for DDL statement execution

commit 9946e6efc66f456f709d887acaac5d461294e7c0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 15 16:52:31 2018 +0100

    Introduce a `execution.support` package
    
    This package contains rather generic components which are used in other
    execution packages.

commit 82727b021965f4a6bb8af0678c2e061f2deec158
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 15 16:45:46 2018 +0100

    Move job-context related components together

commit 81661ed931dd313254b20252bcd4006bc5f98a69
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 15 16:34:46 2018 +0100

    Group indexing related components

commit fb2448178a550080225a249d52bac800a211adca
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 15 16:26:23 2018 +0100

    Group data export related components together

commit 037c7dbb330579e716173821d058a478da06143d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 15 16:05:04 2018 +0100

    Group aggregate/grouping related components together

commit 138e2c599ef2d9a8395b1c0636ec523da43abeb2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 15 15:49:49 2018 +0100

    Group components used in the distributed data pipeline together

commit 28fbdda38228ad0d18abebe37e9f4b5979143dc6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 15 15:42:44 2018 +0100

    Group sort related components in the same package

commit ad99b782431a0b451c599d7469f34dcafbf1c9e8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 15 15:37:44 2018 +0100

    Group fetch related components in the same package

commit f98a0134797bc92cedc0ea366d613e639c4b4dff
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 15 15:27:29 2018 +0100

    Make auth a top-level package

commit 49dfdf69554ac0d051170ebd315994d2b5b653a4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 15 15:25:01 2018 +0100

    Move all ingest related components into the same package

commit ee9d414bf696e911444c4c9827c55ee7282bdd36
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jan 15 11:44:02 2018 +0100

    improves error message for invalid DISTINCT col
    
    also adds a note to the `DISTINCT` documentation about the supported
    data types.

commit 0297d623ada355c9ff3c96b7be67c1b3358751e3
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Jan 15 12:30:03 2018 +0100

    ES6 Support in Java9 is activated by param: `--language=es6`.
    
    The `=>` is then supported so the test must be adapted to not fail for Java9
    This is a followup of: fa484103f807785442b3f66027ab419bd29467a4

commit 4dceb7bb1693c9a41d968bea81089bf6a261c2bd
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Jan 15 11:32:35 2018 +0100

    Fix SSL verbosity issue by logging only at startup
    
    This moves the info logging to the SslContextProvider which only registers
    itself once at the PipelineRegistry, avoiding any additional logging on new
    connections.
    
    Regression of bfa092e1a71c1fc8d2744944a254f326c08017ef

commit 90f283c0ac77d37cec79524f0b8ac4cca3a13136
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Fri Jan 12 13:34:23 2018 +0100

    fix docs formatting

commit 1aec76266926b5e1abba38f99002780747869ee1
Author: Maximilian Michels <mxm@apache.org>
Date:   Fri Jan 12 09:29:36 2018 +0100

    Add note about Checkstyle to the basic guide

commit 419a7f1e4a174179041d7f504c739f167586fa77
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 15 21:46:17 2017 +0100

    Clarify semantics in UserManager methods

commit 9f5c8e732a489ab47852ca2e2be21167ecdde5f9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 12 15:15:41 2018 +0100

    Rename InputColumns.Context -> SourceSymbols
    
    `Context` is fairly generic. The new name should make it a bit more
    clear what the `Context` represents.

commit a5305169ab9abd79e8c21202af3942cc16c45733
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 12 14:42:49 2018 +0100

    Fix target column <> source column mapping for insert from query
    
    Insert from subquery into a partitioned table could either not insert
    anything or mix up target / source columns due to the "target column
    references" and "target column symbols" generation being broken. They
    referred to different columns.
    
    Fixes https://github.com/crate/crate/issues/6744

commit 8800a73db1ec7df455c86ef7c0e65c4b9cf6706c
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 12 12:30:20 2018 +0100

    use DocValues instead of source lookup on generic functions
    
    using DocValues over source lookup will greatly increase performance.
    the reasons for doing a source lookup instead were mostly related to the
    pre-DocValues era were the fieldcache was used instead.

commit 968a5fcae558f904fb2ebdc747bae1dadc567cfb
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 12 12:37:58 2018 +0100

    re-enables StringTypeTest JMH benchmark by moving it to benchmarks module
    
    was a left over from the recent JMH benchmarks refactoring

commit 7d6d35ff91faa7b1056213d7017fcdf7f4b9c4fb
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Thu Jan 11 12:21:07 2018 +0100

    fix terminology

commit 6c197d886c24ffc97b3ea2e552e395446d6df44e
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 12 11:17:02 2018 +0100

    fixes select-multi-PK plan JMH benchmark
    
    creating primary key lookup plans requires that the used table has an
    index metadata entry inside the cluster state to resolve the affected
    shards.

commit 724adf63d2d971713e7a07018da4ec1a43b7853f
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed Jan 10 15:28:48 2018 +0100

    fix literals syntax

commit 6dc98b7b2d3d492ded0107accdd728293603878c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 11 16:18:16 2018 +0100

    Migrate boundsFunction from guava to jdk Function interface

commit a49f3fc639976b2748dcffedc0e2b0dc03d678e0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 11 16:15:48 2018 +0100

    Fix some warnings in LuceneQueryBuilder

commit fa484103f807785442b3f66027ab419bd29467a4
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jan 11 11:28:17 2018 +0100

    fixed evaluation of javascript UDF
    
    Providing a JavaScript UDF with EcmaScript 6 arrow function syntax, such as
    `var f = (x) => x;`, caused CrateDB to crash, because Java does not
    throw a ScriptException but an AssertionError (see
    https://bugs.openjdk.java.net/browse/JDK-8144711).

commit 152335d9cdb3b2cbae6b3f1742f5ebff96c8db55
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 10 10:48:58 2018 +0100

    Tests: Replace usages of deprecated randomAsciiOfLength

commit 9d3a637190f4d554cb0ee1cb1b1d5ba937f3d628
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Jan 10 14:24:12 2018 +0000

    Batch operations complete when the result receivers complete (not only finished)
    
    We encountered some issues where, when executing batch updates using the
    postgres protocol, the returned row count for the operation would be 0
    (sporadic failures of PostgresITest.testExecuteBatchWithOneRuntimeFailure
    surfaced the issue).
    This happened because when the operation is complete we signal that the
    backend is read for query (using the readyForQuery message).
    We used to consider the operation complete after we sent the "commandComplete"
    messages for every batch in the operation.
    Due to the commandComplete channel transimission being async, sometimes
    we sent readyForQuery before commandComplete would actually be sent.
    
    This commit changes the definition of "operation complete" from "all result
    receivers finished" to "all result receivers complete" (ie. commandComplete
    was delivered)

commit 210dbab7acd0fa0a98fc221466d787e8f42ca5c6
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jan 10 09:51:53 2018 +0100

    fixes flaky partitioned test by retrying result check using assertBusy
    
    doc table info's are cached and asynchronous invalidated/rebuilt on cluster state events.
    the test assertion could be running on an old/obsolete table info, so retry it using assertBusy
    to ensure that the assertions is run against an up-to-date table info.

commit e72bfbeaeefe18054b7a2d8b8c9c39b69272562d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 9 15:00:40 2018 +0100

    Tests/appveyor: Increase default timeout for stmt execution
    
    Use the same timeout as we use on travis-ci. Currently tests
    occasionally fail on appveyor due to a timeout error.

commit ea61bd6f05a1708c6358f22c925879574f454301
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jan 8 17:57:06 2018 +0100

    removed unused WITH ... SELECT grammar from parser

commit 9de91d81bdfea51de54cdff5ae5fe2265cd07fb9
Author: Emily Woods <emily@crate.io>
Date:   Tue Jan 9 15:26:27 2018 +0100

    Fix broken link in README to crate 'getting-started' page

commit 3bfdfcbdc0e31b55087b1b510cbadfc861102164
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Jan 9 16:07:05 2018 +0200

    Improve JMH benchmark documenation.
    
    A whole classname can be provided as argument, or a method name or className.methodName.

commit 03a6676a5b308cf6299248960e78434c5d49218a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 9 14:34:01 2018 +0100

    Gradle: Fix InternalTask.execute deprecation warning
    
    Fixes:
    
    > The TaskInternal.execute() method has been deprecated and is scheduled
    > to be removed in Gradle 5.0. There are better ways to re-use task logic,
    > see
    > https://docs.gradle.org/4.4/userguide/custom_tasks.html#sec:reusing_task_logic.

commit ba05b7c4f4ff8ed9d81ab62dafd09a07565b4b24
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 8 16:40:50 2018 +0100

    Change ExecutionPhases & Projections package structure and add package docs
    
     - io.crate.planner.projection -> io.crate.execution.dsl.projections
     - io.crate.planner.node       -> io.crate.execution.dsl.phases

commit c0af85378f2b195894b7e9c1137424ab9768ff20
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jan 8 15:36:19 2018 +0100

    replace usages of Optional with nullable properties
    
    because they were only used for "null checks" which is not the intended
    use of Optional.

commit b967dbe498c09927815aebb79d839ad181324c49
Author: turbo-ele <eliash@gmx.at>
Date:   Mon Jan 8 13:20:53 2018 +0100

    Added note on how to create a client-certificate in ssl documentation

commit 7eb83a25748c07f937d30038707dff20c6437277
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 8 14:11:36 2018 +0100

    Gradle: Update shadow plugin to 2.0.2
    
    Fixes a warning:
    
         constructor for `org.gradle.api.internal.java.JavaLibrary` is used
         by Shadow plugin v1.2.x, and has been preserved for compatibility.
         This has been deprecated and is scheduled to be removed in Gradle
         5.0. If you're using the Shadow plugin, try upgrading to v2.x.

commit 241469e2792cc13efdc97851e54d717eb0af23a1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 8 14:09:52 2018 +0100

    Gradle: Remove leftover gradle jmh plugin declaration
    
    No longer used due to https://github.com/crate/crate/pull/6722

commit 5f1c4ac5826bdd8c8a181dcfe499bd5a6ab7bbec
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jan 5 14:35:50 2018 +0100

    removed nullable lists from Node constructors
    
    the ASTBuilder always returns an empty list when visiting lists
    no need to make the constructor arguments nullable

commit 530626de86548b78f767d89ae8caa54b64c71763
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 14 15:51:05 2017 +0100

    Move benchmarks into a separate module
    
    Some benchmarks didn't run anymore because `Randomness.get()` causes an
    error if the `randomizedtesting` dependencies are in the classpath, but
    the code in question is called *without* a RandomizedContext being
    setup. This setup is usually done by the TestRunner, but jmh doesn't run
    in a TestRunner, and it's not recommended to do that, as it would
    influence the benchmark results.
    
    This introduces a new benchmark module. This allows us to remove the
    `randomizedrunner` dependencies from the benchmarks.
    
    This also removes the `jmh` plugin in favor of simply using a jmh jar.
    This has the advantage that tests can be filtered more conveniently.
    (All jmh CLI arguments can be used)

commit ffa48dc65bdd3fb1640e49c354c2d853e16a704a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 8 11:17:16 2018 +0100

    Tests: Move AuthenticationContextTest to correct sourceSet
    
    It's a test so it belongs into the test sources, not into jmh.

commit e01e36f6915fd529e3205616ff6e743321f459d1
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Dec 14 16:23:21 2017 +0100

    Add documentation for PageBucketReceiver and PageResultListener

commit 3a3f2d19dc9f56aff0ade0b59a821f143658b261
Author: Maximilian Michels <mxm@apache.org>
Date:   Fri Jan 5 16:45:12 2018 +0100

    RestResultSetReceiver: Log cause of fail if sending response fails

commit 99ffba6e37d37fe31c9839d926ecf04d737c655f
Author: Maximilian Michels <mxm@apache.org>
Date:   Fri Jan 5 15:18:31 2018 +0100

    Ensure Rest Future is completed in case of channel errors
    
    When errors occurred (e.g. I/O) during RestChannel#sendResponse(..), the
    `CompletableFuture` of `BaseResultReceiver` was not completed. This led to the
    `JobsLogsUpdateListener` not removing the job entry from the job log because it
    is only informed about the job status once the future has been completed.

commit 8085b781bcb0fc93b0b45ce09c4431351600dca2
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jan 5 08:40:33 2018 +0100

    replaced optional generic properties with empty ones

commit 81e837b74ddbdc53a3238df49c83c83e0994f427
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Jan 4 18:10:18 2018 +0100

    Define a different license header check for the enterprise module
    
    This ensures that we have consistent licensing within the enterprise module.

commit 9e3c67d2c92de47e3136a101104943655233edce
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Jan 4 18:10:24 2018 +0100

    Fix licenses in the enterprise module

commit 136a9be2343b8f09fecb744d1832e31465422672
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Jan 4 15:31:50 2018 +0100

    Add Checkstyle rule to check for missing license headers
    
    This performs a basic check if there is some sort of license header in
    place. Checking for the exact header is rather cumbersome because we use
    different headers and the Checkstyle plugin only allows to check the header line
    by line.

commit 30ae34320aa97529bb8da88f339ce972f698a587
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Jan 4 15:54:51 2018 +0100

    Add missing license headers
    
    This adds license headers to all files which were missing one.

commit 452df78ccb72fa7e406f72083e47dc088fec9b47
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Jan 3 20:54:13 2018 +0100

    removed unused FetchFeasibility class

commit e979dce24c1dd0b3f3f19a2143bf1c86b694aa38
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jan 2 11:56:36 2018 +0100

    make column update validation exceptions consistent
    
    when trying to update a column in a table with a single primary key the
    exception message referred to "clustered-by", because single PK is also
    the routing column.
    
    now both updating a single PK column and updating a part of a compound
    PK give the same exception message.

commit 7ae4107b33618ed9b61a68eae1130fd969ea2d76
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jan 2 16:28:00 2018 +0100

    on alter table, archive unsupported/old partition template settings
    
    if a table was created with version < 1.2 using an index setting which
    isn’t supported by version >= 1.2, any change to that table was failing
    while running on version >= 1.2 as the unsupported setting was written back
    to the partitioned table template.

commit 3f44472696c6c4268c6c7933cc4a3536ce4adde7
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jan 2 16:23:11 2018 +0100

    use boolean value `false` for ``INDEX OFF`` columns inside metaData
    
    using a string value “false” causes tables created with version < 1.2 to
    fail either of:
     - the table is partitioned by a STRING column
     - a string column with INDEX OFF is added
    
    this is caused by the ES type mapping parser related to old indices support

commit 95dc577fffd567cdf222dc0e94e4df7eddb7d3cd
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jan 2 16:39:11 2018 +0100

    made operation of the ExpressionAnalyzer immutable
    
    so there is less confusion about with operation type is currently used
    in the analyzer

commit 734e7a7e6821b5f17dc0564b7656a632998389d0
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jan 2 16:36:57 2018 +0100

    enforce validation of on duplicate key assignments
    
    in INSERT statements that use a subquery as source, e.g.
    
    ```sql
    INSERT INTO (id, name) (SELECT 1, 'foo') ON DUPLICATE KEY UPDATE id = id + 1;
    ```

commit f5092e6249c32f362207e9fb2fc12842df37b91a
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jan 2 14:11:47 2018 +0100

    cleaned up AnalyzedInsertStatement

commit 34dc7d3c4a4dbb27fb0f1bacaaf4f348bebb1fdb
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Dec 27 18:35:53 2017 +0200

    Fixed NullPointerException when grouping by IP column with null values.
    
    Fixes: https://github.com/crate/crate/issues/6701 & https://github.com/crate/crate/issues/6642

commit 3f5df5fc32a878fd373566945336f06005324dac
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 22 15:31:55 2017 +0100

    gradle: Increase jaxb_api version to 2.2.2
    
    To match the documentation in `blackbox/docs/admin/discovery.txt` and
    the version used in
    `es/upstream/plugins/discovery-azure-classic/build.gradle`

commit c8b6ec174ef10b41b2e6e1f1bb0e25c57a638273
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 22 16:13:03 2017 +0100

    Remove invalid nullable annotation from SafeExpressionToStringVisitor

commit 2074c7ced0087acefa861826ced20b0d8c00ba91
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 22 14:26:22 2017 +0100

    gradle: Remove admin-ui module
    
    The module has been removed a while ago

commit 5fc57917cf240cfd09047b141360ab4b9f9c2d1b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 22 14:19:25 2017 +0100

    Tests: Re-use CollectingRowConsumer in TestingRowConsumer

commit acb967b6ae31250c909493cec4a5fbf02599c2e2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 22 14:11:52 2017 +0100

    Tests: Replace usage of deprecated Timeout ctor

commit f928c5ea63ada303616fb59efdf336e2e9e2c13d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 22 14:08:23 2017 +0100

    Tests: Remove unused PathAccessor

commit 1f781da3f2d31c1b3dfe5f713508dec2f4cedf90
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 22 15:59:21 2017 +0100

    Tests/mqtt: Utilize try for auto-close and wait for threads to complete

commit f507416ab33efddfad7a823b4763ca6392dc460f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 22 15:55:10 2017 +0100

    Tests: Limit client threads in mqtt tests
    
    By default `availableProcessors (= cores) * 2` was used. On a machine
    with a high number of cores this could lead to a `SocketException: Too
    many open files` error, since one test creates up to 50 connections.
    
    And the file descriptor limit default can be as low as 4096.

commit bd74b8dd0f285261bae27d54ae0f9589da859e14
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 22 11:09:53 2017 +0100

    Remove testing folder
    
    We've no testing module. The log4j2.properties file within testing
    wasn't used anywhere.

commit 753bf645cbdeae9d00cc303d4838b0577500e7dc
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Dec 22 15:25:27 2017 +0100

    updated crate version to 2.3.1-SNAPSHOT

commit 12b51ca9a7e08293fd4c67a3b24919634ecd02b2
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Dec 22 15:06:30 2017 +0100

    fix path to release notes in gradle release script

commit c99abc89b2bd65fcdef2dba77b0662de78b46637
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Dec 22 11:38:58 2017 +0100

    prepare release 2.3.0

commit 65005d6f8b6fc80e95e114507a0be6f0f7b2f1fc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 15 21:23:54 2017 +0100

    Correct Nullable annotation in user statements and actions

commit 47de3d52fb3d516adb922cdbee5ea631097e2a7a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 15 16:41:11 2017 +0100

    gradle: Remove benchmarksCompile and benchmarksRuntime definitions
    
    These are leftover from when we used junit-benchmarks

commit cbc25ed58b4333fafc34ff377d6178d43aa5f80e
Merge: 83284fd207 155d90fe99
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Dec 19 08:40:17 2017 +0100

    fix vendor parsing and improve SysInfo class

commit 155d90fe99da3e3f63c7c3966bec058f0de31d0a
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Sat Dec 16 22:24:46 2017 +0100

    reordered methods within SysInfo.Builder

commit e5fb707bddbea926a2d70aacb2ba4c3da170ac18
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Sat Dec 16 22:21:23 2017 +0100

    better function naming

commit 98b538148ac05facd94d5f443977b77118d94fca
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Dec 15 22:08:15 2017 +0100

    restructured SysInfo class
    
    made the datastructure that holds the system information the outer class
    and a builder to gather the information the inner class

commit a93be9f56a815a311141980524a8d2b9afa08193
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Dec 15 13:42:00 2017 +0100

    fixed parsing function for generic vendor version files
    
    the contents of a vendor file can contain both chars and digits in any
    combination
    the version can be at any position with the line

commit 83284fd2079ba3061be1b6feaa812748b1be68a2
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Dec 15 23:07:36 2017 +0100

    updated admin ui to 1.8.0
    
    this feature release utilizes the new CPU metrics instead of the
    deprecated one for the graphs

commit 65460569e339943f41f3fba5d758c32dd5db914f
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Dec 15 16:07:58 2017 +0200

    Fix HTTP ``Authorization`` header prefix (remove ":") in docs.
    
    Followup of: 6f4a8f57668a97c2d9cfc709333d4035d5350f71

commit 3f0657463ee7648f9c4f4db3abfce11dd9f552fe
Author: Michael Beer <michael@crate.io>
Date:   Fri Dec 15 11:41:27 2017 +0100

    bump Crash version to 0.23.0

commit 62eeacc3d83a9e111b75a71a3113b9a57e33b9e0
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Dec 14 14:09:46 2017 +0100

    Fix Paging issues caused by non-sequential bucket id
    
    The UNION implementation introduced a MergePhase with two different input
    sources. To be able to receive data from two different inputs, the bucket ids
    had to contain an additional input id in addition to the node id. As a
    consequence, bucket ids may not be sequential anymore. The PageDownstreamContext
    relied on the sequential nature of the bucket ids and had to be adjusted.
    
    This commit introduces a Set to hold all existing input ids. While sequential
    ids allowed to loop over all input ids without storing the input ids itself, the
    Set now replaces this functionality by looping over it to retrieve more data
    from the inputs.
    
    This fixes issues where the loading of more paging data was triggered
    incorrectly because the number of finished buckets was not accounted for
    correctly. The locking in the PageDownstreamContext was improved and the old
    logic which sets buckets to empty was re-added. A test was added to test
    processing of the previously added non-sequential bucket ids.
    
    Regression of
    
    1bf8efe5555087390436a01e26ca6ed49fe9b24d
    (initial introduction of non-sequential bucket ids)
    
    dd4ba3a436f93e68ec6e8f267e9a96c305bdc017
    (fix to re-create buckets which have been cleared)

commit 2307a869ce79d8d49046436cc3ce536b85abac2f
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Thu Dec 14 14:09:56 2017 +0100

    move info schema doc to general use section

commit fe944cca00c6b2ba58fefebab9db5d7872b96f05
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Dec 15 08:18:56 2017 +0100

    reflect release 2.2.5

commit 6bf8997ce28d0308760b9df492edf4518238eaaa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 14 11:59:50 2017 +0100

    Prevent NodeOperationCtxBenchmark from getting stuck
    
    The ClusterService wasn't being setup correctly, due to that the
    SQLExecutor got stuck updating the clusterState.

commit 2c3cc1fc54997086ab2d0abe84f26bc9dae7890e
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Dec 14 15:44:14 2017 +0200

    User BytesRef instead of String to avoid duplicating type conversion.

commit 546e74100014f1f0bc6bda1fff189f540d9bce99
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Dec 14 11:45:16 2017 +0200

    Fixed an error thrown when selecting `thread_pools['name'].
    
    String was used instead of BytesRef.
    Since integration tests don't catch this error, due to transformation happening to facilitate easy assertions,
    added an assertion on the abstract class that handles those expressions to catch such errors in the future
    and without adding and perf overhead for normal runtime.
    
    Also changed the test utilities that do this transformation to throw error if they detect Strings.
    This will catch errors when integ tests run without JDBC which takes place in a random manner.

commit a3c8a570c23aa99e95ade52dc8fe42ff0d014995
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Dec 14 16:45:25 2017 +0100

    Fixed return type of Cgroup expressions that returned strings

commit b9369dd3eae85c22483f53315562446ba1a84190
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Thu Dec 14 15:09:11 2017 +0100

    upgrade admin-ui to 1.7.4

commit 149bfb125f6a9fec4e2ea4f0ca2f14551d70daaa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 13 17:51:34 2017 +0100

    Remove unused ValueSymbolVisitor singletons

commit fd5f5edb4fa9b1a5b38088086ab73593d353f584
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 13 16:59:35 2017 +0100

    Remove deprecated ValueSymbolVisitor.VALUE

commit df1d39143cd50b46667c7605eb56e17392d14a38
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 13 23:18:54 2017 +0100

    Changes: Remove UNION ALL / ORDER BY optimization entry
    
    There is an entry about adding UNION ALL support, so a second entry
    mentioning a performance optimization is not necessary.

commit 03e62add928e7d78380563eccf0684d045cf5b15
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 13 23:12:20 2017 +0100

    Changes: Remove invalid entry
    
    The changes entry doesn't apply for the upcoming 2.3, as the bugfix has
    been backported to both 2.1.9 and 2.2.2
    
    (4e944bc0fe42857303fd3752e50e57620ff29bc1 and
    657b2616d247c16540f3a6787f6c8192a28e1e87)

commit 25eb64e2822af823a6dbefe4fd1e5a3e5e462ee4
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Dec 7 15:55:31 2017 +0100

    Upgraded crate python to 0.21.0

commit 6f4a8f57668a97c2d9cfc709333d4035d5350f71
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Dec 4 18:02:10 2017 +0100

    Documentation for the HTTP password authentication method.

commit 8c94af57e92f3eebcb4584510921b0dc2ffc9a77
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Dec 5 16:46:01 2017 +0100

    Add an explanatory message for the browser credentials popup window.

commit 8e567e5d9b575de1acfea2b652438a8ff9776c7a
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Mon Dec 4 15:35:56 2017 +0100

    Implement Http password authentication.
    
     - Extract credentials from HTTP basic auth header.
     - Deprecated "X-User" custom HTTP header and keep as fallback if HTTP basic auth header missing.
     - "password" method is also suported for HTTP protocol (not only PG)

commit 66c501897edd8a9b728683a44d5f00647c3b9db4
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed Dec 13 21:28:54 2017 +0100

    rename table basics doc

commit 256b2db58d396f7fd5fc6134943d752f92944186
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Dec 13 19:06:43 2017 +0100

    removes unused dependencies from DependencyCarrier

commit 4054945b77ac8a24a5d273ab1bc4f9d38874e36e
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Dec 7 21:32:27 2017 +0100

    adds hll jmh benchmarks

commit 48d0d19afeaa98bce97b9f2f6e4310bbd145a954
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Dec 5 15:15:48 2017 +0100

    implements HyperLogLog distinct aggregation
    
    this implementation requires a change at the Aggregation interface as
    some classes are needed on creating a HLL state.

commit f44e2a15e27f1b48b5623a67e04592994070558d
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Wed Dec 13 15:25:01 2017 +0200

    Fix CPU load tests for MacOSX environments

commit 6f2ab1fb3980395a951ce7b18c61cce284969fb2
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Dec 12 17:24:14 2017 +0100

    rename to appendices, add intro text

commit 24ac0d17bc097dfac3000c657f8bc3606073182d
Author: Maximilian Michels <mxm@apache.org>
Date:   Fri Dec 1 20:17:08 2017 +0100

    "Push down" UNION OrderBy to source relations
    
    Queries like `Select id from t1 UNION ALL Select id2 from t2 order by id` are
    optimized to perform an order by already in the source relations of the
    union. The OrderBy from the union is "pushed down" to the queries on t1 and
    t2. The result only needs to run a sorted merge.
    
    Additionally, if two Order are discovered in a row, they will be combined.
    
           *Order*                   Union                  Union
              |                     /     \                /     \
              |                    /       \              /       \
            Union              *Order*  *Order*       *Order*  *Order*
           /     \                |        |             |        |
          /       \      =>       |        |     =>      |        |
       Collect   Order          Collect  Order        Collect  Collect
         t1        |              t1       |            t1       t2
                   |                       |
                Collect                 Collect
                  t2                      t2
    
    Operators allowed to push down an Order: Union, RelationBoundary, FetchOrEval.
    
    This moves the `tryCollapse` inside the newly introduced `tryOptimize` method
    which traverses the entire plan. If a pushdown operator is discovered, it will
    be pushed and then the rest of the graph will be traversed.

commit e64feab14218b5e83c7e36f14a0cdc2a02603c04
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Nov 30 16:53:54 2017 +0100

    Introduce base classes for LogicalPlan interface
    
    This introduces the following hierarchy to the `LogicalPlan` interface:
    
                 LogicalPlan
                     |
               LogicalPlanBase
              /      |        \
             /  OneInputPlan   \
      ZeroInputPlan         TwoInputPlan
    
    LogicalPlanBase:
    ===============
    
    Takes care of storing outputs, expression mapping, base tables, and
    dependencies. These are currently duplicated for every instance of
    LogicalPlan.
    
    ZeroInputPlan, OneInputPlan, TwoInputPlan
    =========================================
    
    A plan with no, one, or two inputs derived from LogicalPlanBase. At the moment
    they handle only the default `tryCollapse` rule. In an upcoming commit, they
    will also handle the default "push down" logic.
    
    This closes #6608.

commit dd4ba3a436f93e68ec6e8f267e9a96c305bdc017
Author: Maximilian Michels <mxm@apache.org>
Date:   Tue Dec 12 18:13:27 2017 +0100

    Don't clear merged buckets but overwrite them instead
    
    Clearing the merged buckets only works if the bucket id is sequential and the
    deleted buckets ids are recreated in the fetchExhausted method. Since we don't
    have sequential order anymore, we have to keep the ids but remove only the
    bucket itself.

commit 6c6e879dcb688589e1d54e3889d2f7df5b542072
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Dec 12 16:57:36 2017 +0100

    add intro text to client interfaces doc, and restructure

commit 39e03fb4cca8f810fff9f3b31be504f5c5aa5e13
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Dec 7 17:48:18 2017 +0100

    Add note why we use Merge.ensureOnHandler in pre Union Merge
    
    For the merge which might be necessary before the union merge, we use the
    Merge.ensureOnHandler method. Execution on handler is not strictly required but
    the union merge afterwards will be performed on the handler anyway.

commit fc2219f6f256c34bb68599222d77adc66f362950
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Dec 12 17:17:45 2017 +0100

    add intro text to sql section

commit 89bedca7159c7dd113a1d1183e16f348d055867a
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Dec 12 17:09:14 2017 +0100

    add intro text for admin section

commit 2af1e91316c4f977522ea71850b8d6faa4e1efd3
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Dec 12 17:07:36 2017 +0100

    add into text for general use section

commit 538cdd3ddc7f046cb60d50fc1511e93c813b96bb
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Dec 12 15:55:54 2017 +0100

    fix typo

commit 56757de9bec8a06c6c5c376ad84905cb58b31ead
Author: Michael Beer <michael@crate.io>
Date:   Tue Dec 12 14:04:23 2017 +0100

    make ALTER USER syntax consistent
    
    ALTER USER properties need to be specified within parentheses to be
    consistent with other statements that use generic properties.

commit 4814fd4fb7a1faf974e6325c7e30d49464d9486a
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Nov 23 13:21:26 2017 +0100

    removed Sigar library dependency
    
    This change is the first step towards more unified node statistics
    across different platforms.
    
    The following changes were made:
    
    * network stats are deprecated and now always return `0` (as previously
    when Sigar was not available
    * read/write filesystem metrics for individual disks are deprecated and
    now always return `-1`
    * system/user/idle/stolen values for CPU are deprecated and now always
    return `-1`
    * a new "used" value for CPU has been added
    * system/user values for prorcess CPU are deprecated and now always
    return `-1`
    
    On an internal level, there is now only a single concrete implementation of
    ExtendedNodeInfo, and the whole Sigar loading mechanism has been
    removed.

commit 873504e257714427b20e1ae108afe1a6bf985e02
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Dec 12 14:56:12 2017 +0200

    Fixed merging of where clauses for collapsable subselects.
    
    When one of the where clauses equals NO_MATCH then a
    NO_MATCH where clause should be returned.
    
    Fixes: https://github.com/crate/crate/issues/6653

commit 6f8d2bebe0f2af9739f557c43eb50d240649b03f
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Dec 12 05:52:08 2017 +0100

    tidy up and rename client/server protocols section

commit 6cce29428c968938adcbbeb979e39a2d0901d79c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 12 13:39:57 2017 +0100

    Remove unused ProxyInput

commit 804270b0554457d19490af5d52d3723c75647f7f
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Dec 12 07:00:54 2017 +0100

    move release notes to the appendix

commit c089357dfa9900f704a7488ccd6a8b9e6fe2bb8d
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Dec 12 06:55:13 2017 +0100

    improve docs urls

commit 8256a2c7e1f661ab2c938907ce8e7d283bb6dd97
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Sun Dec 10 20:40:01 2017 +0100

    improve docs urls

commit ff497ad0c0f1d3f59785fd50636b0402bf3c9deb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 11 14:21:59 2017 +0100

    tests: Add the possibility to add testing tables to the clusterState

commit ee31f288b03948900b98b0f74df92137e7260609
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 11 11:50:11 2017 +0100

    Tests: Avoid failure on timeout errors in testInsertIntoDynamicObjectColumnAddsAllColumnsToTemplate
    
    This test has dynamic schema updates - these require a synchronous
    cluster state update which can be slow at times (especially in a test
    environment where there might be X nodes launched)
    
    This changes the assertion in the test so that it doesn't fail if there
    were timeout errors.

commit db100901d79f5691e5ad4176b3c954896c96c045
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 5 15:53:42 2017 +0100

    Change subqueries with pk filters to have realtime semantics
    
    This removes the ESGetTask and instead adds a PKLookupPhase & Operation
    which ties into our execution infrastructure.
    
    This way the "Get" specific code no longer has to take care of ORDER BY,
    LIMIT, OFFSET. This is handled by other operators in the planner, and by
    projections in the executor.
    
    Furthermore it eliminates a couple of restrictions regarding the use of
    `_version` in the where clause.
    
    From a performance perspective this change seems to be an improvement as
    well. Running
    https://github.com/crate/crate-benchmarks/blob/master/py/specs/select.toml
    yielded:
    
        Q: select * from uservisits where "sourceIP" = '25.193.131.52'
        C: 1
        76.82% mean difference. Likely significant
                    V1  →     V2
        mean:    0.944 →   0.420
        stdev:   0.554 →   0.265
        max:     7.649 →   5.848
        min:     0.372 →   0.230

commit d72839ebdb88f81f6b48c38f84ce9fb22941b20a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 7 20:01:09 2017 +0100

    Fix broken equality check in RoutedCollectPhase normalize

commit f942fcd09b196ced17f082d90df328da763becd8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 7 19:53:20 2017 +0100

    Fix a perf regression for select.. order by limit queries
    
    A change in 927b22cac331095ee0bea79feb5c8ed074a8df27 caused a regression
    because the `nodePageSizeHint` wasn't preserved when normalizing a
    `RoutedCollectPhase`. This caused the collect operation to collect way
    more documents than necessary.
    
    The problematic change is
    https://github.com/crate/crate/commit/927b22cac331095ee0bea79feb5c8ed074a8df27#diff-117849d9b4075be1753c40c23995c810R273
    which causes the `boolean changed = newToCollect != toCollect();` check
    to always result in `changed = true`

commit 8da590ff16f81518611b09cd244a2571d93d04c2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Dec 10 21:25:14 2017 +0100

    Update gradle to 4.4

commit d192f26ffc488afa184d02b96ed20f4beab06b3f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 7 13:21:51 2017 +0100

    tests: Fix flaky NodeSettingsTest
    
    Could fail with
    
        Failed to auto-resolve psql publish port, multiple bound addresses [[::1]:5432, 127.0.0.1:5433] with distinct ports and none of them matched the publish address (/127.0.0.111).

commit 0e8aae7a8e86daafbe1a6498c8b14288d1f416b7
Author: Michael Beer <michael@crate.io>
Date:   Tue Dec 5 15:27:36 2017 +0100

    expose cgroup metrics to `_node` expression
    
    this commit adds the missing cgroup metrics introduced on `sys.nodes`
    with 33cab6f914c89db5836830ae263728defeb9b8dc to the `_node` expression
    as well.

commit c2d7f0d58ef60c329c56b0e17b52548094544e8a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 5 16:49:43 2017 +0100

    Replace PlannerContext.toInteger with SymbolEvaluator
    
    To keep supporting `select * from t1 limit ?` once we've removed the
    bound select analyzer.

commit 719042a470f1c507b744fa9cc6ba1fd92bc632ef
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 6 11:22:21 2017 +0100

    tests: Make it possible to run PostgresITest multiple times in parallel
    
    Makes the port binding dynamic so that a test can be launched multiple
    times. Helps when trying to reproduce flakyness.

commit c418db9550bfce14a8cdc450b2fb50948605fb8d
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Dec 1 20:34:34 2017 +0100

    testing: fixed bytesref to string conversion for object arrays
    
    in nested object column in test response creation

commit f72cbbfe7d26fedaf0ce334ccffdc42f5c9f550e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 5 15:10:50 2017 +0100

    Support parameter expressions in the ANY expression without type hints
    
    Parameter expressions inside ANY didn't work with postgres based clients
    that do not send type hints. (asyncpg, pgx, ... etc)
    
    A statement like
    
        SELECT * FROM t WHERE x = ANY(?)
    
    would fail with the following error:
    
        invalid array expression: '$1'

commit fc1787beaf26afabb78b7565bf2af44e4f9161c6
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Tue Dec 5 14:22:43 2017 +0100

    Fix identation for changelog

commit dd71f4bbe354da3d78477034aa55a70a1ec909f8
Author: Michael Beer <michael@crate.io>
Date:   Mon Nov 6 22:41:44 2017 +0100

    Add support for ALTER USER
    
    This commit adds the ALTER USER ddl-statement which makes it possible to
    alter/reset the password for exisiting db users.

commit a41e0793d97bcc82056474b1a42151e3ac6365c6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 4 11:10:06 2017 +0100

    Migrate PartitionedByMappingExtractor from guava to jdk stream

commit 9f5cf91c6ab982bf86832b1b6045c9ed8f7561be
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 4 10:57:35 2017 +0100

    Remove guava usage from PartitionInfos

commit 26e04572287665b8984eea16beb7d11463874554
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 4 13:11:52 2017 +0100

    jmh: Fix PreExecutionBenchmark
    
    Fixes:
    
         running tests but failed to invoke RandomizedContext#getRandom
            at org.elasticsearch.common.Randomness.get(Randomness.java:105)
            at io.crate.testing.SQLExecutor.getPlannerContext(SQLExecutor.java:127)
            at io.crate.analyze.PreExecutionBenchmark.setup(PreExecutionBenchmark.java:103)

commit 16b1df37da414d6f818dbd07d62c6d1f5cdcdbff
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 1 18:01:33 2017 +0100

    Support subscripts on values of information_schema.table_partitions
    
    To support something like `select values['p'] from
    information_schema.table_partitions`
    
    If the column doesn't exist it will return null instead of failing. In
    addition there is also a implicit cast to string. This is necessary
    because for streaming (via pg-wire); It would fail with mixed type which
    could be the case if 2+ tables have the same column name for
    partitioning but different types.

commit 7c87ee041b51e9e7b26a3ea9a8e97858cf6a08f5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 4 09:54:04 2017 +0100

    Remove jobId from the ExecutionPlan interface
    
    Currently the only usage is on the CollectPhase; so the jobId doesn't
    have to be part of the ExecutionPlan interface

commit 397363971887ba3726a8c936a74b24b60c42a14f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Dec 2 00:15:30 2017 +0100

    Remove unused methods from OrderBy

commit 3dfd8cecafcf3b12b49979b1550ff57da4639253
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 1 17:09:09 2017 +0100

    Remove TO_COLUMN_NAME function definition in Reference
    
     - Still used the guava Function interface
     - Had only a single use, to generate a error message

commit 40159829561df85ca3fc22b7f6c2084de9283d5a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 1 15:27:46 2017 +0100

    Expose columnIdent directly on the Reference
    
    Reduces the boilerplate a bit: Most of the time the ReferenceIdent is
    only accessed to get the ColumnIdent. And it follows the Law of Demeter.

commit 12d7499e52806d9c65a2b306f6925bdea1149887
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Dec 1 14:47:42 2017 +0100

    Enable `valuesort` result validation for sqllogic tests.
    
    There are some queries that are validated using `valuesort` method
    which were ignored up to now. Also now with valuesort we can enable select5.test file.

commit 0d15f674f17c6678935694138e5fdeb3e558aa94
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Fri Dec 1 14:17:28 2017 +0100

    fix insert example

commit 98c60817592b46b28354ed880c56f6f6f4a5af68
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 1 11:09:40 2017 +0100

    Move ExecutionPhasesTask creation logic into a factory
    
    To encapsulate a few of the dependencies.

commit 61de96d5c466281fd7f147f0348322e186765925
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 30 21:58:27 2017 +0100

    Remove some unused definitions

commit 86328fa9e7cdb1e9ae0e200b081b431d33abe80d
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Nov 29 15:59:21 2017 +0100

    adds support for sorting on non doc_values columns

commit 9ad95a79c8c3d05d46677bae6a2363c6b85c0158
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 30 13:54:56 2017 +0100

    Add support for scalar subqueries in update statements

commit 041ac35b5550f8886051d7c519718134219cd8b2
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Thu Nov 30 14:47:52 2017 +0100

    Skip and log queries with `valuesort` instead of failing.
    
    Since UNION ALL is implemented there are some queries that no longer
    throw exception from CrateDB but they are validated with as `valuesort`
    which is not yet implemented.

commit 5904e1302abb4898105dacef576655f39d4d1f96
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 27 15:42:11 2017 +0100

    Integrate scalar subquery execution into ExecutionPlan building
    
    So far we've had multiple steps to create a plan and execute them:
    
     - Logical planning -> returned a Plan
     - Execution planning -> (binding params) -> returned a ExecutionPlan
     - Task building -> returned a Task which was then executed
    
    To support scalar subqueries we:
    
     - Built the ExecutionPlan upfront (with SelectSymbols in place)
     - During Task building we processed the dependencies
     (sub-executionPlans) first, and replaced the SelectSymbols with
     Literals
    
    This worked so far, but it has the limitation that we cannot utilize
    concrete values in all cases to build optimized execution plans.
    
    One example is `delete from t where partition_col > (select ...)`.  The
    best possible execution-plan is a plan which deletes the partitions.
    But without having the concrete values and evaluating the query for all
    known partitions it is not possible to create such a plan - we had to
    fallback to a slower `delete-by-query` plan.
    
    This commit overhauls the plan creation and execution:
    
     - Logical planning -> returns a Plan
     - Plan is executed
    
    How the plan is executed is encapsulated in the plan.  This allows us to
    have different approaches. If there are subqueries we can execute them
    first and built the executionPlan incrementally using the values
    returned from the subqueries. In the case of DDL statements we could
    avoid both the ExecutionPlan and the Task step.
    
    This allows us to optimize the aforementioned case and should also help
    further down the road when we begin to support correlated subqueries.
    
    As a consequence of this we might not always be able to display the full
    execution plan when using the `EXPLAIN` statement.

commit 33cab6f914c89db5836830ae263728defeb9b8dc
Author: Michael Beer <michael@crate.io>
Date:   Thu Nov 30 15:06:30 2017 +0100

    add cgroup memory stats to sys.nodes
    
    This commit adds cgroup memory metrics to the existing `os['cgroup']`
    field.

commit 33cf7366a4aaea7e9389fba445b486a085d71d31
Author: Michael Beer <michael@crate.io>
Date:   Thu Nov 30 12:14:36 2017 +0100

    fixed an issue that leads to an invalid probe timestamp
    
    Due to multiple caching of different services the metrics (cgroup, cpu,...)
    inside of the OS expression result in different probe timestamps.
    Therefore it is necessary to fetch and stream the metrics gained from the ES
    OsStasts service inside the single ExtendedOsStats service.

commit e7607e9fbd54ce0dd0f714a2ef33aab32eae86ef
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 29 16:09:45 2017 +0100

    Fix :dex:javadoc errors

commit 47198a35fcf5fe44351a46a719e494ac0a5ad55a
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Sep 21 10:58:15 2016 +0200

    Enabled UNION ALL in sql features

commit 486d400995a7a1395542dfc31b6870fe975f2d91
Author: Marios Trivyzas <matriv@gmail.com>
Date:   Fri Nov 10 15:07:49 2017 +0100

    Added Documentation for UNION ALL

commit 1bf8efe5555087390436a01e26ca6ed49fe9b24d
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed Nov 8 15:22:45 2017 +0100

    Implement Planner support for Union ALL
    
    The Union ALL planner support uses a `Union` operator in the `LogicalPlanner`
    which generates a `UnionExecutionPlan` during plan execution. The execution plan
    consists of a sub plan for each side of the union. Both sides are executed as a
    branch of the NodeOperationTree. The result is fed to the downstream
    `MergePhase` which receives data from both sub plans and merges them into
    buckets encoded by the node id and the input id set during planning.
    
    In `MergePhase`, the number of different inputs was added to ensure that a merge
    with multiple inputs can be detected. The input id is encoded as a byte at the
    beginning of the 32bit bucket id.

commit cf4f61c0491f0420a7f502683423def588c8c1f0
Author: Maximilian Michels <mxm@apache.org>
Date:   Tue Nov 28 20:28:12 2017 +0100

    Fix node id collection comparison assertion check
    
    The check was using equals to check if the contents of both node ids are
    identical. Equals doesn't work on all Collection types. The proper way to check
    is with Collection#containsAll(otherCollection).

commit 529984a63ccd9093c3819558dbb5303c9b1530ef
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed Nov 29 10:50:35 2017 +0100

    Default downstream DistributionInfo to BROADCAST
    
    The SAME_NODE optimization is used as the default for `MergePhase`s. This can be
    problematic if the downstream operators cannot run on the same node as the merge
    phase. BROADCAST is more suitable as the default. Operators can still decide to
    change the distribution info when necessary.

commit 505d64da11da44ca42f153a7a9c3e875088ac296
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Nov 8 14:50:56 2017 +0100

    Implement Analysis for UNION.

commit 9e03c6a0873f416bb770651edb474725bdc2e4c9
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Nov 27 21:51:35 2017 +0100

    adds support for disabling doc_values per column
    
    also implements a source lookup fallback for each column with disabled
    doc_values. this way aggregations and groupings will work without
    doc_values as well.

commit eb7e88372c2f15b372c1711a09be0fc01913f1a1
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Nov 28 11:21:26 2017 +0100

    adds parser support for column storage definitions

commit 2cf718ab8823b13d4a437f393f3a76499c526275
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Nov 27 10:04:37 2017 +0100

    adds DDL storage options documentation

commit 60f980d7fd936eb30a85922cb7b004c3e3393c69
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Nov 29 11:39:11 2017 +0100

    fixes flaky testGroupByOnIndexOff itest

commit 5c8f90f5c12f574e96c28cf86427fbb2eb910d95
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Nov 29 10:50:27 2017 +0100

    removes planner limitations on order/group/aggregate on INDEX OFF cols
    
    this was an artificial planner limitation: grouping, aggregates and
    ordering requires doc_values but no index.

commit b732202404d0d6aac4941b7426ea15ef855d25a6
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Nov 27 14:27:49 2017 +0100

    reflect release 2.2.4 on master

commit 989b1893368831f7d50b4c52dcce63865f13b98b
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed Nov 22 17:15:17 2017 +0100

    reshuffle general use docs

commit d84da2b7229168b53be3849af2503edd4ae79b99
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 28 10:30:17 2017 +0100

    Replace JobTask with default method on the interface
    
    The `jobId` isn't always required and the default implementation for
    `executeBulk` can be done in the interface.

commit 37f64ce23ca0cf5f03a586aafac0c000489af6aa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 28 10:55:05 2017 +0100

    Remove redundant hasVersion check
    
    The Collect operator does a version check as well, so it's not necessary
    to do it in the `SelectStatementPlanner`

commit bfbd71d01a49cfbedb6633667e753e7ef63b2581
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 27 22:29:16 2017 +0100

    Remove unused Upsert and Delete plan
    
    Became unused with e052b92a6 and a4dd6bd56

commit 966ea716eaed581d7157110e4ed9efc4d54c75c0
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed Nov 22 16:12:45 2017 +0100

    rename cli docs

commit 1120029763d9f42637d50ac313bc07f510929127
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Thu Nov 16 13:31:00 2017 +0100

    add a README for the documentation

commit 8e2e10a6c9b6b0608d3e079a1d5efca342065c19
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Nov 23 11:09:49 2017 +0100

    Deprecate ValueSymbolVisitor class
    
    The `ValueSymbolVisitor` instances have recently been deprecated because it
    doesn't handle function evaluation and parameters correctly. We should
    additionally deprecate the entire class to prevent it from being used.

commit e75242cb8693b0a00b0ad8a7d457baa15fce3f19
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed Nov 22 15:46:57 2017 +0100

    move data types and system columns docs to ddl docs

commit 94fd8d9839453e5f171c9fcfc85544540a062a09
Author: Michael Beer <michael@crate.io>
Date:   Thu Nov 23 13:56:55 2017 +0100

    expose cgroup stats on sys.nodes
    
    This commit adds cgroup cpu stats to the `os` field of sys.nodes
    for Linux. The cgroup information is useful if CrateDB runs in a Docker
    environment in order to provide the limits that have been provided on
    the container instead of printing the host limits.
    
    On OS other than Linux this fields will return `null`.

commit e052b92a611e16220f6773e3d28f3af80cb939ba
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 22 11:33:37 2017 +0100

    Make update planner independent of parameters
    
    This changes the logic for update statements in the planner and executor
    to work with the unbound analyzer result.
    
    This is similar to the work that's been done in
    https://github.com/crate/crate/pull/6561
    
    This'll enable us to add scalar subquery support for UPDATE statements
    later on.

commit 338002b55386fb70039adc9f052208cf5c500233
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 23 15:42:38 2017 +0100

    Reuse OneRowActionListener in DeleteByIdTask

commit ecb590536f15487752410fceb38071753a28d817
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 23 15:39:16 2017 +0100

    Fix rowcounts in responses of bulk delete by id operations
    
    This fixes a regression introduced in
    a4dd6bd56f7ec37a4d2f13c553825abc87d45feb that could cause bulk
    delete-by-id operations to return an incorrect row count or result in a
    `ArrayIndexOutOfBoundsException` (Depending on the sharding/number of
    shards)

commit 2e4084f9554be2a8fc6e25d85a357b8396912d75
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 21 20:36:37 2017 +0100

    Add the typtype column to pg_catalog.pg_type
    
    See https://www.postgresql.org/docs/10/static/catalog-pg-type.html
    
    For now all types default to `b` (base type).
    
    `pgx` is one client that uses this column. See
    https://github.com/jackc/pgx/pull/336

commit cd8206184fd87db2e66aae99228e46f564c57db3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 24 15:43:41 2017 +0100

    Remove outdated sections from plugin development docs

commit 9295a87d13ad0b5a0eebbb97218134ad9f98cbb3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 24 11:22:58 2017 +0100

    Make _version query related error messages consistent

commit 5bb1842783de3d1c357b9aeae1243b10cb5fcd5e
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed Nov 22 17:50:31 2017 +0100

    Fix exception when using IN with _id in aggregations
    
    Queries contaning _id values in in/any expressions were not correctly rewritten
    by the `LuceneQueryBuilder`. We need to check if the passed Literal symbol is a
    collection.
    
    This closes #6564.

commit 80e7fcb2cfdb823a4ea46e3814abf89f12fcd4bf
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Nov 23 08:42:38 2017 +0100

    allow multipolygon geometry in WITHIN queries
    
    When using a POLYGON shape that defines a rectangle that is wider than
    180 degrees JTS splits the rectangle into a multi-polygon that is split
    by the dateline at +/- 180 degrees.
    
    Fixes https://github.com/crate/crate/issues/6562 so that no exception is
    thrown.

commit 93fa232909f12a4f37aee7b712b695d805e1ce43
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed Nov 22 18:06:07 2017 +0100

    add missing backtick

commit 2943ab798413562761b25624457618621cdfcfad
Author: Andrei Dan <andrei@crate.io>
Date:   Wed Nov 22 14:31:25 2017 +0000

    Add ParameterDescription support for INSERT FROM SUBQUERY

commit f8edac32abd3698cd8d3c437f972b166bd2db669
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed Nov 22 15:34:32 2017 +0100

    move blob docs to general use section

commit 40a049216e550f7057dabdab19a3f28741bc0e9d
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed Nov 22 13:55:09 2017 +0100

    move jmx docs to admin section, plugins docs to devs/docs dir

commit ac48bcf24761866d0f188d178694f9249b9b6af8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 21 17:53:39 2017 +0100

    Add support for scalar subqueries in DELETE statements
    
    This integrates the multi-phase planning & execution into the delete
    planner and extends the delete specific executor parts.

commit 5f209cef00d0b453f40d5dfb48159096b7e5c284
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Fri Nov 17 13:11:22 2017 +0100

    remove install docs (moving to getting started)

commit a531f38836522cb6fdb7f500b46e8ed33890108a
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Nov 21 18:43:46 2017 +0100

    move sql reference to top level category

commit a4dd6bd56f7ec37a4d2f13c553825abc87d45feb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Nov 11 22:57:55 2017 +0100

    Make delete planner independent of parameters
    
    This removes the "bound analyze" variant for delete statements.
    
    The `AnalyzedDeleteStatement` and all delete plan variations are no
    longer using any parameter values. All plans can be used for single or
    bulk execution. The parameter binding happens in the executor.
    
    There is a bit of adapter logic necessary to still support the other
    statement types where we have bulk-bound analyzed statements.
    
    In addition, this also tunes the `DeleteById` execution a bit: Instead
    of executing 1 delete request per id, it'll execute 1 delete request per
    shard. This should improve the performance for queries like `delete from
    t where pk in (...)`

commit 4871d1b21768cd99934a6de5434a16f932d883f2
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Nov 21 11:24:03 2017 +0100

    enable HTML output for spotbugs

commit c2b7d8adabf0ed1c10b3fc5f68cdaca0c129bc59
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Nov 20 22:42:03 2017 +0100

    use SpotBugs instead of FindBugs
    
    **SpotBugs is the community maintained successor of FingBugs**
    
    The gradle tasks changed from ``findbugsMain``/``findbugsJmh``/``findbugsTest``
    to ``spotbugsMain``/``spotbugsJmh``/``spotbugsTest``.

commit b61eb2507a4700fa68deea1ef9c209549a09bc63
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 20 22:28:48 2017 +0100

    Fix delete by id document not found handling
    
    The fix here checks the error message which is not ideal. But adding a
    flag to ignore not-found errors or something like that would break
    serialization and this needs to be backported.

commit 7808cbc3cd5979baa26110ac87135a02d0e5dc79
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Nov 21 09:50:38 2017 +0100

    fixes logical plan collapse optimizations inside relations

commit 8f3e07c35f492c12a55898659e835c2576245136
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 10 12:57:15 2017 +0100

    changes executor to consume (logical) plans and build execution plans
    
    The old Plan interface is renamed to ExecutionPlan and a new Plan
    interface, acting as a non-relation plan compared to the
    LogicalPlan, is introduced.
    By moving the build of execution plans to the Executor, is will be
    possible to move the parameter binding also to the excutor.

commit 88b83087859cffbf9665fbe9f8b072d567e192fe
Author: Maximilian Michels <mxm@apache.org>
Date:   Tue Nov 21 10:37:36 2017 +0100

    Disable checkstyleTest task during Gradle check
    
    We run only `checkstyleMain` during regular builds which checks the style of the
    main source files, not the test source files.
    
    However, the `check` task also includes `checkstyleTest`. Since we currently
    don't enforce style of our tests, it makes sense to disable the check.

commit 719a0a27692dba5d9254e8a07a7200227db284a7
Author: Michael Beer <michael@crate.io>
Date:   Mon Nov 6 22:41:44 2017 +0100

    Added new "password" authentication method
    
    This is available for connections via the Postgres Protocol. It allowes
    clients to authenticate using a valid database user and its password.

commit e4f668ff2c2f1056868d0af869f73f29b6ab675c
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Fri Nov 17 12:07:39 2017 +0100

    improvements for mqtt docs

commit 319ad59b75226c00ce9f1426eec7ae767108f3a4
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Nov 16 18:56:12 2017 +0100

    Convert timestamp to number for arithmetics
    
    Whenever a timestamp is used in arithmetics, e.g. ts + 1 or ts / 1.0, we
    previously operated in the timestamp domain. This led to problems because we
    converted long/double to timestamp. Longs are converted by interpreting them as
    milliseconds, whereas Doubles are converted as seconds with milliseconds as
    fraction. For example:
    
      1.0 would be interpreted as 1000
      1   would be interpreted as 1
    
    The solution is to treat the timestamp as long and cast it to other data types
    when necessary. The result of an arithmetics with a timestamp, will never be a
    timestamp but a number data type.  Only when functions accept timestamps as the
    direct argument, the input will be attempted to be converted to a timestamp
    and Doubles are handled special.

commit f4b997d43b00d4839891104f4f5cb3970f6701c3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 20 10:54:25 2017 +0100

    Add target table name validation to alter table - rename

commit 0637f0e206c41a372f0f59a8815d749552d5e4d7
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Nov 16 10:24:16 2017 +0100

    simplified construction of User instances

commit 243647a750f431cee99c7e274635199fdbed7d6f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 16 15:29:34 2017 +0100

    Tests: Fix doctests file not found failures
    
    Files have been moved

commit 924eb0d685a524fc4cfc1d467859676ff0fbc068
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Nov 16 09:50:00 2017 +0100

    removes no-op optimization on select plans
    
    A no-op plan was returned by the select planner if the limit of a select
    resulted in 0.
    All collect source are already handling where clause no-match cases, so
    creating and executing a select plan instead is fine.
    Turns out this optimization is not worth the increased complexity
    specially when doing further refactoring of plans into logical plan
    operators.

commit f0ca76d978316df9b3fef0c35b64ff9232aac6d7
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Nov 14 16:52:41 2017 +0100

    create appendix

commit bfbf75e68308e74362e4070534dda14bdead4f08
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Nov 14 18:45:42 2017 +0100

    reshuffle docs to create full administration section

commit 6027c0006edcd7b1ff8f91816081803a30c9dbf4
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Nov 16 09:15:35 2017 +0100

    allow `_local_` notation for auth.host_based.config address field
    
    _local_ matches both IPv4 (127.0.0.1) and IPv6 (::1) connections via localhost

commit b4ac3409fdb19d4f0e30b907ab0c531fb1252500
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Nov 16 08:47:47 2017 +0100

    renamed address->int conversion function

commit 8cb2b47f8f9edbe853f9e8f4c7b139f20c528017
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed Nov 15 12:40:22 2017 +0100

    change broker to endpoint

commit 48250bb59fa35d9ceaa3e4b077a268c201313c66
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 14 13:50:59 2017 +0100

    Tweak GeneratedColumnExpander API
    
     - Reduces dependencies
     - Add a static method because it has no state
     - Renames a few things to try to clarify things
     - Adds a bit of documentation

commit 8391854132c8d6bac94b40015e6693ddfed98b6e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 14 10:59:32 2017 +0100

    Add some docs to EqualityExtractor

commit fef92ad8300aa54cb5583827ab128e51e4069ab2
Author: Maximilian Michels <mxm@apache.org>
Date:   Tue Nov 14 18:33:32 2017 +0100

    Removed unused method in JoinPair

commit dc14ddead77016e6dc1b0c604518cee53b3b9ab2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 13 17:44:50 2017 +0100

    Avoid repeated WhereClause creation

commit 11655e9f1004ac3cfe5a4b5d8c9a9daa1baca53d
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Nov 13 14:43:44 2017 +0100

    updated crash to 0.22.3

commit 26e63a1a72e72d46fb54b6c33dfb0512ad481c31
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Nov 13 16:45:17 2017 +0100

    reflect release 2.2.3

commit a2f60a11063d3071d5df14b5ae438aea2ba3cd63
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Mon Nov 13 14:37:57 2017 +0100

    upgrade admin ui to 1.7.3

commit c4d9cdd41a4fd55817b853913e93ae1dfeba3f29
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 8 18:05:43 2017 +0100

    Add ParameterDescription support for INSERT INTO .. VALUES
    
    Follows the same pattern as in https://github.com/crate/crate/pull/6499
    
    This will probably need some more modifications once we start using
    the unbound analysis in the planner/executor as it lacks generated
    column handling. But it's sufficient for the ParameterDescription
    purposes.
    
    `INSERT INTO [..] query` handling will be done in a separate commit/PR.

commit f16375f0b658bbad73b59b72eac691ccb0813e6c
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Nov 13 11:56:48 2017 +0200

    Remove obsolete test (as we don't bulk the table creation separately anymore)

commit 398809205c154b459e675dc4c137b12da844848f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 10 16:30:01 2017 +0100

    Make ValueNormalizer methods static

commit 09e74f66baed19cda8c6f6d22f4e4718c8232da6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Nov 11 16:45:22 2017 +0100

    Update gradle to 4.3.1

commit f234bcb64b1659a4f7fc056e83dd11da59ac9eea
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 10 11:44:32 2017 +0100

    Fix bulk sizing logic for UPDATE and DELETE queries
    
    There was a huge performance regression because the
    "bulk-sizing-limiter" always triggered.

commit 663a864098a4212b43dec487252d8415ca83eda0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 9 13:17:30 2017 +0100

    Tests: Increase timeout for testCopyFromFileWithPartitionCreation
    
    With the recent resilience improvements to partition creation this test
    is now a lot slower because we're effectively creating all partitions
    sequentially.
    (The bulk_size is dynamically adapted to keep the number of shards that
    have to be created *per* node below ~10, otherwise the chance that the
    `wait_for_active_shards` timeout is reached becomes too high and it's
    likely to cause shard failures later on)

commit 86408ad79dd0bf760fcd0e2aa10b4ca3065fa17f
Author: joemoe <johannes@crate.io>
Date:   Thu Nov 9 16:29:13 2017 +0100

    removed idents on tables which rendered them in the wrong way

commit ad8eb21b70640a275e9a1a7fe7e111d543419910
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 9 16:47:25 2017 +0100

    Register substr to integer compatible types
    
    ParameterDescription for `substr(col, ?)` returned `double` which seems
    odd. Furthermore, the implementation itself expects integers - so high
    double/long values would cause issues.
    
    This changes the function type signature to match the implementation.

commit 73898b3fadbaa3051ac03783003bd1e724853cd6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 9 14:28:09 2017 +0100

    Fix INSERT INTO with multiple rows in table with generated primary key
    
    Processing the second `VALUES` row didn't pass the validation because it
    skipped setting the generated primary key value onto the context.

commit 97c279392c502f9bc006cc76ee4660c46a9e2c8a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 8 20:22:12 2017 +0100

    Tests: Make sure randomized schema name is not protected
    
    Running `TransportExecutorDDLTest` with seed
    `F19A8AAEFCA460D4:7DD04E6A11367AB2` failed because the schema name was
    randomized to `sys`.

commit f035e2b2926696330ad080977e114fed8a869c27
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 8 20:48:38 2017 +0100

    Remove desiredType from ExpressionAnalysisContext
    
    Although the setter was called - the value was never used or accessed.

commit 8f016cf604dd9f6b1310df3b9825c858eb0fc62e
Author: Christian Bader <christian.bader@crate.io>
Date:   Wed Nov 8 16:25:29 2017 +0100

    Reflect 2.2.2 Release

commit 9a5854951d22e6ee3f5c3e462bb2c14e0029f7d3
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Nov 7 12:32:54 2017 +0100

    update index to point to new getting started docs

commit 1278f2e956dc571070f5ed572611ee904dd71421
Author: Christian Bader <christian.bader@crate.io>
Date:   Wed Nov 8 12:19:08 2017 +0100

    Reflect 2.1.9 Release

commit f153e8fc419492b5634202e0aea6a13509fdf6c1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 7 15:20:25 2017 +0100

    Add support for ParameterDescription for UPDATE
    
    Similar to https://github.com/crate/crate/pull/6496
    
    Note that this is currently building a new analyzer method/statement
    side-by-side to the existing one.
    So using prepared statements results in *two* AnalyzedStatements being
    created. First unbound and then after `bind` a second time bound.
    
    We can't remove the "bound analyzer" until we've made some more
    interface changes to the `Planner` and `Executor`.

commit a1ef29b9c8cf81720d8524b908ed2e64c158e06a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 7 20:46:54 2017 +0100

    Fix jmh benchmark annotation

commit 1899d91ecbd995e16ff14c26c34cda14425c81b7
Author: m-kharbat <meriam@crate.io>
Date:   Tue Nov 7 14:44:17 2017 +0100

    upgrate admin ui to 1.7.2

commit 9794ba304a55a8332be4c213c1f617f5ea627538
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Nov 7 12:36:15 2017 +0100

    Fixed an issue that prevented the complete graceful shutdown of CrateDB node.
    
    The onResponse() callbacks were executed by a thread from ClusterService's threadpool.
    This thread was calling `System.exit(0)` so the threadpool of ClusterServices could not shutdown properly on the first try.
    Then we forced the shutdown of the threadpool, so the thread, which has called System.exit(0) and waits for the shutdown hooks to complete,
    is killed and the whole process is killed before gracefully shutting down all services.
    
    This is solved by dispatching the onResponse() work to a separate thread defined inside DecommissioningService.

commit b79d198ef469dc4efe232d674f858b23d782d5df
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 6 17:03:23 2017 +0100

    Add support for ParameterDescription for DELETE

commit d17dc956b177cdff9516fcb2972737ab5d3ef524
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Nov 6 18:55:01 2017 +0100

    Prepare parser for Union support
    
    This removes list structures from the parser classes and emphasizes the tree
    structure of UNION.
    
    INTERSECT and EXCEPT must not contain additional keywords and cannot be nested.
    
    Removes support for query type: `TABLE name [order_by] [limit] [offset]`.
    
    Removes support for query type: `VALUES expr [, expr] [order_by] [limit] [offset]`.
    
    ```
    Select 1 UNION Select 2 UNION ALL Select 3
    =>
           Union
          /     \
         /       \
        Union   Select 3
       /    \
      /      \
    Select 1 Select 2
    ```

commit 503123e065c00fa4ae00bd43ef70260992c21102
Author: Michael Beer <michael@crate.io>
Date:   Tue Nov 7 12:35:53 2017 +0100

    fixed NPE caused by missing context when building the Lucene query
    
    if a field (e.g. timestamp) requires conversion it needs a context to
    apply parsing.

commit f5712b67141671a28006abf9882c8b1bd93bee4a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 6 17:43:44 2017 +0100

    Replace SelectAnalyzedStatement with QueriedRelation
    
    The `SelectAnalyzedStatement` acted as a simple wrapper for a
    `QueriedRelation` which also implemented `AnalyzedRelation`. The
    `QueriedRelation` can do that directly.
    
    This also updates the `UnboundAnalyzer` to return a `AnalyzedStatement`
    as this will be necessary to support the `ParameterDescription` for
    statements other than `SELECT`

commit e2e2eb246726c318a406fe12705248deffadca08
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Nov 7 11:39:52 2017 +0100

    point ES upstream to correct commit hash

commit ac0391e60ed07c9ea708cda0cefd7ce0f878ebe1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 6 17:07:37 2017 +0100

    Improve error-msg of DELETE on a complex relation
    
    So far it either run into an assertion if enabled or otherwise in a
    ClassCastException.

commit e00818eda5ce254a684d2d2d1fdb9f790291ccb1
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Nov 6 17:43:37 2017 +0100

    renames TransportBulkCreateIndicesAction to TransportCreatePartitionsAction
    
    renames also related request and response classes

commit 54cfed1f4b73376ff9efd9673ee5ae2065562d04
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Nov 6 17:33:44 2017 +0100

    improves logging if new partitions won’t become active in time

commit 17da747a325ba75eb8edc2b542a920467e1406c8
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Nov 6 17:31:13 2017 +0100

    fixes unused return value at GroupRowsByShard

commit 4e28f0c33bfd3753299362a03440f77d95c29fcb
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Nov 6 17:29:38 2017 +0100

    dynamically adjust the sharding executor bulkSize by number of new shards
    
    Dynamically adjust the bulk size if new partitions needs to be created
    and the number of shards (incl. replicas) per node exceeds a defined
    threshold (currently: 10). Otherwise too much shards will be created by
    one bulk partition creation request, not all shards become active inside
    the defined timeframe and so not all records will be inserted.
    Also, while waiting for partitions to be created, consumption of rows
    will be paused.
    
    This commit depends on an ES patch, see https://github.com/crate/elasticsearch/pull/130/commits/7a18739216420b3c6aeee057a529a255ac071133

commit d5027b941a6d6b08a1e8b0f1c29a3f7fdc17249d
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Fri Nov 3 16:27:41 2017 +0100

    update CLI options table

commit 5b01d668fcf7f7e310cde610c823af3766409e3b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 3 17:32:15 2017 +0100

    Add a system property to avoid the Signal handler registration
    
    If the FlightRecorder is used and started it triggers the decomission
    process if the `USR2` signal handler is registered.
    
    This adds a switch to prevent that. Since this is only intended for devs
    this is an undocumented system property instead of a regular setting.

commit b7d24065b694c7791b1ba56b9f5e2883d360b6c5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 3 16:53:49 2017 +0100

    pgwire: Send a crate_version ParameterStatus to clients
    
    For clients it may be useful to know that they're communicating with
    CrateDB instead of a PostgreSQL instance.
    For example to adapt the server capabilities.
    
    One such client is asyncpg, see https://github.com/MagicStack/asyncpg/issues/87

commit 562679eaf9cbc621bab300981607aa26dcaff5bc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 31 10:25:47 2017 +0100

    Make bulkActions non-nullable
    
    It was already effectively non-nullable due to
    
        bulkActions = settings.getAsInt(BULK_SIZE, BULK_SIZE_DEFAULT);
    
    This commit changes the type and removes some `Nullable` annotations to
    reflect that.

commit 01b68de7958b9b407b8bc79b5bc660eea65345e0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 2 16:00:36 2017 +0100

    Resume consumption in search TP instead of scheduler thread
    
    This changes the `BatchIteratorBackpressureExecutor` to dispatch the
    `BatchIterator` consumption back into the `Search` thread-pool because
    there is only a single thread for the scheduler and we shouldn't occupy
    that for potentially long running operations.

commit 95f46dd361e7bfa52781c265d61b2353614c174d
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Nov 2 15:03:46 2017 +0100

    Fix constraint_name in key_column_usage table
    
    The old constraint_name contained the column name instead of the table name.

commit f9c5009acabdc695ba15b50fc3ffd7bd57a4809c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 31 16:41:10 2017 +0100

    Utilize index.mapping.single_type
    
    This causes CREATE TABLE statements to set `index.mapping.single_type`
    to `true`. This will become the default with ES 6.0
    See https://github.com/elastic/elasticsearch/blob/59600dfe2da47dc8a30bf2f601ff6ead72d3bc78/docs/reference/mapping/removal_of_types.asciidoc
    
    We've never made use of the `type` feature and always set it to
    `default`.

commit 5cda841ed9c2d2227d47c970825f2c6f3dca6f67
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 31 15:02:37 2017 +0100

    Avoid allocations in LineContext.get
    
    Minor micro-optimization. Popped up during profiling - though I doubt
    there is a noticeable impact here.

commit e60848f0eb10627a104ba1c57967edc14635af8a
Author: Michael Beer <michael@crate.io>
Date:   Mon Oct 30 01:02:43 2017 +0100

    added support to trigger allocation for unassigned shards in the cluster
    
    This commit adds the statement ``ALTER CLUSTER REROUTE RETRY FAILED`` that
    triggers the allocation for unassigned shards in the cluster.

commit 23a1b3e5f1c7a1a940a0a74979592086514c87e8
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Oct 31 10:28:32 2017 +0100

    use correct lucene geo queries for different index versions
    
    use temoraryFolder rule for temp directories
    
    split LuceneQueryBuilderTest
    
    added within tests with various index versions
    
    added changelog entry

commit 7c280c8b67caeb304faac908dd048cb720ec5a2d
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Oct 31 18:41:52 2017 +0000

    Move entry from `Changes` to `Fixes`

commit 896a87410adf743a8058731b094952f5775e0b38
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 31 16:06:33 2017 +0100

    Update guava to 23.3

commit d08dc40c93c9e9cbddac4a336090d95ef35517f1
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Oct 31 10:01:46 2017 +0000

    Do not apply empty rules if the IngestRulesMetaData doesn't exist.

commit a41942fb9b6971a4e2f4f090ed8eb30bf27114e0
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Oct 31 14:47:28 2017 +0100

    fixed the assignment of stats.breaker.* settings

commit a7a94d5a248b04a69994a50b4738901783c85257
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 30 15:52:38 2017 +0100

    Fix nested Limit operators
    
    The limit operator didn't behave correctly if the source plan is
    pre-limited but still distributed.
    
    Currently the `SubselectRewriter` should prevent such a case from happen
    as it merges limits if possible, but it was still wrong.

commit 8c95b2aed7c3bb59eed5ae5d8dedfa0311a92eb6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 30 16:19:01 2017 +0100

    Fix NPE warning in authorizedValidationRequired
    
    User was marked as Nullable without null check in place.

commit cfaf639422154917aba1fb174c037ccb5a613688
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 30 13:03:09 2017 +0100

    Remove QuerySpec usage from InsertFromSubQueryPlanner

commit 50d78e8a7114c963a1e9d39b1c4edffd28cb075e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 30 13:00:51 2017 +0100

    Remove QuerySpec dependency from SubqueryPlanner
    
    To further reduce the usage of the `QuerySpec` to eventually remove it
    completely. To allow us to merge `fields` and `outputs` on the
    `QueriedRelation`.

commit c45d990b18cd5118527ceddfdf056eb9f301db92
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 30 12:10:11 2017 +0100

    Change SplitPoints to operate on a QueriedRelation
    
    It will be easier to merge the outputs of a `QuerySpec` with the fields
    of a relation if we get rid of the `QuerySpec` altogether. This is a
    step in that direction as it removes the `QuerySpec` usage from
    `SplitPoints`.

commit bf355abca0c5ba9314524d14573dec125a361759
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 30 12:05:03 2017 +0100

    Tests: Remove MyQuerySpec implementation

commit 740b44d9f561d299fc79d3e7dbcda80909a61e62
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 30 11:58:45 2017 +0100

    Simplify planSubselect interface
    
    This removes the additional `statement` argument to make sure the
    relation contained in the `selectSymbol` is used.

commit bd5048d48591c41e2296060eb4ff8dafb7a1b724
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 27 23:34:42 2017 +0200

    Remove some unused declarations

commit 1ac248b961dcf8b88db651cd8400252a2e9b44c3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 25 17:22:59 2017 +0200

    Don't use IPv6 on travis-ci
    
    Trying to make Mr. Travis happy

commit 1b1ade47eb7c8c49e7e7e7cd3366a72ce977b0ff
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Oct 27 16:26:25 2017 +0200

    Upgraded hadoop lib dependencies for HDFS repositories to 2.8.1

commit 6551aba5b7c149e6fa48ed879c483ab1f35835b5
Author: Michael Beer <michael@crate.io>
Date:   Wed Oct 25 15:50:58 2017 +0200

    added setting for enabling/disabling shard rebalance
    
    this setting allows to enable or disable shard rebalancing for specific
    kind of shards.

commit ec1d5b897194f8dfee600bba0015f53c4381b0c0
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed Oct 25 17:34:22 2017 +0200

    Allow array to geo_point conversions
    
    In expressions like `distance(geo_point_col, [1,0])` we don't allow conversions
    of columns (e.g. geo_point_col) anymore; instead, we convert the
    Literal (e.g. [1,0]) to the column type (e.g. geo_point). This is currently not
    possible, so we need to add another rule to allow the conversion.

commit 3c6ce1eb2c3ea011fbefc7cfeb22c630d275607b
Author: Maximilian Michels <mxm@apache.org>
Date:   Tue Oct 24 18:13:41 2017 +0200

    Populate information_schema.key_column_usage table
    
    This populates the previously empty table key_column_usage inside
    information_schema with the primary key information of all user tables.
    
    This closes #6384.

commit ce315f5e673c2069e479016d39828db09f87d135
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Sun Sep 3 20:52:34 2017 +0200

    Adapted information_schema.table_constraint table to be more sql99
    compliant.
    
    Therefore:
    * new columns were added: constraint_catalog, constraint_schema,
    * table_catalog, is_deferrable, initially_deferred
    * column constraint_name is not of type array anymore but a string
      ({table_name}_pk)
    * type PRIMARY_KEY is now PRIMARY KEY
    * type CHECK was added
    * not_null constraint has been added (type=CHECK and
      constraint_name={schema_name}_{table_name}_{column_name}_not_null)

commit a65780072221ef398b265d1d259ff185672b403a
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Oct 25 15:10:39 2017 +0200

    Fixed a bug in INSERT on a table with generated columns.
    
    If a generated column is used both as primary key and as partition key
    then an Exception `Primary key value must not be NULL` was wrongly thrown.

commit 03ddde4270e4c36981338a75488570cd79962f32
Author: Autophagy <mika@crate.io>
Date:   Wed Oct 25 13:11:10 2017 +0200

    Add 2.1.8 release notes

commit f598e14408df4b149793302cf6f32ffc45878e1e
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Oct 25 12:17:05 2017 +0200

    Use expectedException to also check for the message

commit d4a77ccc8badf1c96e367c376f8fbd1b3efee3d8
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Oct 24 18:44:25 2017 +0200

    Excplicitily set default Keystore type to "jks".
    
    Java 9's Keystore.getDefaultType() has changed to pkcs12

commit ac12e4ed7e544a1918554c6e1b3017b1d4f5d0e1
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Oct 24 17:38:06 2017 +0200

    Add a Java 9 expected value for tan().
    
    Seems Java 9 has changes for trigonometric functions that also improve performance.
    Java 9 result for Math.tan() matches the FastMath.tan() (apache) and python's math.tan().

commit 03c781c8ccbc939e9523d1535bf8e841d142440a
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Oct 24 17:37:45 2017 +0200

    Refactor assertEvaluate() to be able to use it with a Matcher

commit cd6e71dc49bf8fa375f6350ed3d8bdb249ef6fe7
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Oct 24 12:19:53 2017 +0200

    Use jaxb-api dependency to resolve NoClassDefFoundError for Java 9
    
    S3ClientHelperTest.testWithCredentials() -> NoClassDefFoundError: javax/xml/bind/DatatypeConverter

commit c048ad4f3e36a0cb853425c6d564b94e008f9d00
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Oct 24 12:19:02 2017 +0200

    Upgraded aws-java-sdk-s3 version

commit c6ff55b8d507cc345b51bc7d36bc803f7b385fce
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 25 11:29:02 2017 +0200

    Add support for binding postgres service to IPv6

commit 50297ce1d6232ef6f67eb0703cc87c06c33ad2d3
Author: Michael Beer <michael@crate.io>
Date:   Wed Oct 25 10:51:21 2017 +0200

    Add DDL documentation for shard rerouting/allocation

commit 6a452d13816fceb483934d244b3c9a48729db861
Author: Michael Beer <michael@crate.io>
Date:   Tue Oct 24 22:22:57 2017 +0200

    Added REROUTE CANCEL subcommand to ALTER TABLE
    
    This commit introduces the reroute option ``REROUTE CANCEL``
    that allows to cancel the allocation/recovery of a shard on a node.

commit 3c2f2d68ad75a05742010735bc066988a10b3968
Author: Michael Beer <michael@crate.io>
Date:   Tue Oct 24 22:24:27 2017 +0200

    fix compile error introduced with ae1e3e040f9aa8ce18393c9aeeac47902d2f8ca3

commit ae1e3e040f9aa8ce18393c9aeeac47902d2f8ca3
Author: Michael Beer <michael@crate.io>
Date:   Tue Oct 24 09:30:15 2017 +0200

    Added REROUTE ALLOCATE REPLICA subcommand to ALTER TABLE
    
    This commit introduces the reroute option ``REROUTE ALLOCATE REPLICA``
    that allows to force the allocation of an unassigned replica shards on a
    specific node.

commit d9659dd71b20641bf0934d529ee4766e2dac21d8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 23 17:48:01 2017 +0200

    Plan group-by to run parallel on shards if on single node
    
    Similar to cc48ea2a28c3f4b4116e283dcfdc62f7fef7702d this fixes a
    performance regression introduced by the LogicalPlanner changes.
    
    This changes GROUP BY operations that run on the handler node to run in
    two-phases: First parallel on shard level, then a merge of the partial
    results on node level.

commit af3364d21886314721c403fa4979a2aabc7d2e93
Author: Michael Beer <michael@crate.io>
Date:   Thu Oct 19 21:34:20 2017 +0200

    Added REROUTE MOVE subcommand to ALTER TABLE
    
    The ``REROUTE`` command provides various options to manually control the
    allocation of shards. It uses the ES Cluster Reroute API for allocation.
    
    This commit introduces the reroute option ``REROUTE MOVE`` that allows
    to move shards from one node to another.

commit 4b6a35f86cef68ea01f364f3929530dc6c8c2011
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Oct 23 16:48:44 2017 +0200

    Add additional test case for Session.getParameterType method

commit d60cd1b495498e74e19eabb7b228e4db8d057d81
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Oct 23 12:59:29 2017 +0200

    Move SQLOperations.Session into a separate Session class

commit 81adbef7125d560c339e5b6cb2d5d8aa64f7dd5d
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Oct 12 15:11:31 2017 +0200

    Add ParameterDescription message to extended PSQL protocol
    
    This adds the missing ParameterDescription message to the Postgres wire
    protocol. The message is required by some drivers to request the parameter types
    in a prepared Statements which don't have arguments assigned yet.
    
    For example, `Select ? in (1, 2, 3)` would describe one parameter of type long.

commit c9fc5e55e23a3aa2725c794c047d8ae60b657cdb
Author: Maximilian Michels <mxm@apache.org>
Date:   Fri Oct 13 08:32:48 2017 +0200

    Remove unused logger instance from SslReqHandler

commit 9c08282f0db5c3de1ca92029bf34e6d1a5c78031
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 23 15:18:39 2017 +0200

    Fix race condition in BatchIteratorBackpressureExecutor leading to invalid row-counts
    
    The `inFlightExecutions` counter needs to be decremented *after* the
    result has been updated. Otherwise result updates could get lost (happen
    after the result future has already been set)
    
    Fixes a regression introduced with 12f4258f51bb274d18e9231f9e6c98253c7e9413
    `testIndexWriter` was flaky due to this.

commit d170409470e047a6be050d1ece4ae5c26f4f6b7c
Author: Autophagy <mika@crate.io>
Date:   Mon Oct 23 16:52:05 2017 +0200

    Reflect 2.2.1 release

commit cc48ea2a28c3f4b4116e283dcfdc62f7fef7702d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 20 19:38:03 2017 +0200

    Plan aggregates to utilize shard-projections if on single node
    
    This fixes a performance regression introduced by switching to the
    LogicalPlanner
    
    Aggregations running on a single node should also utilize shard-level
    projections to benefit from additional parallelism.

commit fac62321dbb64a200bef579dea6e7ca771d8bb06
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Fri Oct 20 13:47:51 2017 +0200

    upgrade admin ui to 1.7.1

commit 9f6f5b40d65d450070fdc1878ae5bd9461aaad6a
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Tue Oct 17 21:32:27 2017 +0200

    upgrade admin ui to 1.7.0

commit 00ff3c90340ee3212be4c4d513d3bdcb4a908cc8
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Tue Oct 17 16:45:11 2017 +0200

    update admin ui to 1.6.4

commit 9465e4ecaa626f0d6bd3da0dc71af920ef751668
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Oct 11 21:15:38 2017 +0200

    added new system table sys.allocations
    
    it lists shards and their allocation state including the reasoning
    why they are in a certain state

commit 72a177ece6b2d77861d0fd7d089ca801b53bca07
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 19 23:07:46 2017 +0200

    Remove printStackTrace usages and ban it.

commit 3d6400ad736d9d77bdd960be7af349db2ea2a32d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 19 13:26:20 2017 +0200

    Eagerly evaluated BETWEEN clauses if possible

commit 23c189a8eada05a08eb38a222a2bb5110cf43872
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 19 12:17:40 2017 +0200

    Avoid multiple type comparisons in ArithmeticFunctionResolver

commit aa4e5869216ea0c92167e00202cf3d2c374e2134
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 19 11:25:37 2017 +0200

    Re-add arithmetic support for timestamp expressions

commit dffe51a883d15f08b9b7cbd475f7a1bf6a3a73e1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 19 10:48:38 2017 +0200

    Fix some BatchIterator generic related unchecked warnings

commit f2f59e7b7974c68deb673e9f61f9880feb1fe65a
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 19 11:24:19 2017 +0200

    fixes flakiness of static schema query tests
    
    flakiness was caused by dynamic templates changing the default number_of_shards

commit 9d58c52f49b11c7b78432958ce94ef47fe2d54e3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 18 15:49:02 2017 +0200

    Avoid iterator allocations in RowTransformingBatchIterator

commit 9d9d8e70748b709e2683155e05092f35c28ad243
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 18 15:41:07 2017 +0200

    Remove row-transformation capability from TopNProjection
    
     - Changes the `TopNProjection` constructor to enforce a simple
     "row-passthrough" - it can no longer evaluate functions or shuffle
     columns.
    
     - Adapts the `SimpleTopNProjector` to no longer add a
     `RowTransformingBatchIterator`. This should avoid a bit of overhead
     during query execution.
    
    The planner already adds an `EvalProjection` if a scalar
    evaluation or column shuffling is required. So it is no longer necessary
    for the `TopNProjection` to provide this functionality as well.

commit e0790dc0a76299ed1d08ee6906e3fce8282d5660
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 18 14:49:02 2017 +0200

    Create expressionMapping only once in RelationBoundary
    
    The expressionMapping was created once in the builder and once in the
    constructor.
    And due to `tryCollapse` it could've been created a third time (again in
    the constructor).
    
    This moves all mapping logic into the Builder so that the work is only
    done once.

commit c4a43c8cec0aa5c3e13707c06131605f3f782979
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 17 17:55:07 2017 +0200

    Avoid collecting scalars if their elements are already collected

commit 919ffe3df385f419e440dda364ee6ca700c35001
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 17 10:36:54 2017 +0200

    Remove isPlanned & markAsPlanned from SelectSymbol
    
    With the new LogicalPlanner it no longer happens that a `SelectSymbol`
    is processed twice.

commit 7c03474030396aa343cc922341f96648755ce583
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 17 15:03:50 2017 +0200

    Move some LogicalPlan util functions into a separate class

commit dc99c5d486ca9fbfc26655600263f03a0a997e2b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 17 13:05:33 2017 +0200

    Plan intermediate fetches if sensible
    
    This changes the LogicalPlanner to plan queries with virtual tables
    closer to how the ConsumingPlanner handled them.
    
    Specifically, a case as follows is now again using an early fetch:
    
        select sum(x) from (select x from t1 limit 500)

commit 791ca63d87d38796411715deee1a4abf81a9ab9f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 16 17:02:01 2017 +0200

    Do not swallow interrupts in ShardingUpsertExecutor
    
    The `interruptedException` was only stored in a local reference in each
    `ActionListener`. Due to that the interrupt handling only worked if the
    "last" `ActionListener` received an interrupt. Other interrupts were
    swallowed.

commit 12f4258f51bb274d18e9231f9e6c98253c7e9413
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 11 22:52:33 2017 +0200

    Decouple sharding/bulk req creation from upsert executor
    
    This extracts the bulk-sizing logic from the
    BatchIteratorBackpressureExecutor, separating the logic a bit.
    
    There is now a new `partitionBySize` function that can be used to group
    elements of a BatchIterator.
    
    The new (logical) flow is as follows:
    
        BatchIterator<Row>
            | // partitionBySize(bulkSize, groupFunc)
        BatchIterator<ShardedRequests>
            |
        BatchIteratorBackpressureExecutor
            |-> ShardingUpsertExecutor.execute

commit 78805a7d954dd1e01b1fad2031401e206fb01d60
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 16 14:29:16 2017 +0200

    Make MultiActionListener more generic
    
    This changes the `MultiActionListener` to use a
    state-supplier/accumulator pattern. This way it's a bit more flexible
    and can be used for cases where the results shouldn't be collected into
    a list.

commit d1e8ef000fa2219dd48d2e43a6d8ca0b7eae6a25
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Sun Oct 15 18:34:46 2017 +0200

    fix table indent

commit 0fe2683baef658c8bc8e4a1dacb481d699944c4d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 16 11:19:16 2017 +0200

    Remove remaining ConsumingPlanner artifacts

commit 9cb52d07fb61b1f672f737ee19f6642d437a4192
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Oct 13 19:18:11 2017 +0200

    Fixed an issue with multiple aliases on columns and collapseable subselect.
    
    When a column is used multiple times on the outer select with and without aliases,
    or with multiple aliases then we need to keep also an index reference to properly
    rewrite the fields when the subselect is collapsed and merged with the parent relation.

commit c5a144970a9ff419d940705826f2f3b5b796bc97
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Oct 13 19:10:00 2017 +0200

    Move ES Upgrade entries from Fixes to Changes

commit 58ce87a51968a15d63cc800f3478dcf56e4debae
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Oct 13 15:17:42 2017 +0200

    show executed tests when providing -Dtests.verbose=true

commit aee3d654326756f209927dc11b3b6789b1aaaded
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Oct 13 15:13:08 2017 +0200

    marked long running COPY FROM test as nightly
    
    tests annotated with @Nightly are excluded by default when running
    tests.
    however they can be enabled using -Dtests.nightly=true
    
    also, the test that has been replaced by the long running test has been
    restored again.

commit 6039d0fa528f7daee915f235d19d839863c72c58
Author: Jodok Batlogg <jodok@crate.io>
Date:   Fri Oct 6 20:07:18 2017 +0200

    implemented pg_backend_pid scalar function

commit bcb47adae873281f4690c6e6c2df508e8d541f91
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 13 15:22:47 2017 +0200

    Gradle: set min-/maxHeapSize for tests

commit 6f97ba498451d31099d4a83f50130426d03719e6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 13 14:35:32 2017 +0200

    Update gradle to 4.2.1

commit a826dab94abbe13819d8b1194dad827af217b86e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 10 15:15:55 2017 +0200

    Make getRouting deterministic
    
    This is a follow up to https://github.com/crate/crate/pull/6380

commit f66e119e8cff36e3a275cc6aacbe5547708c95cd
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Oct 10 15:49:41 2017 +0200

    Added missing link for antiJoin in class comment

commit 74317f6678f218a95a7a7a45ddff257e29c5f447
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Oct 12 19:41:54 2017 +0200

    Upgraded ES to v5.6.3

commit a45d8c421c25e524b4547d123e5e329e1ed6f839
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Oct 13 11:06:00 2017 +0200

    Change assertion for new MacOSX HighSierra.
    
    activeOpens() is always 0 for MacOSX 10.13

commit e0f1f2b8fe28aa9323f7b65c560f13bc3980b754
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 17 22:41:02 2017 +0200

    Support generic elements in BatchIterator
    
    This replaces `rowData() -> Columns` on the `BatchIterator` with
    `currentElement() -> T`
    
    This makes the `BatchIterator` more flexible. It'll allow us to model
    proper data transformation pipelines. This could be useful in places
    where we currently create batch requests.
    
    Furthermore, the rather confusing indirections (`Columns`,
    `RowBridging`, `ProxyInput`, etc..) are gone. Due to that, the
    `composite` implementations are now a simpler.
    
    The disadvantage is that it's less clear that the `BatchIterator` may
    contain instances which are shared.

commit 372a39b1f782b55b4b777e95189178827783b9ab
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Oct 11 14:21:13 2017 +0200

    documentation: unify how system tables are represented

commit 77c39055597ac46354c15866df47b1bb8d25d1ba
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 11 17:16:35 2017 +0200

    Remove some unused properties from MultiSourceSelect
    
    Due to the changes in the planner those properties are no longer
    required.

commit 1d329d08334239c8f96171613c3b201dd39606e9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 12 20:40:07 2017 +0200

    Tests: Fix testAccessJavaClasses
    
    Failed in newer Java versions because the error message changed.

commit e4c04d8971ca2c06fd5ca5d3e3062157b97b79bd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 12 20:38:39 2017 +0200

    Resolve jdbc version conflict (caused jarHell)
    
    Could occur in IntelliJ when trying to run anything from lang-js

commit 61414746a691363fe71b7a58f760c054c5175a43
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 12 15:42:38 2017 +0200

    fixes the mqtt ssl publish test
    
    the select assertions weren’t proper called or even locked the shard
    cause they were issued by a callback which runs in a different thread.

commit 7614cd0b299aa107a90efc1327136ba2e259cd56
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed Oct 11 15:03:29 2017 +0200

    Fold ParamterSymbol type conversions
    
    This folds any conversions made to parameter symbols, similarly to how we
    already fold literal symbols.

commit e4c124ba0218417a4c722e466104e693f43ce3bf
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Oct 11 15:31:20 2017 +0200

    fixes row column size definition of sys.shards queries
    
    the size of the outputs were falsely used as the row column size instead
    of the size of the collect symbols. this could lead to an
    ArrayOutOfBoundException if an collect projection changed the output
    size to 1 ( e.g. on insert-by-query).

commit a65b067e21a6fdcc7153d34050dfd8f545b981f0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 10 14:06:58 2017 +0200

    Remove ClusterService from TableInfo instances
    
    This changes the `getRouting` signature to also require a `ClusterState` and
    `OperationRouting` and in turn removes the `ClusterService` dependency
    from all `TableInfo` instances.
    
    This is a first step to make `getRouting` deterministic. Currently we've
    some complicated logic in the `RoutingBuilder` and in
    `Routing.mergeLocations` to "normalize" the used shards across
    relations in a join. By making `getRouting` deterministic we'll be able
    to remove that. Furthermore, externalizing the `state` dependency from
    the TableInfo is one more step towards a re-useable Analysis.

commit d4433f347d42732e9c45d10dad7c3ba4089935af
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 3 15:10:50 2017 +0200

    Re-add distributed nl-phase execution

commit 24d2a63692f199cf09a1161d095446319faf0fc8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 6 17:10:40 2017 +0200

    Remove a few Ignore annotations for fetch-propagation cases
    
    Late fetch propagation already works correctly in most cases.

commit cd00119d9ca7507c3029ba55bd502d5816cdb1f6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 6 16:38:59 2017 +0200

    Avoid unnecessarily collecting a _fetchId in certain cases

commit 850d3fe7474d720735ecd9fdd25e77fde93855aa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 29 17:00:03 2017 +0200

    Re-add join re-ordering optimization
    
    This adds back the join-ordering optimization which used to be part of
    the `ManyTableConsumer`. The ordering logic is now in the `JoinOrdering`
    class - this is pretty much 1:1 the old code, except that some unused
    logic regarding "pre-sorted" handling has been removed.

commit 88c64fca2979367452d52a71c002e73e30bd41bc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 29 14:48:19 2017 +0200

    Join-OP: Apply filters as early as possible

commit b8ba9a0f3b17d14fb3267f4edc5c20f960f5dbb1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 21 17:53:18 2017 +0200

    Add join, virtual table and fetch propagation handling to LogicalPlanner
    
    This removes all remaining Consumers and implements most of the
    functionality in LogicalPlan-operators.
    
    Things missing:
    
     - Join order optimization
     - Recursive/nested semi-join rewrite on
     - Early fetch in case of nested selects
    
    The fetch planning in general needs a bit of tuning. There are a couple
    of cases where the plans are now a bit worse. But it creates functional
    plans. We can improve from here.

commit 0a3ff119a948d7b6f104b90acb10ec4ebee03a49
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 28 23:17:57 2017 +0200

    Integrate group-by plan optimizations into LogicalPlan operator

commit f58b1a87962ed583d7d765956a91d9f1eea10cf9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 22 21:51:41 2017 +0200

    Add a GroupHashAggregate operator
    
    This replaces the DistributedGroupByConsumer. It will eventually also
    replace all other group by related consumers, but for now it doesn't
    optimize to non-distributed plans if possible or preferable.

commit 106e9c35ff2337f8090670d5592feac8cb0e3cb5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 19 14:46:13 2017 +0200

    Enable LogicalPlanner for all base tables
    
    This currently lacks the fetch-propagation optimization. This will be
    re-added once the LogicalPlanner is capable of planning selects on
    virtual tables.

commit ab99dfcebbf92762105ca08d5364dd1e19fe1898
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 19 14:17:31 2017 +0200

    Enable LogicalPlanner for simple selects on system tables

commit 49b78eb477be8d2e17e2a41c197938548a57ee59
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 19 11:53:08 2017 +0200

    Enable LogicalPlanner for aggregations on all base tables

commit ed8d56b8dfa877b82e1553a39fc392f21799860b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 18 13:52:30 2017 +0200

    Add LogicalPlan/LogicalPlanner for aggregates on base user tables
    
    This adds a new `LogicalPlan` and `LogicalPlanner` which should
    eventually replace the `ConsumingPlanner`.
    
    See the class documentation for a description of the `LogicalPlan` and
    `LogicalPlanner`.
    
    The goal here is to reduce the complexity that we currently have in the
    `ConsumingPlanner` due to a lot of repeating logic. Almost all consumers
    currently deal with limit and order by on their own. The consumers are
    not really composable.
    
    Although this commit already introduces a lot of operators which will be
    useable for all types of queries, it is only enabled for aggregations on
    base user table because functionality required for other queriees is
    still missing or incomplete.

commit b03e1382ffc44ae6bbe7c347099bfdf29d3fdcb2
Author: Michael Beer <michael@crate.io>
Date:   Mon Oct 9 17:38:14 2017 +0200

    introduce index setting `allocation.max_retry`
    
    Defines the number of attempts to allocate a shard before giving up and
    leaving the shard unallocated.

commit e929ee8a08df879e04201103ce0fc06c74583e45
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Oct 11 13:22:10 2017 +0200

    fixup! updated crash to 0.22.2

commit de0d580d8d80cfec1ddb6c619acab490e6cc0cab
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Oct 11 12:21:03 2017 +0200

    updated crash to 0.22.2

commit 5ed30cc964cac9c2b5112122163a5ce374413cec
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Sep 25 18:45:13 2017 +0200

    Introduce type precedence and type inference
    
    Type precedence during casting enables us to decide if parameters in expressions
    can be safely cast to another parameter's type. This is possible by assigning
    IDs to all the types which denote the rank of the types. Higher IDs denote
    higher precedence.
    
    All the casts in the ExpressionAnalyzer now follow the same
    pattern: When looking up a function, we use the FunctionResolver interface which
    may return new input types through the getSignature(List<DataType>) method. The
    analyzer can then cast the current arguments to match the types to the
    FunctionImplementation.
    
    The type matching works through the FuncParams class. Each FuncParams is
    composed of zero, one, or multiple Params which contain the valid types for the
    parameters. A Param can be passed to FuncParams multiple types to connect
    parameters with each other. For example, FuncParams.of(a, a, b) means that a is
    of the same type. This information allows us to improve type inference.
    
    The type inference works as follows. First, a Param is unbound. When arguments
    are passed, it becomes bound. When it is bound, it will try to convert an input
    to its current type, the input type, or one of the valid types provided for the
    Param. For example, if we first bind to Integer and we get a Long, we convert to
    Long; if we then get a String and String is a valid type, we will convert to
    String.
    
    Due to these type handling improvements, we can now avoid column casting. We
    cast Literal values but require explicit casts whenever two columns are compared
    which don't have a matching type. Column casts should generally be avoided
    because they can slow down Lucene queries. Type precedence always has preference
    when converting types but may be omitted if conversion can still be
    performed (i.e. column has lower precedence).

commit b70eda7cc66c5407d73b96de987453f05c1d2a77
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Oct 6 17:52:29 2017 +0200

    Upgraded ES to v5.6.2

commit ebf9f7e2ffe4fcd397f1dab1637c4744bc3ddb44
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Oct 5 18:44:12 2017 +0200

    Parse flags in RegexMatcher strictly
    
    The RegexMatcher would swallow unknown flags. With this patch the RegexMatcher
    will throw an error when parsing unknown flags.

commit dfbecf49f50bcf2d4f1d536687d7e7989c4e3764
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Tue Oct 10 11:28:08 2017 +0200

    update admin ui to version 1.6.3

commit 3f3bf41e94bf8ab501a8341d0c5660d633bfeedd
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Oct 4 22:09:41 2017 +0200

    fixed rowcount race condition in COPY FROM
    
    that could cause a wrong row count when inserting into a partition
    that does not exist yet

commit 053b62b86c6e887b86d1146c828aab318d91f474
Author: Maximilian Michels <mxm@apache.org>
Date:   Tue Oct 10 08:32:48 2017 +0200

    Bump version to 2.3.0-snapshot

commit d4aaeb5317fe3acbf4306c6d7c9587ea58f8e8ec
Author: Maximilian Michels <mxm@apache.org>
Date:   Tue Oct 10 11:12:18 2017 +0200

    Fix quotation of default schema in tests
    
    This will cause a parse exception if reserved keywords from the parser are used
    in the default schema.

commit 289c8da9778d4a29141a001701c2eeb3bfd1c8d5
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Oct 5 18:50:01 2017 +0200

    Support casts of inner type in SingleColumnTableType
    
    The type system requires data types to be able to convert non-matching types in
    the `value(...)` function.

commit f46ac25a4c8bdce472e798fda296c56704f2598e
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Sep 28 18:45:13 2017 +0200

    Print SSL on/off message only once
    
    Currently we print the SSL status for every new connection. This add noise to
    the log output without much added value.
    
    fixup! print ssl message only once

commit 6f75882d069b46409615d60ed0a691246b3a50c1
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Oct 9 14:32:10 2017 +0200

    Fixed issue with PID file already quoted with ".
    
    There is no need to append the PID to the file on our own since this is done
    by java ES code when the -Cpidfile setting is set.
    
    This is a regression caused by: 82b8c4243ecb2806d90979983382776887d0cfa1

commit 6b3069c7a113d74c0f3fed786e6a596f9795ea97
Author: Maximilian Michels <mxm@apache.org>
Date:   Fri Oct 6 12:21:09 2017 +0200

    Fix distributed join planning merge erasure
    
    It is not always safe to erase the right side merge.

commit 275d2bd870f8dbc3d70b8ca1b3e78ed80ddbadd2
Author: Michael Beer <michael@crate.io>
Date:   Fri Sep 29 16:15:41 2017 +0200

    adapt existing tests to use default schema
    
    the default schema will be randomized.

commit d0e6c1af6a093826d187a0c612e08f6c92618ab6
Author: Michael Beer <michael@crate.io>
Date:   Thu Sep 28 16:42:57 2017 +0200

    added custom annotation `UseRandomizedSession` to integrationtests
    
    If the test class/method contains a @UseRandomizedSession annotation a
    random schema name is generated and set as "default schema" on the
    `SqlTransportExecutor`. This will ensure that whithin this context
    (test method/class) every table that has no explicitly schema defined
    will set a generated schema name as default.

commit fe539793a70cd76a4d80333097d00c30cb6aad2f
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Sep 26 15:35:25 2017 +0200

    Added Cluster Check for tables that need recreation.
    
    This check is added to "catch" tables that are created before ES 5 (CrateDB < 2.0.0)
    and suggest to the user to recreate them so that they will be compatible with ES 6.
    The reason is that in ES 6 the backwards compatibility layer is removed, and in Lucene 7
    the bwc layer is moved to solr packages, so it quite some effort will be required to re-enable it on our own.
    Moreover by removing the bwc layer we will be able to use new more performant Lucene queries in some cases (eg. geo-queries).
    
    The TablesNeedUpgradeSysCheck will inform the user to run OPTIMIZE TABLE `table_ident` WITH (upgrade_segments=true)
    for all tables that are not in the current Lucene major version. Since Currently (ES 5.x) Lucene version is 6.x the
    check will "catch" tables that are created before ES 5.x (Lucene 5.x) but those tables are also "cought" by the TablesNeedRecreationSysCheck.
    Therefore there is no way we can have tables to trigger the TablesNeedUpgradeSysCheck and the relevant integ tests are marked
    with @Ignore and a TODO is added as a reminder to renable them after the upgrade to ES 6.

commit 2359887e830b3b539fadc3ecf829af52ad4ad991
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 3 13:51:56 2017 +0200

    Update psycopg2 to 2.7.3.1
    
    > The release 2.7.3.1 fixes psycopg2-wheels bug #2 which was in turn
    > caused by auditwheel bug #80, resulting in incompatibility with glibc
    > 2.26. The problem only affects Linux wheels users,

commit 82b8c4243ecb2806d90979983382776887d0cfa1
Author: turbo-ele <eliash@gmx.at>
Date:   Mon Oct 2 12:19:51 2017 +0200

    Fixed passing arguments that contain quotes in shell script.
    Until now it was not possible to pass arguments containing spaces such
    as e.g. cluster.name="Cluster Name"

commit d6d01252058bd61a17d175a81a61b63f9773c17f
Author: Michael Beer <michael@crate.io>
Date:   Mon Oct 2 21:03:03 2017 +0200

    add all concrete schemas to current available schemas
    
    This fixes a bug that caused a table that is not part of the "doc"
    schema to be unavailable/hidden if it gets closed using ``ALTER TABLE``

commit a725d8cf386db8619d4b24daa5887cec1f89a027
Author: Maximilian Michels <mxm@apache.org>
Date:   Fri Sep 29 11:36:53 2017 +0200

    Remove line length limit in Checkstyle 'LeftCurly' rule
    
    The 'LeftCurly' rule uses a 'maxLineLength' parameter. The latest version of the
    IntelliJ Checkstyle plugin seems to only accept this property when the
    LineLength module is activated.
    
    Since we don't enforce a line length, I'd suggest commenting out the rule for
    now.

commit e6391537a94ca9aa29ce496f63bbd2fc44b8f1ed
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 2 16:47:43 2017 +0200

    Change GroupBy plans to not collect scalar functions early
    
    A query like:
    
        select x + 10 from t group by x
    
    Resulted in a Plan as follows:
    
        toCollect:[add(x, 10), x]
        groupBy: IC{1}
        eval: add(IC{0}, 10)
    
    Therefore, it executed the scalar function once for each row, discarded
    the result, and run the scalar a second time after the group by
    operation.
    
    With these changes the plan that is being generated looks as follows:
    
        toCollect:[x]
        groupBy: IC{0}
        eval: add(IC{0}, 10)

commit be1c312396f80cf2b22dc2b97bd3af64e5866e15
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Sep 29 13:41:18 2017 +0200

    added upgrade notes (2.0.x) for boolean columns
    
    for tables that have been created with legacy crate version

commit 3891d402129f69648c548ab2a98a75387c0d4254
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 29 17:19:02 2017 +0200

    Migrate Routing from Streamable to Writeable

commit 99b27c582559b8f6d511d9894808f9796fa0003f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 29 17:06:02 2017 +0200

    Simplify numShards and containsShards implementations in Routing
    
    Removes the `isEmpty` checks, as they're kinda redundant and don't
    necessarily improve performance.

commit 60df28dcf1a72c08c8fabe7e0efafead6d4ef539
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 29 16:50:59 2017 +0200

    Remove unused numShards field from Routing

commit 52cd8bc891b14f6dba940aa2d8c4744d9205944c
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Sep 29 15:29:34 2017 +0200

    Point to new ES commit which improves error msg for unknown setting.

commit 49724bcd2b95f7a6833a8ccdf7ecf47a492357d3
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Fri Sep 29 12:52:52 2017 +0200

    update blob path

commit 85790d9e67a2aea8c7215af816bad9828804a3da
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Sep 29 10:49:46 2017 +0200

    Revert "Fixed: Error thrown preventing bootstrap when `ingestion.mqtt.enabled` is defined and `license.enterprise`=false"
    
    This reverts commit 77f2d5b6e1f8fe05c6bcbeabee6f79cb8f39032b.
    This solution "breaks" the complete isolation of the MQTT as a plugin,
    instead the error message for the missing setting(s) will be improved.

commit cccbf0d7f2af20254004749c9d1e9af7802a67ab
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 26 22:14:07 2017 +0200

    Update gradle to 4.2

commit 77f2d5b6e1f8fe05c6bcbeabee6f79cb8f39032b
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Sep 27 13:27:08 2017 +0200

    Fixed: Error thrown preventing bootstrap when `ingestion.mqtt.enabled` is defined and `license.enterprise`=false
    
    MQTT settings were only registered if `license.enterprise` = true so ES is complaining for unknown settings.
    Moved MQTT settings to a separate class MqttSettings in `sql` module and always register them even if MqttModule
    is not loaded.

commit 473bd7359ed0a42411bca9e0cca64c9091b7ce7e
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Sep 27 12:53:55 2017 +0200

    Make settings classes final & prevent instantiation

commit bc0741a9126ed6d747e6cb353e0cb0721f4c5711
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed Sep 20 12:51:07 2017 +0200

    add examples to column policy docs

commit 74d03c0f91dbb78518d11ff302006c901709ddb5
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Sep 26 18:15:50 2017 +0200

    remove exception for expression::type syntax

commit a0345d9773a3dfe7ccfc86bae605b22914591052
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Sep 25 15:48:01 2017 +0100

    Reuse the MergePhase ramAccountingContext in the RoutedCollectPhase.
    
    The merge phase creates a RamAccountingContext and a ProjectingBatchConsumer
    that will use it to track the consumed rows.
    In case the upstream is on the same mode, during the merge phase, we do not
    register any execution context using the newly created ProjectingBatchConsumer,
    but we register the consumer with the PreparerContext for a later phase to pick
    it up and use it as part of an execution context.
    
    In the case of the RoutedCollectPhase, a new RamAccountingContext was created and
    that *new* context was passed in the execution context for tracking (the execution
    context would close the RamAccountingContext during the cleanup phase which is
    essential in order to decrement the tracked bytes in the underlying circuit breaker),
    while the RamAccountingContext created in the merge phase would've been used in the
    ProjectingBatchConsumer but never closed (meaning the accummulated bytes would've never
    been substracted in the underlying ciruit breaker).
    
    This commit has the MergePhase register the RamAccoutingContext it creates along with
    the ProjectingBatchConsumer in the PreparerContext and the RoutedCollectPhase will use
    both if present (in case no RamAccountingContext is found in the PreparerContext, a
    new one is created)

commit 2a74247a5d0a83635cb22476b4dd8ae359c0d635
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Tue Sep 26 14:22:06 2017 +0200

    upgrade admin ui to 1.6.2

commit babfee2112ada769c2eab2f9008825d5c4f20408
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Tue Sep 26 09:33:21 2017 +0200

    update downloadAdminUI task to download nightly admin ui

commit 7c778c569f4c83d228da5565ceb1d210ee848984
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 25 13:50:09 2017 +0200

    Add whereClause to EXPLAIN output in CollectPhase

commit 4d62e407ec15d4058c72ba82aba8f7bc895e91aa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 21 11:28:25 2017 +0200

    Tweak Plan.addProjection API
    
    This should make the addProjection method a bit clearer and easier to
    use.

commit 326583e4c8ea3786cf50c185aa8027c90c1ae932
Author: Marios Trivyzas <marios@crate.io>
Date:   Sat Sep 23 00:56:11 2017 +0200

    Remove index.translog.flush_threshold_period setting from docs.
    
    The setting has been remove with ES 5 upgrade and the removal is
    already included in the 2.0.0 Breaking Changes.

commit 20fefcf7d8272bdcb6f3e46146f8a1cbe69beb4e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 19 22:11:50 2017 +0200

    Tests: Improve executeWith assertion message
    
    Example output:
    
        java.lang.AssertionError: The query:
                select id from t where id = ANY(select id from t order by id asc)
        with session statements: [set semi_joins = true] must produce correct result
        Expected: same output "1\n2\n3\n"
            but: printedTable was "1\n3\n"

commit 2e347f61caa91782b0dc8904e98196f53a7f2a6a
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Jul 18 16:20:55 2017 +0200

    add note about archiving docs

commit 0051f34f850cf0b035212892d5187527f4631094
Author: Christian Bader <christian.bader@crate.io>
Date:   Tue Sep 19 13:45:59 2017 +0200

    Version bump (2.2.1-SNAPSHOT)

commit 04be6bc4b2f1fbcb195691446fdc5d2dcb1cbe5f
Author: Christian Bader <christian.bader@crate.io>
Date:   Tue Sep 19 11:09:08 2017 +0200

    Prepare 2.2.0 release

commit 1def78ffae67566a9de637eccd8f6626eead7369
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Sep 12 17:43:58 2017 +0200

    move node.foo style config to node.attr.foo

commit 166c713ff6de71411a4837a17986d894ac2cb2bc
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Sep 18 21:20:43 2017 +0200

    Fixed NullOperators test with random DataTypes.
    
    The issue was that in case of an ObjectType if then GeoShapeType was selected for the value
    to insert, the Map representing the GeoShape was Immutable causing ValueNormalizer to fail.

commit 8c5ebb6ed9526a219409d31ac9a728d35c08a6e1
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Mon Sep 18 16:24:02 2017 +0200

    remove hint from documentation

commit 49782067227a0eefc632a7bf7c415ff2291da42d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 18 16:17:55 2017 +0200

    Replace Optionals in QuerySpec with nullable references
    
    See https://github.com/crate/crate/pull/6288

commit 8a39be37cdd55a829b56f35337da8fb9a57b266a
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Sep 18 12:38:52 2017 +0200

    Fix default schema handling during ingestion rule creation

commit 276c50420f97229023e44dc51618dc38117cb127
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Mon Sep 18 11:06:38 2017 +0200

    update admin-ui to 1.6.0

commit a8e6e4956834c7a37526b4313427c507c08d12c7
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Sep 18 10:53:23 2017 +0100

    Avoid test failures caused by trying to disconnect a disconnected mqtt client.

commit c648b654d6bc5034b7e6779a9f53f84808215537
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Mon Sep 18 09:48:37 2017 +0200

    fixup! change log

commit 454e985fc88b483ca788ac6dbacbf5c323793eee
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Mon Sep 18 09:32:30 2017 +0200

    update admin ui to 1.5.3

commit c7b04528765b71565e3a4ecef792c3544d88757f
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Sep 13 16:47:36 2017 +0200

    allow IPv6 addresses for IP column type

commit a4b3fb59f85655aa655d7eeab68980ee8e7c948c
Author: Andrei Dan <andrei@crate.io>
Date:   Fri Sep 15 14:52:39 2017 +0100

    Blob indices module is available only on data nodes.

commit f0d5bc332f65a9bb19c21c62b160199aa89b37b4
Author: Marios Trivyzas <marios@crate.io>
Date:   Sun Jun 18 20:55:04 2017 +0200

    Upgrade gradle to 4.1

commit 9cb98172ee1aad0d744f68edc85c4e4adafdb325
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Sep 12 17:29:00 2017 +0200

    Added @UseSemiJoins annotation to randomize semi-joins in tests.

commit a6f4f61758a384b27e3a737095f8b642bbc635c6
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Sep 14 19:54:25 2017 +0200

    Refactor UseJdbc randomization for better clarity and slight perf improvement..
    
     - Avoid parsing StackTrace elements.
     - Avoid using reflection to get test Class.

commit bfa092e1a71c1fc8d2744944a254f326c08017ef
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Sep 12 14:04:30 2017 +0100

    SSL support for the mqtt socket.
    Factory utility for creating netty channel server bootstraps.
    Mqtt dependency doesn't leak into other modules.

commit 1942f6eaaec206571538e527caa912e00eda855d
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Sep 11 09:58:07 2017 +0100

    Document new configuration to enable ssl for ingesting via mqtt.

commit cc5fa1d3a07e402f985748466690103f0ff52ba7
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Sep 14 17:08:25 2017 +0200

    fixed documentation of translog.durability table setting

commit b3d464150ae62b917cdd03e0581cb9cf0cedd4f2
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Sep 14 19:52:31 2017 +0200

    Fixed typo in SQL query

commit 792d4ff0fc9070b511d67a90d5328851b1cf7327
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed Sep 13 21:08:43 2017 +0200

    fix up headings and add tocs

commit f0200189dc121948184ba4773a24816441c03eb1
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Sep 14 10:59:34 2017 +0200

    Replace deprecated TransportDeleteAction with TransportShardDeleteAction

commit 04257ecda4feba06e3869eb4d02f81607f75d1fe
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Sep 14 10:57:23 2017 +0200

    Fix deprecation warnings by using alternative method signatures

commit 52b4bb7da2838be37aec6e9ddf570adbeceace8c
Author: Christian Bader <christian.bader@crate.io>
Date:   Thu Sep 14 11:39:52 2017 +0200

    Reflect 2.1.7 Release

commit 36c9710af081e57e2ec36bde55c9a13178f897b1
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Sep 14 10:04:17 2017 +0100

    Remove usages of unused "node.client" setting from code.

commit 718d392584467220164028f4c141b3b59ad9b637
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Sep 13 22:37:00 2017 +0200

    Enable Xlint deprecation/unchecked in gradle builds

commit 7867167072f674573a3694ed949321cf93b2f908
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Sep 12 19:47:35 2017 +0200

    minor improvement for schema docs

commit a40a001b0dca178bbc0cc1e707e26525691d42ac
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Sep 12 19:12:50 2017 +0200

    Invert usage of @UseJdbc
    
    Apply to superclass `SQLTransportIntegrationTest` of integration tests
    and override where necessary.

commit 6289817497d675a49ca1c309faeec37254690182
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Sep 11 17:31:06 2017 +0300

    Added anti-join rewrite for NOT ANY (subquery).

commit 9f228cf83f40c0882e4b158051af75836b871e59
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Aug 17 15:57:19 2017 +0300

    Implemented AntiJoinBatchIterator

commit bd14aa34ae7d043c8389dfaea2b640c6742658f9
Author: Maximilian Michels <mxm@apache.org>
Date:   Tue Sep 12 15:34:00 2017 +0200

    Move change entry to breaking changes

commit 72af062abeeb780edeba5967046753b1d9fbf4ba
Author: Maximilian Michels <mxm@apache.org>
Date:   Fri Sep 8 16:31:39 2017 +0200

    Fold constant expressions early in ExpressionAnalyzer
    
    This folds deterministic function calls which only contain literals already in
    the `ExpressionAnalyzer`. This is a preparation for an overhaul of our type
    precedence system. We want to normalize constant expressions early on in the
    `ExpressionAnalyzer` to be able to return placeholder values which can return
    various types depending on the type desired by the enclosing expression. This
    enables us to simplify the type system (avoid casts) while keeping accuracy of
    the folded values.

commit 5a36bdc16f3329f600a9a1c212c999349f458004
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon Sep 11 17:58:15 2017 +0200

    copy notice

commit 9d4087b0360df28f3efe6449475add9ef7926420
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Sep 5 20:07:18 2017 +0200

    improve intro

commit c0a1e2248c5de619a262984b086dd1f9328778bf
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Sep 5 20:10:03 2017 +0200

    improve index pages

commit 9461db9aab35649de6387874c6fa96716439ece0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 11 10:25:37 2017 +0200

    Remove ordering overhead when parsing source to map
    
    We don't require the source to be sorted.
    In some other code paths the source was already created unordered, so
    this change makes it more consistent and removes a bit of overhead.

commit 03657717ec9012dd9abd18e0bc156caa5f8f57ba
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 8 17:34:51 2017 +0200

    Remove content type detection in some places
    
     - We currently always write the source as JSON, so there is no need for
     the content-type detection when it's read again.
    
     - COPY FROM format is documented as JSON (lines). Therefore the
     content-type detection is also not needed.
    
     - The `convertToMap` overload that does content-type detection has been
     marked as deprecated.

commit 9e0146efa9276941b1fde9a94c3fe094d3461f07
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Sep 7 15:34:42 2017 +0200

    Run Checkstyle plugin on compile and adjust code style
    
    This runs the Checkstyle plugin after the 'compileJava' Gradle task. The rules
    are located in 'gradle/checkstyle/rules.xml'. The Checkstyle configuration is
    located in 'gradle/javaModule.gradle'. The rules resemble a slightly less strict
    version of the Google Java code style.
    
    The code has been adapted to comply with the rules. For now, the changes only
    affect the main source scope (no testing code). IntelliJ and other IDEs have
    plugins to integrate the checks while coding which is quite useful.

commit fcab1e4009fa4188512a14ba4f60b4786ca92edb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 8 15:59:48 2017 +0200

    Remove usage of deprecated `Version.smallest`

commit 3111f057061ae19bdd1be23fa119a815e5d9864d
Author: Andrei Dan <andrei@crate.io>
Date:   Fri Sep 8 12:58:27 2017 +0100

    Added MQTT ingestion source (using the IngestionService) as an enterprise feature.

commit 48a3dac05a829c4b1593e1fa92b1d82292bc2099
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Sep 4 11:17:03 2017 +0100

    Generic ingestion configuration via the ingestion rules and IngestionService

commit 2c90f829657732ce61bb27b13a3aca225c5400cd
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Sep 7 16:44:07 2017 +0300

    Added missing @Override

commit 336a32579cf912f59eed1e2b44c0ad79eb0f244a
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Sep 7 16:42:52 2017 +0300

    Add Join type of NestedLoopPhase for EXPLAIN print out

commit 21fcd58529ddd36e5a2369c03c2cbaf7cdd0fdbf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 5 13:32:59 2017 +0200

    Replace ShardSchema & ShardTable expression
    
    Micro optimization: IndexParts is now only created once instead of
    twice, and this get's rid of two classes.

commit fe068f2aceaa43fec66e75fd630a4d117fceb245
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Sep 6 16:02:09 2017 +0300

    Fixed: Wrong plan created for global aggregations with ``JOINs`` on virtual tables.
    
    Limit was removed from relations of MSS even if those relations were Sub-selects.
    Instead extra check is added to not push down LIMIT to the source relations of MSS in the first place.

commit 6b699b2e5c3f09a9e19d8ea25484af3f9a4e4bc1
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Sep 5 20:30:59 2017 +0200

    clarify what the routing column is

commit 09b22a80296b76e0452a66ec6622566b4c1d2591
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Sep 5 18:40:19 2017 +0200

    fix config index

commit 6ea4237692d13cfb8c258b48b7d75e24c218aa7c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 4 17:03:22 2017 +0200

    Improve DocTableInfo java docs

commit ced1988c8cb2f285f5cb8b18e793068d558a3f94
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 5 16:58:32 2017 +0200

    Add PageBucketReceiver docs and remove bucketIdx TODO

commit 85dcd770e7432b146aae566b080ac62c209f68e0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 5 14:38:35 2017 +0200

    Upgrade netty to 4.1.15

commit 9bfe02af7c04790e551fd28443cc4884fe1a44ca
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 5 11:06:25 2017 +0200

    Move all cluster-ref related bindings to SysClusterExpressionModule

commit e8a9654aa99b048b41fbb58b23e2b49156abb5ef
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 5 11:00:33 2017 +0200

    Remove unused MapBinder definition from SysNodeExpressionModule

commit 6973f3f60cd15e1b281e87917228499c47dd3b5e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 5 14:19:34 2017 +0200

    Add some more analyzer/planner benchmarks

commit 741288f4789f52ad3268b9c7cbd6ddf42ca422fb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 5 14:03:11 2017 +0200

    Update JMH to 1.19

commit aadf570e8b2e071bc69e44b264170abee428eac0
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Sep 5 15:29:15 2017 +0200

    add note about single node use

commit 9ebffaa6bae2c2917496ddc29feac7937fcfdd37
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Fri Sep 1 15:33:09 2017 +0200

    fold overview into index page, plus light edits

commit b1837baae70ed083b995d12f0d5e9ee24b7c8cb6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 4 12:06:21 2017 +0200

    Correct mapping generation for generated cols of type array

commit 91fc7a8eb08f4417926a15c4bc09baaadae793de
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon Sep 4 18:06:04 2017 +0200

    standardize enterprise feature notices

commit db1de0e0e0fb90f3b65a678f8a4d02c2bb477dbb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 4 15:15:51 2017 +0200

    SemiJoins: Use a separate data structure for the rewrite candidates
    
    In order to avoid re-resolving the SelectSymbol and the not-null
    assertions.

commit ecd70148181910dd3b53277099fc7884aae121d9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 29 11:57:32 2017 +0200

    Support semi join rewrite with multiple IN expressions

commit f8685c749b86e7711a0bbef1e835993f8abd8a0d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 4 09:50:51 2017 +0200

    Run some tests with semi join rewrite enabled

commit 36eee0972041226847b632ffed73f2dc163c4f4c
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed Aug 23 12:36:40 2017 +0200

    Add SessionContext flag to enable semi joins
    
    This disables semi joins by default and introduces a flag to enable semi joins
    on a per-session base.

commit f265d54aa5488090f3de1573b8d9d32126b18ec6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 17 11:57:56 2017 +0200

    Add initial semi-join rewrite for `op ANY sub-select`
    
    For now this is a bit limited. The rewrite is only done if:
    
     - The root relation is a simple select from a single table
     - Only one ANY or IN expression is in the WHERE clause
     - The column used in the ANY or IN expression must also appear in the
     select list of the root relation
    
    Furthermore, the performance will actually decrease significantly for a
    lot of cases. The rewrite is only results in a better execution
    strategy if the subquery resultset is huge and would lead to memory
    issues with a two-phase execution.

commit c56c648ba69e263259853e01ba506719054db92e
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Aug 17 14:19:54 2017 +0300

    Added new JoinType SEMI

commit 0725d4f8b253c0cc77e8647ccda38d622f7eb8e5
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Aug 16 21:13:17 2017 +0300

    Implemented SemiJoinBatchIterator

commit 3eb1fc76f19bc3a68e35996cedb8060479ad0332
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Fri Sep 1 15:58:07 2017 +0200

    fix syntax error

commit d816294bd3feccbfd7fb5d745315499b939095b4
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Fri Sep 1 15:58:07 2017 +0200

    don't pin theme to a specific version

commit b092ba16685864de280990b56bd107a1face247e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 1 14:51:01 2017 +0200

    Do not propagate outputs used in JOIN conditions unnecessarily
    
    This changes the `ManyTableConsumer` so that it doesn't add fields used
    in a join-condition to the output of a `TwoTableJoin` if it's already
    consumed at the *current* level.
    
    This is necessary to support to SEMI JOINS which cannot contain any
    outputs from the right relation.

commit e70164f42c77e48c880f47c3de86fb6c0933191a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 31 14:35:59 2017 +0200

    Remove RemainingOrderBy from MultiSourceSelect and TwoTableJoin
    
    `RemainingOrderBy` was a bit confusing as it replicated the information
    also available in `QuerySpec.orderBy`
    In most cases the two were interchangeable, but sometimes they weren't.
    
    This commit removes `RemainingOrderBy` to avoid confusion. It therefore
    causes a slight change in the semantics in the planning of joins with
    more than 2 relations.
    
     - The ORDER BY is no longer *replicated* to a sub-relation, but instead
     it is *moved*, but ONLY if it affects a single relation that happens to
     be the first relation. In all other cases the ORDER BY needs to be
     applied after the JOIN to produce the correct results.
    
     - The ORDER BY no longer forces the order of how the relations are
     joined, unless it was moved to the sub-relation.
    
    As a side effect in most cases the relations are now more often joined
    in the order as they appear in the original statement.
    
    But overall this should actually give the `ManyTableConsumer` more
    freedom in arranging the relations.

commit 89da58a73e9f1385cdb494e6cc56488aa7bb7129
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed Aug 30 17:58:02 2017 +0200

    Delegate index name parsing to IndexParts class
    
    This change moves all index parsing functionality to `IndexParts` from where
    data structures for further use of the index name can be created.
    
    This avoids to have the logic for parsing index names in multiple places.

commit c3fa24733a400e5a4fbde64c1d656890583dbda8
Author: Maximilian Michels <mxm@apache.org>
Date:   Tue Aug 29 09:25:22 2017 +0200

    Improvements to default schema handling
    
    - rename DEFAULT_SCHEMA_NAME to DOC_SCHEMA_NAME
    - unify Schema extraction from index name in `Schemas`
    - hide Schema regexp pattern
    - Get rid of null schema in `TableIdent`, `PartitionName`, `RelationUnknownException`, and others
    - pass in current default schema to the `ShowStatementAnalyzer`

commit 84a5e870598faab5ec542e76914772f539f35597
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Thu Aug 31 21:54:49 2017 +0200

    fix up cli docs

commit 718d6fc005f854923a1d8151c73add0dae86e0e0
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Aug 31 17:49:12 2017 +0200

    Adapt ShardMinLuceneVersionExpression to new exception type
    
    The exception type has been changed upstream from ES' EngineClosedException
    to Lucene's AlreadyClosedException.

commit 52b67c8e02c1b811ebb74fa6c29fdb327dd56063
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 31 11:24:09 2017 +0200

    Simplify twoTableJoin remainingOrderBy computation
    
    In a join with two tables the `mss.remainingOrderBy` must always be
    valid for both relations involved, so the extra logic that was there
    isn't necessary.

commit 0a7c65295fbeafb5a8f6ad9ee60b9e24b3d7ba83
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 31 11:21:32 2017 +0200

    Remove outer-join order-by pruning
    
    This removes `removeOrderByOnOuterRelation` from the
    TwoTableJoin-building logic. It ways always a no-op because a while ago
    the RelationSplitter was changed to no longer push-down the orderBy to
    sub-relations if an outer join is involved.

commit 6a6640bdebab645a2483be181a2209db32232778
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Thu Aug 31 21:29:02 2017 +0200

    correct shards section

commit 2a7619ee4b3b70c41dac1f603b76903d9e3bbcd6
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Thu Aug 31 21:44:01 2017 +0200

    minor edits

commit d6767a33729f7c4b8d29267e4324a26b241b799d
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed Aug 30 19:13:17 2017 +0200

    drop text index

commit c1e87a17362ab3caa48e970df18bdc391489e619
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed Aug 30 21:07:12 2017 +0200

    split release notes index into minor versions

commit 23d81f135b12f66de2c36a21956cff162bebf31f
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed Aug 30 20:43:54 2017 +0200

    link to release notes

commit 15aac2a14a080ddd9873fec0f071a5e40798c4b7
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed Aug 30 21:28:23 2017 +0200

    add intro to release notes

commit 2d8584dd2196546a64cf615051a8d7748b614b64
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed Aug 30 12:25:37 2017 +0200

    Fix default schema handling in PrivilegesAnalyzer
    
    This allows to use GRANT/DENY/REVOKE when a schema different from `doc` is set
    and the schema is not specified in the statement. For example:
    
    `GRANT DQL on tableName to userName`
    
    Before, this would always use the `doc` schema.

commit 50b4bcdb1f0fa3239f3489b307df15af7633b1d2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 30 14:19:19 2017 +0200

    Planner: Don't add join condition fields to QS outputs in aggregates on join
    
    They're not required and it would otherwise break semi joins. They don't
    support outputs from the right relation.

commit e44435af9a4425212c6f946c2247bcae06cbb01c
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed Aug 30 19:49:59 2017 +0200

    split monolithic config docs into separate files

commit 439a1ab5a59abf9b5e16f9b230b0bf5620eb4656
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed Aug 30 18:35:44 2017 +0200

    link through to sharding guide

commit 46e1b1f4138f6eb4de9e337da2049eb1fd674ab4
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Aug 29 22:00:42 2017 +0200

    edit ssl.http.enabled docs

commit a69f8a49b9f18b87c05e82181fd6913d7f519227
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 30 15:08:40 2017 +0200

    Fix `Iterator is not on a Row` error in NestedLoopOperation

commit 48c642c852677f1e78296fb085399629ad56643b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 29 13:30:36 2017 +0200

    Clean up JoinPairs API
    
     - The `consume` logic of `ofRelationsWithMergedConditions` was broken:
       It didn't work if the joinPair was reversed.
       This could lead to fields used in the join-condition being added to
       the output of a nested loop, even if the fields were otherwise not
       used.
    
     - The method signatures were a bit confusing.
    
     - Removed the conjunction of the join condition. There is no reason to
       turn the join condition to `R1.id = R2.id and R1.id = R2.id`

commit 5e0430696dfa465102177226675b17d822c14f95
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Tue Aug 29 14:50:57 2017 +0200

    update admin ui to 1.5.2

commit 85156ded5f57d7625441633d1f2613036ec0fcc7
Author: Christian Bader <christian.bader@crate.io>
Date:   Tue Aug 29 11:46:42 2017 +0200

    Reflect 2.1.6 Release

commit be38397f7e313760074a70cf63934c4737007e98
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 28 16:23:50 2017 +0200

    Don't apply "no-op" filter in sys-rows generation
    
    The `rows` Iterable is now no longer wrapped in a `Iterables.filter` if
    the `WhereClause` is `matchAll`.

commit 34b0b6024ee7cdf955604668dc4dcaaac4f4b21a
Author: Michael Beer <michael@crate.io>
Date:   Mon Aug 28 15:53:01 2017 +0200

    enhance integration tests for nested subquery expressions

commit 349746979c53e7f54b708658ca1f86736ea19921
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Aug 28 15:23:17 2017 +0200

    Remove whitespace in PSQL command tags

commit 51516ebd1e7e5871cec971c0d02de3a2cf5180d1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 28 11:49:03 2017 +0200

    Don't add columns used in join conditions to NL-outputs
    
    Fields which are used in a join-condition are not required for a merge.
    So they don't have to be added to the MSS outputs.
    
    (This otherwise causes problems with a SEMI-JOIN, as fields from the
    right table might get added to the outputs)

commit 1ad4b207d137c59e97b4a5e9e1bbd4a632d4afd2
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Aug 23 23:10:33 2017 +0300

    Upgraded ES to v5.5.2

commit 546396d247318824e7b16fe6224f6f0edab19ac2
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Aug 28 11:19:22 2017 +0200

    Always pass in default schema instead of null
    
    This removes the code places which set the default schema to 'doc' if a null
    schema is given as input. Instead, we pass through the current default schema
    from the `SessionContext`.

commit 4544290f7db7949c435edc3c91b0d208e3c61ab7
Author: Michael Beer <michael@crate.io>
Date:   Fri Aug 25 11:11:00 2017 +0200

    Add provision of database user to Upgrade Notes

commit e28015791b9f8379abc59bc8893860598f42fc43
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon Aug 21 18:28:02 2017 +0200

    improve install reference

commit 197686eb4ccad138dc14d75c3ab9066a617016ab
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Aug 24 18:14:41 2017 +0200

    Prevent global use of SessionContext
    
    The session should always be bound to a specific session instance or
    otherwise passed on manually. This ensures that we don't use the SessionContext
    as a globally modifiable session which might introduce bugs in production and
    concurrency issues during testing.

commit 7917c5964ec9b06b8339b0c67707efa7faf0a6fa
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Aug 24 09:04:41 2017 +0200

    fixes doctests, drop table where it was created

commit ad48078b6d758ee05c813ce9d7c504032c135a3a
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Wed Aug 23 16:52:12 2017 +0200

    update admin-ui to 1.5.1

commit bc0b94a7c69eb217341562c0aae2c03f049d432c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 23 14:50:53 2017 +0200

    Make arguments of Function symbol immutable
    
    See e4ef2036ffc02292b8ed9f80a01169742d307642 for the reasons.

commit 56a0dc0c7111b8b0c74d7220990ead48305a09bf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 23 15:18:47 2017 +0200

    Remove some unused declarations

commit bff44d2f957d4bfa6a87e128e59748265faf6e10
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 23 10:36:02 2017 +0200

    Fix PreExecutionBenchmark setup

commit 697c84561a8c9c83a19c7e50d88a649769d98c75
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 23 14:01:29 2017 +0200

    Replace QuerySplittingVisitor with QuerySplitter
    
    The QuerySplittingVisitor mutated the functions and basically did the
    same thing as the QuerySplitter does.

commit b78194b1b87d4d2712d3a542e3f96e04e7e14a7c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 23 11:53:53 2017 +0200

    Remove `normalizeInplace` usage from RoutedCollectPhase
    
    Function should become immutable - `normalizeInplace` mutated the
    arguments.

commit 103745e3351a73a33ab2584e1ed3e6f275a233da
Author: Michael Beer <michael@crate.io>
Date:   Tue Aug 22 18:12:08 2017 +0200

    Do not stack MultiExceptions
    
    MultiExceptions get flattened instead of stacking them. This should
    be more memory efficient.

commit 927b22cac331095ee0bea79feb5c8ed074a8df27
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 22 16:16:31 2017 +0200

    Remove ReplaceMode; Merge FunctionCopyVisitor & ReplacingSymbolVisitor

commit 8a201256c482dc43e13e8ea768818ba2339578bf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 22 16:02:26 2017 +0200

    Reduce usage of ReplaceMode.MUTATE

commit e8aec43efb3f1ebdf5dd2e297340d2ddf8fd6375
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 22 15:42:45 2017 +0200

    Change MappingSymbolVisitor to only support COPY mode

commit bb681dc3df2f1f87d0c3b315fd7b24d7db17a8d1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 22 15:27:43 2017 +0200

    Mark ReplaceMode.MUTATE as deprecated
    
    Function symbol should become immutable. So it's no longer feasible to
    have a MUTATE ReplaceMode.

commit dedd37b61ec7b9057c37dd1e5b9e94281a42a29f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 22 15:03:41 2017 +0200

    Force usage of COPY EvaluatingNormalizer for function evaluation

commit dd53e5d11cf06d18b6f085bcec46bebc9826a045
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 22 14:53:57 2017 +0200

    Remove Function.setArgument

commit ec1eef095985a2e25aba54cb7f8221e47574896a
Author: Michael Beer <michael@crate.io>
Date:   Fri Aug 18 14:49:31 2017 +0200

    introduce section for supported array comparisons
    
    this will include a new section in "function and operators" that describe the
    functionality and syntax of the supported array comparison operations.

commit aef152bdb84f62763747e01f5dbf49b22345b0c0
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon Aug 21 20:38:47 2017 +0200

    fixup! cross reference the crate guide

commit 1d7b3e0addcde9622ff144bbf026a0709c9bdbb1
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon Aug 21 18:52:35 2017 +0200

    fixup! cross reference the crate guide

commit d250f7a492dfc0b91fa3d9891d2d7d4ee22480ac
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon Aug 21 18:50:21 2017 +0200

    cross reference the crate guide

commit e4ef2036ffc02292b8ed9f80a01169742d307642
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 22 13:51:04 2017 +0200

    Change VersionRewriter to no longer mutate the query function
    
    This also marks `Function#setArgument` as deprecated.
    The goal is to eventually make `Function` fully immutable.
    
    There are a couple of reasons why `Function` should become immutable:
    
     - It's a frequent source of bugs - our planner is currently a minefield
     because often unexpected mutations happen.
    
     - At some point we should be able to re-use the analysis for prepared
     statements. This is unsafe if the structure is mutable.
    
     - If we eventually introduce cost-based planning we probably need to be
     able to invoke different "sub-planners" on the same analysis structure.
     For that to work the analysis structure should be immutable.
    
     - Performance is a non-issue. Depending on the size of the function
     trees we're dealing with we're talking about a couple hundred ns at
     most. Furthermore, if we keep it mutable we'll have to create defensive
     copies which actually add more overhead.

commit d28de90c718b856091a2b15acb2d7deb705ecf05
Author: turbo-ele <eliash@gmx.at>
Date:   Mon Aug 14 10:30:47 2017 +0200

    Added cluster node check about cluster name folder in path.data directory.
    Also added documentation about the changes in the effective data storage path
    that takes effect since version 2.0.

commit a55449eea4ad820ab1ec494d4eb55a23b4a9247b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 21 14:01:58 2017 +0200

    Make WhereClause#replace semantics consistent with new WhereClause instances
    
    Before:
    
        new WhereClause(Literal.BOOLEAN_TRUE)          -> hasQuery=false, noMatch=false
        whereClause.replace(s -> Literal.BOOLEAN_TRUE) -> hasQuery=true,  noMatch=false
    
    Now:
    
        new WhereClause(Literal.BOOLEAN_TRUE)          -> hasQuery=false, noMatch=false
        whereClause.replace(s -> Literal.BOOLEAN_TRUE) -> hasQuery=false, noMatch=false

commit 61c88d505885d251b8f34ec3eca70dd29b0b83d3
Author: turbo-ele <eliash@gmx.at>
Date:   Mon Aug 21 14:26:20 2017 +0200

    Added release notes for increased syntax strictness when creating/adding columns

commit 0c5d9559e8776fee69f640a87ec2e92d8d2f65ea
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Aug 21 13:00:20 2017 +0200

    Fix issue with loading 'path.logs' from config file
    
    - load 'path.logs' correctly
    - refactor config loading to simplify default value loading
    - add test case to ensure config values are loaded

commit d322689a7985922eb9b930c9ce9dabbc7f88886e
Author: Maximilian Michels <mxm@apache.org>
Date:   Fri Aug 18 14:44:14 2017 +0200

    Remove explicit casts to ArrayType in ExpressionAnalyzer
    
    Expressions allowing `CollectionType` shouldn't assume `ArrayType` as
    input. When casting, they should only cast the inner type but leave the outer
    type unchanged.

commit a974755e3b017fef2b4bd4739667222ebf87dc7f
Author: Michael Beer <michael@crate.io>
Date:   Mon Aug 21 17:12:54 2017 +0200

    fixup! upgrade Crash to 0.22.1

commit 1d86c1a45e41b78eb901e7a6ed333af32877a0fd
Author: Michael Beer <michael@crate.io>
Date:   Mon Aug 21 17:03:20 2017 +0200

    upgrade Crash to 0.22.1
    
    revert multiline table header support in Crash

commit b3c78f4c5e72ef8ab65d2404b6f1ae638cf60463
Author: Michael Beer <michael@crate.io>
Date:   Mon Aug 21 15:56:03 2017 +0200

    update Crash to version 0.22.0

commit bb1ce1496af6eed314929cc8db3f979773ba5e37
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Aug 21 13:26:37 2017 +0100

    The representation of simple expressions was surrounded by redundant parenthesis eg. (1=1)
    This commit removes the outer most parenthesis of expressions.

commit 863997cb2475cc9bc92b8c7a6bfd5bbc29cafc03
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Aug 17 16:02:47 2017 +0200

    Make ANY and IN expressions behave consistently
    
    This gets rid of the subtle differences between ANY and IN
    operators. Expressions of the form `expression IN (expression1, expression2, ...)`
    now have the same result as `expression = ANY([expression1, expression2, ...])`.

commit 8f6ab5f28cb6ab8265c0f3a26318fc226e96861f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 18 17:00:35 2017 +0200

    Remove intermediate Context class from EvaluatingNormalizer
    
    Can be removed as the TransactionContext which it wrapped can be used
    directly.

commit 7cac08be1e4d0c34190cbd41a4105263e692011c
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Aug 18 16:29:49 2017 +0300

    Upgrade crate-python blackbox dependency to 0.20.1

commit d5661ac7b17651aca91ec48c32f525324bc6e279
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 18 11:21:08 2017 +0200

    Tests: Simplify setup code in testInPredicateWithSubqueryIsRewrittenToAnyEq
    
    This extends the `SQLExecutor` so that it can also be used to convert
    expressions into symbols. (With the additional ability to handle
    subqueries, opposed to `SqlExpressions` which cannot do that).
    
    It may be possible to replace all `SqlExpressions` usages now, but this
    is out of scope of this commit.

commit dcffd44e5963da293ce5666d3d55cc6f21de57c7
Author: Michael Beer <michael@crate.io>
Date:   Fri Aug 18 11:08:52 2017 +0200

    changed nonmeaningful method signature of ANY operator test

commit f3cffacc0ad70b51e053f30af6e405e415c13f0c
Author: Michael Beer <michael@crate.io>
Date:   Thu Jul 27 15:36:14 2017 +0200

    introduce doc section "subquery expressions"
    
    * extract sql operators and functions to separate chapter
    * document subquery expressions with `IN` and `ANY`

commit 4c82d79fe22b536b9071ba4a2896e7df37f9363f
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed Aug 16 16:58:59 2017 +0200

    Use ResultType to return results of subqueries
    
    - remove SingleValueFunction
    - ExpressionAnalyzer: pass on array expression context
    - store immutable ResultType in SelectSymbol
    - create row consumers based on ResultType

commit 94b88fbe1bbccc51efe0e58eb2d74b685c4a66c7
Author: Michael Beer <michael@crate.io>
Date:   Thu Aug 10 10:20:30 2017 +0200

    rewrite `IN (subquery)` to `= ANY (subquery)`

commit d2b9fd16f74ce62d620e42dbfe1f8dd742429b66
Author: Maximilian Michels <mxm@apache.org>
Date:   Tue Aug 8 10:51:24 2017 +0200

    Allow subqueries in ANY expressions
    
    This enables queries like the following:
    
    `Select id from t1 where 1 = ANY(Select id from t2)`
    
    We remove the soft limit 2 from the Planner for subqueries which can be used in
    an array expression (i.e. ANY and IN).

commit 0d1ed907b27c8aa4fe05e9d8a96ef5df3c5980eb
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Fri Aug 18 13:11:20 2017 +0200

    update enterprise features page

commit e530207c530ffb538e4e5ed22b674b39b4a67e05
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Fri Aug 18 13:24:05 2017 +0200

    add note about missing users

commit 8d8824fb6839e1fbaf0ec55bb46fece2c06ccda1
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed Aug 2 15:19:22 2017 +0200

    export best practices to the guide

commit efa82a3108f4958b0b5e0c5fb1cd1c5d5aed6b53
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Thu Aug 17 18:33:32 2017 +0200

    fix index order

commit 6bd1c5ec4fcf692a7b2786ea8e134b8555f80cc4
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Thu Aug 17 18:18:10 2017 +0200

    fix up docker docs

commit 351394342f557fc421ed61d1ee17503da8370c83
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Aug 18 09:48:19 2017 +0200

    [test] upgrades crate-jdbc to latest version

commit 94e31dd54a5f2e8f1bcd2d2acf5ce35044ac9ee8
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Aug 17 17:27:37 2017 +0300

    Fixed output column name when select list contains subqueries.
    
    Remove new lines (inserted by the user or automatically by SqlFormatter)
    from output column name.

commit 1a47d7c6845ea2379d508f92bda48078679c9658
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Aug 17 15:07:27 2017 +0100

    Use the lamdda argument as oppose to the enclosing method argument.

commit e841852bd0d7469e6794483bc0cdc8c0b5679744
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 17 14:50:33 2017 +0200

    Tests: Force SQLExecutor initialization with a valid clusterService
    
    This adds a check to the SQLExecutor to make sure the clusterService is
    never null. Otherwise it will lead to strange NPEs in tests that's that *do*
    use the clusterService.

commit af39ea5b7a4e2d2c109736db602a303ef9e5d1a2
Author: Michael Beer <michael@crate.io>
Date:   Thu Aug 17 14:23:09 2017 +0200

    removed rewrite from -C command line option to -E in crate.bat
    
    this issue has been introduced with b8c295098bb07685ceb677af1e4072b7ee957081

commit fb0fac3b12cb67dd135a6e93cf52c89fd6936d3a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 16 18:26:17 2017 +0200

    Utilize _field_names for IS NULL and IS NOT NULL
    
    Fixes https://github.com/crate/crate/issues/6126 and should also improve
    performance for IS NULL queries.

commit 8ef17e0b3944ebed6a0e3b82355d839cfd81966a
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Aug 16 23:37:36 2017 +0300

    Replace [[]] bash specific syntax with `case` for string contains() implementation.

commit a12af2df200867dd53964bd1a2d6a84c0057e1e0
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed Aug 16 18:39:38 2017 +0200

    minor docs edit

commit 67ec541a831fc98b8d529fa243d609e8f4fca69c
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Aug 16 10:57:36 2017 +0300

    Added missing commit: 439bd3a055df4acba9bb9ce3dc36ed1e0633e11c

commit a28f414afd0708cd6f6bd9ada72391cb9edfc78c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 25 10:17:07 2017 +0200

    Tests: Remove deprecated releaseLater usages

commit 4aff0b865dd28100f3e3c00d9f29264154e21326
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Aug 10 15:18:53 2017 +0200

    Replace DataTypeFactory with Supplier interface
    
    The interface is only used from within the DataTypes class. Thus, we want to
    keep the factory functionality encapsulated in DataTypes rather than in the
    DataType itself.

commit 28d1f750233988b663a4779bfbe780281e054b92
Author: Autophagy <mika@crate.io>
Date:   Mon Aug 14 18:14:42 2017 +0200

    Reflect 2.1.5 release

commit 2c5bfa5fadb19698c643c47260a585a1e089d610
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Aug 14 18:49:47 2017 +0300

    Add npe check to avoid failure in tests.
    
    Followup commit of: f592f40443441f6ceee20aef7f37279911d0c457

commit 015cb1e4658573d79307f654091f76d79bfb417d
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Aug 14 15:41:56 2017 +0200

    Ensure output is extended for join conditions
    
    Selecting fields from a nested TwoTableJoin was not possible. For example,
    queries of the following would throw a NPE:
    
    select t3.z from t1
    join t2 on t1.a = t2.b
    join t3 on t2.b = t3.c

commit f592f40443441f6ceee20aef7f37279911d0c457
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Aug 14 17:22:18 2017 +0300

    Default value of  ES setting causes overide of value set in `crate.yml`"

commit e309c84bc999248884ec3f6237f3c7134ced3a3a
Author: Autophagy <mika@crate.io>
Date:   Mon Aug 14 15:12:53 2017 +0200

    Reflect 2.1.4 release

commit 2cff2b91bdfff1f6f09c520131754c3a6338b31b
Author: Autophagy <mika@crate.io>
Date:   Mon Aug 14 15:12:28 2017 +0200

    Removed 2.1.3 changes from unreleased changelog

commit 5a0e2eb74037920b8c106a2ee4fdbb4eab25f14c
Author: Autophagy <mika@crate.io>
Date:   Mon Aug 14 15:12:14 2017 +0200

    Removed 2.1.2 changes from unreleased changelog

commit 25f9391ebef392196c03d171b074c3b441f85f0b
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Aug 14 13:37:47 2017 +0200

    fixes documentation of `set session characteristics`

commit 603ec1cade24be13e9c6d98c5adec162bc54a035
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Aug 14 12:24:05 2017 +0200

    adds parser/analzer support for `set session characteristics as transaction`
    
    this is added for compatibility reasons, statement will be ignored

commit 3272826b0747a76be30a496b0ca998de38f36b90
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Aug 14 12:08:59 2017 +0300

    Fixed an issue that caused ``cluster.name`` from crate.yml to be ignored.
    
    The issue was introduced by by ES 5.4.3 and the fix: 7c0f96c5e1f2848f8de1db6de3009d048cdb2fa7
    to allow cmd line args to override settings fro m crate.yml

commit 5d4d20c4d8114bd80fee3dfd623843eae229172c
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Fri Jul 28 15:10:27 2017 +0200

    extend information_schema with tables key_column_usage and referential_constraints to be more compliant with the SQL99 standard

commit d1af3b8b6d165c91388dfa0e4de24ea7dff2d3f0
Author: Autophagy <mika@crate.io>
Date:   Fri Aug 11 17:02:16 2017 +0200

    Reflect 2.1.3 release

commit 392572f8d7c5861fee178066c4aa1d73968c076c
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Aug 11 12:14:42 2017 +0200

    fixes a single insert only related memory leak
    
    the AutoCreateIndex class is expected to be used as a singleton, but it
    wasn’t and a new instance was created for every single insert.
    the real memory leak was happening due to that this class is registering
    itself as a setting update consumer, so every insert registered a new
    instance as a settings update consumer and it was never de-registering.
    also usage of AutoCreateIndex was wrong anyway, replace it with own correct logic.

commit 9fff14bcaec36ee1ef5ecc731d4b5ccd9293aa22
Author: turbo-ele <eliash@gmx.at>
Date:   Fri Aug 11 11:45:04 2017 +0200

    Fixed hiding of columns in information schema that begin with _ but are not system columns

commit 9f5b097fc24ea21c3a05f9d17d0edff606fd6379
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Aug 9 15:48:30 2017 +0200

    improves resiliency of the table rename operation
    
    all steps required for renaming a table, including possible steps
    introduced by enterprise components like e.g. privileges, are now
    operating directly on a cluster state on the master while renaming.
    as a result only 1 cluster state change will happen.

commit 56781a1cf25ff7be964a0c5924f4c8689816397c
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Aug 10 10:32:54 2017 +0200

    adds concrete getMessage() impl at the multi exception
    
    this will get all messages from the including exceptions to inform what
    was failing.

commit a6f846dcaa65c10f83282dbac5ccf4d186b114a9
Author: turbo-ele <eliash@gmx.at>
Date:   Tue Aug 1 14:17:39 2017 +0200

    Changed documentation for column names

commit 2c84b5c786e57a3e1a4ff8fd9205fa2a822e6acb
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Jul 31 16:58:29 2017 +0200

    Introduce SingleColumnTableType as DataType of SelectSymbol
    
    In order to support selection of composite types in subqueries and to to allow
    subqueries in ANY or IN clauses, we need a wrapper type for these queries.
    
    This models the SingleColumTableType as a CollectionType which is now the base
    for other Collection-based types like ArrayType and SetType.
    
    We remove the SingleRowSingleValueConsumer in favor of a the FirstColumnConsumer
    which materializes the entire first column. For now, the SingleValueFunction
    ensures that we don't return more than one value.

commit 5ff87347eaa184d510c30867b05a1d54623ba312
Author: Maximilian Michels <mxm@apache.org>
Date:   Tue Aug 8 10:51:24 2017 +0200

    Don't swallow type exceptions in AnyOperator

commit ae9464c6d57542b2051f0f1cc592b7f5fb522e12
Author: Autophagy <mika@crate.io>
Date:   Wed Aug 9 11:16:26 2017 +0200

    Reflect 2.1.2 release

commit 3aa1e776b375bf4964e85ded7564804160924c50
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jul 25 17:41:16 2017 +0200

    improved resiliency of drop, open and close table operations
    
    Opening/Closing a complete partitioned table results in:
    - opening/closing all partitions
    - adding a flag at the partitioned table template so prevent write ops
    This was done by using two separate actions and so it wasn’t atomic.
    Dropping a partitioned table or any table with enabled user management,
    wasn’t atomic and resulted in multiple actions.
    Now all cluster state changes are done at once making the whole
    operations atomic.

commit 10228b29472bc89b626e1abf3ec52e050cedd6a3
Author: Autophagy <mika@crate.io>
Date:   Tue Aug 8 14:51:50 2017 +0200

    fixup! Reflect 2.0.7 release

commit aeac26ead64672d7328d06cdce5b1047083fa52a
Author: Autophagy <mika@crate.io>
Date:   Tue Aug 8 14:37:35 2017 +0200

    Reflect 2.0.7 release

commit 32c65e9de5582f84365a0ce7489907be7e4aaa44
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Aug 3 17:11:13 2017 +0300

    Register UDFs as MetaData.Custom

commit f504f4297bedb81a0c1f390572b9b8edb37a8aa8
Author: Andrei Dan <andrei@crate.io>
Date:   Fri Aug 4 16:18:58 2017 +0300

    Complete delete task after the privileges are dropped.

commit 38c2188ec461a47ab72e61fd6d2a3642aa85e802
Author: Autophagy <mika@crate.io>
Date:   Fri Aug 4 18:00:24 2017 +0200

    Reflect 2.1.1 release

commit 1866c23e7e7263745cac1aca4fb3c572e2b5a50e
Author: turbo-ele <eliash@gmx.at>
Date:   Wed Aug 2 15:57:15 2017 +0200

    Introduced ExpressionToColumnIdentVisitor in order to fix wrong behavior
    when altering table.
    
    * Fixes wrong use of identifiers, especially when containing a dot.

commit 24460fe7242d3efe2d700e4d3ab28c4ce6b58a30
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Aug 4 11:59:01 2017 +0300

    fixup! Update BREAKING changes for 2.0.0 regarding threadpool -> thread_pool.

commit 7db1ea46b5f4e31ac0d2ebb8bdb3b31aea450b61
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Aug 4 11:44:17 2017 +0300

    Update BREAKING changes for 2.0.0 regarding threadpool -> thread_pool.

commit 7c0f96c5e1f2848f8de1db6de3009d048cdb2fa7
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Aug 3 15:13:55 2017 +0200

    Added more CrateDB startup configuration tests.
    
     - Test that command line args override settings from crate.yml
     - Test no duplicate settings can be define in crate.yml

commit 256738ad47ce2d8b01ca6abb668a20aebc085f0a
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Aug 3 05:57:27 2017 +0200

    Fixed: Settings passed from command line don't override the ones from config file

commit 41566ea4e73df30f21a4839905acffc9ade202e0
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Aug 3 10:51:06 2017 +0200

    updated documentation on thread_pool settings

commit 958a5bd72370a855af740165642442af05025d46
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Aug 3 11:17:38 2017 +0200

    added duplicate settings as breaking change for 2.1.0
    
    the breaking change that settings must not be defined multiple times via
    command line arguments or in the crate.yml was only discovered now.

commit feacce5e59d504e9bc396bd6e60ade4d7463c0c9
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Aug 2 19:14:28 2017 +0200

    Prevent duplicate -Cpath.home env variable if already passed by the user.

commit aab68c81e5d335d0e766434b4637fb35b3a21577
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Jul 27 16:41:42 2017 +0200

    Fixed: Wrong plans created for JOINs on subselects.
    
    1. When aggregation is applied on the JON and the virtual tables also contain aggregations.
    2. When virtual tables contain LIMIT/OFFSET
    3. ORDER BY of the JOIN overrided in some cases the ORDER BY on the virtual table.

commit f689708f64c11185e2a9be61bafb43edb33efb2b
Author: Autophagy <mika@crate.io>
Date:   Tue Aug 1 14:44:22 2017 +0200

    Reduced severity of enterprise license bootstrap log from warn to info

commit f5de2d898f3d2ab74af37663469115b27b3e1c4f
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Aug 1 13:51:55 2017 +0200

    Fixed toString() represention of OrderBy

commit b8c295098bb07685ceb677af1e4072b7ee957081
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jul 31 18:00:04 2017 +0200

    made error message for both bin/crate and java code consistent
    
    removed rewrite from -C command line option to -E
    but instead pass the option name to EnvironmentAwareCommand super class

commit 0986a9745f5f2d5e411da96aaa10e81f64d9b912
Author: Autophagy <mika@crate.io>
Date:   Mon Jul 31 12:36:10 2017 +0200

    Changed the enterprise check message and severity level

commit 866d05769eb8e59e220065132dabd31cfd0e8b14
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon Jul 31 17:11:01 2017 +0200

    change title of docs

commit 3ee1c76c3381f673c67b49731be7985c96a128c7
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Jul 31 16:41:58 2017 +0300

    Fail in a meaningful way when the condition of CASE/WHEN is not boolean.

commit 977b00d428336bcac9c73ca64abf56c9f0452f93
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon Jul 31 15:07:31 2017 +0200

    move architecture section to the guide

commit 25b8986fa30f35d41c62d1d158891c1d09cb743b
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon Jul 31 14:49:32 2017 +0200

    move hello.txt to the guide

commit 60391fe40f8597025d2edf21311ebe01b23ef9f7
Author: Michael Beer <michael@crate.io>
Date:   Mon Jul 31 13:50:18 2017 +0200

    Format expressions of type ArrayComparisonExpression properly

commit b168f23d5d01556297a7cc0edcfbc6252c23e91f
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Fri Jul 28 12:12:54 2017 +0200

    Allow different types in conditional expression in case of numerics

commit b1677a516557b1f22b4400e786289a9bfc1e8123
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Jul 25 21:42:45 2017 +0200

    fix notice about schema acls

commit dba00c38e39eb02203c7bd29e11763c4b0f4db6f
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Fri Jul 28 16:48:30 2017 +0200

    allow negate undefined data type

commit b792866a0eecb830d171459e3d627fcb07d0e818
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jul 28 13:14:44 2017 +0200

    fixes setting `write.wait_for_active_shards` on a parted table
    
    setting was not included in the allowed setting list of partitioned tables
    addresses: https://github.com/crate/crate/issues/6038

commit 6470bf5eea07536551d82cfe014258839c73e7b1
Author: Michael Beer <michael@crate.io>
Date:   Fri Jul 28 10:21:13 2017 +0200

    make the build process on appveyor less verbose

commit 2478cf552940334ad5c482c85e5ec2e0587f7372
Author: Michael Beer <michael@crate.io>
Date:   Fri Jul 28 10:02:57 2017 +0200

    downgraded version of JNA to be compatible with Appveyor

commit 0863b3ee7c1d8439641b0279e689ea549403931f
Author: Michael Beer <michael@crate.io>
Date:   Thu Jul 27 16:17:24 2017 +0200

    update JVM parameters in windows bat script

commit 7d6d144f961a839410d74695e3e2bdd94c619433
Author: Michael Beer <michael@crate.io>
Date:   Wed Jul 26 13:36:12 2017 +0200

    add missing note that describe temporary redirect on BLOB upload

commit bbe44f82e04b3fb9dd4044d0464544366ba8fb81
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Jul 25 14:09:49 2017 +0100

    GROUP BY first checks for real columns and then fallbacks to substituting aliases.

commit 5a9dc432a7f0713c61e93eddd0c5d5b0cbd98d8e
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Jul 10 10:31:18 2017 +0200

    Upgrade ES version to 5.4.3
    
    - create custom ES version 'v5.4.3_cherry'
    - adapt to upstream API changes (e.g. TransportWriteAction)
    - use ES dispatcher to wrap around default Rest handler
    - simplify startup process by using ES Environment
    - fix jar hell related issues:
      - keep crate jar in /lib but only add it once
      - add exception for IntelliJ jar which is twice in the classpath
    - replace String config settings with static variables
    - adapt tests

commit 1b4a16b21003a9ec4b79a51dea57036d0baf8c8c
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jul 25 15:01:05 2017 +0200

    adds missing `write.wait_for_active_shard` default val documentation

commit 2188953fd1adff158a5eb7cb49dfa692233632c5
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Jul 25 18:35:55 2017 +0200

    Only log info msg when ES api is enabled

commit 9ed706677957e1e1dc4bd54fe120949ba260af75
Author: Maximilian Michels <mxm@apache.org>
Date:   Tue Jul 25 17:36:32 2017 +0200

    Bump version to 2.2.0-snapshot

commit bf0aba98084df714b40870586e56220d82be03f6
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jul 19 10:36:22 2017 +0200

    improves privileges matching by using a map (O(1) instead of O(n))
    
    Privileges are now stored into a map for quick lookup by hashCode.
    Decreases privilege matching time complexity from O(n) to O(1).
    Also finding any privilege for a certain class results now in a simple
    map lookup by ident.

commit a12e12af63828262234438c027bf8ac9b85d2fb7
Author: Michael Beer <michael@crate.io>
Date:   Fri Jul 21 12:08:15 2017 +0200

    improved error message if invalid column reference is used in insert table stmt

commit 05ddda3813483894677665cf630b5fa92943f211
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 24 14:50:01 2017 +0200

    Tune docRefToRegularRef
    
    The schema check is unnecessary. Any column starting with `_doc` can be
    converted.

commit fdb99ca39ac0612aab79f31ff62f2a21fa74c67d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 24 16:57:26 2017 +0200

    Remove deprecated `Throwables.propagate(` usage

commit df57ab4b20b46de058ec47fabb54a8315a8bb1bd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 24 16:41:44 2017 +0200

    Remove deprecated FluentIterable usage

commit 5e6d89654025b0a6ce8e21d858c9081da5450dc5
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Jul 24 14:54:27 2017 +0200

    Move location from ShardRequest to ShardRequest.Item
    
    - store item location directly in Item
    - remove empty constructor in favor or Writeable interface

commit aa91444f9f6629767b9430c03187a5e962636164
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 24 12:08:25 2017 +0200

    Improve correlation detection in sub-queries
    
    If a sub-query contained an alias of a parent relation, or if it
    contained an ancestor further away than just one level, the "correlated
    sub-query" detection didn't work and a user would get a "unknown
    relation" error instead of the more accurate "correlated sub-queries are
    not supported" error.

commit cc01242121e2657a789572ca2ca8a850018853e3
Author: Maximilian Michels <mxm@apache.org>
Date:   Tue Jul 18 11:13:40 2017 +0200

    Refactor TransportShardUpsertAction
    
    - replace SymbolToFieldExtractor with InputFactory
    - restructure to ease testing

commit 362a53a3f8bf9a527b99d5f1a065d9fdc94e1394
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Jul 21 12:34:23 2017 +0200

    Optimize the algorithm the order of joined tables.
    
    - When all tables are included in ``ORDER BY`` use the
    order of appearance in the ``ORDER BY`` expressions.
    
    - Use both explicit (JOIN ON) and implicit (WHERE) join
    conditions to compute the best order using these join conditions
    as early as possible in the JOIN operation.

commit 67a689a055bb11cea60ac202689f1bc33fca561c
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Jul 21 13:25:32 2017 +0200

    Optimize performance of the algorithm that determines the best order of joined tables.
    
    When building the preSorted list based on ``ORDER BY`` detect early the
    case that an OUTER JOIN pair "breaks" and return the preSorted list as
    built up to that point.

commit c2171f60b4b5c8f0e4abacb12827a87ac4f1da21
Author: Maximilian Michels <mxm@apache.org>
Date:   Fri Jul 21 17:14:48 2017 +0200

    Update admin-ui version to fix Twitter import
    
    The Tweet import was previously broken because of a renamed column in the INSERT
    statement.

commit e371b51f572ca0207ab406efbb7c31d101029981
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Jul 24 12:17:22 2017 +0200

    Upgraded crash to 0.21.4

commit 8c20be9b032b6d712d0643eedc46afe59f058485
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jul 24 11:11:55 2017 +0200

    fixes replication documentation
    
    also this reduces the time for a doctest run by 30sec

commit 1b95301d7e0740cb63dfe8efdab25808d06fd190
Author: Alexander Dengg <alexander@crate.io>
Date:   Tue Jul 18 13:57:24 2017 +0200

    fixed return type of sum

commit 8c7a4746ba82fca2e545dfa0ffb12e1534a8c09a
Author: Marios Trivyzas <marios@crate.io>
Date:   Sun Jul 23 02:35:20 2017 +0200

    Fix sqllogictests by adding "user=crate" to the connection string.
    
    Since user management is included in the cratedb instance used for the
    sqllogictests any user not created in the db is not allowed to connect.

commit 3bf7d7bb223a078c3d0174f35ec88d33fa1d89b2
Author: Marios Trivyzas <marios@crate.io>
Date:   Sun Jul 23 01:58:14 2017 +0200

    Fixed a regression on DISTINCT with scalar functions.
    
    Caused by 14edac028e2c11f49e51b23f1fa3d8c318a5b928.

commit cc0fb1a954dfa7941aa091b1a603acd090bcb60a
Author: Christian Bader <christian.bader@crate.io>
Date:   Fri Jul 21 12:00:10 2017 +0200

    Updated .travis.yml to test build

commit d42d0d4362f6f26f54e99cf9806089cba591b50f
Author: Marios Trivyzas <marios@crate.io>
Date:   Sat Jul 22 22:38:51 2017 +0200

    Code cleanup
    
    Remove unused argument.
    Replace != on String with !equals.

commit 484f7ec035a06137706fa2926b594d065bc58220
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 21 11:37:20 2017 +0200

    Avoid submitting template update task if it's already up2date

commit 4ff396a7503d3c3705495e8e5135fcfc7b58c2ec
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 19 17:37:17 2017 +0200

    Make template schema update synchronous
    
    There was a window in which it was possible to create the same column
    with different types in two or more partitons. Selecting from a
    partitioned table with such partitions would then no longer be possible
    as a column type must be consistent across partitons.
    
    This fixes the race condition by updating the template synchronous on
    the dynamic mapping update, similar how the partition/index is updated.

commit 221f3052598dff1ff2e8ac4d567c89768b908a13
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 19 16:02:16 2017 +0200

    Add a custom schemaUpdateAction to handle mapping updates
    
    Currently this does the same thing as `MappingUpdatedAction` did before
    - but this allows us to extend it to also handle template updates in
    case of partitioned tables.

commit d7a871b501627374071672eda400e8492c71bfc0
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Fri Jul 21 16:23:24 2017 +0200

    uppercase admonition style directives

commit 41d4cce621d25631c8dc8f8d1f94a61ca29517d4
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Fri Jul 21 13:02:17 2017 +0200

    misc doc fixes

commit 2a02d16c4bf12885c8510fdd864f8ee456a5053b
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Thu Jul 20 16:56:26 2017 +0200

    add note about restoring across versions

commit 2c6705b700748b2cc170e94678bee7995f3eb4e0
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Thu Jul 20 17:25:16 2017 +0200

    use "upsert" terminology

commit 1af4d3698b2044a3bd95b99d0463201b0d52dc63
Author: Maximilian Michels <mxm@apache.org>
Date:   Fri Jul 21 10:38:00 2017 +0200

    Fix NPE in NodeStatsContextFieldResolver
    
    - only occurred when `psql.enabled` is set to false

commit 42ce411336f9cbae73dc4984d42153e5d0a3eb59
Author: Michael Beer <michael@crate.io>
Date:   Wed Jul 19 13:00:58 2017 +0200

    always return the user that has been provided on connect
    
    This fix always returns the user that has been provided on connect if
    host-based authentication is disabled and the user management is
    enabled. Since 88f02de132eceb5502ddd6557a2c079a8bebb4e3 `null` user sessions
    are prevented from querying the cluster if the user management is enabled.

commit 316fc5af5b3615d33722f903a06180e48f0de6d0
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jul 20 12:58:00 2017 +0200

    corrects the sys.snapshots version column documentation

commit e8e30be29eeadb7a79acbed8e8940564ff1d7abd
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jul 20 09:55:00 2017 +0200

    fixes dropping related privileges while dropping an empty parted table

commit 1018780632cd80f41870ee72031affcaeb4e0cdf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 18 14:20:21 2017 +0200

    DocSchemaInfo: Replace LoadingCache with ConcurrentHashMap
    
    This removes the `LoadingCache` from the `DocSchemaInfo` as the usage is
    a bit questionable.
    
    By using the `LoadingCache` it was possible to load a
    subset of the `DocTableInfo` instances into memory, but:
    
     - a query on `information_schema.tables` loads all tables into memory.
     If the number of tables in the cluster is greater than the cache size,
     this causes a lot of garbage collection
    
     - The clusterState already needs to fit into memory. The couple of kB
     saved by not keeping all `DocTableInfo` instances can be neglected.

commit d6b0a6d651ea9f6b938638c3f73b915a4c8a908d
Author: Alex <alexander.dengg@students.fhv.at>
Date:   Wed Jul 19 14:54:24 2017 +0200

    Update CONTRIBUTING.rst

commit 7acfb5c79eefbc7168ec373c6f20f5ad3449d9ac
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Jul 19 14:07:27 2017 +0200

    reflect release 2.0.6

commit 139272e7cffd81efdc9ee7aede81a2dce8c44083
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Jul 19 15:05:40 2017 +0200

    Implemented NOT NULL constraint for nested object columns.
    
    Previously in this case the NOT NULL constraint was completely ignored
    and not even saved in the metadata of the table.
    
    Fixes: https://github.com/crate/crate/issues/5954

commit c4250c3d50417abc03f1050bbe9c0ed7ca200d35
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Jul 19 13:48:35 2017 +0200

    Beautify error message for not null constraint validation

commit 04a217502ce96031fd31aa10dc48a759d6ff1113
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Jul 19 13:42:28 2017 +0200

    Refactor by extracting methods to Maps utility class.

commit 5cb562489660df15c2768b9362a9633eff7edbfd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 19 13:56:51 2017 +0200

    Remove ulimit from travis
    
    Builds started failing with:
    
        line 57: ulimit: open files: cannot modify limit: Operation not permitted

commit f8e12fce910f0047d09ce2952e587eb0a8a3f4b8
Author: Johannes Moser <m@joemoe.at>
Date:   Tue Jul 18 17:22:50 2017 +0200

    Wrong indent turned text into blockquote

commit a04f88b9fba732bb3671f5db4395a4875bb0d62d
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Sun Jul 16 21:25:05 2017 +0200

    add caution note about snapshots and blobs

commit 8758429effd271b4169a62b32f44a421abbb61e1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 19 11:19:26 2017 +0200

    Tests: Fix flaky `testPauseOnFirstBatch`
    
    The `numRows` assertion must happen synchronous, not asynchronous, as
    otherwise the count could increase past the bulkSize.

commit d0eccc7f0d7112a8ce45da87f2a49f97e8725bda
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 18 17:02:36 2017 +0200

    LongType: Improve BytesRef -> long conversion error msg
    
    The error message of a failed BytesRef -> long conversion only contained
    the value of the string that couldn't be converted.
    
    This wasn't an issue in most cases as we wrap a `NumberFormatException`
    into a a different exception with a good error message if it's part of a
    cast. So something like `select 'foo'::long` raised a meaningful error,
    but some other cases miss this conversion.

commit 420365164c2f161d2867bc92a1263e21e46afa27
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 19 10:13:48 2017 +0200

    Tests: Fix flaky `testMappingTotalFieldsLimit`
    
    Failed sometimes due to locale randomization

commit 14edac028e2c11f49e51b23f1fa3d8c318a5b928
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Thu Jul 13 14:11:03 2017 +0200

    add support for group by with scalar

commit 03f05645163f2ec8b4c5053b53968fe8a768b655
Author: turbo-ele <eliash@gmx.at>
Date:   Mon Jul 17 14:18:16 2017 +0200

    Exposed mapping.total_fields.limit as table setting

commit 88f02de132eceb5502ddd6557a2c079a8bebb4e3
Author: Michael Beer <michael@crate.io>
Date:   Tue Jul 18 11:59:52 2017 +0200

    add validation for `null` users on enabled user management
    
    This ensures that `null` users are prevented from query execution if the
    user management is enabled.

commit 7f35d14aa583fa483e5c4a4fdcf2613a9f3ab728
Author: Michael Beer <michael@crate.io>
Date:   Fri Jul 14 10:42:34 2017 +0200

    use crate user in session of system queries

commit 23309642b5c03467753c981fc134f0fae1c3b09b
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Jul 17 15:59:59 2017 +0200

    Allow ``!= ANY()`` to operate on arrays with > 1024 elements.
    
    In order to use more than 1024 clauses in a Lucene BooleanQuery the
    setMaxClauseCount() must be set globally (static variable). ES already
    does this in the initialization of SearchModule, so we just override the
    default value of the corresponding setting "indices.query.bool.max_clause_count"
    in our SQLPlugin and expose this setting in our documentation.

commit b7095359838fe9de328da5533d1f3e5997089fe5
Author: Alexander Dengg <alexander@crate.io>
Date:   Tue Jul 18 15:45:08 2017 +0200

    table functions now support value expressions as arguments

commit 18c6772b5843cbf4d56668f3795961135248ecef
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Thu Jul 13 15:47:14 2017 +0200

    add support for conditionals with null arguments

commit 5e1fe816b52c3251c46d8432a7867e5e59a5781b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 18 12:08:00 2017 +0200

    Remove unnecessary AbstractPartitionsSettingsExpression

commit a7bcc35fd42f2b0759b8adf42ec7aa142244aa28
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jul 18 12:16:16 2017 +0200

    improves accessible shards filtering of sys.shards
    
    builds a list of accessible table upfront before creating shard iterators.
    this will improve performance a lot specially on tables with lot of shards.
    also adds a static helper to resolve the required FQN for an index name
    without creating an intermediate TableIdent/PartitionName object.

commit b8c55ebd9e399c782b1711473269e703a679d7c1
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jul 17 21:30:53 2017 +0200

    added test to create snapshot from blob table

commit d73dd8c2c5a04d0318809a778aec49ac1cbc46e8
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jul 17 21:29:54 2017 +0200

    added path.repo to sandbox configuration

commit df92d72f3dffdba8e35a0a8057c07bb81b060c8b
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jul 17 21:29:13 2017 +0200

    do not include blob tables in CREATE SNAPSHOT ALL

commit a97cedbae9f2418d01fa2d7ac170eebd05f9f057
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Jul 17 15:55:06 2017 +0100

    Fix rename empty partitioned table.

commit 19caa9c75c5c24fc7fbd82422f7d6dc756f08279
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jul 17 22:05:26 2017 +0200

    improves privileges integration tests
    
    tests are supporting repeated calls now by dropping the created user,
    simplified all tests by always using the same test user

commit e259245c3f586cdd6a7a1e3461029530f50ff87b
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jul 17 18:00:16 2017 +0200

    fixes transferring of table privileges
    
    this also fixes related flaky privileges integration tests

commit dd0cb529858793408dd631711974e84c49245928
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Jul 17 16:56:24 2017 +0200

    Pushdown NO_MATCH of WHERE clause to the relations of a JOIN.
    
    In case of global aggregations the JOIN is normally planned even if WHERE
    clause evaluates to NO_MATCH. So to avoid incorrect results we push down
    the NO_MATCH to the qSpecs of the left and right relations of the join pair.

commit 5579af9aac89117344269e4fa4ee938b33e670ab
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jul 17 15:30:14 2017 +0200

    fixes global aggregation symbol used twice on join queries
    
    a same aggregation symbol was only collected once on join queries and so
    the field rewrite on the multi source select resulted in an exception

commit 95f764d56ab08847211fcd5daa4432de0af37292
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 17 14:58:34 2017 +0200

    Tune pageSize calculation for small limits
    
    This disables the "pageSize adaption" for small limits, as the overhead
    of a `searchMore` is bigger than to sort a couple of extra records.

commit 6c5b8172bcda24ec030e8b4bf1e2ccc3534ccfbb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 13 14:23:36 2017 +0200

    Docs: Extend release-workflow documentation

commit 86ce9ef4a64cc5716d3d9aa88a4e0042091d740c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 13 13:44:08 2017 +0200

    Split DEVELOP.rst into multiple files in `devs/docs`
    
    Also moves the content from `devtools` into `devs/tools`.

commit ae0ae706281c26430fb4d0849a973ee8ce397a4d
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Sun Jul 16 21:13:56 2017 +0200

    update limitation docs for aggregations

commit 680a818e1ec581c5eb3728e9de01b9d4b64c7def
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 13 16:08:42 2017 +0200

    Simplify BatchIteratorBackpressureExecutor
    
    This simplifies the BatchIteratorBackpressureExecutor by using a single
    Semaphore to restrict the `consumeIterator` to a single thread instead
    of using multiple AtomicBooleans/booleans.
    
    This makes it possible to always use the same callback on each
    "execute-batch" invocation.

commit bb812de83dd9cdf9bebe9b4817b16cdb3970ad91
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Jul 13 14:55:54 2017 +0200

    Forbid usage of NULL literal in GROUP BY.
    
    Follow PostgreSQL which doesn't allow literals in the GROUP BY
    except for integers that refer to the select output.

commit a919ffe9aa01d0eaf597b7d924f86bfb3247148f
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Jul 13 14:30:03 2017 +0200

    Allow DISTINCT and GROUP BY to operate on literals.

commit abb3ca62fad841b6602c2683f6b3af1d1d30118b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 14 12:44:29 2017 +0200

    Increase initial delay from 0ms to 10ms in LimitedExponentialBackoff
    
    Having 0ms as a first delay seems a bit useless.

commit 89fe71c91add76d43a262116fc235cd650d6fd8a
Author: Michael Beer <michael@crate.io>
Date:   Wed Jul 12 12:07:21 2017 +0200

    added extended documenation for field ``username`` in jobs log

commit e8281a0e280c609c0651a66b6f0f5f078474e0bd
Author: Andrei Dan <andrei@crate.io>
Date:   Fri Jul 14 14:12:10 2017 +0100

    Don't batch the creation of indices to avoid OOM when we have many rows for few indices.

commit 2975c3454f698339ea6f1f154137addcd29641eb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 13 15:04:16 2017 +0200

    Encapsulate resultFuture in BatchIteratorBackpressureExecutor
    
    Before the `executionFuture` could be completed from two components,
    either the component using the `BatchIteratorBackpressureExecutor` or from
    the `BatchIteratorBackpressureExecutor` itself. Now the
    `BatchIteratorBackpressureExecutor` owns the future.
    
    This also changes the kill handling a bit. Now we rely on
    `BatchIterator.moveNext` failing if it's killed.
    In addition. The `ShardingUpsertExecutor` will no longer short-circuit
    but wait for pending operations to complete before setting a failure.

commit f2e851453aa128b4d78a92617e4454451e48a4b8
Author: Michael Beer <michael@crate.io>
Date:   Fri Jul 14 12:33:18 2017 +0200

    fixed classpath issue in windows batch file

commit 6a9cf810be373bdd3eaf93a129907d1f0f660086
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 13 09:33:30 2017 +0200

    Replace lambdas with named methods in ShardDMLExecutor
    
    I think this improves the readability a bit.

commit c45cff9c2ab839b7289b37952e95615443156f81
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 12 14:07:12 2017 +0200

    Make sure the correct request is used on internal retries
    
    This changes the `RetryListener` construction in the `ShardDMLExecutor`
    to fixate the `request` instance. Before the RetryListener accessed the
    `currentRequest` attribute of the `ShardDMLExecutor` and that attribute
    is mutable and could've changed.

commit b6db742d941f76f35207513837fcf46adb48eaed
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 12 12:31:15 2017 +0200

    Prevent noop transportAction invocations
    
    In a simple test this increased single-threaded update statements from
    ~60op/s to ~125op/s
    (Although that number is unlikely to reflect real-world scenarios, as
    this test was done with 300 shards on a single node)

commit 8ea93d610f1c92083be81d9abce6d35e2c3e29e1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 12 12:21:51 2017 +0200

    Encapsulate "inflight-op" checking into BatchIteratorBackpressureExecutor
    
    This should fix a race condition which could cause a UPDATE or DELETE
    (by query) to get stuck.
    
    Before a `pendingItemsCount` `AtomicInteger` was used to track if there
    is any operation still active. This `pendingItemsCount` was shared
    accross components, one component increased it, another decreased it. It
    seems like there was a race condition in that the count could get
    decremented too late. This caused the operation to get stuck as the
    `BatchIteratorBackpressureExecutor` would wait for another operation to
    complete which never happened.

commit 55fa0a32ed8ae8fc3b8cfcc978aa7826126f332b
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jul 13 12:28:38 2017 +0200

    bump version to 2.1.1-SNAPSHOT
    
    This commit reflects the recent change to the release process. We
    started introducing a period (feature freeze) in which no new features
    or changes that could effect stability are merged into master. In this
    time new releases are "stabilised" directly on master instead of on the
    release branch. Also, tags for releases in this period are done directly
    on master.
    After bumping the version, setting the snapshot flag to false and
    creating the release version tag, the version must be increased to the
    next greater patch release and the snapshot flag reset to true again in
    order to reflect the upcoming release.
    Only after the feature freeze period a new version branch for the release is
    created.

commit 689b9715bf2cde79d29262404e82c9d95e8a0d1e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 13 11:08:15 2017 +0200

    Fix a ClassCastException that could occur via pgwire

commit 240f5c278f407f01f2900786b9110ed544c6e78c
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jul 11 16:45:37 2017 +0200

    reflect release 2.1.0

commit b9a0a04a73de6f338fce075abd24f805157dbf35
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 10 17:19:45 2017 +0200

    Stream insertValueStreamers per request instead of per item

commit cae456dbec5c6eab09e448eba9aa17d18d4f2ec6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 11 14:03:43 2017 +0200

    Apply minScore filter to sorted queries which use searchMore
    
    Queries like `SELECT [...] WHERE _score >= <minScore> ORDER BY .. LIMIT
    ..` could include rows with `_score < <minScore>` in the result. This
    was due to an issue in `searchMore` - there the minScore filter wasn't
    applied.

commit 19057807baa230611b6cf969dfcdb5a8ad34e437
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 11 14:22:47 2017 +0200

    Extract query optimize code from LuceneOrderedDocCollector
    
    This commit extracts the code that is used to optimize queries for
    `searchAfter` uses from the `LuceneOrderedDocCollector`.
    
    This is done to abstract away some of the dependencies in order to make it
    easier to unit test the `LuceneOrderedDocCollector`. Especially the
    `QueryShardContext` dependency, which is huge.

commit d998c9dfe5686b603b2d9c0e4357de8e082ce814
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Jun 22 13:24:54 2017 +0100

    Add support for privileges on tables and schema

commit b95f59479322a4cb2f627bf60ee506d570d01ea9
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jul 11 14:58:37 2017 +0200

    reflect release 2.0.5

commit 04babdf03a8f0fc122665edffa2cc4bde89832fc
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Tue Jul 11 12:29:34 2017 +0200

    upgrade the admin-ui to 1.4.1

commit 297c62480b747932ab5f1f493916762ee9d08086
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Jul 11 11:22:53 2017 +0200

    Upgrade Crash to 0.21.3

commit 2ecd8f6b467903000b28a09ee868f8d9b9488a17
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 10 14:30:40 2017 +0200

    Move UDF instance construction into UDFService
    
    DocSchemaInfo is now only responsible for triggering an update event.
    The UserDefinedFunctionService will take care of handling the scalar
    instance creation and registering them in the Functions registry.

commit c16b25e2a430b86464832b28cb23c80dee2be524
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 10 16:53:56 2017 +0200

    Remove duplicated `CollectExpression.of`

commit b4027a5d997722eff19db2dbab68c98f6f16c8ee
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Jul 10 18:55:31 2017 +0200

    Remove deprecated option

commit b7a638c08bee450943dacbc075813188187ac866
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jul 7 09:53:31 2017 +0200

    refactors static table iterable and expressions registration
    
    iterables and expressions are now registered by a new
    StaticTableDefinition class. this centralizes the registration and makes
    it possible to access iterables (e.g. to register filters)
    also expression definition is now done on the concrete TableInfo classes

commit 444cdf3ef0472634ffb8bcfb001d4e74603e4a29
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Jul 10 15:20:28 2017 +0200

    Fix issue with count(*) on >= 3 table joins.
    
    When using count(*) and implicit join conditions (in where clause)
    then the outputs of the mss.querySpec() is empty. So we need to build
    those outputs on every join pair of the join tree (except for the top level)
    based on the fields that are required to apply the where clause queries
    further on.

commit 416b269a55a6c611f039fa17cad6c4b6ae89a1f4
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Jul 6 14:31:41 2017 +0200

    Extract multiple method call to variable

commit edaeb899c555d63a3045681072553651ecf53540
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 10 11:42:55 2017 +0200

    Improve error msg for correlated subqueries
    
    A query like `select (select 1 from t1 where t1.x = t2.x) from t2`
    previously caused a `RelationUnknownException`. Now it recognises that
    `t2` exists in the parent-scope and causes a
    `UnsupportedOperationException` with a more accurate error message.

commit 6af39e981889f5b28a2269a59d520568d8a7d1c6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 10 14:56:08 2017 +0200

    Simplify BlockingEvictingQueue

commit 35a3d658491454f60a08fb8fcb035c06969a63ed
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 10 14:49:27 2017 +0200

    Remove unused fromSerializationWrapper
    
    This method was used in the Java transport-client, but since we've
    removed the client, the `fromSerializationWrapper` method is no longer
    necessary.

commit 7f60be17bfb9299c562f5b0a403a764fdb4d8b3f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 10 13:51:47 2017 +0200

    Tests: Remove TestAuthentication from PostgresWireProtocolTest
    
    Can be replaced by AlwaysOKAuthentication as the tests don't require any
    specific user.

commit 2bce4c7818dcae22d5ded8517cb7c35ce5a6d94d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 10 13:00:03 2017 +0200

    Don't bind HBA if it's disabled
    
    Follow up to c6cdb244c315ca555817a0cd5c64626de07de0de which broke
    sqllogic tests (among others), because for postgres HBA was always
    enabled.

commit c6cdb244c315ca555817a0cd5c64626de07de0de
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 7 13:50:34 2017 +0200

    Re-work user functionality loading mechanism
    
    This replaces the (ES) UsersPlugin with a UsersExtension class that is
    loaded using a ServiceLoader from within the SQLPlugin.
    
    This solves a ClassCastException that occured due to the usage of two
    independent URLClassLoader instances. (One from the PluginService, one
    from the EnterpriseLoader). This resulted in the loss of custom metadata
    since the ES52 upgrade on node start, as the metadata couldn't be read
    anymore.

commit ab7f15089dd2a9238854f515ea1324e4532a1cee
Author: Alexander Dengg <alexander@crate.io>
Date:   Fri Jul 7 10:39:37 2017 +0200

    removed deprecated throwables.propagate as much as possible

commit c9482d83286cb85e32dd7e4cef453800f797dbbf
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Mon Jul 10 09:06:17 2017 +0200

    upgrade admin-ui to 1.4.0

commit 9f3dc09031ed4d7977d6924d6d911d44f9f7aebb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 7 14:03:17 2017 +0200

    Update es/upstream to include cgroups-patch
    
    The patch adds support for cgroup v2 hierarchy when it parses
    `/proc/self/cgroup`
    
    systemd starting with version 233 uses the v2 format.

commit 230cc3cf7e12dc4b8265f94e506dd269acfed17e
Author: Michael Beer <michael@crate.io>
Date:   Mon Jul 3 17:44:11 2017 +0200

    added column `username` to `sys.jobs` and `sys.jobs_log`
    
    The column contains the username under which the job was invoked.

commit 5535f6ab9f62e2e876125708ae3cf1c09acf37d3
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Fri Jul 7 15:06:57 2017 +0200

    upgrade admin ui to 1.3.3

commit a017f97647d041045ca35cc57d69606245e877d9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 6 22:43:22 2017 +0200

    Upgrade netty to 4.1.13

commit c457b3ec2d732a6e64e8fb7d87b68568859a38bf
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jul 6 14:55:22 2017 +0200

    reflect release 2.0.4

commit 39514d2859ae554075cc5c1f2a0277ca92f50435
Author: Christian Bader <christian.bader@crate.io>
Date:   Thu Jul 6 10:44:35 2017 +0200

    Corrected wrong enterprise configuration example

commit 35cb5ed69236645f410706b8e9ddbfbc54b39f6e
Author: Michael Beer <michael@crate.io>
Date:   Wed Jul 5 12:20:40 2017 +0200

    apply new mapping changes if `alter table` produces a mapping update

commit b874838aae93432e03109768ac78eb625d418f38
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 6 16:54:59 2017 +0200

    Tests: Update es/upstream to include test-fixes

commit dd4d199092cdb423d64c4207280476fda1a131ee
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 6 14:11:35 2017 +0200

    Allow GROUP BY on arrays wrapped in scalar functions
    
    4c754ad666 made the validation a bit too strict and broke GROUP BY on
    `scalar(array_col)`

commit 4aa49e4fdbf18ddc83c16b3865134bd27a1231ea
Author: Alexander Dengg <alexander@crate.io>
Date:   Thu Jul 6 13:46:13 2017 +0200

    added unwanted functions to forbidden api

commit 1686eff3c49b32a76900277219afe3b82e5f1aca
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 6 12:34:12 2017 +0200

    Fix RecoveryAfterTimeSysCheck
    
    This is a follow up to d7d37e031097b6e47bdc68ad1f227a379da0b47d

commit cb4e58d5b022ad9103586c020c95d1818efd2dc1
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jul 6 09:50:27 2017 +0200

    do not delete blob data upon index removal
    
    (cherry picked from commit 1ce21a17ccd03ba3673e0834ad361b63db276b0f)

commit 4a9c0132153f4043abe5ccf50128282b87a514cc
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Jul 4 17:25:24 2017 +0200

    Upgraded Crash to 0.21.1

commit d7d37e031097b6e47bdc68ad1f227a379da0b47d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 5 12:17:30 2017 +0200

    Fix `recovery_after_time` default value calc and related node check

commit cd73b28a5cce11c3ab0e04dfa7b3845bbf953ac5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 5 11:56:45 2017 +0200

    Docs: Remove note about java 7 sys-node-check
    
    That check has been removed since CrateDB requires Java 8

commit f41b4e1ea22201ebb1270fe95aba73dc464a8b25
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 5 16:14:58 2017 +0200

    Add internal retry to read-queries in case of node-connection errors

commit a8b791a7c444b9595d21c08292a6925166da7b3b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 5 15:32:02 2017 +0200

    Extract RetryOnFailureResultReceiver from SimplePortal

commit b5662df10545c57089f2474b5be6bcbe1608069e
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed Jul 5 15:31:49 2017 +0200

    Reduce deprecation warnings for SQL module
    
    - fix GEO utils warnings
    - add CHANGELOG entry for deprecated ES setting
    - replace deprecated ExceptionsHelper.detailedMessage
    
    - suppress Sun API internal usage warning
    
    Unfortunately, there is nothing we can do besides suppressing the
    warning at compiler level.

commit af02041d9adf2f3fcb40b094784e1a06e40ced96
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Jul 3 18:58:34 2017 +0200

    Offer only enabled SSL ciphers
    
    Java supports a whole range of ciphers which are not particularly
    secure. Among them are NULL ciphers which do not encrypt. We should only
    use the enabled ciphers which can be configured and are set to a sane
    default.

commit 60f44401dc62ea628af120cdbc289c7428860e96
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Jul 3 10:56:17 2017 +0200

    Introduce Provider for the SslContext
    
    - provides the SslContext depending on its availability
    - automatically registers SslContext in PipelineRegistry
    - unifies different implementations of SslReqHandlers
    - removes the need for default handlers
    - simplifies dynamic class loading

commit 6a661bf00e2b4de99c6d35be0ed4d93c9622add2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 5 23:20:41 2017 +0200

    Migrate CountOperation from guava future to CompletableFuture
    
    This resolves some deprecation warnings.

commit c3272b528e4a766ef238995722d361e6378d96cc
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jul 6 08:27:52 2017 +0200

    warn about 2.x blob data loss issue
    
    tell users to not use those versions

commit 9337786ec648d549ca6f31632b1d5c1a4b0ad4aa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 5 22:36:12 2017 +0200

    Replace MemoizeSupplier with guava implementation

commit c6e88713c2585b911fcb0c33b297d611ca05293a
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed Jul 5 20:50:33 2017 +0200

    fixup! fix docker run command docs

commit 3705a364a5bff8eb0e8434140b6a5ca55304bf73
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed Jul 5 19:55:19 2017 +0200

    fix docker run command docs

commit d009ebf8f1babed54beedb4cf28d02915337b0c0
Author: Maximilian Michels <mxm@apache.org>
Date:   Tue Jul 4 15:17:55 2017 +0200

    Fix thread-safety issue in HashFunctions

commit 2360da7e6f602689bac71435bc9967349cb5ae11
Author: Autophagy <mika@crate.io>
Date:   Wed Jul 5 11:14:01 2017 +0200

    Routing hash function returns the default pretty name if none is found

commit 09f6240b4325459f46d5bbd9fff093f254ca25f5
Author: Andrei Dan <andrei@crate.io>
Date:   Mon Jun 26 13:26:36 2017 +0200

    Added `CURRENT_USER`, 'USER` and `SESSION_USER` system functions.

commit 31fba7867f47091db69d907de8fb1a34d3971764
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Jul 5 12:48:04 2017 +0200

    Refactor code by extracting replace/copyAndReplace methods for WhereClause.

commit 2ac638ff35840edca8d4d753ac29ad105873ca56
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Jul 5 12:10:30 2017 +0200

    SubSelect symbols where not being replaced for CountPlans.

commit 2a93e930d031b1b244a8274f18fc99b8452383ef
Author: Alexander Dengg <alexander@crate.io>
Date:   Wed Jul 5 12:09:17 2017 +0200

    upgraded guava to latest version

commit 7170ee80a90cbbb55861fddd34ed185f293a1038
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Jul 4 20:57:32 2017 +0200

    Remove TODOs and add tests for plans with no result

commit 00684e29e0fa06a1a5033aefa711e7795e70f5fc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 4 23:11:21 2017 +0200

    Tests: Increase max retry duration in graceful stop tests
    
    test_graceful_stop_none still failed on Jenkins

commit 51c72244ca01d6d46b25c00b042744a7594137f4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 4 14:44:25 2017 +0200

    Rename blackbox/bin/test commands
    
    Prefixes all test commands with `test-` and adds a `test-all` script.

commit 96abec0d71043952a9d59f6c95cd2a1d38538526
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 4 14:37:08 2017 +0200

    Add a requirements-raw.txt to be able to re-generate requirements.txt

commit edc384c959ec2e7477eed1e0c44cd2e151443385
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 4 11:45:04 2017 +0200

    Tests: Fix test_graceful_stop_none
    
    Broke with the ES 5.2 upgrade because the error message changed.

commit e8e338427de3f4b5374fb91fface22690884fc93
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 3 17:53:24 2017 +0200

    Remove ClusterService from CrateRestMainAction
    
    This commit changes the CrateRestMainAction to use a NodeClient instead
    of the ClusterService. This is to prepare it for the ES 5.4 upgrade,
    because there it will no longer be possible to inject the ClusterService
    into a RestHandler.

commit 8b97e8687cf115319b201785eacc2e012c1596e2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 26 08:51:50 2017 +0200

    Upgrade to ES 5.2.2
    
     - PROTO based MetaData.Custom registration changed to NamedWriteable
     - Lucene upgrade 6.3.0 -> 6.4.1
     - RestFilter has been removed; so static file serving has changed a bit
     - ClusterState cannot be accessed from Index*Events; So
     ShardCollectSource now creates resources lazily.

commit c0ffcca820b457c0752f4137240a719768773b2c
Author: turbo-ele <eliash@gmx.at>
Date:   Mon Jul 3 15:25:18 2017 +0200

    Fixed documentation for starting multiple docker instances on one host

commit eedfefb0cf52879b63837764a6fc2aab3df6a7a1
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Mon Jul 3 09:15:44 2017 +0200

    improved quick config, line length and spacing

commit 12350cd1b29c00d7dc3c77e6e79ce53bf4db6ce8
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Jun 27 16:13:09 2017 +0200

    Upgraded Crash to 0.21.0

commit a4273f576eb34b59ad18437104c813bc2c161080
Author: Autophagy <mika@crate.io>
Date:   Fri Jun 30 20:35:52 2017 +0200

    Reflect 2.0.3 release

commit 8f185a85cf8ff89c69e98f9f4aa920d6e1865752
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 29 22:44:01 2017 +0200

    Prioritize /_sql in allowed endpoint validation
    
    Another micro optimization:
    
        measureIsAllowedListNotAllowed  avgt   50  23.304 ± 0.243  ns/op
        measureIsAllowedListSql         avgt   50   6.364 ± 0.061  ns/op
        measureIsAllowedSetNotAllowed   avgt   50  29.119 ± 0.433  ns/op
        measureIsAllowedSetSql          avgt   50  17.052 ± 0.153  ns/op

commit 9379786247b26d91476f38be722e0e57afa2ec64
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 29 22:25:20 2017 +0200

    Optimize `isRoot` check in CrateRestMainAction
    
    Micro optimization:
    
        measureIsRootCharAtFalse  avgt   50   2.206 ± 0.011  ns/op
        measureIsRootCharAtTrue   avgt   50   2.214 ± 0.016  ns/op
        measureIsRootRegexFalse   avgt   50  53.286 ± 2.918  ns/op
        measureIsRootRegexTrue    avgt   50  59.120 ± 0.545  ns/op

commit 874809ed80510a0f3563627633059c20119232fc
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jun 30 17:00:35 2017 +0200

    define sys columns as not nullable
    
    sys columns are never nullable.
    this resulted in a bug, using the _id column inside a function
    surrounded by NOT resulted in an exception (_id not searchable)

commit 6d54a3a263014f10d38aa6228422ec0ea5af7cab
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jun 30 16:09:00 2017 +0200

    fixes tests, follow up commit of 195cf158a8eb83403b06273723228ebbf4c0a657
    
    _raw column is now forbidden inside a where clause

commit db01a4f29ba4385d88cd2e21fa1702e15cc857f5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 30 13:40:46 2017 +0200

    Change bootstrap to use python36
    
    Will allow us to use new features like f-strings in the blackbox code.

commit 2871b658b3a9b54eaa49b4019ec1f1b87be77144
Author: Michael Beer <michael@crate.io>
Date:   Fri Jun 30 13:13:38 2017 +0200

    added Appveyor CI project configuration

commit 195cf158a8eb83403b06273723228ebbf4c0a657
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jun 30 14:18:53 2017 +0200

    throws proper exception when using the `_raw` column inside a where clause

commit 367124009f527c9399fd6959cbf2c2da46364470
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jun 30 14:17:59 2017 +0200

    re-enables range query support on the `_id` + `_uid` columns
    
    also see https://github.com/crate/elasticsearch/pull/123
    fixes https://github.com/crate/crate/issues/5845

commit c9e427a0ac2399d69a680645b0d2cbd4bcdbb6a5
Author: Michael Beer <michael@crate.io>
Date:   Wed Jun 28 14:51:36 2017 +0200

    add ``subjectAltName`` to server certificate
    
    ``subjectAltName`` must always be used  (RFC 3280 4.2.1.7, 1.
    paragraph) and is required in Chrome 58+

commit 94b34c911e3e08da9f5cf5937783c2a3d8ea2ca3
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Jun 29 17:45:01 2017 +0200

    Separate enterprise libs and plugins
    
    - enterprise libs are now in 'libs/enterprise/*'
    - enterprise plugins are now in 'plugins/enterprise/*'

commit c2a678ae3ddf984a4fb43b28c1a7ba9a3fc048d5
Author: Maximilian Michels <mxm@apache.org>
Date:   Fri Jun 30 11:57:04 2017 +0200

    Move 'lang-js' to enterprise module

commit 5766b61f001cc6e543cf2d0a56f9af2a9e05e5e0
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed Jun 28 17:41:41 2017 +0200

    Move 'jmx-monitoring' to enterprise module

commit 7ef45bbff3ee40668dcb400eec4e982976cf1ce8
Author: Maximilian Michels <mxm@apache.org>
Date:   Tue Jun 27 12:58:15 2017 +0200

    Move 'users' module to enterprise module

commit a06dc179025ea9b43fcef5197aae3dc1b9262a9c
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Jun 26 12:14:51 2017 +0200

    Move 'ssl-impl' module to enterprise module

commit 04fe15725da486aa976a3b093ba3a879fafe5ff3
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Jun 26 11:15:56 2017 +0200

    Group enterprise code in 'enterprise' module

commit b0ac0557875fb4cb6485455b79f5582c88631c29
Author: turbo-ele <eliash@gmx.at>
Date:   Thu Jun 29 16:15:11 2017 +0200

    Removed 'ForLoopReplaceableByForEach' and 'PointlessBooleanExpression'
    as defaults from code inspection when building a new idea project file

commit cbcf6d2afda5dfa24fe66b616a362285e2f03de7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 29 21:57:05 2017 +0200

    Merge CrateRestFilter into CrateRestMainAction
    
    To make the ES52 upgrade easier, as now there is only 1 RestFilter
    implementation remaining.

commit 14e0fac4961ae104391e2059fb750ddf5a5969e6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 29 17:25:31 2017 +0200

    Integrate admin-ui java logic into http module
    
    So far we've had 2 RestFilter implementations. 1 in `core` and 1 in
    `admin-ui`.
    In ES52 the `RestFilter` functionality has been removed. There is a
    replacement, but only a single plugin can use that functionality.
    
    This commit moves the "serve JSON on /" functionality from `core` to
    `http`. In addition, it moves all logic from `admin-ui` into `http`.
    This way we get rid of a bit duplicated guice-injection magic and it
    will be easier to merge the two `RestFilter` implementations into one.

commit 11652b1b37fac47fee25105f64e536e24b982009
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 30 09:16:10 2017 +0200

    Merge DDLTask and DCLTask

commit 5bf01a5b83fb447dc031a546bf1c07db149767bd
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jun 29 18:08:20 2017 +0200

    fixes template renaming while renaming a partitioned table
    
    the template prefix which is used to match against a given index name
    was not renamed and so this template would still match on the old table
    name. this results in that partitions will belong to the wrong table.
    fixes: https://github.com/crate/crate/issues/5823

commit 10d27642a71fdedea95f81bf76a1f7caa0059f65
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Fri Jun 2 13:51:46 2017 +0200

    implements support for grant/revoke global(CLUSTER) privileges
    
    if a user is available (only enterprise version with enabled HBA),
    all statements and exceptions will be validated against privileges
    a user may have. otherwise an exception is thrown.
    superusers will completly by-passes these validations.
    newly created users won't have any privileges and so cannot access anything.

commit d332c537f8162cf9e4c2318eae34ac4a7cee1394
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Jun 28 23:17:20 2017 +0200

    Minor code and formatting improvements.

commit 0ff6b1972fce45e2315b7f4193bb3d87cd2a0dc1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 28 22:08:02 2017 +0200

    Remove some unused declarations

commit 35c8a801b01cde4730f18a02ac42c2c510be8dd1
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Jun 26 11:15:56 2017 +0200

    Decouple HttpsHandler from PipelineRegistry

commit 7d80a0fa947d1799747b0584abb2c2401feb1b22
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 27 23:41:41 2017 +0200

    Add static factory methods to make expr impl simpler

commit 8b90246e184a9ef9867af51876200ab299c65272
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 27 23:26:41 2017 +0200

    Optimize sys.snapshots concrete_indices expression

commit c899713b6f267b3380a24804058a260f1e65c1b6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 28 14:10:48 2017 +0200

    Disable gradle daemon on travis
    
    For CI environments it's recommended to disable the daemon.
    
    See https://docs.gradle.org/current/userguide/gradle_daemon.html#when_should_i_not_use_the_gradle_daemon

commit b64c7008e5e84c7cd9f9f8e9b7d35002318b67f5
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed Jun 28 12:13:33 2017 +0200

    Generate separate keystores for node/client
    
    Some browsers (Chrome on Windows) only take the first certificate in the
    keystore. It is also more practicable to separate client and server
    certificates.

commit 16ca3192f41fc5c378c632bdcdf2eed5c802b61b
Author: Maximilian Michels <mxm@apache.org>
Date:   Tue Jun 27 18:33:15 2017 +0200

    Cert auth: add CA certificate to keystore
    
    We need to add the CA certificate to the keystore; otherwise the server
    is not able to verify the client certificate.

commit 48df9027545d9df302cbea0bd0a070fb7f483fa4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 27 22:59:04 2017 +0200

    Re-use `getChildByPath´ in RowContextReferenceResolver

commit efa1cd515feb269f818cdf7d5a5aaf166bc8ded7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 27 22:24:36 2017 +0200

    Remove unnecessary implementation overrides

commit 483857a249a07038558ca8caa3d78600a5e6c0d9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 26 16:58:04 2017 +0200

    Remove PartitionedColumnExpression
    
    LiteralReferenceImplementation can be used instead.

commit 934c470d11fcc2c9346d4236d78e17f930c5e2c2
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Jun 26 15:23:35 2017 +0200

    Fixed test failing locally due to host address.
    
    Use 127.0.0.1 explicitly as InetAddress.getLocalhost() can return a non loopback address.

commit 58859cb87fbdaa692f4c73641177f71033f653e9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 26 16:07:42 2017 +0200

    Sync netty jvm options with es/upstream

commit c3e0bc39f2cb98561656da471cd1184511896d97
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jun 26 16:16:47 2017 +0200

    fixes exceptions thrown on create/drop user
    
    also enables the user management doc tests

commit edb7d0b9e27ca09cb1c6f1c9a55e94750113350f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 26 15:17:54 2017 +0200

    Fix ByteBuf leaks in PostgresWireProtocol

commit 97bd4fc0e216ab8e2a7eb456d226c3ea32ab3b7f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 26 15:07:08 2017 +0200

    Fix ByteBuf leak in HttpBlobHandler
    
    Running the tests with `-Dio.netty.leakDetection.level=paranoid`
    uncovered the leak.

commit e9d0dbe52ed6cb4598f29a9bb3222ae2afaf9047
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Jun 26 14:47:38 2017 +0200

    Use separate logging msg for HTTP & PG.

commit 7e94e1922829a9b162a70bfdfddfa30d56699c5f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 26 11:15:14 2017 +0200

    Improve error message of client cert CN / username missmatch

commit 7be5fd966eee73709ed8b0a4ee0b0ea44671cf61
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 23 15:45:44 2017 +0200

    Prefer user in client cert over trust-auth setting
    
    This commit changes the precedence to infer the userName from HTTP requests:
    
     - Use `X-USER` if present
     - Use commonName from client certificate if present
     - Fallback to `auth.trust.http_default_user` setting or `crate` if not
     available
    
    Without this change client certificate authentication via HTTP didn't
    work without using the `X-USER` header.

commit 36716f0312cdebf34a4202c85394fa50da97aeaa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 26 08:42:00 2017 +0200

    Replace custom Acceptor with Consumer<Object> in ForEach

commit 62d73f994f8ee7860674913c1426c0c3af062671
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jun 23 17:47:49 2017 +0200

    reflect release 2.0.2

commit cbb816878e4fff00497bde49822f2794e47c0914
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 23 16:03:01 2017 +0200

    Docs: Add a prelude to the ssl configuration section

commit ccc4a016effc31d4a48333f142b9043a6c198ad5
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jun 23 15:11:11 2017 +0200

    reflect release 1.1.6

commit 74b6482ec3dd4d205e47529aaffc4e077c013433
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 23 14:11:30 2017 +0200

    Tests: Fix flaky testMinimumMasterNodesCheckSetNotCorrectNumberOfMasterNodes

commit 7cefec48217d2a79a6acf9b0451e2b09832481d6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 22 17:40:47 2017 +0200

    Add script to simplify cert creation for tests

commit 559554ae532ae194bf6e7546782cc3ca1770c07b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 20 15:51:49 2017 +0200

    Docs: Update postgres protocol SSL & auth section

commit 6a6073b41394be01b6324d672cf849e9dd96ee60
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Jun 23 12:03:49 2017 +0200

    Fixed: Aggregations on generated columns.
    
    Reported here: https://github.com/crate/crate/issues/5792

commit f2dee79884d278d87d670c22ee685c8c56c74109
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 23 11:16:29 2017 +0200

    Remove usage of internal X500Name API to parse CN

commit c83b1e4141abb6b0e31a80774c3573761d3e885b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 21 11:40:26 2017 +0200

    Add HBA Client certificate authentication support

commit 1ef802ab127e32bb80c0e01ef539c183cd7bcfb3
Author: turbo-ele <eliash@gmx.at>
Date:   Thu Jun 22 17:22:35 2017 +0200

    Added size estimation for null values

commit 96edf8608b1be3b0b306867a97677bb061fde398
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Jun 22 17:16:34 2017 +0200

    Fix false decrement of reference counted messages
    
    The HttpAuthUpstreamHandler grants permission for messages in the
    Netty pipeline. It uses the SimpleChannelInboundHandler which, by
    default, releases reference counted messages after calling the channel's
    read method. This leads to an unwanted decrement of messages and results
    in downstream errors like the following:
    io.netty.util.IllegalReferenceCountException: refCnt: 0, decrement: 1
    
    This disables automatic releasing and releases the reference counted
    message manually only in case it is not forwarded to the downstream
    handler.

commit d425cd2ae7bfea3fa74379b3f4142efa892b9a2c
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Jun 22 17:00:31 2017 +0200

    add CHANGES entry for HTTPS feature

commit 45ea73562c7081058844a156f09e047018e89e1c
Author: Andrei Dan <andrei@crate.io>
Date:   Thu Jun 22 11:06:11 2017 +0100

    Add `empty_row` table function and use it implicitly in statements without `FROM`
    
    Statements without `FROM` would implicitly use the `sys.cluster` table
    as a target. `SELECT 1` is often used as a connection check and we still
    want to support this after the schema privileges feature is rolled out.
    This commit replaces the `sys.cluster` relation with the `empty_row` table
    function relation that generates an empty row without any column. This
    will allow us to use the control `SELECT 1` statement after schema
    privileges are relesead (as the user will not need special rights on
    the `sys` schema).

commit 7c31948791efd04fbc548bfdae2fc2c28cb95a8a
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Jun 22 18:16:47 2017 +0200

    Add runtime HBA dependency for crate sandbox.

commit a05b9bd3a7f978ed606c0b62cfff074f92dc5306
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Jun 22 15:51:21 2017 +0200

    Point to latest v5.1.2_cherry commit.
    
    A fix for a flaky test has been merged and squashed: https://github.com/crate/elasticsearch/pull/122

commit 2924c4e29791d3861b392b00ea4f124b64defd73
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jun 22 16:14:06 2017 +0200

    fixes collect expression for the `_id` column on pk GET requests
    
    the `id` of the GetResponse is a String, but collect expression is of
    type BytesRef.
    this resulted in a ClassCastException where BytesRef was expected.

commit eda500f6408e436435f34d0061c1d3ac812d4bf9
Author: Elias Hiller <elias@Eliass-MacBook-Pro.local>
Date:   Thu Jun 22 09:39:21 2017 +0200

    Added generic fallback to array of object on is null

commit ea8afc476dee692a76c59f23d5f6af5f29c80809
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 22 14:03:06 2017 +0200

    Tests: disable hostname verification for https tests
    
    Otherwise the test fails if run on a machine where the IP to which Crate
    binds to resolves to a name other than "localhost".

commit 699bbfff81fe79c783bf163f4aebd7041df580d5
Author: Maximilian Michels <mxm@apache.org>
Date:   Tue Jun 20 15:15:04 2017 +0200

    Integration of HTTPS with HBA
    
    - enables to use the `ssl` config option with the 'http' protocol

commit ead9493c1d6a90bbbe6a36c24a60c04a6da4b6c7
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Jun 15 14:31:23 2017 +0200

    Introduce HTTPS support
    
    - support for SSL encryption through the HTTP endpoint
    - documentation updates

commit 826566447cd4af01f700389343353c6eebb8f5a8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 22 14:42:32 2017 +0200

    Add ssl settings to crate sandbox configuration

commit bc1dff4e7f06785f7e0c4c0de9e8b7262f5e8bb9
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Jun 22 11:39:49 2017 +0200

    Fix issue with JOIN on >=4 tables with ORDER BY.
    
    When building the join tree in the ManyTableConsumer we try to find the optimum order
    of relations based also on the ORDER BY. The ORDER BY has the highest priority so we
    move the tables that are included in the ORDER BY symbols to the left side of the tree
    so that are joined as early as possible. If the join conditions contain relations that
    are not immediately adjucent in the original query (eg: ... t2 JOIN t3 on t3.id = t1.d)
    the new optimized ordering could lead to a situation that we try to apply a join condition
    that contains relations which are not already part of the tree.
    
    To solve this problem a new Map structure is build which holds the join conditions and
    helps to apply the following logic:
    
    During the construction of the join tree at the depth that is currently being built with
    with the help of the new Map we try to apply all the eligible join conditions for that depth,
    so we end up with a join tree where the join conditions are applied as early as possible.
    
    This commit fixes: https://github.com/crate/crate/issues/5747

commit c78a3bd7bf2cbc46c6a192e7736b945059e4520f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 20 17:13:58 2017 +0200

    Simplify ReadyForQueryCallback

commit 1b1342a7c912b41e91512f254a7bec8652961561
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 22 09:45:32 2017 +0200

    Tests: Make testMinimumMasterNodesCheckWithCorrectSetting faster
    
    Starting the first node with `minimum_master_nodes` set to 2 will cause
    it to run into the `publish_timeout` (30 sec).
    
    This caused the test to take always at least 30 seconds. Now it's down
    to < 1 sec.

commit 867dec32abeeefd3e54e141f5fe1aec466336acf
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Jun 21 11:46:17 2017 +0200

    added documentation about NaN and Infinity

commit 78b001b8c1cc4056de82067f873336dc480edf90
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 21 23:06:28 2017 +0200

    Reduce amount of tests run on travis
    
    The full test suite is taking too long (> 45 min) and is now often
    failing because of the time limit on travis.
    
    All tests are also run on Jenkins - so this reduces the tests that are
    run on Travis to `:sql:test` - this should still be useful as flaky
    tests tend to fail more often on Travis.

commit 521f38fa2e8418f6429722e11c5c7faf2c389716
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 21 15:43:12 2017 +0200

    Change num replicas from 1 to 0 in single-node itests
    
    Made the tests a lot slower because of the wait-for-active shards
    timeout.

commit d69d079bc9807e2fccd1a14fbd732395b270f692
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 20 17:41:03 2017 +0200

    Consider SSL as connection property instead of as separate protocol
    
    Main purpose here is to add `ConnectionProperties` which can later be
    used to hold additional information about a connection, like information
    about a client certificate.
    
    In addition, these changes here will probably make further HBA / SSL
    changes for HTTPS unnecessary.

commit ee04cfa1e1fdb8a1b4318c97bd1da4d31fe1a6d5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 21 14:46:07 2017 +0200

    Correct `execute` usage in gradle getVersion task
    
    `exeucte()` returns a Process and `in` is the `PipeInputStream`.
    Using `.text` on `in` would sometimes not return anything. (And it's
    somehow odd that in most cases it *does* return something)

commit 919fec3c4e47f61336d8db9970b42a9bb7b408ed
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jun 21 12:46:00 2017 +0200

    fixes insert pk values analysis, the index of pk values must be ensured
    
    it must be ensured that primary key values are always put into a list in
    the same order as they are defined on table definition so that inserts
    and queries will always compute the same ID.
    fixes https://github.com/crate/crate/issues/5763

commit 9254e75e0b27fd4fb548e7a27cb3684b499ec419
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Jun 19 12:06:25 2017 +0200

    Ssl docs: clarify role of CN for https

commit d0aa6486d9e0c957e4b4c28f2c387904d1cab99d
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Jun 19 12:02:13 2017 +0200

    Ssl docs: use RSA algorithm for key generation
    
    This prevents issues with modern web browsers which dropped support for
    some DSA ciphers. Also bump the SSL version to "TLSv1.2".

commit 2605d82ab65581c27150a970f8716c5fcf8f5712
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 21 12:13:11 2017 +0200

    Remove testing only Authentication / AuthenticationMethod implementations

commit 2908263ac7306f83e7e68193b9e601eef93e03ac
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 21 11:47:27 2017 +0200

    Tests: Remove noopAuthMethod implementation from HostBasedAuthenticationTest
    
    There is a `TrustAuthentication` method available which can be resolved
    instead.

commit 0cc19e9a3538351b42c1901332444cedb0f308d4
Author: Maximilian Michels <mxm@apache.org>
Date:   Thu Jun 15 16:05:06 2017 +0200

    Restructure modules based on protocols
    
    This moves code into one of the following packages:
    
    - postgres
    - http
    - ssl

commit 2ceb39d7fc417a659d7747a21f8168743a795ae7
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Jun 20 16:09:57 2017 +0100

    ShardRequest description doesn't include all items in the request.
    
    Having the items in the ShardRequest `toString` is useful for debugging
    purposes (especially in tests).
    The description of a request, though, is used in the tranport and does not
    need to include all the items.

commit 44c87879cea5b72b577b0c15878cfeb5c682b855
Author: Andrei Dan <andrei@crate.io>
Date:   Tue Jun 20 16:06:33 2017 +0100

    Create a new request after submitting the `current` one for execution.
    
    For bulk operations (like `delete from...`, `update...where`) we collect the
    information about the target items until we reach the bulk size, at which point
    we execute the operation for the current bulk. While executing the current bulk
    we concurrently collect information about the items in the next bulk.
    We "buffer"/"collect" the items in the "next to be executed" bulk in a request
    object. Due to the concurrent nature of the collection and execution of bulks
    we need to make sure we use a *different* request object to collect the items
    for the next bulk (while the current one is executing).

commit c59b1ba06f76f7fec29107474a1ea7bd09ddd34e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 20 17:08:52 2017 +0200

    Rename ConnectionContext -> PostgresWireProtocol
    
    `ConnectionContext` sounds like it contains some properties that
    describe the aspect of a connection. But the class is actually the full
    implementation of the wire protocol.

commit 9c8c6861f316ab94b46759a227e61f3bfb01b13e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 20 16:46:35 2017 +0200

    Tests: Fix rare failures of testTimingOutNode
    
    Add disruption recovery. Sometimes the test failed as there were pending
    cluster state changes.

commit 92e16eda0f29ad6cd703fa9287921df9f178a43d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 20 14:06:48 2017 +0200

    Improve sys.nodes resiliency
    
    `NodeDisconnectedException` is now handled the same as a
    `ReceiveTimeoutTransportException`: The exception no longer causes a
    failure but results in a `nulled` (+ node name + id) row.

commit cfa539d2618d413fc4b2a8700ac0654fdcbbbe54
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jun 20 14:24:31 2017 +0200

    fixes reading of the UsersMetaData out of the persisted global state
    
    each metadata custom must consume the surrounded object token,
    otherwise possible following customs are not read

commit 18a540433746a2e8ae12a1b27ca074266ed310de
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Jun 19 19:29:07 2017 +0200

    Apply CircuitBreaker logic to PagingIterators.
    
    During a distributed operation the memory used in the PagingIterators
    is not accounted at all which leads to OOMemoryExceptions which results
    in killed nodes.
    
    Added a new RamAccountingPageIterator which wraps the actual PagingIterator, calculates
    the memory used and produces a CircuitBreakingException when the limits are exceeded.
    So instead of having OOMemoryExecptions which kill node(s) of the cluster the job is killed
    and the cluster is unaffected.

commit 9eb05facd0c2edc564811651231ecad214f06c11
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jun 20 12:28:29 2017 +0200

    testing: upgrades crate-python to 0.19.4

commit bf7a34aeefef937b32461716682c6d14006577e0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 20 11:37:03 2017 +0200

    Make sure DELETE statements with _version filter don't fail
    
    This removes the ESJobContext abstraction:
    
    The InternalActionListener called `context.close(e);` - this by-passed
    the error handling in the `ESDeleteTask` and caused a race condition, in
    that sometimes a VersionConflictEngineException would be propagated to
    the user instead of being turned into row-count 0
    
    `testDeleteWhereVersionWithConflict` was flaky because of this.
    
    Having a context for the delete case is mostly just overhead. There is
    no way to KILL an ongoing delete request.
    
    This also causes us to loose `sys.operations` entries, but it's already
    documented that there may be operations without an entry, and we still
    have the `sys.logs` entry.

commit 818b5e9747755e1f19881bb5379b8d4100f23ece
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 19 00:01:40 2017 +0200

    Remove `createBackpressureTrigger` indirection from ShardDMLExecutor

commit 1a63bc80c81f6c1faa89140c4f6b22816aae6952
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Jun 18 23:35:43 2017 +0200

    Remove duplicate code from UpsertByIdTask

commit be1c96a331403ff4177e11ad1755744ad942a0f1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 19 16:32:50 2017 +0200

    Change BatchIterator allLoaded to never raise
    
    This fixes some uncaught exceptions that could happen.
    
    We've a couple of BatchIterator implementations which call `allLoaded`
    of another BatchIterator from within `loadNextBatch()`.
    `loadNextBatch()` should return a failed future instead of raising, but
    if `allLoaded` raises an exception it bubbles up.
    
    Instead of adding `try/catch` blocks this commit changes the contract
    because `allLoaded` is usually a very cheap check that doesn't require
    any other resources.
    
    If a BatchIterator has been killed or is closed the next `moveNext()`
    call will fail anyway. This slight delay doesn't matter.

commit 1cd5bddb670e899d00e1a00bb5d2fee48a856b43
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Jun 19 09:30:31 2017 +0200

    ssl-impl: Add version to module jar
    
    The jar currently misses a version suffix and a manifest.

commit 46f9ab55393aed125723bec77fa300169cb258e0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 19 11:02:33 2017 +0200

    pgwire: Make sure client receives errorResp before readyForQuery
    
    Due to the netty4 upgrade the client could receive the `readyForQuery`
    message *before* it received a `error` message, instead of *after*. This
    resulted in a "zero row-count result". The error was simply swallowed.
    (Or might have caused other strange issues, in subsequent queries)
    
    `testScalarEvaluatesInErrorOnPartitionedTable` was flaky because of
    this.

commit 0ef0601ff9b5e2ff8199f1227836afba1a1f933e
Author: Andrei Dan <andrei@crate.io>
Date:   Fri Jun 16 15:52:20 2017 +0100

    Stop bulk operations when killed (propagate InterruptedException signal)
    
    Insert from query and copy from operations failures are generally
    counted in the "affected rows" report. That's usually fine, except
    for when the operation is killed, in which case we need to stop and
    fail the operation, propagating InterruptedException.

commit cde185de014df0e13e55610028fe25830cf8952c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 14 20:14:36 2017 +0200

    Remove onModule related code form PluginLoader
    
    onModule is no longer called, so any onModule related code in the
    PluginLoader is no longer useful.

commit 75520ee6530daa7566fb79b95ee3965c789e99fe
Author: Maximilian Michels <mxm@apache.org>
Date:   Fri Jun 16 11:54:49 2017 +0200

    ssl: improve exception handling in loader
    
    We only load the ssl implementation when ssl support is enabled. Thus,
    we shouldn't catch the ClassNotFoundException but fail when we can't
    find the implementation class.

commit eb808caf47666dd14cc8e805c24bab33907ef306
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Jun 15 21:02:10 2017 +0200

    Added missing expected Exception

commit eb82a3b1ce675c531d912b64004513650ac73d8f
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Jun 14 12:28:29 2017 +0200

    Added changelog entries

commit 6d9953f9fe4559f2d6c4e41bbc380d0a12732473
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Jun 12 13:35:28 2017 +0200

    Tutorial for setting up a Truststore/Keystore

commit f348ea6044e012229726ee13d46b074a4d1767c1
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Jun 13 21:32:41 2017 +0200

    Added documentation for HBA ssl config param

commit 0de8039c148d0d9b8b309432375068fd3374fc13
Author: Maximilian Michels <mxm@apache.org>
Date:   Tue Jun 13 17:26:05 2017 +0200

    Integrate HBA with SSL support
    
    This integrates the new ssl-impl module with the users module. The HBA
    config now has an entry ssl which may be on, optional, or off. There are
    unit and integration tests in the users module to verify the
    functionality.

commit 87c323e5e33878f9c6dffcb0743b903264c4594f
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Jun 13 11:09:59 2017 +0200

    Documentation for psql SSL/TLS

commit 42e4d77b2af47e098246f5d9a330e9e8575994ea
Author: Maximilian Michels <mxm@apache.org>
Date:   Fri Jun 9 12:06:33 2017 +0200

    Introduce SSL support for PSQL connections
    
    When receiving a PSQL SSLRequest message, we now have two SslReqHandler
    available: One for rejecting SSL requests (SslReqRejectingHandler) and
    one for modifying the Netty ChannelPipeline to configure and add a
    SslHandler (SslReqConfiguringHandler).
    
    - new dedicated module ssl-impl which is loaded in the enterprise version
    - configures PSQL Netty SslHandler with keystore/truststore
    - exposes new configuration parameters to the user with explicit on/off switch
    - add unit and integration tests

commit 28aaa09d02ec77204f895a00fd67870cb59ea4d4
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jun 15 16:42:23 2017 +0200

    fixes namespaces at the `users` subproject

commit 48d0cc22be9d63fa00f1dbce442191188a899a86
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jun 15 16:37:08 2017 +0200

    creating or dropping a user is now an acknowledged cluster operation
    
    so the statement will only respond if all nodes in the cluster processed
    the cluster state change

commit 4460bc09561e4a5a1509d9a1b45339952941625c
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Jun 15 15:47:42 2017 +0200

    Fixed TableInfo creation for unnest().
    
    The comparator for sorting the columns numericly and not lexically is also used when issuing
    get() on the ImmutableSortedMap/Set so it should be implemented with more complex logic.
    
    Instead of that we skip ColumnRegistrar and we create the Map and Set
    of columns presorted as we need.
    
    This is a followup of commit: e1a76e1ea0628d423b9eb09fd80c141f68dc5401

commit e1a76e1ea0628d423b9eb09fd80c141f68dc5401
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Jun 15 11:09:38 2017 +0200

    Fixed: using `unnest` with 10 or more columns.
    
    When creating the temp TableInfo for the table created by unnest
    we were using lexical ordering of the columns which caused an ordering
    like this: col1, col10, col11, col2

commit a176907a3dba4167021feda7a048b6d49e045c4f
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Jun 14 11:01:03 2017 +0200

    removed reference to unassigned.node_left.delayed_timeout setting
    
    in rolling upgrade docs and use cluster routing settings instead

commit bd242566a3ac7ad4b1d071366f0ed8cca5bf14f4
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jun 13 07:43:17 2017 +0200

    updated release notes to reflect release 2.0.1

commit 24af8cda868faa331ae98af71b3b53e9bb08eb9d
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed May 31 13:39:02 2017 +0200

    improve jobs and opperations log docs

commit c4b50155aa09a7dcd36b2f360d19d347ea180d34
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 7 17:08:58 2017 +0200

    Prevent creation of invalid JoinPair instances
    
    This commit restricts the API so it's impossible to create
    INNER/LEFT/RIGHT/FULL JoinPair instances that have no join condition.

commit a1703ad3328d9059b079268fb8538da79b89aeb9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 29 18:06:25 2017 +0200

    Upgrade to elasticsearch 5.1.2

commit cd0442eb3e1f81ffcb039d06479698eeee26501c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 12 17:03:09 2017 +0200

    tests: Fix flaky testBatchOperationStatsTableFailure
    
    The test uses the Statement.addBatch API, but there are 3 different
    statements so it cannot be executed as bulk. This can cause a different
    behaviour in the response: Sometimes the whole request fails, sometimes
    the request succeeds but the response contains a 0 row-count indicating
    a failure.

commit e5090eed7feef60c494528267d0227b27dbe0418
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 12 16:42:58 2017 +0200

    tests: Remove duplicate stmt definition in PostgresJobsLogsITest
    
    Each statement was a second time with string escaping so it can be used
    in the WHERE class on a query on sys.jobs_log. By using prepared
    statements this duplicate definition is no longer necessary.

commit b33aae657740d176be3c33616b5ccc45607fd75f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 12 16:42:19 2017 +0200

    tests: Allow PostgresJobsLogsITest to run in parallel
    
    This makes the port binding dynamic so that the test can be started
    multiple times without running into port binding errors.

commit 4635d8f8c5a7adf5872fb7b240fa176318f2848f
Author: Autophagy <mika@crate.io>
Date:   Mon Jun 12 18:36:41 2017 +0200

    Added example settings for enterprise features in crate.yml

commit bbccfd4f0b399651545b12294d64842d23255806
Author: Autophagy <mika@crate.io>
Date:   Mon Jun 12 18:41:39 2017 +0200

    Fixed 1.1.5 docs

commit 7e6f02602945c0237079be4d7f1001cae489c880
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Jun 12 17:20:35 2017 +0200

    Fixed sections/subsections nesting for authentication configuration.

commit d914a14d7fdefeadf89f6525c009bbc9b5fdd306
Author: Autophagy <mika@crate.io>
Date:   Mon Jun 12 16:58:05 2017 +0200

    Updated release notes to reflect 1.1.5 release

commit c6dbac34936fb7ee04efb565caf6172d3e3014f7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 12 15:21:07 2017 +0200

    Fix insert error handling & fix testDeletePartitionWhileBulkInsertingData
    
    A IndexNotFoundException in the UpsertByIdTask could be swallowed.
    
    In addition this commit changes the tests in
    `PartitionedTableConcurrentIntegrationTest` to be less resource intense.
    There was a chance that the first requests would run into a timeout when
    creating the index + waiting for the shards to become active.
    
    This could even lead to a "shard leak" because the test could finish
    with the request still being active.

commit f1f12bfa07b96e1ba7f19fecdb364e48bdaf34cd
Author: Michael Beer <michael@crate.io>
Date:   Fri Jun 9 11:10:08 2017 +0200

    fixed value comparison of data type array

commit f441279e2d67be4252293eee455ddcab4df64661
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Jun 9 13:00:08 2017 +0200

    Fixed update of ObjectArrayMapper.
    
    Avoid clonning the ObjectArrayMapper if not necessary.
    There is a new assertion that is introduced with in ES 5.1 in DocumentMapper which would fail
    with existing logic.

commit 3844d98947da35edae5da6e7d292ac20a46d168e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 8 17:18:01 2017 +0200

    Load sigar without relying on onModule
    
    The `onModule` Plugin functionality will be removed with ES 5.1 - so
    this commit changes the sigar load mechanism to use a ServiceLoader
    instead.

commit 0ec17d66f2996640575dbe0b309be94e5309eb1e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 7 16:59:23 2017 +0200

    Tweak JOIN ORDER-BY push-down optimization
    
    Instead of duplicating the ORDER BY expressions onto the sub-relations,
    they're now either fully moved or not at all.
    
    This can significantly improve the speed of a query (In one test-case
    the runtime decreased from 800sec to 5sec)

commit 68fa19ed92627977f1c6e872a0d4c636b99862fb
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Tue May 30 14:01:25 2017 +0200

    update get_range function

commit 4c754ad66684c1a14cfa15f3adba9f3e9019625c
Author: Christian Bader <christian.bader@crate.io>
Date:   Thu Jun 8 15:55:47 2017 +0200

    Return proper exception when group by is used on count(distinct)

commit fe051fd936a263ef517d19ced14d78306f370609
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed Jun 7 15:08:17 2017 +0200

    update enterprise config wording

commit 390ef4d2dd7a719ae0e8e879c7fb37bb28293727
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Jun 6 17:07:25 2017 +0200

    fix spelling

commit b59220e61e2072d692a0d6a8351da7693e007713
Author: Michael Beer <michael@crate.io>
Date:   Wed Jun 7 15:56:46 2017 +0200

    fixed lost alias in select list on subselect queries

commit 4211b595b58737b85c9162e2d52e25184eca4edb
Author: Michael Beer <michael@crate.io>
Date:   Thu Jun 8 11:52:44 2017 +0200

    rename test method of lost alias fix
    
    fixed with 9f442eefc6803cf1dad880e58be72456b5f17727

commit 7a5bf48a654f8811d1d16eb6d71ee18639bbf11f
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Tue Jun 6 16:40:06 2017 +0200

    expose new  SETTING WRITE_WAIT_FOR_ACTIVE_SHARDS
    breaking change: num_of_replicas defaults to 0-1
    breaking_change: write.wait_for_active_shards defaults to `all`

commit 2f867b1d412b982c9d06a022c646f5e1399797e3
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Wed Jun 7 17:40:42 2017 +0200

    remove unnecessary table setting section

commit 55f90207c71ecf2392e2067a19102a2ceed03bcf
Author: Maximilian Michels <mxm@apache.org>
Date:   Tue Jun 6 14:22:15 2017 +0200

    Refactor SSL handling into separate module
    
    This introduces an SslHandler interface for handling the SSL setup for
    the Postgres protocol. The interface and its default implementation, the
    SSLRejectingHandler, are now in a separate "ssl" module.
    
    This will enable us to have a separate module which implements SSL
    support.
    
    This closes #5688.

commit e2be47cef24f479d779aaf627295f76215e6ed1f
Author: Autophagy <mika@crate.io>
Date:   Wed Jun 7 14:44:22 2017 +0200

    REST row count reciever now throws an SQLActionException when it fails

commit d1adc14186a5ba208747fe26c9b9233764032b6e
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Jun 7 12:10:55 2017 +0200

    fixed ram accounting for geo_shape in http result

commit 3cbfe98218c8edc779b26e1a55ca739396edc176
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 7 11:47:26 2017 +0200

    Fix aggregate on virtual table planning (use correct outputs)

commit c25f3cdb8c70286cb9f1e97700da69da2e06e7d7
Author: Christian Bader <christian.bader@crate.io>
Date:   Tue Jun 6 16:56:36 2017 +0200

    Fixed wrong default translog.flush_threshold_size

commit d57d12b2e663ca19a206cd3b65bf93b1fb22689f
Author: Michael Beer <michael@crate.io>
Date:   Tue Jun 6 15:23:29 2017 +0200

    added information for setting ``translog.sync_interval`` to reference doc

commit 64ae2ed178113894cf7ce8df420fd08322093aca
Author: Andrei Dan <andrei@crate.io>
Date:   Fri May 26 16:07:47 2017 +0100

    Make the translog durability configurable.

commit 3e049cd041f2c8c22bf9899fc08ee4d5b86b9bcd
Author: Andrei Dan <andrei.dan@crate.io>
Date:   Tue Apr 25 16:08:36 2017 +0100

    Execute bulks in parallel using BatchIteratorBackpressureExecutor.
    
    BatchIteratorBackpressureExecutor supports concurrent bulk execution
    until the backpressure trigger pauses iterator consumption and schedules
    the `current bulk` (the one that tripped the backpressure trigger) for
    later execution (the ScheduledThreadPoolExecutor we are using will not throw a
    RejectedExecutionException when submitting new tasks because we are using one
    with Integer.MAX_VALUE maximum pool size. This means that the pool will reject
    new tasks only when shutdown (which we treat as a programming error).
    ShardingShardRequestAccumulator is renamed to ShardingUpsertExecutor and
    uses a BatchIteratorBackpressureExecutor to execute upsert bulks in
    parallel.
    ShardRequestAccumulator is renamed to ShardDMLExecutor and uses a
    BatchIteratorBackpressureExecutor.

commit 49c9a020468d988a30142bd2b2c6c46027c2f352
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 20 23:53:28 2017 +0100

    Remove BulkShardProcessor

commit b6e82fa2b7bdf9e6feef9315a79b05d2fa140932
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 17 23:37:49 2017 +0100

    Implement DMLProjector as BatchAccumulator

commit 984ec3c82ad0b74b37fe5755c8e0fedef86b204a
Author: Christian Bader <christian.bader@crate.io>
Date:   Tue Jun 6 09:58:28 2017 +0200

    Updated documentation regarding not implemented information_schema columns

commit 90584dccff922f98af0a111e069b2ae6ef140058
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 2 16:14:23 2017 +0200

    Sync es/es-testing deps with es/upstream deps

commit 055accd71c4fc9bdf2a5990aba634443a752732b
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jun 2 14:34:09 2017 +0200

    updated release notes to reflect release 1.1.4

commit a64aba13dd7b69d72b0249918d5ab75440eadbcb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 2 11:08:52 2017 +0200

    idea/codeStyle: Disable wildcard imports
    
    ES has introduced style checks which cause failures if wildcard imports
    are used.
    
    So in order to avoid these failures this commit changes our settings to
    prevent wildcard imports.

commit c8146f6f8ae59027d47111c57df53775269f6b52
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Jun 2 10:48:37 2017 +0200

    Fixed weird log message coming from the parser.
    
    SymbolPrinter was used directly to build paths for Fields of TwoTableJoin.
    This caused the parser to recognize keyword "join" used in the (QualifiedNames
    of the joins) and log a message "line 1:0 no viable alternative at input 'join'".
    Replacing direct usage of SymbolPrinter with Symbols.pathFromSymbol() solves the issue
    as it avoids calling the SymbolPrinter if the symbol is a Field.

commit 9778bab0156c8fa80cd2ecff6a9b3e1e26ebdf79
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 1 23:39:06 2017 +0200

    Fix partitioned-by/generated-column COPY FROM IndexOutOfBoundsException
    
    The InputColumn index calculation in the creation of the
    SourceIndexWriterProjection wasn't correct.
    
    This commit changes the pattern to create the projection from an
    imperative to a more declarative approach.
    
    The input-column indices are no longer calculated manually. Instead the
    `toCollect` symbols are declared based on primary keys and partitioned
    by columns. Then the `InputColumns` API is used to generate the input
    columns.
    
    This also eliminates the loose contract that we had, that the
    `SourceIndexWriterProjection` constructor expected the `toCollect`
    symbols of the `FileUriCollectPhase` to be in a certain order.

commit de53f6a3543192d4cd9d202902fed219ad18fcb5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 1 21:43:53 2017 +0200

    IndexNameResolver: Remove raw cast & avoid some allocations

commit 94083082292c395da6392ddd8eac5788706fb5cd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 1 21:21:36 2017 +0200

    Remove some unused declarations

commit 9f442eefc6803cf1dad880e58be72456b5f17727
Author: Michael Beer <michael@crate.io>
Date:   Wed May 31 15:09:57 2017 +0200

    fix lost alias on single-row subquery with virtual tables join

commit fd640ae20e2c809a715fa4397ab4caf583309ca8
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed May 31 18:03:42 2017 +0200

    Fix: Prevent wrong reordering of join pairs
    
    When trying to find the optimum order of join pairs exclude
    those orderings that use join conditions which include relations
    that are not already part of the join tree.
    e.g:
    
    JoinPair1: (t3,t4, t3.id=t4.id)
    JoinPair2: (t4,t2, t4.id=t1.id)
    ...

commit c896c6fdcd1c5a55863cf354060f39d36a5c9f4a
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed May 31 16:58:23 2017 +0200

    Fixed: Reordering optimization of join pairs
    
    If there are join conditions that don't directly join the adjucent relations
    then don't count them as direct joins when trying to find the best order.

commit 5e41f61fff255adfbd3c005fa97f5e1b9eab42cd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 30 13:12:53 2017 +0200

    Decouple AuthenticationMethod from protocol implementation
    
    The interface contained separate methods for http and pg - the intention
    was to be able to support more complex authentication methods - e.g.
    password authentication.
    
    But these will require a more complicated message flow - so we'll have
    to re-model the interface and we should try to decouple the state
    changes from the protocol implementation.

commit 2754c108bbd8212e6450e2532d59059fd5a2a95d
Author: Autophagy <mika@crate.io>
Date:   Wed May 24 14:18:14 2017 +0200

    Expose additional fields on information_schema so that it conforms to the SQL-99 standard.

commit b37c05b2cf156910e804b3e5775e36e1e538850f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 31 15:50:49 2017 +0200

    Prepare CrateNettyHttpServerTransport to be de-guiced
    
    This extracts a `PipelineRegistry` from the
    `CrateNettyHttpServerTransport` in order to prepare it for the ES 5.1
    update.
    
    In ES 5.1 `onModule` has been removed. To register a different http
    transport there is a new `NetworkPlugin` interface which contains a
    method as follows:
    
         Map<String, Supplier<HttpServerTransport>> getHttpTransports(...)
    
    This can be used to create and register the
    `CrateNettyHttpServerTransport`, but as a side effect it won't be bound
    to guice anymore - which means it's no longer a global singleton. This
    breaks the pipeline logic.
    
    To work around that there is a new `PipelineRegistry` which can be
    created earlier and be made available within guice.

commit c30ba56754e9e6b2a4139622cd47361a94082868
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 31 10:02:27 2017 +0200

    Remove unnecessary AzureDiscovery class

commit ceff4291aa2e2a2540ff311f4197e5e8bc7ab509
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 31 11:44:06 2017 +0200

    Fix single-row subQuery plan creation for joins
    
    In some cases `SelectSymbol`s were processed twice:
    
        MSS
        -> ConsumingPlanner (processes SelectSymbol)
        -> ManyTableConsumer creates TwoTableJoin (contains same SelectSymbol)
        -> ConsumingPlanner is called again with TwoTableJoin
        -> SelectSymbol is processed again
    
    Although this occurred for any kind of join, it seems like it only
    causes broken plans if there are virtual tables involved as well.

commit 9872b0450b48a8518d8bbb53ec83158c4636aa5c
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Mon May 29 09:34:58 2017 +0200

    add warning for rename table

commit 5cffb9c325a2d71fec34f1e7ecf234480d968891
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue May 30 17:30:36 2017 +0200

    correct usage of the CrateDB name

commit 106bda59e422c6c41c7b856a9f16519c2ed03136
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue May 30 19:30:38 2017 +0200

    link to user management reference

commit 20d693f52c82704e727e6a6ebd4639b085438f7b
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue May 30 19:24:13 2017 +0200

    re-order index

commit b729e9d5c65717e6554732fe360d698fbe175381
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed May 24 17:24:09 2017 +0200

    hard wrap docs to 79 chars

commit 0403e7541c2bdb2d1a5263035de1fbe4e87a1fcb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 30 16:43:14 2017 +0200

    Remove unnecessary SrvDiscovery class

commit 3455d22c57159637c0cfd3e0a7536b8b0b0122ba
Author: Michael Beer <michael@crate.io>
Date:   Mon May 29 10:58:52 2017 +0200

    adopt java options for TravisCI build/test process
    
    this setting will ensure that a job won't get killed during the tests.

commit c903fec8d3fd050cfbffcc8021d6dc2c32be370d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 30 16:06:38 2017 +0200

    Remove ActionPlugin implementation from HttpTransportPlugin
    
    The HttpTransportPlugin is no ActionPlugin

commit 5f9f745532275dbcb747b495475dac18d34c64fa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 30 16:10:01 2017 +0200

    Tests: Remove `discovery.type: local` from ClusterIdServiceTest
    
    `discovery.type: local` will be removed in ES5.1 and it's not required
    for the tests.

commit d3e0f19d7de9573a1d58fbb996d760a134eda6ea
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 29 12:51:29 2017 +0200

    Switch http/transport to netty4

commit ece360395b432f7f7b7bc1cfbe3e7a23c0802d95
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 25 00:18:57 2017 +0200

    Upgrade PostgresNetty to netty4

commit f9893f880d3a36592fc2da8cd080ad7f6642eb0d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 24 23:07:13 2017 +0200

    Update udc test-server to use netty4

commit 19bcd8a76e312a6071e7529862db573374624483
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed May 24 15:49:01 2017 +0200

    standardise use of newlines in the docs

commit e1dfeabb935bb0a819f0e307c7aff767d5eb87e3
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue May 23 18:11:55 2017 +0200

    fix doc headers

commit 1527a74a0a40d8bc8f5167f4706764286d6a98ca
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 29 16:00:29 2017 +0200

    Remove CIDR4 dependency in HostBasedAuthentication
    
    CIDR4 isn't available anymore in netty4

commit abead158d706b0fb933a178a848d24b2cca14f6f
Author: Michael Beer <michael@crate.io>
Date:   Tue May 23 17:11:36 2017 +0200

    only log warnings on closed indizes
    
    This fix only prints a warning if a bulk-insert happens on a closed index. It
    prevents from trying to create a new index afterwards.

commit 5a202bc51d2cf6d753e3c0aff5bebc135e3203f9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 29 10:59:58 2017 +0200

    Fix HEAP_IN_MB calculation

commit c70ab90b41b792f0aca53617d357816b984f3660
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon May 29 12:04:21 2017 +0200

    Create blob table using normal 'execute' statemets

commit c0c46252c78b25ad3082dfe511b65b3c5079720e
Author: Michael Beer <michael@crate.io>
Date:   Fri May 26 09:28:41 2017 +0200

    revert ulimit of nr of processes
    
    this will revert 5f80c9c5c7fa7ff951946462e2b9281d515230c6 which
    introduced an OOM error during TravisCI tests.

commit 624133416a78e29147d829f3776d92548a6e6cdc
Author: Maximilian Michels <mxm@apache.org>
Date:   Wed May 24 16:11:11 2017 +0200

    Skip paging orderby optimization for system columns
    
    During the paging query optimization, LuceneOrderedDocCollector.nextPageQuery
    would run into a NPE because it can't find the _score field in the field
    type map. The solution is to skip this optimization in the presence of
    system columns.
    
    This fixes #5601.

commit ceddc179c4cdb069ddbba05779316217bb64c69b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 23 13:29:57 2017 +0200

    Integrate circuit breaker into fetch-operation
    
    This integrates the circuit breaker into the fetch-operation and also
    adds some logic to choose the (max) fetchSize based on configured heap instead
    of having a fixed value.
    
    The dynamic fetchSize limits are mostly relevant for low-heap nodes (<
    2GB)
    
    Depending on the number of concurrent requests it's still possible that
    a node can run out-of-memory. But this commit should reduce the chance
    of that happening.

commit 5f80c9c5c7fa7ff951946462e2b9281d515230c6
Author: Michael Beer <michael@crate.io>
Date:   Wed May 24 14:34:57 2017 +0200

    adopt ulimits on TravisCI to reflect important system settings
    
    according to ES 5.0 upgrade it is necessary to increase the limits of
    open file descriptors and adapt the number of threads.
    
    https://www.elastic.co/guide/en/elasticsearch/reference/5.4/system-config.html

commit e916527cfbd9bf571bfde2b1039371207b07620f
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue May 23 13:18:13 2017 +0200

    add note about sql compliance and fix literals

commit c4b97c2f2a34b9903c565b57e92be570368f3ddc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 23 14:33:39 2017 +0200

    Make sure fetch sys.operations entries are cleared

commit b7c72f95a71f391d86b09f2fce93678b5057c65e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 22 15:59:42 2017 +0200

    Add circuit breaker to http-result generation

commit 62b422c344f47a4e3a1b9f1def5a314c11a37253
Author: Sebastian Utz <su@rtme.net>
Date:   Mon May 22 10:42:01 2017 +0200

    git ignore all data and logs folders

commit 7fa65c0f187138354a254d7e0f8ccaed33ab517a
Author: Michael Beer <michael@crate.io>
Date:   Tue May 23 11:36:49 2017 +0200

    added logger warning when inserting to unavailable shards using bulk inserts
    
    This extends 6b5dd0af6bd3226d9f9973477c84bab1c764dc80 and will result in a
    warning when bulk inserts or an insert-from-query is used.

commit d117992e4ab47585a9921a8011a9fc6fa27563c3
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Tue May 23 10:08:19 2017 +0200

    fix NPE in shardRecoveryStateExpression

commit d5c1af904c19cbee7ac99ad1374f876aa02e0de1
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Mon May 22 17:33:09 2017 +0200

    fix NPE in ShardCollectSource

commit 0ad3abc0c322eec54855b54973425804bcf3e4da
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 22 16:13:27 2017 +0200

    Remove `AbstractShow*` classes
    
    There's only a single implementation so the abstract classes can be
    removed.

commit 492627322ff1f2a28ce5ed05320ed8c17e773eb1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 16 23:42:44 2017 +0200

    Add more details to projections in Explain output
    
    For example:
    
        SELECT count(*), x FROM t1 GROUP BY x HAVING x > 10 ORDER BY x LIMIT 10 OFFSET 3
    
        "projections": [
            {
                "type": "HashAggregation",
                "keys": "IC{0, integer}",
                "aggregations": "Aggregation{count, args=[IC{1, long}]}"
            },
            {
                "type": "Filter",
                "filter": "(INPUT(0) > 10)"
            },
            {
                "type": "TopN",
                "limit": 10,
                "offset": 3,
                "outputs": "IC{1, long}, IC{0, integer}",
                "orderBy": "[IC{0, integer} DESC]"
            }
        ]
    
        SELECT * FROM t1 LIMIT 10 OFFSET 5
    
        "projections": [
            {
                "type": "TopN",
                "limit": 15,
                "offset": 0,
                "outputs": "IC{0, long}"
            },
            {
                "type": "TopN",
                "limit": 10,
                "offset": 5,
                "outputs": "IC{0, long}"
            },
            {
                "type": "Fetch",
                "outputs": "FETCH(INPUT(0), _doc['x'])"
            }
        ]

commit 916e0daaf88b15d86af73fd44ede1f6e24ba5be5
Author: Autophagy <mika@crate.io>
Date:   Thu May 18 14:20:04 2017 +0200

    Added warning to when inserting to unavailable partition by value

commit 812eb3233884be250bc235fec22667c01e89c427
Author: Autophagy <mika@crate.io>
Date:   Mon May 22 10:00:37 2017 +0200

    Corrected erroneous sql features entries

commit b520c806eab1455df8a927f869d681b89c23ee02
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 19 15:46:14 2017 +0200

    Change JMX stats to deliver per node values & fix calculation errors
    
    Previously on each individual access of a property, a query was
    triggered to retrieve the values required for the calculation of the
    property.
    
    There were several problems with the implementation:
    
      - it was very in-efficient and could lead to overloading of the
      threadpool
      - it resulted in cluster based metrics which is not ideal for monitoring
      - it had bugs in the calculation of the properties
    
    This is a total rewrite of the calculation. It now utilizes a local
    in-memory structure to calculate the metric.

commit 730accfe1028fd57aea4613812266aa4957995de
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 19 13:20:14 2017 +0200

    Expose typed jobsLog / operationsLog Iterables

commit 2690fc2f2b25b547c52cb090c79595753343dc97
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 22 10:09:58 2017 +0200

    Set upper limit for fetchSize to prevent OOM errors

commit 42b198cf2ae113015121f2d4e995226b12221d27
Author: Autophagy <mika@crate.io>
Date:   Mon May 22 09:18:57 2017 +0200

    Updated SQL Features tsv

commit dd978c2d180eff117c64bcf6249e619f3a239b57
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 18 16:47:10 2017 +0200

    Prevent `KILL` or `KILL ALL` from killing the whole node
    
    This fixes a nasty race condition which lead to the termination of a
    node.
    
    Since ES5 there is an uncaught exception handler which terminates the
    node if an uncaught exception is encountered which is not a
    RuntimeException. (That's a good thing)
    
    With the BatchIterator introduction we've added consumers which had a
    bug: They didn't handle exceptions on `batchIterator.allLoaded` calls -
    these were simply uncaught and could lead to a query getting stuck.
    
    Now the only cases where `allLoaded` thows an exception is due to a
    kill: Either internal or user provoked with the `KILL (ALL)` statement.

commit 26ce9510d2d22f1d91933e03eeabbd879460dcca
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu May 18 17:27:41 2017 +0200

    Fix: Limit not applied in subselects of a join.
    
    Limit was pushed down early in RelationSplitter without checking
    any preconditions and was later on removed in NestedLoopConsumer.
    Now that subrelations of MSS can be subselects can have their own
    limit which was wrongly removed in NestedLoopConsumer.
    To fix this we move the precondition checks for pushing down the limit to
    RelationSplitter.

commit 27b87fbd230776a12bd0d1eb1c817f94669e52c8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 17 10:39:30 2017 +0200

    Fix fetch planning for joins on virtual tables
    
    (this fixes an AssertionError (or NPE if assertions were disabled))

commit d6445c90e1be3d9b93b9f39f07e0cda59374444e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 18 11:06:37 2017 +0200

    docs/sphinx: Treat warnings as error in sphinx-autobuild
    
    We've had it a couple of times that the docs contained broken links
    because `bin/sphinx dev` was used which didn't treat warnings as errors
    and we didn't wait for travis to finish.

commit ccde32739facad80fffe6f303208ecaa53fd0341
Author: Christian Bader <christian.bader@crate.io>
Date:   Wed May 17 11:49:39 2017 +0200

    Enabled logging for crate test layer for hdfs, monitoring, sigar and sqllogictest

commit 8e5dfca55d47e0c55c17e7a10f5bdcdb1fb50d40
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed May 17 11:56:09 2017 +0200

    make byte arrays for messages static where possible

commit aa927e3550e5f48e96303edef81cad5bd27e74ed
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed May 17 09:30:42 2017 +0200

    make sentAuthenticationError package private
    
    also do not return channel future, because it is never used

commit 8725a39b2142f20c1844a546e8ff2e6a9e179c9b
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed May 17 09:17:10 2017 +0200

    log failed authentication attempt at WARN level

commit b92b7b16eb5be9c529a2d458a2ef0382b717af50
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon May 15 14:43:58 2017 +0200

    rename Crate to CrateDB

commit 2de674c3d8a78fd53acf943e2df872131b201f6a
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed May 17 11:59:58 2017 +0200

    fixup! add insert performance docs

commit cf067e0766e2b6e4b400332206ca018d847388c4
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue May 16 18:52:13 2017 +0200

    fixup! add insert performance docs

commit 2737e36719570b2be8073a05fd7ca7d516430341
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue May 16 14:23:07 2017 +0200

    add insert performance docs

commit beeac68c7247cd1346af6eb507146d9ec10c20c3
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed May 17 11:36:43 2017 +0200

    split release notes index into 2.x and 1.x

commit 0c44f3ec7ca29cf69a346eb4bae7152be93a07ab
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed May 17 17:35:29 2017 +0800

    make sys table expressions type safe

commit 11720424b6d6f313991d113a4ba60d80197062d8
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon May 15 17:56:01 2017 +0200

    add sharding best practice guide

commit 386786161edea2b4c364ed5cc8a7eb3a41e8921a
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed May 17 08:00:58 2017 +0200

    revised folder structure for tests in users module

commit 1709bef86e1c6308f562e7233c1e4e22e9bb9d2c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 17 11:22:57 2017 +0200

    Fix flaky tests (thread leaks) in NodeSettingsTest
    
    Changes the base class to have the `ThreadLeakScope` and
    `ThreadLeakLingering` annotations applied.

commit 7d9f4fc090c0035a70573234b8a3ccae3ccc15b4
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Mon May 15 11:18:15 2017 +0200

    fix port BindException

commit 9c3584910a077ec243fed23a6437717e6b483b6a
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue May 16 21:23:16 2017 +0200

    simplified gitignore
    
    remove all module specific gitignore files
    and put it into gitignore at root level of the project

commit 2914fcc740fe5b386dc575f52a86d19a875ebe29
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue May 16 17:06:51 2017 +0200

    Fixed push down of `WhereClause` to relations of MSS.
    
    When `WhereClause` is pushed down to a relation of an MSS it must be translated to having if it contains aggregations.

commit b76b3a20b6961143c1edb3ca373d490098e3566d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 12 14:30:43 2017 +0200

    Add support for joins on complex virtual tables

commit 85898ab6163c849198e7d1c5ffef013d4d691ab1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 12 11:33:15 2017 +0200

    Add support for joins on simple virtual tables

commit 69d5d21c2708f77b34494b818b9c6989acb28248
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue May 16 22:09:29 2017 +0200

    clean unpackDistTar job correctly

commit 011e52a310b630705f8aba7bb0b9ecc1b70168c2
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue May 16 21:48:46 2017 +0200

    depend :app:clean task on :app:cleanCollectEnterpriseModules

commit ec47d177b9758476ad29d9f9048332483a9ca472
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 16 16:53:28 2017 +0200

    Make information schema expressions type-safe
    
    We used a raw `RowCollectExpressionFactory` and lost the type-safety due
    to that.
    
    There is still more work to be done because there is no type-checking
    when we feed the data (`Iterable<?>`) into the expressions. But this is
    a start.

commit da956d23f0203c99145c0e59286531aa29d9a4cd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 16 16:37:31 2017 +0200

    Create SysChecker and Summits instances only once
    
    Instead of creating SysChecker/Summits each time a query is made against
    the tables they're now only created once and the instance is re-used.

commit f18f5e0a06d5965129df045f76d70416e3322429
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 16 16:03:14 2017 +0200

    Remove `synchronousIterableGetter` indirection

commit 43f585f09fd922f1eded15343c459c0856bcf428
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 16 15:59:42 2017 +0200

    Add toString implementation to Aggregation

commit e427b8b8da9e2ec78b752de66855d5ddb9d2adcc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 16 15:51:00 2017 +0200

    Migrate OrderBy from Streamable to Writeable

commit 2eb8f097b40d96cd7ce2f4922669764680bf5da8
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue May 16 17:27:42 2017 +0200

    fixed "release" gradle task

commit 6132483345de00f3f13c3e38bae1690e823724c6
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue May 16 17:23:40 2017 +0200

    updated version number and set snapshot to true

commit 3c79295d14d3ad6db5ea4649bc034d82a75aa92e
Author: Christian Bader <christian.bader@crate.io>
Date:   Tue May 16 15:30:05 2017 +0200

    prepare release 2.0.0

commit 7600994b94de3c291e30f97341b7972fe9f11245
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue May 16 16:47:22 2017 +0200

    fix sphinx build
    
    all files need to be referenced from within a doctree

commit 4df5cbb15e31198aa17215980212c83265ca8690
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 16 12:44:42 2017 +0200

    fixes stuck distributed queries if thread pool is exhausted
    
    use netty/same thread pool for distributed result operation.
    dispatching to the SEARCH thread will happen now later on to prevent
    rejected execution exceptions, only the heavy work must be dispatched.

commit e7998b363e8bf63f957f9513b4b69c0410779a44
Author: joemoe <johannes@crate.io>
Date:   Tue May 16 14:08:14 2017 +0200

    added content for the enterprise features page and moved the monitoring documentation.

commit c698b3428de8ae5e2fd3eeaca118d51f44f29450
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Tue May 16 14:52:59 2017 +0200

    format doc test

commit ac9ec02eeee2f9b39bf71fd567b667e893da5dd4
Author: Autophagy <mika@crate.io>
Date:   Tue May 16 14:30:47 2017 +0200

    Fixed flaky testInsertIntoClosedPartition test

commit 935ad312c03f396a3caae0709d4dda10ae400c56
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed May 3 17:21:09 2017 +0200

    improve release notes and best practices for upgrade experience

commit f919635a296ae4ec2d91b079d9557521b001a8e6
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed May 10 13:05:40 2017 +0200

    added support for trust authentication via HTTP
    
    added documentation for auth.host_based.http_default_user setting
    
    use X-User http header as user for session context
    
    or if not provided use the value of the setting
    `auth.host_based.http_default_user`
    
    add documentation for HTTP trust Auth
    
    automatically sort by dependencies when adding pipeline items
    
    http trust authentication
    
    used X-REAL-IP header if available
    
    added changelog entry
    
    fixup! added changelog entry
    
    fixup: do not register auth handler if auth is disabled

commit fc173e62934ede1f6b28cd36d5c47867549b503d
Author: Autophagy <mika@crate.io>
Date:   Tue May 9 11:35:16 2017 +0200

    Added documentation for RENAME TO

commit 517691c7fb4a58fe01428ee2b30f9c0577c27b91
Author: Sebastian Utz <su@rtme.net>
Date:   Fri May 5 17:52:29 2017 +0200

    Adds support for renaming a table and partitioned tables

commit 053b2a5ee93e5a6465821d3213d286555a028735
Author: Autophagy <mika@crate.io>
Date:   Fri Apr 28 10:16:21 2017 +0200

    Added parser support for ALTER TABLE <x> RENAME TO

commit 610da162933b6840792f29b2548b8384a2c61689
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 16 12:10:27 2017 +0200

    removes some actions at the TransportProvider, inject transports directly instead

commit ab2f461177db0c62626f525a1a65ba4854b52436
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 15 22:14:35 2017 +0200

    Remove anonymous DefaultTransportResponseHandler class creations
    
    And replace usages with ActionListenerResponseHandler where possible.

commit 8e95f1a12f725c519f64604e30b697fa31867ba8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 15 22:06:47 2017 +0200

    Remove anonymous NodeActionRequestHandler class creations

commit 603d45be41dc67dcaedf9a4da8b45bd87781d0d1
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue May 16 17:23:25 2017 +0800

    removed duplicate line from parser

commit 67afde389a60d865856c9c3d182c8d77fe2ede5d
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue May 16 15:55:34 2017 +0800

    improved error message if a user is not authorized
    to execute a statement

commit 3e95d92bc1baecf6097b4d1da7ee3528e1d74415
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon May 15 15:51:26 2017 +0800

    moved information about required table permissions
    from UserManager to the table itself.

commit 2c1202bd081635ebc460ecc729faf2f79fed01d2
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu May 11 21:16:47 2017 +0800

    reflect CREATE USER  and DROP USER in changes

commit 12356199070da042c2201c8de43b2664187aa5d4
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu May 11 18:30:26 2017 +0800

    use created users for authentication

commit 871a0959aaaf8642cbc42d1b9913d97c73a46f87
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed May 10 23:05:21 2017 +0800

    merged UserManagerServiceFactory
    and UserServiceFactory together

commit 6e1bec1d33943eff3e509d3a3f54de96ad96f084
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Mon May 8 11:23:19 2017 +0200

    add checkPermission method to UserManager interface to check if user is authorized to execute Admin Statement

commit 704e3b4d43b82f22b5c4367d63cad7322e64475b
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon May 1 17:59:53 2017 +0800

    log warning and document that user data is exposed if ES API is enabled

commit 99678697f4286216bdfa156f37c3b27497b5a88a
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon May 1 16:50:23 2017 +0800

    show created users in sys.users table

commit faec4d2019d80d47ecaeffc00f70e6f38942eac1
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon May 1 17:38:21 2017 +0800

    implemented drop user

commit c705c05b5e4585f99ed7ead16bf6590e41d02fb3
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Apr 28 21:03:10 2017 +0800

    Added sys.users table

commit 5b467fd9c790087c1cca79e7a3aefba42ab1d56a
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Apr 27 16:59:43 2017 +0800

    implemented create user

commit 47b8379b26a426a3f7cf51d97bc41f44e39c7f29
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Apr 25 10:18:49 2017 +0200

    added skeleton of user management plugin

commit 450a108f5ba260d3e28d28164b972e4c4c374cc5
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Apr 25 22:37:42 2017 +0800

    Created a UserManager interface which is used to create and drop users.
    The Factory for the interface can be implemented using the java
    ServiceLoader.

commit 98cb47d309a0d5f59ddc9594192ca4d78b28d6fb
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Apr 25 19:17:38 2017 +0800

    analyze drop user statement

commit 2675efc19cbc44ff82794a7843ec678e4772123b
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Apr 25 19:09:32 2017 +0800

    analyze CREATE USER statement

commit 5c242e0c75f81cda38833a61ca612de67b22f759
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Apr 25 17:54:42 2017 +0800

    added parser support for drop user

commit 9470261f63975e0202672ec7ea2a3f49ec28e8d1
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Apr 25 17:45:20 2017 +0800

    added parser support for CREATE USER

commit 20dc961061a4d5a613c421d6a893823fc93cc05f
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Apr 21 12:09:48 2017 +0200

    added documentation for user management

commit 6ea49023573b06225b02449d787fe62a69f8cda2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 12 21:43:34 2017 +0200

    Migrate ExecutionPhases from Streamable to Writeable

commit 834836eaa644cc66f2283918dd5cde872d1e2630
Author: Autophagy <mika@crate.io>
Date:   Mon May 8 12:25:17 2017 +0200

    Added documentation for ALTER TABLE OPEN/CLOSE

commit c3a5118a442939a80d4fb7fb01288e74356aea59
Author: Autophagy <mika@crate.io>
Date:   Wed Apr 26 12:00:44 2017 +0200

    Implemented Alter Table OPEN/CLOSE functionality
    Implemented logic at planner, analyzer and operational level.
    
    DocTableInfo now has open concrete indices.
    Previously, DocTableInfo would get all indices for a partitioned table,
    regardless of whether they were closed or not. This presented a problem
    when dealing with creating the route, for example with SELECT queries,
    as attempting to create a route with a missing/closed index caused an
    empty route to be returned as the ShardIterator would return an
    IndexNotFound exception.
    
    Now, the DocTableInfoBuilder gets both all concrete indices and all open
    concrete indices. Getting all concrete indices is still needed in many
    places (such as when reopening a closed partition), but the route
    builder now uses only the opened partitions. This means that when
    selecting from a partition table in which 1 or more partitions are
    closed, they are simply not included in the route, rather than causing
    an empty route to be returned.

commit b3f5bc11e4788905abd7d231f856aa9f5478c7a8
Author: Autophagy <mika@crate.io>
Date:   Tue Apr 25 11:58:51 2017 +0200

    Added parser support for ALTER TABLE <x> OPEN/CLOSE

commit 00f4b92da8e083a82e9b7b16be770b4c4c848a22
Author: Autophagy <mika@crate.io>
Date:   Wed May 3 17:22:51 2017 +0200

    Added new column `closed` to information_schema tables and table_partitions.
    This also refactors the way we determine whether tables/partitions are
    closed, and whether to ignore them.

commit 4ae7a0d80db6d63ff43f245828911f689a201966
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 15 15:05:16 2017 +0200

    docs: Remove outdated GROUP BY on subQuery limitation

commit 3d7200ca72e42c6fda29b34666daf8ad958e2d81
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 15 12:02:43 2017 +0200

    Move decision for directResponse into NodeOperationTreeGenerator
    
    Part of the decision to use direct-response execution was still made in
    the Planner. This would cause issues once we want to support joins on
    virtual tables because there would be intermediate Merge components without
    executionNodes used as subPlans for a join. That messes up both, the
    join-planner and the executor.
    
    This commit moves the directResponse logic into the
    NodeOperationTreeGenerator.

commit 69662771bf6277e4a862a4c1d29a62aa94282110
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon May 15 13:51:54 2017 +0200

    fixup! add Docker best practices

commit b7ba8770839a0221a7c26341e35a0275c556e8c5
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon May 15 11:15:38 2017 +0200

    fixup! add Docker best practices

commit 1a57bf5a363fa2c901abca490c406e7a58a65e9d
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed Apr 26 12:22:22 2017 +0200

    add Docker best practices

commit 3747306f567faa4e1097cfca26aa3dce043cb0ca
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon May 15 13:12:28 2017 +0200

    simplify Docker README command

commit 053f5105e9b676a9d1c0d903a927b6e6ef006ae6
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon May 15 18:21:01 2017 +0800

    use User object and use it for authentication

commit 344473f06fe31156205dfe4e4cae9da6a1f21204
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 12 15:33:34 2017 +0200

    Simplify context-phase handling in NodeOperationTreeGenerator
    
    It's possible to by-pass the branching logic for context-phases as
    they're not part of the "data flow"

commit 86b23162609b6f36434bddbd1e9991281101b78b
Author: Autophagy <mika@crate.io>
Date:   Mon May 15 09:16:07 2017 +0200

    Updated 1.2.0 release notes with latest 1.1.3 min requirement

commit acdeb94460768766a8d4124bfee1ec23ca055895
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri May 12 09:13:27 2017 +0200

    added node.max_local_storage_nodes to sandbox config
    
    this allows to start up to 3 nodes from within intellij

commit f12e24a29e49cfe42cc388172e7c73d44dc9df35
Author: Autophagy <mika@crate.io>
Date:   Tue May 9 17:18:53 2017 +0200

    Refactored supported operation checking.
    Instead of analyzers getting a writable/droppable etc table from the
    schema, they instead pass in an ident and the operation they wish to
    conduct upon the table, and the Schema checks as to whether this is a
    valid operation to perform upon the given ident.

commit 39054e2fef8f0277ba819aa3ecb04a3d18ae60bd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 12 12:20:01 2017 +0200

    Remove the "re-normalize" step from NestedLoopConsumer

commit ba7c8fdadc43f21a295a77a574cfecac0912fa97
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu May 11 17:07:13 2017 +0200

    Fixed implementation of distinct when group by and limit/offset is present.
    
    The LIMIT & OFFSET must be removed from the original query and be
    moved to the wrapper QueriedSelectRelation as they must be applied
    after the outer grouping that implements the DISTINCT.
    
    Also The order by of the inner query can be removed since the
    ordering is moved to the wrapper QueriedSelectRelation and
    keeping the ordering on the subRelation doesn't provide any benefit..
    
    This is a followup commit of: a0b8cecf16024e7bf52233a60f840f9ee175e9bc

commit 98722b7765c0c54c549f9ccf70a3ab6727fae843
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri May 12 09:51:38 2017 +0200

    inject classes in blobservice directly instead of using injector

commit 20b6cf8beaed6117e2392d69d09d18c1312ffc53
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri May 12 09:09:24 2017 +0200

    remove manual starting of HttpServer

commit 659a8e7534a9017c3926d07f33455536ea395532
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu May 11 15:19:59 2017 +0200

    move http transport into own module

commit e1a08c303d029678646f0847004d6cafa9e0d587
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 3 11:14:45 2017 +0200

    Replace RelationSource with Analyzed-/QueriedRelation
    
    In order to do a "query push-down" we used a custom data structure to
    represent a query with a JOIN.
    
    For example
    
        select t1.x, t2.x from t1, t2 where t1.x = 10
    
    Was represented as:
    
        select t1.x, t2.x from t1, t2
    
        t1 querySpec:
            outputs: [x]
            where: x = 10
    
        t2 querySpec:
            outputs: [x]
    
    This commit changes the internal representation so that the sub-query
    data structures are used. The above example now looks like this:
    
        select t1.x, t2.x from
            (select x from t1 where x = 1) t1,
            (select x from t2) t2
    
    This should make it easier to support joined virtual tables since the
    internal representation is already the same.

commit a2de066c9b83aec04495fd4ed23dbacff59eacc3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 11 15:59:44 2017 +0200

    Handle groupBy and having clauses in the RelationSplitter
    
    Removes the need to handle them in the `MultiSourceGroupByConsumer` and
    will make the migration to real sub-query data structures in the
    MultiSourceSelect easier.

commit 51b066cb9917d8db52b0fe432b384726edc8a59d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 11 15:35:51 2017 +0200

    Validate symbols in RoutedCollectPhase
    
    Adds some assertions to make it easier to debug planner bugs during
    development.
    
    Currently having Field instances in a RoutedCollectPhase results in
    streaming errors and the resulting stacktrace doesn't contain the
    origin of the symbols.

commit e0d542a46f190a99985009c691fce74f0302fc2d
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu May 11 12:18:36 2017 +0200

    Check for doc errors before creating tag

commit 00e50e00da7bb4ce5eacbb047a10572c5bfd5890
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Wed May 10 12:04:17 2017 +0200

    add protocol to auth.host_based setting

commit 8c05c70bcfe6eadfcebc6158cd5272bccaf2ae52
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 10 16:07:35 2017 +0200

    Field: Add javadocs

commit 97451d8e69056fa4859e49f6a26db0329508c397
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 10 16:03:05 2017 +0200

    Move DEEP_COPY operator to Symbols for re-use

commit b40ec6ab3310adb771f54c45222d31235cd20b4b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 10 15:56:14 2017 +0200

    Remove ColumnIndex / preserve names in query-rewrites
    
    Using ColumnIndex made debugging & further query-rewrites difficult
    because it replaced column names with only an `index`.
    
    This replaces the ColumnIndex with either OutputName or ColumnIdent -
    trying to preserve the original column name to make subsequent query
    rewrites easier.

commit 63f4c0c2b73b09dd8fa5e76fcb0d1f867a88d420
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 10 15:46:23 2017 +0200

    Field: Move non-null assertions to constructor
    
    Relation and Path must never be null, so the check should be done early
    instead of late in `index()`.

commit a0b8cecf16024e7bf52233a60f840f9ee175e9bc
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue May 9 20:40:43 2017 +0200

    Implementation of full support of DISTINCT for
    queries where GROUP BY is present.
    
    The query becomes the subrelation of a QueriedSelectRelation
    that is created as a wrapper, so the DISTINCT becomes a
    group by on top of the existing query.

commit 595d37d975232f82161137e6926087e0253b38ec
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 10 15:43:18 2017 +0200

    tests: Improve scalar function result assertions
    
    Compare BytesRef as String so that the values are human readable in case
    of an error.

commit e135b182ced94553c1a9e542cdb9d99e12caef1f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 10 11:58:33 2017 +0200

    Split tryRewriteOuterToInnerJoin into multiple methods

commit 406b0c9bcfee2d14d42b8be12e7f01be432cc6b7
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue May 9 23:17:57 2017 +0800

    made UDC pings to send ``license.ident``

commit cba563accea9eb80893e54eb4a71dd035e5cda81
Author: Michael Beer <michael@crate.io>
Date:   Wed May 10 13:42:57 2017 +0200

    fixed example how to use `TestLogging` annotation

commit 47d2a571271cae748146ce83a3aea717654e8b38
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed May 10 00:14:35 2017 +0200

    `SELECT DISTINCT` should only be allowed if group by is absent
    or the symbols of the select list are exactly the same as the
    ones in the group by list (different order is allowed).

commit 29aeb46da61386b44cbd5cd7802b78360a6402de
Author: Christian Bader <christian.bader@crate.io>
Date:   Wed May 10 10:49:01 2017 +0200

    Fixed wrong reference and formatting in release notes.

commit 9f1f7e1824a6c90c26ea0be6b00aed1f6ef72889
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Mon Apr 24 15:31:34 2017 +0200

    added support for host based trust authentication
    
    access to crate via the postgres wire protocol can be
    restricted/premitted using the `auth.host_based.enabled` and
    `auth.host_based.config.` node settings. trust authentication means that
    a connection from a certain remote address and a given user that
    matches a hba entry is trusted.
    
    there is only a single "default" `crate` superuser which can be used for
    authentication.
    
    an example hba configuration can look like this in the crate.yaml:
    
    ```yaml
    auth:
      host_based:
        enabled: true
        config:
          a:
            user: crate
            address: 127.0.0.1
            method: trust
    ```

commit 208df18327538f036ebb4aa6284a4618b5212802
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue May 9 19:18:02 2017 +0200

    Added validation for ORDER BY symbols when DISTINCT is used.

commit 4688ad3e912211f7aefb554ca95bc4877cd2a8a9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 9 16:40:33 2017 +0200

    Change Field equals to not depend on relation identity
    
    The `Field.equals` implementation did an identity check on the relation
    to distinguish between the same table in the case of a self-join.
    
    This commit changes Field to do a equality check and also changes the
    AbstractTableRelation equals/hashCode implementation to include the
    qualifiedName. This will allow us to still distinguish tables in a
    self-join case, but will also allow us to rewrite/recreate relation
    instances and still have Field equality work as expected.

commit e09193d2a0ac4748739a436f1d4e4ce67923f244
Author: Christian Bader <christian.bader@crate.io>
Date:   Tue May 9 17:08:03 2017 +0200

    Updated changes and release notes to reflect 1.1.3 release

commit cdb3e1b482b6250c9bd4b554d9f86bb8ce322093
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue May 9 14:06:17 2017 +0200

    Remove uneccessary synchronization

commit efad8ec8c68b1cc54fac6ccb2365ce3445896dd2
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon May 8 23:38:11 2017 +0200

    Prevent test nodes to connect to other nodes in the same
    environment (eg: Jenkins) which leads to ThreadLeakErrors.

commit 0371648f26297c014765d3bc7398989847d390fe
Author: Michael Beer <michael@crate.io>
Date:   Mon May 8 17:22:33 2017 +0200

    rewrite arithmetic functions to use binaryscalar
    
    Computations of arithmetic functions are passed in as BinaryOperator
    functions.

commit 85581adb512842bef8a34b21ecdf0777b76fedae
Author: Michael Beer <michael@crate.io>
Date:   Fri May 5 16:35:16 2017 +0200

    Improved the accuracy of results if arithmetic operators +,-,*,/ are used on float values.

commit b78b0674d8ed8323163dd5d0743e18490b2e374d
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue May 9 12:13:30 2017 +0200

    do not expose psql settings in sys.cluster table

commit 769ba5441770988a8b1f33557901e29e583aaa4e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 9 10:05:14 2017 +0200

    getRouting: Remove unnecessary array copy

commit f65fb49291fa5cf91f1d18320bf065f48a0ed562
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 5 11:22:21 2017 +0200

    Tune some more toString implementations

commit 56bd5241ba7e1baeeacb140e1941e1137b31e1b9
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Thu May 4 14:58:49 2017 +0200

    add support for buildingGroupSettings and add isGroupSetting flag in CrateSetting

commit 8b230ca71d4d03b75318a258cae775c5686b7bb7
Author: Autophagy <mika@crate.io>
Date:   Mon May 8 19:28:56 2017 +0200

    Updated documentation regarding collecting stats.
    A note needed to be added to explain that enabling stats collection
    carries with it a performance penalty, and the reasons for this.

commit 61c8c8b128a9de7813304733f39f631116629bf6
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon May 8 16:55:42 2017 +0200

    Added attributes to Manifest required for ES
    checks that take place in org.elasticsearch.Build

commit 3ecaec62f45a9d3818be7a70c6a5ce7528280a13
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 5 15:46:38 2017 +0200

    Remove RelationColumn
    
    The RelationColumn was used in the case of a join, to plan
    query-then-fetch. It was kind of a Field/InputColumn hybrid with a
    pre-calculated index.
    This pre-calculated index allowed fast index-lookups, but had the
    disadvantage that any further query rewrites became difficult as all
    indices had to be updated correctly.
    In addition the join-planner components had to deal with two different
    kind of symbols: Field and RelationColumn. This required a lot of symbol
    mapping logic.
    
    As a side effect of this change the "requiredForQuery" logic is also a
    bit more optimized.
    
    Before in a query like
    
        select coalesce(t1.name, ''), coalesce(t2.name, '') from t1, t2
        order by 1, 2
    
    We'd have both `coalesce(t1.name, '')` and `t1.name` as
    `requiredForQuery`, now only `t1.name` is required.
    
    This is important because in outer-join cases any functions which can
    cause null-values to become non-null have to be applied *after* the
    join.

commit f2823b8f088e93a044e40319e61754ecf8e394b2
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon May 8 12:07:13 2017 +0200

    Fix flaky BlobShardCollector & SystemCollectSource tests
    by making sure that the correct instance of the data node is used.

commit d8e09accd250588d94c5504069264c60304dbe68
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri May 5 18:49:10 2017 +0800

    Fix failing queries to sys.repositories
    
    The RepositoriesService maintains the list of
    Repositories only on master and data nodes, so
    queries to sys.repositories failed on non
    data and non master nodes. Changed routing of
    table to master and data nodes to fix this problem.

commit 0900927d689cb2dd7916449a6c2600e817d8c66d
Author: Andrei Dan <andrei.dan@crate.io>
Date:   Thu May 4 16:01:37 2017 +0100

    Copy from computes generated columns when used as partition key and pk.
    
    A generated column was not taken into account as a partition key if it
    was also a primary key. This resulted in the generated column not being
    computed when copying data from a source, and the import would fail as the
    rows would have a null primary key.

commit 14b29d18700fe62280956341f06249572a455810
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu May 4 22:58:42 2017 +0200

    Default routing_hash_function and version wasn't saved
    in the mapping when creating a new blob table.

commit 9ca372ebc7a3212c02a944fcc8f9772105313713
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu May 4 22:52:23 2017 +0200

    Refactor by extracting constants and static methods to a class

commit c4b72963b114bb946890f5c38c1f737f97506e49
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu May 4 17:02:20 2017 +0800

    Fixed an issue which caused failing `sys.snapshot`
    queries if the `data.path` of an existing fs
    repository was not configured anymore.
    
    The problem was that crate was adding repositories
    to its own SysRepositoryService without verifying them,
    while Elasticsearch verifies the repositories when
    they are read form ClusterState.
    
    This lead to a state that crates service had repositories
    which were ignored by elasticsearch. When crate
    was fetching the snapshots from this repositories
    from elasticsearch the requests failed.
    
    To avoid this problem i exposed the repositories
    in the Elasticsearch service and use it directly.
    Therefore i could also delete the crate service.

commit 7dbc64325be3f1f550cd6bbb4d7b9612baa7bea5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 4 17:58:45 2017 +0200

    Correct relation pointer of MultiSourceSelect fields
    
    In the RelationNormalizer the MultiSourceSelect is re-created, but the
    fields of the previous MultiSourceSelect instance were re-used.
    These fields had a relation property that pointed to the *old*
    MultiSourceSelect.
    This commit re-creates the Field, so that they point to the correct
    relation.
    
    This also changes the flow a bit: Instead of first creating the
    new MultiSourceSelect and then do the pushdown/rewrite, the rewrite is
    done first and the MultiSourceSelect is created based on that rewrite.
    
    This should make it easier to replace the RelationSource with proper
    AnalyzedRelation instances in the future.

commit 34644dbc2424df19720817b7542cfd6fa0b617bd
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu May 4 18:21:39 2017 +0200

    Fixed issue with wrong rewriting of symbols when
    joining more than 2 tables.
    
    Github issue: https://github.com/crate/crate/issues/5469

commit 720605381306ddc8495c5b7ec886dcb3239aa96f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 3 15:50:06 2017 +0200

    Remove `relationToName` map from field->relationColumn converter
    
    Not required

commit 8975ab4feb8cc85b6c7e3b5912b31d32c42b3aae
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed May 3 15:42:16 2017 +0200

    ec2 discovery: set current region if no endpoint available
    
    The AwsEc2ServiceImpl instantiates a client and sets the endpoint which
    can be specified explicitly by the ``ENDPOINT_SETTING`` or the
    ``REGION_SETTING``. If none of these settings are provided the client
    would fall back to the endpoint of the ``us-east-1`` region.
    This change however sets the client's region based on the region of the
    running EC2 instance which can be obtained by an API call to the
    instance metadata.
    
    This behaviour was already patched in version 2.4.x of the Crate fork of
    Elasticsearch and was accidentially removed with the ES5 upgrade.

commit 529cd2ad13a7178a11fbd234674f9e09be475d00
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 3 15:14:42 2017 +0200

    Improve some toString implementations
    
    More compact representations without losing valueable information.
    Should make debugging a bit easier. Example:
    
        Optional[OrderBy{
            Field{DocTableRelation{doc.colors}.name, type=string} DESC
            Field{DocTableRelation{doc.sizes}.name, type=string} DESC
        ]

commit 4786a92fd9b6004d1f8bb2cd0968441c0a337f89
Author: Andrei Dan <andrei.dan@crate.io>
Date:   Wed May 3 14:49:33 2017 +0100

    Fix analyzer test

commit 797e502b644ce754f98617706ec7a618c48a21d4
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Wed May 3 15:36:22 2017 +0200

    use crate favicon

commit 91c76d08bb9ea585eb05456209c952d57d92a36b
Author: Andrei Dan <andrei.dan@crate.io>
Date:   Wed May 3 11:06:27 2017 +0100

    Keep the object column policy when adding new columns using the alter table statement.

commit 089f8239ef4eda91ce324e012e916049fe3838bf
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed May 3 19:40:34 2017 +0800

    fix: `sys.snapshot` queries hung instead of throwing
    an error if any kind of error occured while using
    the elasticsearch API

commit c9a3b5d9ed89c0de43a4e2aeb95a5d16a90aba24
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 3 11:40:40 2017 +0200

    Optimize regex_replace to avoid unnecessary BytesRef/String conversions

commit c5b6bd1d3db5930fcfaada75693f4672b6610efb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 3 11:18:59 2017 +0200

    Fix regexp_replace compile to use the correct flags parameter

commit 167aac52c9fda04258d8e2d0596f20e3c8e39dc9
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed May 3 15:47:38 2017 +0800

    fixed concurrency issue which lead to a temporary unavailability of already registered functions after a new function was created or dropped.

commit 48f3c7326114b9da2cb294659d62697a26f191ee
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue May 2 16:56:46 2017 +0200

    minor improvement to ec2 best practices

commit a103fd804262098beada6ef60d7f5f3789cc3ef4
Author: Christian Bader <christian.bader@crate.io>
Date:   Mon Apr 24 10:49:28 2017 +0200

    Added support for GROUP BY in combination with subselect

commit e8bbfb061a2e06053ebc0177801e64c1a10d5f18
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Thu Apr 27 18:28:28 2017 +0200

    minor improvement for best practices section index

commit 734ce490a2b54377493ac344498565e97889bcc4
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Fri Apr 28 15:46:29 2017 +0200

    document additional breaking changes for 1.2.0

commit 694720d255ee6f6973982f0e871ef29f4e30e4d6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 26 18:26:43 2017 +0200

    Add fetch propagation logic to simple subquery planner
    
    This optimizes the execution for simple subqueries where the fetch-phase
    can be deferred. Queries like:
    
        select x, y from
            (select x, y from t order by x asc limit 100)  tt
        order by x desc limit 50
    
    Were executed as:
    
        Collect [_fetchId, x]
            orderBy x asc
            limit 100
            fetch _fetchId -> y
            order by x desc
            limit 50
    
    Now they're executed as:
    
        Collect [_fetchId, x]
            orderBy x asc
            limit 100
            order by x desc
            limit 50
            fetch _fetchId -> y
    
    Note that this fetch-propagation is all-or-nothing. There are no partial
    intermediate fetches (yet).

commit dc6833cdc4008c4deea2a0e010a8a747bd142b81
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 26 16:25:16 2017 +0200

    Planner: Add possibility for parent-relations to finalize fetch plans

commit eea3c1c68f21e318198236dd06fae3035d5311e4
Author: Andrei Dan <andrei.dan@crate.io>
Date:   Tue May 2 13:46:39 2017 +0100

    Show meaningful error when attempting to update a single element of an array.

commit 8c89f3553bbd55628e6a2deb9c6ba1299d4bb1e6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 2 13:58:20 2017 +0200

    Make sure joins work on sources using RowsBatchIterator.empty()
    
    The data of multiple partitions is exposed via a CompositeBatchIterator.
    If the first instance of the underlying BatchIterators happened to be a
    `RowsBatchIterator.empty()` then the number of columns was initialized
    as 0 - leading to ArrayOutOfBoundsExceptions.

commit 0b8e2fa88848a5a59341c4b9ea331a0aac6e1dfc
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue May 2 17:02:53 2017 +0800

    remove unnecessary test.output.resourcesDir
    config from lang.js/build.gradle

commit 6b4c5c1619ea82f16d32ed9a1bce38a313578648
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 28 17:32:24 2017 +0200

    Remove qualifiedName from RelationSource
    
    The AnalyzedRelation has a qualifiedName which can be used instead.

commit c3a2f03ec6d3fa28623d5d8d687c49df6281277f
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Apr 28 17:33:39 2017 +0300

    Fixed error in joins used in a nested select because of wrongly created
    OrderedTopNProjection (outputs where Fields instead of InputColumns) caused
    by wrong copy of the Fields of MultiSourceSelect in RelationNormalizer.

commit a42579137375ffd2f2cbaf1217ce1e3e1cb35828
Author: Christian Bader <christian.bader@crate.io>
Date:   Fri Apr 28 15:31:32 2017 +0200

    Updated crate python to version 0.19.2

commit b17d58de9984e1ce760862f7e084bc20bc7428b7
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Apr 28 15:31:56 2017 +0300

    Fix documentation references.
    Followup commit of df562bc0e85752ff545ba11d1bc8f998f3d66221

commit 43f3cf191a566400671190dee587b4c945483d48
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 28 11:31:23 2017 +0200

    Validate explicit join conditions
    
    A statement like
    
        select * from t1 inner join t2 on match((t1.name,t2.name), 'foo')
    
    failed with a NPE because explicit join conditions were not validated.

commit df562bc0e85752ff545ba11d1bc8f998f3d66221
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Apr 28 12:29:55 2017 +0300

    Fix documentation for settings changed in ES 5

commit 8f266c64208823c145c79ee4a4654b89ac926b72
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Apr 28 00:30:16 2017 +0300

    Add log4j configuration to Windows startup script.
    This is a followup of 6254eaea915c277a2b9d21b2137bb3e43a3fe984

commit 7179bea54d0829e2a41c5e6e0c9eb3ca67085286
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Apr 28 00:28:14 2017 +0300

    Add log4j configuration to IntelliJ's Crate config

commit 9d9eafe95da20f15754c2ae716df4ad53f47917a
Author: Christian Bader <christian.bader@crate.io>
Date:   Fri Apr 28 09:33:47 2017 +0200

    Enabled logger for test-layer

commit ab0c46af056c51df892c9c40629300acaa0c852f
Author: Christian Bader <christian.bader@crate.io>
Date:   Thu Apr 27 17:20:49 2017 +0200

    Code cleanup

commit 87fd93893df034b735a0109c8e03ab778570fadb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 27 13:33:36 2017 +0200

    FetchRewrite: Make sure query symbols are not additionaly fetched
    
    Queries like:
    
        select x + x from t order by x
    
    Resulted in a sub-optimal plan: `x` was once retrieved in the
    query-phase and a second time as `_doc['x']` in the fetch-phase.
    
    This was probably introduced by 5f0ee9dfca66f905797e672eabdc07f58c4d7501

commit 8644a0abed7b128d83582761091c1fde0fcb0690
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Apr 27 15:25:25 2017 +0300

    Fixed subselect rewriting for the case of
    inner levels are partially collapsed.

commit 273c112a23444a1e850e781ea4d0d3e84c4277b7
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Apr 27 17:30:42 2017 +0800

    Sometimes on startup it happens that a cluster changed event contains deleted indices which are not included in the previous state

commit 24b9ed4cfd95dc6d7b7ed2e8a1f27115b44be0bb
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Apr 27 08:51:25 2017 +0200

    fixed order by on joins when having non-distinct values on left

commit b9b4fa8eb5dc9c8aba1076574d7db901d8d9d4d2
Author: Maximilian Michels <mxm@apache.org>
Date:   Mon Apr 24 14:37:19 2017 +0200

    Introduce SQL functions for computing hash sums
    
    Two functions have been introduced:
    
    - MD5(x)
    - SHA1(x)
    
    This addresses issue #5403. More hash functions may be added in the
    future.

commit 7166e2380ca733e40cfedbb9405109d66c95d2c9
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon Apr 24 20:36:31 2017 +0200

    mirror docs requirements.txt to blackbox requirements.txt

commit 5f0ee9dfca66f905797e672eabdc07f58c4d7501
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 21 18:08:30 2017 +0200

    Re-work FetchPushDown into a two-step rewrite
    
    This changes the way query-then-fetch plans are created for simple
    selects. This is a preparation to make it easier to propagate fetch in
    nested subqueries.
    
    Previously the `QueriedDocTableFetchPushDown` already created
    InputColumn instances and FetchReferences, that's too early for
    fetch-propagation to work.
    
    The new `FetchRewriter` now does a simply relation mutation:
    
        `select x, y, z from t`
    
    Is changed into:
    
        `select _fetchid from t`
    
    And there is an additional `FetchDescription` which contains all
    information necessary to add a fetchProjection & phase on top of the
    sub-plan created from `select _fetchid from t`.
    
    The information in `FetchDescription` is in a raw format which will make
    it possible to propagate it later in in simple subqueries.

commit 66cf78d2d33c5dc7235f754d213ce0b5b6436913
Author: Autophagy <mika@crate.io>
Date:   Wed Apr 26 11:30:25 2017 +0200

    Updated documentation about virtual memory limits.
    
    This update is required as part of the bootstrap check failures brought
    about by the upgrade to ElasticSearch 5+.

commit 946adee61d1989ce9eeff9faf04161154947b685
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed Apr 26 14:10:20 2017 +0200

    fix up release notes for 1.2.0

commit 6254eaea915c277a2b9d21b2137bb3e43a3fe984
Author: Andrei Dan <andrei.dan@crate.io>
Date:   Wed Apr 26 11:47:58 2017 +0100

    Disable log4j2's shutdown hook.
    
    Log2j2 introduced a shutdown hook to handle the logging infrastructure
    terminationation.
    We have our own shutdown hooks which require the logging system.
    This commit disables log4j's shutdown hook as we shut it down ourselves.
    
    Add changes entry

commit 5be1e550bc21c0bafdf06971cc110f3c2f645a01
Author: Michael Beer <michael@crate.io>
Date:   Wed Apr 26 14:05:24 2017 +0200

    ensure that nodes are started and present in the test cluster

commit 517206346375d9daafce381239c0318a171e1dd7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 25 23:37:24 2017 +0200

    Move `_doc` ref conversion methods into the same file

commit 91a514883da557ddea7a7b11fdf8d865e8621190
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 25 23:20:03 2017 +0200

    Split Reference replacement implementations into two parts
    
    This changes components that need to replace references from a inheritance
    based implementation to a more functional implementation.
    
    Instead of implementing a component that does symbolTree traversal +
    reference replacement this is now split into two components which can be
    composed.
    
    One component is a function `reference -> symbol`, and the other
    component uses such this function to replace any references within a
    tree with the result of the function.

commit 9a7cd632a515e80a46112a0f8f478502a526cc1e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 25 22:44:12 2017 +0200

    Move FieldReplaceVisitor to top level and re-use more often

commit d1ec8ed01f00b3aef3daefba25b8a23a1940d10a
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Apr 25 16:26:57 2017 +0800

    updated es upstream to fix backward compatibility tests

commit 57d8589241438c5572e98fcfe798b30ddd814402
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Apr 25 15:28:18 2017 +0800

    updated es upstream after rebasing

commit a6b2c8cea71d3097e5834939e71be484bb9d2b4a
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Apr 25 15:23:46 2017 +0800

    updated es upstream to fix failing test

commit 777b091a50a1a08f39d9b15132f50d0bbad76a02
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 21 11:25:55 2017 +0200

    Docs: Update sub-query limitations

commit 9aef26004a3b3bb44c30fe4724d607ddc99be10a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 12 16:51:09 2017 +0200

    Add support for non-rewritable simple subselects
    
    This adds initial support for non-rewritable simple subselects.
    
    Query-then-fetch execution is always only used for the inner-most
    relation. It would be possible to generate more efficient execution
    plans by delaying/propagating the fetch as late as possible, but that
    will be done in a separate PR.

commit 60aad79b6c71e51a66277473addc5385327172bb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 24 14:25:52 2017 +0200

    Fix invalid output rewrite in SubselectRewriter
    
    If a nested subquery contains fewer outputs in the outer relation than
    in the inner relation, it was incorrectly re-written to preserve the
    number of outputs of the inner relation.

commit 743b701ea3bc9c05a243dce2f0fa4603bdeaff88
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 24 13:15:43 2017 +0200

    SubselectRewriter: Remove null handling from merge logic

commit 2a2275e9681177daf45378ee08c56bfb399b6668
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 24 13:08:45 2017 +0200

    Change SubselectRewriter tests to test SubselectRewriter more isolated
    
    The RelationNormalizerTest class only contained tests for the
    subselect-rewrite, so this commit renames the class and changes the test
    setup so that only the SubselectRewriter is tested, without the rest of
    the analyzer infrastructure.

commit 3c8b2ecedae5398c664261bd136de156fa4f84fe
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 24 16:00:00 2017 +0200

    Remove unused partitionRefs

commit 01264b6a62eace25cf55ce55bb08944c70ded3bc
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Apr 24 22:08:15 2017 +0800

    updated es upstream to fix codestyle violation

commit 04518420593e4ba2371f345cf858eaf60e7cd456
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 24 10:13:30 2017 +0200

    Remove redundant argument from Plan#addProjection
    
    This removes the `newNumOutputs` parameter from `Plan#addProjection`.
    It can be inferred from the outputs of the projection.

commit d98e4519933a9ce05f2e597be9159ff3014d1f87
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Apr 11 21:35:22 2017 +0800

    Allow restore of empty partitioned table from snapshot

commit 7bf917b227fc56a126279b0744efc2045207f0d4
Author: Christian Bader <christian.bader@crate.io>
Date:   Mon Apr 24 11:47:07 2017 +0200

    prepare release 1.2.0

commit 4bbf6ca450e303d56fd2ae821a265cbbe74d6101
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 21 23:24:15 2017 +0200

    RoutingBuilder: Remove eager routingNode allocation
    
    This simplifies the code a bit.
    
    Old flow:
    
        allocateRouting(r1)
        allocateRouting(r2) + allocateRoutingNodes and mark as allocated
    
        buildReaderAllocations()
            allocateRoutingNodesIfRequired()
    
    New flow:
    
        allocateRouting(r1)
        allocateRouting(r2)
    
        buildReaderAllocations()
            allocateRoutingNodes()

commit 3e896a39d2fa41e9aedccfb9700f86449cfcc62c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 21 23:12:09 2017 +0200

    RoutingBuilder: Remove unused tableIndices

commit 2d045db5d28fd2c2918b17ce7d37a9f8374dcf23
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 21 22:47:36 2017 +0200

    Remove RoutingLocationVisitor
    
    Some of the methods / arguments were unused and the two implementations
    are easy to change.
    
    In the case of the (former) IndexBaseVisitor it also improves the method
    signature a bit as the unused nodeId is removed.

commit f6009ffd9f6440f1a1c98739b8396e7c20e3c379
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 21 22:14:21 2017 +0200

    Split allocateRouting into smaller methods

commit ddc4deb06b99a586e614ed0e7550d81f4d450b64
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 21 21:43:45 2017 +0200

    Extract Routing building logic into a separate class

commit 2e781d57eccd29106093548ddbc88ce0157a1509
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 21 21:34:02 2017 +0200

    Move ReaderAllocations into a separate file

commit df9161f956348d2bcc8094329c40185d1eaee8d0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 24 10:22:28 2017 +0200

    Replace AtomicInteger usage with primitive int
    
    There is no threading involved there - the AtomicInteger was only used
    because of the closure requires an effectively final variable.

commit 7f3803101e47b14311eea31a8bb5479af8793334
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Apr 24 09:34:20 2017 +0200

    rename bootstrap.mlockall setting to bootstrap.memory_lock

commit 4f5a9ed8ac1fca4a2399d3b8a0f125e9d59c726c
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Mon Apr 24 09:56:16 2017 +0200

    update admin ui to 1.3.1

commit 0eabb52abb66e27590b34a5029b5ad24c3873cab
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 21 15:07:00 2017 +0200

    Simplify "FetchRequiredVisitor" / improve readability
    
    The FetchRequiredVisitor determined if a fetch is feasible and also
    extended the querySymbols if a _score column is encountered.
    
    This commit removes the querySymbol-extension logic because
    `QueriedDocTableFetchPushDown` already handles `_score` columns itself.
    
    Due to the removal of the querySymbol extension logic it's also possible
    to optimize it. A fetch is now considered feasible as soon as a single
    fetchable Reference or Field is encountered.

commit 69a1dc48f1c614f9ca8d8ee9354c902bd35047d7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 21 16:14:35 2017 +0200

    Fix Literal hashCode implementation
    
    Equal array-literals had different hashCode values.
    
    Fixing this causes queries like
    
        `select distance(p, 'POINT (11 21)') from t order by 1`
    
    to return a slightly different result because now it won't use
    query-then-fetch anymore.

commit f8748bc4e6db958d0b929332eb778d57a5c33630
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Apr 21 17:05:14 2017 +0300

    Code cleanup, replace old assertions/expected exceptions,
    with up-to-date ones

commit 51454267254eea2473392064272ef0d9988fb10c
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Apr 21 14:31:19 2017 +0200

    adds fail() call to regression test where exception is expected

commit 70f6becc72bddf2e2fc6b085498090cc3457c745
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Apr 21 14:12:21 2017 +0200

    fixes decision when to auto-create indices at the bulk shard processor
    
    the method to create pending indices will also execute all write item
    requests once its done. so either this method is called, or if no pending
    indices to create exists, execute write item request.
    don’t do both sequentially, otherwise it could happen that the index is
    not fully started (shard not started) while executing writes.

commit b9a6a3e31d65cf282fe0cd9ca917923730756f7a
Author: Andrei Dan <andrei.dan@crate.io>
Date:   Fri Apr 21 14:18:19 2017 +0100

    Use PeerRecoverySourceService to register the recovery source handler provider

commit 0c3a08c4e8e979a6f79cec03f8a2b822518711a8
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Apr 18 12:44:22 2017 +0200

    add link to Docker Hub

commit 36d685d63047ee866c42e2faa7e8de99f75238ea
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 21 14:12:32 2017 +0200

    Change Symbol to implement Writeable
    
    Using Writeable makes it clear that classes are "streamable" and allows
    us to use the latest additions to StreamOutput & StreamInput while still
    enabling us to have final attributes.

commit 6bcb64d445f879f444d09106121106353606b0f2
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Apr 21 15:13:55 2017 +0300

    Enable GROUP BY sqllogictests

commit 86730b053139b87c52f95a0963db5bc12bc29acb
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Apr 20 18:45:48 2017 +0300

    Using DISTINCT together with GROUP BY was producing wrong results.
    Added a check which currently throws an UnsupportedOperationException
    until the functionality is properly implemented.

commit fec0be3f92256066cef3c66ff9564fe5a4ca9745
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 21 12:02:30 2017 +0200

    Remove unnecessary list copy in OutputNameFormatter

commit f9f8919d232d84e8d91a3fa6232811b2830e6bc9
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Apr 12 16:33:02 2017 +0300

    Upgrade to gradle 3.5
    
    We used to set the output resource dirs (main&test) to null to avoid
    tests to include them in their classpath. This approach doesn't work
    anymore since latest gradle doesn't accept null or "", so instead
    we create these dirs in the output build directories for all projects
    even if they're empty.

commit a843aba2560c85a2d8a0f2d99abf42f3c2954b98
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Apr 19 15:35:14 2017 +0200

    fixed the getQualified() implementation of the Functions class

commit 93b1e4763c9c4b3e79e4f73cf540c6143f587144
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Apr 19 19:19:40 2017 +0300

    Minor code cleanup

commit a9d063d557e42d2326eb6ea3fef648388ce2ca37
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Apr 18 22:12:39 2017 +0200

    fixed release notes gradle task
    
    look up CHANGES from correct location

commit 1d3128c30dffc4bee6b4a9830abee56f1ca67313
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Apr 19 23:22:14 2017 +0800

    added test for informatin_schema.routines columns

commit 41af69730eb6bd61d687521981525f032f236e4e
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Apr 19 19:50:26 2017 +0800

    Added specific_name to information_schema.routines
    to provide a way to uniquely identify user defined
    functions.

commit 82d460f3fe7951b5362b818355458d4ac3d12e0f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 19 15:37:48 2017 +0200

    TwoTableJoin: Remove custom/duplicate name property

commit 09b77bb4f9b89088a4f4542fe95d084ee0e752eb
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Apr 19 15:58:14 2017 +0300

    Fix error thrown when using count(*) in ORDER BY clause of joins

commit 1ca17ece25a7e3649d882fa77d624e6d8afac7c2
Author: Christian Bader <christian.bader@crate.io>
Date:   Fri Apr 7 11:44:45 2017 +0200

    Support for group by on joins

commit 4371eea304699a2878e8dc09a9f057d299146772
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Wed Apr 19 13:38:28 2017 +0200

    update-enterprise-documentation

commit 0e2758b5bd6142c9fe5ea1eb6acae9b28876d462
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Wed Apr 19 10:38:24 2017 +0200

    update cluster check wording and link

commit 371a94a295b69197c8a8eb512814e3d08a47fa63
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 18 17:48:32 2017 +0200

    Fix subselect rewrite
    
    The SubselectRewriter messed up Fields in queries that cannot be
    re-written to a single select. (They pointed to an invalid relation)
    
    This doesn't cause any issues so far on master as those kind of queries
    result in an unsupported error later on.

commit da7a52e23eefe7abf2b78ff21905ad817bcd36b5
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Apr 19 09:05:03 2017 +0200

    upgrades ES upstream to latest v5.0.2_cherry commit

commit cfd7f5cc5ea5f04c05b49ed4ae79a2eb39a891eb
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Tue Apr 18 16:12:05 2017 +0200

    updated the admin-ui to 1.3.0

commit e1fa3f1d53498aa440ed6145ad42722df3607918
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 18 13:44:46 2017 +0200

    Add symbol type assertion to projections
    
    This should make it easier to debug planner bugs as errors are raised
    closer to their occurrence. (So far, having an invalid symbol in a
    projection raised an error in the ContextPreparer)

commit 7d0f4a6b86d335cb436b53f5079c91357e978244
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 12 16:41:40 2017 +0200

    Add intermediate fetch to optimize aggregations on sub-queries
    
    So far the fetch rewrite logic was part of the SelectStatementPlanner.
    This meant that fetch was only possible as a last step.
    
    By moving the logic from the SelectStatementPlanner into the respective
    consumers it is possible to have intermediate fetches.
    
    With this commit this is already the case for non-grouping global
    aggregations on subqueries. For example:
    
        select sum(x) from (select x from t limit 10) as tt
    
    In this case the inner-query (select x from t limit 10) will use
    query-then-fetch.
    
    In the future this will also allow efficient non-rewritable simple
    subqueries.

commit f40b04d21029ceb106444ff488e5685a104cd153
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 14 22:06:30 2017 +0200

    Remove unused declarations

commit 018c389171bb65aa46772b24f9d6d9700b534fa4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 14 21:42:10 2017 +0200

    Remove AnalyzedRelation impl from UpdateStatement
    
    Not required - only led to unnecessary double dispatching in the
    Planner.

commit a062bcdb03d64b21522c149c28cde36e693ecf4c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 14 21:35:29 2017 +0200

    Remove AnalyzedRelation implementation from InsertFromSubQuery
    
    Not required. Untill we add support for RETURNING insert cannot be used
    as sub-relation.

commit b4429ddb5292fd199a05115fec16b81bcb76819c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 14 21:30:59 2017 +0200

    Remove AnalyzedRelation implementation from CopyTo
    
    Not required / unused

commit 56e7b76f1ea43cd26f5b68760cf4bfd16eeaf3c3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 14 21:23:14 2017 +0200

    Add a size hint to SelectAnalysis
    
    It's incorrect for `select *` queries, but for all queries where the
    columns are written explicitly it avoids array resizing.

commit 7eec0ba450fca4a28543fe29edef2537c6ceb023
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 14 21:12:00 2017 +0200

    Make some methods static

commit 4ae34443483e77135f3efd810775f8e48b9be842
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 14 21:09:15 2017 +0200

    Add a list concat utility method

commit 34fe1bf96136db302a15fbd201eb3c56165309ee
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 14 20:59:32 2017 +0200

    Create ProjectionBuilder once up-front instead of on-use

commit 01c27650a524deb6fc10c7a04ccc5dfc6351917c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 14 20:49:43 2017 +0200

    Make some dependencies more specific

commit fbe948013ce55513959a636b6fe0be50ced9fca7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 14 20:30:24 2017 +0200

    Remove tableRelation dependency from aggregation validation

commit 458c4399faefd9cbb12e83c7c5647d04b45f5196
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 14 20:23:50 2017 +0200

    Remove tableRelation dependency from group by validation

commit 741939a53d98b4e6421f6d79fea344fa27d53259
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 18 13:49:12 2017 +0200

    removes old `path.work` from distribution `crate.yml`

commit 7da3f074a6737ac9a3a254657299e66661dbe4a8
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Apr 18 14:05:57 2017 +0300

    Replace guava dependencies with jdk

commit a28bef9d2cd8289c5cf7dae58b834fda1c2d4fcc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 13 21:25:29 2017 +0200

    Rename InputCreatingVisitor -> InputColumns & refine API

commit e62194ca284ee17cf3b0fd2695909552d85f4cd5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 13 21:03:26 2017 +0200

    Remove `InputColumn.numInputs` factory method
    
    This factory method led to the creation of InputColumns which contain no
    type info.
    There were only two non-test callsites which were easy to change to use
    `fromSymbols` instead.

commit 09b455d8dbf88c0c532521534d59734e9e5dcf4d
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Tue Apr 18 09:37:58 2017 +0200

    update cluster check text

commit 391d210bcb5c4d05ac167099403bbd706e39d076
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Tue Apr 18 09:23:52 2017 +0200

    fix typo

commit 3bed0d02f9beecbf797686726cb590729665e04b
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Tue Apr 18 08:50:04 2017 +0200

    fix admin-ui changes

commit 7bc692b44ab58f9a4abf71663564aba7fedbb9ee
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Mon Apr 10 15:06:20 2017 +0200

    added javascript language module

commit 5c72046d82dd928b46180dd5a3fcdabaae1cb873
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Apr 17 16:48:42 2017 +0800

    introduced crate ScriptException

commit 8c761ca341ac7069a306c8d0d4ccc5d9cd9eca78
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 14 14:36:40 2017 +0200

    Extract SubselectRewriter out of RelationNormalizer
    
    This will allow us to test these components in isolation.
    In addition the Context class became unnecessary in the
    RelationNormalizer - The EvaluatingNormalizer is now created once per
    startup instead of per normalize.

commit c8884e4b55281632768db7c666d3ffc09d4e8874
Author: kovrus <ruslan@crate.io>
Date:   Tue Feb 28 14:57:49 2017 +0100

    implemented user defined functions

commit a01f8586edd35e726b786b05fec352f0cceb0bf0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 14 12:16:06 2017 +0200

    Avoid NPE in BlobIndex#retrieveBlobRootDir

commit 04b732c220f1c237080b922208ce180e9f52fc21
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Apr 14 08:29:02 2017 +0200

    use getQualified where function ident is available

commit 12f41d3eaa284d26a2114a738a8e0c31f2e8ca3f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 14 10:48:40 2017 +0200

    Tests: Fix flaky testNodeWhichHasTheBlobDoesntRedirect
    
    The test-layer now sometimes also adds a dedicated master now, this
    caused `testNodeWhichHasTheBlobDoesntRedirect` to fail as the
    master-node would always redirect to a data node.

commit 2cfaef7bcb1d8f18ed1383b896dddbb12b5dee97
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Apr 13 17:07:06 2017 +0200

    use singleton pattern for DataTypeAnalyzer

commit 11feb9959f37ffa6a2de48887cac37468ed07e2f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 13 16:46:56 2017 +0200

    Remove unused dependencies or move declaration to correct module

commit 970b7371c39fc89eb8e0a4a895e3fc8823359cc3
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Wed Apr 12 15:08:23 2017 +0200

    enterprise.license is set to true by default

commit 3a2dea4b292c7b10c7fe1bdae4f63006399d96f3
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Apr 13 17:43:28 2017 +0200

    upgrades ES upstream to latest v5.0.2_cherry commit

commit 713c2413fe62cbf04a12f4511cbd8cb81c93eef7
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Wed Apr 12 17:02:50 2017 +0200

    implement cluster check and add warning for unlicensed mode

commit d05a5d2aab0ab8a98de9ee092a5ec9720e6fe7eb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 13 15:39:29 2017 +0200

    Upsert: Add dynamicMappingsUpdate handling to replica operation

commit 985243d0faf97bd8040a541d083f374143d73159
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 13 15:36:18 2017 +0200

    Improve logging in TransportShardUpsertAction

commit 6bc0f2840bf9613ae676798092b686a02d40b9ff
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 13 15:29:08 2017 +0200

    Fix handling of replica exceptions
    
    This fixes a race condition that caused tests like `testOrderByIpType`
    to be flaky.
    
    On the replica, the processing of items of a ShardUpsertRequest stopped
    if one item run into a VersionConflictEngineException.
    That can be the case if a shard is being recovered from a primary and at
    the same time a replica request is being processed.

commit 0035feeb95383bdeb99a87cc9046ff19e5cc1dc8
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Apr 13 15:31:05 2017 +0200

    adds `node.max_local_storage_nodes` default value change to breaking changes
    
    also adjusts the description at the `crate.yml` and adds documentation
    about this setting to node settings documentation section.

commit 84d5a7c3d2f3dcb36fb64e7bd5cf4a0ecb775153
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 13 10:50:17 2017 +0200

    Tests: Fix request leak in testIndexWriterIterator
    
    Due to the re-use of the same BulkShardProcessor instance across
    multiple IndexWriterCountBatchIterators the test could fail because of
    leaked upsert-requests.

commit 05a63ab8a7fe50225668a041ad1780d9072cc6c1
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Wed Apr 12 15:53:21 2017 +0200

    define license.ident setting

commit ec6fe4f9d74cffe9e6d9c916d3ddf58028d2a800
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 12 15:36:00 2017 +0200

    Split methods in QueryAndFetchConsumer into smaller methods
    
    This commit only moves functions or splits them into multiple functions.
    `normalSelect` is moved outside of the `Visitor` inner class.

commit c94e101ef3b6772e65238940fd118a3991ca18cc
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Apr 11 09:59:58 2017 +0200

    update release procedure for new release notes

commit 1d3c7350349581c80ca354ad545945e9f829a37a
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon Feb 27 20:15:34 2017 +0100

    improve top level docs

commit 388e067461c504855533bf66295c8cd5904607e0
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Apr 11 23:43:38 2017 +0200

    add 1.0.6 release notes

commit 8babd040408fa791526de9f51e95692b1255f18c
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Wed Apr 12 10:26:03 2017 +0200

    upgrade admin-ui to 1.2.3

commit 7134c6d19db65593dcf0c5e766fc14e8bb671813
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 11 11:59:34 2017 +0200

    Remove dubious FilterProjection constructor
    
    We allowed the creation of a FilterProjection without specifying outputs
    and used that in the NL-Plan creation. It didn't matter there because we
    never looked at these outputs but it isn't correct.
    
    A FilterProjection (or any projection) should always have outputs. Even
    if there would be a valid reason for them to be empty, this should be explicit.

commit 47aedce2fae4eaaae4be586d58cec6b93f6cb4e4
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Apr 11 16:47:12 2017 +0200

    updated ceil, floor, round functions to use specific resolvers

commit 4a099367edbfcdf5ebd2e3fb1c86e4ff6bda28c5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 12 10:32:51 2017 +0200

    Remove Visitor from FetchPushDown
    
    Dispatching is already done in the Planner, so we have concretely typed
    QueriedRelation instances available and don't need to re-dispatch.

commit ab9c9b5cebf9beab058aa91ba6114304d79c6740
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 12 11:00:42 2017 +0200

    Tests: Fix flaky testUpdateWithExpressionAndRelocatedShard
    
    It didn't wait for relocation, so it didn't test the RemoteCollector and
    was flaky because it could hit a stale relocating-replica.

commit 9cd5f875a9e7f4b5c30be5953aeeebf74a9d9b52
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 11 15:28:19 2017 +0200

    Replace DistributedGroupBy with Merge/Collect
    
    It's a bit less explicit but it results in the same execution-plan.
    
    In order to extend our sub-select support we'll likely have to extend
    the `ResultDescription` interface. Having less classes implementing the
    interface will make that a bit easier.

commit a30ca839d290f8ebf77e83497db7fa86e0d74036
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 11 13:44:32 2017 +0200

    Exclude FilterProjection if not required
    
    non-grouping aggregations on subselects contained a FilterProjection
    even if not necessary.  It probably wasn't a performance overhead as the
    filter was a no-op and there is only a single row, but it makes reading
    the plan (EXPLAIN) less confusing.

commit 6d59519e068a1e14ee48a04759bc7a78133dea75
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 11 18:05:27 2017 +0200

    Tests: Adapt T3 Routing to match node-id used in testing clusterService
    
    Unittests that use T3 should still result in "single-node"
    execution-plans. For that to work the nodeId used in the routing needs
    to match the nodeId that is part of the clusterState.
    
    Ideally we'd generate the routing based on the clusterState, but that
    takes a bit more effort to do.

commit 6e45e490ce469935033997ad22a234cf66ae889c
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 11 16:35:14 2017 +0200

    skip testProcess() on windows systems
    
    the related system values are not supported by windows/sigar

commit 6fc64fc4db46b963c26b87732550e1a1f8b3469c
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Mar 31 16:14:01 2017 +0200

    moves ES 5 related breaking changes to CHANGES.txt

commit d44bf8a229bf54c96b3e254db9fa5a23f29f3ff3
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 27 20:54:03 2017 +0200

    adapts graceful stop to ES 5

commit 5e0b32fe669516e03b8aef3b2add4338c0133486
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Mar 27 13:28:22 2017 +0200

    Sync documentation with CrateSettings.
    Add/Remove new/old settings, fix default values.

commit 6fdfc6c51396ce61881c6891f38e3de146b21613
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 20 23:57:41 2017 +0100

    refactors crate cluster settings to benefit of new es settings
    
    all cluster settings are defined now as CrateSettings/ESSettings,
    validation relies on ES settings validators.
    default values of ES settings are used directly and cannot go out of
    sync anymore

commit 7c1133685b294dfd5108bd845242409320e31e9c
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Nov 4 16:26:54 2016 +0100

    Upgrades elasticsearch to 5.0.2

commit 8a87f14839dba1f48b49fe436658d3c822e0c13d
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Apr 11 16:44:17 2017 +0200

    link to release notes from upgrade docs

commit 092cdbc0d25812b59cf699be0f41ec9bad894df4
Author: Autophagy <mika@crate.io>
Date:   Tue Apr 11 15:09:12 2017 +0200

    Fixed release date in 1.1.2 release notes

commit 0f68f08b10b50bc5d6dabdb55bff6074d62b0552
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 10 17:39:58 2017 +0200

    Remove NoopPlan handling from MSS-SelectStatementPlanner
    
    Since 38592deb1b362b6ae7f7b548250ce6d07a5d9800 the NestedLoopConsumer
    never returns a NoopPlan.

commit 24e96391abda4d8fce3c5b60195cd8ff146b6cc7
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Apr 11 09:30:54 2017 +0200

    fix release notes for 1.1.2

commit fe11fa9c8ccdd18e55c639258bb2c1957b9d4bcf
Author: Christian Bader <christian.bader@crate.io>
Date:   Mon Apr 10 17:57:35 2017 +0200

    Moved extractFieldsFromJoinConditions to JoinPairs for the sake of reusability

commit 8a6f657f24d9465b103f4faa344edb30fc9da8ac
Author: Autophagy <mika@crate.io>
Date:   Mon Apr 10 17:28:42 2017 +0200

    Updated changes and release notes to reflect 1.1.2 release

commit c1e9a20efdf5238c0c4c48088da282d7bd587fe1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 10 14:11:34 2017 +0200

    Remove unused branch in FetchPushDown

commit eb893d33a2c0d2f832187be84a4f992fadf3e481
Author: Andrei Dan <andrei.dan@crate.io>
Date:   Fri Mar 31 16:03:21 2017 +0100

    Use crate add/delete blobs to build up the size/count stats
    
    Avoid blocking the cluster while computing the initial total size of the blob shard.
    
    Add integration test for stats
    
    Increment totalsize and count in one api
    
    Test blob shard stats when deleting the same blob twice
    
    Log IOException when calculating initial shard totalsize and count
    
    Handle stats in case of blobs concurrent upload
    
    BlobCoordinator is an AbstractComponent
    
    BlobContainer has a BlobCoordinator
    
    Rename blobDir methods and walk only the blob data dir in the BlobContainer
    
    Changelog entry

commit c5f31848c45920b2d234c9c1434a9084bde52514
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 10 11:10:08 2017 +0200

    Add code comment regarding distributed join planning

commit 5696e52ac24bef3b505e5f8a5f8088d8ea68733e
Author: Christian Bader <christian.bader@crate.io>
Date:   Mon Apr 10 13:34:21 2017 +0200

    Added new FieldsVisitor for the sake of reusability

commit da2b2c361ebce8386acdf1f7c80e8a0bf8fb6362
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Apr 10 13:10:17 2017 +0300

    Optimize performance of negation queries `!=` on columns
    with `NOT NULL` constraint.
    e.g.: select * from t where not_null_column != 10

commit 88f55def81eab775fd78bd11732d9673428e6eee
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 10 11:55:47 2017 +0200

    Docs: Fix rst syntax warnings

commit 1c72bced1179df74f04f22649c16e49781097374
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Apr 10 10:02:42 2017 +0200

    make defaultSchema in sessionContext not nullable
    
    the sessionContext should already fall back to `doc` as defaultSchema
    so later on there do not need to be any further `null` checks.

commit 9e064f89ad5c52af7f8f2f57dc04902968b9cf58
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Fri Apr 7 18:26:12 2017 +0200

    improve zero upgrade docs + file reformat, and add backup warnings to release notes

commit 24f3ec0e178f3a4566173c96aaeaaa84f9b425e1
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Thu Apr 6 14:10:21 2017 +0200

    restructure and improve release notes, move cluster checks to main docs

commit 394c4abace4351a96e76d3769f6e2bd6e0d2b2f9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 7 22:54:45 2017 +0200

    Remove leaves from SplitPoints
    
    `leaves` is kind of unnecessary because all usages can be replaced with
    `toCollect`.
    The difference between the two is that `toCollect` can contain scalar
    functions.
    
    For example:
    
        aggregation: sum(x + 10)
        leaves:      x, 10
        toCollect:   x + 10
    
    Now it doesn't matter if we build:
    
        CollectPhase
            toCollect:  [x, 10]
            grouping:   sum(add(inputColumn(0), 10))
    
    Or:
    
        CollectPhase
            toCollect:  [add(x, 10)]
            grouping:   sum(inputColumn(0))

commit 3176599ee75629f87648f11ac679e8b103630f25
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Apr 7 22:05:37 2017 +0800

    removed obsolete methods from CreateSnapshotAnalyzedStatement:
     - isAllSnapshot() and isNoOp() were only used in tests
     - includeMetaData() is not necessary anymore, since we include the metaData always

commit 01e49696f600d13c3abc171786c983c1aa33f878
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 7 14:06:59 2017 +0200

    Handle nullable join-condition in non-grouping join aggregations

commit 4363a5c6286770f6127e365e05fd749a5c9b589a
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Apr 7 16:06:28 2017 +0200

    use getQualified() in SymbolPrinter
    
    and cleaned relevant tests

commit f1f9381ca1b0e1c6cc5757119cf70f1eb18dac58
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Fri Apr 7 10:45:25 2017 +0200

    correctly expose stats.service.interval in sys.cluster

commit bfd7737ee7b16a601387279c5007790867cf2bef
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 7 11:44:47 2017 +0200

    QuerySpec: Use jdk Consumer class

commit 39c7909aae15d5adc9d4167231bb334709cabbc8
Author: kovrus <ruslan@crate.io>
Date:   Mon Apr 3 13:19:54 2017 +0200

    get rid of getSafe() and raise unknown function in analyzer

commit 96429e80e001edd5faf667155ac466b09af89d2c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 7 10:48:41 2017 +0200

    Remove Context class from FieldCollectingVisitor
    
    skipIf was always `s -> false` so it was possible to remove it - and
    once removed the Context class became unnecessary.

commit d835a389a34eadc435973c49ad1c8eb67a84b43b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 6 13:51:11 2017 +0200

    Fix SplitPoints leaves creation & clarify SplitPoints contents
    
    The `leaves` in the SplitPoints also included the parent function of the
    leaves.
    For example in `sum(coalesce(x, 10))` the leaves included all three:
    coalesce, x and 10, instead of only x and 10.

commit 671f6b7550a0c1e3cbb110cc41dd95c90bba1f79
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 4 00:33:33 2017 +0200

    Change future usage to CompletableFuture in TransportFetchNodeAction

commit 3b70ae5e64075347c500bc1993245a5d521c0c88
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 4 00:24:31 2017 +0200

    Change NodeAction to use CompletableFuture instead of ActionListener
    
    CompletableFuture is easier to compose. And a function with a result
    instead of a mutable argument should be easier to reason about.

commit 009e4de42a7a4aab895e87329f586922f8931820
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 4 00:04:07 2017 +0200

    Simplify JobContextCallback

commit 66d416c2ac5c6384c219fa308927c97e43cd7b9b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 4 00:02:44 2017 +0200

    Migrate JobContextService#kill from guava to jdk future

commit 843a37a7b4ef0ccea618868d535a4690aba2d36d
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Apr 3 14:12:56 2017 +0300

    Remove guava dependencies and minor code cleanup.

commit ded8c65f3c04f0a9df633d7b1f2b9f7759da9956
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Apr 3 14:12:12 2017 +0300

    Migrate from guava to jdk Future.

commit b6f131d58bdeb29f3d5407e50524d2ac8db53381
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 5 14:28:30 2017 +0200

    Improve suspended portal close handling
    
    This changes `interruptIfResumable` to `closeAndFinishIfSuspended` as it
    wasn't interrupting an active operation, but instead it's closing a
    previosly suspended operation.
    
    This fixes
    `testCloseConnectionWithUnfinishedResultSetDoesNotLeaveAnyPendingOperations`
    
    The change in SimplePortal/BatchConsumerToResultReceiver reduced the
    flakyness from ~10 failures in 100 runs to 1 failure in 1000 runs. The
    `assertBusy` addition should prevent it from failing at all.

commit 3e713ed28a8a09d813cc132ceee6a515665e1b55
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 5 16:50:53 2017 +0200

    Remove outputSymbols from MultiSourceSelect
    
    Having separate outputSymbols is confusing as they were the same thing
    as the outputs of the QuerySpec.

commit b053d0c500f230f44ce73f7cc51ea0ac69f7b72a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 4 17:58:41 2017 +0200

    Decouple SplitPoints from ProjectionBuilder
    
    The ProjectionBuilder only required the QuerySpec to be able to create
    SplitPoints. Since the SplitPoints creation logic has been moved to the
    SplitPoints class this can now be removed from the ProjectionBuilder

commit b2ce352ce4bb42aada91fb84b9e265064a065cc6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 4 16:26:32 2017 +0200

    Narrow API on SplitPoints/SplitPointVisitor

commit 2152a6d98c57f848698d48fdd3f7584cf2844dbf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 4 16:01:19 2017 +0200

    Remove Context class from LeafVisitor and narrow access

commit 8d32e7210029eb5a5b5a9ac4539f790b1ee72116
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 4 15:47:43 2017 +0200

    Remove unused normalize from FileUriCollectPhase

commit d2c2879a80db49b7cac01bb689b4c87b425125f8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 4 15:43:10 2017 +0200

    Remove anonymous HashSet class from LuceneQueryBuilder

commit e59b158f0a6f1b98c644010024b526180bec7b17
Author: Autophagy <mika@crate.io>
Date:   Tue Apr 4 17:03:17 2017 +0200

    Updated changelog and release notes to reflect 1.0.6 release

commit d15cc6b3b132253de35fb3f654241d2dca8e10a0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 4 13:58:37 2017 +0200

    Replace BlobCollectorExpression with RowContextCollectorExpression

commit 8d5e7b19205ff9c464004c4e12c953d059073ff0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 4 11:23:13 2017 +0200

    Fix listener leak in PageDownstreamContext / BatchPagingIterator
    
    There was a race condition that would cause a NPE in
    `BatchPagingIterator#completeLoad` which would prevent the listeners
    from being released.
    
    The race condition happened if:
    
     - There is a kill call on the PageDownstreamContext. This sets
       receivingFirstPage to false and invokes the consumer with a failure.
     - After the kill there is a failure call.
       This failure call leads to a call to `completeLoad` because the kill
       already invoked the consumer - but since the consumer was called with
       a failure the `loadNextBatch` call wasn't made so inside the
       BatchPagingIterator `currentlyLoading` is null.
    
    `testSelectGroupByFailingArithmeticScalar` failed on the `five` branch
    (that branch contains improved/fixed request leak detection) sometimes
    because of this.

commit 1cce7e57c5ac0a788434406c72ae4a18318df4a7
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Tue Apr 4 12:12:29 2017 +0200

    documented that object, array, geo_pointm geo_shape are not supported by Order BY

commit 8d5629fce13974e31369d287f9d2b4d935453536
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 31 19:51:59 2017 +0200

    Merge SubExecutionContextFuture into AbstractExecutionSubContext

commit 31a8c3499efa04907ded44a710b377b96cf83da6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 3 13:36:03 2017 +0200

    Move InverseDocReferenceConverterTest into test src folder

commit 3be74209e1725a4c9cd18e3dfc568a44bcd8fd1b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 3 12:29:39 2017 +0200

    Remove Context class from NodeOperationGrouper

commit 226c9f95335219f542bf93dd6e7cf8fbaecccad8
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Apr 3 13:01:07 2017 +0300

    Migrate from java to jdk Future

commit f5b674becc92b3dfdd67a19a74189130618af54f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 3 11:34:54 2017 +0200

    Migrate QuerySpec from guava Function/Predicate to jdk

commit 8185118e347d2094d71a3b3b88b754946dfd53f9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 31 20:26:11 2017 +0200

    FutureActionListener: Migrate guava Future to jdk Future

commit f1039ba15743881be561e71f1ff3d7e7cc4482db
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Apr 1 20:59:01 2017 +0200

    Remove unused ESFieldExtractor

commit b5154d35e6a9bb242303055e886f028126b3ba30
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Apr 2 15:25:37 2017 +0200

    Remove locks from SharedShardContext(s)
    
    The prepare phase runs in a single thread so there is no need for
    synchronization in SharedShardContext/SharedShardContexts.

commit aca17b63257d30a8b96ef6acbe8837a767308d24
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 31 20:28:07 2017 +0200

    Move CurrentSchemaFunctionTest into correct src folder

commit e436d78e27853738a1f1c29f2ceffa881859d097
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Mar 31 14:56:49 2017 +0200

    Fixed changelog entry

commit 1f536f30f13173553f44999704929b13744f3e84
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Mar 31 14:12:01 2017 +0200

    Fix cluster check for tables need recration to
    check only Lucene's major version number.

commit 8f0e5941acef37002e85756d19e58764d990148e
Author: kovrus <ruslan@crate.io>
Date:   Thu Mar 30 18:28:08 2017 +0200

    change the signature of the get method in the functions class
    
    The signature of the ``get`` method does not require a
    function ident as an argument any longer. The new signature:
    
        get(functionName, argumentTypes)
    
    The new signature will prevent from instantiating a
    function ident object upon the getting an implementation
    of a fucntion.

commit 3ee7c18d5f279182ecb58bd166c110561e93ac74
Author: Christian Bader <christian.bader@crate.io>
Date:   Fri Mar 31 10:13:42 2017 +0200

    Fixed indent in CHANGES.txt

commit c98d53e04f1fbca8a16d789de4ed99ef82ff7f36
Author: Christian Bader <christian.bader@crate.io>
Date:   Wed Mar 29 15:54:56 2017 +0200

    Cleanup custom blob dir on index delete

commit 770158c0ab9fb71fe0301784dfcd27dfe89a6595
Author: kovrus <ruslan@crate.io>
Date:   Thu Mar 30 17:05:14 2017 +0200

    do not implicitly set a session schema for alter table operation

commit 31dec587e5734c91074deb896eabfb51200c30e2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 30 15:12:29 2017 +0200

    Change GenericFunctionQuery to utilize TwoPhaseIterator abstraction
    
    The `TwoPhaseIterator` abstraction fits quite well for how the
    `GenericFunctionQuery` works and the `ConstantScoreScorer` has a
    overload that uses a `TwoPhaseIterator`. Saving us from implementing the
    DocIdSetIterator interface.
    
    The `advance` implementation also looked broken as it called `nextDoc`
    in the `noMatch` case.

commit 8489010370ff8c8423d8e311aae078211a09cad1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 30 00:29:27 2017 +0200

    Remove unnecessary RecoveryShardReferenceResolver
    
    RecoveryShardReferenceResolver was created in the same scope as the
    ShardReferenceResolver (once per shard creation), so there is no obvious
    reason why this cannot be part of the ShardReferenceResolver as well.

commit 34aa47a9ae81e5e54d9c24bc5bc42ccde4bbb863
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 30 00:07:19 2017 +0200

    Replace AbstractReferenceResolver with a non-inheritance version
    
    This allows to use different Map implementations - e.g. ImmutableMaps
    and correctly pre-sized maps can be used.

commit 559f9e7ad6df36e5d1ed0944e826e919de4db616
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 29 23:05:19 2017 +0200

    Migrate Id to jdk Function

commit 7c29eefbabe71427cb7cca83df495e5f1ab04777
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 29 23:12:48 2017 +0200

    Migrate ParameterContext to jdk Function

commit 3406a2e65b13812661a5401aea90e30c172d49a0
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed Mar 29 15:30:56 2017 +0200

    fix up release note versions

commit 4e2b734435d6b1d7104a7cafb9b68906328d26a8
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed Mar 29 15:00:11 2017 +0200

    fix up release notes for 1.1.1

commit 7a205fbdeabdd358bbaa46274b2069f17a71a152
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Jan 22 01:13:52 2017 +0100

    Use IntObjectMap for targetToSource instead of Multimap
    
    To avoid boxing. This brings back the
    measureCreateNodeOperationCtxPlusFindLeafs benchmark from ~300ns to
    ~200ns

commit 6271fdf51c524ba2255b70748fca47cee83cb3f5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 29 13:16:27 2017 +0200

    ContextPreparer: Replace ImmutableMap with IntObjectMap
    
    This reduces the number of allocations because it avoids boxing.
    Although it seems to get a little bit slower (280ns -> 310ns).
    
    But the benchmark also doesn't include the `.get()` calls on the map, so
    it is a bit skewed.

commit 6419be369a58b780957ffc03f2b4314e4796d6ce
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 29 10:57:04 2017 +0200

    Add NodeOperationCtxBenchmark JMH benchmark

commit 7ad6a3da2fade680d4ced0f0356e5c78546b67cf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 29 10:34:51 2017 +0200

    Make NodeOperationTreeGenerator a singleton

commit 265f6c479c01cc315b2a8e2acce0a74c0facebf6
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Mar 27 16:22:53 2017 +0200

    updated changelog and releasenotes to reflect release 1.1.1

commit 5d70ca8f92dc8eb427250aca7a494cb38fea1f0c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 27 16:15:42 2017 +0200

    UpsertById: Use compose for partition creation -> upsert chaining

commit 0b2fd657079fb1cead1b9f62158fe3b55322ea8e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 27 15:59:34 2017 +0200

    UpsertById: Remove unused null handling

commit e8ebd8e23340c20de6c1150f9e03e2e9f3bb6c0a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 27 15:49:48 2017 +0200

    UpsertById: Remove result null-handling
    
    The bitset returned by the BulkShardProcessor cannot be null.

commit 84ba7a0472ab3103bb90839024acafe50cb64ba1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 27 15:48:55 2017 +0200

    UpsertById: Extract result creation methods
    
    To improve readability a bit.

commit 4d85cde9fc6b4d381348d418bc06627a7398a81b
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon Mar 27 15:09:20 2017 +0200

    improve release notes organisation, clarity

commit 31a5079d1a9331a3e33e323a2f372a3e2e749e4b
Author: Autophagy <mika@crate.io>
Date:   Tue Mar 28 15:43:37 2017 +0200

    Update Admin UI to 1.2.2

commit c200b762c98eb6b50b735c9fa35489357211d2aa
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Mar 28 15:46:12 2017 +0200

    Mention crates.yml instead of elasticsearch.yml on Azure discovery plugin misconfiguration

commit 33b2688a1b3d5d8ab73447094f1f6699d5c86f9d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 28 13:45:59 2017 +0200

    Update jmh to 1.18

commit 05323ad63acb510dd1d7c9005c9de666ce3cd725
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Mar 28 14:36:40 2017 +0200

    Use random port range to be able to run gtest

commit 90ffef9a8a5164cd7e080b8e2ee9f1ec7307289c
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Mar 28 12:27:53 2017 +0200

    Change default bind/publish address to _local_ instead of 0.0.0.0

commit 1df77b68e5c96c1cc49e655bd03cfb594dcb7aaa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 28 12:15:11 2017 +0200

    Fix fetchId encoding
    
    f1c0595b2dbe485a6626231f98603782a1bbff48 broke the encoding of fetchId,
    causing queries to return wrong values.

commit 176e105511045160f2e2d194399ebd5bd7a6a808
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Tue Mar 28 11:28:00 2017 +0200

    update /_plugins/crate-admin redirection to MOVED_PERMANENTLY

commit 0674efb50a306f4b1d96c6803ab21289d3e3713c
Author: Andrei Dan <andrei.dan@crate.io>
Date:   Mon Mar 27 15:25:12 2017 +0100

    Demistify the test intention

commit 79c53d7c217bd1b34cc84d9810d71061999ff2da
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 27 15:24:47 2017 +0200

    Improve Context creation error message
    
    The error which is raised if a context cannot be created contained
    "null" as original error in case of exceptions like
    NullPointerException, ArrayOutOfBounds or IndexOutOfBounds - these don't
    have a message.
    
    This commit adds the exception name, to make debugging during
    development a bit easier.

commit 718752c38f38506fe556516cda10e27032e0afc3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 27 10:15:35 2017 +0200

    Move AggregationMode from Aggregation to Projection
    
    We cannot have mixed mode's within a projection. This change enforces
    that.

commit 7b61d92d86bb8359e27ec964e9420d7231a13ab2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 24 11:21:07 2017 +0100

    Replace Aggregator with AggregationMode
    
    Performance is about the same.
    
    master:
    
        measureGroupBySumInteger  avgt   50  849.171 ± 70.308  ms/op
    
    with patch:
    
        measureGroupBySumInteger  avgt   50  760.902 ± 60.245  ms/op
    
    (Couldn't confirm an improvement with fullstack benchmarks, there is a ∓
    5% diff, which is within the error margin we currently have)

commit 3c5dbcf9666fe3202f108f675ddbf75902c51fdf
Author: Autophagy <mika@crate.io>
Date:   Mon Mar 27 14:49:47 2017 +0200

    Update Admin UI to 1.2.1

commit 473df522272047af273c2901b5c99eb941d4c085
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Mon Mar 27 11:34:34 2017 +0200

    redirect /_plugins/crate-admin to root

commit a81fce893eeb0fe3205560b33afb0536dae3cc26
Author: Andrei Dan <andrei.dan@crate.io>
Date:   Mon Mar 27 10:11:09 2017 +0100

    Wait for bulkShardProcessor to finish at the end of the test

commit 0aae4874028eb3bc527f234e2d8e86b1584d1181
Author: Andrei Dan <andrei.dan@crate.io>
Date:   Fri Mar 24 13:35:36 2017 +0000

    Remove next batch isLoading check from iterators
    
    Test consumers (which actually consume) with batched iterator
    
    Update BatchIterator loadNext documentation

commit 09c65749c978558f8a1264c9052b954120613748
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 23 23:15:59 2017 +0100

    Remove Aggregator usage from AggregateCollector
    
    Before:
    
        cr8 timeit -s 'select avg("adRevenue") from uservisits' --hosts localhost:4200 -r 500
        Runtime (in ms):
            mean:    170.486 ± 0.564
            min/max: 158.599 → 204.059
        Percentile:
            50:   169.980 ± 6.432 (stdev)
            95:   180.839
            99.9: 204.059
    
    After:
    
        Runtime (in ms):
            mean:    148.731 ± 0.496
            min/max: 138.702 → 185.967
        Percentile:
            50:   147.725 ± 5.662 (stdev)
            95:   158.979
            99.9: 185.967
    
    JMH indicate a similar result:
    
        AggregateCollectorBenchmark.measureAggregateCollector     avgt   50  180.290 ± 4.171  us/op
        AggregateCollectorBenchmark.measureAggregateCollectorNew  avgt   50  134.004 ± 2.317  us/op

commit 69c04cdeaabb2f1b5a9b4f2b7dbc2f6b41f56c3b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 23 21:39:22 2017 +0100

    Remodel Aggregation step to prevent invalid combinations
    
    We support aggregations from "iteration to partial", "iteration to
    final" and "partial to final" but modelled this as separate from/to
    steps which also made it theoretically possible to specify garbage like
    "final to partial".
    
    This commit merges from/to into a single "mode".

commit a4566204eb097d4ad7601c7f8811d2100510f9de
Author: Michael Beer <michael@crate.io>
Date:   Fri Mar 24 14:26:18 2017 +0100

    added possible data type conversion to timestamp array.
    
    ``select cast(['2017-01-01','2017-12-31'] as array(timestamp))``

commit 44a23640bfaf21ce359a9728c90a7f132a839d36
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Mar 24 00:19:46 2017 +0100

    Fixed bug produced by using random UUID to replace
    same UUID used for partitions due to old bug.

commit ec6342b15b01aada88791f4d06254a7c1d290f60
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 24 11:26:39 2017 +0100

    RamAccountingQueue: Change logging from error to warning

commit 4daf8f80d509507c71a43e10ec0cad49b2987a27
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 24 11:24:23 2017 +0100

    Tune log levels in BulkShardProcessor

commit f1fe8f353d1cf526c27e22a82c10b052a1446fdb
Author: Andrei Dan <andrei.dan@crate.io>
Date:   Wed Mar 22 14:12:36 2017 +0000

    Null match "any" operators

commit 27c2e0a2594d2a60774d24d62cb507490901701c
Author: m-kharbat <meriam.kharbat@gmail.com>
Date:   Thu Mar 23 14:14:04 2017 +0100

    fix documentation code block

commit 752f3c1d514e86a03bf53e2180160c17f91de5c8
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Mar 23 17:27:08 2017 +0100

    improved error handling for top n projectors

commit cf517208236d6af83079749bbfe866a0399cd0a6
Author: Andrei Dan <andrei.dan@crate.io>
Date:   Thu Mar 23 13:09:19 2017 +0000

    Initialise LuceneBatchIterator.weight on first usage

commit 06dc313df3a4f482192c76bb3e80faa2bba3515a
Author: Christian Bader <christian.bader@crate.io>
Date:   Thu Mar 23 13:40:41 2017 +0100

    Moved enterprise settings in crate.yml to top

commit 00f6592f21ebdb15fe28ab41b8fd22672841cd19
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 22 14:36:13 2017 +0100

    Tests: Change dynamic column template update test to use less resources
    
    The insert statement would sometimes run into a timeout causing the test
    to fail.
    
    Reducing the bulkSize & numCols still causes the test to fail without
    the fix applied in bd4dba27cb6c1cdb659698dd37ce2bcf3f5c03e7

commit ecea81b558f14b2c69871985b9c2199efca7bf13
Author: Christian Bader <christian.bader@crate.io>
Date:   Wed Mar 22 11:15:27 2017 +0100

    Fixed documentation regarding aggregation of timestamp fields

commit d2821d799abee1e8e160ac78c14e646e3439c91c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 22 14:49:34 2017 +0100

    Bump version

commit 0f3b1a819f7bc0ff028150dd079efc35d4731124
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 21 17:59:22 2017 +0100

    Fix error handling in ProjectingBatchConsumer

commit f4c0e422c20bc066b9d1af3828cb93e2a5c80913
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Mar 22 12:17:26 2017 +0100

    updated changelog and releasenotes to reflect release 1.1.0

commit a8eae3563655e439fcda1400a9c8767019f0c404
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 22 11:06:22 2017 +0100

    Tests: Fix ProjectingBatchConsumerTest / DummyBatchConsumer
    
    Tests didn't test what they should because the requiresScroll flag was
    ignored.

commit 0f4f7e4641343252e46e693b9dae4fec9c61bdd2
Author: Andrei Dan <andrei.dan@crate.io>
Date:   Fri Mar 17 08:40:55 2017 +0000

    Projectors expose scrollable property

commit f2ef212abb45144f220fc9acdd252bad18f203c2
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Mar 21 16:28:50 2017 +0100

    Fix chooseReleaseNotes task and adapt
    script to create tag for new release.
    
    Follow up of cd73453881eb4a9e5b6937ec6b1deb23a1fd639e

commit cd73453881eb4a9e5b6937ec6b1deb23a1fd639e
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Mar 21 14:43:24 2017 +0100

    Choose release notes file for distribution

commit 9384b4e6e8cdc92b614cda33e97e351c317b87a8
Author: kovrus <ruslan@crate.io>
Date:   Mon Mar 20 20:52:10 2017 +0100

    add subscript support for object literals
    
    Expressions like ``{"key"=10}['key']`` can be evaluated now.

commit 09aed7fa7b4f34faf28ebc2a3db034bec6f854c7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 21 10:50:46 2017 +0100

    BatchIterators: Swap close/kill checks
    
    Kill can cause a BatchIterator to get closed which could lead to the
    "BatchIterator is closed" exception instead of the kill-reason to be
    raised.
    
    `testKillUpdateByQuery` could fail because of this.

commit 92aa43612f1cb9738eeec90be85e2fe76cd28349
Author: Andrei Dan <andrei.dan@crate.io>
Date:   Mon Mar 20 16:20:24 2017 +0000

    Defer setting loading to false to when all futures are complete

commit 2afa414fd57bc0f702edde839bdddf442a195990
Author: Andrei Dan <andrei.dan@crate.io>
Date:   Thu Mar 16 16:37:31 2017 +0000

    Guard against instant loadNextBatch calls

commit 7aa3086e327744b16967a22cf5f01c4b9d4b1432
Author: Andrei Dan <andrei.dan@crate.io>
Date:   Thu Mar 16 16:13:52 2017 +0000

    Stop using the isDone() as a boundary of when an iterator is done loading the batch

commit f4416c99362ee441659006963b6d7feb8a11c589
Author: kovrus <ruslan@crate.io>
Date:   Tue Mar 21 09:20:08 2017 +0100

    fix the jmxterm downloading url in monitoring tests

commit 2c513712bb316e18275d00d740d8fe29f40119bb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 20 16:25:27 2017 +0100

    PageDownstreamContext: Move consumer.accept calls out of lock
    
    In order to narrow the locking window to process `kill` in case
    `consumer.accept(...)` is synchronous. See previous commit.

commit c36292855f99682146e7d3662d72ffc692cec4a3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 20 15:10:16 2017 +0100

    Narrow locks to improve kill behaviour
    
    This narrows the locking in BatchIteratorCollectorBridge.
    `consumer.accept(...)` can be synchronous. Due to that `kill` didn't
    have any effect until the whole consume operation was finished because
    both `doCollect` (which calls the consumer) and `kill` were synchronized.
    
    This commit changes the locking so that `consumer.accept(...)` is called
    outside of a lock.

commit 3e2eb6fe69989f57f7fd0b7d3c7b09621511a727
Author: Andrei Dan <andrei.dan@crate.io>
Date:   Fri Mar 17 17:18:03 2017 +0000

    AsyncCompositeBatchIterator does not handle rejected tasks

commit 9e072c19694989cd31c0b49fd103fe483dc70f58
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Mar 7 15:59:29 2017 +0100

    release notes structure

commit bb93c27d8d073d59f8474deb585121aa46e63d64
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 20 11:44:33 2017 +0100

    Improve kill handling in CollectingBatchIterator/AsyncOperationBatchIterator
    
    CollectingBatchIterator now forwards the kill call to its source instead
    of cancelling the future, in order to give the source the chance to
    handle the kill itself.
    
    AsyncOperationBatchIterator will now check the killed state if
    `processBatch` fails and in case it was killed prefer the killed
    exception over the `processBatch` failure.
    
    In the fetch-operation case a user invoked kill might remove the
    FetchContext which causes `processBatch` to fail with a context not
    found exception.
    This led to the user getting this context not found exception instead of
    the expected "job killed" error.
    
    This doesn't solve the issue completely as there is still a race
    condition where the handler-node receives the kill request *after* a
    node with a FetchContext has already been killed and led to the error.

commit d4219678184fb908f7300b1b04a7fb34ee8d7c20
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 16 18:21:24 2017 +0100

    Update comments that still referred to RowReceiver

commit 9cf8e875d67cb893062567e5701a1615122e8974
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 16 23:55:55 2017 +0100

    Remove some unused code

commit 35e4afb7e82a603ce84a34bb3ce64a3690dcf171
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 16 23:41:27 2017 +0100

    Switch to single CrateCollectors
    
    Due to the new pull-based execution, doCollect *only* provides a
    BatchIterator to a BatchConsumer. The heavy lifting is then done in the
    thread in which the Consumer is running or inside loadNextBatch calls.
    
    Having multiple doCollect calls run in separate thread therefore isn't
    sensible any longer as it is only unnecessary context switching.
    
    This also unifies the concurrent & sequential composite-collect pattern and
    changes the interfaces to expose a single CrateCollector instead of a
    collection of collectors.

commit bbff28a0b1f228b95fa93d9b91c57d6848097f3c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 17 09:44:16 2017 +0100

    Remove unnecessary synchronized & releaseListeners call
    
    - `triggerConsumer` is called within a `synchronized(lock)` block, so it's
      not necessary to have an additional synchronized.
    
    - `triggerConsumer` internally calls `releaseListenersAndCloseContext`, so
      it's not necessary to explicitly call this within `setBucketFailure`

commit cf1880ccf1e3030979a842098a94cc3293884e3d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 17 09:41:00 2017 +0100

    Fix pageResultListener leak
    
    A PageDownstreamContext that is being killed may still receive
    `setBucket` calls because the context is still accessible until the kill
    operation is completed.
    
    The response listeners that happened between this "kill already in
    progress" and "context is removed" window where never released.

commit 957c03162cac026bb179051c0ca4ceb03a928af5
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Mar 16 15:18:53 2017 +0100

    changes log level to trace if failure forwarding fails

commit 033bc1d673f86a4a3142a98fa8e783afecafc6bb
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Mar 16 14:51:28 2017 +0100

    fixes flaky GeoJSONUtil test by not randomizing it
    
    Otherwise the default locale changes randomly and will break expected
    results. Geometry uses DecimalFormat at its toString methods which uses
    always the current set locale.
    
    Follow up commit of 71640ee7f5aa956f9c49d21150357246082627d3.

commit 5d1a31c47e32dff6b14b5d6a402126106e751f48
Author: meriamk <meriam.kharbat@gmail.com>
Date:   Thu Mar 16 14:54:22 2017 +0100

    update admin-ui to 1.2.0

commit c445b2805e7af8a3766de34829647c35a4190a4e
Author: meriamk <meriam.kharbat@gmail.com>
Date:   Thu Mar 16 13:27:09 2017 +0100

    update admin-ui to 1.1.2

commit 84d78df451b3dbee0a8ff3f9b2f38ca27f3e3fed
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 16 11:41:39 2017 +0100

    Fix masterNode check in DefaultTemplateService
    
    `isMasterNode` is true if a node is eligible to become master, it
    doesn't indicate if it's the *current* master.

commit 9c0cacf628b1aa9be51af5759f9377229dd15135
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 15 20:45:30 2017 +0100

    Replace last remaining junit benchmarks with JMH benchmarks

commit 57ffcc72f90718cf71dab59c824e978c1cc96afb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 16 10:11:40 2017 +0100

    Testing: Close BatchIterator in contract tests
    
    Not closing the iterator could lead to errors.
    For example FileReadingIteratorTest sometimes failed on Windows with
    something like:
    
        FileReadingIteratorTest_A299E205C4E301C9-001\tempFile-001.tmp: The
        process cannot access the file because it is being used by another
        process.

commit 0d65fc7882fd9e52fa9a57ab48dd4ac056e01292
Author: Andrei Dan <andrei.dan@crate.io>
Date:   Thu Mar 16 08:41:26 2017 +0000

    Create OrderedLuceneBatchIterator benchmark
    
    Create a new instance of iterator with every benchmark (to be consistent across benchmarks)
    
    Fix method name typo
    
    Measure RowsBatchIterator in millis

commit ec811131f8ec525352219fd24374e2961db48ea3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 15 23:06:51 2017 +0100

    Fix concurrency issue in MultiConsumer
    
    accept wasn't really thread-safe before.
    For example:
    
                    t1       |            t2
                             |
        remaining becomes 1  |
        if (failure)         |   remaining becomes 0
                             |   synchronized (iterators) {
                             |      iterators[idx] = ...
                             |   }
                             |   remaining == 0 - trigger delegate
                             |   but iterator of t1 is not set

commit a8213b64250496b9a6d1b1fe64f2efa29cc0f193
Author: Andrei Dan <andrei.dan@crate.io>
Date:   Wed Mar 15 11:05:26 2017 +0000

    Use ints to generete Rows range (to uniformly test agains integers)

commit 99e752d1fef6d833386b337bad1c57b53f8210d9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 15 13:24:12 2017 +0100

    Fix NPE in error Listenable-BatchConsumer/BatchIterator

commit 42b20e52e5a32220ad51596e94d415753ee2d915
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 15 12:15:10 2017 +0100

    Fix NPE due to MultiConsumer failure handling
    
    If the first `accept` call didn't receive a BatchIterator but a failure
    this led to a NPE in the CompositeColumns constructor as the first
    iterator is used to retrieve the number of columns.
    
    The CompositeBatchIterators are generally not expecting nulled
    iterators, so this changes the MultiConsumer to not create a
    CompositeBatchIterator if there was a failure.

commit 1e37214180f181d528cc318876a92ae0b9470c72
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 15 10:03:29 2017 +0100

    Add package-info file to dex/io.crate.data

commit 48d23ce38fbb242cdb973e7118872c34b2cf5aff
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 14 22:00:48 2017 +0100

    Re-add deleted projector tests

commit 37f0a55feb917610b6ca08c1bfb66c7ddfca5496
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 14 21:35:49 2017 +0100

    Merge Projector with BatchIteratorProjector

commit 9b1d604e3b1f7c6111befe50d820fe6b36d1aba6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 14 16:50:53 2017 +0100

    Remove RowReceiver

commit 3121af0d97fc91119752e7ae87d269c3d18292e8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 14 15:54:51 2017 +0100

    ContextPreparer: Replace RowReceiver with BatchConsumer

commit 644d97928674c61945879ad65699bb91603c1139
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 14 14:49:32 2017 +0100

    JobCollectContext: Replace RowReceiver with BatchConsumer

commit 1d202b4d887bed5ceb38ae5730514e7750fce075
Author: Andrei Dan <andrei.dan@crate.io>
Date:   Tue Mar 14 15:11:10 2017 +0000

    Drop GroupingProjector benchmark and add GroupingCollector benchmarks

commit 0a6a65d964879db19ce9b6c0767529370ef77299
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 14 11:46:23 2017 +0100

    Make BatchIterator killable
    
    Initially we'd planned to create a "KillableRegistry" in order to avoid
    having to implement kill on each BatchIterator or BatchConsumer
    implementation. But currently adding a KillableRegistry would involve a
    lot of work which is not practical as we're still in the migration from
    RowReceiver from BatchIterator.
    
    This changes BatchIterator to extend Killable as a programatic solution
    which we may revisit later on.
    
    Since BatchIterator is mostly a passiv component (except loadNextBatch),
    kill won't actively do anything. Instead it causes further `moveNext()`
    calls to fail.
    This means for BatchConsumers it just looks like a regular failure -
    from their perspective kill is no different to a regular error.

commit d0c80716942e81ff5351d2176ac5e56da8822b86
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 14 09:37:06 2017 +0100

    Replace downstreamRequirements with requiresScroll

commit f2284d62fbed850e64e51ba2c7c8b6c25953f44f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 14 09:05:40 2017 +0100

    Change Tasks to use a BatchConsumer instead of RowReceiver

commit 1750e1ee0b66f8caa230f429658a9197db366b6c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 14 08:52:33 2017 +0100

    ESGetTask: Replace RowReceiver with BatchConsumer

commit 3762e5095486187d38d97c16fb6a6c48d905baf2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 14 11:58:36 2017 +0100

    Tweak BatchIteratorTester API to improve readability

commit b58e901d699ad30d6e1086a9a8e625009b5c0aed
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 13 17:51:17 2017 +0100

    Integrate AsyncCompositeBatchIterator into ShardCollectSource

commit e0f10ba0b3deeca526f18e0dbc05d9d775ae8e6f
Author: Andrei Dan <andrei.dan@crate.io>
Date:   Thu Mar 9 15:28:38 2017 +0000

    Create AsyncCompositeBatchIterator and use it in ShardCollectSource instead of the MultiUpstreamRowReceiver

commit b8aabbfe0320960c23d5013b3b3001fdba128756
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 13 17:56:02 2017 +0100

    Add and integrate a ProjectingConsumer
    
    `ProjectingBatchConsumer` is a consumer which applys projections on the
    BatchIterator it receives. It should eventually replace all
    `ProjectorChain` usages.

commit 2d1fc9ed43ec567a05086803e9676eaeff4c605b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 22 15:08:39 2017 +0100

    Add DistributingDownstream BatchConsumer implementation

commit 62c1dcbbd99f4588687180d972b6d20c849e8a44
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 9 18:14:57 2017 +0100

    Implement FetchProjector as BatchIterator
    
    This adds a `AsyncOperationBatchIterator` and a `BatchAccumulator`.
    
    The `BatchAccumulator` is a component that can be used for bulk-style
    operations that involve network I/O.
    
    The `AsyncOperationBatchIterator` is a BatchIterator implementation
    which uses another source `BatchIterator` and a `BatchAccumulator` to
    generate the data it exposes.

commit 6651efaa6df15a7b39c3d35a4732b3373ed56750
Author: Andrei Dan <andrei.dan@crate.io>
Date:   Sat Mar 11 12:54:26 2017 +0000

    Convert DMLProjector to BatchIteratorProjector (by sharing IndexWriterCountBatchIterator)

commit b5cfa5b861c961ab54919a935ad02a43d09ec6c6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 8 13:59:42 2017 +0100

    Add BatchIteratorProjector implementation to SysUpdateProjector

commit ec0bf4d7c64cb0cd2c86b3aa1aa9e27fa115d0c9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 8 11:10:19 2017 +0100

    Change CountContext to use a BatchConsumer instead of RowReceiver

commit 7e651319e9777e90ed24c0d1cc6521c0585829b3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 7 15:05:31 2017 +0100

    Optimize LuceneBatchIterator
    
    Seems like private functions (invokespecial vs invokevirtual) and
    dead-code elimination works better than hiding the logic in a
    specialized predicate/ondoc lambda implementation
    
    from
    
        343.276 ±(99.9%) 9.036 ms/op [Average]
    
    to
    
        326.965 ±(99.9%) 6.435 ms/op [Average]

commit 72de2ebe6da2be00d0a9ab6c579fb9da174c443e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 7 12:08:01 2017 +0100

    Remove unused Columns implementations

commit 744b6fac9f740f5b7af50be9474c0f29dc63f7ff
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 7 10:41:36 2017 +0100

    Move inner classes from NestedLoopBatchIterator to upper level

commit 4e6bae78ec092f096cf67e44ae74b516265edebb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 6 15:24:33 2017 +0100

    NL: Replace BitSet with LuceneLongBitSetWrapper

commit cf6ac88dd6cf7f45d96fb3bd50a89be321545392
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 2 17:12:01 2017 +0100

    Integrate NestedLoopBatchIterator into NestedLoopOperation

commit e3601df1073ed1d7e97fb7b1c7321633f85e50e2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 2 14:44:25 2017 +0100

    Add some docs to NestedLoopBatchIterator

commit 65c3f53bb48e809aaebb89d731a33dff35746d0b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 2 14:33:44 2017 +0100

    Add NestedLoopBatchIterator benchmarks

commit e1aa0f2580aea6e3203faa1d532d04708ee6c2e1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 2 13:45:39 2017 +0100

    Add full-outer-join implementation to NestedLoopBatchIterator

commit 7a499b57d77ed0a51cab80a0fa28b0cead5d9d9e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 2 11:24:20 2017 +0100

    Add right join implementation to NestedLoopBatchIterator

commit 575b8d55c82de45cff1887e6218d8012c40271f1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 1 16:17:22 2017 +0100

    Add leftJoin implementation to NestedLoopBatchIterator

commit 6454ae3ca1cc1012523f82b7774274c2497fe7d1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 1 15:27:59 2017 +0100

    Add NestedLoopBatchIterator

commit 738a704d0d26a7d7e1d73c83473c7ffe891b16f3
Author: Andrei Dan <andrei.dan@crate.io>
Date:   Mon Mar 6 15:39:27 2017 +0000

    ColumnIndexWriterProjector converted to batch iterator
    Squashed commit of the following:
    
    commit 4bc6a1f937ac284f7d590cb3fe443733d43442b2
    Author: Andrei Dan <andrei.dan@crate.io>
    Date:   Mon Mar 6 15:07:50 2017 +0000
    
        Fix merge conflict
    
    commit c5c1d919fb491e7a4c00aa5bbb546917d53c3540
    Author: Andrei Dan <andrei.dan@crate.io>
    Date:   Fri Mar 3 16:15:33 2017 +0000
    
        ColumnIndexWriterProjector uses the IndexWriterCountBatchIterator
    
    commit 035174de35fe18b0c4416ae14c963a9e899c1165
    Author: Andrei Dan <andrei.dan@crate.io>
    Date:   Fri Mar 3 16:14:51 2017 +0000
    
        IndexWriterCountBatchIterator gets the update item via a Supplier

commit b10528152c2bdd1c615904523c4f66684b9dfdab
Author: Andrei Dan <andrei.dan@crate.io>
Date:   Wed Mar 1 16:46:51 2017 +0000

    Renamed WriterProjector to FileWriterProjector and converted it to BatchIterator
    
    Use a different source with every new BatchIterator instance
    
    Drop unused code
    
    Obey the iterator contract (if loading is in progress, allLoaded returns true)
    
    Migrated FileWriterIterator to be a Collector
    
    Use long[] instead of AtomicLong
    
    Stop using SingleColumnBatchIterator in tests

commit 2165b7dd80c34c9ea3a6689ec3b6f44f8e9f35a1
Author: Andrei Dan <andrei.dan@crate.io>
Date:   Mon Mar 6 13:29:12 2017 +0000

    Complete future after the counter is incremented (so isFinished is deterministic)

commit 9abaff1811964dd6d73fe3a833068b934f1c4889
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 3 17:13:07 2017 +0100

    Replace SingleColumnBatchIterator with RowsBatchIterator
    
    The `SingleColumnBatchIterator` was only used in tests.
    
    Using `RowsBatchIterator` has the advantage that tests use a BatchIterator
    which is also used in production code. This brings unit-tests closer to
    the behaviour of queries on system tables.
    
    In addition, the `RowsBatchIterator` is more conservative regarding the
    behaviour of the rowData if positioned off-row. `value` calls on the
    inputs will cause an exception instead of returning null.
    
    Although we didn't define the behaviour of the columns-inputs in the
    interface description, a component used in testing should be defensive
    to prevent creating implementations that depend on some undefined
    behaviour.

commit 7595b46d82c4b03512cd1fd9741baa5159a071c8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 3 11:55:45 2017 +0100

    Remove IterableControlledBatchIterator
    
    It was only used for empty & single-row cases.
    Both cases in which the existing RowsBatchIterator can be used.
    
    The `Row` interface will be there for a while longer. Especially in the
    system table case it's unlikely that we'll utilize the new `Columns`
    interface any time soon.
    
    This commit also changes the RowBridging pattern a bit - slightly
    improving performance:
    
        measureConsumeBatchIterator: 3.149 ± 0.007 → 2.668 ± 0.022  ns/op

commit a5f24296777d93f7299711fb6be7f770342940a2
Author: Andrei Dan <andrei.dan@crate.io>
Date:   Thu Mar 2 12:25:15 2017 +0000

    Log if we cannot close the BufferedReader

commit 81686840bd646dd9fd470a6863a7990920ab0aff
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Mar 2 09:54:18 2017 +0100

    introduce BatchIteratorProjector interface

commit 604046a4d61982490d519046feb671b5bf091ed5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 1 12:13:18 2017 +0100

    Add and integrate a CompositeBatchIterator

commit 9d9f42d690540d8e7a0a799e16710df46ada5457
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 27 15:19:39 2017 +0100

    PageDownstreamContext: Replace RowReceiver with a BatchConsumer

commit d70f21c7dfdcf4389cb8b71af18f571a0fcad013
Author: Andrei Dan <andrei.dan@crate.io>
Date:   Mon Feb 27 13:43:09 2017 +0000

    NodeStatsCollector is a BatchIterator

commit f68f25d29adc73a1720a2202f15a725298d0b8d9
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 27 17:24:47 2017 +0100

    moved OFF_ROW to RowBridging since it is only used for stuff that is row backed

commit 9c9133f1e81f0fe6b64ea01bf6f7e238d05b3da3
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 21 23:06:58 2017 +0100

    BatchIterator now exposes its data via a Columns objects which is available
    throughout the whole lifetime of the iterator.
    
    This makes it more obvious that the inputs are only accessors and also
    allows to get the number of columns of an iterator before consuming any data.

commit 02d908aef860c34958324a1ed266df9ea233d1a0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 27 12:57:23 2017 +0100

    Fix SingleBucketConsumer to close BatchIterator

commit ee575e511d0415bfefd7b3e822e26c0cc7857b37
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 24 14:04:29 2017 +0100

    Replace MultiShardScoreDocCollector with a OrderedLuceneBatchIterator

commit 30ae344ba11bbbb359baa3ab64ee8b29f720ab45
Author: Andrei Dan <andrei.dan@crate.io>
Date:   Wed Feb 22 13:24:33 2017 +0000

    IndexWriterProjector adapted to Iterator
    
    Format code in test
    
    fixup! add comment on how the loading future completes
    
    fixup! drop empty line
    
    fixup! Document IndexWriterBatchCountIterator
    
    fixup! Don't join loading future

commit 6014a68976a0c36e5d718323ddf7f92b4ea91957
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 22 17:47:52 2017 +0100

    Implement batchIteratorProjection in SortingProjector

commit 06d0678ff256f77e35a3fed27cc1d44954f12ecd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 22 17:14:06 2017 +0100

    Add and integrate SortingTopNCollector

commit 9d4a298f564a26a22281f49063e221000aa1a864
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 22 15:24:54 2017 +0100

    Change RowsCollector to utilize BatchIterator
    
    This also removes `testRepeatEmitsRowsInTheSameOrder` without
    replacement because:
    
     a) It fails due to the BatchIterator being closed after the first
        consumption (that's the correct behaviour).
     b) We'll remove the CompositeCollector soon anyway

commit 2da624eb031fc1479e818821807b40506ed4bfba
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 21 16:54:04 2017 +0100

    Add a BatchConsumer SingleBucketBuilder implementation

commit c9cdf4e8e8674d22abcc9ec3f6ebbe339d867930
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 22 10:54:23 2017 +0100

    Add and integrate a GroupingCollector

commit 66742f5c9f34d8c053b48fed03722715203b2afe
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 21 11:42:12 2017 +0100

    Add a CollectingBatchIterator

commit 5a58d620f3f938aa36721019803bf82411f14fc9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 21 15:32:08 2017 +0100

    Integrate existing BatchIterator projections into PageDownstreamContext

commit 818cd655a47eeb2e7fedf05ed14c4c9ac7f0efac
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 21 14:44:42 2017 +0100

    Add a RowTransformingBatchIterator

commit c5ac4995f1712f9bb502af3acc0584122a98afd6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 21 11:14:16 2017 +0100

    Add a benchmark for LuceneBatchIterator

commit 9923e9242eb1e37c6d3b00d8121b8e92f40d5b5f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 20 14:39:17 2017 +0100

    Replace CrateDocCollector with a LuceneBatchIterator

commit b84b04ce51bf92f5f25596bdbc2d770160fee70d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 20 15:05:20 2017 +0100

    Add a FilteringBatchIterator

commit 685467d790042b455860a59c83a30b3af31d6553
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 20 14:51:22 2017 +0100

    Add a ForwardingBatchIterator impl and use it in SkippingBatchIterator

commit 54f7205ca02f939d169f6b31d650888be208e702
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 20 12:26:40 2017 +0100

    Integrate Limiting/Skipping BatchIterator

commit c434aac233afbd01fbdea956a6c4dde5da203443
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 20 11:30:50 2017 +0100

    Add SkippingBatchIterator

commit a8f89848a81210e292a8691701cff726e9512154
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 20 11:09:54 2017 +0100

    Add LimitingBatchIterator

commit ee29cac692ded9ae6430c4ad7d1911b33485a7de
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 17 13:23:00 2017 +0100

    Integrate BatchIterator/Consumer into PageDownstreamContext

commit 654fa8b7a4146db32176337482bbef81fbe847f4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 17 17:06:04 2017 +0100

    Change BatchIteratorCollector.kill to not abuse close for killing

commit 0d2164357b06d394dc9003cea327e50c9d392b53
Author: Andrei Dan <andrei.dan@crate.io>
Date:   Fri Feb 17 12:57:14 2017 +0000

    FileReadingCollector implements BatchCursor

commit 1e33966eb42f08f5f75298d43f1773a0ecb991f4
Author: Andrei Dan <andrei.dan@crate.io>
Date:   Fri Feb 17 12:56:41 2017 +0000

    Rethrow as exceptions as unchecked maintaining the stacktrace

commit 67d9e2916ffa28747ffd777d126a0ed119879e72
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 16 16:00:16 2017 +0100

    Add a BatchSimulatingBatchIterator
    
    This can be used in tests to verify that consumers behave correctly if a
    BatchIterator is batched.

commit 993834b867f43295a455bba44d0bb320caa974c7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 14 17:02:38 2017 +0100

    Add BatchIterator / Consumer and sample implementation
    
    This commit adds a new interface to enable pull-based consumption of
    data/rows.
    The sample implementation is integrated for queries on system tables by
    using a RowReceiver adapter.

commit c1bdbac46db99d0e68442065ed01f758dd24b782
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Mar 15 15:58:54 2017 +0100

    bundles ‘dex’ & ‘shared’ modules into app jar

commit 7c1a2788715877113d5999bfe239e4d5ecda5d98
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Mar 15 15:32:47 2017 +0100

    updated changes according to release 1.0.5

commit f426caf18e512155958eb5d632f5445336830a5c
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Mar 15 13:59:30 2017 +0100

    Change order of syschecks, the latter will be removed
    in future CrateDB version with ES 5.

commit ab05ec31b2cb3ed527e879a23dbbc6c45efc5b49
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Mar 15 18:30:56 2017 +0700

    updated crate-docs-theme

commit 408c6a117d555b3782dfd2db6891f5e8fbe49efb
Author: Michael Beer <michael@crate.io>
Date:   Wed Mar 15 09:51:44 2017 +0100

    Removed path to sigar lib in crate.bat for Windows

commit 71640ee7f5aa956f9c49d21150357246082627d3
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Mar 15 09:36:22 2017 +0100

    fixes wkt<->map roundtrip test

commit b78543a829653be3d09c2de22c18b322058ef521
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Mar 14 14:22:01 2017 +0100

    Use a cleaner way to build new index settings for
    each partition in case of a Bulk request.
    
    This is a followup commit to e36a88f4f614aee61a8827a085d268847b87446a

commit d5bdee20ceea7c1134d0a0e653a93d9d75baf54e
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Mar 14 15:12:47 2017 +0100

    Set new UUID for each index and its shards which belong
    to a partition table because of a bug that caused
    those indexes to share the same UUID when created with
    a bulk insert.

commit e36a88f4f614aee61a8827a085d268847b87446a
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Mar 14 12:36:58 2017 +0100

    Fixed issue that indexes created for partitions
    with a bulk insert share the same UUID.

commit 85f452aa9c44f89da8a73fbd3a31026949cc9703
Author: meriamk <meriam.kharbat@gmail.com>
Date:   Fri Mar 10 14:50:48 2017 +0000

    fix rewriteable subselect fail if camelcase alias used

commit 5fa1984a784246afd372c989fb1bf399762358b7
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 13 16:43:43 2017 +0100

    fix itest testing that insert statements do not share a state
    
    ensure that all 4 statements are executed concurrently by taking
    thread pool size into account

commit 23745e0cc627947f75db1d4bd634f8a4752f38ee
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 13 15:27:00 2017 +0100

    InitializationTracker: Replace SettableFuture with CompletableFuture

commit 38f6ad85ba04b11a4f2c8c2c0fa0b00d47953ed6
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Mar 8 00:50:32 2017 +0100

    Added new column `version` to information_schema
    tables & table_partitions.
    
    Added integration tests for new column `version`.

commit 7b81f55445ca7bfc28819b7733842a8239fd7b30
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Mar 7 16:51:44 2017 +0100

    Writes and reads crate versions to index metadata

commit 172d8847ddeea32f1e53777dbcbaca345ca526c8
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Mar 7 20:15:49 2017 +0100

    Added `routing_hash_function` column to information_schema
    tables & table_partitions.
    
    Added integration tests for `routing_hash_function`.

commit 1ceb91131746fa00c6399e8f161ff8b7f6c26951
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 6 23:21:47 2017 +0100

    sets the default routing hash function type on new table creation
    
    value is saved persistent at the index meta data mapping

commit c885466ee3abfa3c8d87b4f162d7a20f68c80138
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 6 22:30:43 2017 +0100

    adds custom upgrade service to save concrete routing hash function

commit be0f464c518f9f75d46da963c4a5312775009fa4
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Mar 10 15:44:22 2017 +0100

    removes commented/disabled information_schema indices test

commit 31c2620a63dbf79336285cd8197be982278aa7a5
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Mar 10 15:42:41 2017 +0100

    return NULL for ordinals of sub-columns at the information_schema.columns
    
    as the order of sub-columns is not guaranteed

commit bd4dba27cb6c1cdb659698dd37ce2bcf3f5c03e7
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Mar 8 14:02:31 2017 +0100

    fixed race condition in concurrent template update of partitioned table
    
    the race condition could have caused that not all columns were written to the
    metadata when a lot of new dynamic columns were generated concurrently on a
    partitioned table.

commit bedf398f806c892eace9551b3b21ea906954c1ff
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 7 17:23:56 2017 +0100

    Replace iterator based loop with index loop
    
    This exposes expressions as List instead of Collection to allow using a
    index-based loop to avoid Iterator allocations.

commit 76a4232688a816d6598fee476d07be88fa0b251d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 9 14:13:32 2017 +0100

    Add javadocs to Scalar

commit f1c0595b2dbe485a6626231f98603782a1bbff48
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 8 15:08:29 2017 +0100

    Rename docId to fetchId and add a FetchId class
    
    The term `docId` was used for two different things. This renames one
    usage to `fetchId` to avoid confusion.

commit 291e00314ae692918a8882d505e507823847113f
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Mar 8 13:13:36 2017 +0100

    Add reference from cluster check to segments upgrade

commit e08feb773f120d154deda7f4d730703cf5798837
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Mar 7 16:22:13 2017 +0100

    Fixed check if table recration is required by using
    ES version instead of Lucene version.

commit ec83907b73db0cf10b3c5b9df9ff164da51afc57
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 7 11:26:39 2017 +0100

    Change ColumnsIterable to be materializable (fix join bug)
    
    If `information_schema.columns` was used on the right side of a join all
    elements contained the values of the last columns because
    `ImmutableList.copy(iterable)` is used on the callsite and the
    ColumnContext iterable used a shared ColumnContext object.
    
    This commit fixes the Iterable to properly implement the Iterable
    interface.

commit d63548be18153991d7cd9fe99a4801fc1aa08ddd
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Mar 2 10:54:37 2017 +0100

    documentation: default sizes of threadpools

commit 83be85343fbf7f476e7db73cf7710f6d81ba9d2d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 6 12:50:30 2017 +0100

    Fix arrayOrdering optimization
    
    (to avoid compound ordering creation if it's not necessary)

commit 996f23234703a705fd70f53bec42c0dfc20abada
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Mar 3 12:06:49 2017 +0100

    fixes correct releasing of upstream listeners at the PageDownstreamContext
    
    this is a follow up commit of https://github.com/crate/crate/commit/e10dd17445c8b8e8a3c62438727f428651e8b434,
    it will avoids memory leaking of still allocated but never released downstream requests.
    removes the before added changes entry because the issue was introduced
    on master only due to https://github.com/crate/crate/commit/d608c3eff7cfe1c91c6d07cf026c2f2a91fe0953

commit 844a4b0895626fa82c44121fc04d7b10dc6be7c5
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Mar 3 12:08:14 2017 +0100

    Fixed query to exclude tables that require recreation
    from the ones that require upgrade.
    
    Follow up commit of da9a66e918b57c487d56a6ec3ae6bbed60b7db93

commit 60f048fe918fae297578283cbfda01b9d6eeb0e9
Author: meriamk <meriam.kharbat@gmail.com>
Date:   Wed Mar 1 16:21:26 2017 +0100

    restructure docs

commit da9a66e918b57c487d56a6ec3ae6bbed60b7db93
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Feb 28 16:17:54 2017 +0100

    Implemented cluster checks to warn for tables that need to be recreated
    or upgraded to be able to be used with future versions of CrateDB.

commit ec6666d3c8e3142a2982963c954e29a608305f9f
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Mar 1 19:53:29 2017 +0100

    Implement async collect of sys tables iterables

commit ee4011c781bc370de685847c356a7f1ab7232da4
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Mar 2 20:46:12 2017 +0100

    Extract functionality of internal SQL execution

commit 644bf1c0e6f7cc74bbc20ef795783eb3e6c1fd57
Author: kovrus <ruslan@crate.io>
Date:   Sun Feb 19 20:17:25 2017 +0100

    added functionality to monitor query runtime statistics via JMX

commit e10dd17445c8b8e8a3c62438727f428651e8b434
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Feb 28 15:35:04 2017 +0100

    fixes page downstream context failure handling
    
    listeners of successful upstreams were not called
    and so no response was sent if an upstream failed

commit 2b30ca3fefdd9cace09da928b209e4a1e0f81aac
Author: kovrus <ruslan@crate.io>
Date:   Wed Mar 1 10:36:41 2017 +0100

    remove unused parser code
    
    window, windowframe, frameboud are not used

commit 5826e436057bc16cbf765b0642422ab953ca419f
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon Feb 27 23:06:46 2017 +0100

    remove AUTHORS.rst

commit 1eac895ffcb57b6d190989803bf2cfa1dac39d86
Author: kovrus <ruslan@crate.io>
Date:   Fri Feb 24 10:44:24 2017 +0100

    add missing setting appliers to some of crate settings
    
    Settings appliers were not registered for udc and license settings.
    It has prevented the validation of those settings upon the node start-up.

commit 31148fdabd30d1390d6bfdead58c28c1a72f97ca
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Feb 24 16:21:06 2017 +0100

    Implement new parameter `upgrade_segments` for `OPTIMIZE` statement.

commit 0869c8ac14f92dbe5713158e96274924cd5a9c14
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 27 13:51:26 2017 +0100

    Tests: Improve assertion to include more information
    
    `testCloseConnectionWithUnfinishedResultSetDoesNotLeaveAnyPendingOperations`
    seems to be flaky.
    
    Couldn't reproduce it locally, so this commit extends the assertion a
    bit so that there is more information in case of a failure.

commit cf5b3507ba04b45639ac0655072fc4d1230e88f0
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Feb 27 11:44:14 2017 +0100

    Fix min_lucene_version column of sys.shards to return
    the current Lucene version when no segments (data) exist.

commit 201220f3e3b32892fdf4c0454111c8a2bbe9188d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 23 00:09:44 2017 +0100

    Remove unused declarations

commit c15616f7909fc4b8a00673652fb1926296fe193e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 22 23:50:56 2017 +0100

    GetTask: Replace FieldExtractor with Input/Expression/RefResolver
    
    The FieldExtractor interface und surrounding utilities have similar
    semantics to the Input/Expression pattern we use elsewhere.
    
    This removes the FieldExtractor from the ESGetTask to eventually get rid
    of the FieldExtractor altogether.

commit b214ee8024ab96cdd71b49bfb7da4066efe07ad7
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Feb 24 11:15:30 2017 +0100

    Added new column  to sys.shards

commit 0dd9267e11c87e98e685dbb3611fcdec1b39cc59
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Feb 24 15:23:35 2017 +0100

    Remove restriction for optimizing blob tables
    since they also consist of Lucene segments and
    can be optimized by force merging them.

commit 8093fb7181b8df8f784a9d0d760fb286c1a0f29e
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Feb 24 18:27:31 2017 +0700

    reflect changes after 1.0.4 release

commit b755a6f9feaa74a46ae2c0b9f5b1ec4ae990406e
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Feb 23 23:06:03 2017 +0100

    Moved the Input interface to the dex module.
    
    This is an automatic idea refactoring without any manual changes.
    It will be required in the dex module for the batch based data processing.

commit e4e534354da779a452480fa7b2b5c6a9c3461bb9
Author: kovrus <ruslan@crate.io>
Date:   Fri Feb 17 13:44:38 2017 +0100

    update documentation for gen. columns

commit 2fc940ffaec4a941e518acb6a54e35b612c53918
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 23 13:50:50 2017 +0100

    tests: Rewrite testFailingUpdateBulkOperation to avoid flakyness
    
    Test no longer depends on the operation failing due to a overflowing
    threadpool (RejectedExecution) but instead uses a query which causes a
    failure.

commit 4b921706d8c63336fec4203911711314d78f6f95
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 22 15:28:27 2017 +0100

    Unwrap CompletionException before transport serialization
    
    CompletableFuture exceptions are wrapped in a CompletionException which
    cannot be serialization - it'll be wrapped in a
    NotSerializableExceptionWrapper which causes logic checking the
    exception type to fail.

commit 7bfe87276b08503dce2a319bf0653eb555c8bac9
Author: kovrus <ruslan@crate.io>
Date:   Mon Feb 13 17:55:50 2017 +0100

    add the ``enterprise`` parameter to the udc ping

commit 3da6bb4adb33d0846ecaa943e3f6524b1e465cb0
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Feb 15 22:54:03 2017 +0700

    When one restored a single table from a snapshot,
    crate attempted to restore the table as a normal
    table and also as a partitioned table, because
    crate didn’t determine if the table is partitioned
    or not.
    
    This caused an error if the table was partitioned
    as the attempt to restore it as a normal table failed.
    
    Fixed this behaviour by reading the snapshot to
    determine if the table is partitioned or not.

commit 066629c32da236e8a0ed1e33ac085e391a81d007
Author: kovrus <ruslan@crate.io>
Date:   Tue Feb 14 14:07:23 2017 +0100

    add the ``license.entreprise`` column to the ``sys.cluster`` table

commit d417f6be2e2945ea7286b0960e55cb4a32527596
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Tue Feb 21 20:12:58 2017 +0100

    update docs for removal of multicast

commit 161904964b9b7cea595eb390a243f50bc489d5f4
Author: kovrus <ruslan@crate.io>
Date:   Tue Feb 21 10:54:15 2017 +0100

    fix low/high disk watermark checks
    
    updating the values of `cluster.routing.allocation.disk.watermark.low/high`
    were not reflected in the disk watermark checks.

commit 51f5d41a23da133e4a9bdbc5ac1c41a6238b8dee
Author: kovrus <ruslan@crate.io>
Date:   Tue Feb 21 13:41:28 2017 +0100

    use correct setting applier for disk watermark settings

commit 690fe1a3e1f55728743a032c23b760cdfed7ff45
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Feb 21 16:26:41 2017 +0100

    fixes flakyness of testInsertBulkDifferentTypesResultsInStreamingFailure

commit 02074b8d0727dc8fe8fd773cdb8577d07084a15a
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Feb 21 16:26:19 2017 +0100

    Revert "Add NotSerializableExceptionWrapper to exceptions to unwrap"
    
    This reverts commit 3eb3a9bdb740a3c9a68ceb1726c863eb633bbc13.

commit 1c039a14da06294c54195b1a7f3042e34eefed4c
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 21 10:54:31 2017 +0100

    updates on sys tables are now also done via an _id based lookup, like in user tables
    
    sys.node_checks table now includes the node_id in the pk, which is actually
    needed to make it unique
    
    moved all node specific stuff in sys checks to the .node package
    
    it is now possible to use references as assignment values in sys table updates

commit 0a7dcf76e7bdb7a917457786fc6b0d22eebf391a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 21 13:49:28 2017 +0100

    Set maxRows to 0 for DML operations
    
    Setting maxRows to 1 causes `RowReceiverToResultReceiver` to return
    PAUSE on the first row.
    This isn't currently an issue in master because all components that emit
    one row ignore the `setNextRow` result but it's a problem in the
    `batch-iterator` branch.

commit d82533f3629e92cf54c987a08e3a35f9a648814c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 20 17:57:39 2017 +0100

    Remove unused ForwardingRowReceiver

commit 33c0a4384c84ddd83312adc3fd28e76c50a177f8
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon Feb 20 16:32:57 2017 +0100

    bump docs theme version number

commit 155174df816579d636e91fceb897e9d3adf83370
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 20 15:11:06 2017 +0100

    Migrate rowFilter from guava to java8

commit 18b217df664693248399defee20d4ff734c0144e
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sun Feb 19 08:39:53 2017 +0100

    use _id instead of _uid expression in dml projector to prevent unneeded
    string copying in dml projectors

commit e8dffd4bb7175b08cfcb6a0aceefae1eeb36e1c8
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 13 12:10:07 2017 +0100

    changed the signature matching in FunctionResolver and moved the
    responsibility to normalize the data types to the getSignature method
    
    this allows to have more control over how to normalize arguments
    and also saves comparisons and roundtrips when resolving functions
    
    the requirement to create types just for matching signatures is also gone
    and is replaced by argument matchers

commit 98cee5d39bce8f74c7b266a9ee4900a21db394e4
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Fri Jan 27 17:24:06 2017 +0100

    aggregation docs improvement

commit 191e52362af9525e9b86b6035e0c9760456aa491
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Feb 17 13:46:50 2017 +0100

    fixed NodeSettings test
    
    so it does not leave any resources left on disk
    
    the problem was that the default config on this test pointed the data
    directory to /tmp/data which then was never removed

commit 3eb3a9bdb740a3c9a68ceb1726c863eb633bbc13
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 17 10:41:37 2017 +0100

    Add NotSerializableExceptionWrapper to exceptions to unwrap
    
    If a `ShardNotFoundException` was wrapped into a
    `NotSerializableExceptionWrapper` it didn't recognize it as
    shard-failure and therefore the "retry-on-shard-failure" logic didn't
    trigger.
    
    This could cause tests like `testFetchPartitionedTable` to fail because
    there is no additional `ensureYellow` guard to prevent shard failures.
    (This happened very rarely).

commit d315ec362211a35faa532c83eafa96c4db298c9d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 9 16:52:21 2017 +0100

    Prevent repeated finish calls in SetSessionTask
    
    `finish` was called per setting. That's a violation of the RowReceiver
    contract.

commit a28cf4b81b8d9251ad1510cbbaa56be6838f0f33
Author: kovrus <ruslan@crate.io>
Date:   Wed Feb 15 14:36:07 2017 +0100

    validate crate settings upon startup

commit 1b240792f85c4065caadb55100c855d46e98d6bb
Author: kovrus <ruslan@crate.io>
Date:   Wed Feb 15 16:32:38 2017 +0100

    optimize gen. columns evaluation logic
    
    micro optimization which prevents from not required
    iteration over generated columns.

commit 2f9e75f2c1ab9ddd3f393796424ed3793d1343c4
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Feb 15 13:07:27 2017 +0100

    correctly populate index columns with values from string arrays

commit ddd946b653396a35c607cddf56479f75eefb6130
Author: meriamk <meriam.kharbat@gmail.com>
Date:   Wed Feb 15 14:33:05 2017 +0100

    updated admin-ui to 1.1.1

commit 98d8ce6adb2e04c739a4ffd2ec9bfb01d0123e52
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 15 12:21:13 2017 +0100

    Move some collections classes from core to shared

commit dc5ea643f665fab6a0906269a68e02f8c2af7bb2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 15 12:09:53 2017 +0100

    Add a `shared` module and rename `testing` -> `integration-testing`
    
    The idea is to have a module that can contain common functionality that
    does *NOT* depend on ES.

commit aff6c8d31e726e6ec67bf26e84cf0c8112051591
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 14 21:45:50 2017 +0100

    Replace Stack with ArrayDeque
    
    Stack has synchronization overhead that's not required in the
    NodeOperationTreeGenerator.

commit b219356b98b83b09131d4f3a91d1214e234956f5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 14 12:03:16 2017 +0100

    Make all RowReceiver's listenable
    
    In order to migrate to a pull-based execution pipeline we'll temporarly
    require a bridge from pull to push (to RowReceiver).
    
    In a pull based architecture a consumer needs to explicitly close its
    upstream to release its resources. A upstream/data-source cannot
    auto-close itself as it doesn't know when a consumer has finished.
    So we'll need to have some kind of `close` method.
    
    To slowly migrate individual components we'll require a
    RowReceiver-bridge. This bridge needs to call `close` after the
    RowReceiver is done. This commit adds a `finishFuture` that can be used
    by the bridge. Otherwise it wouldn't know when a RowReceiver is really
    "done" due to their async nature.
    
    Other rejected approaches:
    
    - Adding `close` to the RepeatHandle.:
    
    This doesn't work for cases where a intermediate failure happens because
    the RepeatHandle won't be available and so a RowReceiver further down
    the chain cannot call close.
    
    - Merge `finish` and `fail` and add a `closeCallback`:
    
    This would work, but is more complicated because all async RowReceivers
    would have to manage additional futures in order to be able to handover
    the `closeCallback` to its downstream.
    
    - Change `finish/fail` to return a Future:
    
    This would also require intermediate futures in async RowReceivers as
    the `finish/fail` calls cannot be called eagerly to pass-through the
    future.

commit d87d028b419857585ed8881bfc0eb2c6f009b4c4
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Feb 14 17:35:49 2017 +0100

    Rename StatsTables & StatsTablesService to
    avoid confusion with TableStats/TableStatsService.

commit e46e22b22bcfff1a6a3ae5b35dd4c1ea6b700377
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 14 12:17:00 2017 +0100

    Migrate SingleBucketBuilder result to CompletableFuture

commit 2c6b62f9e708c3bb2268d083dc6c319945409291
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 13 16:20:22 2017 +0100

    Fail individual results instead of whole bulk operation
    
    This is a cherry-pick of e5dd60a9d1b3b8d0494254ab8d420be086723335 /
    https://github.com/crate/crate/pull/4895
    
    Due to the switch from ListenableFuture to CompletableFuture the
    NPE/getting stuck issue wasn't present in master, but instead of failing
    individual items the whole operation failed.
    
    This commit changes the error handling so that each individual item has
    a failure set (again).
    
    This also matches our documentation of bulk operations better (see
    http/postgres batch behaviour docs).

commit 85ec4196d0cbdb1a25a30c76925c3d2c26fdbdfc
Author: Andrei Dan <andrei.dan@crate.io>
Date:   Mon Feb 13 13:33:15 2017 +0000

    Add postgres mappings for set types

commit 5cc318bfd84fd8a990ad4c4102865480e230a9bf
Author: kovrus <ruslan@crate.io>
Date:   Mon Feb 13 16:52:39 2017 +0100

    recompute values of generated expressions on updates
    
    Generated expressions which don't have references to any columns
    would not recompute their values on update operations. For instance,
    
        CREATE TABLE test (id LONG, ts TIMESTAMP GENERATED ALWAYS AS current_timestamp)
        INSERT INTO test (id) values (1)
        UPDATE TEST SET id = 2
    
    previously, would have the same timestamp value after insert and update
    operations.

commit f43963cc7fedda61b61e0556c77184fd1a675f9e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Feb 11 22:21:38 2017 +0100

    Make LocalSysColReferenceResolver / NodeStatsCollectSource type-safe

commit fa687ad655360bb4106855075e7ddeaa642bb06d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Feb 11 21:54:24 2017 +0100

    Remove NestedReferenceResolver interface

commit abb88b9e8e205ed0c3bfb856e13cc041c75f698c
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Feb 13 14:28:57 2017 +0100

    fixed global aggregates on joins with 3 or more tables

commit c7f96aafa0a0d37e528f63c83cdc6fcd47bdd101
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Feb 12 14:13:29 2017 +0100

    Use prepared statement in TableStatsService

commit 6f7dbed7daae07adc5ed2b710e0a9d9e4aeac809
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Feb 12 14:03:58 2017 +0100

    Remove cyclic TableStatsService/SqlOperations dependency

commit 1e13cedbccba8bcf722a144ea4580e848649b6ad
Author: kovrus <ruslan@crate.io>
Date:   Mon Feb 13 12:06:30 2017 +0100

    remove unnecessary normalization from node stats collect source
    
    This normalization is obsolete, such sys.nodes
    will never contain the ``_node`` column.

commit 9eda6efd6dcb99e5ffa4710e0da534fe46d11cac
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 13 10:51:27 2017 +0100

    docs: Link to occ from `refresh table` docs.
    
    Prompted by https://github.com/crate/crate/issues/4711

commit a79a0a2ef65bd3df6bea6ebece934aa25fb2c287
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Feb 11 18:04:18 2017 +0100

    Declare attributes on ReferenceIdent and TableIdent as final

commit b50b0688964e39fc61609b94a8fe0663e28724ff
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Feb 11 14:22:07 2017 +0100

    Change name/path on ColumnIdent to be final

commit 08b446659f63cce9568be92a60a86865603f740c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Feb 11 14:11:09 2017 +0100

    Replace GET_FQN_NAME_FUNCTION with a method reference

commit 60a2af99c5778ced22fc140301fea893d2add83a
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sat Feb 11 18:47:55 2017 +0100

    use the same function semantics for table functions as for aggregates and scalars

commit 6360b1c76e1a3a6c0603cbb27637b95f92f64d50
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sun Feb 12 00:02:06 2017 +0100

    removed the PREDICATE function type
    
    it was actually only adding an artificial limitation on some scalar
    functions so that those could not be used in order by or group by.
    however it is only the match predicate which is not implementing scalar
    which is not a function symbol in the analysis anyways.

commit b1d36d3c07c3a2cfcf244b2e30711e84bcbb9afc
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Feb 10 20:53:03 2017 +0100

    Upgrade gradlew wrapper to 3.3

commit 31306d84c9275071290cbba9d180c139e2180121
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Feb 10 16:51:51 2017 +0100

    Upgrade to gradle 3.3 and fix warnings in build.gradle files.

commit 59ebaf8975b5d189e59ced11115aa19cfbe4aa40
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 10 16:34:21 2017 +0100

    tests: Move `reset` stmt into a `finally` block
    
    To avoid subsequent test failures if something goes wrong.

commit f4336557f1b67cd85546e78b6a7ebb95d64468f7
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Feb 10 16:54:09 2017 +0100

    add default noOp implementation for normalizeSymbol

commit b977adcdf423fb8142752b1b8d8fcc0e700ef5aa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 10 16:14:15 2017 +0100

    Upgrade jacoco to latest version (0.7.9)
    
    I sometimes have odd jacoco instrumentation errors like
    
        INTERNAL_SERVER_ERROR 5000 NullPointerException in
        org.apache.lucene.search.ConstantScoreWeight.$jacocoInit(ConstantScoreWeight.java)
    
    Not sure if those are fixed, but there are other fixes:
    
        https://github.com/jacoco/jacoco/releases

commit 5270ce9d2a117ea9886f294013c6332f44d9dd2a
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Feb 10 17:07:47 2017 +0700

    Removed limitation which didn't allow ordering on partitioned columns in group by query

commit bd860bf9e01abcbe31b78600fcfc7a40503983c9
Author: kovrus <ruslan@crate.io>
Date:   Fri Feb 10 14:48:48 2017 +0100

    update changelog accordingly to 1.0.3 release

commit 9441f715f2d699c372d86c149f203918880ce30d
Author: Michael Beer <michael@crate.io>
Date:   Wed Feb 8 14:36:56 2017 +0100

    stack futures to avoid that the callbacks get executed in parallel
    
    This fixes the test ``PostgresStatsTablesITest.resetStats()`` that leads to a
    query response before the job appears in the stats table.

commit 031d59ed4a29f6fdc4d6f947e67dfc4a2b054f68
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 9 15:15:23 2017 +0100

    Optimize local-only sys.nodes collection
    
    This is a minor micro optimization that should also increase readability
    a bit.
    It splits doCollect into two methods. One for local-only collect and one
    for remote-collect.
    
    This avoid the `remainingRequests` allocation and doesn't use a
    synchronizedList for the local-only case.

commit 36809973c7e1b62ec3205d3b3e0b342a91544c7f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 9 15:06:22 2017 +0100

    Remove intermediate Context from NodeStatsCollector
    
    The context only wrapped a Set which instead can be used directly.

commit 5652cc02a3ab72e3cdc6d92b510d49db7ec78ef5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 9 17:07:50 2017 +0100

    Replace ListenableRowReceiver future with CompletableFuture
    
    It will make it easier to introduce a closeCallback for rowReceiver's if
    we use the same kind of future in all relevant places.

commit 0111ad31e919ff1012718dc4744d39e4895eacbd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 9 17:27:15 2017 +0100

    Remove SingleRowBucket
    
    It only had 3 usages in test code. That doesn't justify having a
    optimized single-row bucket implementation in production code.

commit 85c34e9cea7808032172baf9c316506698d922dd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 9 17:32:02 2017 +0100

    Move BytesRefUtils into testing
    
    It is only used in testing code.

commit 5a6da910b9334142a6f4897ed3ae24076bf53a73
Author: kovrus <ruslan@crate.io>
Date:   Mon Feb 6 12:09:46 2017 +0100

    add the timestamp field to NodeStatsContext
    
    The timestamp value is used in sys.nodes os expressions

commit d8b09e37185eb17dce23173c13b6e4a9c481b99d
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Feb 9 15:45:07 2017 +0100

    fixes scalar function usage on the `having` clause
    
    scalar functions were wrongly forbidden even if
    the same function symbol was part of the grouping symbols

commit d608c3eff7cfe1c91c6d07cf026c2f2a91fe0953
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 8 00:26:06 2017 +0100

    Remove PageDownstream
    
    This commit removes the PageDownstream as it was semantically the same
    thing as the PageBucketReceiver.
    
    The PageBucketReciver now has full responsibility of receiving and
    merging the buckets. And the push-to-rowReceiver logic has been
    separated into a PagingIteratorEmitter.

commit 44101da8f7675b008798e8039ea324069d8bee6e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 8 09:55:12 2017 +0100

    Remove some unused declarations

commit b2f00246bf9bb60828f98fba5b959ada74b59743
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 7 22:29:36 2017 +0100

    Remove iterables argument from MergeIterator implementations
    
    The only usages passed an empty list as argument so it could be removed.

commit 3aea829a4c23db3a55b646fac5b16961ae780149
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 7 22:23:44 2017 +0100

    Replace PageDownstreamFactory with a PagingIterators factory method

commit 4714be34edc46ba594d6c7d44e78222065ac4e7c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 7 21:54:55 2017 +0100

    Remove ProjectorChainContext
    
    Since the previous commit removed the FlatProjectorChain it makes less
    sense to have a dedicated context for the rowReceiver which encapsulates
    the projectors.
    It holds no state and doesn't do anything.

commit 60c0d2d14b92c0337524a4fefd063af49e4dc7dc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 7 21:33:15 2017 +0100

    Replace FlatProjectorChain with a static `prependProjectors` function
    
    In order to avoid creating unnecessary FlatProjectorChain instances.

commit 9a07c2625c8a0c39ea183bb2480194de18dfa470
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 7 20:46:40 2017 +0100

    Remove TO_ITERATOR function

commit 3fd657f68fe7b83557409716cc5d96b8266a6b60
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 7 11:02:04 2017 +0100

    Replace TransportActionProvider dependency with TransportNodeStatsAction

commit 81d4fac68bc23f7370db001dc19723a758676df4
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Feb 3 16:39:59 2017 +0100

    Catch exception when trying to bulk insert values that don't match
    
    Only related if the column type(s) and the bulk arguments are streamed to another node.

commit 228f845542ef2311fe70057b460e27b4035ddee2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 6 21:07:26 2017 +0100

    Replace Upsert-/DeleteActionDelegate with method refs

commit c2445ea44a0e5eb6a7e10508f1d43e1e02075e37
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 6 15:20:17 2017 +0100

    Move `sendErrorResponse` calls out of `exceptionCaught`
    
    This prevents a possible exceptionCaught recursion leading to a
    StackOverflow.
    
    `sendErrorResponse` internally calls `channel.write` which in turn calls
    `Channels.fireExceptionCaught` if there is an error.
    This then triggered `sendErrorResponse` again.

commit 9caabd791e47c9d1458d0f80be89decffb704bc3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 6 16:26:21 2017 +0100

    Remove TODO/FIXME from CollectorFieldsVisitor

commit a35231cda6e154db0bb720c555b481f7c2775d09
Author: Michael Beer <michael@crate.io>
Date:   Thu Jan 26 11:16:14 2017 +0100

    Removed deprecated setting ``indices.fielddata.breaker``
    
    Deprecated alias ``indices.fielddata.breaker`` is now completely removed.
    The new setting is exposed as ``indices.breaker.fielddata``.

commit 2b8b6b250a9356694f4211ed1a2bd4b2011ac68b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 6 13:12:03 2017 +0100

    Remove SimpleCollector usage from CrateDocCollector

commit 03acb2868cc6f65aa7dd8915c7c97b33849f7568
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 3 23:48:46 2017 +0100

    Change SortingTopN/RowPrioQ to require Comparator instead of Ordering
    
    Less greedy!

commit c20b6dbd7a314af1c52ed3731d4abf1490f269c8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 3 16:00:56 2017 +0100

    Change `Buckets.of(Row)` to re-use SingleRowBucket

commit 35dbe9eca33da6c1e39e46710dbe108036d96880
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 3 12:22:51 2017 +0100

    Move Row/Bucket interfaces & classes into a data-exchange (dex) module

commit 51d713b707b58563c30cc5ef36cd9a0f6c8d43e5
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Feb 3 12:14:35 2017 +0100

    removed OVER support from parser

commit 7f4fffa974984eee1d262a2e168f3b860c7b4489
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 3 10:02:32 2017 +0100

    doctests: Remove unused java_repl

commit fffc9972822ebd8926f2c0fe1d6d18ea52854597
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 3 10:00:18 2017 +0100

    doctests: Bake DocFileSuite defaults into a docsuite function

commit 9831c456a652442f7f8c0a25bbac004f520f8380
Author: Andrei Dan <andrei.dan@crate.io>
Date:   Fri Feb 3 14:08:58 2017 +0000

    Constructor before instance method

commit 0cc3f42e217f7fe1a975b05a046fd697a5c24054
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Feb 3 14:18:09 2017 +0100

    prevents sys.nodes itest from running on a client node
    
    follow up commit of ddc17dc996d4ae744549e65f6216a85ef766ce61

commit ddc17dc996d4ae744549e65f6216a85ef766ce61
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Feb 3 12:11:13 2017 +0100

    moves sys.nodes.rest_url test to itest
    
    this will check the real implementation instead
    of testing the mock

commit 476e4a3f6bf743c24671414b5cc975d034c48b38
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Feb 3 11:47:08 2017 +0100

    Revert "Replace custom attributes usage with a RedirectService"
    
    This reverts commit 206fc15d8de4029b4fc39b4ec43b8140d7f69c14.

commit 9875dabdeba9bf00c20659827c1f2e29d2ed266b
Author: Andrei Dan <andrei.dan@crate.io>
Date:   Wed Feb 1 09:15:32 2017 +0100

    CompletionListenable uses java.util.concurrent.CompletableFuture

commit 2ece74e2e06fe585b01ac447450b4fcc15128694
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Thu Feb 2 16:52:25 2017 +0100

    fix code blocks for consistency

commit d5c918c53b283222413b272c52ee7daea303bc74
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Feb 2 15:14:46 2017 +0100

    Upgrade to crate-python 0.18.0 for blackbox tests

commit 57409219c0d826889de3d36eafae4e7a91beda87
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 2 11:32:02 2017 +0100

    Rename size to numColumns on Row
    
    To clarify what the size really is.

commit fd91ddc94ebe8e0225419807c12fe4348ed062e7
Author: kovrus <ruslan@crate.io>
Date:   Wed Feb 1 17:00:21 2017 +0100

    add geo.txt to doc tests

commit 27c20bfa7db311244b0434aacc02f28bab0e5d25
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Fri Jan 27 16:42:57 2017 +0100

    add note about aggregation limitations on joins

commit 46a5bb9197982d898f1a94b03fc106272f312581
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 2 11:38:28 2017 +0100

    Remove MATERIALIZE from Row

commit 3817a77e13e72b7ffc93b07499c4d08594f0a35e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 2 00:22:13 2017 +0100

    Remove unused stuff from core module

commit e11a4b4a315735cad8d702818968220b743fae6a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 1 23:29:11 2017 +0100

    Remove unused declarations from sql-parser

commit 631f38acbcb872d5b766b51d22da9872537449bb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 1 23:12:13 2017 +0100

    Remove unused sql-parser classes

commit d2777dcb2c93972643a1ec2898ba164785888f62
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jan 24 14:06:48 2017 +0100

    improved docs about INDEX OFF query behaviour

commit 8982bdbb521d535c0231ce4912f777c203b1b608
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jan 26 14:12:43 2017 +0100

    close simple portal correctly when connection is closed
    
    also use current version (2.1.5) of jdbc driver

commit 492d28b82b65f00dd3e0d9b5f4f18f0b8631ce42
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 30 17:34:04 2017 +0100

    Add support for casting JSON strings to objects
    
    This can be useful for postgres clients where it's not possible to
    provide the correct type info (JSON) and which default to text
    serialization.

commit ee94aeee9bba6df74f4b36089ae4d9ca03669e14
Author: Michael Beer <michael@crate.io>
Date:   Tue Jan 24 16:58:00 2017 +0100

    added geohash scalar function

commit 0f76f4838d28fe54bd1e99488fab39a50e39af23
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Feb 1 14:13:31 2017 +0100

    Downgrade hadoop version for hdfsTest
    to match version of es-hdfs-repository plugin.

commit f4dae9b71a554388d9f30bfb3f8a14d4f5978806
Author: kovrus <ruslan@crate.io>
Date:   Fri Jan 27 15:32:41 2017 +0100

    clean up sql and expression formatter
    
    remove some guava dependencies

commit a2addc5cee003094f39c56e85815799d4d37133d
Author: kovrus <ruslan@crate.io>
Date:   Wed Feb 1 14:11:59 2017 +0100

    remove unused sampledrelation

commit 1d112fac48c9375c21601845d94f27e4232581bb
Author: kovrus <ruslan@crate.io>
Date:   Fri Jan 27 13:42:05 2017 +0100

    disable multicast discovery by default, log discovery deprecations

commit 2dc2ef7fb61296c53088172a206e26330d05d526
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 31 19:13:01 2017 +0100

    Remove unused functionality from BlobStats
    
    And make it immutable.

commit 48b6dc8747fda298321fdcb24b7691c0ef1a1d4c
Author: Andrei Dan <andrei.dan@crate.io>
Date:   Fri Jan 27 16:11:05 2017 +0100

    executeBulk returns a List of Futures

commit 17e03a49b019ac35aeeafe02da84291e94e0f59e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 30 18:01:23 2017 +0100

    Change AddColumnAnalyzedStatement to be immutable

commit 1afecd7c2eacb9639c64d1b2566688c3c9b2f264
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 30 17:51:53 2017 +0100

    Remove double dispatching from AlterTableAddColumnAnalyzer

commit 49929334ab5372b78838c083671ab83df6fc30fe
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Fri Jan 27 18:49:09 2017 +0100

    strip trailing whitespace

commit e08a4c006bc43f44fcfb658ab8a009350ca14783
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 31 10:13:06 2017 +0100

    Remove unused functionality from Version

commit 17c7ba7ffe905b99f95e9b18f83c94fb7c5272e5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 31 09:55:54 2017 +0100

    Remove Streamable from ClusterId
    
    ClusterId is not streamed

commit 86a28354da318a46930695502257cab82689a8c6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 31 09:44:53 2017 +0100

    Remove unused isDateFormat function

commit f2f3d461c5ffcabc069e8517ee2df5fc584c90a9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 27 17:04:27 2017 +0100

    Optimize TableStatsService
    
    Instead of first buffering everything in a List to then build a Map out
    of it the Map is now built directly.

commit a56e679269cb42d2feb1549566d437dfcaca4798
Author: kovrus <ruslan@crate.io>
Date:   Thu Jan 26 11:19:20 2017 +0100

    fix docs formatting for the `power` scalar

commit a8f4161583973f4eae87ce33d6278862520ecdaf
Author: Michael Beer <michael@crate.io>
Date:   Thu Jan 26 14:27:59 2017 +0100

    fix bug that returned always default memory settings
    
    this was caused by 0b5d5726524a7e67b35ff13506b4e6d256692e23

commit f1ed31c4d7d56e0578a70b9fe993c78a519c8b7e
Author: Michael Beer <michael@crate.io>
Date:   Wed Jan 25 10:55:41 2017 +0100

    improved docs in configuration of _log tables

commit 0f353d09bf1e0398acd7df1621b2c9d9ed7b08c4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 25 10:35:27 2017 +0100

    tests: Simplify TestGlobalSysExpressions

commit 4995188a468f42b793cfc6a91875dbe370bd2483
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 25 10:27:22 2017 +0100

    tests: Remove sys.nodes tests from TestGlobalSysExpressions
    
    They're tested already in SysNodesExpressionsTest

commit 912136881cb6bf849f4df77d26621e9b789aaa4d
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Fri Jan 20 16:33:12 2017 +0100

    depreciate multicast discovery

commit 65c4d75bf49ecbe33cab206dd0a2d99dca3bfb84
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 24 15:58:30 2017 +0100

    Remove BlobShardReferenceImplementation
    
    This was used as a marker interface for injection. But shard expressions
    are no longer injected so the interface isn't necessary anymore.

commit 2bb3ec65dcb99100fd791822d1fa8d574295b525
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 24 15:51:44 2017 +0100

    Remove SimpleObjectExpression
    
    Replaced it with a default implementation in ReferenceImplementation

commit 0b5d5726524a7e67b35ff13506b4e6d256692e23
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jan 24 12:00:21 2017 +0100

    changes crate’s breaker limit settings to memory setting
    
    memory setting appliers (validators) were already used
    for that settings, so there are no behaviour changes

commit 5a0e659734797d000aea803ffab8982fe4b8c0b2
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jan 24 10:24:44 2017 +0100

    rewrite t._doc['col'] to t.col in where clause

commit 8be85142b78d5e334f905e0b2d16f9161f24e233
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon Dec 19 17:05:16 2016 +0100

    add warning about consistency claims

commit 7e1786e8f9d8b63cce0e010d16d5e176cf61ab97
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 23 23:06:39 2017 +0100

    pg-netty: Let ServerBootstrap manage closing of worker/boss

commit 538cb04d50228955c3753a1d5ddb4f8af4121482
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Jan 23 18:37:48 2017 +0100

    Remove unused column from test table

commit 31dea3bb301d704f10159feb4d6ff49acc3ad2dc
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jan 24 09:20:44 2017 +0100

    make "stats.breaker.*" settings hierarchical

commit 622e6c0aeedd4b9550a74468d0e520ad53f42629
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jan 23 16:03:44 2017 +0100

    fixed map comparison that led to cast exception
    
    the issue occured when comparing object column with object literal that contained
    a string value, e.g.
    
    ```sql
    SELECT * FROM t1 WHERE o = {"s" = 'foo'};
    ```

commit 9197c81151e9f8d03d2e5c89e62ffc244bb59988
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Jan 21 14:13:17 2017 +0100

    Remove mapperService from CollectorContext
    
    Some LuceneCollectorExpressions used the mapperService in startCollect
    to retrieve the MappedFieldType. But the MappedFieldType is already
    available when the expressions are created so this indirection through
    the CollectorContext & startCollect can be removed.

commit 6cc105e3a68e304d76ff1582e5dd83233f91b83c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 20 16:52:04 2017 +0100

    Make sure dynamically added string columns use doc values
    
    Otherwise it is inconsistent with explicitly created string columns.

commit f141fe6d78a0e0f73691e65574877447ab27b768
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Jan 22 22:47:45 2017 +0100

    Add jmhJar docs to DEVELOP.rst

commit d074681d8ea2b986943667c852905625b6b8e34f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Jan 22 21:03:44 2017 +0100

    Update jmh to 1.17.4

commit c0bc7fcafdc32262b2ba9c9b4747e0b803a4916b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Jan 21 21:51:45 2017 +0100

    JobExecutionContext: Replace LinkedHashMap with a ArrayList
    
    Requires less memory.

commit 1167217fbbd0c206c3af8a9aac954743406ff92b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Jan 21 14:42:49 2017 +0100

    Change DocSysColumns.forTable signature
    
    To avoid list & tuple allocations

commit 60787a180085d205aaa7694af915ec8b77285b00
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Jan 21 18:53:36 2017 +0100

    Optimize guessType for arrays
    
        Benchmark     Mode  Cnt    Score   Error  Units
        guessTypeNew  avgt  200  275.621 ± 4.898  ns/op
        guessTypeOld  avgt  200  304.432 ± 4.513  ns/op

commit b8358885c061c47d9f5e91b7877958572dfcc65e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Jan 21 13:47:43 2017 +0100

    Remove files.CollectorContext
    
    It only wrapped a LineContext which can be used directly.

commit 0ecc97186ad248ea907f31bf228b1617a195b790
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 20 22:11:37 2017 +0100

    Make AlterBlobTableAnalyzedStatement mostly immutable

commit 3cebe4b669d0a1a613c4aa4f6bc342a421ae002e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 20 22:00:01 2017 +0100

    Make AlterTableAnalyzedStatement mostly immutable

commit 30cc725087198b2fac5fba784470c37d524e42a2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 20 21:38:30 2017 +0100

    Remove double dispatching from AlterTableAnalyzer

commit a2094dfde673359949aa6af33841b96ad4ecf839
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 20 20:54:33 2017 +0100

    Change analyze on TablePropertiesAnalyzer to static

commit e02883aa95716d24e16f5b7b1824ac1af8ae67a5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 20 23:05:35 2017 +0100

    Remove tableInfo requirements from finalizeAndValidate

commit 59c0ff9ceb72a515257147d39bc742a77772d21e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 20 22:47:12 2017 +0100

    Change TableElementsAnalyzer to only require parameters

commit 97674111accb55c47facbc2f2f365df22d45d96b
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Jan 20 19:07:17 2017 +0200

    Fix changelog entries

commit 0d519ec8e6b9c174d22ec9b02463f442c6eb8163
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Jan 20 19:03:18 2017 +0200

    Fixed UnsupportedOperationException thrown when
    running an update statement on empty partitioned table.

commit acd3aa8299bb2eb7028f1ce8d308cd4c0c3c0a79
Author: Michael Beer <michael@crate.io>
Date:   Tue Jan 3 14:23:14 2017 +0100

    added time expiring jobs and operations log
    
    there are new stats.jobs_log_expiration and stats.operations_log_expiration
    settings allow time values and they control how long log entries are
    kept in the sys.jobs_log and sys.operations_log tables.
    
    additionally, the queues holding the logs are secured with a circuit
    breaker to prevent OOM exceptions if the size of the queue would be too
    big.

commit cd8917bbde8d9d9cbf1aeb586102722403ff7cf3
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jan 20 11:53:08 2017 +0100

    do not re-register circuit breaker with same settings
    
    this bug caused the query circuit breaker to re-register
    on every cluster setting change

commit b2fb8374e7ce0d637acec3b2bc5438e1976087b7
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Jan 18 13:32:11 2017 +0000

    allow single parentheses for subselects in the array comparison
    
    Now it's possible to use `` = ANY (SELECT ...)`` instead of
    `` = ANY ((SELECT ...))``

commit 603e401db5aff0bfed2586a747da635dd6d5db81
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 19 22:35:56 2017 +0100

    Remove indexFieldData indirection to access docValues
    
    We default to docValues for most types, for those it is not necessary to
    go over the indexFieldData abstraction layer.
    Doing so only causes unnecessary AtomicNumericFieldData allocations.
    
    This doesn't change all expression implementations because in some cases
    the abstraction still does useful work (see
    `BinaryAsSortedNumericFloatValues` as an example).

commit 05977c4ce554d7baac21993fc356dbe0b48fcfad
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 19 22:08:06 2017 +0100

    Remove null checks for non-nullable fields in Function

commit 36b20c10ae19ab6bbff3d74f25b3acb7c07eecb1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 19 21:33:35 2017 +0100

    Replace TYPES_FUNCTION with a method reference

commit 54497553c30db2cee418c8f8dac8acff5f376c3a
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jan 19 13:56:18 2017 +0100

    replace guava Supplier class with java Supplier
    
    where possible
    
    also return typed iterator where used as supplier

commit 0b0fc0cf385bf6cd2d59e3f3125e9835f530977b
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Jan 19 15:35:44 2017 +0200

    Fix comments in crate config file regarding unicast discovery

commit 8e2ffa658bfbd6195043e5a8f8f9cfc12a5c5898
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 17 22:31:53 2017 +0100

    Extract functions from `ensureOnHandler`
    
    To make it possible for the JIT to inline the method.
    
    Before:
    
        io.crate.planner.Merge::ensureOnHandler (330 bytes)   hot method too big
    
    After:
    
        @ 43   io.crate.planner.Merge::ensureOnHandler (9 bytes)   inline (hot)
          @ 5   io.crate.planner.Merge::ensureOnHandler (188 bytes)   inline (hot)

commit a8847b63ba03734516e8840b16a42275dc97de99
Author: Andrei Dan <andrei.dan@ontology.com>
Date:   Wed Jan 18 15:16:40 2017 +0100

    Update CHANGES on fulltext search with fuzziness 'AUTO'

commit c1bebbdf7718abb289bf40d6ae39c435be877081
Author: Andrei Dan <andrei.dan@ontology.com>
Date:   Tue Jan 17 17:47:28 2017 +0100

    4694: convert bytesrefs to string when creating the fuzziness conversion

commit bddd01a3f35304af0d3f46f9ac4d9b8f587f798a
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon Jan 16 13:25:53 2017 +0100

    bump crate-docs-theme dep version to 0.5.16

commit 2d5febca7731222511f5b187c3986e77cb32bf30
Author: Andrei Dan <andrei.dan@ontology.com>
Date:   Tue Jan 17 09:11:32 2017 +0100

    Allow predicates in select
    
    Have NotPredicate be of type predicate (instead of scalar)
    
    Update documentation
    
    Drop custom documentation regarding usage of predicates in select statements
    
    Drop unit tests (as it was an artificial case for not supporting predicates)
    
    Add integration test for match in select

commit c13e8fa0c14dbd2859976f6d2c07d1990ef3acf1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 16 15:43:01 2017 +0100

    Replace TermBuilder with MappedFieldType

commit 0ce73297eabc2d999a7e6da4611606e8df1cb29b
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Fri Jan 13 16:32:58 2017 +0100

    tidy up top level docs a little

commit f961a8df4a3e85078637e3d453a530261c317505
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Jan 11 11:12:31 2017 +0000

    Updated crate-admin to ``1.1.0`` which includes the following change:
    
        Breaking: Updated the admin-ui build to be compatible with future crate
        versions which will serve the admin-ui from root `/`.

commit b02b3977f8433b95b0a023333a56a2dc2737d7fb
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Jan 10 14:19:53 2017 +0000

    Serve admin ui from '/'

commit 1ca7ce9909f4a7fdb0318023808bd764959a9b7c
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Thu Dec 8 17:41:35 2016 +0100

    add dev option for bin/script that autobuilds docs

commit 9acf67fb0fec16d7a4bbb1b8421c41d426c310be
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 12 14:28:31 2017 +0100

    Replace QueryBuilderHelper by using MappedFieldType
    
    This changes the type of lucene query used in some cases. E.g.:
    
     - termQuery instead of rangeQuery for numeric_col = 10
     - noMatchQuery for partitions where a column does not exist
    
    Changing to MappedFieldType has the benefit that it will handle the
    index change coming with Lucene 6 / ES 5
    
    Some benchmark results indicate performance is either getting better or
    staying the same:
    
        V1: 1.1.0-d5b025fc3b9744491ce40496d532b0a8a6604079
        V2: 1.1.0-3bbac05114ec791fbf9d21d5bfa921f59e03139c
    
        ('select * from t_any where value = any(?)', 1)
          16.47% mean difference. Likely significant
                      V1 →     V2
          mean:    6.191 →   5.249
          stdev:   4.824 →   1.518
          max:   147.669 →  25.886
          min:     2.969 →   2.668
    
        ('select * from t_any where value != any(?)', 1)
          5.27% mean difference. Likely significant
                      V1 →     V2
          mean:  188.852 → 179.150
          stdev:  20.522 →  22.516
          max:   235.921 → 231.825
          min:   102.302 →  99.166
    
        ('select * from uservisits where duration in (?, ?, ?, ?, ?)', 1)
          0.27% mean difference. Likely NOT significant
                    V1   →     V2
          mean:  326.584 → 325.689
          stdev:  28.090 →  26.705
          max:   527.050 → 539.458
          min:   233.663 → 216.739

commit a8cafba71597c9b6676344508a6f3d30c25633a7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 12 14:17:00 2017 +0100

    tests: Remove SearchContext from LuceneQueryBuilderTest

commit 2c400ef0cda84f9811a1be3e54e620232e641fec
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 12 12:09:32 2017 +0100

    Replace QueryBuilderHelper with MappedFieldType in LuceneOrderedDocCollector

commit d5b025fc3b9744491ce40496d532b0a8a6604079
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Jan 12 15:30:27 2017 +0000

    exclude BETWEEN NULL queries in sqllogic tests
    as CrateDB delivers different results than
    postgresql or sqlite in some cases

commit 5253870123c23dc0e9511f01269e14cdb878342d
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Jan 12 09:41:51 2017 +0100

    Use psycopg2 for sqllogictests to avoid implicit limit of 10k

commit 8e0403caa0349bbe7d3d1a552eac57b0b2df966b
Author: kovrus <ruslan@crate.io>
Date:   Wed Jan 11 17:31:23 2017 +0100

    fix convertion of a sql 'like' pattern to a lucene query
    
    The conversion of SQL pattern in the `LIKE` predicate, which
    contains an escaped backslash before the wildcard, to the Lucene
    query was done incorrectly, e.g. '%\\%' was resulting in '*\%'
    instead of '*\\*'

commit 1e5e426f630bafd64f19e5323f3ab7cdc4ba43c6
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Jan 11 18:09:06 2017 +0100

    Append limit clause to queries that expect more than 10000 values

commit 4b15e335582b6490255e771a2b9d0188d6830ddf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 11 13:51:02 2017 +0100

    Split internals of AnalyzedColumnDefinition#toMapping into multiple functions

commit c482698b3870b56e34e334a790a3c1c420e33cc0
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Wed Dec 14 15:00:11 2016 +0100

    fix up changelog syntax

commit 30b7f1296ead031430b125f777bbed61660ce742
Author: meriamk <meriam.kharbat@gmail.com>
Date:   Wed Jan 11 12:24:51 2017 +0100

    updated admin-ui to 1.1.0

commit 0ec750412b9dd80470187e40844f07d26ab1efc3
Author: meriamk <meriam.kharbat@gmail.com>
Date:   Wed Jan 11 11:17:21 2017 +0100

    updated admin-ui to 1.0.4

commit 7f968658b06fdcbde0b3cdea0df0fba052766c58
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 10 17:07:02 2017 +0100

    idea: Enable formatter tags
    
    This allows us to use
    
    `// @formatter:off` and `// @formatter:on` around code blocks to prevent
    Intellij from applying autoformatting.
    
    This is useful in certain cases where non-standard indentation improves
    readability. For example when working with the XContentBuilder:
    
        XContentBuilder builder = XContentFactory.jsonBuilder()
            .startObject()
                .startObject("_meta")
                    .startObject("generated_columns")
                        .field("week", "date_trunc('week', ts)")
                    .endObject()
                .endObject()
                .startObject("properties")
                    .startObject("ts").field("type", "date").endObject()
                    .startObject("week").field("type", "long").endObject()
                .endObject()
            .endObject();
    
    Doesn't get reformatted to
    
        XContentBuilder builder = XContentFactory.jsonBuilder()
            .startObject()
            .startObject("_meta")
            .startObject("generated_columns")
            .field("week", "date_trunc('week', ts)")
            .endObject()
            .endObject()
            .startObject("properties")
            .startObject("ts").field("type", "date").endObject()
            .startObject("week").field("type", "long").endObject()
            .endObject()
            .endObject();
    
    Thus, it is easier to see if start/end calls match.

commit e5e1c6eaccc5ac0d2909e621f57ee3c49e2e623b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 10 15:17:12 2017 +0100

    Merge ColumnReferenceCollectorExpression into LuceneCollectorExpression

commit b929eccadf1f72f09efe88138ca58af82cffb9d2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 10 15:03:55 2017 +0100

    tests: Remove unnecessary mock setup in NodeStatsContextTest

commit de98e7491286a3e3c5d72f2296d88f58640f1dfe
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Jan 10 12:08:41 2017 +0100

    Fix: OrderBy completely removed in case of subselects where
    the parent select has a group by.
    
    Related issue: https://github.com/crate/crate/issues/4673

commit 195f3a1412e4fa1491eb39cc05e51c602403fc5f
Author: Autophagy <mika@crate.io>
Date:   Mon Jan 9 14:55:57 2017 +0100

    Fixed :: use case when adding casted values

commit 4182d4e24b629bf477d068f40e46f04b13665fcd
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jan 9 15:21:48 2017 +0100

    updated changelog to reflect release 1.0.2

commit 2ff7813890c830fdcb31a374dc849daa1ea2c94e
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jan 9 11:35:32 2017 +0100

    close sqllogic test file after run

commit 7a953e6045986b60287f61aef6111a679a489943
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jan 9 11:34:46 2017 +0100

    disable tqdm monitor thread which leaked

commit 77658742c0b38941b73184be45661f7447b0a8b1
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jan 9 12:25:35 2017 +0100

    always log incorrect result even if failfast

commit 6d4d01f10d02562719b8a2991d03112cc12a7c8e
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jan 9 12:10:46 2017 +0100

    added env variable to disable tqdm progress for non-tty

commit b494dbfc052500fe427b54a87920596cd36d6350
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 4 23:05:56 2017 +0100

    Docs: Change admin-ui hints to notes

commit c2983e6165bf5a32311af6748b5ad5bedb79304e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 4 22:55:08 2017 +0100

    Docs: Remove notice about client JVM version
    
    Since Java clients no longer use the transport protocol the clients can
    use whatever JVM they want.

commit 8b023de3e10a3e097a02f6ca8b305c909b2b6e10
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Jan 6 14:16:35 2017 +0100

    Replace deprecated Lucene's RegexQuery.
    This is a followup of commit: 60533a3ee41e7c990bbf55351f768c7018c2e476

commit c6f5a8940e6d862061affad36ab2ed7421fd0f83
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 6 12:18:11 2017 +0100

    fixes custom data type registration of the percentiles aggregation

commit 20f76b81d5eeef86155874ca385a78046005cd36
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 3 23:48:07 2017 +0100

    Change how InformationSchema sources are exposed
    
    With Java 8 method refs it is no longer necessary to wrap everything
    into a Supplier class.

commit 98f4998fa4b9e9397facda73286c5a97f481e191
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 3 22:39:13 2017 +0100

    Stream symbols using a immutable `values()` copy.
    
    `values()` on an enum creates an array each time. (Since arrays are
    mutable, it has to do so).
    
    ~8% improvement:
    
        testStreamNew  thrpt   20  17721294.219 ± 397890.829  ops/s
        testStreamOld  thrpt   20  16221032.170 ± 258195.918  ops/s

commit 7b5167ec2f20263dd8456f37dad71ae902a31a31
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Jan 4 13:53:41 2017 +0100

    Minor code cleanup

commit cd4251a038500f82841452685d4624415173899e
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Jan 4 13:43:46 2017 +0100

    Refactor FetchPushDown.

commit 60533a3ee41e7c990bbf55351f768c7018c2e476
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Dec 23 12:48:29 2016 +0100

    Implement Lucene's deprecated RegexQuery

commit 6e19bd5470a5d717953bb96e1c4d758e57b72566
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Jan 4 11:12:20 2017 +0100

    Revert usage of a forbidden api done by mistake

commit 66ab08bf2b2ef5aa575266e45f7926e24e45bf49
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Jan 3 19:52:12 2017 +0100

    Rename countNode and mergeNode to countPhase and mergePhase respectively

commit 378f05deaa3caf340d968281dbce5442cf199be5
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jan 3 12:24:23 2017 +0100

    fixes index constraint validation, only allow for simple types

commit fc157f28f5e4f603b24210ecaf08076915fc6cef
Author: kovrus <ruslan@crate.io>
Date:   Mon Dec 19 16:24:01 2016 +0100

    allow semi-colon in the end of statements

commit d969765fc8219c148d7432b981a4409b87dd1b98
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Jan 2 22:18:37 2017 +0100

    Enhance performance optimisation of full joins by rewriting them to left,
    right or inner joins when conditions in ``WHERE`` exclude null values.

commit 9d4dc1d1ed42cf6f4e1124aa2bd9ac8665d6efc8
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Dec 19 16:37:31 2016 +0100

    serve admin-ui directly instead of
    using the elasticsearch site plugin mechanism

commit bea3d2a89d66cb233fe0408565a718c4f6af96cc
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Jan 2 13:43:29 2017 +0100

    Use separate visitors to validate the name and the index of a subscript expression
    and permit any kind of valid expression of type integer for the index.
    
    Fixes issue with subscript function handling in generated columns:
    https://github.com/crate/crate/issues/4631

commit 36d6a497c9ee3299dc7112d0218dcf76ba4e34e7
Author: meriamk <meriam.kharbat@gmail.com>
Date:   Mon Jan 2 17:05:41 2017 +0100

    update admin-ui to 1.0.3

commit 928116d58b5f035fd47de4d4736bffc90ac44d83
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Dec 16 12:13:38 2016 +0100

    (re)-moves special NULL literal handling at the expression analyzer

commit f7703469916c683434262e31a007d9018b238d63
Author: Michael Beer <michael@crate.io>
Date:   Thu Dec 22 17:23:41 2016 +0100

    fix: kill job on all participating nodes
    
    if a node disconnects, all nodes receive a kill request if they participate
    on a job context. This fixes an issue that could cause queries to hang if a
    node disconnects.

commit 39e636b60eea0376317acebf001e9a93eaf776d7
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Dec 27 16:28:18 2016 +0100

    Fix: throw correct error if one tries to create a table starting with ``_``

commit 1d8bce0c61258f54a3b6568ba8e847767de0e20c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 22 16:39:01 2016 +0100

    Replace bytes() calls with getBytes()
    
    `bytes` will be removed in ES5

commit 78dcf6aec81d16082ca2988e583eebaf7d529683
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Dec 22 15:05:35 2016 +0100

    Minor code cleanup

commit 9dee703574e54e749341648f4604932659926c33
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 22 14:09:47 2016 +0100

    Remove duplicate ShardId creation in ShardCollectSource

commit e3d09834721cd2b74022d5b7185fca17aabb0b27
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Dec 22 13:41:15 2016 +0100

    Fixed an issue that causes UnhandledServerException on joins
    when ``WHERE`` clause contains conditions on columns of array type
    of both tables which are separated with the ``OR` operator.
    
    When columns of CollectionType need to be collected then convert
    them to source lookup references.

commit 6e779e9f0b35a842d44ae02e702696456dfa6fc9
Author: Michael Beer <michael@crate.io>
Date:   Fri Dec 16 13:46:36 2016 +0100

    fix: longitude/latitude shows wrong results

commit 078c5dd27276a60b9c9536791a0348b3d4d3a83b
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Dec 21 14:34:10 2016 +0100

    Fixed an issue that causes ClassCastException on outer joins when
    they are rewritten to inner joins because of condition in where clause
    that prevents nulls.
    
    Move Rewriter to analysis phase to avoid changes after fetch pushDown is
    computed.
    
    https://github.com/crate/crate/issues/4595

commit 68d20a340323e87ae77ec548f54e4b5f136350c1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 19 17:11:57 2016 +0100

    Remove ShardId re-creation from TransportShardUpsertAction
    
    The ShardId constructor will require a Index instance in ES5.

commit f725ad3aa763ca61a02750d05fc7d4d29c35f1f2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 19 17:50:24 2016 +0100

    Replace DiscoveryService usage with ClusterService
    
    DiscoveryService has been removed in ES5

commit a8919c7fd8663ee48b60d8549bb13d24e3d07891
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Dec 19 14:56:26 2016 +0100

    also remove current statement that disabled stats
    
    previously `set global stats.enabled = false` was remaining in sys.jobs
    and was never removed

commit 176a9a13ee659d43217f7e4c21f9958d2533d188
Author: kovrus <ruslan@crate.io>
Date:   Mon Dec 19 14:46:23 2016 +0100

    update the crate snapshot version

commit c10a8d39624c8a7ac90b2f081fb92e6ad40b3195
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Dec 19 12:07:36 2016 +0100

    removes circle ci settings file, circle ci is disabled now

commit a2f75ad2bb98f02a8cbeaee611d63b5b6769122a
Author: kovrus <ruslan@crate.io>
Date:   Fri Dec 16 20:44:44 2016 +0100

    add support for the double colon cast operator

commit 688f31b6c0483a49b99230784773d4881d18141d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 16 14:42:10 2016 +0100

    Require shardId to retrieve BlobShard
    
    In ES the ShardId will have a IndexUUID which will be required in
    `BlobIndicesService`.
    
    This commit changes a couple of methods which took indexName + int
    shardId to take a `ShardId` instead. This will make upgrading easier.

commit 4d5f892320ba340ef4e473305b7e4d19caa3ef52
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 16 13:42:00 2016 +0100

    Remove BlobShardFuture

commit 206fc15d8de4029b4fc39b4ec43b8140d7f69c14
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 16 15:45:48 2016 +0100

    Replace custom attributes usage with a RedirectService
    
    The DiscoveryNodeService and the ability to inject custom attributes is
    gone in ES5.

commit ef0e27304a7dc540392f5eae9375c6ae865f940a
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Dec 16 16:23:38 2016 +0100

    fixed NPE in constraints validator
    
    that occured when inserting ``NULL`` value into colum that did not exist
    before

commit 17d1ed848a2f1b8341b82194d573848e4e84b335
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Dec 16 13:12:11 2016 +0100

    adds circle ci settings

commit 78ca08fd753eabb32abdd6397935e272f7a2aba2
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Dec 16 14:33:50 2016 +0100

    INSERT: also validate NOT NULL constraint for absent columns

commit ed80466af09fe9c0534a389043b3e92f64f75601
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Dec 16 14:11:37 2016 +0100

    added test that covers validateConstraintsForNotUsedColumns()
    
    https://github.com/crate/crate/blob/master/sql/src/main/java/io/crate/analyze/ConstraintsValidator.java#L61-L62

commit 34af1c6f123f5c6fa9d17bfc260b3041b3df4f66
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 15 16:03:36 2016 +0100

    Replace `id()` calls with `getId()`
    
    `id()` will be removed in ES5

commit 2494ca13177f2442103ba3959cf7f1805bfc899c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 15 15:55:03 2016 +0100

    Hide BytesReference#toChannelBuffer calls
    
    `toChannelBuffer` will be removed in ES5, but there will be a
    Netty3Utils utils class which has the same API as is used in this
    commit.

commit 0d1db9c3979d85651c9819fcc52e9c25e2eb6350
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 15 15:14:45 2016 +0100

    Replace `localNodeId()` calls with `getLocalNodeId()`
    
    `localNodeId` will be removed.

commit 504a80b5fbfa0312295bad3fc72903ac1aba9c66
Author: kovrus <ruslan@crate.io>
Date:   Wed Dec 14 22:09:37 2016 +0100

    use java optional in tree statement classes

commit 193ca782dbba2df395c92dcd1986fabc41a8422f
Author: kovrus <ruslan@crate.io>
Date:   Thu Dec 1 17:48:38 2016 +0100

    update antlr3 to antlr4

commit fc04d631853091752e3252c810cd0ec64d6f1c2d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 14 18:00:49 2016 +0100

    Replace anonymous function class defs with methods refs in DocSchemaInfo

commit 83f089bcdf8933c221a3afbde4e79b429f20cc05
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Dec 14 14:38:56 2016 +0100

    Fix: error thrown if nested method calls are used in ``HAVING`` clause.

commit 3acd0a709e16e0c7ea0f055a959274a61ea651ab
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 13 12:16:46 2016 +0100

    Add javadocs to DocTableInfo & DocSchemaInfo

commit e647a609c2f32109c15441392bfa5a294d1ca0f7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 12 17:54:10 2016 +0100

    Reduce function calls in DocSchemaInfo#update

commit 62730788095c43116b6819243dd77cd482a1c772
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 12 17:43:37 2016 +0100

    Remove metaDataChanged check from DocSchemaInfo
    
    `update` is only called if it has changed.

commit 45046c9225d047edcb951bab7b1d902f9c47b364
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon Dec 12 12:33:54 2016 +0100

    add explicit 'application/json' header to curl commands
    
    plus minor edits

commit 5a0545e9e3110d386c6ccaa4300a38c73e492f8c
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Dec 13 12:08:42 2016 +0100

    rename (reference) true symbol visitor and enhanced documentation
    
    also fix the related test to normalize before calling the visitor

commit bb3bbe95f7262931b4b1eb96470cec1a7a23e607
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Dec 12 17:17:27 2016 +0100

    updated changelog to reflect release 1.0.1

commit 1ddcb27871d1b408924fd98eca877c06019f6018
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Dec 12 16:19:24 2016 +0100

    updated crate-admin to 1.0.2

commit b363a741fcd127c08798ca37a26dcd2ee4859e72
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon Dec 12 12:07:54 2016 +0100

    improve accuracy of `NOT` warning

commit 82232840dee758d58ba82aa2ffe518ff9d0d9a25
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 7 20:25:17 2016 +0100

    Streamline ImplementationSymbolVisitors

commit 12e73501b4283da8fd7478c6d1a4d5ea90332c42
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 7 20:24:48 2016 +0100

    Remove properties that are not shared from ShardCollectorProvider

commit a70680180d6004473a7dfcae3349b51626e308dc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 12 14:19:18 2016 +0100

    Remove double dispatching from CreateTableStatementAnalyzer

commit 189ed48a0f2327105ed14b30b29a07c86ab7041a
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Dec 9 11:40:13 2016 +0100

    implements list of `Signature` for all functions
    
    - function registry supports NULL literals now
    - function matching is more strict
    - eliminates common concrete data type validation implementations

commit ebf10d4c99c054d398e983ef5187d83d1c82e259
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Dec 12 11:43:00 2016 +0100

    Fix parsing of `chunk_size` and `buffer_size` S3 repo settings.

commit d521b8d4be9b6f918a5d1a6c95d7305a8fcc9f56
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 12 13:15:50 2016 +0100

    Remove FulltextAnalyzerResolver from CreateTableAnalyzedStatement
    
    CreateTableAnalyzedStatement was unnecessarily used as messenger.

commit e6ac3b8fe4013098433a9ecbdfb343a4e4c9ff4e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 12 12:59:58 2016 +0100

    Remove `tableParameter` from DDL statements which don't need it
    
    All DDLStatement classes which inherited from
    AbstractDDLAnalyzedStatement got a `tableParameter` property which in
    many cases didn't make any sense.
    
    E.g. All snapshot/repository statement classes shouldn't have any
    tableParameters.

commit b2dbdb9512aefc595cbc5cb80c0becb74ac6fdd5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 9 15:13:45 2016 +0100

    Change TableParameterInfo to be a singleton

commit a99e0ec2b893d8fde10b77ac06c6e28455af6551
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 9 15:12:35 2016 +0100

    Simplify DocIndexMetaData.getColumnPolicy

commit eab235bb689b011f8064d39f84622a71c16e7d23
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Mon Dec 12 11:52:19 2016 +0100

    first stab

commit ef2eb23a38ce29c8bb118e17aa1997095424d97a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 9 11:44:27 2016 +0100

    tests: Remove AbstractPlannerTest and further split up PlannerTest

commit 19504b625c00e3fe083db5cdd93b0fabe89396d2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 9 09:58:32 2016 +0100

    tests: Extract delete planner tests into a separate file

commit 65be9397804a33e5780e049ef890b5ea16ed331c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 6 17:57:44 2016 +0100

    tests: Extract insert planner tests into a separate file

commit 833b22e64cf2ad3f869afd55480a5606f5f59104
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 6 16:11:41 2016 +0100

    tests: Change CopyFromPlannerTest to not extend AbstractPlannerTest
    
    AbstractPlannerTest will be removed.

commit b772d1a9938d0e44f15875e159d412f85d94208e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 8 23:33:47 2016 +0100

    Change describe to re-use analyzed relations for prepared statements

commit 54cd50abf242935114f4ab0f0af9cab33ae35e8e
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Dec 8 18:58:17 2016 +0100

    Enable PMD and implement custom rules.

commit 84e0cea336addcfdd3b3af0a5b8badd4e08d6110
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Dec 8 22:56:32 2016 +0100

    Add message to assertions and throw exception.
    Minor code optimizations.

commit 0b2d91481c68c9e0e2a7268b56704ab8bb5f2663
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Dec 8 19:39:22 2016 +0100

    Add message to assertions and throw exception.
    Minor code optimizations.

commit dce076cc2d2e6b2a2284ea7162cc670c66a28de1
Merge: d939c76fda 7ab8d7bb9c
Author: Naomi Slater <nslater@tumbolia.org>
Date:   Thu Dec 8 16:35:25 2016 +0100

    Merge pull request #4570 from crate/nomi/sphinx-script-fix
    
    switch echo to printf for portability

commit 7ab8d7bb9cd049fef687a26bb7c0d4d1b6ab6487
Author: Noah Slater <nslater@tumbolia.org>
Date:   Thu Dec 8 15:59:32 2016 +0100

    switch echo to printf for portability

commit d939c76fda115cc679b8f4923646122d9cbb6b2f
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Dec 7 14:17:15 2016 +0100

    Fix high prio findbugs warnings and minor code optimizations.

commit f85a3a01f5c467a326c8191f5a624bbecec92a86
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Dec 7 15:50:19 2016 +0100

    Enable findbugs

commit 0369d8f5d9b8df9cacd96678faacf7776cbbd737
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Dec 7 19:11:46 2016 +0100

    Fix: error thrown when array comparison operators are used  in ``SELECT`` list.

commit c06f3ebf7392c0ce98f3d24cb68eee617ccc7da2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 7 15:48:50 2016 +0100

    Optimize evaluateIfLiterals
    
    Avoids `Input[]` allocation in case that there are no literals.
    For `normalizeSymbol` it is the common case that there are *no*
    literals.
    
    Result of a quick benchmark:
    
        newImpl     thrpt  200  34128919.011 ± 424106.373   ops/s
        oldImpl     thrpt  200  23035246.839 ± 136670.289   ops/s

commit 42c88883e8b72f8d17c2407944af6db2d591e4fd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 7 15:59:35 2016 +0100

    Remove some allocations during OrderedTopNProjection processing

commit ab5f7358c4a04aa7efbd0da0b9f5e0236c7e08f7
Author: meriamk <meriam.kharbat@gmail.com>
Date:   Wed Dec 7 11:59:08 2016 +0100

    updated insert statement to support select without parentheses

commit 8e0129479444ccf49722c31b630998327b0b90fc
Author: Michael Beer <michael@crate.io>
Date:   Wed Dec 7 11:15:41 2016 +0100

    added monotonically increasing system clock on class level
    
    This prevents from clock adjustments (e.g. via NTP) that might infect certain
    time test cases.

commit 1183e96d584813fe9ec481a9f1e7f9c6907a0ca2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 7 12:13:30 2016 +0100

    Fix EqualityExtractor to not extracts PKs if foreign functions are present

commit 90b6f8b47b29823b4ef36db4a83701d0db998371
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 7 12:06:45 2016 +0100

    Change EqualityExtractorTest to use SqlExpressions
    
    Tests were a bit confusing because the columns x and y were defined as
    string but most tests were actually using them together with integer
    values.

commit ae3c0523a15f508052539017724d32aa1c87052c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 7 09:51:29 2016 +0100

    tests: Fix TODOs in NestedLoopConsumerTest

commit c108fc580ffb75df9f93e680690815e625056aa0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 7 09:29:36 2016 +0100

    tests: Remove kill propagation workaround

commit 69a3bab6ae13b87216bdf2793967a4ae79458bc0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 7 09:15:31 2016 +0100

    tests: Re-enable testRegexQueryFast

commit 59586d5d99dbbe5cf6874da530ec4505c608832d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 6 23:33:35 2016 +0100

    Move normalization logic into collect-sources
    
    We always normalized multiple times:
    
     1. Once in the analyzer
     2. Once per collect-node on cluster level
     3. Once per collect-node on node level
     4. Once per shard per collect-node on shard level
    
    2 and 3 were mostly done for historical reasons: Back when there were
    "global" expressions like ``sys.cluster.name`` which could be used in
    any context.
    
    After this change there are two places where normalizations usually
    happens:
    
     1. Once in the analyzer
     2. Once shortly before execution in the respective collect source

commit 53dd9dd7ca57c63b4af362c0d6580bd9dbeaf48e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 6 22:33:58 2016 +0100

    Remove CrateSearchContext

commit 447be3ad0147d4520a21ddbc0a29b8d57ced1203
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 6 21:46:21 2016 +0100

    Change CrateSearchContext to not extend SearchContext
    
    Most of the SearchContext properties were unused - pulling in a lot of
    dependencies that are not required.

commit b61770c16038774b412e46d5c4b0b5052c166ccf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 6 21:19:14 2016 +0100

    Remove some unused code

commit ea94b47f13c58a546637200aa5f4c3a2f568bef5
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Dec 6 17:00:37 2016 +0100

    Fixed an issue that caused select queries with bulk arguments
    to hang instead of throwing the proper error.

commit 4be079d384e9d477b1b4950cc0ba127d20e6fe4b
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Dec 6 11:29:24 2016 +0100

    Added sqllogic.log to .gitignore

commit 6b4a27adde8bfc72cf18d4b6e27028bfc8461c67
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Dec 5 18:00:55 2016 +0100

    Use command line argument to enable detailed logging level

commit da79e4126706b26c0100243dceda870eec103ee1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 5 16:14:22 2016 +0100

    Prevent remoteCollect usage if it's a fetch query
    
    It's not possible to use RemoteCollect if it is query-then-fetch because
    the remote node lacks the fetch-context, so the readerId doesn't exist
    there and any docIds collected there are invalid.
    
    In the initial commit where the remote collect functionality was added
    (757ad56d7cd2b2b871f5e2761daad896d923ba42) the assumption was that the
    creation of the FetchContext would fail, so the query would be aborted
    and a global retry would be done. Seems like this is not
    necessarily always the case.
    
    `OuterJoinIntegrationTest.test3TableLeftOuterJoin` failed sometimes
    because of this issue (Seed 7F98C30CDE8B1E09).
    Sometimes with a wrong result (because the docId could randomly match a
    real document). Sometimes with a ArrayIndexOutOfboundException (because
    the readerIndex was invalid).

commit c92dc6af8c36fbede6137331e9f298de61ef38da
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 5 11:07:17 2016 +0100

    Add a EvalProjection
    
    So far the TopNProjection was used to do column-re-ordering and
    evaluation of functions.
    
    This commit adds a separate EvalProjection to be more explicit.

commit 8e24fdcc8e32baf585d71228bfc196501cd0fa54
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Dec 5 09:58:51 2016 +0100

    migrate object mapping of templates

commit 02f073c711c9cb652f2f7e61d6085837867c367b
Author: Michael Beer <michael@crate.io>
Date:   Mon Dec 5 11:07:27 2016 +0100

    update changelog to reflect state of 1.0.0

commit 717080772a74aff66b9ee16bd91db7675fd0489f
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Dec 2 16:44:00 2016 +0100

    removed obsolete generics from FunctionImplementation
    
    it was always used with a Function symbol

commit 403351321e321ad1079a1f85885bbdffaf9d47cd
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Dec 5 07:45:20 2016 +0100

    added changelog entry for blob path migration script

commit 0b3a5663e628d9e73cbb1e6008d976f0fcadb450
Author: kovrus <ruslan@crate.io>
Date:   Fri Dec 2 16:10:42 2016 +0100

    upgrade crate-admin to 1.0.1

commit 609220c7b57a2cdd38b8ba54d2f3df3eef71e5ed
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Dec 2 19:45:09 2016 +0100

    Optimize execution of joins by ordering the join
    relations based on join/where conditions.

commit ddcfd27b7e29fabd80a0f9e9f99067d5f39a7e64
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Dec 2 18:21:04 2016 +0100

    Re-enable failing join sqllogic tests

commit ba57662d3eabd947a2417fdfff1d1290ebf09b45
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 2 15:23:06 2016 +0100

    Split TopNProjection into TopN and OrderedTopN
    
    TopNProjection contained a broken equals function (could have led to
    NPEs because of nullable orderBy related fields).
    
    It should also make it easier to debug stuff as it is easier to see if a
    TopNProjection contains ordering or not (when looking at a plan).

commit 1049718ddcf2bed948ebc31709b538d6f19527c0
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Dec 2 16:51:55 2016 +0100

    Fixed an issue with >=3 tables joins that implicit or explicit
    limit was applied on join pairs before any subsequent filtering.

commit 114f2c0180fd30802a2b0bd8d1ec05551bc1a1e4
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Nov 28 09:10:48 2016 +0100

    migrated index and shard components away from guice
    
    there is now no dependency anymore on shard or index
    level injectors

commit 8e90938cc6f8e47c78f79cbf17d458f042447145
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 2 14:29:00 2016 +0100

    Remove DelayedTask
    
    Became unused with c5e6798e4646587a5b33aa1afba581b20a2a1823

commit 87562683c5e6dd6107d617900c19ff926f12245b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 2 13:56:40 2016 +0100

    Remove readFrom from Projection
    
    In order to enforce proper initialization of projections.
    Some of them exposed a public empty constructor which could be used to
    create invalid projections.

commit 266b14a70c3af417ab88500a4f32df9295c4967c
Author: Michael Beer <michael@crate.io>
Date:   Fri Dec 2 14:21:56 2016 +0100

    updated changelog to refelct changes of 0.57.4

commit 9ed403aac4825c96db8ca59660b001410e09451b
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Fri Dec 2 14:21:29 2016 +0100

    updated Crash to 0.20.0

commit 5e5ea1472e6ade90922af1fab054439e0b0b9fa1
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Dec 1 22:25:31 2016 +0100

    fix pageDownstream kill propagation, follow up of https://github.com/crate/crate/commit/7ddec91a0b7b904f293834612cf50fa24fd9c515

commit 2f1588a76278581a3ca519162ecca7da811f9e85
Author: jessicarose <jessica@closetoclever.com>
Date:   Thu Nov 17 15:10:43 2016 +0000

    Updated CrateDB branding for docs

commit ca0879ea96f496a468456786b5a39d15b1e94919
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 1 15:19:21 2016 +0100

    Add support for passing `-Dtests.` options to the gradle test process
    
    In order to support setting seed, iterations and suite timeout via cli
    argument.

commit 7c915518862245c39b2fba105896361fbb887bc6
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Dec 1 13:03:49 2016 +0000

    fix: BETWEEN wasn’t rewritten properly if
    max or min have been NULL

commit 3495302ab50129fb7d07b657f4e22c5a11d1d4c0
Author: kovrus <ruslan@crate.io>
Date:   Tue Nov 29 13:27:32 2016 +0100

    simplified upper and lower case string scalars

commit 41364d8569dd38273e0893e191531bcb5fc66337
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Nov 30 15:49:04 2016 +0100

    Cleanup tests for order by with nulls

commit c5bf61e1a218ea442da6508fa76fb63364ee6bb4
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Nov 30 15:47:54 2016 +0100

    Fixed ClassCastException that occured when ordering by a scalar function
    which has return type integer and null values are involved in the ordering.
    The issue was produced because reducedType was used instead of actual DataType
    to determine the missingValue that replaces the nulls.

commit 7ddec91a0b7b904f293834612cf50fa24fd9c515
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Nov 30 14:50:49 2016 +0100

    forward kill reason to distributing downstream
    
    this fixes error handling issues introduced by
    https://github.com/crate/crate/commit/5b13dae38c9c7e7488ece613db1eae45976ab03d

commit 83eac72fc4e70de256d519c12bd33aa61b058ad5
Author: Michael Beer <michael@crate.io>
Date:   Mon Nov 28 14:02:20 2016 +0100

    extended sql logic tests

commit b80c608d06903bf092537406fce48f2eeaf3a6d1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 29 16:51:44 2016 +0100

    Handle FetchContext kill in NodeFetchOperation
    
    The fetch operation continued running if a FetchContext got killed.
    This could cause exceptions as the underlying reader might no longer be
    valid once the reader is being released due to the kill.

commit c2ffc601360ff9e55275d5d16b3ed8afdf00902b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 29 16:18:23 2016 +0100

    Decouple transport / nodeFetchOperation
    
    Moving some more logic into NodeFetchOperation so that
    TransportFetchNodeAction is only a small wrapper doing networking.
    
    This also removes the RamAccountingContext creation because it was
    unused. (The `totalBytes()` call always returned 0 because there were
    no `addBytes()` calls)

commit 14ea7cb8f5b149b9d67521578d96992e191c5ef0
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Nov 29 15:15:30 2016 +0100

    Fix and NPE (CombinedRow.leftRow = null) that can occur in NestedLoopOperation.RightRowReceiver
    caused by CompositeCollector calling doCollect() even if a Result.STOP is received.

commit 5b13dae38c9c7e7488ece613db1eae45976ab03d
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Nov 29 10:01:18 2016 +0100

    implement kill() on PageDownstream
    
    fail() was mis-used for kill and the exception was
    not forwarded to the row-receivers if the PageDownstream
    was repeating. this is true for a valid fail, but not for kill.

commit dbee26f6f0cb7205d79d3680850602dbf94572d1
Author: Michael Beer <michael@crate.io>
Date:   Mon Nov 28 16:01:37 2016 +0100

    fixed certain tests to ensure path compatibility in Windows

commit ddcc3de08e748f74fd996a62e274ce0af3b1fd8f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 28 15:45:05 2016 +0100

    Fix error propagation #2
    
    The fix in 86eebd85d54b31ca1b0caf064d004b0e89692c28 caused
    `testInvalidPatternSyntax` with seed `112E1807417E925A` to fail because
    of leaking contexts.
    
    This commit fixes that.

commit 5ca0fa068e4904fde336bd0a889813beefaf39bb
Author: Autophagy <mika@crate.io>
Date:   Mon Nov 28 12:26:13 2016 +0100

    Improved error message if func is unsupported with distinct + updated docs

commit f1fcae90e0821e5a75f438434f66e939a2d6becc
Author: kovrus <ruslan@crate.io>
Date:   Fri Nov 25 17:04:17 2016 +0100

    don't use bash extension in crate startup script

commit 744a8a2365f6572cb13083ed59151a6001552281
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Nov 25 16:53:42 2016 +0100

    added parser support for nested numeric factors

commit 537f049b6db9b0f872c0173e3924bc9fc07ff275
Author: Marios Trivyzas <marios@crate.io>
Date:   Sun Nov 27 15:46:36 2016 +0100

    Fix FindBugs problems

commit 3236aa2444f1aaac6fec53a086111c0ec308be02
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Nov 25 21:12:53 2016 +0100

    Use column alias in column missing from  error message.

commit b93b97a5749d98ab61ab768b3c0f655791b8cb9a
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Nov 25 20:47:08 2016 +0100

    Throw proper exceptions for SET operations

commit 86eebd85d54b31ca1b0caf064d004b0e89692c28
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 25 14:45:11 2016 +0100

    Fix error propagation
    
    If `localJobContext.start()` raised an error we by-passed the
    InterceptingRowReceiver and could therefore lose the original error
    information.

commit c9056c1b623c8d487e3a2b63ba56e2355453d7c6
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Nov 25 14:45:10 2016 +0000

    Added subscript support for `cast` and `try_cast`
    expression

commit ec91fd3149937c2a54e7bfabece1e445527ef647
Author: kovrus <ruslan@crate.io>
Date:   Fri Nov 25 12:20:35 2016 +0100

    update elasticsearch to 2.4.2

commit 598855ec6d005307666a007b498caae753625b38
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 25 13:44:05 2016 +0100

    Fix NPE in PutHeadChunkRunnable
    
    Uncovered by flaky RecoveryTests.
    The NPE was caused by my changes in bcbd83c5a9e26f2b21d8821e1596277ca03c2ecb

commit 8518ae487e3586ab70fa68b4e6d494410993e6d5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 25 12:03:34 2016 +0100

    Fix error handling to provide stack_trace via http
    
    With the removal of the transport protocol from the http layer
    (e9d5f6e3) the exception handling got broken.
    
    Even if a stacktrace was requested via `/_sql?error_trace` it wasn't
    generated on runtime errors.

commit bcbd83c5a9e26f2b21d8821e1596277ca03c2ecb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 24 15:46:12 2016 +0100

    Fix memory leak caused by File#deleteOnExit
    
    A temporary file is created for each blob that is uploaded. This
    temporary file registered itself to the DeleteOnExitHook - but since
    Crate is a long lived process this hook is never called and just keeps
    growing.
    
    To fix that the delete operation of the temporary files is now coupled
    to the DigestBlob & TransferStatus instances.

commit 2afd8782c0fe4cfd46b6b7ecc3932a3eac1ff789
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 24 23:43:39 2016 +0100

    Create ShardReferenceResolver manually instead of via injection
    
    Couple of reasons for the change:
    
    - The injector always created a ShardReferenceResolver, even for blob
      shards where it was never used.
    
    - Shard level injection will be gone once we update to ES 5.0
    
    - We added a custom interface just so the injector can differentiate
      between shard-refs and other references. This can be removed if we
      don't use injection.

commit aaf5a04a2afc1809e77e4e1777049e106c6e3ec0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 23 23:41:24 2016 +0100

    Add jmh to sql module + some pre-exec benchmarks

commit 3ec50b08bea5fa6a0b9cc7ad319b0e7036b99e56
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 24 14:08:59 2016 +0100

    Extract a BlobAdminClient from BlobIndicesService
    
    The BlobIndicesService should just be concerned with the life-cycle of
    blob indices & shards. Nothing else.
    
    `alterBlobTable`, `createBlobTable` and `dropBlobTable` fit better into
    a dedicated `BlobAdminClient` class.
    
    Similarly, the `fullIndexName`, `isBlobIndex` and `stripPrefix` methods
    fit better into `BlobIndex`.

commit 7512b610340016d7bea9d4315ccf2d31d863f873
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 24 16:36:22 2016 +0100

    Add forbiddenApi to all java modules, travis and docs

commit bfe6fa0a3a9c17b50b225ed70cf021ea4b271376
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Nov 23 15:25:27 2016 +0100

    removes obsolete LAZY_ARGUMENT function feature
    
    due to https://github.com/crate/crate/commit/3c6439ee76e7523ed00cb17d744e233f9dbbb946,
    this logic is not needed anymore

commit 8db6be81cfd80d2e9964cb7e0b98235e30132555
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 23 10:52:14 2016 +0100

    Change blob storage to utilize all data.paths
    
    - BlobIndex/BlobShard are no longer created using injection but instead
      the BlobIndicesService uses a LifecycleListener and manages the
      instances itself.
    
    - ShardCollectService is no longer a eager singleton because it depends
      on BlobShard which is now created after the shard-injector has been
      created.

commit 71eae73031ecf2d9ffefbadafa338befae9be639
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Nov 24 15:00:23 2016 +0000

    updated changelog to reflect 0.57.3 release

commit 6be43c0cbe85a6b676d64e4d0f92eda77e2db2c3
Author: Michael Beer <michael@crate.io>
Date:   Thu Nov 24 00:53:35 2016 +0100

    added scalar function ``latitude`` and ``longitude``

commit b93c0f9a7ad3c0a0f626a94bcd734071a8d665a5
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Nov 24 09:39:23 2016 +0000

    removed zero width spaces from join documentation

commit 2370149f121304a62eb5734e5bf163dad97b183d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 23 16:04:21 2016 +0100

    Change SQLOperations to be an eager singleton

commit 65f53587de88e556d3e4504d337ffd3af706b447
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Nov 21 14:03:34 2016 +0100

    fix flaky hdfs test

commit 2915628556f423003f7078531032a158fd97e94d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 23 11:58:47 2016 +0100

    Add `path` and `blob_path` columns to `sys.path`

commit 16e8bc85dcf9b6536bb5a3133f21546cd4b89cb2
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Nov 23 11:05:18 2016 +0100

    removes obsolete Scalar.containsNullLiteral
    
    beside it's not needed, it's calling Input.value()
    which could lead to inefficient multiple value() calls if
    not all inputs are null

commit 41b1dd28cc1ae90ba38459c5583ef26bd970ee22
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Nov 23 09:45:50 2016 +0100

    ensures Input.value() is only called once by all scalars
    
    cleaned up all scalar tests to use assertEvaluate/AssertingInput which fails if Input.value() is called multiple times

commit 748cc2fd941281c1ec007b633e248a92b3c13a25
Author: Claus Matzinger <claus.matzinger+kb@gmail.com>
Date:   Tue Nov 22 19:59:15 2016 +0100

    Updated path.data docs to reflect ES 2.x

commit 0f5e86411c9a9f30d3067b90845c8157735fa39b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 22 14:43:36 2016 +0100

    Change File usages to Path in blob module

commit 1256cd83992851a49e7e8323921920079aaad00d
Author: Autophagy <mika@crate.io>
Date:   Tue Nov 22 16:24:15 2016 +0100

    Cleaned changelog

commit 015067b15be8c494c21b6fdc11ec042f085ca916
Author: Claus Matzinger <claus.matzinger+kb@gmail.com>
Date:   Tue Nov 22 13:48:14 2016 +0100

    added CORS documentation

commit cce811ac4cd6f88d63679aa100f1b706a47cea5b
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Nov 22 09:36:27 2016 +0000

    updated version of crate-jdbc test dependency

commit 887e590bd94e21a06bc02da5630d71d519c0f51e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 22 11:53:52 2016 +0100

    Remove blobsPath setter from BlobEnvironment
    
    The BlobEnvironment can resolve the blobsPath itself instead of having
    the BlobService do it from outside.

commit cad7e2c13f6d8e0e15a057d25793b82e39b55818
Author: Autophagy <mika@crate.io>
Date:   Tue Nov 22 12:20:12 2016 +0100

    Updated changelog with 0.57.2

commit 6dbabc1846ae86321f86ccc1b79b51a3607de6f2
Author: Autophagy <mika@crate.io>
Date:   Tue Nov 22 12:25:28 2016 +0100

    Updated admin-ui to 0.21.3

commit 3bf497cde713a5492ce947c50d3b163fa0683f6e
Author: Autophagy <mika@crate.io>
Date:   Tue Nov 22 11:00:45 2016 +0100

    Updated Crash to 0.19.1

commit be68de7fda55566ba04671c301f9910d22a58705
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Nov 22 10:49:48 2016 +0100

    fix date_trunc scalar if `interval` evaluates to null
    
    expected is a NULL value instead of an exception

commit 157befeb0f249156cb69135876f294fd5be56869
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 21 15:23:35 2016 +0100

    Fix NL right-outer join error handling
    
    It got stuck when the right upstream called `fail`.
    
    `testRightJoinRightUpstreamFails` triggered the bug. The other two test
    cases are just for the sake of completness.

commit bb545408f688ae91592e54f43a7b30a2432b71f0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 21 11:42:16 2016 +0100

    Change jmh resultFormat to JSON

commit 2cfdf1c4863455eb98ae28cf489fb0c5a5439b1d
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Nov 18 12:15:10 2016 +0100

    New setting to control interval of TableStatsService periodic runs.

commit 4dc5649f7d981d1846406c3979850fde3a99c848
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 18 17:06:38 2016 +0100

    Fix jmh and update jmh plugin
    
    The commons-math3 exclude broke the jmh task (unfortunately that was
    only visible by looking at the files in the reports folder - the jmh
    task itself indicated no errors)
    
    This commons-math3 exclude was added in
    52090fe63848db128b07e8554d7fb74b9ef78e3f to fix a JarHell issue caused
    by jmh.
    
    I've not been able to reproduce this JarHell (tried running itest,
    regular tests, starting crate from distTar)

commit e937493ce4a22a476a437a65d38d976073a540d3
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Sun Nov 20 10:05:11 2016 +0100

    improved exception wording for COPY FROM without DIRECTORY url

commit 7d469f82892ec63634e70ab70b7899311bcc3f94
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Sun Nov 20 11:09:17 2016 +0100

    fixed flaky group by circuit breaker test

commit 4f4c9d874aca37ba77129a6de7a464b7200f4c3e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 18 14:00:25 2016 +0100

    Fix `1 = ANY([null])`
    
    Resulted in a cast exception instead of returning null

commit 13028180c21147ec50349c050cd9c7f474d9d56d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 18 12:05:33 2016 +0100

    Fix `1 in (null)` and `1 = ANY([null])` behaviour
    
    This commit removes the InOperator because the ExpressionAnalyzer
    rewrites IN into `= ANY`
    
    This also fixes the NULL value semantic for both IN and ANY:
    
    - No match & any null arguments -> null
    - No match & no null arguments  -> false
    - Any match -> true

commit 99db047ca41e25c3fcaca34eb92ce78d4e0a18eb
Author: kovrus <ruslan@crate.io>
Date:   Fri Nov 18 11:18:45 2016 +0100

    fix typo in the -Des deprecation warning

commit 3ff93bf7b87dc2e226304e7cc919837637c0f1b2
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 18 11:10:55 2016 +0100

    fix `cleanIdeaBuild` gradle task execution
    
    `es` submodule hasn't tasks by its own anymore
    so don't create a `cleanIdeaBuild` task for it,
    it doesn't work because of missing `clean` dependency

commit f5c737c255ed25a9df16ff4e526742573843c019
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 17 15:54:37 2016 +0100

    Change DistributingDownstream to avoid sending two pages concurrently
    
    There was a race condition which could lead to a "Same bucket of a page
    set more than once" error:
    
        upstreamFinished()
            hasUpstreamFinished = true
        onResponse()
            requestsPending.decrementAndGet() -> goes to 0

commit 3abc492f945d8cefc048fd8a8d37453a554f3401
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 17 09:44:42 2016 +0100

    Fix scalar subquery execution in query-then-fetch
    
    Fixes a regression introduced by c5e6798e4646587a5b33aa1afba581b20a2a1823

commit bd97ac4c4df729eb4a2528a5adb54bbf2aa8a223
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 17 13:30:15 2016 +0100

    Make sqllogictest python3.4 compatible
    
    Our Jenkins slave are still on python3.4.
    `glob.glob(..., recursive=True)` was added in python3.5.
    
    This commit replaces the glob usage with `pathlib` which is available in
    py34 as well.

commit 33ad67f6aac17b76fd55bede7e4c66c4c6652679
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 15 20:44:45 2016 +0100

    Add remaining sqllogictest test files

commit 0f0332b35d4bc0ae3c6a695b2de9ecb11473cb20
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Nov 15 15:31:22 2016 +0100

    COPY FROM now correctly resolves files within symlinked folders
    
    when wildcard is used in the path
    
    e.g. on OSX the /tmp folder symlinks to /private/tmp
    previously files that were placed in this folder were ignored when used
    `/tmp/*` as copy from url.
    
    this war really only an issue if the wildcard is directly after the
    symlinked folder. if you place your files in a subfolder of a symlinked
    folder, the problem did not occur.

commit 5c7121c7b20e34b0a909c8086fe7da604a514138
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Nov 16 12:44:51 2016 +0100

    fixes stuck NL if upstreams or downstream fails during operation

commit cb0159e642ac2494aeb9cf0fa8a3f400bb802fe4
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Nov 16 15:56:43 2016 +0100

    fixes iterator page downstream repeat error handling
    
    if an error happens during repeat, downstream must be notified.

commit 5d25bd1ec7d93ed1fe1a2c1cd23ca4a23d8ce333
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 16 13:34:51 2016 +0100

    Fix collectPhase normalize to not lose orderBy information
    
    Fixes a bug which was exposed due to the fact that using scalar
    subqueries can cause the collectPhase to be normalized again on the
    map-side.

commit 10cc54c23ceb35568299f28da332c1ed2890d22a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 16 15:27:36 2016 +0100

    Add support for operands with different types to CASE
    
    We enforce that all result-types match, but we didn't ensure that the
    operand types match.
    
    This led to `CASE x WHEN y THEN 10` to not match if x is an integer and y
    is of type long, even if the value was the same.

commit 1f2f7bde3892d0d4116b9647f68d420ec3396fcf
Author: kovrus <ruslan@crate.io>
Date:   Wed Nov 16 11:23:29 2016 +0100

    calcluate thresholds for low/high disk watermarks correctly
    
    Use available disk space instead of free disk space.
    The ES disk threshold decider uses available disk space for
    thresholds calculation and Crate node check use free disk
    space for the same purpose. This commit unifies the calculation.

commit 8f4f1e7798c39b18c25827854a7dfa7604748997
Author: kovrus <ruslan@crate.io>
Date:   Wed Nov 16 10:02:24 2016 +0100

    add misssing annotation in copy from test

commit 017b038bd08217349d7fed4ee16f02cc4e18f491
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 15 20:29:14 2016 +0100

    Prevent push-down of aggregations if there is a limit in the subquery
    
    This also enables certain rewrites where there is just an ORDER BY but
    no limit in the subquery.

commit 35fb1b3a5837fc1a1f27d7b81c49816d81ee721f
Author: kovrus <ruslan@crate.io>
Date:   Tue Nov 15 15:36:20 2016 +0100

    fix copy from into tables with the cluster by clause

commit 6055310d9eb80c308f7871da15b8f7439db5d2b9
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Nov 15 12:36:28 2016 +0100

    Fixed issue with ``BETWEEN`` operator not handling null values.

commit 3c6439ee76e7523ed00cb17d744e233f9dbbb946
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Nov 14 16:50:46 2016 +0100

    catches scalar normalization exception, return the function symbol instead

commit ae555e1bd8a391276b894e9da1721000746bc30f
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Nov 15 10:43:52 2016 +0100

    removed unused "format" from FileReadingCollector

commit ca43f0c36e9b1e4b3e2e0771cb1215f24e31b45e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 14 12:12:25 2016 +0100

    Add whereClause handling on global aggregation subqueries

commit 7848a8a753b80be5234411e42064aeecabaa779b
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Nov 10 09:32:13 2016 +0000

    Prevent adding columns with restricted names
    to dynamic objects

commit 54a69ad5de91d9dfa00706e4d365e12cbd11b263
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 14 13:49:24 2016 +0100

    Change RelationNormalizer to not do partial rewrites
    
    Having a partially rewritten QueriedSelectRelation makes it really hard
    to plan it properly because the outputs/fields are inconsistent.

commit 27ad723b53850caba46359150886735185dd91d3
Author: kovrus <ruslan@crate.io>
Date:   Mon Nov 14 10:19:55 2016 +0100

    show deprecate message only when -des is used

commit 36a12f9d053a4fe6e8319abd2a4491198efa10f6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 11 14:02:02 2016 +0100

    Use stored fields instead of fieldcache to read _uid

commit 0e5bbcdb309e55ed1f96d87e5c786d1a775e6dc1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 11 17:58:17 2016 +0100

    Add where clause handling to table function queries

commit ac6de5e72b4e106101effba9045e78c49a561188
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 8 11:49:34 2016 +0100

    Add support for global aggregations on subqueries

commit 24ad086e06044b3287d5f100d869d6ee5947ad30
Author: kovrus <ruslan@crate.io>
Date:   Wed Nov 9 16:59:19 2016 +0100

    support -C for passing crate settings and deprecate -Des

commit e1ca3042c9bafab56bfce6a3779c435fd30fa4d2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 10 22:41:44 2016 +0100

    Remove special collectNodeOperations handling from TransportExecutor
    
    This is no longer necessary because the ContextPreparer has been changed
    to prepare contexts by following the execution-graph from bottom to top.
    So the order of the node operations doesn't matter anymore.

commit 4eace7621ec27c16acec375205625838e558d7ce
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 9 10:36:32 2016 +0100

    Add github issue template

commit 3247353aa59d94496e06f756cb6c208324c929fc
Author: Rich FitzJohn <rich.fitzjohn@gmail.com>
Date:   Fri Nov 11 11:13:12 2016 +0000

    Documentation typo fix (#4420)

commit 35970c903ebbe6805c34a072e6983471316cfd03
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 10 12:19:53 2016 +0100

    Add support for aggregations on joins

commit d7aa76869d716f2c67064dd7cd9501aff70b1974
Author: kovrus <ruslan@crate.io>
Date:   Thu Nov 10 17:42:00 2016 +0100

    update changelog accordingly to 0.57.1 release

commit fd984f94de7b3ebcca27c10f5312df20085f09e7
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Nov 9 17:27:53 2016 +0100

    improved ram accouting for queries

commit 371a1d12f0eb4ac447c4a37d0aa9c7a4d364aeb0
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Nov 10 11:10:59 2016 +0100

    Move order by validation to QueryAndFetchConsumer.

commit 1d7f2057bb2cffcf3f28015ccaaab55ed57f4619
Author: kovrus <ruslan@crate.io>
Date:   Wed Nov 9 10:13:37 2016 +0100

    fix NPE in the percentile aggregation function

commit da4d66e0e8f53d51b9440e21bab44a8424fcb9af
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Nov 9 16:50:26 2016 +0100

    Fixed an issue with select queries returning duplicate outputs
    when `where` uses `=` with `primary key` and an order by which is
    also part of the selected fields is used.

commit b08a2792d550118b8c0ffd98caa33efc3aba8fa1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 9 16:23:38 2016 +0100

    nested-loop: Fix pause/resume handling on left-join null emit
    
    This is a follow up fix to d8ee4b204e634f6998676ac1c7440341cd532d1e
    
    That commit added a `exitIfFirstCallAndLead` call which sets
    right.upstreamFinished to true.
    
    This needs to be set back to false if the downstream requests a pause to
    prevent the left side from continueing sending rows.
    
    (After finish of the right side returns, the execution continues in
    setNextRow of the left side - see NL class javadocs)

commit 40f36095a001976a253f00f6899d88945e16ccaf
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Nov 9 12:36:22 2016 +0000

    Fix: adding a column to an existing object array
    using alter table failed

commit c5e6798e4646587a5b33aa1afba581b20a2a1823
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 9 09:00:54 2016 +0100

    Move scalar subquery planning into ConsumingPlanner
    
    Scalar subqueries were only planned on the root relation. With the
    upcoming "subquery in FROM" support it is necessary to do the
    scalar subquery planning for each sub relation as well.

commit 725034511354ea0074c0e468a17cd959f27cda87
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Oct 18 15:58:07 2016 +0200

    added Crate JDBC v2.0 to test process

commit 6e9979779c4bee013c37307cd75096292393c9bc
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Nov 7 17:42:36 2016 +0100

    fix NPE if invalid http was sent (empty headers)
    
    also change log-level from error to debug for
    unhandled exception due to invalid http requests

commit bfef5b594bee6e89fc3b46f5643979934db68a09
Author: Michael Beer <michael@crate.io>
Date:   Tue Nov 8 11:38:45 2016 +0100

    fixed tests of fs paths to be compatible with Windows platforms

commit 53cd78725e0f73dab8616db95a5aba6967ba8762
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Nov 8 10:38:24 2016 +0100

    streamlined gradle in the ES modules
    
    modules depending on ES sources are now having different javac options

commit d8ee4b204e634f6998676ac1c7440341cd532d1e
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Nov 7 14:35:42 2016 +0100

    fixes row missing while left-join an empty table
    
    follow up commit of https://github.com/crate/crate/commit/f74f25d5d04381bd8f1de9bb5bfa8ec9845f4f11

commit b24d84b652162e12326c76927735d505fd2b3f71
Author: Marios Trivyzas <marios@crate.io>
Date:   Sun Nov 6 18:21:00 2016 +0100

    Code cleanups

commit faefce8d9a4e5fef1d979a5e47e591eccaa58de9
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Nov 7 09:50:49 2016 +0100

    moved all modules with upstream sources under es module

commit ebdc8bc7def3f50f4cee62f0f21b31e3640d2fab
Author: Marios Trivyzas <marios@crate.io>
Date:   Sun Nov 6 19:33:11 2016 +0100

    Renamed main class to CrateDB

commit b418779bb10b00b29696313848a8cd1f5e7ef9d9
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Nov 4 15:26:14 2016 +0100

    split es module into es-core and es-testing
    
    this also removes the need to use the compiled classes for testing in intellij

commit f36ec12bf26ff54a5e7d7e30eebff2dd42a3479e
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 4 13:50:39 2016 +0100

    remove reduced stack size
    
    related to https://github.com/elastic/elasticsearch/issues/9135
    also sync JAVA_OPTS with current ES opts

commit 07e1b2781ea0d237fecfbf296e3690274db73aa7
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Nov 4 10:01:42 2016 +0000

    Fixed typos which caused ColumnUnkonwnExceptions
    when selecting os_info[‘jvm’][‘vm_vendor’] and
    os_info[‘jvm’][‘name’]

commit 958ebf3d5f2c684564acb89fe9aa1bf82c58b808
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 4 09:30:12 2016 +0100

    fixes rewriting of outer join conditions

commit d64402d52932a8c2b0ed6a2610b476b454fa71cb
Author: meriamk <meriam.kharbat@gmail.com>
Date:   Thu Nov 3 17:50:26 2016 +0100

    updated crate-admin to 0.21.2

commit ca58380e281daa2d3bc7e527de0a5c35c8d4e5bc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 3 16:45:13 2016 +0100

    Prevent NL with empty left side getting stuck on right join

commit 3844e88e253abe320fe16eb66e86294b330911d0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 3 15:47:43 2016 +0100

    Extract CombinedRow into a separate file

commit dbb7a44012f977a2b249c5cc1e3cf5a0dba19cc3
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Nov 3 15:38:17 2016 +0100

    use a version.properties file for defining versions of common dependencies
    
    upgraded elasticsearch-hadoop to 2.4.0

commit 89e03410a2ba7c0c504a4e451af97b308ce24d7e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 2 17:43:22 2016 +0100

    Fix flaky testQueryNameFromSysOperations
    
    Due to the planner changes it can be that there is no MergePhase at all
    if there is only one node in the cluster.
    
    Due to timing it can than be that the sys.operations entry of itself
    isn't picked up.

commit 4cd631ac59c0a3d731dc3dbee34125431d8b68fe
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Nov 2 20:33:33 2016 +0100

    Method renaming, method move, remove unused inner class

commit 8b45e3c16ffb06cdfd8f1a794a9c62157f2d3e27
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Sep 21 11:03:28 2016 +0200

    Refactor by extracting inner public class

commit 738f038feda21dfe3cd9366d221fceead368fe50
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 2 17:12:12 2016 +0100

    Replace AggregateFunctionReferenceFinder with Aggregations.containsAggregation

commit 67eb1cebfee80c61ab3e8ee7bc0e5cf0d51abb8a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 2 15:45:37 2016 +0100

    Replace replaceFieldReferences with QS.replace

commit 852b715f655912c3bdbc5495c76cc85a69241a6e
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Nov 2 17:26:46 2016 +0100

    Remove deprecation logging for camelCase names in CREATE ANALYZER statements

commit f74f25d5d04381bd8f1de9bb5bfa8ec9845f4f11
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 2 14:08:23 2016 +0100

    Fix left-join empty result bug

commit a2bff1e39fc8b5d42210e17c6d2b9f5f2059dceb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 2 13:53:33 2016 +0100

    Remove pageDownstream usage from NestedLoopOperationTest

commit 31607621817018cf6ccbbf5b34ba3a7a17f0d73f
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Nov 2 15:43:12 2016 +0100

    fixes expression analyzer tests
    
    expects IfExpression to be unsupported, but its supported now

commit b2f6ee8b9edcea2852894cb57bee30c24c7d7f49
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Nov 2 15:17:07 2016 +0100

    adds if scalar support

commit ec8d46f6438ffd18b5a90a5a0b86170e64bd22f9
Author: meriamk <meriam.kharbat@gmail.com>
Date:   Wed Nov 2 10:42:03 2016 +0100

    updated crate-admin to 0.21.1

commit d4a56c95e11dcd8a341605347ba64aefdc0dd3b1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 28 09:58:08 2016 +0200

    Remove isRootRelation knowledge from consumers
    
    This commit changes the consumers contract.
    A consumer now plans as distributed as possible and no longer cares if
    it has a parent relation or not.
    
    Any information that is necessary to merge this distributed result has
    to be provided in a ResultDescription which can be picked up by a parent
    to create a handler-merge.
    
    This changes some execution plans slightly. For example, an insert with
    a distributed group by in a subquery will now execute the inserts from
    the reducer nodes instead of from the handler node.

commit ce72f251af5d3c26a5f3dbdfb9df0752ac5636b4
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Oct 26 14:45:40 2016 +0200

    implements CASE expression support (F261/F262)

commit 3d1b99deae7503b7afa1359032824d6590840fde
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Oct 31 15:46:32 2016 +0000

    removed sql request and response classes from sql package and
    simplified SQLTransportExecutor

commit 66795535bec8e44a8667af1d7d66f3a7161d72c9
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Oct 31 21:33:45 2016 +0100

    Fix condition for subselect rewriting with order by and limit on inner relation

commit cb9f0767de77199bb4bfe542c5a769bd6ceaed74
Author: kovrus <ruslan@crate.io>
Date:   Mon Oct 31 14:00:01 2016 +0100

    remove ``schema_name`` from information_schema tables

commit 41c5876dfdaf417107f8221db2c588783d2e1d11
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Oct 27 16:37:12 2016 +0100

    deleted TransportSQLAction

commit 8bb08bc6936ec35e02b7f0174c62ebe94aa6b6cd
Author: Autophagy <mika@crate.io>
Date:   Thu Oct 27 16:15:55 2016 +0200

    delete client module and update gradle

commit 769a767307ccdd0752c8824703151ba7f4f9ce90
Author: Marios Trivyzas <marios@crate.io>
Date:   Sun Oct 30 21:44:57 2016 +0100

    Update 3rd party dependencies

commit 989b5ed13eb6875332b4a8166913dd288eeb864e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Oct 30 17:02:12 2016 +0100

    Optimize PositionalOrderBy streaming
    
    Instead of writing an extra boolean now only the size is used.

commit ebdd7c40750294f2566d19fe87e7833fd4426e0b
Author: kovrus <ruslan@crate.io>
Date:   Sat Oct 29 11:38:37 2016 +0200

    add UnaryScalar to compose f(T) -> R

commit 3a1d81b922d6456f7b74e756c41cd5aa62b77774
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Oct 29 17:39:15 2016 +0200

    Remove outputs setter from TopNProjection
    
    Too easy to forget setting them if they're not part of the constructor.
    The outputs aren't optional but required in order for a TopNProjection
    to make sense.

commit 8462b05ee37f1687e871674b5f4b25a7b279c12d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Oct 29 10:21:56 2016 +0200

    Remove setters from GroupProjection

commit 353d915e3450be4625efe48aa99bdd90d4c20d8d
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 28 16:48:46 2016 +0200

    converts FunctionInfo flags to features() EnumSet

commit dbdea2ce79462a4a141d41ee9143ab0081b25f01
Author: kovrus <ruslan@crate.io>
Date:   Fri Oct 28 13:15:09 2016 +0200

    remove duplicate rowcount from http response

commit 8ee7b54e388cf8cb1ca9f79e3fb6e0138435824d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 28 16:40:33 2016 +0200

    Replace CopyTo plan with Merge

commit 7b14c41a32baf58b3605e6c6fc1058ad702afb0c
Author: kovrus <ruslan@crate.io>
Date:   Tue Oct 25 15:29:16 2016 +0200

    add support for the search_path session parameter
    
    The schema name can be set now with the `set session`
    statement, e.g. `set session search_path = schema`

commit 127528cd9036b22ed5327468558836ff45f1d093
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Oct 28 16:32:45 2016 +0200

    Fix check for subselect mergeability

commit 0d1d66c34c558e62be454396134167f787ea6ee2
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Oct 26 14:41:22 2016 +0200

    Fix an issue where subselects are being rewritten but they shouldn't be
    as this changes the semantics of the whole query and produces wrong results.

commit 032da397a2031f33efc09554ef7ce48db44cd726
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 28 14:01:32 2016 +0200

    Remove `extends Streamable` from Symbol to make most of them immutable
    
    We already use Symbols.toStream/fromStream to serialize symbols so it is
    not required for them to implement Streamable.
    
    We can have a custom method/interface that allows us to make the
    attributes final

commit 4ca3c0e71c16b06a12bacdc0f4b58f405280c821
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 25 14:19:03 2016 +0200

    Add a separate Merge plan

commit b73fb879ce46a4d668a67fc9071ed56187c2d703
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 28 11:25:50 2016 +0200

    Add OrderByPositions class to encapsulate indices, reverseFlags & nullsFirst

commit 5bb81a89279c9a1975b3e3784ab01395f81ee53e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 28 00:32:29 2016 +0200

    Make use of ctor method ref for Delete DMLProjector creation

commit f2fcb633829b62a9074ba5ea4c91048fde9f2a61
Author: kovrus <ruslan@crate.io>
Date:   Fri Oct 28 08:45:29 2016 +0200

    remove comparator from data types
    
    Prefer the `::compare` method reference

commit e4989c7746fb91d0226d173f152471bc8f4ca7b2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 28 00:15:57 2016 +0200

    Add a DoubleScalar to compose (double) -> double functions into Scalars
    
    And adopt the TrigonometricFunctions as example how it can be used.

commit 9588f505ba4a0fc7aebd6846989382d2df7e48a5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 27 17:31:26 2016 +0200

    Drop java7 support

commit 5f19455c136c478121f7e5eece2f9c0bd62fa815
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 27 17:05:32 2016 +0200

    Remove distributionInfo from ResultDescription

commit 36aad37bc2834f67d9522867c5e173b042c31661
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 27 15:47:30 2016 +0200

    Remove distributionInfo set calls from Executor/NodeOperation
    
    The implicit SAME_NODE optimization is now implicitly detected by the
    ContextPreparer. So it is no longer necessary to change the
    DistributionInfo.
    
    The distributionInfo should only be changed by the planner.

commit d5cca35a2aa99561e3bb688d7d45ce3e9017e7ba
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 24 14:10:17 2016 +0200

    Add ResultDescription interface
    
    It replaces `isDistributed()` and `upstreamPhase()` on the Plan
    interface.
    
    It will eventually receive more properties - all that are required to
    create another MergePhase from a parent plan/relation.

commit f7f74160b047c5f18effbd3d875e17ec0091013b
Author: Michael Beer <michael@crate.io>
Date:   Thu Oct 27 12:21:45 2016 +0200

    update snapshot version

commit c63c32c8b98b45e6c3410f2554576ee09fdcd301
Author: Michael Beer <michael@crate.io>
Date:   Thu Oct 27 10:50:59 2016 +0200

    prepare release 0.57.0

commit 0745317f0bc39e7c6d95d7700e29545de4752aca
Author: Michael Beer <michael@crate.io>
Date:   Thu Oct 27 10:48:51 2016 +0200

    updated Crash to 0.19.0

commit c58f92be9e03785493a66fa817ff29ac51311624
Author: Michael Beer <michael@crate.io>
Date:   Thu Oct 27 10:42:43 2016 +0200

    updated crate-admin to 0.21.0

commit a1949131c418455b3d734d57ad45f79b7a9867c9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 26 13:11:21 2016 +0200

    Remove prepare from RowReceiver
    
    prepare() was a bit troublesome:
    
    - In some cases it was never called (For example chain.prepare was never
      called for node-level projections with a single CrateDocCollector)
    
    - wrapping RowReceiver's was tricky because prepare calls couldn't be
      forward if the projector being wrapped was part of a
      FlatProjectorChain.
    
    - No RowReceiver used it except the Update-/DeleteProjector.
      This commit changes the Update-/DeleteProjector implementations to use
      a composition pattern instead of inheritance to remove the prepare()
      requirement.

commit 43ba09f3687f647eb249543a2e5ba7e8abae55f1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 26 14:21:51 2016 +0200

    Remove return value from prepareSourceOperations
    
    It always just returned an empty list.
    The contexts are actually registered in the innerPreparer while the phases are
    being processed.

commit b006e410891288938805a61ac791c984022d52a0
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Oct 26 00:37:53 2016 +0200

    Add assertions when trying merging between parent & child relations

commit dc7bdde8c8f6f7875cc2831734c5c414f5a2f940
Author: meriamk <meriam.kharbat@gmail.com>
Date:   Thu Oct 13 09:49:48 2016 +0200

    change order of core-module/admin-ui-plugin registration

commit 686805099cf5850f5f03543265e11e1fb6d435eb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 25 20:35:37 2016 +0200

    Remove isRootRelation flag from getLimits
    
    It was used to decide if a softLimit should be applied or not.
    This was checked on each relation on each consumer.
    
    This commit changes the logic to apply the softLimit once on the
    rootRelation.

commit 8c90b224a7ff334c99e04e38710e0029e998781c
Author: Michael Beer <michael@crate.io>
Date:   Tue Oct 25 20:29:19 2016 +0200

    update changelog to reflet release 0.56.3

commit db50e6271e2c5b1d624a1a9fc327fa624fd93ad1
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Oct 25 16:47:50 2016 +0200

    Fix ordering of order by symbols in case of rewritable subselects.

commit 1b47afd51837ff0f723330a9e21712c1c347a4a4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 25 15:03:56 2016 +0200

    Add docs to FetchPushDown

commit c9324a23826e1a81b51df0b6218a598652706925
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Oct 25 13:34:29 2016 +0200

    point to new ES branch with additional test fixes

commit 6c06534fb087e74d3c19acc68e603c76ea7d9370
Author: kovrus <ruslan@crate.io>
Date:   Fri Oct 21 18:19:25 2016 +0200

    move parameter context from set statement analyzer
    
    This PR prevents the appliance of CrateSetting in
    the analyzing phase. The settings appliance logic
    and parameters context are moved down to execution phase.

commit f14149c33a8e800c08db7647507e8b8875df1bb6
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Tue Oct 25 12:01:51 2016 +0200

    corrected docs about conf parameter

commit 4f68d8b4c6e87a051e288ee437c9f6f3700a8c9f
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Oct 24 22:35:17 2016 +0200

    register ClusterStateListener only onStart of LifecyleComponents
    to be sure that the ClusterService is accessible already
    
    - all SchemaInfo impl. won't listen to the cluster state directly now but
      instead are called by the Schemas cluster state listener
    - default `doc` DocSchemaInfo will be registered by a cluster state event
    - all remaining cluster state listener are converted to LifecyleComponents

commit da02eb46a55d72b112010e461cd3eb1d8689bb8a
Author: kovrus <ruslan@crate.io>
Date:   Mon Oct 24 10:52:52 2016 +0200

    fix npe in distinct function for null values
    
    For cases like:
    
        select distinct cast(null as integer) + 1
    
    The distinct function results in comparison of literals which
    contains null values. The comparison logic was throwing NPE.

commit 38592deb1b362b6ae7f7b548250ce6d07a5d9800
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 24 16:08:53 2016 +0200

    Remove NoopPlan transformation from NestedLoopConsumer
    
    Just because a sub-plan doesn't have any executionNodes doesn't mean
    it's allowed to return a NoopPlan instead of a NestedLoop.
    
    This only worked because we don't have aggregations on joins yet. Once
    that is supported it wouldn't work because even with empty tables
    aggregations still result in 1 row.

commit aaa0b225ea3b60fef9cc8ee7b3914f89610e5e2d
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Oct 24 14:45:53 2016 +0200

    upgrade to ES 2.4.1

commit 8cf8eecf056c683a249839cf1c790430b0c1d5e4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 24 11:19:10 2016 +0200

    pgwire: Change type mapping from unknown -> json to unknown -> varchar

commit 20cff915e5996c430e18551cb78a2d00c57737c9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 24 10:35:59 2016 +0200

    pgwire: Add flush message support

commit 50acdee9c5ebd850a908cbd6c9b04222008fde8f
Author: Marios Trivyzas <marios@crate.io>
Date:   Sat Oct 22 00:09:11 2016 +0200

    Fix issue with Lucene GeoPointInPolygonQuery.
    Revert changes made by commit: ee3f7b78e8df667dd52e4c1a64ccc20aaf0e53ea
    until https://github.com/elastic/elasticsearch/issues/20333 is resolved.

commit c2c61a89a6cd9b13c377634446b019c64ba78118
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 21 14:51:50 2016 +0200

    Remove PlannedAnalyzedRelation
    
    There was no PlannedAnalyzedRelation which implemented AnalyzedRelation,
    so we basically only had Plans.
    
    This commit therefore removes PlannedAnalyzedRelation and moves the
    functions that were specific to Plans into the Plan interface.

commit ae8aa08c0c45d2df44abd6c510bc8d8ffcaeb0b6
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Oct 21 10:46:43 2016 +0200

    updated crate-admin to 0.20.4
    
    changelog will be normalized on release

commit 0a9bc018098b357255eae20b5f99d194ffa6f4e2
Author: Autophagy <mika@crate.io>
Date:   Fri Oct 21 10:37:24 2016 +0200

    Added documentation for CRATE_JAVA_OPTS environment variable

commit a27db306f5fb5b2b07ae9a01cfe3c979aec2c403
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 19 15:32:32 2016 +0200

    testing: Add group by/having/order by subquery tests

commit 124bf585276be7c316d3eb97851a34ee6cfe654c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 19 14:23:59 2016 +0200

    Remove subQueryAnalyzer usage from Delete/Update analyzer
    
    In order to have better error messages for users because the planner
    doesn't handle subqueries yet in delete/update statements and the error
    messages there are more cryptic.

commit b194bd1f761efb91075c54af64298f9d95d4a732
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 19 14:08:52 2016 +0200

    Add subquery documentation

commit a93ce95b247c6c6a6125d8bf62a8f1b0988cab0c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 18 17:20:21 2016 +0200

    Extend PlanPrinter to handle MultiPhasePlan

commit b0bb3722747d96072f28a47a396672446972112d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 19 09:30:54 2016 +0200

    Fix empty result handling in single row subqueries

commit e7a32aaec55b841e85375589f364edb8d3ffcd22
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 18 16:53:26 2016 +0200

    Add cast function evaluation to ESGetTask
    
    The GetTask evaluates `id()` of DocKeys which internally uses a
    SymbolToValueVisitor. This visitor can't evaluate cast functions.
    
    For example:
    
        WHERE int_col = (select long_col)
    
        Becomes
    
        WHERE id = to_int((select long_col))
    
        Which after executing the subselect becomes
    
        WHERE id = to_int(10) <-- this then failed

commit 14a3d0b557d80660a8889c8e6fb5085f6c49ebe4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 18 15:09:14 2016 +0200

    Add single row sub-select support to joins

commit 2ef4a24fe7d485bfa4fff2164beb8ef3a984919f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 18 10:32:28 2016 +0200

    Add support for sub-queries in selectList and as root symbol
    
    This changes the replacement logic to not depend on the QuerySpec but on
    the Plan.
    
    Replacement on the QuerySpec only worked if the SelectSymbol was a child
    of a Function.
    But it wasn't possible to replace SelectSymbols which are at the root
    level because the QuerySpec itself isn't used in plans.

commit 8951a9220122f060edb1c8d68b79873dd897b627
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 17 17:52:25 2016 +0200

    Remove rowType
    
    The RowType would be more correct but it is not really necessary for now
    and just makes things a bit more complicated.
    
    This commit removes it in order to support ANY & LIKE.
    
    In addition, this will also enable implicit casts for cases like
    `long_col = (select int_col ...)`.

commit 48596df150cb776041829b63ff94314a59235da4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 17 13:45:07 2016 +0200

    Add support for subqueries to match predicate

commit 9032fd70d761f00236c35b239f6ae9e31f42dba4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 14 17:02:55 2016 +0200

    Add subquery planner & executor support for select statements

commit 9b1be566eec67ba5794e3d1ca8e3e79862f57042
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 14 11:08:48 2016 +0200

    Add subselect support to the analyzers

commit 2f11164d7c2e80df1477c4be766560203ff8aead
Author: Michael Beer <michael@crate.io>
Date:   Wed Oct 19 12:18:42 2016 +0200

    added standard sql + postgresql compliance doc

commit 5ee40dad5cb84279cc6fd51457ee298ff55bb448
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Oct 18 17:27:18 2016 +0100

    rephrased parts of the scalar function documentation
    to improve readability

commit d1a6387df29d09d7fc1c374d81c6a2748a50029d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 19 11:24:18 2016 +0200

    Add value expressions documentation

commit 23ae63bd3cccd766cacd91f81a081b0c735e295f
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 18 12:04:54 2016 +0200

    MultiUpstreamRowReceiver must not call prepare() on its delegate
    
    Preparation of the delegate must be done elsewhere.
    Actually it is already like that, and so multiple
    prepare() calls could falsely happen.
    (e.g. the delegate is a projector chain member which
    caused the delegate to be prepared through the projector
    chain and by this)

commit b0c61e7162c6797bb0c2c88b7518b767aca4d094
Author: Michael Beer <michael@crate.io>
Date:   Tue Oct 18 12:16:32 2016 +0200

    update admin-ui to 0.20.3

commit 2368df21ba95f76e2e8e73106b09088e5c7ec4ba
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Oct 18 00:06:55 2016 +0200

    added CURRENT_SCHEMA system information function

commit ed06107d02638c9dce494e46db77cdbc3b4c0aca
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Oct 18 08:02:55 2016 +0200

    reduce ESLogger.isTraceEnabled calls since it is expensive

commit 8e06a0e44a801d2740ffbe22219349145a831fb8
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Sun Oct 9 18:10:27 2016 +0200

    added information_schema column table_schema in order to be SQL standard compliant.

commit af9a858724f675a17cfaf188cd3d9cd6ff31400b
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Oct 17 15:25:46 2016 +0200

    Treat limit and offset as longs during analysis

commit 78d7cdf932c4db00a7da4224fa1c993571a04be7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 14 21:43:20 2016 +0200

    Clean up array_unique & clarify cast behaviour

commit f348efe8d40e582072fe39e96a40c1a01422f200
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 17 10:58:41 2016 +0200

    Remove subPlan re-creation in SelectStatementPlanner

commit 797a401b7a868e291f90115b98f42db9b8e1f9e6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 14 20:43:04 2016 +0200

    Change AndOperatorTest to utilize AbstractScalarFunctionsTest

commit f9cb036ecc2076ea2cdd1b0774c921fa95c5fc06
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 14 21:07:37 2016 +0200

    Clean up LengthFunction & tests

commit 000d2fee5235c0aa8651ef8e476b2378a6ae80ae
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 14 21:49:50 2016 +0200

    Add psql publish_address logging
    
    Similar to the existing http/transport log entries:
    
        [http       ] [Pointe de Comborsier] publish_address {192.168.0.19:4200}, bound_addresses {[::]:4200}
        [transport  ] [Pointe de Comborsier] publish_address {192.168.0.19:4300}, bound_addresses {[::]:4300}
    
    This adds a log entry for psql as well:
    
        [psql       ] [Pointe de Comborsier] publish_address {192.168.0.19:5432}, bound_addresses {[::]:5432}

commit a7e2484adb34dca8e35f788f1c03c8ca72a7c147
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 14 16:14:52 2016 +0200

    Extract group by tests from PlannerTest into a separate test class

commit a289086e9cbdd9cfe8c24fcdd53a5d90d22c5aee
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 14 14:34:34 2016 +0200

    Simplify some symbol matcher implementations

commit 9ccf56cfffc3d63f685c74b26331b7ccd396e650
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 14 14:14:12 2016 +0200

    Extract symbol matchers from TestingHelpers into SymbolMatchers

commit a7a694c9e1dd017bf5edeb65eff5572914a6e474
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 14 13:22:43 2016 +0200

    Extract explain tests from PlannerTest into a separate file

commit 5ec359b351e3a15844c8d3b34d4805cad442e33e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 14 10:34:34 2016 +0200

    Move cast function creation into CastFunctionResolver
    
    This will allow us to have additional logic there to in some cases omit
    the cast function.
    
    For example in a subselect case `WHERE x = (select x ...)` we don't want
    to have `eq(x, to_string((select...)))`

commit 10d7de843dd89cdf3ee81d8217c928f07cb6e421
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 14 13:12:54 2016 +0200

    Remove unused declarations

commit 8cf63c588412177c5412a7d930dcc9a4bc41fbb3
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Oct 13 22:25:04 2016 +0200

    Code improvements

commit ad2405939dd0b89fb4cf6dbd686737404ca6c45d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 13 17:42:17 2016 +0200

    Remove injections & remove MockedClusterServiceModule

commit a855d66ba7a43422a699ef531666782baf740ee7
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Oct 13 18:16:58 2016 +0200

    updated changelog to reflect release 0.56.2

commit 5795826ceea20c5f49b55e1d8583fa21021cfc29
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 13 15:06:53 2016 +0200

    Remove mocks from remaining analyzer tests

commit 3e11d6df5e53502b225d43be7470be4c017eaf38
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 13 16:31:05 2016 +0200

    Encapsulate some deps. in a BlobTableInfoFactory
    
    Similar to 34135e7c3bfc2fa363a4b24561f4d71f40493c77

commit fa1145c436f577b8faf9585effbd374bf15ceb39
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 13 14:18:35 2016 +0200

    testing: Remove mocks from ShowStatementsAnalyzerTest

commit 9f0d1ec93600e4a920c5e285f395cf6d5a2ae142
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 13 14:02:55 2016 +0200

    testing: Remove mocks from snapshot & sub-select analyzer tests

commit 9490259a03b887943e06376b92bb134d16b0539e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 13 10:59:55 2016 +0200

    testing: Remove mocks from SelectStatementAnalyzerTest

commit a0923396fbb07b51575664aaef295d092ae065da
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Oct 12 14:21:58 2016 +0200

    prefer milliseconds unit for timestamps that are ambiguous
    
    such as `"1000"`, which could be interpreted as `1000-01-01T00:00:00Z`
    (as in year `1000AD`) or `1970-01-01T00:00:01Z` (as in `1000ms`
    since-the-epoch).
    
    This change only effects INSERTs into tables that have been created after this
    change.

commit dd54c3cc1513ecd00dd2e2d3f5e4dca19baef884
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 13 15:54:44 2016 +0200

    Remove DocIndexMetaData usage from BlobTableInfoBuilder

commit 34135e7c3bfc2fa363a4b24561f4d71f40493c77
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 13 10:43:02 2016 +0200

    Encapsulate some deps in a DocTableInfoFactory
    
    Most dependencies of ReferenceInfos & DocSchemaInfo were there because
    they're required to create a DocTableInfo.
    
    Due to this we mostly mock Schemas, SchemaInfo or DocSchemaInfo in
    tests.
    The goal of this commit is to make it easier to use the real instances.
    The advantage is that we test more production code and less mocks.

commit b02dc85a706f384960bb49222c47f7d90e321069
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 13 11:02:04 2016 +0200

    testing: Replace sleep() calls with random()
    
    Avoids using a testing-only function in favor of one that has the same
    properties (undeterministic) but is a production function.

commit 7ffd0e4fd92b8fe8b2c8b51d8c42d7e5c726db01
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 12 16:41:55 2016 +0200

    Change Analyzer to create sub-analyzer without injection
    
    Currently creating an analyzer for unit test purposes involves a lot of
    trial and error to figure out which modules are necessary to bind
    because the dependencies are not clear at all.
    
    The goal here is to be less reliant on guice and do more stuff directly.
    The advantage is that dependencies are more explicit and we can make
    more stuff package-private.
    It also forces us to think more about dependencies. Adding dependencies
    will hurt so we'll try to reduce them.
    
    This is also the main disadvantage: More files have to be touched if a
    dependency is added.
    
    With this change creating an analyzer in a test would look as follows:
    
        analyzer = new Analyzer(
            Settings.EMPTY,
            schemas,
            getFunctions(),
            new NoopClusterService(),
            mock(IndicesAnalysisService.class),
            mock(RepositoryService.class),
            new RepositoryParamValidator(Collections.<String, TypeSettings>emptyMap()));

commit 1ab91f127c8bb1ec1effa05e183975935a6206cc
Author: Andrei Dan <xdanootz@gmail.com>
Date:   Sun Oct 9 23:59:43 2016 +0100

    Add the "power" scalar function

commit 24f0b989a5bae489b3a231908a0e6554f3980ac2
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Oct 12 19:43:41 2016 +0200

    Use a ratio (0=disabled, 1=always enabled) for @UseJdbc

commit e7ad10c2cd89b1b9943f4d3c5a3b75d26fa6f802
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 7 22:15:43 2016 +0200

    Add support for BETWEEN

commit 30f56d6e797cd1d79077dc29737acf7afe8aaa3c
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Oct 12 16:59:52 2016 +0200

    updated crate-admin to 0.20.2

commit 56f2811226e75781ac811c6e4db566492d34f3b8
Author: kovrus <ruslan@crate.io>
Date:   Fri Oct 7 14:07:38 2016 +0200

    add `ARRAY[]` ctor and support expressions in array ctors

commit dba9febb90b285532336d2aa669478c9e3ac4620
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Oct 12 11:03:38 2016 +0100

    updated crash to 0.18.1

commit 17bda12378a84ebe890ab909d4d6092bf956e4eb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 10 11:31:46 2016 +0200

    Move relation normalization into RelationNormalizer

commit 9aebe2892b0744d6b3029789bc75e0256a29298a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 12 13:38:43 2016 +0200

    testing: Add value() calls assertion to avoid duplicate evaluations
    
    We've had performance issues in the past due to repetitive input.value()
    calls. See 9dc24196f2cf0c3d900ac61389473dfffb51e117
    
    This commit extends AbstractScalarFunctionsTest to wrap inputs into an
    asserting Input which verifies that `value()` only receives one call per
    evaluation.

commit 954cc957e5422bb136f023b58d04e564d9adde37
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 12 15:03:51 2016 +0200

    Remove repititive value calls from substr and date_format

commit a1b1e71346542a43b8e5537bf72a24144b2596dc
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Oct 12 12:41:13 2016 +0200

    fixed postgres timestamp string format for dates before christ (B.C.)

commit e019a501e6b2aa8235cf34fbbd18ebffdea65647
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Oct 12 13:45:04 2016 +0200

    Refactor by extracting inner public class

commit 70e83703cc80be3de832839997354a7db04321a2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 12 11:24:10 2016 +0200

    Add no-query assertion to SingleRowSource
    
    The SingleRowSource doesn't use a RowFilter so it needs to make sure
    that there really is no query on the whereClause. Otherwise it would
    return a row even if there is a query which hasn't been fully evaluated.

commit 303c92b7017af6570d3f1f5b978f688727670c25
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Oct 11 18:51:39 2016 +0200

    prevent NPE when creating stacktrack for postgres response

commit 37956563e882c54e474b3c3345b1e52960fea1a5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 12 09:51:32 2016 +0200

    Fix javadoc formatting in TransportExecutor

commit ea2477f76890fabd11d18c95f669c8993d415a4d
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Oct 10 13:49:35 2016 +0200

    Removed arbitrary limit on timestamp values.
    
    Now also dates before 1653-02-10 and after 2286-11-20 are supported.

commit e3d5ec4cc821aec3a2099048a787d7a0ff108bf6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 11 21:32:12 2016 +0200

    pgwire: Change server_version format to dotted notation
    
    Some clients can't handle the numeric form (For example npgsql).
    libpg also parses the dotted notation so using this should be fine:
    
        https://git.postgresql.org/gitweb/?p=postgresql.git;a=blob;f=src/interfaces/libpq/fe-exec.c;h=87ff5659ff35ef63081af161e9e850cacbdfedb9;hb=HEAD#l985

commit bed4cb78bfb53ea666e0c0263a77026b0e283d09
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Oct 11 18:49:36 2016 +0200

    Refactor by using MergePhase.mergePhase() method

commit 5eb5c91f092dc5dba4366fc904ba9d931035f2cc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 11 10:38:12 2016 +0200

    Add debugging means to sqllogic-tests
    
    We've had the sqllogic test getting stuck on Jenkins. By adding
    faulthandler & stats.enabled it should be easier to figure out what was
    happening the next time that happens.

commit 7a6553fd93d5838fc08fdd19eb716f1a51faf5c2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 11 11:16:25 2016 +0200

    Add warn logging to Exceptions#unwrap

commit 319b215746f5dd7a564f50f0e2aa251c7a873117
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 11 11:03:34 2016 +0200

    Extend gradle logging to include stacktraces
    
    Before on an error only the exception message was printed without the
    stacktrace:
    
        SQLActionException: INTERNAL_SERVER_ERROR 5000 VersionConflictEngineException: [default][1]: version conflict, current [2], provided [1]
    
    Now the the stacktraces are printed as well. This should make it easier
    to investigate failures happening on travis or jenkins:
    
        SQLActionException: INTERNAL_SERVER_ERROR 5000 VersionConflictEngineException: [default][1]: version conflict, current [2], provided [1]
            at __randomizedtesting.SeedInfo.seed([77EA16E28A5A1C17:90F9683BBC4E8210]:0)
            at org.elasticsearch.index.engine.InternalEngine.innerDelete(InternalEngine.java:598)
            at org.elasticsearch.index.engine.InternalEngine.delete(InternalEngine.java:558)
            [...]

commit 96690c49cd11f089a79a2308375c50a1380cf2d8
Author: Mika <mail@autophagy.io>
Date:   Tue Oct 11 09:57:47 2016 +0200

    Updated documentation explaining 10k select limit when using PostgreSQL protocol

commit 2eeb65a44f85b38a0c2ce2ae72b98022761c822c
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Oct 10 10:10:21 2016 +0100

    expose bound psql port in sys.nodes table

commit f76a3e1148c0e4a11fcbb79d0ed0ca3f42975b3b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 10 17:38:09 2016 +0200

    tests: Improve PSQLException->SQLActionException conversion
    
    This commit extends the PSQLException->SQLActionException conversion to
    re-create the last StackTraceElement.

commit e7ec41e116dba9d581fcb276ae21dea7c50dcad7
Author: Michael Beer <michael@crate.io>
Date:   Mon Oct 10 13:33:02 2016 +0200

    enhance ANY operator test
    
    ensure that positional subscript index returns valid results if nested
    arrays are used.

commit 4364153d56314740527135d8fe1efb6bb60841eb
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Oct 10 13:04:44 2016 +0200

    updated changelog to reflect release 0.56.1

commit e37b2786eeb9fcea1c65e82e3a303a7fcfb5f3c4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 10 09:59:31 2016 +0200

    Remove AnalysisMetaData

commit 7fd9e36c85fcbfca0bd9154c81058685a5512331
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Oct 8 01:01:20 2016 +0200

    Change ReferenceResolver on EvaluatingNormalizer to an optional argument
    
    That there was a ReferenceResolver everywhere originated back from when
    we supported "global references". That is: References which could be
    resolved in any contxt.
    
    For example: It was possible to execute `select sys.cluster.name, * from
    sys.nodes`.
    
    But with the introduction of relations this feature was removed. Any
    column reference must be linked to some kind of source relation.
    
    The global (injected) ReferenceResolver that has been used all around
    the place can only resolve `sys.cluster` references and in many cases
    they can't possibly appear in a statement. (For example, they cannot be
    present in a UPDATE, DELETE or INSERT statement because `sys.cluster` is
    read-only). So this commit removes the usage of a ReferenceResolver
    where it doesn't make sense.

commit f22f1059a6d56fe7b1efbd08e7f563fa3c6388de
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Oct 8 00:03:27 2016 +0200

    Remove AnalysisMetaData deps where schemas is not required
    
    Many components used AnalysisMetaData but didn't need all attributes.
    This pulled in a lot of dependencies. Especially the Schemas interface
    is bad. The only implementation pulls in stuff like the ThreadPool and
    ClusterService.
    
    By being concrete about the actual dependencies it becomes a bit more
    troublesome to pass around all the different objects but the
    dependencies become more explicit and testing should get a lot easier.

commit 6e8c55026fa6ae845f9d3e65459fbaa3eb0f1c26
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 7 23:01:06 2016 +0200

    Remove AnalysisMetaData deps where only Functions is required

commit e90ec86b2766aa5eb639b7bcdeaa8aae2ba3a1fa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 7 21:39:59 2016 +0200

    Add validation for negation of non-numeric literals

commit 0af03aa19af181cd91f1a91ee131db0e150eb399
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Oct 7 22:15:43 2016 +0200

    make kill on JobContextService async

commit dcc68115a70b72fdf1f358134e484b70c5e59c04
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 7 21:31:08 2016 +0200

    Remove EvaluatingNormalizer from ExpressionAnalyzer
    
    The ExpressionAnalyzer shouldn't be responsible for normalizing
    anything.
    
    This cleans up some inconsitency about where normalization happens.
    WhereClause & Having were always normalized twice. Once eaglery due to
    the ExpressionAnalyzer or RelationAnalyzer. And then a second time when
    the whole QuerySpec is normalized.

commit 3e0cb3a08cb43fa0dabae25b771831092282ea3c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 7 20:32:26 2016 +0200

    Remove Context from CopyAnalyzer
    
    It was an intermediate convenience class used to avoid passing around
    many arguments. But it is more code with the context class than it is
    without.

commit c5aed1c3d1aedd1c2f943cd2f46cbc1459d7a862
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 7 16:48:00 2016 +0200

    Remove transactionContext from ExpressionAnalysisContext
    
    The ExpressionAnalysisContext was used as messenger to pass around
    the TransactionContext.
    
    This was done for convenience to not have to pass around multiple
    parameters, but it is bad for separation of concerns.
    
    In addition this commit also removes all internal normalize calls from within
    the ExpressionAnalyzer. It was inconsistent that *some*
    expressions/symbols were eagerly normalized, because most were not.

commit d8dd90de1216f299a2dbd4a3d406f018e02e0ad3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 6 13:24:16 2016 +0200

    Reduce dependencies of RepositoryService

commit 7f54bdbcd075b34c6b6c2d99d9998f870acea425
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 7 16:22:17 2016 +0200

    Remove INNER_ANALYZER from DeleteAnalyzer
    
    Removes the double dispatching and InnerAnalysisContext.

commit ea087d08dc6904f2149f6621c43221c4e53d6a8f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 7 15:41:06 2016 +0200

    Rename StatementContext to TransactionContext
    
    There is another "StatementAnalysisContxt". Renaming StatementContext to
    TransactionContext should make it easier to distinguish these two.

commit 4a90aa2a89e75be1c15917039dc6fe05435e7ea1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 7 14:33:17 2016 +0200

    Remove unused methods from QueryUtil

commit f377d7e49c256b2c12d97c6dc9ad80f127211968
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Oct 7 11:59:48 2016 +0200

    do not ignore minimum_should_match fulltext option

commit 623565c502df469a4e095384c60aef60901b0ecc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 7 13:59:53 2016 +0200

    Remove joinType validation
    
    All join types are supported, so this validation could never fail.

commit ba9de6945977535aba5b82a543d5dae79ecd7e97
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 7 13:40:32 2016 +0200

    Move AggregationSearcher into a separate file

commit d4eeb0d1521ea9d061e70fe8a02b84fd5bd1c179
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 7 13:25:57 2016 +0200

    Remove double dispatching from DeleteAnalyzer

commit b26f4e3da99809f4fb91fb6f80e7414621792b89
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 7 12:32:53 2016 +0200

    Remove double dispatching from UpdateAnalyzer

commit 5987c5a953357bd375d6035e1cdf08bf4879e87a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 7 12:22:00 2016 +0200

    Remove fieldProvider convenience function from RelationAnalysisContext
    
    There were no subsequent calls so the lazy property didn't really have
    any benefit.
    This also makes it more explicit on what kind of FieldProvider is being
    used.

commit 2396c9977657e66d8062da3216309cbcce9f0ea7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 7 11:33:15 2016 +0200

    Avoid generated expression initialization if there are none
    
    This avoids a couple of allocations which were unnecessary.

commit f3443a53cce18b4ed3c40f687ea2fb51346ad002
Author: kovrus <ruslan@crate.io>
Date:   Fri Oct 7 10:41:00 2016 +0200

    fix try_cast for incorrect geo_point coordinates
    
    fixes https://github.com/crate/crate/issues/4189

commit 0dba33807f80c56063ceebd4a0fc2e6d3ea3caf0
Author: Claus Matzinger <claus.matzinger+kb@gmail.com>
Date:   Thu Oct 6 15:47:47 2016 +0200

    Fixed font size on a note in the configuration

commit 02a9064924e152251bf28e3256b9ffdf7a4c7c71
Author: Claus Matzinger <claus.matzinger+kb@gmail.com>
Date:   Thu Oct 6 10:54:46 2016 +0200

    added port anchor to PSQL config link and partial rewrite

commit 8671fc021cb0683ee70ceb2bce19322c74f56def
Author: Claus Matzinger <claus.matzinger+kb@gmail.com>
Date:   Thu Oct 6 10:32:00 2016 +0200

    improved documentation on copy from/to

commit 162c51ead212dd80826a01191dbca09c86242596
Author: kovrus <ruslan@crate.io>
Date:   Tue Oct 4 15:21:20 2016 +0200

    throw an exception when partition is closed

commit 79875bb34a21c392025c0667e7f69ac83bf709aa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 6 16:48:03 2016 +0200

    Add changes entry for COPY TO fix
    
    For 0e6476a572baafda4c4ba44306335040da9ae3e5

commit 0a89c55fe7c4328c4067421d1d249c049ddbbae1
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 6 16:50:26 2016 +0200

    fixes d17c985938082d81df1f04dc61e848007a381c49 :(

commit 89b11516927c6bb597de2887b2be8874a7820eb7
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Oct 6 15:03:05 2016 +0200

    Send stacktrace details (fileName/methodName/lineNumber) in PG error response

commit d17c985938082d81df1f04dc61e848007a381c49
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 6 16:35:05 2016 +0200

    removes deprecated Plugin interface methods

commit fa59d95a52bcd0787d70223cd49ef19e780a2bda
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 5 13:55:55 2016 +0200

    Use different jobId for retries
    
    This is a workaround to fix the `Same bucket of a page set more than
    once` error.
    
    The internal kill logic doesn't (yet) wait for operations to complete.
    On a shard failure this kill logic is invoked and afterwards the same
    query is re-executed.
    
    Now there is an edge case that there could have been in-flight requests
    from the *first* execution that arrive after the *second* execution has
    started and by doing so mess everything up.
    
    This fix is not optimal because there will be `sys.operations` entries
    with this new id - those might be confusing.
    
    But it's better to have confusing log entries than queries which fail.

commit 050a6772f99e73fcaf94b64c27eda850020a9e0c
Author: Michael Beer <michael@crate.io>
Date:   Thu Oct 6 08:24:42 2016 +0200

    removed `index.shard` setting from crate.yml
    
    since the default number of shards is calculated and set upon table creation it
    overwrites this setting.

commit ec9a0d9e6337f5bc99f472efb4f2438d1cc39f40
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 6 12:08:59 2016 +0200

    Remove double dispatching from create/alter blob table analyzers

commit 8faf4d803f454b901f054bed387cd89d22f8bf5f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 6 11:46:11 2016 +0200

    Remove double dispatching from snapshot/repository analyzers

commit b4b35e833634bf11a5fab61ee867445d3e4ef48b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 6 11:28:56 2016 +0200

    Remove double dispatching from optimize analyzer

commit 83ac10c9e295b1ff327ce114248a33d4831d10e9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 6 10:59:32 2016 +0200

    Remove double dispatching from refresh stmt analysis

commit 737095452890c79a46e438a8ac70044ff631eb35
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 5 15:05:44 2016 +0200

    Clean up drop table analyzers
    
    A part of the analyzer logic was part of the AnalyzedStatement.
    
    This commit changes that and by that:
    
     - Removes the Schemas dependency from the statements. It was used for
       the analysis part.
     - Changes the statement classes to be immutable
     - Removes some tests which were duplicated

commit e146b15f52a82c6b7addb728ac9b114806def881
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 5 14:27:18 2016 +0200

    Remove double dispatching from drop table analyzer

commit 0e6476a572baafda4c4ba44306335040da9ae3e5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 5 11:20:40 2016 +0200

    Run shard projections on remote node on remote collect
    
    The RemoteCollectorFactory faked a shard context to create shard
    projections, but this didn't work in some cases were the projection
    requires a real shard context.
    
    The WriterProjection for example couldn't resolve the `DIRECTORY`
    keyword of `COPY TO`.
    
    This changes the remote collect to execute the shard level projections
    on the remote node as well. In addition to solving the aforementioned
    issue this should be better performing as well.

commit 01881f36f0aa6c82951534d0a3811e1d3f31b8d9
Author: kovrus <ruslan@crate.io>
Date:   Wed Oct 5 13:22:41 2016 +0200

    remove TransportSqlAction provider

commit 1a7aa0dd78ab16a58868e89f6d47cc067b204a8c
Author: kovrus <ruslan@crate.io>
Date:   Wed Sep 28 14:25:30 2016 +0200

    deprecate the crate client

commit 722649e8f7ee7965b89a2e8f88a8135d4417e6c9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 4 17:27:09 2016 +0200

    Replace GenericFunctionFilter with GenericFunctionQuery
    
    In order to not use deprecated Lucene classes & methods.
    
    This new GenericFunctionQuery is mostly the same as the
    GenericFunctionFilter was except that everything which was handeld by
    Lucene classes (Filter, FilteredQuery, RandomAccessFilterStrategy, ...)
    has been inlined.

commit e9d5f6e33e5f65a698aed2c92a7f664995d536d5
Author: kovrus <ruslan@crate.io>
Date:   Fri Sep 30 16:38:56 2016 +0200

    remove from transport protocol from crate http

commit 46aefb65e64b90f95d1de0a0ce4680147cc39dd2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 5 09:48:29 2016 +0200

    Use BoostQuery instead of setBoost
    
    setBoost has been deprecated

commit 097dbab8fc0158c73c06e7ba2af61f84770b108c
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 4 15:45:13 2016 +0200

    [testing] randomize usage of prepared statements

commit 576e6750fe63674bae7746c61564e9874c0af925
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 4 16:27:30 2016 +0200

    Change GeoJSONUtils to not use deprecated readShapeFromWkt

commit fc9abbcb248b9c2593a2f480050c9bb4a22dc38d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 4 16:15:02 2016 +0200

    Mute upstream code warnings and deprecations

commit 8a6446501113f63f23d381cdef5ed6ccc0781c13
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 4 14:54:57 2016 +0200

    Change GeoPointType to not use deprecated readShapeFromWkt

commit 7ba538ffb5998b2403ee2c23aa2b18805e55559a
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 4 15:10:59 2016 +0200

    adds docu comment about pgjdbc snapshot release which fixes disabling of escape processing

commit 321756b23624a03bc8c144346328fbf71c12310e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 4 09:53:01 2016 +0200

    Inline ParamToParamSymbol into ParamTypeHints

commit 00e9c77f97c9f65310556b17dad142b862efda8c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 4 09:43:35 2016 +0200

    Inline ParamToLiteral function into ParameterContext

commit 69de312bdbde118e8df77fff732e72c6788796a5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 30 15:57:03 2016 +0200

    Implement describe properly for queries with result sets

commit 5ecd91a8aca48c727948c32c0f82d965f63fbfc1
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Aug 10 23:28:47 2016 +0200

    Implement binary streaming for PGArray

commit fc6fa34a12b886dfc89b1a12e9f71d6d64c8b1f3
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Oct 3 20:47:58 2016 +0200

    changed CompletionListenable to a future based interface

commit 7803795419081e22b1098fa1fcbd0eaff1d4d194
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 4 13:51:16 2016 +0200

    documents pgjdbc object literals limitations

commit f1f79e77bf24159fd2a2215de4dc832b62272a92
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 3 14:59:28 2016 +0200

    Fix NPE in LiteralValueFormatter

commit be7b0dd7b170eef1a8aa51522fd22754a77de410
Author: kovrus <ruslan@crate.io>
Date:   Fri Sep 30 21:45:15 2016 +0200

    remove TransportSqlAction from AlterTableOperation

commit 4554e236f03c7a77cc5c738e230a2d9e9a789773
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Oct 3 14:45:23 2016 +0200

    fixes an issue where the CompositeCollector did not call kill on the current collector
    
    this also fixes the handling of asynchronous repeat handles,
     before CompositeCollector assumed that repeat is synchronous

commit 7cb99ae9d35d509edb62b98651dc6e048aaa50e4
Author: Michael Beer <michael@crate.io>
Date:   Fri Sep 30 16:45:32 2016 +0200

    fixed some path incompatibilty issues on Windows

commit 33b7e69d1756e63d4692d29352c64c8f9af47556
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Sep 26 17:16:30 2016 +0200

    Fix: An issue on self joins when columns from both
    relations are used in where clause.
    
    eg: FROM table t1, table t2 WHERE t1.col = 'foo' and t2.col = 'bar';
    
    Relates to issue: https://github.com/crate/crate/issues/4091

commit 601c68e3b8c7b06fa8c87d64fe0a73af654e7974
Author: kovrus <ruslan@crate.io>
Date:   Fri Sep 30 17:52:33 2016 +0200

    fix docs tests for set

commit 929b36e6b94f0dae2d9226c9d4a54d24481ae4f6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 29 18:30:23 2016 +0200

    Remove parameterContext dependency from extract analysis

commit 6a746757e01b9ca1f12284ec30180eca087f06e9
Author: Autophagy <mika@crate.io>
Date:   Fri Sep 30 11:41:04 2016 +0200

    Added assertion message for resolvedFilename assertion

commit 5bbbe49a70f844529be1d9b0b65b83919895fe4a
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Sep 29 13:37:33 2016 +0200

    Copy value in a local variable to avoid problem with
    values being shared between different threads.
    
    Lucene's CodecReader uses a ThreadLocal variable docValuesLocal
    which is not compatible with our usage of multiple threads and the
    PAUSE/RESUME functionality.

commit b2bc44bf6ff5c79ed1776ee83c238cd86d8c3e92
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 29 14:46:35 2016 +0200

    Extract a SessionContext from ParameterContext

commit fe7567cd3c650d45e9c589b8d282a8e0720b2037
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 29 14:02:23 2016 +0200

    Add an internal negate function
    
    In order to be able to remove the ParameterContext from the
    ExpressionAnalazyer and still be able to support `select -?`

commit d212ad9c2f4f261acfb2eaa2ef0dfafcf4282f48
Author: meriamk <meriam.kharbat@gmail.com>
Date:   Fri Sep 30 13:57:05 2016 +0200

    fixed statement builder test

commit ef9bc8c3ba1627ae0948fefb45b22d844f4aaa2e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 30 13:59:31 2016 +0200

    Remove unused KillJobsAction attribute

commit 322c118bcbbe6bfc3e780244828c749743465597
Author: kovrus <ruslan@crate.io>
Date:   Fri Sep 23 16:02:48 2016 +0200

    added support for  set session/local

commit a3dffce1f3b2ee7c80ae8bfc93bd99c6482b7f69
Author: kovrus <ruslan@crate.io>
Date:   Fri Sep 30 10:58:52 2016 +0200

    add the mavencentral repository on the root level
    
    It fixes the dependency resolution for jacocoant which
    is required by codecov.

commit b05d0b6c38196b5b890346a546b153ab82d53287
Author: kovrus <ruslan@crate.io>
Date:   Thu Sep 29 14:32:05 2016 +0200

    remove transportsqlaction from the table stats service

commit 63ce41806bfba52451e830a97ee7296fb38a1377
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Sep 30 10:22:10 2016 +0200

    removed all occurences of context.clearReleasables()
    
    because we do not call addReleaseables() on the context anywhere

commit 7a1ac2792eb3d5d09a07a8cead0cce4dead9bc86
Author: Michael Beer <michael@crate.io>
Date:   Thu Sep 29 18:38:52 2016 +0200

    fix: ANY operator fails with subscript argument
    
    use (slow) generic function filter if subscript is passed as an argument
    in ANY operator.

commit a6bb083cac6d9ed5c80d1d842dc80f373ec4e468
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Thu Sep 29 22:54:34 2016 +0200

    remove concurrency option as it was removed in 0.39.1 (#4153)

commit a99b39b2237337a0d2ad57f583660a8eda911746
Author: Mika <mail@autophagy.io>
Date:   Mon Sep 26 14:35:02 2016 +0200

    support `select` queries without `from` clause

commit 4298bcd92e1cf566a068938bdaed92bd50bc9c98
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 29 16:58:06 2016 +0200

    Use _map function for match analysis
    
    In order to defer value evaluation so that the ParameterContext
    dependency can later on be removed from the ExpressionAnalyzer.

commit 7c69bd275d60ac37a33868119574dfe9efab7df6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 29 09:32:56 2016 +0200

    Add "to_*_set" cast functions
    
    Conversions to set types were already possible for array literals. This
    extends support to allow "to set" conversions for arrays in general.
    
    This is necessary since value evaluation is being removed from the
    Analyzer.

commit 7a4853bf2a071fb9d01025bb12611241227aebc6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 28 14:36:27 2016 +0200

    Remove value calls on ArrayLiteral & ObjectLiteral elements in ExpressionAnalyzer
    
    In order to be able to remove the parameterContext dependency from the
    Analyzer later on.

commit 5a4768e5898900108e364a7482248837ada66146
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 27 13:53:41 2016 +0200

    resolve not null references correctly

commit 16a9f44d7751695210426cc246999aba23c860df
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 29 10:18:28 2016 +0200

    Remove CastFunction sub-classes

commit 12bc42f39e4a2a8e587662fc30a3442989c3376f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 28 15:04:21 2016 +0200

    Streamline cast error messages

commit e6f602731c53d1d0c85e70cca317a2cd3ddc66a6
Author: kovrus <ruslan@crate.io>
Date:   Wed Sep 28 16:19:43 2016 +0200

    enable the postgresql protocol by default

commit 8f6c3e67ddbc546df43ada1c0cdc14431072cf26
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Sep 28 14:37:12 2016 +0200

    ensure that CrateDocCollector always releases the searchcontext upon kill

commit 29905c1e4faab4d25dd14b9698538dbc0aae6814
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 27 14:51:06 2016 +0200

    streamline whereClause creation

commit 432209e348e00731fb289a1822ccb80698179f2f
Author: kovrus <ruslan@crate.io>
Date:   Wed Sep 28 11:02:06 2016 +0200

    add a note about double and float data types precision

commit d3866567a1d94ab612b98cb34b5570aa2c59732e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 27 23:04:12 2016 +0200

    Add compile implementation to LikeOperator
    
    Improves the performance in cases where like queries aren't translated
    into a Lucene query.

commit 8820bc192447c50bd3c014b0bc53c8c3ac60290b
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Sep 27 18:49:29 2016 +0200

    Cleanup unsed sql/src/test/resources

commit daab7eb87af1d82b8d16dfa0f213285763b8471f
Author: Marios Trivyzas <marios@crate.io>
Date:   Sat Sep 24 14:41:13 2016 +0200

    Use testLogging profile to enable logging output for gradlew test

commit 4541dbddb15fb4ddcca123d34a2980915fd077d3
Author: kovrus <ruslan@crate.io>
Date:   Tue Sep 27 13:21:22 2016 +0200

    don't count null values
    
     The ``count`` aggregation function don't count null values
     in cases like:
    
        count(cast(null as string))

commit 5f9bc64c622f73ae36317703df24db1b80f4abd5
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Sep 27 11:10:53 2016 +0200

    fixed evaluation of NOT NULL in WHERE clause

commit 2b26ad27bd762b64363ca990d9a81fa42f6c3cc5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 26 15:11:41 2016 +0200

    Remove value evaluation from WHERE IN analysis phase

commit 2908f99ce295679672244fe190e2e66f2719771a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 23 15:42:25 2016 +0200

    Change QS offset and limit to symbol
    
    In order to be able to remove the ParameterContext dependency from the
    Analyzer later on.

commit a3358c70d13b6bae997bd2e4483229be6d9a3397
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 23 16:10:06 2016 +0200

    Remove querySpec from ESGet
    
    It was kept as a property but was only required for the offset property.

commit 7e1fecf81040403c8cf182c15d6348fc09c23197
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 26 22:12:48 2016 +0200

    perf: Use less expensive `replace` overload

commit 2fdc97be89646410700463c8dfb8113629cacd38
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 26 22:11:23 2016 +0200

    Remove expensive format call in Literals#quoteStringLiteral

commit b3e9349d72910d92b6ec903c7153567385606e45
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Sep 23 21:02:53 2016 +0200

    Reformat build.gradle files

commit 6f9e7432b054a71eead8026743f473c054563d2b
Author: Marios Trivyzas <marios@crate.io>
Date:   Sun Sep 25 14:26:20 2016 +0200

    Fix: Prevented usage of ``MATCH`` predicates on columns of both relations
    of a join if they cannot be applied to each of them separately.
    
    eg: FROM t1, t2 WHERE match(t1.txt, 'foo') OR match(t2.txt, 'bar');

commit 9cefbabed875736f2725f67227040eef0d990fcc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 26 11:53:59 2016 +0200

    Remove restriction that the pattern of like must be a literal
    
    The restriction was artificial. `Like` can be executed the same way as
    we execute `col1 = col2`.

commit 4c1ed24c7cc9f010e2c8c57a1e0fb3c59789ef1c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 26 11:05:30 2016 +0200

    Make sure EXPLAIN result can be streamed to a client

commit 08b3601bce2ebc5aab03f04ea2e0d727956ec538
Author: Michael Beer <michael@crate.io>
Date:   Sun Sep 25 08:57:57 2016 +0200

    update version of hadoop to latest stable
    
    this fixes a flaky test that raised an IOException if a file gets
    written to the datanode.

commit f921cc2ba6e9fcf4962fe0702af46f392cdee6c1
Author: Michael Beer <michael@crate.io>
Date:   Mon Sep 26 09:36:59 2016 +0200

    execute sphinx script via `bash`
    
    since ubuntu 6.10 the default shell /bin/sh was changed to dash (debian
    almquist shell). Dash has problems with ${...} syntax that performs
    variable expansion.

commit 236734c50b2ba7e7a70333131a2efc8e1f4dfafd
Author: kovrus <ruslan@crate.io>
Date:   Fri Sep 23 16:55:01 2016 +0200

    update changelog to reflect release 0.56.0

commit 54c7a5e76032be6a0297bbe88114e93adba3e6ad
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 23 16:56:25 2016 +0200

    Move insert-from-subquery validation from analyzer to planner
    
    The Planner doesn't support building a correct plan so the exception
    should be raised there.

commit 981a8b124d8a371b1d9832949bd5a4cb404a8ce5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 23 16:11:56 2016 +0200

    Remove TransportExecutor tests
    
    These tests were created when we didn't have analyzer / planner
    implementations but wanted to have integration tests for the execution
    layer.
    
    This commit removes those tests because they're hard to maintain and
    meanwhile we've added full-stack integration tests which cover the
    execution as well.

commit da74b16cbd545087fc8e3d09a26e1fadb5860e79
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 23 15:05:49 2016 +0200

    pull Limits out of Planner.Context

commit 5de9bd7edc9b4ffe260b76cd716241849ca12987
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Sep 23 15:36:33 2016 +0200

    Automatically java reformat code

commit a1ac69fc5aa1b88c887c4dd7a39fb08340476786
Author: kovrus <ruslan@crate.io>
Date:   Fri Sep 23 10:59:25 2016 +0200

     updated crate-admin to 0.20.0

commit 5c3ea765df3f21f31a03b3985e7303d6ad4be302
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 23 13:28:07 2016 +0200

    Rename Literal.newLiteral to Literal.of
    
    `newLiteral` implies that a new instance is returned, but in some cases
    existing instances are re-used.
    
    Bonus: Less typing!

commit dc24b1e1e9054010f4b4472620a8337e4acc417d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 23 11:34:48 2016 +0200

    Create test suite for sqllogictest

commit a805e4a3dcf25b394d39493d62776297c6827637
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 22 13:45:45 2016 +0200

    Add script to execute sqllogictest files

commit f07af8d0979a2b2c21cc21859e13cdea14beb103
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Sep 23 12:03:06 2016 +0200

    changed error message of unsupported join aggregations

commit 34ed0ce3217d77d37438b939c4f18b32e642de2d
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Sep 23 11:53:00 2016 +0200

    aggregations on no-match join queries incorrectly retured empty result

commit b7fe65dc01c755dcd317d27edbc459c7a41d652f
Author: kovrus <ruslan@crate.io>
Date:   Fri Sep 23 09:58:46 2016 +0200

    update crash to 0.18.0

commit 60f03c004e35f9d8427ed63b237247831d452a02
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 22 22:45:10 2016 +0200

    Remove joinConditions from RelationAnalysisContext
    
    They have become part of the joinPairs - this was most likely a leftover
    due to a merge mistake on a rebase.

commit d6deeca88a3b2bc67420c3c052a7940906a5874b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 22 22:47:42 2016 +0200

    Remove SingleUpstreamRowDownstream
    
    With the recent removal of the ShardProjectorChain this class became
    unused as well.

commit 7c0f32874f1c7605d602a43dd8af3b2e71557e30
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 14 18:06:24 2016 +0200

    NL: Disable repeat support
    
    repeat was broken because it doesn't correctly reset the internal state
    (`upstreamFinished`).
    
    There is currently no scenario in which repeat support would be
    required.
    In a nested-nested-loop case the first NL is on the left side and only
    the right side requires repeat support from its upstream.

commit b0f602c800d66ea501f422d7b246bd0438d5cc95
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 15 17:37:19 2016 +0200

    Rewrite outer-joins to inner-join if possible

commit 1cfddc8f120a4f58616008e205485ada6d176dcb
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Aug 8 09:25:29 2016 +0200

    implements left outer join support to NL operation

commit 0263df5614e885f339f83819c5ae494556ac5593
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Sep 14 13:19:28 2016 +0200

    added percentile aggregation function

commit 1f0a1198e9760d55133315e207353208e20b2a14
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Sep 22 10:55:47 2016 +0200

    fixed an issue which made the NL ignore STOP from the downstream

commit 7761a364b6add1847c5f3851766e6c60dbaf906c
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Sep 22 08:38:30 2016 +0200

    enabled stats in IDE crate setup

commit e828ecf20dfbaea2e8c7aad36dc8c67becef4e7e
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Tue Sep 20 11:23:04 2016 +0200

    corrected config settings in docs, use mountain names in sample config

commit ddd54c71b101f38268f892cf3fd45c10fa64016f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 20 11:58:41 2016 +0200

    Fix QuerySplitter to not loose query parts
    
    The QuerySplitter overwrote previous query parts it found.
    In a query like:
    
        t1.a = 10 and (t2.b = 30 or t2.b = 20) and t1.x = 1
    
    It would only keep
    
        t1 -> t1.x = 1
        t2 -> t2.b = 30 or t2.b = 20
    
    instead of:
    
        t1 -> t1.x = 1 and t1.a = 10
        t2 -> t2.b = 30 or t2.b = 20

commit e62487b59e574b8e798879ae90de519810054a3a
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Sep 19 18:36:49 2016 +0200

    update gradle to 3.1

commit 592df6cd2a0b996c666f1c788c578530c68f13e9
Author: Michael Beer <michael@crate.io>
Date:   Mon Sep 19 17:51:18 2016 +0200

    fix data node exclution issue in HDFS test

commit 11a1ff243c1a8e98b5358ab78085b8291f5cfeb7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 16 15:26:06 2016 +0200

    Clarify QuerySplitter usage

commit 659f3709ff24cc7b9b4c23f09b73864b7ff7cd3f
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Sep 9 18:01:39 2016 +0200

    Update pgjdbc dependency to 9.4.1211

commit 976212220441e5aaf58d1068b4477419a209a309
Author: meriamk <meriam.kharbat@gmail.com>
Date:   Mon Sep 19 14:58:40 2016 +0200

    synch change log with 0.55.5 release

commit fbbc90f9ce646e730f338944020568424d48eaca
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Sep 19 10:49:56 2016 +0200

    run ./gradlew test without test forks on travis
    
    to reduce load and prevent exit status 137
    https://travis-ci.org/crate/crate/jobs/160142842#L1682
    https://discuss.gradle.org/t/gradle-check-fails-but-tests-finish-with-success/10214

commit a216ba1d9163ac52adaba7bdfebc66e50402bff3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 16 15:23:46 2016 +0200

    Use Enum as mode for ReplacingSymbolVisitor
    
    In order to make it more readable

commit e2c7b6e9e9d64a08a246bbfdd10e7ceb164fab3d
Author: Claus Matzinger <claus.matzinger+kb@gmail.com>
Date:   Fri Sep 16 12:17:11 2016 +0200

    Improved docs for fulltext search, added psql option to default crate.yml

commit 69aad0318d727b366b2fd85bc6c37acb9bd0665e
Author: kovrus <ruslan@crate.io>
Date:   Thu Sep 15 16:07:50 2016 +0200

    enfore the constraints validation on shards
    
    This change will enforce the constraints validation for
    all kind of updates on shards and validation for insertions
    will be done only on a handler.
    
    Therefore for the cases like:
    
        create table t (id int, created timestamp generated as current_timestamp)
        insert into t (id) values (1)
    
    the validation will not fail.

commit d5d8c883a3383b26a885ce6c5b5d5a3b8b92e6ec
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 15 14:59:23 2016 +0200

    tests: Move row generating methods into a separate class

commit 0c7cb220c6fcaaeb80fb2b432147a8298e0a3d7a
Author: Nibin Geevarghese <ngeevarghese@qualys.com>
Date:   Mon Sep 12 17:02:10 2016 -0700

    * Fixed issues with gradle build
       - correctly referred 'blackbox' project instead of 'docs'

commit 904d80c49e3f0710727954b5443c5e04e89023e7
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Sep 14 09:23:23 2016 +0200

    fixes upsert-by-id error handling
    
    on some errors (e.g. version conflict), the error
    is transported over a successful response back to the handler.
    for single upsert, this error is globally on the response
    and no dedicated per-item failure is set.

commit ca7794d8150487b19623ae4941f50848872feb98
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 14 14:35:19 2016 +0200

    NL: Move no-rows-exit handling into abstract class.

commit 022c7a952761443e6e7f269fe446ae4f76f12581
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Sep 14 15:19:10 2016 +0200

    fixes failure handling on upsert-by-id
    
    we catch some concrete failures and set rowCount
    to 0 instead of bubbling the failure but we missed out
    the `instead` and bubbled it in addition

commit 9b4897b75195cf80b13e6ff4fda72758283a4ab5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 14 13:42:16 2016 +0200

    Change pauseProcessed handling in NestedLoopOperation
    
    This reverses the logic of the "pauseFromDownstream" handling.
    Should be easier to reason about as there are less state changes.

commit 39e296c8d4832ec90a68a172ad67c6dad1f0b8a3
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Sep 14 11:58:46 2016 +0200

    renamed streamer array usages to streamers

commit e4234622fb18aa1b2e997d15050999c343a89d4d
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Sep 14 11:47:35 2016 +0200

    set streamers only once on jobresponse
    seperate callback and listener interface of SetBucketAction

commit 6d95953dde0c97be6d8418251be9734256040224
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Sep 13 15:14:48 2016 +0200

    changes kill-on-failure loggers to TRACE level

commit 0234497739ece24a528ddd044eb6e7435d986b5a
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Sep 13 15:05:47 2016 +0200

    moves order by IP data type and makes it more concrete

commit 2b471af7c1c168ef1c0ae43baf32d6aeb83fa4cb
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Sep 13 14:56:16 2016 +0200

    fixes row emitting on a retry (plan executed with rowReceivers re-used)
    
    when retrying the plan execution due to a shard failure,
    all row- and result-receivers are re-used and so should not
    modify their (or create a) state

commit 70a186790d55396563ed099a45665be97fca3151
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Sep 13 14:51:14 2016 +0200

    don't kill a job twice on a failure

commit 77bf76267d4dba7505a83664b18c4eca8751b504
Author: Michael Beer <michael@crate.io>
Date:   Mon Sep 12 13:31:53 2016 +0200

    resolve jsr305 dependency conflict with HDFS plugin and Hadoop 2.x

commit cb9e747b4ca2e5e8db1672c4a072e60ed1f861a6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 12 21:56:28 2016 +0200

    testing: Re-use existing TO_COLUMN_IDENT functions

commit 3cfc8862b2486a004433dfa21c07892684ad6f4b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 12 22:02:49 2016 +0200

    Remove unused getDynamic from BlobTableInfo
    
    + some other minor clean-ups.

commit 74c71ea2fc72b4d5b91fa8e1d43eb42c9f4ccf3c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 12 22:09:13 2016 +0200

    Avoid unnecessary ReferenceIdent & ColumnIdent allocations

commit e78a0594638aeceae5c0596c087600db94fac630
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 12 22:17:40 2016 +0200

    Clean-up naming in PartitionExpression
    
    Still used "info" which was a left-over from when we had a class called
    `ReferenceInfo`.

commit 878d335cf42ef4f31954dd6f36cda0843e03866b
Author: Michael Beer <michael@crate.io>
Date:   Tue Sep 13 09:26:06 2016 +0200

    change upstream: adapt node names spelling test
    
    https://github.com/crate/elasticsearch/commit/355ab15715a3d4c299ce22165164a1b98f4689cd

commit cbc935777ecfa040df469ac9450d2f98aec195eb
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Sep 12 15:32:23 2016 +0200

    don't register SubscriptFunction for Set data types
    
    implementation was not supporting that and it resulted
    in a stuck query used with a Set

commit 9b6758a4251adcb08678f2c0799ca588a2f01ae7
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Sep 9 17:09:52 2016 +0200

    always include global meta data for snapshots
    
    This allows to also restore a snapshot of a single partition into a non-existent
    table. This, however, requires that the snapshot has been created with version
    ``0.55.5`` or greater!

commit 39d3b61860bc0648095a200187180a426e898c45
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 12 13:20:29 2016 +0200

    Replace ShardProjectorChain with FlatProjectorChain
    
    This is done to resolve a bit of a chicken-egg problem that the
    `CompositeCollector` had.
    
    It was somewhat like this:
    
        # Node Level
    
        Create CompositeCollector.Builder
        Create Shard Chain using CompositeCollector's RowDownstream.Factory
    
        For each shard
            use chain to create shard-projector
            create shard collector & connect to shard-projector
    
    The problem here was that the `CompositeCollector`
    `RowDownstream.Factory` had to be used but this was a very loose
    contract.
    
    This commit changes the pattern:
    
        # Node Level
    
        for each shard
            create collector builder incl. shard projectors
    
        create node-level projectors
        create collectors / chose merger

commit 3b66933ac4e835f051ee8dfd42e01700244e3d6c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 8 18:26:14 2016 +0200

    Pull MultiUpstreamRowReceiver out of RowMergers
    
    Also adds some class-level javadocs.

commit 5cdc40c8d4a3deb4456ac5dc96a98983b70e8de2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 7 12:01:13 2016 +0200

    Remove repeat support from RowMergers
    
    Because it can't fulfill to contract to emit the rows in the same order
    as it did in the previous run.

commit 5dd980fe72e34891a3d04bc4169285988c2b0b5c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 8 15:56:25 2016 +0200

    Add CompositeCollector for non-concurrent shard-collect
    
    This adds a CompositeCollector which controls 1+ sub-collectors and
    launches them sequentially.
    
    There are two reasons for this:
    
    1. Performance:
    
    Our disk access is mostly done lazy.
    This means execution looked mostly like this:
    
        S1      S2
         \     /
          \   /
        synchronized
         RowMerger
           |
          RR (disk IO)
    
    The RowMerger effectively eliminates any multi-threading benefits here,
    so using threaded execution is just overhead.
    
    The exceptions are projections with shard level granularity. These will
    still be run as before because there computations and disk IO happen
    before the merge:
    
        S1    S2
         |    |
         P    P
         \   /
          \ /
          Merger
            |
           RR
    
        Simple benchmark result:
    
            Statement: select * from uservisits limit 100
            Concurrency: 20
            Iterations: 1000
    
        Before:
    
            Runtime:
                mean: 2.836 +/- 1.910
                min:  0.804
                max:  20.638
            Percentile:
                50:   2.235
                99.9: 17.204
    
        After:
    
            Runtime:
                mean: 2.448 +/- 1.039
                min:  1.702
                max:  11.048
            Percentile:
                50:   2.056
                99.9: 10.729
    
    2. Repeat issues in the synchronized RowMerger
    
    The repeatHandle implementation of the synchronized RowMerger doesn't
    emit the rows in the same order as in the first run.
    
    This is currently not an issue because nothing is depending on the same
    order. But it will be an issue for outer joins.

commit 815194055a3564372a93c161c8397b0b417dbc0c
Author: kovrus <ruslan@crate.io>
Date:   Wed Aug 31 20:55:17 2016 +0300

    add the sys.summits table

commit ec50ba8cb04e442ede8fa4adc90e03d15af187e6
Author: kovrus <ruslan@crate.io>
Date:   Wed Aug 31 20:53:45 2016 +0300

    replace the existing list of node names
    
    now we use the list of mountain in the Alps.
    https://en.wikipedia.org/wiki/List_of_mountains_of_the_Alps_above_3000_m

commit 4c68c6402b925871a2dbb44333c9c45fb42b82cc
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Sep 9 15:11:47 2016 +0200

    Remove unecessary waitNoPendingTasksOnAll() and tear down method.
    Increase timeout of tests for travis builds.

commit 23a204b669a3eeb60a6109d791c181d10b6d507a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 9 20:31:28 2016 +0200

    update gradle to 3.0

commit 2d7ae8a6bc4aa73cb7580782b505ef0dee526eec
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 8 16:01:05 2016 +0200

    Rename RowDownstreamFactory
    
    It's not a factory for RowDownstream but RowReceiver - actually a
    specific DistributingDownstream. So this commit renames it to
    DistributingDownstreamFactory.
    
    Also removes the interface because there was just a single
    implementation.

commit f6596c205116fcb8f2cdd9f23417d56a89a77743
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Sep 8 16:25:11 2016 +0200

    removes invalid assertion which was thrown by a valid race condition
    
    on job context start, it was asserted to not have a
    failure already but if the context was killed before it
    was started, having a failure set is totally valid.
    this solves flakyness of the `testKilledAllLog` test.

commit 202105212d74ecf3bf376deee5393b65340c8982
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Sep 8 15:33:47 2016 +0200

    Increase timeout to avoid test failures

commit e0c3e4cba5dac64765941dee14f677f6c1bf3569
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 8 14:36:50 2016 +0200

    Merge collector result with RowReceiver result
    
    Both were basically the same thing just with minor wording difference.

commit 1e01d51d1abc14c4ef62cda32c25e57ce4c4cf20
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Sep 8 14:17:39 2016 +0200

    removes commented and not related test code
    
    code which was intended to be tested by removed commented
    test is already tested elsewhere

commit 0d03081343504daee625b70339f1692000186966
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Sep 7 15:27:20 2016 +0200

    fixes validation of join conditions
    
    it was possible to use a symbol of a not yet defined relation
    as a join condition, like e.g.
    `from t1 join t2 on t1.id = t3.id join t3 on...`

commit 74db27feaee62e551f5b0b3edda5848794b65040
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 7 13:33:31 2016 +0200

    Use FlatProjectorChain for sys.shards queries
    
    sys.shards queries are always single threaded and use a single
    RowsCollector. So there is no need to create a ShardProjectorChain
    because shard-level projections wouldn't run in parallel anyway.

commit 736d2640f9fe0810f34fbfa36899f423b0aeda1f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 7 13:51:49 2016 +0200

    Fix NPE in BulkPortal
    
    `executeBulk` of UpsertByIdTask could return a List containing null
    entries. This caused a NPE in the BulkPortal because it casts to `long`.
    
    Since it is unclear to the consumer if `null` indicates an error or
    unknown-row-count this commit also clarifies the contract of
    `executeBulk` to not allow null values at all.
    
    Relates to d4203e9c0d24ea03c4639f73417c3d2ef160b673 and fixes one
    possible `testKilledAllLog` failure.

commit 00097ce073f831c3cbe4c95d37c33ceff2c8e7e2
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Sep 1 17:44:56 2016 +0200

    Allow usage of columns from multiple tables in the same order by expression

commit d968af5423183feca2c3ae562802a79871d89073
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Sep 2 15:55:09 2016 +0200

    Revert "Allow usage of columns from multiple tables in the same order by expression"
    This reverts commit d89bd34bdb411bf2e14ee953885d3bf1e2a88568.
    
    This implementation doesn't work in all cases and a new approach will be
    implemented.

commit 7ce6345aa66b30829fef9a498596ef94f3680914
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Sep 1 21:16:11 2016 +0200

    Added 2 mins timeout to all SQLTransport integration test

commit d89bd34bdb411bf2e14ee953885d3bf1e2a88568
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Sep 1 17:44:56 2016 +0200

    Allow usage of columns from multiple tables in the same order by expression

commit d12652556009ba86185a4006f61599a2800c64ce
Merge: e7666012d7 5e451d9c95
Author: Mika <mail@autophagy.io>
Date:   Fri Sep 2 11:53:50 2016 +0200

    Merge pull request #4024 from crate/mn/adapt-sql-features
    
    Corrected sql_features tsv so that features do not claim to be supported when there exists unsupported sub-features

commit 5e451d9c95a56d18c6b536de4326d015fe20f057
Author: Autophagy <mika@crate.io>
Date:   Fri Sep 2 11:21:11 2016 +0200

    Corrected sql_features tsv so that features do not claim to be supported when there exists unsupported sub-features

commit e7666012d754126138deeb311d1cdd602cf9ecf5
Author: kovrus <ruslan@crate.io>
Date:   Thu Sep 1 13:51:21 2016 +0300

    fix setting the default schema via HTTP header
    
    It was broken by discarding the logic for setting the
    schema in RestSQLAction by
    https://github.com/crate/crate/commit/1568d08f37b2c4e0b92ffe89baa04266460b3230

commit 97950dd674ff125eeb1881f7ecff974fd8203d4e
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Aug 30 18:04:19 2016 +0200

    Refactor code by adding getQualifiedName() and setQualifiedName() to AnalyzedRelation

commit f0ce0f210d71d62f1dc8dbd82277eb3dc202144a
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Aug 30 13:33:01 2016 +0200

    Added tests for bulk insert and delete with null args

commit a80dd5be526013d1edf25b4e8f1f40d1fbccf31f
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Aug 29 15:11:38 2016 +0200

    Fix handling of null arguments in bulk deletes

commit 403ff045e90daca14c36a69308cc578ae00bcf52
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Aug 29 16:55:21 2016 +0200

    Fix: throw es CircuitBreakingException internally instead of the io.crate one

commit ef3c02e5ff61d10148870cca232707fe3db51387
Author: Michael Beer <michael@crate.io>
Date:   Fri Aug 26 11:09:59 2016 +0200

    changed sphinx build environment to avoid cross-reference issues

commit 6cda5201d18f794d6f4d79ab6fc41d897b781804
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Aug 25 16:19:02 2016 +0300

    Fix behaviour when trying to match null values
    for primary key columns in select statements

commit ade185e2d2327e2c4fb8b75b63d4790e7fecc268
Author: Claus Matzinger <claus@crate.io>
Date:   Fri Jul 22 12:52:30 2016 +0200

    minor improvements, note for upgrading 0.54 to 0.55

commit 1335a5cb911fad307ce6ea5ecbb2e08b29c9a39a
Author: Michael Beer <michael@crate.io>
Date:   Mon Aug 22 14:34:54 2016 +0200

    fix: bug when selecting nested object in object array

commit 8054efa1c649b5755f3df67abf4b4c493957ed9a
Author: Michael Beer <michael@crate.io>
Date:   Wed Aug 10 11:33:00 2016 +0200

    added sql_features table to information schema
    
    This system table provides information about SQL features and their
    status of support in Crate.

commit ac99190d3fc14f9a04d65ec26033527e926ba988
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Aug 22 11:23:29 2016 +0200

    updated crate-admin to 0.19.0

commit 7d3afed1c2db822b26c7e20f2b4956ac49c9de2e
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Sat Jun 11 19:24:22 2016 +0200

    added crate-azure-discovery plugin
    
    that adds native unicast host discovery on Azure infrastructure

commit b3f277a23bf54f53377835a1082090908f660e08
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Aug 22 10:04:36 2016 +0200

    fixed ddl integration test

commit 96297e61757b4b05f2e8e05f931671b3ee7758b5
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Sat Aug 20 23:09:32 2016 +0200

    added new gradle tasks "buildDocs" to easily build documentation

commit d4203e9c0d24ea03c4639f73417c3d2ef160b673
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Aug 16 14:35:32 2016 +0200

    removed TaskResult interface and use Long for bulk execution

commit a189474e5aac754963958e8e0e5b5dfcde2675b4
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Aug 18 10:07:27 2016 +0200

    do not allow to create tables in read-only system schemas

commit 22fcd046f5c7077ec2f79d8c5f371fc0ad7bb5bc
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Aug 17 10:36:18 2016 +0200

    Fix: type was not setting correctly when creating
    a token filter with default name and no type

commit a9b4e24d4b101052ea20e807e86ffeed207e3db7
Author: Michael Beer <michael@crate.io>
Date:   Tue Aug 16 13:35:07 2016 +0200

    fix: index name generation for null values in partitioned tables

commit fdc203105876691d58b3bc615af4c651fa64f1f2
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Aug 16 15:28:07 2016 +0200

    don't apply soft limit on unlimited sub-plans

commit e2039151d987ea4a5e68609e7bda39ffdb457b94
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Aug 16 14:40:11 2016 +0200

    validate char filter properties if possible
    to prevent creating analyzers with wrong char
    filters

commit a472a82ceac3a300e658e673a97c016ea9747a94
Author: Michael Beer <michael@crate.io>
Date:   Tue Aug 16 14:07:52 2016 +0200

    updated changes to reflect 0.55.4 release notes

commit b9cd5eeddff99d7b944e7f002d9013d459c9513b
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Aug 16 10:44:11 2016 +0200

    updated CHANGES entry

commit 830d7f241e3ab67edb1ee5476d3f13d1009919fb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 12 11:14:25 2016 +0200

    Fix possible NPE in nextPageQuery

commit ffd244c067048cc4d640c5b1ce716371f4273f0b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 12 14:50:43 2016 +0200

    tests: simplify SquareRootFunctionTest

commit 494a2128210520d81d135c9a18d888d56affb1dc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 12 14:17:43 2016 +0200

    tests: simplify RoundFunctionTest

commit cb8903aff98d53f082ca172787ff9853a04f621a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 12 14:03:18 2016 +0200

    tests: Remove custom AbsFunction from ValueNormalizerTest
    
    Instead the the production `AbsFunction` implementation can be used.

commit 7eea557d7faa6bff17f73be63d840dd196f0abb1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 12 13:54:53 2016 +0200

    tests: Simplify AbsFunctionTest

commit f974200cd9a5357fb95bf130535c7907efed7675
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Aug 12 15:06:43 2016 +0200

    follow up fix of 8d63e05740867640a1e8d08608398a4b5a05c959

commit 28ace0b7c6acd60c385501430bbdc4936fd7ad0f
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Aug 12 12:34:41 2016 +0200

    don’t request unnecessary nodes on sys.nodes
    queries if a name filter is provided in where clause

commit 8d63e05740867640a1e8d08608398a4b5a05c959
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Aug 12 14:17:56 2016 +0200

    fixes writing documents to the replica if an error happened
    
    if a documents failed to be written on the primary
    shard after preprocessing succeeded, the record was
    still written to the replica

commit 39e7f91e80fff6ac3b1c5947fc2f4ad35b59e7df
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Aug 12 12:08:02 2016 +0200

    fixes querying for a single primary key on a partitioned table
    
    an exception was raised instead of returning a zero row count

commit aad4d93916b464c6815494e04b1f10f9177b068f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 10 14:10:52 2016 +0200

    perf: Don't execute orderBy in finalTopN in NestedLoops
    
    The MergePhase receives the data pre-sorted and keeps the ordering.

commit 7c88116431c508bff84982d2f8bc95a40d055239
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 11 17:42:05 2016 +0200

    tests: Don't sleep in KillIntegrationTest
    
    There was a `sleep(100)` to wait for the query which should be killed to
    start executing.
    Instead of that it will now always wait for a `sys.jobs` entry to
    appear.
    That was already the case anyway for tests using `KILL <jobId>` instead
    of `KILL ALLL`.

commit cf4667e0420d0881ad10bbf46de4e7a0e82b74ed
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 11 17:12:29 2016 +0200

    tests: Fix flaky testKillSelectSysTableJobById
    
    The test failed if the query which should be killed finished before the
    jobId can be retrieved from the log.
    
    (For example with seed 34D9CB9854F5CFCE)

commit bd8949f3dd74fc94f3e9c1b3efd2ec104f272249
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Aug 10 14:45:01 2016 +0200

    fixed error in NodeStatsCollectorTest

commit b405b4d8b0ec5a5a220a200e1e31c527ae1bf5e4
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Aug 10 14:26:26 2016 +0200

    added documentation for sys.nodes query behaviour
    if a node is hanging

commit a38129002e19a9966f672e58e184951c19a27fea
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Aug 10 12:00:15 2016 +0200

    Avoid unnecessary requests if sys.node information
    can be used from cluster state

commit ae9ed5a7bcc056dc1516ef9eec8c4d5ae2ef0590
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 9 22:23:02 2016 +0200

    Remove unused nodeId from NodeStatsRequest

commit 50ef8f919968e2fe44957126eec4461271e19324
Author: Claus Matzinger <claus.matzinger+kb@gmail.com>
Date:   Wed Aug 10 11:26:15 2016 +0200

    Fixed a formatting issue in best_practice's systables page

commit 1ccf42af49ebab80c35626249a97cef673b6445c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 8 22:48:20 2016 +0200

    Merge Reference with ReferenceInfo
    
    Reference was only used as wrapper around ReferenceInfo adding a level
    of indirection that isn't necessary.

commit a468e74fc629d33b12cf0bdeaf35090b03aadcfd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 9 13:29:43 2016 +0200

    pgwire: Handle empty queries

commit bfd2921e167fbd0d738c8943ae8d9dc1da92e743
Author: Augusto Elesbão <augusto@crate.io>
Date:   Tue Aug 9 16:31:55 2016 +0200

    wrap exceptions on ResultSetReceiver

commit 9803dcc0426d555be0a96520dab41eb1c96bfe3d
Author: Augusto Elesbão <augusto@crate.io>
Date:   Tue Aug 9 14:27:24 2016 +0200

    change exception thrown by circuit break check

commit 8e16359df8d035474a81d2c611ce1a444ec2b886
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 9 14:20:35 2016 +0200

    Document postgres JDBC limitations

commit f34032b58d2ba42ac35d3a89a082d8ec95dcb5a9
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Aug 8 11:19:23 2016 +0200

    only request required nodes if a sys.node query which is filtered by id is performed, to avoid unnecessary
    requests

commit 23a6893c88b33023e851b52a628ee39f4fc7cc2c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 9 10:46:02 2016 +0200

    tests: Try to fix flaky testKillSelectSysTableJobById
    
    Due to the change in 89d8ed5463455952fd841322d09566b13b3b6156 it takes a
    bit longer for the `sys.jobs` entry to appear.

commit 8d5e55b7c0a7508cf8fc6d9c5942ef8c0123c215
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 9 11:14:51 2016 +0200

    Add `SHOW TRANSACTION ISOLATION LEVEL` support
    
    In order to support `conn.getTransactionIsolation()` in JDBC.
    
    In postgres it is also possible to use `show transaction_isolation`. But
    since JDBC doesn't use it, it is not part of this commit.

commit 3fa8e4044d952992b1eeead92c5d1b01f4109ddb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 9 14:07:46 2016 +0200

    Update LIMIT description in SELECT reference docs

commit ece3ef32cb6008f2d2a4e5eaa7772d5c09a55ace
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 9 11:36:27 2016 +0200

    pgwire: Avoid ChannelFutureListener allocations

commit e99d34db3d6ab4c23a5224c4e77c4f83150329b3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 9 11:33:59 2016 +0200

    pgwire: Handle LOGGER errors
    
    In order to avoid exceptionCaught recursion.

commit 7c95dc56c9f6084fe22ae17ddf707f63fd4b25dc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 8 11:44:49 2016 +0200

    Encapsulate params in `Row`

commit 91393a30ba71567e7ec894958ab6a40b2cb2b612
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 8 17:09:47 2016 +0200

    pgwire: Optimize VarCharType text streaming
    
    By overriding `writeAsText` it will now write directly to the
    ChannelBuffer, avoiding a intermediate copy.
    
    Before `encodeAsUTF8Text` was called which created a copy using
    `Arrays.copyOfRange` if the BytesRef instance has an offset.
    
    The `encodeAsUTF8Text` implementation is still required because it is
    used by `PGArray` and `JsonType`.

commit 96827c536fabbac5efad7f62c9e81c4c747fdd60
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 8 16:52:09 2016 +0200

    pgwire: Fix varchar text format streaming
    
    Didn't work correctly if the BytesRef instance had an offset.
    `testTwoSubStrOnSameColumn` failed because of this.

commit 18f83b5ce16839309858bee1a6ab43a6c2ce3965
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 8 15:32:22 2016 +0200

    tests/jdbc: Fix tests that assert negative row counts
    
    For example `testDeleteFromPartitionedTable` could fail if executed with
    JDBC.

commit d0c81fda2d01d76b0c434239866024f7b3d08c4b
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Aug 4 19:56:22 2016 +0200

    Add support for arrays of geo_shape

commit b3edacb2ac13847a02ae728b4d18fb7ddb4261bf
Author: Marios Trivyzas <marios@crate.io>
Date:   Sun Aug 7 21:49:48 2016 +0200

    Fix and enable more tests

commit f967619dcf0fcbf4ca9161b28acbe8996e60ba42
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 5 15:12:32 2016 +0200

    Re-enable java7 tests on travis

commit 12057d2ea4d58ea763877717c85155bd31a6f300
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 5 09:52:03 2016 +0200

    pg/jdbc: Randomly force binary transfer

commit 023862ca4a53fed69bcb4493aec84ca4d572e2e2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 4 16:22:20 2016 +0200

    Enable some more tests for jdbc execution

commit f9d2a5a0cd1eca00d9b1c27878deb56bf879ea21
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Aug 4 15:33:22 2016 +0200

    Wrap exceptions with SQLActionException in SQLOperations.

commit 7bcb7a4fadbf5d67f5b0f5ad0be76e23d2d7e8d8
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Aug 4 16:31:48 2016 +0200

    Add geo_shape support for pg jdbc

commit 6891c8c0a6e1452b371f988e6c8b306412ac5937
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 4 15:59:04 2016 +0200

    pgwire: Keep ms precision on timestamp text format serialization

commit 294f4d15e59ab17bc387fe2474bf44fc2b5ca31c
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Aug 2 17:59:37 2016 +0200

    Added support for arrays of geo_point

commit 4e33d2d82df8a2fa70f51daf2bd675266de6cee0
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Aug 1 11:24:44 2016 +0200

    Implement n-dimension arrays

commit 6a7e8512bc411b9cc560aa1267ae758663f81a88
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Jul 27 10:34:56 2016 +0200

    Implemented Geo Point

commit 99ce37b2e1e75a26e8deede17b7b35cbed681a2f
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Jul 29 11:57:52 2016 +0200

    Only add IPv4 to the bound addresses

commit ab7c278b6a527cbafdc98116c7155fe6c400ac74
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 28 13:41:27 2016 +0200

    Use jdbc client randomly in tests
    
    This also adds more type mappings to make some of the existing
    IntegrationTests work with the JDBC client.

commit 3d49da2b70f7daa76489908229e10563caf67bf8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 8 10:34:58 2016 +0200

    tests: Fix flaky testRegularSelectWithFewAvailableThreadsShouldNeverGetStuck

commit f61b6238ba4acf80b56f627523a0b94a6c4b70e1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 8 11:56:19 2016 +0200

    tests: Fix flaky testTimingOutNode
    
    Failed with Seed 8270012F2DDD8F01

commit f921a46bb1da8e47344a1bfee54ab57663bccb48
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 5 12:06:07 2016 +0200

    pg: Fix error handling if bulkPortal execution fails

commit feb32c653463a0ea8db2cc3b1e1d23cb45dcfc46
Author: Marios Trivyzas <marios@crate.io>
Date:   Sun Aug 7 20:07:50 2016 +0200

    Test periodic update in separate method to avoid flakiness

commit d0b477a33cad7f68df4464048601bd2b514fe95b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 5 15:31:18 2016 +0200

    tests: Fix flaky testTwoSubStrOnSameColumn
    
    Fixes the following failure:
    
        io.crate.integrationtests.TransportSQLActionTest > testTwoSubStrOnSameColumn FAILED
            java.lang.AssertionError:
            Expected: is "e_s0"
                but: was "e"
    
    Also removes the useless groupBySetup call.

commit c961f127c40db04d0d490903144df5dbbd18843e
Author: kovrus <ruslan@crate.io>
Date:   Wed Jul 20 11:41:44 2016 +0200

    make `sys.nodes` queries resilient
    
    Queries on the `sys.nodes` table will now short circuit
    in case some nodes in the cluster are unresponsive.

commit eb3a57de9405837e57d85d077c85fbd7df114142
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 5 11:19:44 2016 +0200

    Throw an error if an unsupported type is used with JDBC
    
    Before the query got stuck.

commit 16e5da7f53b4e7857b0396a852e54e78b8bad7a9
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Aug 5 11:30:02 2016 +0200

    updated changes to reflect 0.55.3 release

commit bef4df3e7309cbb685413d9407ddd3849799723a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 5 10:40:04 2016 +0200

    tests: Fix flaky testTableAlias
    
    If the randomized number of replicas was greater than the number of
    nodes ensureGreen ran into a timeout.

commit 95e3b89430485a86852c37d8ed7ef7fe1093b1d8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 4 14:39:11 2016 +0200

    use FutureActionListener in TransportFetchOperation

commit 52ee043cf66b0fc85a3867f1872d173eb35ba51d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 4 13:18:58 2016 +0200

    Fix a race condition in FetchProjector which could cause queries to get stuck
    
    `remainingRequests == 0` case wasn't handeld in the `toFetch.isEmpty`
    branch.
    
    If the first node is the local node it is very likely to be executed
    like this:
    
        FetchProjector  - sendRequest to n1
        FetchProjector  - fetchOperation.fetch
        FetchProjector  - fetchOperation onSuccess remainingRequests=1
        FetchProjector  - sendRequest to n2
        FetchProjector  - toFetch isEmpty remainingRequests=0
    
    `testFetchSize` failed sometimes because of this.

commit 8dadc8c430ed334c71f5648c8dcb214b6610e5e2
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Aug 4 13:52:54 2016 +0200

    Fixed PlanPrinter to produce an explain plan that can be streamed

commit 43c443385aca24254a0fd41ff10f5c84bdf898de
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Aug 4 14:25:10 2016 +0200

    Fixed typo in changelog entry

commit effe412bf7b6b9e708363598063ea4ec8fb11257
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Aug 4 13:57:04 2016 +0200

    adds sql parser join tests

commit 296a8261f1a2c8f11a188c6ce8d26259a645612f
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Aug 3 18:00:18 2016 +0200

    adds filtering support to the nested loop operation
    
    use integrated filter now instead of adding a
    filter projection to the nested loop

commit fb63a3c0080e9e2c1d628b825aab67d4954bb798
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Aug 3 20:53:18 2016 +0200

    Enable Transport Client for integration tests

commit d0e24dbf19772ef6dc79d6f6c161559e84e305b5
Author: Augusto Elesbão <augusto@crate.io>
Date:   Wed Aug 3 14:02:06 2016 +0200

    Validate function return type on GROUP BY

commit 328246a9ee75c67cb61535a63cfbc3b0dc9c0740
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 3 13:34:51 2016 +0200

    Don't save evaluated current_timestamp into table meta mapping
    
    `create table t (ts as current_timestamp)` created a
    `_meta.generated_columns` mapping which contained the actual evaluated
    timestamp instead of the function name.
    
    This commit changes the ExpressionAnalyzer behavior to not eagerly
    evaluate `current_timestamp`. Instead `normalizeSymbol` does that.
    
    A new `StatementContext` is used to ensure multiple `current_timestamp`
    occurrences within a statement all result in the same value.

commit 980038778e76421ee4bdefab3e6658ca2a86820b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 4 09:04:32 2016 +0200

    docs/pg: Update limitation docs

commit f59e72309045255ad9024cf31b5e831b98e89329
Merge: f7b19823a1 d8629ecf44
Author: Chris Ward <chriswhward@gmail.com>
Date:   Wed Aug 3 15:11:13 2016 +0200

    larify Geo data types

commit f7b19823a16fa55312bb1b82b3b8209b0446a971
Merge: 10611fb6e7 ffb37449b7
Author: Chris Ward <chriswhward@gmail.com>
Date:   Wed Aug 3 15:10:31 2016 +0200

    larify Geo data types

commit d8629ecf4433bc42384b9c14ed6e7287a4f22b97
Author: Chris Ward <chriswhward@gmail.com>
Date:   Tue Aug 2 16:53:10 2016 +0200

    Clarify geo point and geo shape

commit ffb37449b707009c2e88c9fc1f3e071fd937593e
Author: Augusto Elesbão <augusto@crate.io>
Date:   Wed Aug 3 10:42:59 2016 +0200

    Use Hamcrest assertion on tests

commit 37c55d016b3439e022ed94d3300557a5b57e8aed
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 2 17:57:05 2016 +0200

    tests/pgwire: randomly force binary transfer

commit 3900f71bf46cbfb1bafc2a9f9d0fa09deac26123
Author: Augusto Elesbão <augusto@crate.io>
Date:   Tue Aug 2 17:45:37 2016 +0200

    Fix unintended field replacement on sources
    
    Fields that were referenced on the `MultiSourceSelect.querySpec` and
    on a `source` where being replaced on both places by relation columns.
    It is expected that the replacement occurrs only on the first.

commit 24805aeacab7a4c7224d5fb986077da33f265a00
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 2 17:09:23 2016 +0200

    Add a test case for a prepared select statement with params

commit 5182ebdad8eae2ca95c1b6874c4a2ba6266d949b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 2 17:50:19 2016 +0200

    Change TransportKillJobsNodeAction to a eager singleton
    
    Otherwise the transport handler is registered lazy and could still be
    missing if a KillRequest arrived.
    
    The KillIntegrationTest suite was flaky because of this and sometimes
    failed with `No handler for action [Action [crate/sql/kill_jobs] not found]`

commit 3de6b2ce13ddc114507e825da32e9a03dca4ecee
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Aug 2 17:50:31 2016 +0200

    addition to b8eefb6 which should prevent reading the stale failure entry

commit f3b5f5a917807af5c384f019cc0f7942b3e0d096
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Aug 2 15:55:22 2016 +0200

    Allow usage of nested arrays in insert/update statments

commit b8eefb6bf7793cdcc285194b1ea2963f5c930e64
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Aug 2 17:19:10 2016 +0200

    fixed a race condition in the jobinittracker which lead to hiding the
    root exception of executionphasestasks
    
    there is no explicit test here, but the KillIntegrationsTest should be
    less flaky now.

commit 10611fb6e7834937e822d755fabfb5074a764cb7
Author: Chris Ward <chriswhward@gmail.com>
Date:   Tue Aug 2 16:53:10 2016 +0200

    Clarify geo point and geo shape

commit 7b56616dc82e13c4e8098376edbb94f609902cce
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 2 14:20:29 2016 +0200

    Remove outdated error handling comment
    
    The error handling logic has been moved into ConnectionContext

commit 6d44eff6cc78c65231790ab4c0acfefea80bcf08
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 2 13:48:59 2016 +0200

    Fix prepared statement handling
    
    Previously we've ignored the statementName.
    
    There is still an issue with statements using parameters which return a
    result-set because the Analyzer requires parameters.

commit 7c80c417c3686abf2142af7003645ef584628d94
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 2 11:52:37 2016 +0200

    Handle out of order sync calls
    
    sync calls can also happen after parse, bind or describe.
    `testFetchSize` was flaky because of that. This commit should fix this.

commit 5a4875980ce02eeb395f3b7689bd2deae3c27114
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Aug 2 12:39:49 2016 +0200

    adds decommission support to SQLOperations
    
    DecommissionService calls enable/disable on SQLOperations
    now instead of the transport sql actions in order
    to forbid/allow processing of new sql statements

commit 358cc89fd84c91beab1d1c5d70ec658863818dbd
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Aug 2 09:05:00 2016 +0200

    fix kill itests using an UUID
    
    UUID's are not supported by crates type system (streaming),
    they must be passed in as strings

commit a085523dcfda7d6f451118f55be069f099d0a858
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Aug 2 09:18:42 2016 +0200

    fix flaky sigar process cpu test by using assertBusy

commit b84be6ceff54aefab941a11cdd47a56e7762813a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 29 11:01:49 2016 +0200

    Use SQLOperations in TransportSQL(Bulk)Action

commit 6b11690fb87b49c016138d6a4e8e47c08bdec5af
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jul 7 10:38:28 2016 +0200

    Implement sub select rewriting

commit 49c1bb1e1c232cb1a5a9d8db91ac53e533f8dfc0
Author: Augusto Elesbão <augusto@crate.io>
Date:   Sun Jul 24 17:13:00 2016 +0200

    Add GROUP BY and HAVING to query printer

commit cbb722b02353f552c6e9ce760cf32b490ee2ad0b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 25 23:32:44 2016 +0200

    Avoid unnecessary list allocations in BlobPlugin

commit f4dbaae9c696687a707c045eb1ed93daae6ac33e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 25 23:25:18 2016 +0200

    Remove unused AdminUIModule

commit cc452f68b27e0bf5d9675ebfaf8bb4bba449718a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 22 23:58:16 2016 +0200

    Remove CrateComponent load mechanism
    
    Instead load all componenets via CrateNode. The dependencies are all
    known and available at compile time.
    
    There is no need to use a discovery mechanism to find them.

commit cfadba873f12e830d102bb787074b090f88a5555
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Aug 1 10:37:08 2016 +0200

    fixes flaky sigar process cpu stats test

commit 6dec9afef9838ce040a4acb3189121326b8271f8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 29 16:18:11 2016 +0200

    Remove expectsAffectedRows from Analysis
    
    It's possible to use the rootRelation() property to figure out if a
    query returns a row count or a result set.

commit 07f70d49e4f9be0b4cd109fd72d25af244164125
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Jul 29 12:31:57 2016 +0200

    Remove default fetchSize from FetchProjector

commit 89d8ed5463455952fd841322d09566b13b3b6156
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 29 11:18:51 2016 +0200

    Create StatsTables entries before execution instead of before parse.
    
    Because prepared statements can be re-used and so `parse` no longer
    indicates the start of a job execution.

commit 11c6a19270c3eca543a6ad625f1a0807d0c8e8c5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 27 17:36:23 2016 +0200

    Move "ignore error till sync" handling into ConnectionContext
    
    This stuff is very specific to the postgres protocol so it can be moved
    into the specific pg handler.
    
    It also moves the simpleQuery handling back into the ConnectionContext
    as it is also rather postgres specific.

commit bfc7a800b6a7faaf463b3c77dd5c5b9b9998d24e
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Jul 27 15:07:02 2016 +0200

    streamline pagesize modification in tests

commit 32fe07dbd2d0fbf41a83f53cdbddf0df028f6224
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 27 11:36:00 2016 +0200

    Add a test to verify sigar is working if Crate is started from tarball

commit 93f26a195d880fd3f588e40959f62ef279e2f7b4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 26 16:56:48 2016 +0200

    testing: Reenable AbstractExecutionSubContextTest
    
    Tests weren't executed because the class was marked as abstract

commit 17f6a843b0d88c8c7f32d1bc400f51b418f93d31
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Jul 26 11:03:38 2016 +0200

    Added timeout to prevent builds from getting stuck

commit 1d0b5c6adae6549e9033e0ecab3fdb9be38f93c1
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Jul 25 15:45:39 2016 +0200

    Added section in docs regarding postgres JDBC failover

commit 8a66c00e16a4c97bb1c253a3a48b7cb31e45d34c
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Jul 25 19:49:44 2016 +0200

    Fix copy paste errors and use constants in place of literals.

commit 705ae0fc0006dfaefb6608a585e64426ef6ffdf5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 25 17:44:51 2016 +0200

    pgwire: Set server version to 9500
    
    After the client version upgrade the workaround of decreasing the server
    version is no longer requied.

commit 4545114fcd818ef880617318b96efd72f59af322
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 25 16:40:16 2016 +0200

    testing: Upgrade pgjdbc to latest version

commit d3cc7f036f8d0baf515db237892c29ff883c8946
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Jul 22 15:09:46 2016 +0200

    Fix bug with postgres channel message decoder

commit fb3bf822cdbec21a4c4162021ebffa584e9be695
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 22 09:11:53 2016 +0200

    Reuse FutureActionListener in AlterTableOperation

commit 3bd16b1f81c7569228dc0b10a6b72a8a2e10105f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 22 21:57:01 2016 +0200

    Remove unused stuff

commit 0b1b69e5154c0a6368857584083b06c7538e0a86
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 19 16:16:54 2016 +0200

    Add initial support for psql array streaming

commit d856a48e599e1c19f68e0530c244a0a880c81c03
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 22 09:30:43 2016 +0200

    pgwire: Include an error code in the ErrorResponse
    
    According to https://www.postgresql.org/docs/9.2/static/protocol-error-fields.html
    the 'C' error code field should always be present in the ErrorResponse

commit e668484bf649afcb43f4de4bdcfdcc2ccccc8893
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Jul 20 16:20:59 2016 +0200

    Fix flaky test by using assertBusy to avoid NPE

commit ec743fb81525559c90d286866e4fa8c0fc506ebb
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Jul 19 21:50:13 2016 +0200

    Fix job entries in StatsTables for batch operations

commit 459f81f8dc2a84d8529e408085d0630a6c6218dc
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Jul 20 14:37:23 2016 +0200

    Set encoding to UTF-8 to prevent compilation errors in systems with other lang config

commit 807e11a64078d93cc63216281f9788ca163860bb
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Jul 19 17:14:45 2016 +0200

    Fix read isolation for blob and sys cluster tables

commit 679bd440c2ea1f6beea6a093b8eaf5d614ea6341
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jul 18 11:14:49 2016 +0200

    do not fetch table stats when node is not fully available yet
    
    this could have led to NPE during long recovery on node start

commit 9b61a351eb58faf74471391152e7d2d954d21fa1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 18 16:20:17 2016 +0200

    Run fetch operations threaded per reader
    
    Improves the execution speed of queries with > 1 shard per node.
    
    For example:
    
        250 iterations
        select * from uservisits limit 1000
        Before: mean: 281.639 +/- 60.773
        After:  mean: 139.511 +/- 17.454
    
    Note that this was measured on an otherwise idle node. If all CPU cores
    are busy or mostly busy this change won't be as noticeable.

commit 3f611af29b4f129f9028acce5062e234fbb9a6f8
Author: Augusto Elesbão <augusto@crate.io>
Date:   Mon Jul 18 15:55:30 2016 +0200

    Fix Hunspell token filter docs according to ES 2.0

commit 12a9b1eb53d83b0b2b4c94380118da10c78bdfe4
Author: Marios Trivyzas <marios@crate.io>
Date:   Sun Jul 17 12:20:57 2016 +0200

    Implemented batch operations with different statements

commit 238b7d281bf2e7ff007d9a791dae6f2a2e647c28
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Jul 18 14:10:09 2016 +0200

    Fix method call causing test failures

commit 027e10bd77180cee702bf2af3c89af48f9fb292f
Author: Marios Trivyzas <marios@crate.io>
Date:   Sun Jul 17 14:40:23 2016 +0200

    Adapt behavior of stats.* cluster setting to match behavior
    of ES cluster wide settings

commit a64fb96df04d9d6ef958161ad3b73348c50fcb28
Author: kovrus <ruslan@crate.io>
Date:   Mon Jul 18 11:26:48 2016 +0200

    remove unused clusterService from SelectStatementPlanner

commit 9665d41ca08e14e5af833232dc71908c515f3297
Author: kovrus <ruslan@crate.io>
Date:   Mon Jul 18 10:23:48 2016 +0200

    fix a bug in joining empty partitioned tables
    
    Return NoopPlan for SelectStatementPlanner if
    the planned sub relation in visitMultiSourceSelect is
    NoopPlannedAnalyzedRelation.

commit 871e71dca4fd7b77958977c529cdd20ce4ea293d
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Jul 15 18:53:41 2016 +0200

    Fix flaky test for stats because of other test inteference

commit a1283d91c6575c71ec5e12947135b71682720186
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Jul 14 14:36:28 2016 +0200

    Refactored session and portal handling

commit 6eb07fa3b4b14950db4e9a5fa079381bbf467aba
Author: Augusto Elesbão <augusto@crate.io>
Date:   Thu Jul 14 17:19:31 2016 +0200

    Enable sorting on blob tables

commit da3e6d8db16c15ef54e94dcd9f1e4719c3635c62
Author: kovrus <ruslan@crate.io>
Date:   Fri Jul 15 12:04:50 2016 +0200

    resolve hostname for the hostname column in sys.nodes
    
    The host name resolution was previously done in
    InetSocketTransportAddres, but removed after ES 2.0.0.
    
    https://github.com/elastic/elasticsearch/issues/13014

commit dcb39bd81ead4792cb8ffcfc0fca658aeed21cac
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 15 13:28:20 2016 +0200

    Fix flaky FetchProjectorTest
    
    `testPauseSupport` could throw a NullPointerException if
    `resumeUpstream` got called before `pauseProcessed` was called on the
    CollectingRowReceiver.
    
    `testMultipleFetchRequests` could fail due to a lower numFetches number.
    This is okay because the fetch operations happen async.

commit 3aaa38403afa346eb7381718705294f3d526aea7
Author: Chris Ward <chriswhward@gmail.com>
Date:   Tue Jul 12 17:07:31 2016 +0200

    Added instruction on how to fix this check

commit e80a3c28d1c56c9cb638cb356ad315dd72c22be4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 15 12:27:59 2016 +0200

    testing: Change schemaInfo to non-static
    
    Tests failed:
    
        Clean up static fields (in @AfterClass?), your test seems to hang on to
        approximately 18,331,616 bytes (threshold is 10,485,760). Field
        reference sizes (counted individually):
        - 18,486,624 bytes, private static io.crate.metadata.table.SchemaInfo
            io.crate.analyze.where.WhereClauseAnalyzerTest.schemaInfo

commit 773f7069e8120a629467c5f0827594b08158506d
Merge: 0f64093e32 ddea8360d3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 15 11:48:17 2016 +0200

    Merge pull request #3813 Add initial psql support
    
    Add initial psql support

commit ddea8360d3a5fbd54ea8abf6b0f311fd2fbe42a7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 15 11:13:30 2016 +0200

    Change `network.psql` setting to `psql.enabled`
    
    To be consistent with `http.enabled`.
    And the protocols/postgres documentation was already documenting the
    setting as `psql.enabled`.

commit 6faee5195a1f2515fd801b6a5d9a24a5b2a530af
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Jul 14 23:30:02 2016 +0200

    Revert changes for http port range since PGSQL port range changed tp 5432-5482

commit fef54186c696355330711ab98f155269db9ca5d2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 14 16:32:54 2016 +0200

    Add changes entry for pgwire support

commit 63b4f5a6dcae3a8489192dcddb0802464263ddcd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 13 16:49:38 2016 +0200

    Include null values in length calculation for DataRow message
    
    `psql` cli raised an error if the result contained null values because
    the length field in the message didn't match the actual length of the
    bytes written.
    
    JDBC doesn't seem to care which is the reason there is a unit test
    instead of an integration test.

commit f1a753e03434b1ee68e11f2bc99b4ae7569a8a92
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 14 16:17:24 2016 +0200

    Prohibit batch operations with mixed statements
    
    `testExecuteBatchWithDifferentStatements` which tested that this works
    was flaky.
    
    Disable support for now so we can get initial psql support into master.
    We will re-add this functionality later on.

commit 9a236cc86623d5b9a4420b56cd6f908a71ecbf54
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Jul 14 10:50:06 2016 +0200

    Changed port range for postgres protocol to 5432-5482

commit 8e86d9a23c26448b5fd2fee3358179ad114a28cc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 13 16:14:00 2016 +0200

    testing: Move reset stats to teardown method
    
    To make sure test failures don't trigger other failures due to tearDown
    assertions which assert that there is no transient state remaining.

commit 791ede949377df2a9c5516ac6c20ac5cfc92efc9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 12 18:40:19 2016 +0200

    Notify session about errors in ConnectionContext
    
    This fixes `testErrorRecoveryFromErrorsOutsideSqlOperations` which was
    flaky.

commit 7f73ff9f25a9f9dc1d2c235e4631bee245228ec7
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jul 12 17:59:28 2016 +0200

    implements retry logic for psql read operations

commit b8ed4b94c5d7150f2faad03e5d2f06ddcf8ef889
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jul 12 17:59:01 2016 +0200

    moves MAX_SHARD_MISSING_RETRIES to Constants

commit 53e0b91e9537fe52e56e81c084fc17f6e8fca688
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jul 12 16:58:02 2016 +0200

    moves static isShardFailure helper to Exceptions

commit 541df37d9db324fb68f4e033686036bb6d745fa5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 12 16:05:24 2016 +0200

    Update postgres docs regarding portals and autocommit

commit 1cf0b902f37e6b94fe84887a4ee34848042084ea
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 11 13:19:51 2016 +0200

    Add initial BEGIN & portal support
    
    This adds support for `autoCommit(false)` to enable `fetchSize` support.
    
    `commit` and `rollback` are no-ops because the transaction status
    indicator in the `ReadyForQuery` message is always `I` (idle). So the
    JDBC client won't execute `commit` or `rollback` requests.

commit aa656bd92469d7c204bb85655c4ddc34561d6955
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 12 13:57:57 2016 +0200

    Don't send error in ReadyForQueryListener
    
    The ResultReceivers already send the error, no need to send it again.

commit 561831ff6d6f48a476bad1978c57260cbf1eb053
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Jul 12 11:57:38 2016 +0200

    Fix NPE in case of simple query

commit a19e5d57e500c32c1abf81fb280d3eb015f4e7a7
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Jul 11 12:22:19 2016 +0200

    Integrate StatsTables to SQLOperations

commit 63b00bb9059d2ab9d749bafe4438bc69620d52fa
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Jul 11 14:31:07 2016 +0200

    Add 'TO' keyword as alternative to SET stmt docs

commit 8c58edd58b43a32601ad5b2cc202aa63996542a0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 11 09:54:48 2016 +0200

    Add pause support to the fetchProjector

commit d3dfcefcc0964cd70dcd120ac968c9391fd4f98c
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Jul 8 18:20:23 2016 +0200

    Handle node.sql.read_only setting in SQLOperations

commit b51450ed0da55c7bd7e04e25cddd07e4332a2b35
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Jul 8 14:36:11 2016 +0200

    Handle SET 'param' TO 'value' statement

commit 0f28f155a663e44960c9406533afb4932b1bf9bb
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Jul 8 13:33:19 2016 +0200

    Handle SET [SESSION] statements

commit 4969d96272ce0e550159fabf4f996a601a59686d
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Jul 7 15:36:25 2016 +0200

    Added parser support for SET SESSION statement

commit 5fbcd5ddbddfa26b28186e8914714c5531efae78
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 4 12:11:14 2016 +0200

    Handle batch operations with different statements

commit d39a85fbe53c57fe38bc39bb500237a5f0572d2b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 29 17:22:58 2016 +0200

    pgwire: Set tcpNoDelay and keepAlive
    
    Same as in `NettyTransport`
    Reduces lateny from around 40ms to < 1ms

commit 31148401ae45089e8a936443a905459868e2437e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 29 13:19:09 2016 +0200

    pgwire: Support IP type

commit a190fb8c18679b7faa5ff14a3a46750032ddbf66
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 29 13:02:00 2016 +0200

    Rename methods on PGType
    
    Should make it a bit more clear what the methods are doing.

commit 7c8d2062501e2dbf5799951c6572c4ef76c197d9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 28 21:25:30 2016 +0200

    pgwire: Add timestamp support

commit e3803ee04d2d852cd691f19e44bf3c30f3bfe7fb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 29 09:47:11 2016 +0200

    pgwire: Handle formatCodes according to spec
    
    The simple query protocol expects the values to be serialized as text.
    
    This changes the default formatCode to Text but also considers the
    formatCodes from the Bind message to decide how to stream the values.
    
    (Before the result formatCodes of the Bind message were ignored)

commit 1f26fdf0b5cd6ca908e477a9941f97fed520566f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 28 22:05:10 2016 +0200

    Change simply query handling to not depend on session state
    
    If any of the extended-protocol methods raises an error that error is
    kept around until sync is called.
    
    This works for the extended-protocol because clients will always run
    through the chain (parse -> bind -> execute -> sync).
    
    The simpleQuery implementation didn't do that. After an error occurred
    subsequent queries would just result in the same error and it was never
    cleared.

commit c8bd80efbb3f98b6b7038eb0d5d33639ded9eed5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 28 22:26:25 2016 +0200

    pgwire: Fix describe error handling
    
    Also fixes the error handling test which was broken =(

commit 684ff3f7597fd72f20d36ba245c67f23ce1e38de
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 28 15:56:17 2016 +0200

    Fix numeric type streaming

commit acaadde6afac5a86ec2413fe96edd275dd213fb9
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jun 28 11:07:49 2016 +0200

    implements numeric PG types

commit e86ec8ca4678b330094aaceeddfec09c6fc48947
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jun 28 11:07:21 2016 +0200

    moved PG types to new package, improves PGTypes tests

commit d9247ae80bfb7ffbd608c1a4b3fbce3041638f27
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 28 11:05:42 2016 +0200

    pgwire: Document that CancelRequest is not supported

commit a8e1a3b7d366fdfa4c0f4e88bdcc846e0e7a6e56
Author: Augusto Elesbão <augusto@crate.io>
Date:   Tue Jun 28 09:41:52 2016 +0200

    pgwire: parse parameters format code on bind

commit a6041566272c8edfa09c140b5d73a2b5a48ae591
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 27 13:45:29 2016 +0200

    Add postgres protocol documentation

commit 2dda02dde7b1cd99022b87c4567f0e65f04ef02d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 27 15:21:32 2016 +0200

    pgwire: Add support for the `NoData` msg
    
    See the following two paragraphs of the postgres protocol documentation:
    
    > The Describe message (portal variant) specifies the name of an
    > existing portal (or an empty string for the unnamed portal). The
    > response is a RowDescription message describing the rows that will be
    > returned by executing the portal; or a NoData message if the portal
    > does not contain a query that will return rows; or ErrorResponse if
    > there is no such portal.
    
    > The Describe message (statement variant) specifies the name of an
    > existing prepared statement (or an empty string for the unnamed prepared
    > statement). The response is a ParameterDescription message describing
    > the parameters needed by the statement, followed by a RowDescription
    > message describing the rows that will be returned when the statement is
    > eventually executed (or a NoData message if the statement will not
    > return rows)

commit b90589cc0daca1cb06d40e77ed150e168026caa3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 27 13:45:41 2016 +0200

    pgwire: Implement EmptyQueryResponse

commit 3f16a933dcb316553526076310f0b709c9555a73
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 24 16:05:33 2016 +0200

    Integrate maxRows and softLimit

commit 5922a003da392c80d2bd878e990029f7c06b99dd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 24 14:56:10 2016 +0200

    Move simpleQuery processing back into SqlOperations.Session

commit 3349b94cc706b22119f757ff04fa207dc9de31df
Author: Augusto Elesbão <augusto@crate.io>
Date:   Thu Jun 23 16:45:35 2016 +0200

    boolean data type

commit 6b72c8e81b53caefaa31b5364a0d43a49cf625c3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 23 16:25:42 2016 +0200

    pgwire: Support batch execution

commit 6994ac1e99f172b48a42378cb4839fec74ee828b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 23 14:15:35 2016 +0200

    pgwire: Handle errors according to extended query spec

commit e2eb9f95670a91cd37947a9f393e77fddb3ee69a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 23 09:56:39 2016 +0200

    Fetch: Clear buckets to avoid memory usage growth
    
    docIds and values were kept in memory until the FetchProjector finished.
    This also caused subsequent fetch requests to re-fetch all previously
    fetched rows again.
    
    In a simple test to stream 1mio rows with only 128m of HEAP this change
    improved the performance from 25 minutes to 17 seconds.

commit d631c0add74a6129fe9386a8a70028ba6c628e5e
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Jun 16 17:20:34 2016 +0200

    Implement fetchSize functionality in FetchProjector.

commit 2b301f1df1f8ec51df2c9126ed474d763459880e
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jun 9 12:01:27 2016 +0200

    adds testing helper method to generating and emit rows

commit 5e66cb012a8821ecdaa8c0ead4a71f630a05e9f1
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jun 8 18:09:01 2016 +0200

    removes usage of a default ``LIMIT``
    
    before this change, a default limit of 10000 was
    added to all queries without a defined limit.

commit e799f8cf80b3395e1e11f2b570cd89404d9f5f93
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jun 8 18:07:21 2016 +0200

    implements a sorting projector which works without a limit

commit 0b4a505e91c5abddbdf2a9f9c7f01d89dfec8196
Author: Augusto Elesbão <augusto@crate.io>
Date:   Tue Jun 21 18:47:36 2016 +0200

    psql network settings and port range support

commit ff7d280b52cdd2e605c6d810c1203b543154ea22
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 21 13:20:19 2016 +0200

    Add object type support to psql protocol

commit db1e6b1df66f8db5695ffbdb319292e22ae56847
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 17 17:47:18 2016 +0200

    Add initial psql wire protocol support
    
    Limitations:
    
     - Only simple protocol is implemented
     - Only String columns can be selected

commit 0f64093e32fa39d4507622e273b435fe7d2301aa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 14 15:23:54 2016 +0200

    Avoid parsing JSON in COPY FROM on reader if not required
    
    COPY FROM into a table without primary key / clustered by still tried to
    parse the JSON to try and retrieve a "_id" field.
    
    This field is never part of the JSON (not exported with COPY TO) and the
    id was randomly generated anyway, so the result would have been ignored
    even if present.

commit 267ff592f0546030472c61f79ef71841bdb8fc9e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 14 13:50:16 2016 +0200

    Move String/BytesRef handling from LineExpression to LineContext

commit 1e6c7c4729388dcc0a580eb9a975cbebf9f9a35f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 14 11:43:05 2016 +0200

    Throw error on bullk operations procuding resultSets
    
    Before the query just got stuck.

commit 03768ec570ccb2ed5e462b71e93421f8df73ba50
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 14 11:04:39 2016 +0200

    Update elasticsearch to 2.3.4

commit 5edc5c13519306530d4a01d6546b7448e7ff903e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 14 00:03:16 2016 +0200

    Update gradle to 2.14

commit a84e7040db5cb01d0116f05756d43ec0969ff0e5
Author: kovrus <ruslan@crate.io>
Date:   Thu Jul 14 09:25:53 2016 +0200

    remove ``geo_point`` from the ``intersects`` supported types
    
    it was mistakenly introduced in #3793

commit dcc7b8adc2da2507fc44ab86bced0e1255ce6644
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 12 23:42:33 2016 +0200

    Re-raise more helpful error on COPY FROM parse errors
    
    Now includes the line number and filename if it encounters a parse
    error.

commit 7f0ae761ab28c24a77945075dc6ebac8e40eecbc
Author: Augusto Elesbão <aelesbao@gmail.com>
Date:   Sun Jul 10 23:33:53 2016 +0200

    Replace BlobDocCollector by RowsCollector

commit 00b33de7cb47bb8f2ca4fa3376ad7b1c14a99110
Author: kovrus <ruslan@crate.io>
Date:   Tue Jul 12 14:35:27 2016 +0200

    register missing variations of the within function
    
    within(geo_shape, ...)
    within(object, ...)

commit 4a9cf7e9e89daea77a4b0346740b40961e77347e
Author: Claus Matzinger <claus@crate.io>
Date:   Tue Jul 12 15:50:50 2016 +0200

    minor addition of csvkit to the best_practice guide

commit c6785892ac97196a994ade38021a7c3fb1ca03ab
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jul 12 10:53:36 2016 +0200

    removes obsolete getField() from AnalyzedRelation interface
    
    method is superseded by getField(Path, Operation)

commit f3f738e83f1a6593a2df79665442adc733167bed
Author: Augusto Elesbão <augusto@crate.io>
Date:   Mon Jul 11 13:34:02 2016 +0200

    Remove remaining doc reference on blackbox test

commit b5cb1183d7dab27910a6b0aac2f0c800dcd902ac
Author: Marios Trivyzas <marios@crate.io>
Date:   Sun Jul 3 18:28:43 2016 +0200

    Basic conditional functions

commit ea18db9dc20e783285494826c045668bc5a0480b
Author: Augusto Elesbão <augusto@crate.io>
Date:   Mon Jul 11 09:57:41 2016 +0200

    Move `Before` block to top of test for readability

commit 119e93927fdf39a6c35606153289dc0541e101fb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 5 11:24:55 2016 +0200

    Change pause/resume handling
    
    Currently it is really difficult to implement the RowReceiver and
    RowUpstream interfaces correctly.
    
    First of all it is easy to forget to ask for ``pause`` calls after a
    ``setNextRow`` call because it is not part of the result.
    
    In addition it is unclear what should be done if ``setNextRow`` returns
    false and a pause was requested.
    
    ``pause`` and ``resume`` are difficult to handle in
    asynchronous cases where the resume call happens before the pause
    request was processed.
    
    This commit addresses the first two issues by changing ``setNextRow`` to
    return an enum of ``{ CONTINUE, PAUSE, STOP }``.
    
    This way the PAUSE is explicit and the PAUSE & STOP case can no longer
    happen.
    
    The asyncronous issue is addressed by removing ``setUpstream``. Instead
    a ``Resumable`` is passed into a new ``pauseProcessed`` call. This way
    it is not possible for a ``RowReceiver`` to call resume before the
    upstream hasn't processed the pause.
    
    Similarly ``repeat`` is now part of a ``RepeatableUpstream`` interface
    which a downstream gets on the ``finish`` call. Before that it is not
    possible to repeat. This was already the case but not enforced.

commit a6719fefafcd7008d89fa058063050bcab0d0ddd
Author: Claus Matzinger <claus@crate.io>
Date:   Wed Jul 6 17:45:04 2016 +0200

    general improvements, added important information to COPY FROM docs

commit 60dd0d05e95c7b2d86224defcf324300369d7c7b
Author: kovrus <ruslan@crate.io>
Date:   Fri Jul 8 11:34:28 2016 +0200

    document corner cases for using geo points and shapes

commit 098e50fd7c9f45e7b263b9536f9a7c4d87abdd3e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 7 22:41:57 2016 +0200

    Re-use rowRange in NestedLoopOperationBenchmark

commit 57dd267ca8717fd34a081fcc523bca14031095a7
Author: kovrus <ruslan@crate.io>
Date:   Thu Jul 7 13:53:01 2016 +0200

    sync changelog after 0.55.2 release

commit f059a283c38a70f6f7ee040b0d44147101c7df98
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 6 16:13:13 2016 +0200

    Add a test for pause/resume of the RowMerger

commit 550eb8fb87d505ebf1164dd7724ddbf544c8992a
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jul 7 00:26:33 2016 +0200

    fixed hdfs tests

commit 4ac54f11e46d837e967aa3982113fbd2208a204b
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Jul 6 16:08:48 2016 +0200

    added blackbox integration test for sigar

commit c00e474132d637bb381099f4aacf5514274fee55
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Jul 6 14:10:15 2016 +0200

    fix: os timestamp expression was evaluated multiple times
    
    resulting in different timestamp values when selecting os multiple times
    in sys.nodes statement

commit 66a5a2dd0f31200a9686d2112b8df9258d286ef6
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Jul 6 10:38:02 2016 +0200

    cache sigar probes to prevent incorrect calculation of percentual values
    
    for example, statements such as:
    
    ```sql
    SELECT id, load, os['cpu'] FROM sys.nodes ORDER BY id;
    ```
    
    lead to incorrect values of ``os['cpu']`` (returning only ``0`` and ``100``)
    this was due to calling sigar in too quick succession and therefore not
    being able to calculate percentual values based on the short time delta
    between the calls.

commit 9dc24196f2cf0c3d900ac61389473dfffb51e117
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Jul 5 21:50:53 2016 +0200

    Fixed performance issues with operators and functions caused by unintended recursive calls of Input.value()

commit fde319286a4a54d415f7c78d0bf30d47f04c4ae9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 5 12:10:14 2016 +0200

    Remove RowMerger interface
    
    Was unused.

commit 983382281cd2d1c2f09152a6dc8dd078a6dd01c6
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Jun 24 19:57:04 2016 +0200

    Implemented NOT NULL column constraint

commit 8ef970de40a673470e700fac34b43a9a6bbb6a2e
Author: kovrus <ruslan@crate.io>
Date:   Fri Jul 1 15:54:40 2016 +0200

    add low/high disk watermark node checks

commit dd322fcb02933209d4bf528aee0dd521d52b436f
Author: Augusto Elesbão <augusto@crate.io>
Date:   Mon Jul 4 14:09:47 2016 +0200

    Avoid race condition while cleaning pauseFifo

commit ae8b71110257d5a38232d7ccb2cb27573e93e9d0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 5 10:54:35 2016 +0200

    testing: Use existing scalar impl instead of custom test implementation

commit e0ceb442c1944826e55de06378f3bc65a3767898
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 5 10:51:29 2016 +0200

    Use RowSender in SimpleTopNProjectorTest

commit 92b4988f4214b65d5edbb3e78d15d7dfb3c684b5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 5 10:31:25 2016 +0200

    Use RowSender in SortingTopNProjectorTest

commit 99f44027ac4f4507a36d991fddbde3ecf098533e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 5 10:24:21 2016 +0200

    Use printTable in SortingTopNProjectorTest assertions
    
    Easier to read.

commit 44cc037e201c71e11730641040dd5e25b1720e18
Author: kovrus <ruslan@crate.io>
Date:   Mon Jul 4 17:24:26 2016 +0200

    use default value for the disk low watermark setting.
    
    Accordingly to the Crate documentation the
    `cluster.routing.allocation.disk.watermark.low`
    setting defaults to `85%`.

commit b2b146b69ca47a858dd0e80746db9c58cab3de94
Author: Chris Ward <chriswhward@gmail.com>
Date:   Mon Jul 4 11:51:09 2016 +0200

    Tiny typo fix
    
    fix link reference from typo

commit 0b8cb045ca0e348ceafb851568a7e45aa8046efc
Author: Marios Trivyzas <marios@crate.io>
Date:   Sat Jul 2 10:04:19 2016 +0200

    Fixed OPTIMIZE table tests

commit bb45660163c3b51a8909974abfd422b6b4c2e422
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 1 16:59:58 2016 +0200

    FetchProjector: Handle setNextRow return value
    
    The return value of `downstream.setNextRow` was ignored. So the
    FetchProjector kept emitting more rows even if the Downstream didn't
    want anymore.
    
    This currently isn't an issue because there is never a projector after
    the FetchProjector which isn't consuming all rows.
    But it's against the contract and might cause a bug in the future.
    
    Test boiler-plate is mostly copied from the `psql_nolimit` branch.

commit e69dfda67b55c548f9288059943b90f29a303567
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Jul 1 16:30:44 2016 +0200

    Fixed duplicate key error handling for multivalue insert.

commit 0642a9ef0eb1f7d7fcfe1c63668658f517b21d02
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jun 30 07:40:40 2016 +0200

    increased version number on master
    
    seems that someone forgot to increase the version number on master on
    last release

commit 0cc640fdd163450b240e4d6d3d903be9c70985ad
Author: Marios Trivyzas <marios@crate.io>
Date:   Wed Jun 29 12:11:50 2016 +0200

    Fix: NPE that occurred when inserting null values to a generated column.

commit cff5da54c51527be175948e2a717b19994ec1cab
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Jun 28 17:46:58 2016 +0200

    extended legacy index script to automatically
    download crate

commit 90dba3f55bd28e56042f0b66df6678838a767a84
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jun 28 17:35:43 2016 +0200

    normalize changelog to reflect release 0.55.1

commit 480c3a28d0433faafb7592700fd60e0e4350d319
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jun 27 13:26:16 2016 +0200

    prefer python 3 in crash script

commit 8e5b27b7b681c473fa93d37fa1b91c6297e8a374
Author: Aslan Bakirov <aslanbekirov@gmail.com>
Date:   Tue Jun 21 09:23:39 2016 +0200

    Distance query leverages ES2.2 improvements

commit 0c69bc938c305070f2cae4606fa6065bfbb29dbc
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Jun 22 10:54:48 2016 +0200

    added backward compatibility test
    for within and distance queries

commit ee3f7b78e8df667dd52e4c1a64ccc20aaf0e53ea
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jun 21 12:20:15 2016 +0200

    leverage new GeoPointInPolygon query for WITHIN

commit e3b022f7330e9ebcde737f9513842b419268d0c1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 27 12:22:30 2016 +0200

    Move rest/http docs into a protocols section

commit a643e1922fc643b490182ffcf74a4e08f66b3c25
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Jun 24 18:54:43 2016 +0200

    Reorganized constraints documentation.

commit ce14b99e11d774e72f9b8c3be58b4d1744f0744e
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Jun 21 14:02:56 2016 +0200

    Implemented OPTIMIZE table statement.

commit bf9e1cd226d30c45f7a174e8a1f6235c66a8aadc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 24 11:46:04 2016 +0200

    Add a ResultReceiver that's used to receive rows from the TransportExecutor
    
    This adds a new interface `ResultReceiver` which is a subset of the
    `RowReceiver`.
    
    It is used to retrieve the rows from the `TransportExecutor` so it is
    mainly for "clients" that want to receive the final result.
    
    Currently the only real client is the `TransportSQLAction`.

commit 5273f44256ff336d5e422d88ffa5b46a343dc637
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Jun 24 11:31:32 2016 +0200

    Clean blackbox/.venv dir with gradle clean task.

commit 8787db2b6882fb36d165c5855817a12ff5b49152
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jun 24 11:36:52 2016 +0200

    added missing CHANGES entry related to context failure handling fix

commit 4e772aed783cc03f23b36f7d9e630b6e6e1a58ab
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jun 24 11:02:58 2016 +0200

    fixes killing subcontext on failure
    
    if a failure happened at 1 subcontext, it killed
    the remaining ones. but when another was killed, it
    did the same and so increased the stack (stackoverflow).
    this commit fixes this by just let one subcontext
    kill all other.
    testing is difficult here, but stackoverflow raised
    before this fix by https://github.com/crate/crate-stresstest/pull/32/commits/1273f352e1d155dad29867b30af185ef18cf32c7

commit 6e5cc0c05c1a6b3c1ed67779a95f5690b0208700
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Jun 23 15:44:00 2016 +0200

    Upgrade crash to 0.17.0

commit f80c1d1d362359cb3de0d10f2ba80ea8829ffd20
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Jun 23 15:04:08 2016 +0200

    fixed Planner Test

commit 53d53b16e323f5f41d89bd7ecfae8d6f4bd31c56
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Jun 23 12:10:06 2016 +0200

    Fix: Ordered queries with limit 0 failed

commit 38e01b547827bbedec6cbc5f4c903b41b0320f8f
Author: Augusto Elesbão <augusto@crate.io>
Date:   Thu Jun 23 11:55:18 2016 +0200

    fixup! fixup! fixup! change affected rows count on `refresh table`

commit 1ceeb81797a0a52464345f703334e883de9f03d0
Author: Augusto Elesbão <augusto@crate.io>
Date:   Thu Jun 23 11:42:30 2016 +0200

    fixup! fixup! change affected rows count on `refresh table`

commit 3ba079f61c2f4f85335e86f08f7646e4c501bde0
Author: Augusto Elesbão <augusto@crate.io>
Date:   Thu Jun 23 11:04:04 2016 +0200

    fixup! change affected rows count on `refresh table`

commit a93ea51666054a36b77a81c4b2ad3e9d04ee51f1
Author: Augusto Elesbão <augusto@crate.io>
Date:   Wed Jun 22 17:48:57 2016 +0200

    change affected rows count on `refresh table`

commit 5b91fe7abdc650103d98a264cced2bc4c460803a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 22 15:49:01 2016 +0200

    RowMergers: Make sure pauseFifo doens't grow very large
    
    The pauseFifo could grow very large because after every resume there was
    a window where it could fill up further without.

commit ad6244c5768d8ea87d2c1345c8e17493b00dbcfe
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 22 14:09:28 2016 +0200

    Add javadocs to TopRowUpstream

commit 0db6d6172a700858b198c9fd44a1a4923fdc312e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 22 13:25:57 2016 +0200

    Always use SingleUpstreamRowDownstream if there is only 1 shard
    
    `passThroughRowMerger` was used because at some point the
    CrateDocCollector couldn't handle repeat calls and a RowMerger had to
    buffer the rows.
    
    But at some point repeat support was added on the `CrateDocCollector`.
    So it is fine to use `SingleUpstreamRowDownstream` for single shards, it
    will delegate repeat calls (the same way that `passThroughRowMerger`
    does)

commit 51add26d436f09c61e03d6e7b42e89cd8f7cad24
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Jun 14 23:19:23 2016 +0200

    handle exceptions in prepare phase of jobexecutionconttexts directly to prevent duplicate propagation through close/kill calls.

commit 72ef0145bc0fbb81a1f12df0d5a5958e2e0e9080
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jun 22 12:09:04 2016 +0200

    fixes bulk upsert response rowCount on duplicate key failures

commit 3f397bb52bee7466fed0f109e44a19445c171eb3
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jun 8 18:02:27 2016 +0200

    moves Ordering related unit tests to new OrderingByPositionTest class
    
    (cherry picked from commit 4f396a23181982111642b923c7ee04ecace8e303)

commit d187eec372664459f86cbacb91e28de89ac166c9
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Jun 21 14:11:12 2016 +0200

    Fix spelling and formatting

commit 7418a9255046f66c20ae36aad29b65827de1d749
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jun 20 15:08:17 2016 +0200

    fixes number of bulk results on multi-value bulk inserts

commit 2bacb4561389b933216b9e22f435b3431340df66
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jun 20 10:54:55 2016 +0200

    fixed path to sigar lib in crate.bat for windows

commit 16201e05a9f8998ab551df20106f76a83c092a32
Author: Augusto Elesbão <augusto@crate.io>
Date:   Fri Jun 17 18:21:23 2016 +0200

    fixup! Try to fix flaky test by increasing thread timeout

commit 8c0ddf6ac4ed38b9446e12acd467b07021220569
Author: Augusto Elesbão <augusto@crate.io>
Date:   Fri Jun 17 17:55:59 2016 +0200

    Try to fix flaky test by increasing thread timeout

commit d06a02a63ae674f4645d0d9aada2b709ece8c128
Author: Augusto Elesbão <augusto@crate.io>
Date:   Fri Jun 17 14:45:38 2016 +0200

    Fix COPY TO documentation

commit cc6c3f91fdaed1c1f38dad6a75fd94b56e4e8067
Author: Augusto Elesbão <augusto@crate.io>
Date:   Tue Jun 14 17:50:27 2016 +0200

    Avoid creation of corrupt file on COPY TO
    
    Deprecate usage of COPY TO without specifying a DIRECTORY. This will
    prevent a user from defining an output path that conflicts with multiple
    shards.

commit 2a5853f5f9b27aba1e804ac905f6f84c72f250d0
Author: Augusto Elesbão <augusto@crate.io>
Date:   Fri Jun 17 14:33:53 2016 +0200

    update development instructions to use python3

commit c742f9c8b3e56774c95f2af227d279c481900cd7
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jun 16 14:39:41 2016 +0200

    fixes proper validation of the `index.blocks` settings at all operations

commit 6e5d4668d42a20ca9a7ace5864713392b5135853
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 17 11:14:23 2016 +0200

    Change Task.execute and Executor.execute to take a RowReceiver
    
    This removes the TaskResult from the interface in order to make it
    possible to later on stream rows via RowReceiver to a client.

commit ffa6ec566faa26af81ebf0a291616964ea6dd45a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 17 11:53:28 2016 +0200

    Revert "Set CHANGES.txt git merge driver to union"
    
    This reverts commit ce5037b73c4d1d6dd6bcc752a9f968adf2a3947a.
    
    Instead of removing the hassle with merge conflicts on the CHANGES.txt
    file it lead to a couple of mistakes because it merged the CHANGES.txt
    incorrectly without merge conflict.

commit c198feca0b407326f5af4da8d0f736ee986537df
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Jun 16 22:26:46 2016 +0200

    Fix: Bug when selecting columns with multiple levels of nested arrays

commit 3dfcd9f70a8447afc951387730633e5c37ce668d
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Jun 17 09:51:07 2016 +0200

    Remove explicit unboxing to primitive

commit 196bedee905718e71eb5e54b5db207252ad00613
Author: Marios Trivyzas <marios@crate.io>
Date:   Thu Jun 16 22:31:56 2016 +0200

    Add .venv to .gitignore

commit 74e69a66a017048ba00103be33db1f3cf9c5f68c
Author: Augusto Elesbão <augusto@crate.io>
Date:   Thu Jun 16 17:46:12 2016 +0200

    Fix NPE on equality comparison

commit 6afe00abd11c5760347014381ddac7fd227afcec
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 15 22:04:33 2016 +0200

    Replace buildout with virtualenv/pip install
    
    This should speed up the doctests from a clean checkout a bit.
    Pip can utilize wheels which is faster than how buildout installs
    packages.
    
    Before:
    
        195.64s user 4.90s system 140% cpu 2:22.88 total
    
    With this change:
    
        134.22s user 3.65s system 235% cpu 58.516 total

commit 1ca7fbc494868ab3d380a7b923dfd0a769164d9d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 15 21:32:36 2016 +0200

    Don't rely on buildout for hdfs tests

commit 7cd3b66180ddd34edae15968a88e23b3505d04ef
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 15 20:18:49 2016 +0200

    Don't rely on buildout for JavaRepl
    
    This will make it easier to remove buildout later on.
    
    In addition it will make it possible to cache .cache/crate-tests on
    travis to avoid having to re-download the java-repl file all the time.

commit 05af2737b8fae7921148bcf54225a42349f5f8a8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 15 17:52:10 2016 +0200

    testing: Remove ClassLifecycleIntegrationTest
    
    Replaces it with SQLTransportIntegrationTest.
    
    ClassLifecycleIntegrationTest was used as a kind of GLOBAL ClusterScope
    to have faster read-only-query tests.
    
    But the test setup was a bit flaky and could result in
    NullPointerExceptions.

commit 47ddcbeb0345eda4afeed4a271315b95bf0fdfdf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 6 14:37:39 2016 +0200

    require python3 for blackbox tests
    
    Also use ``venv`` to have a isolated python without system libraries.

commit 4d3519171333163f4f7a848fc987e8e95263a659
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 14 13:31:23 2016 +0200

    Fix some javadoc warnings

commit 951d34c1fdb9e7739f1ab593263bbe29e964d0bd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 14 12:04:12 2016 +0200

    Don't use guice to create CrateClient dependencies

commit 005729bf33381b58c702263f1b2ce83ce5e0b810
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 14 11:51:38 2016 +0200

    Remove InternalCrateClient indirection

commit b63d69cfd1df0cf8b1ffe353704ea617be52e4d3
Author: Augusto Elesbão <augusto@crate.io>
Date:   Tue Jun 14 13:23:36 2016 +0200

    Disable Hadoop MiniCluster data replication
    
    Also disable MR cluster startup - it's not necessary for HDFS test

commit a8c771c997f44b4c3e168fa1b4d58d318c22cf10
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jun 13 14:35:40 2016 +0200

    fix order by validator to recognize rewritten SELECT DISTINCT queries

commit 329822b17397b639cdf4a9f7df6f88a3f5768343
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 10 17:51:39 2016 +0200

    Replace ActionListeners.wrap with a ActionListener & Future
    
    This adds a ``FutureActionListener`` that is both a ``ListenableFuture``
    and a `ActionListener``.
    
    This can be used instead of having to create a ``SettableFuture`` and an
    anonymous ``ActionListener`` to transfer the result.

commit 0cd202e3011c881fe1a94a0bb8c6941c6924c1e7
Author: Marios Trivyzas <marios@crate.io>
Date:   Fri Jun 10 10:41:25 2016 +0200

    Use custom DataType for count aggregation to avoid boxing long to Long

commit 905e87d8602be488e73409986ca21c22bc981b3e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 9 19:36:29 2016 +0200

    Make sure PageDownstream doesn't call upstream listener twice
    
    Additional improvement to 23388ddcd075c92f3d7297020151575bb37c49e4
    
    After the upstream was finished resume/repeat would cause additional
    needMore/finish calls on the upstream

commit d7d4f0b24708dfc14c07bcdab456227ad94725a5
Author: Augusto Elesbão <augusto@crate.io>
Date:   Wed Jun 8 18:29:00 2016 +0200

    remove deprecated methods from `Task`

commit 23388ddcd075c92f3d7297020151575bb37c49e4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 9 15:19:29 2016 +0200

    Handle pause correctly during consumeRemaining in IteratorPageDownstream

commit 6b6a4d9af023a3e34e65024cb2a7108bee51faec
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jun 9 14:43:01 2016 +0200

    do not reuse analysis in retry cases since it is mutable, also the retry wrapper is now only applied on read-only operations

commit e5aa11bea20166e46f2d6193bf454191a533cfe8
Author: Claus Matzinger <claus@crate.io>
Date:   Thu Jun 9 10:43:08 2016 +0200

    fixed typo, added note for copy from

commit 2e5bf4325baa4903d8a652ae2c58a17e3376ac14
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 8 15:28:23 2016 +0200

    Decouple transport from FetchProjector

commit 05d725309d8d4b845a186204c632a85246751ac9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 8 15:13:19 2016 +0200

    Move FetchProjector into fetch sub-package

commit 8065e1daf6b1628678f5dfc0eae94743d6186cb5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 8 18:05:39 2016 +0200

    Include original error message in prepare context failure

commit b32a36f519fac9622278bcaf2618aeba3664a829
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 8 13:33:12 2016 +0200

    Fetch: Expose interfaces instead of concrete classes

commit fb1328d0b9d7a933441ad7216a0dc306b3bc0952
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 8 11:36:42 2016 +0200

    Change inner class visibility and initialize Fetches in ctor

commit dd4b9892df68a03f7e6d9f9999b8004e78775a11
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Jun 7 21:34:46 2016 +0200

    Fix problem with java_repl process keep running after tests finished execution

commit 433d22c2ba6e3768059db654584e9d0559f6f39b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 2 18:12:50 2016 +0200

    Make CrateClient documentation executable
    
    This adds a new ``jv>`` marker to the doctest setup. This marker can be
    used in the documentation to write Java code that will be executed.
    
    Only errors return an output. Everything else is silently executed.
    This is because https://github.com/albertlatacz/java-repl is used to enable this
    functionality and its output doesn't indicate if something was just an
    assignment.
    
    It'd look like this:
    
        {
            'expression': 'SQLRequest request = new SQLRequest("select * from sys.nodes where name = ?", new Object[] { "node1" });',
            'logs': [
                {
                    'message': 'io.crate.action.sql.SQLRequest request = SQLRequest{stmt=select * from sys.nodes where name = ?, args=[node1]}',
                    'type': 'SUCCESS'
                }
            ]
        }

commit 8763b50ea6cf5e819790ff5ab83035fafdf53355
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 7 20:35:50 2016 +0200

    Testing: Remove duplicated RowReceiver implementations

commit f3622a97b80ba766bfd84cdc2ee90ed68e8c8a5a
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Jun 8 09:21:50 2016 +0200

    extracted PageBucketReceiver interface from pagedownstreamcontext

commit 3ceb1ed764ad6a53ebe383b4825c13b312486925
Author: Marios Trivyzas <marios@crate.io>
Date:   Tue Jun 7 14:43:48 2016 +0200

    Fix code when deleting partition. Always use lenient to avoid exceptions with concurrent deleting of the same partition.

commit 09008df4fc27fe21a393bfa1bbf60f10a9a39e2d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 7 16:41:19 2016 +0200

    ExecutionPhasesTask: Create package and move inner classes to top level

commit b114f087e8858fe0d4b066da9fcbf36e17474a92
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 7 15:53:23 2016 +0200

    Remove OperationType and utilize explicit bulk in ExecutionPhasesTask

commit c04e3ff63262992557e1ca6522f9e6e06e01adbd
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Jun 7 08:18:54 2016 +0200

    manage downstream contexts of nested loops directly in JobExecutionContext

commit 1b84e8059f29058dd5d9075766844f626f44ae5a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 7 09:53:34 2016 +0200

    Don't shutdown node while requests are active

commit 1d6a414204d6e056d5b04e77bd36296f5ab30f3d
Merge: 0b0bc77c4a 48ef6770cc
Author: Aslan Bakirov <aslanbekirov@gmail.com>
Date:   Tue Jun 7 09:42:31 2016 +0200

    Merge branch 'ab/cpu-used-bug'

commit 48ef6770cc47c118f43d144520d2b738e456652c
Author: Aslan Bakirov <aslanbekirov@gmail.com>
Date:   Mon Jun 6 14:03:32 2016 +0200

    Cpu used in os column of sys.nodes fixed

commit 0b0bc77c4a1647dd12e6352502d1d264551595ef
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Jun 6 17:42:20 2016 +0200

    Moved jobs log tests to a separate class to avoid interfering with other tests running concurrently.

commit 3e0da64dad99ba9090b23f93b74f8aa9cad4fde7
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Jun 6 16:04:07 2016 +0200

    Add changes entry for order by validation fix: eeb50d4d152ac423af58eda7cc3154c9324908ce

commit 9925433c1979011a6c1d4ebd56025b3f9be540e2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 6 13:52:32 2016 +0200

    Remove IterablePlan and enforce single Task execution
    
    The TransportExecutor still had visitors which indicated that there can
    be more than one task in an execution plan. But that was never the case.
    
    This commit changes the internal visitor interface to make it clear that
    there is only one task.

commit a0d3b6d8ad57677a2d6189d05c3495fe210c008f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 6 12:10:15 2016 +0200

    Remove deprecated methods from Executor

commit c1632d014c094d2d1eaee8f0da06c098e7ca6d19
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 6 10:43:39 2016 +0200

    Change ESDeleteNode to be a Plan

commit 57840b7659697bc68c182c1f117bd4412d94c3ff
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 3 17:39:30 2016 +0200

    Change ESClusterUpdateSettingsNode to be a Plan

commit fc7c8b7a4f44cee050d39c5bc32d4faab4290a56
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 3 17:21:33 2016 +0200

    Change DropTableNode to be a Plan

commit c0beb1ca6df321697160db7e3b2507137d3aba19
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 3 17:02:50 2016 +0200

    Remove GenericDDLNode
    
    It's possible to use GenericDDLPlan instead.

commit 040e534f34eb1dc92db7f3bc5ad8fccd1181327b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 3 16:43:32 2016 +0200

    Make ESGetNode a Plan

commit d02c61057c573a9fb1e27223e09f044a91dd0e2f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 3 16:33:09 2016 +0200

    Change NodeVisitor to return one Task instead of a List

commit 1b9f4b3e8f2455dcf772362a9b2e0ac60d3083d2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 3 13:51:48 2016 +0200

    Make execute/executeBulk explicit on TransportExecutor

commit eeb50d4d152ac423af58eda7cc3154c9324908ce
Author: Marios Trivyzas <marios@crate.io>
Date:   Mon Jun 6 13:45:22 2016 +0200

    Implemented analysis for correct usage of sort by fields in combination with aggregations.

commit 8df202e871b1d99572dd8400fef5ffc2b8630a67
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 6 14:45:10 2016 +0200

    Javadocs: Remove invalid true tag

commit 934622d31f7eacf9f554dd33fd68b058ad40ffb4
Author: Augusto Elesbão <augusto@crate.io>
Date:   Fri Jun 3 17:39:13 2016 +0200

    fix: test should wait for cache invalidation

commit 6f628207d8c90898f78c2565306677e1bfb2d3e7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 3 14:22:13 2016 +0200

    remove activeRequests from StatsTables
    
    Was unused

commit ee5c21e65ba2db92754cb697d1ae9f0e5f1b4821
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 3 14:12:25 2016 +0200

    Wrap listener to manage statsTables call and transform exceptions
    
    This moves the `statsTables` calls which should be made after a request
    has been processed into a listener.
    Same for the `buildSQLActionException`
    
    These calls were at various places and it would have been easy to miss
    doing that.
    
    This commit also removes the KILL MESSAGE handling that was in a
    `onFailure` block because `buildSQLActionException` already handles
    InterruptedExceptions and sets the correct message.

commit e24107fde7480723766fac29d40648160803f08b
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jun 3 14:22:23 2016 +0200

    updated admin ui to 0.18.1

commit 1738f215713cd5f8e3644f39976025d9718b8a43
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 3 11:51:38 2016 +0200

    Remove the ability to chain tasks

commit c33f8bc9abe977dc154828066295c24e488125be
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 3 11:43:28 2016 +0200

    Remove AbstractChainedTask
    
    The two tasks that used this base class don't require "chaining"
    anymore.

commit d07d979784381c94414e67cba63da8ce59f77a47
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 3 11:14:29 2016 +0200

    Remove unused ESCreateTemplateNode & Task
    
    Only usage was in a test

commit 4406f0f20e07312fec71feb9805e38b7be2f6e23
Author: Marios Trivizas <matriv@gmail.com>
Date:   Thu May 26 14:01:04 2016 +0200

    Implemented trigonometric scalar functions.

commit 29d962bcdc4caa304bc4b91a1d2b11008943031a
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jun 2 17:57:25 2016 +0200

    upgrade ES upstream
    
    related ES commit:
    https://github.com/crate/elasticsearch/commit/47f04a6754fd4a4c42bf137dad37bbc5d1080711

commit e5e85c19d7b08edc0e26069bd2ba5493f5df700a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 2 11:00:29 2016 +0200

    Explain more things in CrateClient documentation

commit d2b390d926e12dfbd061710831dc1042def37ec8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 1 20:19:29 2016 +0200

    Really update admin-ui to 0.18.0

commit 19d5a096a3c85d2c4d57bb53d89df4b251c3eb09
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 1 16:43:30 2016 +0200

    Add a changes entry for sys.node_checks

commit 772e57bde1cf5eb4b3b0b838c7880a35df30f00d
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 31 11:30:13 2016 +0200

    adds documentation for the new `sys.node_checks` table

commit 09443007c1043b2267489c8fb0a2aa0eb5402d56
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 31 11:13:37 2016 +0200

    Add `sys.node_checks` update support

commit 67a694a70b22397422de50ab16628a00b51b17c9
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 31 16:48:39 2016 +0200

    use separate links for `sys.checks` and `sys.node_checks`

commit 8f6317766ea4c2a7666080c8a10e8850abf3dc95
Author: Augusto Elesbão <augusto@crate.io>
Date:   Tue May 31 11:38:50 2016 +0200

    move jvm and recovery checks to `sys.node_checks`

commit 8d3eb8a0b987baa3e4cb8738c33c5535be9e5a8b
Author: Michael Beer <michael.beer@crate.io>
Date:   Tue May 31 16:04:04 2016 +0200

    fixed changelog entry that is listed twice

commit cbe64de3d7a3632b2841a17c16ca3d4a6365b59a
Author: Michael Beer <michael.beer@crate.io>
Date:   Tue May 31 15:31:17 2016 +0200

    fixed current region selection in AWS
    
    - https://github.com/crate/elasticsearch/commit/0c8a0ee395d2a980e48f680a7dced439208ced01

commit b3f1f0171ac3f701073a6c0d8d1ee327953a6c7e
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 31 11:31:07 2016 +0200

    removed wrong example query related to `sys.checks`

commit 97ce2e6a0180be07e56482c3ec1ef7525aa86c75
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 31 10:22:34 2016 +0200

    use real sql query for sys.checks documentation

commit e5f45ad27f03468d6c223f194aa70eb9f3e0d9bb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 30 16:26:21 2016 +0200

    move update field validation into DocTableRelation
    
    In order to move some `DocTableRelation` specific code into the
    `DocTableRelation` itself.

commit 04f990ab0cf40adae24f9a8f0f281ff29ba2d22b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 30 15:23:13 2016 +0200

    Change `getWritableField` to `getField(path, operation)`

commit d5ca0a21222c52e9e77c3423d481e107895fa519
Author: kovrus <ruslan@crate.io>
Date:   Tue May 31 09:25:41 2016 +0200

    sync the changelog accordingly to 0.55.0

commit 94532f901671436bffb9d260f03c807161f7fe90
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 30 17:57:53 2016 +0200

    Don't allow nulling primary key values
    
    A primary key column could be changed to a null value if it's part of an
    object and the whole object got replaced:
    
        create table t (o object as (x int primary key, y int));
        insert into t (o) values ({x=10, y=20});
        update t set o = {y = 12};
        select o from t;
        +-----------+
        | o         |
        +-----------+
        | {"y": 12} |
        +-----------+
    
    This commit will prohibit that.

commit 4b7f5155999e11a1563c4eb75eb295cf8ad85ce6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 30 11:56:40 2016 +0200

    Add supportedOperations() to TableInfo
    
    In order to have a more granular information about what kind of
    operation is supported on a table.
    
    This will be used to allow update operations on certain system tables.

commit 423465da3a36cd03dd98cbbcc72c02112eb835e2
Author: Sebastian Utz <su@rtme.net>
Date:   Mon May 30 16:11:56 2016 +0200

    let graceful test layers bind to localhost instead of any
    
    otherwise they could bind to virtual ifaces (e.g. vpn one's) and fail

commit ad9fc3a46cb377524b01c0800952fe4573e07721
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 30 13:30:14 2016 +0200

    Use unshaded ImmutableList in IndexBaseVisitorTest

commit 3750c0c99b98d22d1fad07ea6fe04f8b54c027bb
Author: Augusto Elesbão <augusto@crate.io>
Date:   Mon May 30 12:27:59 2016 +0200

    Fix title underline

commit f44ce972e53082d8dd41c5c15782b9024b6abd06
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 24 17:11:39 2016 +0200

    Update hdfs plugin to v2.3.2

commit 77e2690c34d43303d26aef1eecfcad2ef92ac0e8
Author: Augusto Elesbão <aelesbao@gmail.com>
Date:   Tue May 24 16:09:25 2016 +0200

    Upgrade to Elasticsearch 2.3.3

commit ee09b98027de654380f34b1e30c0918311c38cc7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 30 11:13:32 2016 +0200

    Remove unused getBytesRefs from LuceneQueryBuilder

commit f9befb4bfd74a1a7744a3a577b907382aa03db38
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 30 11:10:43 2016 +0200

    Remove systemSchema from SchemaInfo
    
    The systemSchema property was used to see if a schema contains writable
    tables. But this check is now done based on `DocTableInfo`.
    
    The only usage for systemSchema was in a test.

commit 1e1a94a917726ae08268a8dee83ef8db98da97c5
Author: Claus Matzinger <claus@crate.io>
Date:   Thu May 26 10:06:15 2016 +0200

    Added cluster check entry about Java7

commit 744da7315b93ebfd4112ddb1d42a5b0f7b016331
Author: Michael Beer <michael.beer@crate.io>
Date:   Wed May 25 15:40:43 2016 +0200

    added link to aws block device naming

commit a4d998bbeb3664bc9fbd66a986fce426cc15b3e8
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed May 25 16:10:31 2016 +0200

    Updated crate-admin to 0.18.0

commit 27e58b5600beb25f248c68ddce4de187f67cb3d5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 25 13:53:30 2016 +0200

    Cache gradle stuff on travis
    
    See https://docs.travis-ci.com/user/languages/java#Caching

commit e928074f7e0faba6e3911cc11f88e5fa2482f739
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 25 12:09:15 2016 +0200

    Replace if/else blocks switch switch statement

commit 25c1dd3463fa981787585b2933836cf12144bad8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 25 12:04:14 2016 +0200

    Don't freeze fsStats on node startup
    
    The fsStats were only retrieved once when the NodeSysExpression was
    created. This changes that to retrieve the stats each time a request is
    made.

commit 5bde6af217b02d066ec074f89d36af271a43f860
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 25 10:48:25 2016 +0200

    Change duration on SQL(Bulk)Response from int to float
    
    In order to have more precision without changing from `ms` to something
    else. (Otherwise the duration in Crash would be broken)

commit 3a9f659e87115cd7616a5bf3dc2fdbbe3607c794
Author: kovrus <ruslan@crate.io>
Date:   Tue May 24 15:52:54 2016 +0200

    fix bug in cache invalidation logic of DocSchemInfo
    
    The invalidation logic didn't consider cases where the
    indexName didn't match the tableName. It has resulted
    in incorrect behavior of the tables deletion.

commit 45805f0f8bc8d6db396b819532d37001a21ddedb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 24 13:41:39 2016 +0200

    Utilize batch processing for bulk-indices creation
    
    Similar to df16ada5ed66eff55e05a095d3cf34d11973672f (for 0.54) - this
    speeds up bulk-index creation by processing clusterState updates in
    batches.

commit aed1dd82e3b6ec7fa9785aa3a831eba5b4fa1c34
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 23 16:36:11 2016 +0200

    Implement kill in DMLProjector and IndexWriterProjector

commit ed78876068b9bcd7f3d9fa5b8c8ffe009b0c6a7c
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue May 24 10:19:55 2016 +0200

    removed unneded language level definition for intellij
    this also fixes an output path issue

commit 43bf934d778f9ab8d1f2b898d7e3a2c3a79f2001
Author: Claus Matzinger <claus@crate.io>
Date:   Mon May 23 12:12:45 2016 +0200

    Added links to Cluster checks.

commit ecef4431ac1debb8bae48884b5139155bb0e1f29
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 23 15:47:38 2016 +0200

    Fix ClassCastException on `function IN (...)` queries

commit a1233b101f3776f243dda8498502b5ad21b5cac4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 20 10:56:15 2016 +0200

    Call super.readFrom/writeFrom in SQLRequest/SQLResponse
    
    There are already changes that break the serialization so it's possible
    to clean up the serialization of the SQLRequest & SQLResponse

commit 4d11d7672244cfaf5a64aa1ddcd334e243d9ebde
Author: Michael Beer <michael.beer@crate.io>
Date:   Fri May 20 10:17:22 2016 +0200

    fix literal error in reference doc

commit abd28fbef289a2d7f645b825e36ab408d60de253
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 19 22:26:44 2016 +0200

    testing: Mute unchecked warnings

commit 17e084423c6d0eed5a1f4c6b20ed8cf040b0074b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 19 22:04:30 2016 +0200

    Remove creationTime from SQLRequest and calc duration server side
    
    The duration in the SQLResponse was calculated lazy and was based on the
    creationTime of the SQLRequest.
    This caused an inconsistence between transport client and http clients.
    For transport clients the duration measured the full round-trip. Http
    clients measured the time it took to process the request on the server
    side.
    
    This commit changes the behaviour so that the duration is always the
    time it took on the server to process a request.

commit b35ea1eff5583e551850fdb75ca6addca6803bd7
Author: Michael Beer <michael.beer@crate.io>
Date:   Fri May 13 11:06:14 2016 +0200

    apply default number of shards upon table creation

commit d08c592d45e5faf3bde0dbda98c067bfa7674477
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu May 19 09:53:57 2016 +0200

    factored out java module settings and set the source compatibility to 7
    this fixes the source compatibility in idea

commit 59e5ce5ee914928940e1c2494cd1a90dae0b8129
Author: kovrus <ruslan@crate.io>
Date:   Wed May 18 16:08:50 2016 +0200

    move NumberOfReplicas class to sql package

commit d5d71920cbd6d59b1ab4b48c6ce052af10dc2568
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 13 11:03:50 2016 +0200

    Add tests to cover sslPlugin enabled code paths in HttpBlobHandler
    
    Those tests verify that custom ssl logic in `HttpBlobHandler` works
    correctly if a plugin overwrites `CrateNettyHttpServerTransport` and
    sets `sslEnabled` to true.

commit 31e0f7f447eaa006e756c20bd32346b2680ebee6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 16 23:11:43 2016 +0200

    Remove pendingOperations from TransportBulkCreateIndicesAction
    
    The locking logic has been removed. Therefore the pendingOperations
    logic is no longer necessary as operations no longer blocks.

commit 56194417580a87860bca7743fd2e313d9a32bb4b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 10 13:48:03 2016 +0200

    treat sphinx warnings as error and run it on travis

commit 18da66d6526e18ba0e0dba5b01ebed511ff3761e
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu May 12 13:26:58 2016 +0200

    normalized changelog after 0.54.9 release

commit 71e66858ad71762e96027803bc2c214fa6ae65f1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 11 16:24:16 2016 +0200

    Enable plugins to add ssl support

commit 4c2851373739f85a5a7d12923ce0cf325da30274
Author: Chris Ward <chriswhward@gmail.com>
Date:   Thu May 12 10:39:21 2016 +0200

    Fix various small issues to remove sphinx errors
    
    Fix quick typo
    
    Added systables to doctree
    
    Fixed reference issues

commit 3c91758370b7248babe0ea5aae4749c1f8c0d517
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Thu May 12 10:51:32 2016 +0200

    correct yaml syntax

commit aa93a11841f7dec72d653c5e6c5fd0707d5dd2f2
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Tue May 10 08:56:11 2016 +0200

    added section for quick config

commit 7ad4803cc0b26311bd4ffe5a5d5414dba60017c9
Author: Sebastian Utz <su@rtme.net>
Date:   Wed May 11 15:03:11 2016 +0200

    adds CompletionListenable/Listener interfaces
    
    currently only used at all contexts instead of callbacks

commit 621637f99becfe26d7f67f65fad4c25c56dad486
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 11 13:56:11 2016 +0200

    Extend NettyHttpServerTransport instead of copying it
    
    I think back when we initially created the blob stuff we had to copy the
    `NettyHttpServerTransport` because we depended on a shaded ES jar and
    couldn't use certain netty classes.
    
    This is no longer the case, so it's possible to just extend the
    NettyHttpServerTransport.

commit 760d92059eda3600894a7320515a873b3fbe36b3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 10 15:14:43 2016 +0200

    update gradle to 2.13

commit 65031b559d2895067b59dcb7a02d418be1c8ef41
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 10 14:35:07 2016 +0200

    [docs] Use SQL highlighting for create analyzer block
    
    Fixes a sphinx warning:
    
    > ddl.txt:654: WARNING: Could not lex literal_block as "psql".
    > Highlighting skipped.

commit ce5037b73c4d1d6dd6bcc752a9f968adf2a3947a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 14 10:56:29 2016 +0200

    Set CHANGES.txt git merge driver to union
    
    union behaviour:
    
    > Run 3-way file level merge for text files, but take lines from both
    > versions, instead of leaving conflict markers. This tends to leave the
    > added lines in the resulting file in random order and the user should
    > verify the result. Do not use this if you do not understand the
    > implications.

commit 49600719fc027b7cfa8d97041038b114e0c13213
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 10 13:58:20 2016 +0200

    re-add docs symlink
    
    Got removed in 80483a5a105ad19dc8a0e389275f40eb4ee8da67 for no apparent
    reason.
    This broke our rtd build.

commit be03cc540d1c83773df2f3ddaf42dcf1a39cefe0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 4 21:58:29 2016 +0200

    Replace "\n" usage with "%n"
    
    In order to be platform independent

commit aaa9f258ad075ea1425ec551901641349a322975
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 10 13:10:54 2016 +0200

    Don't schedule context cleanup if there aren't any

commit 889897660f9c5ffb456a4d77a3fb5269de572f4b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 10 10:36:30 2016 +0200

    Don't set `+HeapDumpOnOutOfMemoryError` by default

commit 4ebda866588627e0bd8badbec942b2a2d3965343
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 9 13:53:30 2016 +0200

    cleanup jobs if coordinator node disconnects
    
    In order to prevent leaks of passive contexts (like FetchContext) which
    don't "finish" by themselves.

commit 0a81935b1621e5ddeab9c6d388e5b1e36f9abeb2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 9 14:19:41 2016 +0200

    update es/upstream to remove obsolete test
    
    See https://github.com/crate/elasticsearch/commit/7a2be18b470a8fb36b9062243943de7e4e6bfb97

commit 0a417554431ae0eb9a6c34668d9a69a9618bcd9d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 9 11:25:57 2016 +0200

    implement hashCode and consider boost in equals in FunctionFilter
    
    In order to prevent query cache from re-using a wrong implementation

commit 993265a579e0c5a0f53edf146cd93c833aa9635d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 2 17:52:08 2016 +0200

    implement graceful-stop using a custom AllocationDecider
    
    This removes the GracefulStop patch from es/upstream
    
    Reasons for the change:
    
     - 3 flaky deallocator tests
     - graceful shutdown of more than 1 node concurrently didn't work
     - the patch was quite complex
    
    The new implementation uses a custom `DecommissionAllocationDecider`
    which works similar to the `FilterAllocationDecider` but uses a custom
    setting.
    
    This custom setting includes the nodeId in the setting-key to prevent
    two nodes that are being shutdown from overwritting each other.
    
    A `DecommissioningService` manages the setting and also stops the crate
    process once a node has been decommissioned.

commit d396b5550b9e45594982422191ce2968ef7ebd7b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 26 14:25:04 2016 +0200

    [testing] Use DirectoryStream to resolve crate tar file

commit 95140adb011a2f5552cbb2a836a438a2ba531fbf
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue May 3 17:29:05 2016 +0200

    use Crate favicon

commit 6d1e8851b2fc4b871851a0f93f05511d3c82e6cb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 3 16:44:43 2016 +0200

    Download hadoop only if hdfsTest is run

commit 4a7fdc3411cfca27fd16b7e434e081f9e5d5efc5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 3 16:16:44 2016 +0200

    remove lovely.testlayers
    
    In order to get rid of the SyntaxErrors during buildout under python3.
    
    Only the CascadedLayer was still in use - and it has only 10 lines of
    code.

commit 86cf75c1be373355d6ad42cc249c59aedc29d703
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Apr 28 10:05:20 2016 +0200

    fix conversion problem of FS stats
    
    file system stats were reported incorrectly in a magnitude of 1024
    because the unit of the sigar probe values was assumed incorrectly

commit 4b700df3d58d678a62e4ed4cc4963c7847135850
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Apr 29 08:56:18 2016 +0200

    improved retry logic in bulkretrycoordinator

commit 2af2b60de0ebfbe6313828aedd39d96d885f8090
Merge: 757ad56d7c c8d886576e
Author: Aslan Bakirov <aslanbekirov@gmail.com>
Date:   Tue May 3 10:38:44 2016 +0200

    Merge branch 'ab/systables-doctest-fix'

commit c8d886576eef54c8fb7af302f73cc9ff348f6e47
Author: Aslan Bakirov <aslanbekirov@gmail.com>
Date:   Tue May 3 09:59:09 2016 +0200

    Doctest for systable exception fixed

commit 757ad56d7cd2b2b871f5e2761daad896d923ba42
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 29 16:02:24 2016 +0200

    Add shard wormhole to handle shard relocation without retry
    
    The retry logic is dangerous when executing queries with "relative write
    operations" (something like `x = x + 1`).
    It could repeat a operation that was already successful.
    (E.g. `x = x + 1` on shard 1 worked, but shard 2 failed)
    
    This commit adds a shard-wormhole which will prevent shard failures due
    to relocations by proxying to another node.
    
    This wormhole will only be used if the shard failure happens during the
    creation of a `CrateDocCollector`.
    
    Other places (`FetchContext` creation, sorted collector creation, ...)
    will still fail and require the retry logic. But in those cases there
    are no relative write operations so it is safe to retry.

commit e5a79428fa45b9880d16188cabacb876fd2b6311
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 2 11:18:35 2016 +0200

    Remove unused declarations from KillTaskTest

commit 80483a5a105ad19dc8a0e389275f40eb4ee8da67
Author: Nils Magnus <nils@crate.io>
Date:   Mon Apr 18 16:34:55 2016 +0200

    Added documentation about troubleshooting with sys-tables.

commit 6e0d79324db0239ce7f9b987da706dfe85334481
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 29 09:00:51 2016 +0200

    [client] Include lucene.codecs services files in shadowJar
    
    If the client is used with assertions enabled it will try to load the
    PostingFormats. That failed because it couldn't locate them as the
    META-INF/services files were missing.

commit 2708c1d4567540f6f78da6d38515bd9eac41f252
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 27 15:11:26 2016 +0200

    Add a hdfs integration test

commit 977cbf1314e1ff25318a07122bb998ebdc586571
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 27 12:19:30 2016 +0200

    Create a folder for blackbox tests and move docs into it
    
    This moves the buildout setup from the docs folder into a blackbox
    folder. This way the buildout setup can be re-used for non-doc specific
    blackbox testing.
    
    A symlink from `project_root/docs` to `project_root/blackbox/docs` has
    been created to keep the documentation visible on the root level.

commit 2014098b4dd823b354c65030902f952d861040fb
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Apr 27 12:53:54 2016 +0200

    fixes newly shard action tests

commit 8614a312da5e785f39e2e6a57fcefc850cbb7423
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Apr 27 10:28:20 2016 +0200

    load ``crate.yml`` explicitly and do not allow any other extension than ``yml``
    
    this is a combination of commits
    https://github.com/crate/crate/commit/e11f532bb5c367174cf33b4a76ee7158c7857f97
    and
    https://github.com/crate/crate/commit/1f9e67a3e16101b6ef10e5ab7992bfa3eca1ea90
    that have been applied to 0.54 and adopted to the recent ES 2.2 upgrade

commit 8e84b91242aabc628afc2bd7c6b69e484b1d3e25
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 26 15:43:06 2016 +0200

    replaces CancellationException with InterruptedException
    
    Since ES switched exception streaming from java serialize
    to own streaming format, a CancellationException would be read
    as an IllegalStateException (which it derives from).
    This makes streaming a CancellationException unusable.

commit c768fbbba315f5c7db08c4bc5141ce8732cf4200
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 26 16:41:20 2016 +0200

    fix: shard actions must replicate already processed items on kill

commit 743d80e828c433f7cec1c459f652eaef35fd12db
Author: kovrus <ruslan@crate.io>
Date:   Tue Apr 26 14:31:20 2016 +0200

    restrict table creating with pk in array columns and its children

commit c11dc1c1b3672d6ca24c58ac14d27486ca236afb
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 26 11:07:16 2016 +0200

    renames all scalar function names to lowercase
    
    CamelCase names are transformed to lowercase
    using `_` as word boundary (affects mostly internal
    functions)

commit 71150b4dcbfe3d83e3ec0a0e5209857a1f9c9f0e
Author: kovrus <ruslan@crate.io>
Date:   Mon Apr 25 17:07:16 2016 +0200

    fix bug in validation of array generated columns

commit 265103229f3aac6d50323a0c2a8a7a0e46593e17
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Apr 25 15:07:13 2016 +0200

    fixes file collector kill and setNextRow result behaviour
    
    - Collector must really stop collecting if rowReceiver
      don't want any more rows (also on multiple URI's)
    - call rowReceiver.kill() on kill instead of setting a flag

commit 3f897ef3e201411375e7b13ba651009ab1a2cbde
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 25 15:06:53 2016 +0200

    update es/upstream for recovery setting update fix

commit 120ef40c0827255e2d476895661951aa3a331a1b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 25 11:25:31 2016 +0200

    update es/upstream for throttle.type reset fix

commit 427846dd7f7c4c362138562abba04bcacbb6dee5
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Apr 22 17:51:34 2016 +0200

    [testing] removed usage of deprecated ES prepareCount() method

commit 17855d90d37881cdac4cc083fbfad9312b7fe3b5
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Apr 22 17:42:34 2016 +0200

    [testing] removed deprecated whereClause() test helper

commit 17641085b5eae3114c46f4d14d616ce34c35390c
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Apr 22 17:04:25 2016 +0200

    [testing] removed deprecated createFunction() test helpers
    
    replaced usages with SqlExpressions.asSymbol()

commit d0f9f62a461fd03e596f01c409792c39cf60a64f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 22 16:00:21 2016 +0200

    Move broadcast logic from KillTask into TransportAction
    
    By moving the logic from `KillTask` to the `TransportAction` the
    `TransportKillAllNodeAction` follows the pattern of
    `TransportKillJobsNodeAction`.
    
    In addition this commit also extracts some shared logic between those
    two TransportActions into re-usable components like the
    `MultiActionListener`

commit 868a975f6e9fec4128462bb5fbce99a2c80d302a
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Apr 25 09:44:43 2016 +0200

    fixes NPE at `substr` scalar function

commit 318731d6109807040ce18474195e555084370162
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Apr 25 09:43:55 2016 +0200

    removed all references to slowlog
    
    slowlog is not used in Crate

commit 0c3a1dae21f744eb98bfa6db47ebd653e71cc422
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 22 14:19:33 2016 +0200

    Remove localNode execution optimization from Transports
    
    The optimization became part of `TransportService.sendRequest` with the
    ES 2.X upgrade.
    
    Didn't remove the Transports class completely because of the nodeName ->
    DiscoveryNode resolve logic.

commit 23c141507cac18c7c9d13deb8e2f361773d509a8
Author: kovrus <ruslan@crate.io>
Date:   Fri Apr 22 08:52:31 2016 +0200

    rename the logging overrides cluster setting
    
    settings['logging_overrides'] -> settings['logger']

commit a58cc0528f5b6e603b02d9f397baf1bd38be98c9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 21 18:57:45 2016 +0200

    update es/upstream to skip bogus file in plugin discovery

commit 4aaaeac1afe80f8fbf244cdd1460d3be65ebae11
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 21 15:50:34 2016 +0200

    tests: change example.com to crate.io
    
    Because crate.io > example.com
    
    (And for some reasons our jenkins slaves can't resolve example.com)

commit ce8361aca372417c3f9ba5c25f32a052b8f969a5
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Apr 21 15:43:28 2016 +0200

    catch ResourceUnknownException instead of concrete TableUnknownException
    
    raised exception could be any child of ResourceUnknownException

commit f817ee1dab615cc75c0abb02f1ece18e80dcf7bf
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Apr 21 15:18:14 2016 +0200

    fixes assertion disabling for LuceneTestCase childs
    
    LuceneTestCase.TEST_ASSERTS_ENABLED defaults to true
    which raises an exception if global assertions are disabled

commit 60c6dbae4fb70889e341685e939df68ded0f018a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 21 12:59:54 2016 +0200

    Transports: Use `listener.onFailure` instead of raising exceptions
    
    Consumers of the executeLocalOrWithTransport method don't expect it to
    throw exceptions and don't handle them.
    
    This could lead to stuck queries as the exception could be swallowed.

commit 6d70b190422fd97aeb946634b7037de1f614eb90
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Apr 21 09:59:02 2016 +0200

    upgrade ES upstream to remove snaphot from version

commit 54c79ea7e4c4956270b49970a92469a204a677bb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 20 14:02:48 2016 +0200

    testing/sigar: fix flaky testOsStats
    
    The default in the ExtendedOsStats.Cpu class is -1 so anything greater
    than that is okay.

commit 563ee78f45618025fde0feba507a7dc94d2fd321
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 15 22:04:14 2016 +0200

    Remove partitionPositions from GetResponseContext
    
    They're unused

commit 903ae6e6ce10f76dfb9047c15fc27321f38417e9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Apr 9 00:18:52 2016 +0200

    upgrade to elasticsearch 2.2.2

commit 1568d08f37b2c4e0b92ffe89baa04266460b3230
Author: Adrian Partl <adrian@crate.io>
Date:   Tue Jan 5 12:00:22 2016 +0100

    upgrade to elasticsearch 2.1

commit a560f3c61aa1b9e1fa62078b2782cda50f5a30ce
Author: Claus Matzinger <claus@crate.io>
Date:   Tue Apr 19 13:38:32 2016 +0200

    added joins documentation

commit 94c3bea5a6f2d1aaf3c66227f925dbdbfbc1b38b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Apr 16 16:36:26 2016 +0200

    Run aggregation projector on shard level
    
    This reduces a lot of blocking between the search threads and can speed
    up queries a lot if there are multiple shards on the same node.
    
    In a simple test with 5 shards on 1 node a sum aggregation query
    improved from 1.2 to 0.7sec

commit 93582f5a27dddd6bad74e28ccb5ac74599e7fb6c
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Apr 18 17:05:02 2016 +0200

    added shared nothing architecture document

commit 7995e238a5f1fc4b68a7549083db506f5e50aa00
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Apr 18 17:04:48 2016 +0200

    fixed highlighting issues in plugins.txt

commit 845c964c922b25defc5858d73fa6b3a1236264dd
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Apr 18 17:03:48 2016 +0200

    updated sphinx version to 1.4.1

commit e2633b5d1a99c931a097cf6d6c9cdcdf1c1445c1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 18 17:20:33 2016 +0200

    fix NPE in hdfs dynamicProperties handling

commit 129e622a3a3a3f1ae53ddff9154f4679905a50fc
Author: kovrus <ruslan@crate.io>
Date:   Thu Apr 14 15:35:29 2016 +0200

    Allow to set the log level of loggers at runtime using the the ``SET`` statement
    
    implement setting of logger level
    
    document how to set global logger settings
    
    allow logging settings to be reset
    
    expose logging overrides in sys.cluster table

commit d0bd531d085d2f93e04e2d5a823e8fd1b2f95de0
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Apr 15 14:59:29 2016 +0200

    fixes 2 alter partitioned table bugs
    
     - alter empty partitioned table settings changes
       setting on all tables
     - changing the column policy on a partitioned table
       throws an exception if more than 1 partition exists.

commit 59951bfc665592fcdc780ff5879932d796efa90d
Merge: 60d8587a8a e09e188c33
Author: Chris Ward <chriswhward@gmail.com>
Date:   Mon Apr 18 09:50:18 2016 +0200

    Merge pull request #3450 from crate/cc/broken-ref-links
    
    Fixing broken links refs to moved docs

commit e09e188c336bc37b406aa4848f4827867590d929
Author: Chris Ward <chriswhward@gmail.com>
Date:   Fri Apr 15 13:57:41 2016 +0200

    Fixing broken links refs, and some typos

commit 60d8587a8abf1d35f98ba45369eab52a4ceb7a9e
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Apr 15 17:02:32 2016 +0200

    fixes duplicate pk validation of all variants

commit 4f703e5d8f233ab216f35dd8c6664a65e888126e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 14 13:42:54 2016 +0200

    Add .editorconfig

commit 444b371528ba6452e73c1d953d251cb1d8526f4e
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Apr 15 16:58:34 2016 +0200

    updated elasticsearch upstream to get the latest test fixes

commit 1e970ec471e6e9ac11d25d6cc9e90a6f136729e6
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Apr 15 15:33:32 2016 +0200

    throw proper error on duplicate primary keys

commit 77b7837ca392e9cf30f5d385bdeffa31537926a4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 15 14:26:58 2016 +0200

    Testing: Remove test scalar implementations
    
    `abs` and `add` are already implemented as part of the
    ScalarFunctionModule and `year` probably became unused.

commit 50de670d31cdbd3f79bfcbeca05e149845f289a0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 13 12:00:43 2016 +0200

    Always kill jobs on errors
    
    This is related to the previous commit: Errors raised in the context
    preparation phase aren't propagated through all downstreams.
    Un-notified downstreams would then stay arround forever and leak memory.
    
    This commit adds a kill-on-error mechanism to make sure such
    downstreams/contexts are cleaned up.
    
    One minor issue with this change is that if a query is killed using a
    `KILL` statement the kill will be executed twice.

commit d422658d6161aaf956b986a1ef7c63b553e05738
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 11 14:52:30 2016 +0200

    Propagate failures on nonDirect-responses
    
    Errors during context-preparation could cause stuck queries.
    During the preperation phase the "data-flow-chain" doesn't exist yet and
    therefore errors cannot be passed through it.
    
    Instead errors are raised and transmitted over the wire as response to a
    JobRequest. But those errors were only logged. This commit changes that
    to propagate the failures to the client.

commit a731ac2fe1c7aa04a608a48a3e9ddcd8b8097961
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 11 12:13:09 2016 +0200

    Initialize all jobs before setting TaskResult
    
    This should fix the following race condition:
    
     - job requests are sent to n1, n2
     - job context creation fails on n1 due to shard failure
     - TaskResult is set
     - kill requests are send and processed (due to retry logic) (kill
       misses context on n2)
     - job context is created on n2
     - retry is executed and job context on n2 is re-used

commit 3a03241b9b399862049fbdb27b5fc419a1cc0dc7
Author: kovrus <ruslan@crate.io>
Date:   Wed Apr 13 17:15:31 2016 +0200

    fix bug causes init. of docKeys in where clause without PKs in it
    
    It causes the execution of the wrong plan for statements with
    where clause without primary keys

commit f2028f78d84847796e3403816388979cdfdbf478
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Apr 13 16:05:24 2016 +0200

    fixed template ordering while adding column to partitioned table

commit cb425a3419344cd7b66de7cb051bf03479b798d0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 13 15:01:58 2016 +0200

    Remove close from JobExecutionContext and ExecutionSubContext
    
    A JobExecutionContext cannot be closed from "outside". Either it
    finishes its operations and closes itself or it has to be killed.
    
    Previously on a node stop close was called, which, depending on the
    subContext implementation did different things:
    
        - NestedLoop could get stuck in some cases
        - PageDownstreamContext produced a incomplete result
        - JobCollectContext appeared to be cleaned up, but continued running

commit 8de9569470c5dd6500139d36dbbc5337295b3967
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 13 14:17:51 2016 +0200

    remove no-nodeOperation special handling from ExecutionPhasesTask
    
    A query on a partitioned table without active partitions leads to a case
    where there are no NodeOperations because there are no executionNodes on
    the collectPhase.
    
    This special case was handled in the ExecutionPhasesTask. This commit
    moves it into the PageDownstreamContext. It's his responsibility to not
    become stuck if it doesn't have any upstreams.
    
    (and close on JobExecutionContext is going to be removed)

commit 61145d3121296821582cd355301a294741baea74
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 8 18:06:05 2016 +0200

    Create PageResultListener only once instead of per pageDownstreamContext

commit 758eaf554d4f82813942901f0e337c4d6c41e15b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 8 17:35:27 2016 +0200

    Always create JobExecutionContext in ExecutionPhasesTask
    
    The ExecutionPhasesTask had quite some differentiation between
    directResponse and no-directResponse.
    
    This commit reduces a bit of that and makes sure that there is always a
    JobExecutionContext created and used to start the ExecutionSubContexts.
    Before there was a case when ExecutionSubContexts were started directly
    without using the JobExecutionContext.

commit 833c5e677c03fe765dbd15fc9a4d861b8957d81a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 8 14:15:26 2016 +0200

    fix "bucket assertion" in DirectResponseListener
    
    Calling both failure and setBucket would cause another assertion error.
    This wasn't a real problem because the `bucket == null` case never
    happens.

commit b1697328324ec921edd2191cd93cf78d85bf38e8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 8 13:52:10 2016 +0200

    ExecutionPhasesTask: move handlerPhases creation into a separate method

commit 19b3b49c09f352534890813716f0e7c9d3c7a124
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 8 13:18:54 2016 +0200

    Don't send job requests if there is an error in setupContext

commit b88e5e71d06b217d6200b6bd3392d45e846e28c0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 13 11:10:00 2016 +0200

    bind ContextPreparer and LuceneQueryBuilder as asEagerSingleton
    
    There was some kind of race condition which could cause the
    LuceneQueryBuilder to be bound in the shardInjector instead of the
    nodeInjector.
    
    Which would then cause guice injection errors once the
    LuceneQueryBuilder was accessed on a node level.

commit ba3c3aba654c9bc0b977a8197d7848b7c74f2604
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 12 13:33:24 2016 +0200

    Make sure kill on a NL triggers future callbacks
    
    Otherwise the parent context might not get cleaned up correctly

commit b811400d1d2ae944a032f83e50917cab6db59add
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 12 13:36:25 2016 +0200

    testing: Include nodeName in assertNoJobExecutionContextAreLeftOpen
    
    This way it is possible to see on which node a context has been left
    open.

commit 22a47042032cfb7933644b566c7d4858885ab840
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 12 12:05:49 2016 +0200

    updated ES upstream, fixed restore concrete indices
    
    Elasticsearch PR's of this fix:
    https://github.com/crate/elasticsearch/pull/68
    https://github.com/elastic/elasticsearch/pull/17671

commit 64ff7ffc26febcbedb35266b316b6713d588083a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 11 14:52:06 2016 +0200

    Do not propagate fail twice in NestedLoopOperation

commit 8572d3f3e2599de0720ba29056c2e18fda9b7669
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 11 16:04:03 2016 +0200

    Replace ExecutionState with kill method on RowReceiver
    
    Previously the executionState had a `isKilled` flag which was used in
    some RowReceiver implementations to interrupt them. To do so they
    internally used `fail` which wasn't designed to be called asynchronous.
    This led to problems, e.g. if a context was killed during a `fail` or
    `finish`

commit 5e1b870d434067c506020391bac60682d76c77b3
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Apr 11 17:01:09 2016 +0200

    fixed insert-from-subquery nested primary and partition keys processing

commit 3bb147f53adc1263956b72c8f2223ce951a31f20
Author: kovrus <ruslan@crate.io>
Date:   Fri Apr 8 15:10:03 2016 +0200

    update changelog accordingly to 0.54.8 release

commit 8a55cd4ec65ac85476f69062d64cbe29f19bba39
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Apr 8 13:39:04 2016 +0200

    added consistency docu related to concurrent partition DML

commit 60f4276ffdf365c22043eaa7952f003a54364b11
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Apr 7 18:39:39 2016 +0200

    fixed processing of `hdfs` repository properties
    
    dynamic wildcard settings `conf.*` were silently
    ignored

commit 24632e4dd809d36d84813ffce984fa1af8f364f9
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Apr 8 11:02:17 2016 +0200

    Fix: queries could be slower if they contain an expression on
    the left side of a comparison, ( e.g: 2 + 1 > x ) instead of the right side

commit c97532420ddfe27b5f37771c32a09ae8d7b45a8f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 4 23:49:27 2016 +0200

    Replace FieldExtractor with guava Function interface
    
    In order to be able to use the utilities like Functions.constant

commit 00f623a2f0d4353258e688e7f0744c43d261cb05
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Apr 7 16:36:54 2016 +0200

    updated crate/elasticsearch so the license headers are correct in the upstream

commit a690f926f71145b6473776464f17ab33485d099f
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Apr 7 16:28:06 2016 +0200

    Updated crate/elasticsearch to fix an issue where the `minAvailability`
    setting was not read from config file

commit cfee8d5aaa3885a70753195846e5d765e71df431
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 7 15:12:46 2016 +0200

    testing: make sure plan is executed on "planner-node"
    
    A plan has to be executed on the node that generated the plan. Otherwise
    parts of the plan that involve the handler/coordinator node could be
    invalid.

commit a2bbe03d2c244c9221ea956ad4577be64abe5a5c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 6 15:38:37 2016 +0200

    Create table: Handle pk constraints on nested columns

commit a509dd8c73df629a2cd1e361fc67790f9320877a
Author: Aslan Bakirov <aslanbekirov@gmail.com>
Date:   Tue Apr 5 17:25:10 2016 +0200

    Fix dangling reader if regex matcher is used

commit 94dc5e35c27e8f3f69bd2dea5a908d09cfd3e5cb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 6 09:39:41 2016 +0200

    Immediately apply persistant settings in ClusterSettingsExpression

commit 9ee3ddefc7f765f3cb45bb47022225170f6f061e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 6 00:27:51 2016 +0200

    remove deprecated changes files

commit 927920f1f1726af2da4523c3a68ab51b8f3ba166
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 4 14:21:37 2016 +0200

    Handle generated primary key columns in Insert-from-query
    
    This fixes the following error which occured if a generated column was
    used as primary key in an insert-from-query statement.
    
        NoSuchElementException in com.google.common.collect.Iterators$1.next(Iterators.java:80)
    
    The ColumnIndexWriterProjection didn't create a primary-key symbol for
    the generated column.

commit 640b01babc7c90bb7812200ac9a6072588c209e1
Merge: d518c8b613 94df1161b3
Author: Chris Ward <chriswhward@gmail.com>
Date:   Tue Apr 5 10:52:23 2016 +0200

    Merge pull request #3259 from crate/cc/move_mns
    
    Moving Multi node / zone docs

commit 94df1161b398ccc892bef8adc82cb1dd1dab84eb
Author: Chris Ward <chriswhward@gmail.com>
Date:   Tue Feb 16 13:47:02 2016 +0100

    Moving multi node / zone docs, so remove from here

commit 06ea0ef26429a2ec0acb5d4942654b443918834e
Author: Chris Ward <chriswhward@gmail.com>
Date:   Fri Feb 12 15:13:59 2016 +0100

    Docs theme version update

commit d518c8b6136fc9e1134c6d0493c60205fc5182f7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 4 14:44:07 2016 +0200

    Avoid double dispatching in insert analyzers

commit bcc490d354010208b924e90c27be01c11c43dcac
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 4 14:39:10 2016 +0200

    move methods that aren't shared out of AbstractInsertAnalyzedStatement

commit 0fbc0dbe1a2c2e7a7acaa639baca077dcdb193a3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 4 14:24:27 2016 +0200

    remove routingColumnIndex check from AbstractInsertAnalyzedStatement
    
    It is redundant.
    If the routingColumnIndex is < 0 there are 3 cases:
    
     1. The clusteredBy value is missing - this results in an error.
     2. tableInfo.clusteredBy() is null anyway.
     3. tableInfo.clusteredBy() is "_id" which is fine.

commit 1ed5eb72155eb1b7339d8582e726f791e8330484
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 4 13:46:56 2016 +0200

    rename validateMatchingColumns and make it static

commit 3c9add949ad60eaf5a3447717baac3a85856a859
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 4 13:36:12 2016 +0200

    change processUpdateAssignments to return it's result
    
    Minor cleanup: Less dependencies and it should be easier to understand
    as it no longer has a side effect.

commit 77feacb99b7e5fa1295fe1913b95fa6bcb295c67
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Mar 26 20:21:31 2016 +0100

    Do utf8ToString conversion only once in RegexpMatchOperator

commit 7d045e481dd429eb1f9a0365cfae5ba9dcfa5376
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Mar 26 20:14:10 2016 +0100

    RegexpMatchOperator: use normalizeSymbol of base class

commit 470aad050c6d42e9817d162b398f5b9e1b04b174
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Sat Apr 2 22:50:12 2016 +0200

    improved validation of geo point data type
    
    now it is not possible any more to insert invalid latitude or longitude
    in array literals

commit 81e5e539c03b92ff6d1912fe01622b1c3bc6af8b
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Mar 31 11:41:12 2016 +0200

    correctly resolve crate.yml configuration file
    
    when ``path.conf`` setting is set as command line argument, e.g.
    
    ```
    /path1/bin/crate -Des.path.conf=/path2/config
    ```
    
    now correctly resolves the config file ``/path2/config/crate.yml``

commit 9cc6d1c5674d3ee4affe753c4413525d2527fa4a
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Mar 30 09:59:59 2016 +0200

    added note to docs that the SELECT statement for INSERT by query
    
    needs to be surrounded by parenthesis

commit f00ef481228b6233f08390452833001ad7071a1f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 25 13:09:16 2016 +0100

    Avoid splitter, joiner and list allocations in updateSourceByPaths

commit 64cd4af03f59eebd9dcebfa156b02da952fd373b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 25 12:13:59 2016 +0100

    Include a more helpful error message on null object updates

commit b98600420e5dd79da7dc2f3986243c20ef7d88d2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 25 13:38:18 2016 +0100

    testing: add ensureYellow call
    
    Should fix the failure seen here:
    https://travis-ci.org/crate/crate/jobs/118462058#L1669

commit 39d21254a26817f619e77d54fe34956c0450bf27
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 23 11:23:54 2016 +0100

    Improve logging in various places

commit f81ac1bac86743633b4bc9111bb638afca9d9d19
Author: Michael Beer <michael.beer@crate.io>
Date:   Fri Mar 25 11:14:04 2016 +0100

    fix: sidebar-toctree lists 2 documents as current

commit ba03028d6d1f460b6323d262b6429f19c932470f
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Mar 24 13:57:07 2016 +0100

    fixed overrides of operations in internal ops table
    
    by using unique ids that are based on operation id and job id

commit a68ee7987af5f3a3d4b1904886ca6868346ee3f5
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Mar 24 15:06:04 2016 +0100

    added timeout to client integration test sql execution

commit eb08d53b32da31b40e7961882dcc735fde82f060
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Mar 24 14:42:14 2016 +0100

    fixed ensureYellow/Green of client integration test

commit 9f72720a71af80e9ae89d639fa41d17790171ea5
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Mar 24 13:48:10 2016 +0100

    removed concrete numDataNodes limitation from partitioned test suite

commit c28f1012231b1b6b41ba587eb79073c12f6ceca4
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Mar 24 14:00:28 2016 +0100

    moved concurrent partitioned tests to own suite

commit 6f5399f8f38c167c43e667a4ce430f9ce9e0d5d5
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Mar 24 13:45:52 2016 +0100

    fixed flaky delete-while-insert partition test

commit 60621f8dae1ccf80e087da5b19c191e0c4ecc5b8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 24 11:25:51 2016 +0100

    remove printStackDump from assertNoJobExecutionContextAreLeftOpen
    
    It turned out that if a context isn't cleaned up it is almost always
    because some callback isn't fired, never because of some hanging thread.
    
    The stack dump is therefore mostly useless and just adds noise to the
    logs.

commit b20471b456bec981a0043896f49452e25b4b1ed8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 24 09:59:07 2016 +0100

    Convert expressions to array in CrateDocCollector
    
    In order to avoid iterator allocations due to the for-each loop in the
    collect method.

commit e6812a61a5ad73fcdae58afb5d8d35cc6efdc66e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 23 15:44:45 2016 +0100

    Ignore InternalSettingsPreparer in JarHell check
    
    Class overloading is done on purpose.
    
    This is just a quick fix because the InternalSettingsPreparer is removed
    in the es21 branch anyway.

commit 8601f58d429316fc3d9b616a9eea298498299ef2
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 21 18:39:23 2016 +0100

    implemented `read_only` node setting
    
    Added a node setting `node.sql.read_only`. If set to true,
    only SQL statements resulting in read operations are allowed.

commit 89d4c6c1c689ba0917b96ca315eb80f41a07dc63
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 22 13:38:01 2016 +0100

    Fix resultIsDistributed implementation of NestedLoop
    
    Tests failed with Seed A3C65CC9BA044507
    
    If the NestedLoop was executed on a single node that is not the handler,
    insert from subquery would use the NestedLoopPhase as handlerPhase
    because `resultIsDistributed` was false.

commit 3c01355936e4ce786f9cfcc523ca25c30587c3d4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 22 11:31:43 2016 +0100

    Don't use CrateUnitTest as base class for NodeOperationCtxTest
    
    Groovy magic seems to create a static field called
    ``private static java.lang.Class io.crate.action.job.NodeOperationCtxTest.$class$io$crate$action$job$ContextPreparer$NodeOperationCtx``.
    
    This caused test failures (on Jenkins) due to the
    StaticFieldsInvariantRule from the AbstractRandomizedTest class.
    
    Since this test doesn't do anything randomized it can be just removed as
    a workaround.

commit 4e2d0e5817c669dc5e00abc0c834725f6342b8ba
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 21 15:39:44 2016 +0100

    Don't change isDistributed flag based on number of executionNodes
    
    Changing the flag can result in an invalid plan.
    testFilteredJoinWithPartitionsAndSelectFromOnlyOneTable failed with seed
    1C4DC12F5B2717EC

commit 4366d80aca9c86a803451c8cf58648609dbe0d11
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 21 15:05:13 2016 +0100

    On UPSERT version conflict, retry forever instead of only 3 times
    
    This is related to concurrent upserts, whereas it
    makes sense to retry until conflict is solved
    and not only 3 times. Conflict can only occur
    while a concurrent UPSERT is running, so no retry
    limit is needed.

commit e20ca14ea8176dc20cff7bb16b9fc3d2d02e5342
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 14 15:42:28 2016 +0100

    don't use static logger in abstract class
    
    otherwise logger level will affect all other
    concrete implementations

commit a49e604788713df32839a12d0999d486f292e500
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Mar 9 16:00:34 2016 +0100

    upsert action now uses the engine directly instead of using the index transport
    
    this is a huge performance improvement when replicas are configured,
    because now 1 replica request is made per bulk request instead 1 for each bulk item

commit 1de4120d05626dd3028b9d1f2a03ee89ec39c39d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 21 14:19:18 2016 +0100

    Support set -> array and array -> set conversions

commit 477bbfcc2b463934c8e1ea67f83cfe7a4b60d9b3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 21 11:03:41 2016 +0100

    Improve error message of insert into target/source column size miss-match

commit 6a67cbbb91756dc0a4a40dd5f19b1cf2ecd64256
Author: Claus Matzinger <claus@crate.io>
Date:   Fri Mar 18 17:58:01 2016 +0100

    improved docs

commit fc4080d075be18e45e086609eefa263e00da46c1
Author: Claus Matzinger <claus@crate.io>
Date:   Thu Mar 17 17:27:59 2016 +0100

    updated documentation for partial snapshot state crate/c-skyhigh#82

commit 349427b54692e7954dbbc7a9ea6952eb604c27e2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 16 15:07:39 2016 +0100

    Fix sameNode/broadcast distributionInfo missmatch
    
    If all CollectPhases and the NestedLoopPhase ran on the same node a
    incorrect execution plan was generated.
    
    The NestedLoopConsumer planned the NestedLoopPhase as being distributed
    but the ContextPreparer assumed that it runs in SAME_NODE mode.
    
    This also includes a refactoring for the ContextPreparer because it
    couldn't handle a NestedLoopPhase being the "leafPhase" in some cases.
    
    The ContextPreparer is now smart and knowns in which order the contexts
    have to be built instead of trying and re-process if some dependency has
    been missing.

commit efe398f93473c175c7889f747a7925499688ad77
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 16 15:17:16 2016 +0100

    Extend PlanPrinter to support InsertByQuery and NestedLoop
    
    It's currently only used for logging, but can later be used for EXPLAIN
    as well.

commit a14c63cadf6ed98b22dc4ed203ad4a692ca80f5b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 15 16:56:11 2016 +0100

    Remove Reaper and KeepAliveTimers
    
    This was originally intended to kill queries that got stuck to avoid
    memory leaks.
    
    But killing them automatically might mask bugs (otherwise queries
    shouldn't get stuck in the first place).
    
    And it caused other issues:
    
     - https://github.com/crate/crate/pull/2767
     - https://github.com/crate/crate/pull/3358
     - https://github.com/crate/crate/commit/12ee7130185c62bd461e1b6a05b7fcf0dba92870
    
    This removes the reaper and keepAliveTimers completely. One can still
    manually use ``KILL`` or ``KILL ALL`` to get rid of stalled queries.

commit 76d45eeadb7513b534b30825937820999e63e34c
Author: kovrus <ruslan@crate.io>
Date:   Mon Mar 14 10:52:29 2016 +0100

    update java-testing to 0.4.1
    
    solves the issue of running client tests in parallel

commit 20a200f06fa6c527b1c21a32d547164425a631bf
Author: Michael Beer <michael.beer@crate.io>
Date:   Fri Mar 11 18:14:18 2016 +0100

    update changelog to 0.54.7 release

commit d85b9d4737404405f0680890494fe3ce7a69ae39
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 11 11:24:20 2016 +0100

    Use SettingApplier to validate create repository options
    
    This change is mostly for the ES 2.X upgrade.
    In ES 2.X byte or time settings will require a unit ('b', 'm', etc..).
    
    By using the SettingApplier those units can be included.

commit e1698f43d6e80f7807d61a4536b3f4a3b2cc3d0b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 10 18:14:26 2016 +0100

    remove duplicate code in ExpressionAnalyzer
    
     - re-use castIfNeededOrFail where possible. (Less code and makes the
       cast error messages more consistent)
     - Avoid to convert Expression into Symbol twice in visitInPredicate
     - Move FunctionInfo creation into Operator classes (They should know
       about their return type, not the ExpressionAnalyzer)

commit 591cfcdef61ad2a0b6dfc816175d2dd23f8b083e
Author: Michael Beer <michael.beer@crate.io>
Date:   Thu Mar 10 07:03:53 2016 +0100

    fixed JVM syscheck. Caused invalid java version

commit 713003303c2a64d8bf9da12ddba139d040f18143
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 9 16:24:23 2016 +0100

    Extend ByteSizeSetting to have common used attributes
    
    Avoids having to subclass ByteSizeSetting all the time.

commit bc2b86c41726785e2bb77598090af7c8ab645e23
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 9 13:56:33 2016 +0100

    change CROSS JOIN wording to JOIN in unsupported join operation errors

commit cea0e3927b65b1e6ab7212263953db01e4704696
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 9 14:08:54 2016 +0100

    fix broken doctest
    
    Missed this in e086479d901a949c41ef349040096b387cdc3cea

commit e086479d901a949c41ef349040096b387cdc3cea
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 8 13:50:37 2016 +0100

    remove timestamp type guessing
    
    Type recognition for timestamps was removed in
    https://github.com/crate/crate/pull/3061 because of the issue reported
    here https://github.com/crate/crate/issues/3042
    
    But it was only removed for top level columns and the issue is still
    present for object columns.
    
    This commit fixes that and removes it completely.

commit 14de523757a0bf87a20b2a197e2c9ca85c8b958f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 8 11:15:34 2016 +0100

    Make object equality more lenient
    
    The EQ operator implementation for objects was too strict. Comparing
    {x=4} with {x=4} would return false if one 4 was of type Long and the
    other of type Integer.
    
    This could happen in the following example because the SQL Parser only
    generates Longs and never Integers:
    
        create table t (o object as (x int, y long));
        insert into t (o) values ({x=10, y=20});
        select * from t where o = {x=10, y=20};

commit 675680047c380b0a4e460f0da7f4133046cac22e
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Mar 8 12:03:29 2016 +0100

    fixed crate version related to es upgrade

commit c834685986d8e3f72111d1b7fa601afcf1bd8c86
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Mar 8 11:27:44 2016 +0100

    added missing CHANGES entry

commit 756ba0cce94bddc4448ca4e692cc80d9df9b149e
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Mar 8 11:19:05 2016 +0100

    added integration test for client-to-client communication

commit fbdbf4f9cac84fdb9f53918519f10a7f8454c7d8
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Mar 8 11:16:57 2016 +0100

    upgrade ES to 1.7.5 (incl. crate patches)

commit 73e4b1b84ec0b683ff5dd3215815bb785e3c8bc0
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Mar 8 10:51:13 2016 +0100

    removed maxHeapSize from gradlew run calls

commit 0d05c42901f0516a5a416858831cdd18f2411f7f
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Feb 15 14:06:52 2016 +0100

    updated crash to 0.16.0

commit 9bc0b9356f45df226d428ed29e22d24ed2d6b1b5
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Mar 8 10:06:37 2016 +0100

    backported changes after 0.54.5 release

commit a17043785f147cd889b62bde6699f3b9bb3d92a7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 7 13:51:09 2016 +0100

    remove unused methods from ArrayComparison
    
    left/right aren't used. The getLeft/getRight methods from the
    ComparisonExpression class are used instead.

commit 6d343fe61b6c72885727ea2a65a572268bd57472
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 4 20:25:06 2016 +0100

    remove normalizeSymbol from CmpOperator and ArrayEqOperator
    
    Default implementation works good enough.

commit 5ee0aa3315d5432ec06e9d48bf856fae56919b3c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 4 18:55:08 2016 +0100

    remove Generic from AnyOperator
    
    Wasn't used

commit 93b84c9f42b216be58d95c7d014c61931d37faa0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 4 18:48:38 2016 +0100

    AnyOperator: remove normalizeSymbol override
    
    Not needed. The default implementation works too.

commit 760bce948cbc9efa1c9405d446eeeedba79df2bd
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Mar 7 09:59:43 2016 +0100

    updated crate-admin to 0.17.1

commit 07b8045d21d05bf127e6bf5e8b705c349a5f846a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 4 10:27:41 2016 +0100

    use AbstractScalarFunctionTests base class for EqOperatorTest

commit c968176d635e4a1b893238ffa45616ccf8077aa8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 3 12:04:20 2016 +0100

    prohibit using object, geo_point or geo_shape columns as primary key

commit 43f6e07def74fce63be84d11c0f3d1956157cbc3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 2 21:25:51 2016 +0100

    update groovy from 2.4.0 to 2.4.4
    
    2.4.0 has known security issues. See
    http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-3253
    
    es/upstream already contains 2.4.4

commit 3e454d5ef6a9ae53c14351f56cb2fce250dd9e97
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 2 21:16:02 2016 +0100

    remove unnecessary null check in PartitionName

commit 9a28903bafa902a9a0d8293df3bdc975965ab8cb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 1 11:31:04 2016 +0100

    add `node_filters` parameter to COPY FROM with clause

commit 2ae4c1a8d016d536c9fdbee7915e23dd592d7d75
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 1 13:43:10 2016 +0100

    copy from docs: Add notice that num_readers with shared = false is dangerous

commit 9c78f9a6a056c4b888fe9514deb99f156ea52052
Author: kovrus <ruslan@crate.io>
Date:   Tue Mar 1 10:57:19 2016 +0100

    fix flaky SysChecksTest

commit 3ca818e81dc60907f4d729d95e6d211e49c415ce
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 29 15:59:59 2016 +0100

    add name, defaultValue and isRuntime field to BoolSetting class
    
    In order to be able to use the class without having to overwrite it in
    most cases.

commit 87f6f5b06f41db0712e67d1e5db79a3aa73207e0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 29 15:21:14 2016 +0100

    add more default implementations to String- and IntSetting

commit 475935f06eefc3000aebf674731303cfec8024a4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 29 14:05:19 2016 +0100

    re-use GenericPropertiesConverter in CopyStatementAnalyzer

commit 29259efa4481055d871c8123c76459995c096b88
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 29 13:29:09 2016 +0100

    re-use create settings logic between create and restore snapshot

commit 86243de5b7d5e916c8d193f9b7dec23a66ab328c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 29 11:19:55 2016 +0100

    testing: extract COPY FROM tests into a separate test class

commit 1a02723b2cc3a06c7f55a343427647cb19ba939d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 29 11:10:33 2016 +0100

    PlannerTest: use NoopClusterService instead of mocks

commit 9db89819d312b8634cb1a20e6ede8afd01e69ce9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 29 10:19:53 2016 +0100

    add support for COPY FROM to EXPLAIN
    
    output looks like this:
    
        {
            "planType": "CollectAndMerge",
            "collectPhase": {
              "executionNodes": [
                "xQjBGHPFT62SeMY3z786ng"
              ],
              "id": 0,
              "phaseType": "FILE_URI_COLLECT"
            },
            "localMerge": {
              "executionNodes": [],
              "id": 1,
              "distribution": {
                "distributedByColumn": 0,
                "type": "SAME_NODE"
              },
              "projections": [
                {
                  "type": "AGGREGATION"
                }
              ],
              "phaseType": "MERGE"
            }
        }

commit b68577c0ef6423b6a9bcb64e9a86edd6f1133bf5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 29 09:22:04 2016 +0100

    fix NPE on invalid blob digest
    
    simpleResponse uses the currentMessage to determine if the connection
    should be kept alive. `reset()` sets the currentMessage to null which
    resulted in a NPE.

commit d7edcce2502aa7c888fc869259962af8804fe903
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 26 10:03:44 2016 +0100

    support a list of fileUris in COPY FROM

commit fb95fcbdad98172f9a5de9935cba7b14fa82d779
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 26 11:57:06 2016 +0100

    make FileInputFactories injectable and use singletons

commit c7d1a9cc1aa0b02b4a119f593b869764d9ef7096
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Feb 26 11:03:18 2016 +0100

    fixed array literal synopsis documentation

commit e7461d93c0c2a4399949e7de45db0a202dc6755b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 26 09:28:19 2016 +0100

    ignore FileNotFoundException on COPY FROM http/https

commit 8a152331eb2df6bddc3fea3be34ce423580fd0c2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 25 15:39:03 2016 +0100

    add http, https, ftp, and jar support for COPY FROM

commit d0d996dd4fc887a12c0335ac1fa1d0a47658a43c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 25 14:13:27 2016 +0100

    Be more lenient on GeoPoint conversion
    
    Fixes the issue raised here: https://github.com/crate/crate/issues/3131
    
    Seems like encoders in certain languages convert double / float values
    to integer if there is no precision loss (2.0 -> 2)

commit 328fd8d9f53f67631dc810e29e9478241bdf2d6e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 25 11:44:21 2016 +0100

    document unnest array object behaviour

commit 0cee0b23f3d5732ffeb69186366111f6b89d7c48
Author: Michael Beer <michael.beer@crate.io>
Date:   Thu Feb 25 12:18:13 2016 +0100

    fixed parse errors on sphinx build

commit 70e066635a6c4ff8e1947e9c140eb06849026a36
Author: Aslan Bakirov <aslanbekirov@gmail.com>
Date:   Thu Feb 25 11:19:46 2016 +0100

    Java 7 Cluster Check wording

commit 1a40e0922a1db90430fc10a3ff7734e53f282960
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 25 11:22:20 2016 +0100

    support arrays of different length in unnest

commit 3f0b6d6c8c3fac95edd895a51fcde334bc085a48
Author: Michael Beer <michael.beer@crate.io>
Date:   Thu Feb 25 11:19:47 2016 +0100

    update changes after crate 0.54.6 release

commit e25a1f5dd12c85372f20bcd8f070e635bdc1e1c7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 24 10:53:48 2016 +0100

    fix NPE that occurs if mapping contains copy_to without _meta['indices']

commit f7f6b7df96c51d1e10e6ef7d4d6ce3125b306441
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 24 10:42:13 2016 +0100

    remove ReferenceInfo.Builder
    
    The builder isn't required and just hides the fact that ident, type and
    granularity are required fields.

commit a8c7768933193998c33792ea461c81b17518ad60
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 24 10:07:27 2016 +0100

    remove GeoReferenceInfo.Builder
    
    The only usage of the Builder is actually simpler if the builder is
    removed.

commit df8fd1bcb826dba49b675bc465234547f90c0874
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 23 15:37:18 2016 +0100

    run client tests in a single process because of a failure in the testcluster

commit c05de4bfadc442d79af56c38b372372563866f4f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 23 11:42:50 2016 +0100

    Add changes entry for unnest

commit 9f83203282e2cbaa205167594d7ed979dbd13629
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 15 11:35:44 2016 +0100

    add synopsis and docs for unnest

commit a9a6ba3c0e80b23f8a092b17123324e71e91f432
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 15 17:58:57 2016 +0100

    add analyzer, planner and execution support for table functions

commit cddec2e3866ef1f0e63a0dab4ddda8c5006378da
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 15 14:14:54 2016 +0100

    add support for table functions to the parser

commit 946759920aea22e3185b1ecbb950bb3276ca9990
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 23 15:01:59 2016 +0100

    move fields filtering into it's own method

commit d7ab669d95ee0a1d72bbc833296f2a74679f1a82
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 23 14:39:19 2016 +0100

    fix NPE if sys/info-schema tables are joined with table that has fetchable columns

commit 9e12667e4a58e7b671c061a43a5366663f0f1e16
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 22 11:56:09 2016 +0100

    internal paging: Use ShardId instead of int as key for exhausted iteraters
    
    The internal paging logic was broken for queries on partitioned tables.
    
    There is a PagingIterator which is backed by multiple iterators and
    keeps track which of them got exhausted.
    
    The problem was that only the integer part of the ShardId was used to
    track which backing iterator is exhausted.
    
    If a partitioned table is queried this id isn't unique since there are
    multiple indices which all can have the same shardids.
    
    For example in the following case:
    
        2 Collectors for ShardId(index1, 0) and ShardId(index2, 0)
    
        ShardId(index1, 0) becoming exhausted.
    
        getCollector for 0
        -> returns Collector for ShardId(index2, 0) instead of index1
    
    This would cause an endless-recursion until a StackOverflow got raised.

commit f33d11a0f7909d897ff55e6f2185e961e6515de9
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 22 11:02:29 2016 +0100

    upgraded crate client testing, this should fix a flaky startup in tests

commit 4d4cf5d68ed50b87a7c0dfe876e31d02f0827bf8
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Sat Feb 20 15:27:17 2016 +0100

    fix internal link

commit 28df6fe16169a43450c7b22bc607ca0192801d4a
Author: Aslan Bakirov <aslanbekirov@gmail.com>
Date:   Wed Feb 17 17:18:02 2016 +0100

    JVM version Check added

commit 08021166a7dc563f9bebf366319f7db53a420fec
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 19 10:57:00 2016 +0100

    extract some logic which can be shared into factory methods

commit c57f1758042adfa4d9676dfb326672eadced66fa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 18 17:47:21 2016 +0100

    remove ofJsonObject from DataTypes
    
    It was previously used in the scalar-scripting stuff and became unused
    with the recent delete-query changes where whe removed the
    ESQueryBuilder

commit 6af42265df2410dfef52e3c79156c8d60b37ea96
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 18 14:10:36 2016 +0100

    replace SysTableInfo with a Statictable

commit 636d542dd7fd16b7eae147926f927f966a865589
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Feb 18 14:22:42 2016 +0100

    [gradle] added task cleanIdeaBuild
    
    task will remove all idea build directories

commit 5edc4bdd76907684cd6ed108509991a0dcde69ee
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Feb 17 15:57:30 2016 +0100

    fix: delete-by-query replica operations did not work due to missing transport action binding

commit da79628b1c51d474eae95dbd13f8df967dd9a41c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 17 11:50:26 2016 +0100

    Renamed CollectPhase to RoutedCollectPhase and extracted a CollectPhase interface
    
    In order to remove the Routing, WhereClause and OrderBy properties from
    FileUriCollectPhase.

commit 0041324ce6728ade1461c880a70b86e08e3d0432
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 17 10:14:29 2016 +0100

    move routing validation of CollectPhase into CollectSourceResolver

commit 3234c79538a34e11405294d615e96155b49be062
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 16 18:27:49 2016 +0100

    add a factory method to create ActionListener that delegate to SettableFuture

commit 9fa811de664da9594a33b6aa47f4b62309c283ba
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 16 17:27:43 2016 +0100

    testing: don't mock ClusterService in MapSideDataCollectOperationTest

commit a5e3d902ac318b1778575e7c5f0d11ed75b63127
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 16 16:08:08 2016 +0100

    remove unused stuff 🗑

commit eed35e96832f6fe9c770ac3dba6ff6365148ba32
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 16 15:54:40 2016 +0100

    remove DQLPlanNode interface
    
    Is no longer necessary as DQLPlanNode has been replaced with
    ExecutionPhase.

commit a2dbbc304436d219267f598f8812f10c1d998606
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Feb 16 15:25:48 2016 +0100

    fixed slack url

commit 89f64520f09927f4d944336c7d9c6c8020c5c1e3
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Feb 16 14:08:24 2016 +0100

    replaced hipchat support channel with slack
    community

commit a38447c9730c36a11cdd3f756ce2b23fa8d405fa
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Feb 10 11:31:14 2016 +0100

    don’t try to load default settings for the client from elasticsearch config
    files and removed loadConfigSettings parameter from client constructor
    
    client tests now use crate-testing, so the client tests run agains a seperate
    jvm which reflects the real world scenario

commit c7fb683405ccc4d65eb9e3bc0478481f9364a850
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 16 11:15:41 2016 +0100

    testing: use a helper function to get a Functions instance

commit 95deef62e72e96702aedcaf5a201df34a3650947
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Feb 15 15:36:00 2016 +0100

    updated changes after 0.54.5 release

commit 810e33362b0985ff2f411870a1650be37163ad58
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 11 10:57:49 2016 +0100

    fix NPE that occured on x = ANY ([null, ...])

commit 2b06cb40e7c12c8e3aba1515791a068f2ee809a9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 11 09:32:45 2016 +0100

    support inserting array literals that contain null values

commit 614334fbec306fd7f72af507b4ebbe30a356101a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 10 12:28:10 2016 +0100

    move nextPageQuery from LuceneDocCollectorTest to OrderedDocCollectorTest
    
    LuceneDocCollectorTest is an integration test. To test the nextPageQuery
    stuff the integration layer isn't required. So this commit moves them
    into a unit test.

commit 40fd4a45c74951a9aeec7034c091d032b26512f5
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 9 15:26:47 2016 +0100

    use dedicated build dirs also in intellij to fix jarhells

commit 176afca37dbdb24f45be525cd12f60b92dd9dafc
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 9 06:23:25 2016 +0100

    upgraded to gradle 2.11

commit c2b760afca351298015bdead322036b5f392e6ea
Author: kovrus <ruslan@crate.io>
Date:   Mon Feb 8 09:01:02 2016 +0100

    remove java 7 occurrence in docs

commit 875b5c9b1064b364dbd890e05822feb07cdd68b3
Author: Claus Matzinger <claus@crate.io>
Date:   Fri Feb 5 09:19:21 2016 +0100

    Fix: exporting a table with a generated partitioned
    column using `copy to` caused an Exception

commit 52090fe63848db128b07e8554d7fb74b9ef78e3f
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Feb 3 14:14:55 2016 +0100

    fix jarHell caused by JMH gradle plugin
    
    also updated DEVELOP documentation about JMH usage

commit f6c6968390869b9319aab8b170ff8c57411c08af
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Feb 2 16:20:16 2016 +0100

    add missing parenthesis of insert by query synopsis

commit b105849923ed7830899dedbe62a9d33fe997a968
Author: Michael Beer <michael.beer@crate.io>
Date:   Tue Feb 2 15:28:57 2016 +0100

    added rpm revision info to crate ami doc

commit a0b73985ede3d33a100d8909c7e453d4ed778b35
Merge: e8b57c47df d6640ef573
Author: Chris Ward <chriswhward@gmail.com>
Date:   Tue Feb 2 12:25:16 2016 +0100

    Merge pull request #3212 from crate/cc/squirrel-remove
    
    Removing squirrel from core docs

commit d6640ef5739338752a0c60b3503281e6936565a2
Author: Chris Ward <chriswhward@gmail.com>
Date:   Tue Feb 2 10:20:10 2016 +0100

    Removing squirrel from core docs
    
    Remove images

commit e8b57c47dff4750a2f2fbad5c260e58fa63d9e93
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jan 28 14:57:16 2016 +0100

    implemented EXPLAIN for select statements

commit 0542d80d126ce0b00f5c7403aa83dd971347a350
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jan 21 17:10:04 2016 +0100

    added shard routing state column to sys.shards table

commit a9058c11284d18a04e41e7f0ef06ae73d92b0f05
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Jan 24 20:15:21 2016 +0100

    use assertNormalize in FloorFunctionTest

commit 9f781d8262bf47730ee2b2789599665b3aec360e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Jan 24 20:10:02 2016 +0100

    use assertNormalize in CeilFunctionTest

commit 49dfe16b8a9d6e8a239a537e3f99e951e28f8bf4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Jan 24 18:58:05 2016 +0100

    use assertEvaluate/assertNormalize in ReplaceFunctionTest

commit be0871d1aa4352abde7577038fef8bcef88fdc46
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 22 15:06:44 2016 +0100

    fix flaky snapshot integration test

commit 6ce8c148fbce4cb4c646597855d9d3b0be8b0945
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jan 22 11:33:37 2016 +0100

    updated changelog according to release 0.54.4

commit dc28edadf7f7cae9eacf81a841265db131f7e269
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Jan 22 09:26:10 2016 +0100

    document changes to job init handler

commit bf63e959fa5d5467e629c39348e1a79f03d31704
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jan 21 15:22:11 2016 +0100

    switch job init handler to PERCOLATE thread pool
    
    Instead of running in SAME (Netty) thread.
    As the operations are currently not async, netty
    thread would be blocked otherwise.
    ToDo: make operations async

commit 89693ada43fcf6658fa42d31af823b545d96187d
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jan 20 20:30:34 2016 +0100

    change thread pools for queries on system tables
    
    by using not the same thread pool to system and doc
    tables, information retrieval from system tables
    is possible even if thread pools used by doc
    table queries are full
    (known as cluster is stuck, no query respond)

commit c99b37c022db013885b4a4fce987387bfd107437
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jan 21 15:27:06 2016 +0100

    less retries in post recovery

commit 31d2ee175260a38f7832fc243abf65705b8d7faa
Author: kovrus <ruslan@crate.io>
Date:   Thu Jan 21 10:34:00 2016 +0100

    fix expected nodes settings check
    
    use data and master nodes in validation

commit 6d30328da6a67f104b2955893dac64fd65d9527a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 18 22:08:38 2016 +0100

    make ESGetTask::init smaller
    
    To make it possible for the JIT to inline it:
    
    Before:
    
        ESGetTask::<init> (597 bytes)   hot method too big
    
    Now:
    
        ESGetTask::<init> (281 bytes)   inline (hot)

commit fb6070fa7cbdb3c31f7084e5a6a0289016e69ebb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 20 16:43:46 2016 +0100

    remove scalar script components
    
    Are no longer required due to the refactoring in 6ef9b30e008f64201a30a6ff233ed3b14df67d55

commit 0efae0deec84b2de04e312e7bee3a2a9889764f9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 8 21:12:18 2016 +0100

    optimize methods in Identifiers class

commit 5952019ec46fd29be9348b36ae1045d043fc6cc5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Jan 17 19:16:42 2016 +0100

    add Crate configuration to gradle idea task

commit 37debd751ede951d45fd0eb2bce6825c5a16e903
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 18 21:41:50 2016 +0100

    ensureStringTypesAreStrings micro-optimization
    
    split up the function so that it can be inlined.
    
    Before:
    
        io.crate.executor.BytesRefUtils::
            ensureStringTypesAreStrings (456 bytes)   hot method too big
    
    Now:
    
        io.crate.executor.BytesRefUtils::
            ensureStringTypesAreStrings (160 bytes)   inline (hot)

commit bcc6c6b5c281d8d497ce3a8eb5757aa9bceef91f
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jan 14 21:03:02 2016 +0100

    remove ESQueryBuilder, finally not used anymore :)

commit 6ef9b30e008f64201a30a6ff233ed3b14df67d55
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jan 14 16:12:44 2016 +0100

    replace ES delete-by-query with collect & delete projection

commit ef1810d6b4f3958787e853e8a72612d694980f9d
Merge: 765a8daff3 998abf7dbd
Author: Chris Ward <chriswhward@gmail.com>
Date:   Tue Jan 19 18:06:46 2016 +0100

    Merge pull request #3192 from crate/cc/read-me-update
    
    Some small branding and re-org changes to read me

commit 998abf7dbd23be3ab97d88a4ff2b87ec6bf21719
Author: Chris Ward <chriswhward@gmail.com>
Date:   Tue Jan 19 17:04:11 2016 +0100

    Some small branding and re-org changes to read me

commit 765a8daff3d31f20703894b18e4f3930617e7f29
Author: kovrus <ruslan@crate.io>
Date:   Mon Jan 18 14:08:07 2016 +0100

    update changelog according to 0.54.3 release

commit 85e6e752b0608452b3c0889f05b3524539b3ab0f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 13 23:35:31 2016 +0100

    use evaluateIfLiterals as default normalizeSymbol implementation

commit ad2cb035e6e4e49261d8782499885591456006fa
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Jan 14 15:33:07 2016 +0100

    fixed WhereClauseAnalyzer test setup and added
    a test for generated column range optimization

commit e5d2e75a0a626b1bcae0d95d31b4d105fac7d401
Author: kovrus <ruslan@crate.io>
Date:   Fri Jan 15 14:48:29 2016 +0100

    fix flaky SqlRestAction customschema tests

commit d62d304e043b55f0020ed476d21034c5e4aae6bf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 15 14:24:27 2016 +0100

    testing: sql-parser switch from testng to junit
    
    In order to match the dependencies of all the other modules

commit 214a7c6516a4af55e5f74b2b6e79961d796fe68a
Author: kovrus <ruslan@crate.io>
Date:   Fri Jan 15 11:11:53 2016 +0100

    fix min master nodes setting check
    
    use number of master nodes instead of cluster size

commit 4ca1939653a90cb1918243e122bc7de79a9ad1f7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 14 17:55:07 2016 +0100

    handle pause correctly in NestedLoopOperation
    
    This fixes a race condition that could cause joins with more than 2
    tables to produce a wrong result.

commit 5ed1b69840ebccaad3ec872315bf38a521b8df41
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jan 14 15:09:32 2016 +0100

    remove java8 only api usage at GeneratedColumnComparisonReplacer

commit bd8201b41e8340f1038f93079cdc15fb59753548
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jan 14 14:50:01 2016 +0100

    fix NPE in GeneratedColumnComparisonReplacer
    
    occurred when used with <= or => operators

commit c58256df738578559067267cee7fccf24e772d7f
Author: Adrian Partl <adrian@crate.io>
Date:   Wed Jan 13 08:24:10 2016 +0100

    improved lower/upper functions

commit 8bd27d744544eea229ebe72296bdad78fb5961f6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 13 23:00:12 2016 +0100

    testing: add assertions to make Scalar tests easier

commit 3e7f1812b3715dad761c4fe69ceb322780df90f4
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jan 14 09:44:42 2016 +0100

    move delete integration tests to own class

commit ad01d9328dbc8d6abbc4167f3c2a3f3cdda27f06
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Jan 8 10:44:03 2016 +0100

    column names may not contain the `.` character anymore

commit 5d2a64d9c9fe972e97382bb91c856209ee1cfca9
Merge: 38a6f0aee8 f5db2179fc
Author: Chris Ward <chriswhward@gmail.com>
Date:   Tue Jan 12 17:51:08 2016 +0100

    Merge pull request #3159 from crate/cc/snapshot_docs
    
    Cc/snapshot docs

commit 38a6f0aee8db531b45e7a673e6ceb41eb5365aa6
Author: Adrian Partl <adrian@crate.io>
Date:   Tue Jan 12 16:24:28 2016 +0100

    made lower/upper function threadsafe

commit f5db2179fc14c2e0e10ec130f98862ae31192458
Author: Chris Ward <chriswhward@gmail.com>
Date:   Tue Jan 12 17:09:10 2016 +0100

    Create repo updates

commit 26b318dbbdf07a68063abec83613ea696404fc0f
Author: Chris Ward <chriswhward@gmail.com>
Date:   Tue Jan 12 17:04:55 2016 +0100

    Snapshot restore corrections

commit d162409872b46c3a91fb052907af2867cecc666e
Author: kovrus <ruslan@crate.io>
Date:   Tue Jan 12 15:15:32 2016 +0100

    expose setting the default schema via HTTP header.

commit c26378163d0484144b822a5410fc7475d4d514de
Author: Adrian Partl <adrian@crate.io>
Date:   Fri Jan 8 13:12:44 2016 +0100

    Addressed comments on PR

commit 0d1b30899727c5b5b0c3e2bfca895bb6837402fc
Author: Adrian Partl <adrian@crate.io>
Date:   Wed Dec 2 14:13:36 2015 +0100

    Removed testing lower and upper unittests with wrong locale

commit 99e17571c5471188c1b0019e81c8007f8b0c9b56
Author: Adrian Partl <adrian@crate.io>
Date:   Wed Dec 2 13:36:02 2015 +0100

    Addressed comments on PR in lower and upper function

commit 03a2b88150338d8e155a41d8552c08794fd7f786
Author: Adrian Partl <adrian@crate.io>
Date:   Wed Dec 2 08:09:23 2015 +0100

    Addressed comments on PR for test cases

commit 95b88cab18c6052eebf2968b0e854344fe77b8ce
Author: Adrian Partl <adrian@partl.net>
Date:   Tue Sep 22 08:23:45 2015 +0200

    added lower and upper string functions

commit b47efbef31a7e30ee7c022091ac8dc6b6ee3dd57
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Jan 12 14:45:06 2016 +0100

    fix: don't quote column in response columns

commit 2a591e79047c38e37d98d2823a8473490def2c2f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 11 15:08:37 2016 +0100

    update version requirements in DEVELOP.rst

commit 968fb353249933e4a82c082b0a9b2183ff9320d8
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jan 11 11:33:39 2016 +0100

    clean sql/data test output directory

commit cc328ec9745ad51247e0efec042e00adcf83445b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 11 11:10:46 2016 +0100

    add forbiddenapis plugin to core module

commit b559015669562d67a3af39d3c575b5e6b53e0d8c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 11 10:52:52 2016 +0100

    don't include aws deps twice

commit 08253449eeaf267d772e4be0e9493900acd4f6bc
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jan 11 10:07:33 2016 +0100

    move delete statement plan creation into own class

commit 778009b43468e4af5bee3848dafbd544379dc3ef
Author: Chris Ward <chriswhward@gmail.com>
Date:   Wed Dec 23 12:11:23 2015 +0100

    some grammar fixes and americanizations to copy to docs

commit a0fff203cfe350e23c0fc5214f6042e5f2b4af4d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Jan 3 11:11:13 2016 +0100

    use Scalar.evaluateIfLiterals in SubscriptFunction

commit 381aaf3faf49caf1de9fce2715d27ad872ceef9f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Jan 3 11:10:55 2016 +0100

    testing: use SqlExpressions in SubscriptFunctionTest

commit e3a70eb450ff00b483f9457b79529e0defc0ec31
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Dec 20 21:28:17 2015 +0100

    re-use MergePartialCountFunction instance instead of creating it twice

commit 27bc266ae89399fd02bb0106fdef18d9e33e5e28
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Dec 20 21:17:04 2015 +0100

    re-use DocSysColumns.ID instance in DocIndexMetaData

commit 6a9a8f56145bd2020cbd048a7a41990cceb3aca7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Dec 20 21:12:33 2015 +0100

    avoid ColumnIdent allocation in AlterTableAddColumnAnalyzer

commit 37ab4755af566ba145a524a1b942dc4d0ffd744d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Dec 26 19:42:11 2015 +0100

    don't close http connection on errors if keepAlive is set

commit 401619a3e8159e37af2d7ad079e8d348081837a7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 7 21:34:38 2016 +0100

    add jmh for micro benchmarks

commit fd8ab6ad5ffcfe393d938c22eb8c2fd05b4d3ea0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 8 22:58:38 2016 +0100

    don't create OutputName instances but re-use path
    
    Previously in the `select *` case there was a unnecessary conversion:
    
        `ColumnIdent ci -> String outputName -> new OutputName(outputName)`
    
    Now the ColumnIdent is simply passed on as Path which removes the
    OutputName allocation.

commit cb0face65649fdab2bd8f5ee178df773ef99d989
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 8 19:49:44 2016 +0100

    change getRequestFlags to return a primitive int

commit ebdf6dd695d44bfcd14b30c064130e54b6d888db
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 8 19:40:53 2016 +0100

    don't add flags to SQLRequest if not necessary
    
    HEADER_FLAG_OFF is the default anyway. It is not required to set the
    flags.
    
    And since the headers map internally is actually lazy and not created
    unless a header is really added this saves a HashMap allocation and some
    serialization overhead in many cases.

commit 563deb50e2b27a990f994a2d95e6ef08501a9964
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 7 22:40:26 2016 +0100

    add forbiddenApis plugin and add locale to String.format calls

commit 5b9d9f3616d5490520ce67213857fc3f37f3a2aa
Author: kovrus <ruslan@crate.io>
Date:   Fri Jan 8 13:19:01 2016 +0100

    list sql reserved words in doc

commit dbd5d61a5faf62e97a93ba6d840a8b3bd0990616
Author: kovrus <ruslan@crate.io>
Date:   Fri Jan 8 15:00:03 2016 +0100

    update changelog according to 0.54.2 release

commit f2788119001079c3cb0c3bbd228b2b6e7bcee04c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 7 17:30:52 2016 +0100

    make Job class immutable and avoid side effects in TransportExecutor
    
    Before the TaskCollectingVisitor could've called addTasks itself. Now
    the process functions of the visitor can no longer add tasks directly
    but have to return them.

commit 5e8b87c933c30092e378884db53e1ef15ae00b95
Author: Michael Beer <michael.beer@crate.io>
Date:   Mon Jan 4 10:05:50 2016 +0100

    removed constraint column from `show columns` stmt

commit d0d60c22421f2cd698c72f67ad56f0f329d675fe
Author: Michael Beer <michael.beer@crate.io>
Date:   Mon Jan 4 14:33:57 2016 +0100

    fix mocking of information_schema columns

commit 67c36634a2f9df03b9aa4e2bd186a2e2e14c99ce
Author: Adrian Partl <adrian@crate.io>
Date:   Mon Jan 4 11:11:58 2016 +0100

    added unittest for inserting into partitioned table that is read only

commit 91c6bb3ae51dfa3eb67b9eb0e072ada0f90ba226
Author: Adrian Partl <adrian@crate.io>
Date:   Wed Dec 23 11:21:04 2015 +0100

    Fixed a typo in the S3 best practices docu section

commit 2fc2aeb3a158ec54eb01c41ebaa971ad4852dfef
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 29 22:11:36 2015 +0100

    use Scalar.evaluateIfLiterals in FormatFunction.normalizeSymbol

commit 372ea458326d26b7f5a2d0deeef75a3931d02953
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 29 21:52:17 2015 +0100

    testing: use SqlExpressions in FormatFunctionTest

commit 065755c248fcde84a67d7520c72e1138cd352d8a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 24 12:32:14 2015 +0100

    support ParameterExpression and StringLiteral in extract function
    
    This way it is compatible to postgresql and ORMs that support extract in
    some form should work out of the box.
    
    Merry Christmas!

commit 69f7fc8436a78db50e27e122e339b508fedb06cb
Author: Michael Beer <michael.beer@crate.io>
Date:   Wed Dec 23 13:59:02 2015 +0100

    added doc + examples of set table settings

commit 61929d8d399fbfd970a1db87c217baae24152aa8
Author: kovrus <ruslan@crate.io>
Date:   Wed Dec 23 15:24:25 2015 +0100

    updated changelog according to 0.54.1 release

commit cfde4fcd0bf2ca5d5e1fa217d740a3814e0101f8
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Dec 23 14:56:50 2015 +0100

    removed roadmap from joins documentation
    
    and fixed small formatting issue

commit e85cbd27e855c55f79393c2ba95b7ecd1a09bbe1
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Dec 22 14:57:01 2015 +0100

    fixed JoinIntegrationTest

commit 952b0861f30e3adde4ce2a26883034f67e458261
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Dec 22 14:38:38 2015 +0100

    fix: multi table join containing functions
    from multiple relations

commit 7aa4d1d51852c76b9bbab0348ff93b1d128dcf0f
Author: Adrian Partl <adrian@crate.io>
Date:   Wed Dec 16 11:56:05 2015 +0100

    Amazon S3 repository snapshot restore support

commit cf71e80abb1c8985fd96766a027e9f3671dc4cdf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 18 16:19:56 2015 +0100

    move QueryThenFetchConsumer logic into SelectStatementPlanner

commit 956c06b6a2559093534d9002976fb588b1f3434e
Author: Adrian Partl <adrian@crate.io>
Date:   Thu Dec 17 16:09:17 2015 +0100

    improved error message on failed type casting

commit ab79ade75522129ded59a5ce4e919c52947b09c4
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Dec 18 12:24:15 2015 +0100

    use a set for finding plugins
    
    so double entries are ignored

commit f4a3d8a33dd2b12e0d8dc0ec34bdc6c044767262
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Dec 18 12:32:49 2015 +0100

    make repository types and their settings pluggable

commit ea84bd35060c6b765542068e2edb9fd696f2397f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 17 17:19:41 2015 +0100

    move root MultiSourceSelect handling from QTFConsumer into SelectStatementPlanner

commit 4ab559aa25ffc84f2a4698e022b7aae26505a718
Author: Michael Beer <michael.beer@crate.io>
Date:   Thu Dec 17 16:56:44 2015 +0100

    added quoted string parser test

commit 5d075aa1487c580de7919918d908d0006de1eeab
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 17 16:20:00 2015 +0100

    testing: remove casts from PlannerTest

commit d4bc80255fde1bcbf24ea6dcad448022cb6522ca
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 17 15:38:05 2015 +0100

    Use Logger from AbstractComponent
    
    The Logger from AbstractComponent includes the node name which makes
    debugging easier.

commit f8a38a1cbea738a716291bb92804d11bccae1e95
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 17 15:09:42 2015 +0100

    remove GlobalAggregate and NonDistributedGroupBy classes

commit e422bf591c882931d1ca3286135ab185590de290
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 17 14:49:52 2015 +0100

    use collectPhase.jobId() as jobId for CollectAndMerge

commit 2bcff7cbc9a9e083c0e09a035aa35c8bf7df82c4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 17 14:12:33 2015 +0100

    remove convertIfPossible from DocReferenceConverter
    
    It is possible to just check the RowGranularity to filter out
    partitioned columns. This is faster than iterating over the
    partitionedByColumns each time and removes the DocTableInfo dependency.

commit b26e1527b6fe633caa456e24778e5b32707481a2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 17 12:26:25 2015 +0100

    support fetching array columns and analyzed columns in join statements

commit 4e0ae8bc1c3c571a2c39557e1ebaf0a72265ec59
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Dec 17 12:04:31 2015 +0100

    fix loading modules with CrateComponentLoader
    
    via .modules(Settings) method

commit 671e49e73e8ba10619221fcdc6fff8e67840f1b6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 16 20:39:15 2015 +0100

    Optimize relation order for 2+ table joins based on join condition push downs
    
    This is a follow up to 3e9756b8b6421618329487217cf325c625af87af and
    should generally improve the performance for queries where the ORDER BY
    clause doesn't specify the order of all relations.
    
    E.g.
    
        select * from t1, t2, t3 where t2.b = t3.c
    
    Will now result in
    
             join
            /   \
          join   t1
         /  \
        t2  t3
    
    Instead of
    
             join
            /   \
          join   t3
         /  \
        t1  t2
    
    Still a far cry from a real query optimizer =)

commit 806a55931c3bc824ddfb1de314b23563ee69a8ff
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 16 16:53:14 2015 +0100

    testing: fix flaky join test

commit 108fe5f7b06e38ede0cc0665116784bde4c2057b
Author: kovrus <ruslan@crate.io>
Date:   Wed Dec 16 13:01:11 2015 +0100

    sync change logs and update to crate 0.55.0

commit 1d6f16f3e8d457d72ba0013cd5986ac0c1ed2d07
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 16 10:06:15 2015 +0100

    Avoid additional query splitting if the MSS contains only 2 tables

commit a9b4e3095bda668cc11e2c9223a34fb7a0af7b1e
Author: Adrian Partl <adrian@crate.io>
Date:   Tue Dec 15 16:43:33 2015 +0100

    proper loading of additional plugin modules in CrateCorePlugin

commit 3e9756b8b6421618329487217cf325c625af87af
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 15 11:34:48 2015 +0100

    integrate QuerySplitter into ManyTableConsumer
    
    The integration is rather dumb as there is no optimization of which
    tables to join first yet.
    
    That means in a query like
    
        where t1.x = t2.x and t2.x = t3.x
        order by t1.x, t3.x, t2.x
    
    The tables will be joined as follows:
    
              join (with filter t1.x = t2.x and t2.x = t3.x)
              /   \
           join   t2
            / \
           t1  t3
    
    This is due to the fact that currently the ORDER BY clause determines
    which relations to join with each other first.
    
    This can lead to badly performing execution plans since the filter might
    be applied on the top join node and not further down in the tree.

commit 9c8e82eb6602384b0dcaa34ae37d1fe0ed689b74
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Dec 15 15:59:56 2015 +0100

    fix insert from subquery statements
    
    some subquery statements were planned with default limit of 10.000
    this is now fixed

commit 7788ad2a449ee1875244ffdf439fadc56a36a3d1
Author: kovrus <ruslan@crate.io>
Date:   Tue Dec 15 16:10:38 2015 +0100

    updated admin ui to 0.17.0

commit 0afa38a2ff3fa9437019d445a3914fc50ccbbc7a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 15 11:47:35 2015 +0100

    add a join method to the AndOperator

commit b0a8cb395701865305d78ff1eb4e80d5c9289ac0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 14 22:30:13 2015 +0100

    remove AbstractDynamicTableInfo
    
    DocTableInfo was the only class that extended from it.

commit 3a98f61c39c49d4792cf8e342594b0ddddd44a93
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Dec 14 16:32:42 2015 +0100

    rework operator printing in SQLPrinter and SymbolPrinter

commit 81ccaed63f51ab3d7e9a6814b708687bd9a26dbf
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Dec 14 14:35:27 2015 +0100

    refactor symbolformatter
    
    into symbolprinter and symbolformatter and use symbolprinter at sqlprinter

commit 0d676d419dc79c4300a0b662be0341a075023427
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 14 16:54:02 2015 +0100

    Restructure ManyTableConsumer for better testability

commit 1b77f463f2625c72f5903817f289fbbac2e9ca62
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Dec 3 16:36:57 2015 +0100

    add show tables, show schemas, show columns sql commands

commit 7b145427e5ec7abe4b48c3896c6e43352313d5f9
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Dec 14 12:23:08 2015 +0100

    updated crash to 0.15.0

commit eba76aaf4f34ce09b1c6f7e1a51a12b04f28714e
Author: Adrian Partl <adrian@crate.io>
Date:   Mon Dec 14 12:01:26 2015 +0100

    increased wait time in testKeepAliveRunnableWithoutResetIsCalled to decrease likelyhood of a race condition

commit 5b01492c6b7d5707660726f997a14ac8e212114e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 14 11:38:12 2015 +0100

    correctly build where clause from explicit join syntax +2 tables

commit 0ffa5adbe09b0691346b19d54bef3ebed4e52c0a
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Dec 14 11:18:09 2015 +0100

    added missing generated column optimization

commit 2cbc31583a5ee3bee279ce206309dfbda3f5db39
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Dec 14 11:07:31 2015 +0100

    fix suggestion for heap sizing
    
    reasoning behing 30.5g as maximum value
    was wrong

commit c497d5134d132ee3edeefbda3a2cf6c5c96dba52
Author: Adrian Partl <adrian@crate.io>
Date:   Fri Dec 11 17:36:55 2015 +0100

    errors are now properly handled in IteratorPageDownstream

commit 29c3c332374d9f8afeb2e8b6e9814dad15fd0954
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Dec 13 20:56:44 2015 +0100

    use try/catch in toColumnIdent instead of instanceof check

commit b12c59a8af938e51c6da2b60554af92b4f6799cf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Dec 12 17:54:51 2015 +0100

    remove some unused stuff

commit 80a296c5178d5eb4095935dbbdd9f523b412cd03
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 4 17:01:43 2015 +0100

    support 3 table join

commit 99151de3f43b98413f7d3e425eae3c5f0eb17223
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 2 17:40:08 2015 +0100

    change NestedLoopConsumer to work on a TwoTableJoin relation

commit d86c95e2d903646affa5784838f4b7a6b59a7d3d
Author: kovrus <ruslan@crate.io>
Date:   Fri Dec 11 16:36:47 2015 +0100

    add copy from limitation in docs
    
    in copy from synopsis

commit 90f4a51ae3569ac2962bd7699409e444e8096c80
Author: Adrian Partl <adrian@crate.io>
Date:   Thu Dec 10 11:49:19 2015 +0100

    fixed flaky testKeepAliveRunnableNotCalledWithManyResets

commit c157813fb5a39f81b3304d330af007c58f3ffedd
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Dec 10 11:36:39 2015 +0100

    remove stresstest module
    
    tests and benchmarks have been moved to https://github.com/crate/crate-stresstest

commit 92fa0a1c58ca1248cb385fcb735d079b4b7145cb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 10 11:23:01 2015 +0100

    testing: fix todo in JoinIntegrationTest

commit 9eecb9ca9d3e738fc4a67c5814f23c1cd031410e
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Dec 10 11:14:00 2015 +0100

    try to fix flaky sys.operations_log integration test

commit 005dad3288af54098d6b04e6c7e835fefb977aa1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 9 22:36:18 2015 +0100

    remove forWrite parameter from normalizeObjectValue

commit a8c60696a6f4d7aedcd6c3f45df5d0253e530d90
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 9 22:30:55 2015 +0100

    avoid new Literal allocation in normalization of object values
    
    The value is always modified in place so there is no need to create a
    new Literal.

commit f977fcc979feec8487211c13dfa96ad9fb8122b2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 9 22:14:52 2015 +0100

    remove ExpressionAnalysisContext dependency from castIfNeededOrFail

commit decce034f7eb84c67bf35bd5c9cc4fd7b26cb094
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 9 22:06:47 2015 +0100

    remove Function symbol de-duplication
    
    It didn't really save on object allocations because the Function symbol
    had to be built anyway for the map lookup.
    
    And statements which contain the exact same functions twice are probably
    very rare anyway.

commit 048d8f1ab51c2964c05959a29c6d193f526e60f7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 9 22:02:17 2015 +0100

    refactor normalizeInputForReference a bit

commit e461604a918c3cb9ef3d8e11861e38615e452a0e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 9 21:45:40 2015 +0100

    extract ValueNormalizer from ExpressionAnalyzer

commit 20e7357da220d8113ea0c38ed002e4d5e5cc6d32
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 9 20:59:06 2015 +0100

    replace ExpressionReferenceAnalyzer with a FieldProvider

commit 59bd37054da63a47cb5ce22fba85630b05f5a7da
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 9 20:37:57 2015 +0100

    avoid new ExpressionAnalysisContext allocation in loop

commit cccff043dd3002da75692d012da0624b1a1f0f1f
Author: Adrian Partl <adrian@crate.io>
Date:   Thu Dec 3 09:28:09 2015 +0100

    document COPY TO output options

commit 0b228d805ecec0a75eaf68b011e2599bd4cfea38
Author: Adrian Partl <adrian@crate.io>
Date:   Wed Dec 9 17:31:09 2015 +0100

    add CHANGELOG entry for filtering in COPY TO

commit e561cdb5ba85cff1393ad3a355faf83040b30abb
Author: Adrian Partl <adrian@crate.io>
Date:   Wed Dec 9 15:55:50 2015 +0100

    added output format options for COPY TO statement

commit a3ab746547e5f04872523bfbd1fbd39dbbfcc7f5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 30 10:52:00 2015 +0100

    document COPY TO WHERE condition

commit 7bdd8873a26861a625c9c7ac6281aeca21df5ebb
Author: Adrian Partl <adrian@crate.io>
Date:   Wed Dec 2 16:30:29 2015 +0100

    Extended COPY TO analyzer to support WHERE clause

commit 7ee5bdf68f6d617d180b1e2a29e8b9119b588667
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Dec 2 14:58:08 2015 +0100

    add parser support for COPY TO WHERE clause

commit 836051becb347d4746dd50af3a1c724c623e2033
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 9 19:45:04 2015 +0100

    use Long.valueOf instead of new Long in TimestampType conversion
    
    In order to make use of the internal long value cache.

commit 37f2501f4b130d4cef865c2c962a54087495d1f7
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Dec 9 17:06:27 2015 +0100

    add docs about 30.5GB HEAP limit suggestion
    
    due to maximum heap size for Compressed Oops support

commit 59ed492ae8f041371ce31ebe769acabd058d0022
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Dec 9 16:09:31 2015 +0100

    Fix: disabled type recognition for timestamps

commit fd883814a38761ae35df33ce7d3909c74d7ca6fe
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Dec 9 11:57:19 2015 +0100

    add benchmark for bulk inserts with generated column

commit 7a9ee826df57d0c75116c28f1615609e36a36911
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Dec 9 12:36:37 2015 +0100

    do not validate and evaluate generated expressions on the shard while insert with values
    
    evaluation and validation is already done while analyzing

commit 187558934e501cae4bd0d861c38dece7c4654b8d
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Dec 9 10:02:07 2015 +0100

    optimize ReferenceToLiteralConverter

commit 5ac3dc8f09d0d2b1d6315411935f164c20d85996
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Dec 7 11:07:56 2015 +0100

    [sql-parser] add GENERATED and ALWAYS to non-reserved keywords

commit 93be3effde880130f4bd49f0c1e764f03b55633f
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Dec 4 16:44:58 2015 +0100

    add support for adding a generated column

commit 8a6394e74d91043555e4a7d4c4516020af29e772
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Dec 4 12:32:32 2015 +0100

    throw correct exception msg if generated col is a primary key and evaluates to null

commit 95a5f8fc45dad13a57cc58e0cd59751ad04ee5bd
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Dec 3 16:43:25 2015 +0100

    add CHANGELOG entry for feature T175

commit 7b32c615ef5a2d9b3144f4b71ebb0efceba078c0
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Dec 3 15:51:23 2015 +0100

    fix check if generated columns must be evaluated on insert

commit e32ad0fbd175d8b8d9e317eb701a0b0e4de083f5
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Dec 3 14:19:58 2015 +0100

    fix streaming of GeneratedReferenceInfo

commit 140875841dbdfc533e324c6d851d23019b0817b0
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Dec 2 15:40:17 2015 +0100

    fix query optimization with >1 generated columns
    
    which referenced the same base column

commit 2a89b6ddcd50a668f38b47a9c6b34b5c26c1f335
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Dec 1 16:07:14 2015 +0100

    optimize queries containing references used
    in generated columns only if table is partitioned
    by the generated column

commit 165e64b85e20983419cfae96e24b48d7e77d1e9a
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Nov 30 11:43:01 2015 +0100

    - fixed inserting generated primary key
    - fixed routing values on generated columns

commit 3ad21bdefc50f53742bba14f0a2b77cb8a23c087
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 27 21:05:54 2015 +0100

    [t175] do not export generated partition columns by default

commit 3686b3d858ca5faf9c991e5654b2bfd435cb43b2
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Nov 27 15:14:41 2015 +0100

    documented generated column copy from behaviour

commit 251436e3325c7fe582e0bf3e97de16f7ad9f51c9
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 27 15:59:55 2015 +0100

    [t175] add one more copy from partition test

commit a8abff0a22b93df704f3a2b718a8c09052b142f0
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 27 15:36:26 2015 +0100

    fix validation of generated column value on insert from sub-query

commit 897cada148d9dfd16b808c6109c815695fe0ba59
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Nov 27 13:46:53 2015 +0100

    ensure that generated primary key values don’t have
    to be given on insert

commit 56b5c2cf5cbb15029a78e4d7eaf8feaebec6445a
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 27 10:42:14 2015 +0100

    fix validation of generated column if updated
    
    also fix evaluation of generated column if only
    some referenced column were updated

commit a0e8b428ab77d54189e6f66b666f99ec738b2072
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Nov 26 14:06:50 2015 +0100

    Fix: insert from subquery did fail if the value
    of a generated column is given

commit 91e2abc5db4433f722e071511e1a413e0bc7947a
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 24 23:29:03 2015 +0100

    fix validation of multi values insert with generated columns
    
    when one generated column is given

commit 97756b282c7b0f9b58c82cf745b07d265387f469
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Nov 24 20:43:31 2015 +0100

    [t175] support generated columns on insert from sub-querys

commit e86c0d7ff6c2113d0c93a3fce69ccc7ed7360157
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Nov 24 20:42:13 2015 +0100

    remove unnecessary npe check

commit 6188461944fac84e976ac30f55e81e86c6e0f378
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Nov 24 19:55:36 2015 +0100

    only collect referenced columns if needed for calculating partition

commit d2ef6de9dfb2e5f6df982485ccc8880fd7f8810e
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Nov 24 16:47:41 2015 +0100

    [t175] support generated columns on COPY FROM

commit 0ed58eeeafaceb9f235625b0b5110398535ffffe
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Nov 24 17:24:46 2015 +0100

    fixed tests after rebase

commit f3cf3a850bb4643f74c57a79e73b118a2f2ad5b4
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Nov 16 14:42:58 2015 +0100

    add docs for generated columns and using them for partitioned tables

commit 9732805dbf4d0a23d7ba8e042f6d2a6a0024674a
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 24 15:36:20 2015 +0100

    fix insert into a table with generated columns
    
    when multiple VALUES clauses are used

commit 2e89cf4ab174f6dae9e54981fd2b13de1904fcea
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Nov 24 13:53:35 2015 +0100

    optimize generated column queries with other
    operators than equal if possible

commit 6e5ba7c4b84604d9a4bd195de9fe3b5fcd79e0d3
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Nov 20 12:59:47 2015 +0100

    Optimize queries with references used in generated
    columns

commit f9db1f835f8cf4bb6f776a75ee416f2eb4cbe239
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Nov 23 22:28:00 2015 +0100

    change symbolformatter to produce parseable output
    
    and use it for storing generation expressions of generated columns in mapping meta

commit c83ca97ba50196d066d91caa2fa4dcfcd8bfcb0e
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Nov 23 22:16:11 2015 +0100

    add classes Identifiers and Literals to parser
    
    in order to centralize common escaping and quoting operations

commit 9a7f1d0382264e2be26a0bca505548879b3f4c8f
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Nov 23 18:10:01 2015 +0100

    [t175] throw exception if partitioned by referenced column is updated

commit e0bdff357fed769d2182b11d484a6d93c74d2fdc
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Nov 23 17:16:09 2015 +0100

    [t175] support generated columns as partition keys

commit 59ab43b624e91754db94ff7576fd963fbea2c502
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Nov 23 15:50:48 2015 +0100

    [t175] add integration test for on duplicate key insert

commit a4917eb30a887d0552805df7356ac26e34a433db
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Nov 23 11:49:21 2015 +0100

    [t175] evaluate generated expressions on update

commit 1189b46a0af2e1c8cf5a1ee96946da9281eb3b27
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Nov 19 19:17:51 2015 +0100

    store referenced reference infos at GeneratedReferencedInfo

commit 2736e53480cb16af235472c94f9df40b980c8ea0
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Nov 19 17:17:07 2015 +0100

    create expression symbol after reading index meta data

commit c537f86ea66cecc982bf41ef34f3a1e2d96f8b8b
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Nov 19 12:07:48 2015 +0100

    add property 'preservesComparisonRelation' to FunctionInfo
    
    and functions that do have this property

commit 41ba396012964b3745e29f25b7f1e08f505fd969
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Nov 18 18:21:38 2015 +0100

    [t175] process generated columns on INSERT

commit a9825a04ee8136b06d327803410e1cfac52b2657
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 18 15:25:53 2015 +0100

    add an integration test for selecting generation_expression from information_schema

commit d8b5864d4e7c07c91206e997c91b5276b2c57253
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Nov 18 10:32:47 2015 +0100

    [t175] implement show create table with generated columns

commit 4e50fab5892b5559ef10410597bb2089233ab4b8
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Nov 18 09:56:39 2015 +0100

    [t175] fixed handling of subscript def inside generated expressions

commit 5825cfd0ad9acbf9df87caff40c390b9c9160919
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Nov 17 09:43:37 2015 +0100

    support creating generated columns(t175)

commit 2b6a2c647d1c16a453e68dba6cf46c3ca389d69a
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Nov 17 13:02:03 2015 +0100

    [sql-parser] support adding generated columns (t175)
    
    also clean-up parser tree:
     - merge GeneratedColumnDefinition into ColumnDefinition
     - rename NestedColumnDefinition to AddColumnDefinition

commit e68b123de94922f669cb6382d8b8f106ee56a3c2
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Nov 17 09:55:43 2015 +0100

    [sql-parser] support column constraints at generated column (t175)

commit 30bd480f21a30fbcc76ba24b666b4c816184710f
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Nov 16 17:44:03 2015 +0100

    [sql-parser] support generic expressions at generated columns (T175)

commit d790bbd55373dc746eb833f25775fbcbb51f1d8e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 16 14:45:34 2015 +0100

    add is_generated and generation_expression columns to is.columns

commit a178dea16d2d7b3ec938328003b1fbddab1e6484
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 13 17:36:19 2015 +0100

    parse generated columns from mapping and add GeneratedReferenceInfo

commit 1bf2623390642b962d5516a8406e4ddb5ac2ee90
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Nov 16 11:16:50 2015 +0100

    implement parser support for generated column definition

commit 445db3ddf933052c609dff4e34a2095c18730bf8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 8 20:14:29 2015 +0100

    avoid repeating getCause calls
    
    calling getCause() 3 times resulted in unnecessary synchronization since
    getCause() is synchronized.

commit b1d94cbe56eb453d25cffda285d611670f03c60a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 3 22:14:24 2015 +0100

    remove unnecessary cast from FetchCollector

commit c5a8326d14494600c9e15f3895ef09a421966e20
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Dec 7 15:27:37 2015 +0100

    fixed an issue which caused dangling readers after executing a self-join

commit 75c0462115ec1154cae5b3bd5d96065a1c343b48
Author: Michael Beer <michael.beer@crate.io>
Date:   Mon Dec 7 08:24:05 2015 +0100

    remove gitter and irc support

commit ef53e1f206a7fb9fab0eff4b0ee532cc72957930
Author: Adrian Partl <adrian@crate.io>
Date:   Fri Dec 4 14:42:00 2015 +0100

    refactored compression property out of settings for COPY TO statement

commit 9498b05c632f8ed4e57bc806ce8c83b5d8197397
Author: Adrian Partl <adrian@crate.io>
Date:   Thu Dec 3 10:56:36 2015 +0100

    set encoding to utf8 in doctests

commit 91fa21d717f98b3df5040de5d5ebd48bc4b1051d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 3 14:58:15 2015 +0100

    Make Literal constructor private
    
    In order to enforce the usage of the static factory methods

commit 31f28f9949293502a53631e165e539eb1f827f63
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 3 13:41:13 2015 +0100

    simplify left/right broadcast logic in NestedLoopConsumer

commit 5d07edc50b8aa103df1f41f01365671f4f73cc9c
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Dec 3 11:46:42 2015 +0100

    fix streaming of ReferenceInfo child classes
    
    also fix equals and hashCode methods

commit 8289fe44d682ccf0dfb4d0d2fb05a37c2aacb1af
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Dec 3 11:11:53 2015 +0100

    information_schema documentation was flaky,
    because mapping of dynamic object was not updated
    after import

commit 49c062c6a9d670f4942649d32714c6e04c098ecf
Author: kovrus <ruslan@crate.io>
Date:   Wed Dec 2 16:18:35 2015 +0100

    Add length scalar functions
    
    octet_length
    bit_length
    char_length

commit aa648146353bcb7bbe11d4cb1d2aa59ee3fb2541
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 2 23:09:30 2015 +0100

    avoid double dispatching in SetStatementAnalyzer

commit 6a6a69472b98fa8e4214c44c9366d91d31453a36
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 2 22:38:56 2015 +0100

    avoid double dispatching in ShowCreateTableAnalyzer

commit 24ab75c7e5c00ef0a622505d4f6611b11dc2c49d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 2 21:52:26 2015 +0100

    avoid double dispatching in KillAnalyzer

commit cd6a81fd3d49599705c09e0abf3cce59b090be88
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 2 17:41:53 2015 +0100

    rename CrossJoinConsumer to NestedLoopConsumer

commit 77c53edef0b3bcb36b5a167b0c0ced415a3c0673
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Dec 2 16:58:40 2015 +0100

    updated changelog according to 0.53.1 release

commit 12ee7130185c62bd461e1b6a05b7fcf0dba92870
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 2 14:38:20 2015 +0100

    Deactivate JobContextReaper by default
    
    Since it sometimes killed jobs that were not really stuck but just slow.

commit 4d2534a3c72e191b93e44b7077e1afd3a40654c1
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Dec 1 08:19:17 2015 +0100

    refactor COPY TO, build and process sub-relation

commit 79cdb5d36b56976bafc8ba2a5b7271e404182c2a
Author: Claus Matzinger <claus@crate.io>
Date:   Tue Dec 1 10:54:39 2015 +0100

    updated CraSh version, fixed a typo

commit 15f0c8f3970f175cece460e7742d343b666bc691
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Dec 1 10:45:49 2015 +0100

    documented that geo shapes has to be fully valid
    and how to repair them

commit 27db63d392df2c2933c5f2fa14db4139c2395cd0
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Dec 1 09:17:36 2015 +0100

    fix and extend HEAP configuration documentation

commit 3a616eec63cca6d50e30b40161e735f65021c7e1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 30 17:16:49 2015 +0100

    don't acquire searcher for relations without fetch and prevent NPE
    
    ``indexInfo`` in the FetchProjector could cause a NPE if there are no
    references to fetch from one of the relations that occur in the query.

commit 1d16995cfb303f9e4bd145bea6444b6a2e2abe4e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 30 17:42:12 2015 +0100

    remove useless remainingOutputs call
    
    remainingOutputs() is just a getter and the result wasn't assigned to
    anything.

commit 7821462f6e37e33f4493a9fbe97ae951298cd023
Author: kovrus <ruslan@crate.io>
Date:   Thu Nov 26 18:18:24 2015 +0100

    Set group projections in planner to shard level

commit 5402fc75188e57caa4e005fd2ba810c5e8a2735d
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Nov 30 12:12:31 2015 +0100

    add dedicated COPY statement planner

commit 3deef68c265ed3de0c491e7e07d8f7188e70f529
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Nov 30 11:40:21 2015 +0100

    allow creating the crate client with settings and servers at the same time

commit 44bdee875bb3552cd803502af7a742c2a6ab9118
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Nov 29 19:56:21 2015 +0100

    fix possible NPE in AbstractReferenceResolver

commit c5ebdb9381004f79493785e2bba07cdca5c3ca23
Author: Michael Beer <michael.beer@crate.io>
Date:   Mon Nov 30 09:07:02 2015 +0100

    added IAM role info and removed AWS credentials

commit 3e27b053d32665710c9d728937f5ba07d92042a8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 27 19:43:06 2015 +0100

    NestedObjectExpressions: remove null checks before instanceof check

commit 124008919d297cb3ed217bd481f6698f8870381f
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 27 14:24:17 2015 +0100

    add equals() & hashCode() to ShardUpsertRequest
    
    also clean-up code

commit 77869e1015f97d832ea4092a38bdb839774c6096
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 27 14:22:49 2015 +0100

    fix flaky partition test

commit e31c46d71265c5b9cd9501392494d503ef95f64a
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Nov 27 14:15:30 2015 +0100

    updated admin ui to 0.16.1

commit 7312b67d7bf26a62f4d540391b71081ea39aa983
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 27 10:58:19 2015 +0100

    add update expression validation test
    
    this tests validates that an update expression
    always refer to existing values rather update ones

commit 3043192c6ef845f335d0ca758318d8185ee91471
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 27 10:45:46 2015 +0100

    Revert "fixed update/insert-on-duplicate assignment expression processing"
    
    This reverts commit 64b1676e970ce074d2f3a91e554e5d838a921013.

commit 2f3b31619c59814947bf23ed2a1dfe26e95e78a6
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Nov 23 13:18:49 2015 +0100

    exclude h2 threads from thead leak detection

commit 241f794dbf54f2df843a5634a32b3ff659e10b7d
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Nov 23 09:04:31 2015 +0100

    increase thread leak linger timeout for LuceneDocCollectorBenchmark

commit 1072fc7952b09fd47e1cef8065cca2a726239ff3
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Nov 20 13:08:29 2015 +0100

    increase lucenedoccollectorbenchmark testsuite timeout

commit e7d1842113d347ed1057f9df711683c90b5afdbd
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Nov 19 20:52:33 2015 +0100

    ensure lucene-test-framework before lucene for sql-benchmarks
    
    and add reports dirs to .gitignore

commit d2a43d22b26714410838a5329751306c946949da
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Nov 26 16:29:32 2015 +0100

    fixed offset handling in ByteRef usage

commit a87a03d72782b2dd367f7f35a8d6e34e533ee76b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 26 16:25:09 2015 +0100

    remove BytesRefGenerator interface from IndexWriterProjector

commit 7ff20bbb1bec2d0e5b1b6201ce6137fbb6cc1c89
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 26 14:24:04 2015 +0100

    remove Generics support from BulkRequestBuilder

commit 4d211de77c9f768eb629dbd302b2d831cd2f4963
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 26 13:46:31 2015 +0100

    don't include routing per item in ShardUpsertRequest
    
    The requests are already shard specific which implies that the routing
    value of an item must result in the same shardId. Therefore it can be
    optimized to have the routing value only once on the request level
    instead of item level.

commit 64b1676e970ce074d2f3a91e554e5d838a921013
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Nov 26 12:07:33 2015 +0100

    fixed update/insert-on-duplicate assignment expression processing

commit f53b17421188f81523b9608f35088fe20ff26083
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 25 10:44:18 2015 +0100

    remove Rows class
    
    It is no longer in use

commit 36ba658c2350255f80f17af3be1616a26fa9cc08
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 24 20:36:52 2015 +0100

    don't index partitioned column values

commit 1e5f565ac12bc0236f9f3901bccd789e97094514
Merge: 9a31c0a878 af954c9224
Author: Chris Ward <chriswhward@gmail.com>
Date:   Wed Nov 25 15:53:18 2015 +0100

    Merge pull request #2983 from crate/cc/system_docs_review
    
    Some small doc fixes after recent changes to system section

commit af954c922417cffa462b48812ffa5adc8f557fb9
Author: Chris Ward <chriswhward@gmail.com>
Date:   Wed Nov 25 12:04:40 2015 +0100

    Some small doc fixes after recent changes

commit 9a31c0a878a8ed687343595d2b65e77ff06aca42
Merge: 79271e7516 e5ed37bc43
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Nov 24 22:55:00 2015 +0100

    Merge pull request #2957 from crate/shard_recovery_info
    
    Expose recovery information in sys.shards table
    
    Example usage:
    ```sql
    cr> SELECT schema_name, table_name, recovery['type'], recovery['stage'], avg(recovery['size']['percent']) FROM sys.shards WHERE recovery IS NOT NULL GROUP BY 1, 2, 3, 4;
    +-------------+------------+------------------+-------------------+----------------------------------+
    | schema_name | table_name | recovery['type'] | recovery['stage'] | avg(recovery['size']['percent']) |
    +-------------+------------+------------------+-------------------+----------------------------------+
    | doc         | github     | REPLICA          | INDEX             |               41.561377462744716 |
    | doc         | github     | GATEWAY          | DONE              |              100.0               |
    | doc         | github     | RELOCATION       | DONE              |              100.0               |
    | doc         | github     | REPLICA          | DONE              |              100.0               |
    +-------------+------------+------------------+-------------------+----------------------------------+
    SELECT 4 rows in set (0.002 sec)
    ```

commit e5ed37bc43033068ed07596993a4d7a346c45c9c
Author: kovrus <ruslan@crate.io>
Date:   Thu Nov 19 11:09:47 2015 +0100

    Expose information about recovery in sys.shards table
    
    This information can be used to monitor recovery after cluster restart
    or when updating the replication level.
    
    Example:
    ```sql
    cr> SELECT schema_name, table_name, recovery['type'], recovery['stage'],
    avg(recovery['size']['percent']) FROM sys.shards WHERE recovery IS NOT
    NULL GROUP BY 1, 2, 3, 4;
    +-------------+------------+------------------+-------------------+----------------------------------+
    | schema_name | table_name | recovery['type'] | recovery['stage'] |
    avg(recovery['size']['percent']) |
    +-------------+------------+------------------+-------------------+----------------------------------+
    | doc         | github     | REPLICA          | INDEX             |
    41.561377462744716 |
    | doc         | github     | GATEWAY          | DONE              |
    100.0               |
    | doc         | github     | RELOCATION       | DONE              |
    100.0               |
    | doc         | github     | REPLICA          | DONE              |
    100.0               |
    +-------------+------------+------------------+-------------------+----------------------------------+
    SELECT 4 rows in set (0.002 sec)
    ```

commit 79271e7516cc709a0cc460409ab1bb61e4710474
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Nov 22 13:15:53 2015 +0100

    RowShardResolver: remove synchronized from setNextRow
    
    RowShardResolver is no longer used from different threads

commit 340d35205150c768092aba50c27a47de2aadfa07
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Nov 24 15:53:44 2015 +0100

    expose relocating shards in sys.shards table

commit 11e8f83c2ed18e5d2dbef3e6cc10a31cf8fc3080
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 23 21:25:07 2015 +0100

    change locations of Routing to be non-nullable
    
    With the exception of one error case and a couple of tests the locations
    were never null anyway. Cleaner to make it non-null and safe a couple of
    null checks and possible NPEs.

commit ff11b4a37bae89a3e02f430772f85477eb7020d6
Merge: c9719bc048 401cfcbb1f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 24 16:38:45 2015 +0100

    Merge pull request #2956 from crate/j/multi-fetch
    
    add support for fetch with joins

commit 401cfcbb1f7f9771b8a33cbbf1fd6689a27d7ec6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 23 14:12:20 2015 +0100

    fix join with fetch where only one table is selected

commit f9774236441c3e1f1648afebde6e7ea6fcc33a6e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 23 15:33:01 2015 +0100

    re-enable join benchmarks with fetch

commit 2bb5db62005d29bf8d3ae3ca1bbbec8ee0fe89f1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 20 16:33:06 2015 +0100

    update docs about join limitations

commit f1b1669fc61e1336c07d468e1dab1055975ff9b1
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Nov 10 14:16:45 2015 +0100

    add RelationColumn Symbol and support fetch on MultiSourceSelect
    
    pushdowns and splits now produce symbols which allows for replacing
    relations underneath by not using fields

commit 4036c32b33e2468047c59258e4b270d34b56ad04
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 20 14:49:25 2015 +0100

    group fetch refs by TableIdent

commit c9719bc048fb82b2403ca79681e4a860fd7bd31e
Author: kovrus <ruslan@crate.io>
Date:   Tue Nov 24 13:16:18 2015 +0100

    Add the startssl root ca to the truststore

commit b986816585c7479193ae7d29f152c6fe0c9d9f01
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 23 15:56:55 2015 +0100

    testing: fix flaky testBulkUpdateWithOnlyOneBulkArgIsProducingRowCountResult

commit 5c70ec72b6e9d04a0f79489b8584a85198905664
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 23 14:27:47 2015 +0100

    remove useless loop from FetchContext

commit 843e415a8d1215a95c05cbff17cd8bf030d5c08f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 23 11:29:01 2015 +0100

    fix YAML contentType handling in TransportShardUpsertAction
    
    Since eabe917773b31cf624b187a6f4689f27e08484fa
    `testCopyFromPartitionedTableCustomSchema` would fail when
    `Requests.INDEX_CONTENT_TYPE` got set to YAML.
    
    This fixes the issue and also avoids creating an unnecessary
    XContentBuilder (which by default allocates 16kb) if the request
    contains a rawSource

commit 979e89e9e02f12b8218c9caf644ef4739813fa28
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Nov 21 16:08:56 2015 +0100

    replace IterableGetter with Supplier

commit 5ef5f55d6c84192cd717a82b582859f89d213018
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Nov 22 14:48:25 2015 +0100

    remove ColumnReferenceExpression interface

commit 074b53ceb0baf0b4c1bca3335b92fa2de91111e6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 20 13:49:30 2015 +0100

    move HasColumn logic into Symbols and replace ScoreReferenceDetector with it

commit 382b82db602b9c58c0f3b6d31745947302786b96
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 20 11:09:14 2015 +0100

    remove coveralls
    
    just codecov is enough

commit 4ccc79fe6d10c8b1d39c8fa0828879c6548f8b7b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 20 12:06:39 2015 +0100

    remove schemaInfo property from TableInfo
    
    In most cases schemaInfo was only used to check if it is a systemSchema
    which was redundant because in all cases there was already a
    DocTableInfo instance available which indicates that it can't be a
    systemSchema.
    
    This also makes testing a bit easiser as the schemaInfo doesn't have to
    be mocked (and in some cases we forgot to mock it's name which lead to
    strange tests where the schemaName was just empty)

commit 59a3cbcc1c0539388cd085d6ee8bcc761b666fbc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 20 11:32:38 2015 +0100

    change QueryThenFetch to a nested plan

commit f0acf5d4b38a1faf87a5a8afa20efc72dd1f8d38
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 20 11:26:22 2015 +0100

    make MappingSymbolVisitor more flexible

commit 40aea19185f13166a53cfdc975af87cd442f64c4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 20 10:51:24 2015 +0100

    remove isReference from SymbolType
    
    was only used twice and in those cases a instanceof check makes more
    sense as there is a cast directly below.

commit f70c2cf5cb355da93ee2ae8ef5fbaefb2cc7130e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 20 10:12:53 2015 +0100

    remove isLiteral from Symbol
    
    is redundant.. can just use the SymbolType or do an instance check

commit 41bb4e4788a7e665b7405d90b44d665b21b70edc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 20 10:22:05 2015 +0100

    Remove "SymbolBased" prefixes

commit f176adc2d487d854f33ba02d2adb369ef2e4ee72
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Nov 19 10:05:00 2015 +0100

    clean plugin folder in :app:clean task

commit 6190206264feb9c7fee4436dc06d3c00d54a6b08
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 19 21:05:37 2015 +0100

    IndexNameResolver: fix indexName generation for partitioned tables

commit 1796e32fb12dede9fc7a59945951d00dfef9323b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 19 18:46:51 2015 +0100

    use SymbolBasedBulkShardProcessor in ColumnIndexWriterProjector

commit eabe917773b31cf624b187a6f4689f27e08484fa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 19 17:42:45 2015 +0100

    use SymbolBasedBulkShardProcessor in IndexWriterProjector

commit ad8ddd70e565091e9acdeea634b06d9539705226
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 20 09:20:45 2015 +0100

    re-use TableColumn for _doc column handling

commit 336708cfd16b538fd40e8180287f5b324d1bf6e3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 19 17:22:41 2015 +0100

    extract getIndexName logic into a Supplier

commit 342e94e5ea7fac1788707533aec97d9a21617e09
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 19 16:43:00 2015 +0100

    use Iterable of CollectExpression instead of array

commit 8be643b28dbacad4fc0d3722066d19be4bf7c038
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Nov 19 16:19:01 2015 +0100

    ensure fetchroutingtimeout is not set to 0

commit d28fe3a242d10202568f016dd72e61b009550954
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 19 15:21:46 2015 +0100

    remove empty inner Response class form ShardUpsertResponse

commit 8bdb190e45c5f5815eeb7412cab6fd209e921728
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Nov 19 13:43:08 2015 +0100

    increase default request timeout for external benchmarks to 1 minute

commit 303a4cd3e76e92754891004c21bfedda90dffe0f
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Nov 19 13:42:48 2015 +0100

    scale routingfetchtimeout with number of partitions

commit e2678af8b6665b76bd9d7a6e8395fc19701d3fc1
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 18 20:38:04 2015 +0100

    reduce partitioned bulk benchmark rows and partitions

commit 1e880589c1b60a12852beeb4d94620393da12cef
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 18 13:44:57 2015 +0100

    increase timeouts for PartitionedBulkInsertBenchmark

commit 131a974fd928074b3d08ede91ac0d54903895a6f
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 18 09:31:25 2015 +0100

    simplify benchmark rule property

commit f1435e4b526b76a8e68513585fc8ddd4b174628b
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 18 09:31:13 2015 +0100

    add h2 dependency to sql benchmarksCompile
    
    in order to create history charts

commit f945f21424f7e38902c10b658f48020a6e306899
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 17 17:07:24 2015 +0100

    comment out QTF and 3 table JOIN statements in CrossJoinBenchmark
    
    until they are supported

commit ded580553afaac58c1213d874c4dbdf7a65e4edd
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 17 11:36:53 2015 +0100

    simplify BenchmarkRule definition

commit 59534a23b9a5c491bb000ff1692b8958310a4680
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 17 11:30:50 2015 +0100

    re-add dependency on sql-module for stresstests
    
    or else SQLAction is not registered and no sql can be executed against the internal test cluster

commit 59b955310ea98dc168060bbddfd2bfd0bb23b65c
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 17 10:46:03 2015 +0100

    fix benchmark runs

commit 5ae5746e48f4d3fadbbfa3fea8f9367882ce1b3a
Author: kovrus <ruslan@crate.io>
Date:   Thu Nov 19 10:07:19 2015 +0100

    Reformat docs for sys.shards coulmns

commit f1db98dfb65a02c29b9238e8cb7ea2b68e5f8737
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 18 18:43:26 2015 +0100

    update gradle to 2.9

commit 296d9dbfd326e1868affaa1a35b54a84f9236e87
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 18 16:55:33 2015 +0100

    add support for explicit inner join syntax

commit e31cfb46e385485fd730bef1ff4e52465b6d6ae0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 18 11:14:08 2015 +0100

    add support for selecting nested columns in _doc

commit d0bbc976ba2644bcb5b09ce1c0a22a23630f8e28
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 18 11:32:50 2015 +0100

    fix bulk update ClassCastException

commit aa4bc29b812bbe7eea53c5dd646d558930ece28b
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 18 11:20:18 2015 +0100

    right casing for static test table infos/idents

commit 923fe1db1e4b98856b9f2b4367be8face2ddc88f
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 18 11:14:55 2015 +0100

    handle noop in CrossJoin source relations
    
    e.g. when joining an empty sys.shards table

commit 7d5291ce6a9565efe23d9a7ae941ffa473ff93f2
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 17 17:32:10 2015 +0100

    [testing] bind http transport to 127.0.0.1 in http integration tests
    
    so it will work no matter what interfaces are up and configured

commit 3138ffca94577b60b553cfecf177599176ac1eb3
Author: Michael Beer <michael.beer@crate.io>
Date:   Fri Nov 13 16:20:57 2015 +0100

    add os and jvm infos to sys.nodes expression
    
    and add constants as expression names

commit bb99bec084c0e3e92e34c9b700aa119b8b6384e9
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Nov 18 10:26:28 2015 +0100

    added note about how the distance between 2 geo_points is calculated

commit 40f2c0615686f115e6af8802a4afdd286aa8500b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 17 18:07:08 2015 +0100

    remove unused stuff from sql-parser

commit 98076a4be21f5cc8a16fd34ec2ff992dd7cd9e95
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 17 17:33:32 2015 +0100

    move analyze call into TransportBaseSQLAction

commit 8ea62eb01f7b72fdcd27662ea1903811a8ed949b
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 17 17:22:32 2015 +0100

    introduce static method Routing.forTableOnNode
    
    that returns a simple routing for a table on the given node (without shards)
    
    mostly used for sys tables

commit a139a89046231d10b289e94ba10dc5db32b8abc5
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Nov 16 17:09:42 2015 +0100

    sort columns in sys and information_schema tables alphabetically

commit b5565a57c07be741aa0f6e84d4510a43ca8fdd2a
Merge: 7876c7aa66 77c6da4c8c
Author: Johannes Moser <m@joemoe.at>
Date:   Tue Nov 17 13:36:05 2015 +0100

    Merge pull request #2919 from crate/joe/joins-doc-patch
    
    made the text about inner joins clearer.

commit 77c6da4c8c940fad3098c8e953e7f02e807e8542
Author: Johannes Moser <m@joemoe.at>
Date:   Tue Nov 17 12:01:14 2015 +0100

    made the part about the inner join syntax clearer.

commit 755340f48977bde0a6e5295ff2ce3c5719697b4b
Author: Johannes Moser <m@joemoe.at>
Date:   Tue Nov 17 11:53:09 2015 +0100

    made the text about inner joins clearer.

commit 7876c7aa66e1dbcb118a4db35cb5e84dc7047972
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 16 17:09:42 2015 +0100

    remove String handling in regex query builder

commit d7da377c68f0904bdeef3614ce7e4e1e1cab41fb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 16 16:28:49 2015 +0100

    remove Deprecated annotation from ``whereClasue.hasVersions``

commit f1572db0412db83e063625769a9a2d6006e76e4d
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Oct 13 16:10:02 2014 +0200

    added documentation for JOINs
    
    this documentation reflects the current status of JOINs

commit 5754336a97ecaf5f8ef59059aef90ea9bbe95903
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 16 15:59:49 2015 +0100

    remove deprecated `resolve(Symbol)` from AbstractTableRelation

commit 8419bb121437f0cfe4fc2f0a3310f833f7865a9a
Merge: 5b390b8cfe 279eab4d1e
Author: Johannes Moser <m@joemoe.at>
Date:   Mon Nov 16 15:57:00 2015 +0100

    Merge pull request #2912 from crate/joe/tries-links
    
    set correct links to wikipedia

commit 279eab4d1e85bb436f1d488ec0562016a1effb8c
Author: Johannes Moser <m@joemoe.at>
Date:   Mon Nov 16 15:50:00 2015 +0100

    set correct links to wikipedia
    
    * one link went to the german version
    * another went to a 404-cat.

commit 5b390b8cfe3963749780933453cbe892ca8930cb
Author: Michael Beer <michael.beer@crate.io>
Date:   Mon Nov 16 15:01:51 2015 +0100

    fixup! update to crate 0.53.0

commit 09247e53d98224191d80548ef540b6c25220da46
Author: Michael Beer <michael.beer@crate.io>
Date:   Mon Nov 16 14:56:32 2015 +0100

    update to crate 0.53.0

commit ac4824166f22335c922bae339b92268f3c287240
Author: Michael Beer <michael.beer@crate.io>
Date:   Mon Nov 16 13:44:28 2015 +0100

    update crate admin to 0.16.0

commit 1cbad993dea75ec0306e3763e2ae2b663ccbe200
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 16 13:35:04 2015 +0100

    re-use ColumnIdent.getChild in DocIndexMetaData

commit 3271caec8bf189d75628a0afce2d9ec6bef2f234
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Nov 16 12:23:01 2015 +0100

    fixed an issue which caused the query splitter to report the multirelation flag wrong

commit 176f6d1855aa6b535819f7a28d2f65093229f5df
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Nov 16 11:44:55 2015 +0100

    prevent explicit join syntax for all expect of CROSS joins

commit 6bac243d69dd3d394312ce62558314e2929f272d
Author: Michael Beer <michael.beer@crate.io>
Date:   Mon Nov 16 12:36:23 2015 +0100

    add uid and udc tracking info to docs

commit a54a37e230a61c251b5d1811c7fdcfa178cc5bff
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 16 11:44:23 2015 +0100

    clean up prepareCrateMeta

commit 92837195f80571c53b22821c41b99824284fe91b
Author: Michael Beer <michael.beer@crate.io>
Date:   Mon Nov 16 11:06:04 2015 +0100

    update changelog to crate 0.52.2

commit 3913f527a180d26e4d0919f518dd78166e414c63
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Nov 15 21:10:18 2015 +0100

    mark some attributes as final

commit 79feed11bfb469a09b53d6fcf9c26909056c3362
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Nov 14 19:42:43 2015 +0100

    minor deprecated method clean-up

commit d3ae871022b9d2010497cd7fd09de907776940f8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Nov 14 19:42:22 2015 +0100

    remove NotImplementedException usage
    
    it's internal API and shouldn't be used

commit 877cbf6abb90f0d705386045629eabf5162a52d7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 13 16:56:10 2015 +0100

    testing: use sql refresh table instead of ES refresh

commit 798b6c7f6f9d2e9431ae8f7c54e698356f35e300
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Nov 13 14:55:51 2015 +0100

    sort maps in formatters for deterministic output
    
    especially in tests

commit d3621ba719a96c59725f35e65474d2b3f12b5a56
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Nov 12 22:08:51 2015 +0100

    implement intersects scalar function

commit 68dd2223eb70b47567cdaf2842949e0d4a288e14
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Nov 12 22:39:18 2015 +0100

    fix 2 doc links

commit 72b745c13ec510d2d635451be5396e05bd012b45
Author: Michael Beer <michael.beer@crate.io>
Date:   Fri Nov 13 14:08:22 2015 +0100

    remove irc channel and add gitter support

commit 353ab35530f25274c02a1fe1b3eb4a68782229c7
Merge: 0f49a60fe9 87a22c8a33
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Nov 13 13:39:51 2015 +0100

    Merge branch 'm/partitioned-by-types'

commit 87a22c8a33bdd3a5b4ec8945bbd480cb700f0106
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Nov 13 13:22:15 2015 +0100

    fix: properly restrict partitioned by columsn to primitive types

commit c3c8ad4de4211dd234a71f75ecde2b637f03dbfb
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Nov 13 11:09:00 2015 +0100

    fix docs about partitioned by column types

commit 0f49a60fe98fdf3dc684143e264a7ace54adfeed
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Nov 12 22:54:46 2015 +0100

    make fetch pushdown result safe for later rewrites of subrelations
    
    use isSQL for testing push downs

commit 41be25f3970b7ec26137082c34ff39b7b31d8be1
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Nov 12 16:20:20 2015 +0100

    [stresstest] eliminate ``sql`` sub-project dependency
    
    also move another unit benchmark to ``sql`` sub-project

commit f2894c2747ffe3f5f522b1456a52a4dd40936249
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 2 10:14:49 2015 +0100

    move unit benchmarks back into the SQL module

commit 50342980e3f0916fcdefba5d8647942a33630517
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Nov 12 16:21:11 2015 +0100

    enable git VCS at idea via gradle

commit dd43e20040a32a48ec7e26e47974f2f58ad0d919
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Nov 12 14:53:41 2015 +0100

    changes for geo_shapes

commit 2a9b92e434352b7f6c06abf2c0538313b1f032de
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 11 17:03:32 2015 +0100

    allow any literal or parameter in match predicate

commit 22080a2db3d5281270c9606d57b2ccd8bf625127
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Nov 11 17:05:02 2015 +0100

    removed scalar_intersect from Exact Queries in documentation

commit 9a4004831caa05af056ceff38ac12f0288a4439e
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 11 15:12:16 2015 +0100

    add tests to verify insert and select behaviour of geo_shape type

commit f092fde379b3113e33e52c8fe760f25cc4c00874
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 11 14:40:19 2015 +0100

    [testing] ensure that maps are sorted deterministically in printedRows

commit a874299b49f5fb9c1e78cb75ccd378e57993392d
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 11 11:36:09 2015 +0100

    fix validation of GeoJSON coordinates
    
    if they are of invalid depth

commit bd15bd9416cf86a2ca84ed99af337bc362f19aba
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 11 11:34:19 2015 +0100

    add casts to geo types

commit d0126c678ccc61c4547ec569c57b864ef126201e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 11 11:58:14 2015 +0100

    remove contains support

commit 6c050ec02ee26ef0063911f48cf75d541216d099
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Nov 11 11:35:48 2015 +0100

    support GeoJsonTypes which are indexed with
    elasticsearch

commit 09a5c4995719f5d6e151b5896bb39fc14688db96
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 11 10:51:11 2015 +0100

    support geo match in ESQueryBuilder

commit c8519fe020b31b363e6f419db35e1c051d2b2941
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Nov 11 10:31:22 2015 +0100

    added ``tree_levels`` to documentation

commit b402fba928e18af6cfeeff8fadfb29c06c2fd91a
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 10 15:50:28 2015 +0100

    remove docs for intersect function as it does not exist yet

commit b024a44c3721fba460bb98a322a4a3c8ff3fee45
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 10 15:49:28 2015 +0100

    remove unknown types test as there are currently no unknown types
    
    at least geo_shape ain't one no more

commit 784261122676aae96f05ae3129dbd181001fcb8e
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 10 14:33:19 2015 +0100

    restrict within function to only accept geo_point and geo_shape as arguments
    
    and change implementation if operating on shape references, as these need to be fetched from source
    and can thus only be executed with a generic function query

commit 7428deb985d3ca943b668ba0149baea4f51ac021
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Nov 10 14:26:28 2015 +0100

    addes geo_shape support for SHOW CREATE TABLE

commit 46b6487be893ee41babd0dd1c2f5c78c732df9f2
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 10 11:26:22 2015 +0100

    allow selecting geo_shapes
    
    from source as object map

commit c51581f91a3d41fa0161344efa7121db1a173a7a
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 10 11:23:49 2015 +0100

    include geo_shape columns in DocIndexMetadata

commit 61c83e65117033467d98401984f57a6293361acf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 10 13:27:46 2015 +0100

    support geo match predicate in LuceneQueryBuilder

commit 5de2670e79fd2ac750fa64348713ddd11537395e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 9 12:15:01 2015 +0100

    support geo_shape types within match predicate

commit 99be7e0d07c65a01d8258151213dad260d48019c
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Nov 6 13:38:32 2015 +0100

    support inline geo_shape Index definition

commit 07833de5fe2eb490334b954a585ef39c5f80e387
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Nov 6 11:37:50 2015 +0100

    add geo search docs

commit 69657b0bca7fb01feddb6e126b994d11acad5a59
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 4 16:44:08 2015 +0100

    added docs for intersect query

commit 501a937e339ff99ac9a9f58529009cd0a140426b
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 4 15:00:24 2015 +0100

    remove doc about cast limitation from/to object, geo_point and geo_shape

commit 62b4a1823f9e310e6bd5c17f69ecf744747d6f3a
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 4 14:59:24 2015 +0100

    add geo_shape type docs

commit 3381ff2700377bcd48d85de10fe81ffba67048a7
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Nov 5 15:35:35 2015 +0100

    added GEO_SHAPE type to parser

commit 0482f5790596cd25525a113d88c4afbce1410371
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 12 08:56:22 2015 +0100

    testing: fix flaky testSnapshotWithMetadataDoesNotDeleteExistingStuff

commit 439686f04fccf3b60cd67b2035d0b16655b46789
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 11 14:49:38 2015 +0100

    use tableExists in RestoreSnapshotStatementAnalyzer
    
    tableExists does cache invalidation to make sure it really
    has the latest state.
    
    The doctests were flaky before because they'd drop a table
    and then get a TableAlreadyExistsException on restore
    snapshot.

commit e8fbf23577a63f01af0455f940c462ebaa7f9151
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Nov 11 10:44:32 2015 +0100

    removed collectphaseids from fetchphase

commit 69eebf6cfb1b6ab47a8b6c89457808271fd5d26b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 10 15:55:18 2015 +0100

    testing: use sql expressions for ESQueryBuilderTest

commit 0cdcee5da4ba703fe7625bad1352120a03d2aad4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 10 11:48:08 2015 +0100

    testing: make LuceneQueryBuilderTest more readable

commit 2903d2c67e117a4f1a9fc2ca71340b1f465c327c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 10 10:44:36 2015 +0100

    testing: move sql expression to symbol logic into a separate class

commit ec52a2465c0ed2ae7c63f44cfa2fd9f99444f9d6
Author: Michael Beer <michael.beer@crate.io>
Date:   Tue Nov 10 10:33:27 2015 +0100

    added warning for async mapping update on multi nodes

commit b3697c3efbc338fa0fcbfc3b59619b05b0736000
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Nov 9 14:35:16 2015 +0100

    change internal representation of geo_shape type to map
    
    from jts Shape to Map<String, Object>

commit cf199f9abe50a59d927d3057c8a6c036a835787d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 9 17:27:40 2015 +0100

    testing: fix flaky SnapshotRestoreIntegrationTest

commit 38d8b5951d64fdfcaa665e69d4dc550dfdba3403
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Nov 9 17:47:11 2015 +0100

    remove setting default assertion status in tests
    
    as it is not needed anymore to successfully run the tests.
    this helps running tests without assertions

commit 1d1f1b94a64eb3c362d4aa5960dd9fdad7d2e739
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 9 16:12:13 2015 +0100

    testing: fix broken testToNullConversions

commit b602bf380b2c72b70240789f80e54eabef401124
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 9 14:22:01 2015 +0100

    remove `toNull` cast
    
    cast('x' as null) is invalid syntax as the parser doesn't
    have a `null` type so this cast could never be used via SQL
    anyway.

commit 6572c984800daaf2a365f7a3d31c14281f177d57
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 9 12:51:33 2015 +0100

    testing: clean up isLiteral matcher

commit 8a7d4e3b96ae87f047a65a5b2be8c514d603b38d
Author: kovrus <ruslan@crate.io>
Date:   Fri Nov 6 14:12:15 2015 +0100

    Reword the partition check message

commit 75d8e0bdf794973a1b888b0b524fc2b106a92244
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Nov 8 13:13:05 2015 +0100

    udc: fix possible npe in getHardwareAddress

commit dc47d65f947a61b88cb0db619f1fd9f4068c9506
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 4 16:43:57 2015 +0100

    reformatting

commit 383cf6062d8d5e7c285f9dfd6704fd98c75a49c4
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 4 16:43:44 2015 +0100

    remove outdated docs about update limitations

commit c93421968fabd3344d9824ace5220fe99d44a047
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 6 11:06:59 2015 +0100

    only install test parts for gradle itest/gtest tasks

commit 7ebe0ed559e17e3348e1ab3480f32d78dc38695d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 6 11:06:18 2015 +0100

    update buildout bootstrap script
    
    this removes the following warning::
    
        RuntimeWarning: You have iterated over the result of
        pkg_resources.parse_version. This is a legacy behavior
        which is inconsistent with the new version class
        introduced in setuptools 8.0. In most cases, conversion
        to a tuple is unnecessary. For comparison of versions,
        sort the Version instances directly. If you have another
        use case requiring the tuple, please file a bug with the
        setuptools project describing that need.

commit c66825b2f744974c3ef9c3f815975be4b5f69177
Merge: 7159531c18 3fcd12c5a9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 6 10:58:33 2015 +0100

    Merge pull request #2848 from crate/backup_restore
    
    add snapshot functionality

commit 3fcd12c5a9854ccb43a4de9f938bdad9c439ee4c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 6 09:49:30 2015 +0100

    make snapshot, repository and restore tokens nonReserved

commit bbec2a973b2573f57a859e98c41588279c655a35
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 5 17:41:22 2015 +0100

    ignore errors during listing of snapshots of a repository
    
    ``select * from sys.snapshots`` should never throw an error.
    
    e.g.: if a repo was registered and the folder of the repo is
    then deleted it would throw an RepositoryException
    
        RepositoryException: [repo1] failed to list snapshots
        in repository
        Caused by: java.io.FileNotFoundException: /tmp/index (No
        such file or directory)

commit 5f0e378c95cbc0215d410222ed4879d7dcbc41e4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 5 15:55:44 2015 +0100

    testing: make sure path.repo temp directory is removed after test run

commit 8ce835efcd5ddbf04137b99ccda9a1bf58f899ae
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 5 17:06:57 2015 +0100

    improve snapshot docs

commit 75b7b5ce6e7da9ec752eb859d750ebd5dc8b5011
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 5 15:07:26 2015 +0100

    add changes entry about snapshot functionality

commit 315f5371d820b0b261753464e96cb49650126fb0
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Nov 3 11:45:08 2015 +0100

    - moved hdfs plugin into plugins/hdfs on distribution
    - updated hdfs requirements documentation

commit d8d240d117c023f9c43792c6db486b21c7d5c971
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Nov 3 16:56:17 2015 +0100

    fixed Snapshot integration test which was flaky
    due missing ordering

commit 0194f04315fa38c92950389e0b938cc8ef27e662
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 2 15:08:25 2015 +0100

    drop repository on verification failure

commit b5b7bceb5d0091d66a5008fa80d90b70c376f6f6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 2 14:17:34 2015 +0100

    move repository methods from abstract analzyer into repositoryService

commit 62795aed31d5eccb1b4843691a85cf3ceee6ddff
Author: Michael Beer <michael.beer@crate.io>
Date:   Mon Nov 2 13:57:32 2015 +0100

    visual update of hdfs paramters in documentation

commit 0bea546ab13e26d9a56e4c5d8e7df1dd04d3f9c3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 30 15:04:40 2015 +0100

    validate parameters passed to create repository statements

commit a51a5fe8e8f6b48639fa966bb66171f3d7b0e4c5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 30 13:43:17 2015 +0100

    remove settings setter from CreateRepositoryAnalyzedStatement

commit f46d2d42465e30e19e09664a098f8325434d7535
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 30 13:42:29 2015 +0100

    include more details in the message of create repository errors

commit d1e9e80f8d0212b34f26e6b657505be7858d023d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 30 11:55:31 2015 +0100

    docs: add note about url whitelisting and remove incorrect update repository behaviour
    
    create repository actually throws an error if a repository
    already exists (verified by
    ``testCreateExistingRepository``).

commit df25ff97683a6727dd841cc93d4fa2ea042b6337
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 29 16:58:10 2015 +0100

    avoid NPE if create snapshot with wait_for_completion = false is used

commit 8e19677cf897d1f4afd39c2e23b49bf861cae115
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 29 16:25:56 2015 +0100

    docs: remove target_schema and target_table from restore_snapshot ref

commit 56985b5697abd07833bdbe91fe9bafdddfe98336
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 29 16:02:32 2015 +0100

    updated snapshot/restore documentation

commit b4b9ef16ad82d67960022a2369e01356ec5e22ca
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 29 08:25:34 2015 +0100

    fix snapshot/restore related itests(doc)

commit 59c0403778ec57568377e851460151d4a148bec3
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 28 00:33:30 2015 +0100

    implement restore snapshot

commit daf89baaaa3c7c650c84c0e0429cb6165cb620f2
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Oct 28 16:43:44 2015 +0100

    fix sql toc

commit a241402ecba506841714de714e14a3098d7f3f2f
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Oct 28 16:29:33 2015 +0100

    remove ``partial`` from supported snapshot/restore parameters

commit 52ef21a8047176078e148694123000ffe7f71860
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Oct 27 13:10:06 2015 +0100

    implement 'CREATE SNAPSHOT'

commit ffb86bc8417aee3353fea3dd84fca50ab31b3b66
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 27 17:29:05 2015 +0100

    add documentation about HDFS requirements

commit c8c1c8c4f4503d47f3b857e31c1d95e8dcaf25c6
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 27 16:07:34 2015 +0100

    reformat snapshot/restore docu

commit a7ea2117e19591b00b0b79740c6097c4831ed62a
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 27 11:54:31 2015 +0100

    implement `DROP SNAPSHOT`

commit 53ad39c32dcc5728c1c4d99d1cb85472035f8e7e
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Oct 27 10:49:13 2015 +0100

    fix repository related code

commit 984bf1e1eb90a244de8478548a42c566725fabc1
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 23 15:33:47 2015 +0200

    route sys.snapshots requests to random node (master or data)

commit 20246d740acfeafcd7e9e35f3e1b0a73ffce08d6
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 23 14:26:12 2015 +0200

    implement sys.snapshots system table

commit 5fadd29f130e88fd88eda9dc78f59f3ddb57f73e
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 23 14:22:20 2015 +0200

    renamed system table Repositories impl

commit 1ebca8ede4f6911c375f32c142403292b711e08c
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Oct 22 15:11:16 2015 +0200

    Implemented CREATE REPOSITORY

commit 223bcc47e50a66a98425f48bca315855db0ac591
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 22 14:05:13 2015 +0200

    implementation for DROP REPOSITORY statement

commit 5ab5a86acc0af744835bb99fba0e109a2327e3e3
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 23 09:46:35 2015 +0200

    adapt InformationSchemaTest to new sys.repositories table

commit 3d1e47b2668a248bf70dcb9b01f8fb6216d8a2d6
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 22 20:26:37 2015 +0200

    fix snapshot_restore doctest (file-naming / sql-syntax)

commit 0f39a668e4dc523c9fa42313c8de0ca04cefe928
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 22 16:46:10 2015 +0200

    implement `sys.repositories` system table

commit c476804a09306a843f0e9616ee4143dbdf1b4b8d
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Oct 19 17:26:04 2015 +0200

    added parser support for RESTORE SNAPSHOT

commit b616c144d30f3566ce101862f0f728f281c36598
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Oct 19 16:56:36 2015 +0200

    added parser support for DROP SNAPSHOT

commit 29c853ae64b19d2fa120a39c74e8c155bdac73a1
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Oct 19 16:50:05 2015 +0200

    added parser support for create snapshot

commit 241a4bb042d66b39aba31b8daf82fb6fec4071d7
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 22 10:42:43 2015 +0200

    include crate-repository-hdfs plugin into distribution

commit c98784c2e1d44bbe15cb5470a400e5d72a22ae02
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 21 12:26:16 2015 +0200

    rename backup-restore section to snapshot-restore

commit 03a2651915c621784a28abb39298ae44f2d41f3b
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Oct 20 13:42:45 2015 +0200

    add backup and restore node settings to configuration docs

commit 7829a7edc91359db7f3ca1a51927c269b2d0e18c
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 19 16:00:18 2015 +0200

    add backup and restore usage docs

commit 70ac973754095f2a36ddc75bd4a03fda741c0da5
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 19 15:54:43 2015 +0200

    add docs for sys.snapshots and sys.repositories

commit 0527d88919fc606635f37effb10752ee8254ec81
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 19 15:54:11 2015 +0200

    clean create snapshot synopsis

commit 5e9d6c0de3c7eb141569219d9ab50f32cea26eb0
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 19 15:53:37 2015 +0200

    add hdfs repository type to synopsis

commit d3668ab29ef0bb78c8d4a80c11327770cad67b36
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 16 17:20:34 2015 +0200

    add alphabetical list of sys tables to docs

commit 041da5fdf9822daa9837c846e997ba14121e9d6c
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 16 11:49:32 2015 +0200

    add synopsis for snapshot operations

commit 3cba87b04833720d5285e12d800b243678e42884
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 16 09:48:55 2015 +0200

    add path.repo to config file

commit ef4e280e32024885fb9e5ad2d676c2ea7228f7b2
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 16 00:27:24 2015 +0200

    add CREATE REPOSITORY an DROP REPOSITORY synopsis

commit e6aceccf676d4550c1380236a8f756618ba8fb6d
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 16 00:26:27 2015 +0200

    typo in create table synopsis

commit 21094b95cd91847c4db8239e3f16edcf7531d0b6
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Oct 16 14:36:21 2015 +0200

    added CREATE and DROP REPOSITORY statements to
    parser

commit 7159531c18797d038bde3d2afd3699d065ce816e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 5 21:02:49 2015 +0100

    add docs and container badges

commit 6678b961dcd8938a967cd02e819833dcb7d7a2ea
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Nov 5 11:19:11 2015 +0100

    document behaviour of the routing.allocation.enable setting

commit 56d8cc1ac6485cd0e0628de653be60245226f203
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Nov 5 16:26:31 2015 +0100

    [docs] updating aggregation function table

commit 486646d7bede86010e74bb5c5d8425261d8ef51c
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Nov 5 14:50:43 2015 +0100

    fixed LuceneDocCollectorTest

commit c6d553ecd3244cfa33a27caced9639b8007ae922
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 5 14:41:46 2015 +0100

    add changes note about changed launch scripts

commit 79829b8aa716b7c579ff4ab69e9c4be35c345373
Merge: 1e1c80e449 cb2789360c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 5 14:39:40 2015 +0100

    Merge pull request #2834 from crate/s/jar-hell
    
    backport JarHell from ES

commit cb2789360cb2bc1859e4d4a8b2d4997671acd879
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 4 17:45:53 2015 +0100

    fix classpath in crate.in.sh / crate.bat

commit 3d5d34f6c6a6ec648f5cd8a91188f616c778b260
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 3 15:01:43 2015 +0100

    use separate classLoader to load crate plugins
    
    The PluginLoaderTest was broken. After the first test the
    ExamplePlugin was in the global classLoader (which is static
    - so used across tests).
    
    This caused the second test to also load the ExamplePlugin
    and fail.

commit 8a481480524881321a10c1ff3a090549eda7e7ce
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 30 17:09:23 2015 +0100

    backport JarHell from ES 2.0

commit 1e1c80e4496faddce389dde7208e0706b3b2b1b5
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Oct 27 13:48:00 2015 +0100

    Improved speed of ordered queries on tables with a lot of null
    values

commit 618cd406b105422da151790e9d3c4dd8fd17ad60
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 4 22:46:09 2015 +0100

    delete all sorts of things

commit 5ef7294f5942b23d74acb0e2dc62f65abc07585b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 4 20:16:09 2015 +0100

    remove unused PositionalRow/Bucket stuff
    
    became unused with 07c87340f97cbdd759fe377e82fce84bc37d6fad

commit 2b62715c594610bc1b63ec74bc78d6654471c437
Author: Michael Beer <michael.beer@crate.io>
Date:   Wed Nov 4 14:03:05 2015 +0100

    update changelog to 0.52.1 testing

commit 6f17346405bcb530eaa86934d75946803ddeab31
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 3 20:31:21 2015 +0100

    make sure there are no duplicate classes in the crate distribution

commit 9ed6182548097210ad28d7e6d4af79d25711447b
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Oct 27 14:22:29 2015 +0100

    multi relation splitting is done in one pass on the MultiSourceSelect instance
    
    use index based paths in query splitting
    added a isSQL Matcher to testing

commit 5d26dca4facef15ce282da2860f1a97f8ffd18ec
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 3 11:39:08 2015 +0100

    testing: fix dependency in DataTypesTest

commit 7d392ad227973c28f5949d1a010ceb4b23fbf060
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 2 18:07:08 2015 +0100

    gradle cleanup

commit 1704d39c63c5049e32589b137134ab0072442569
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 2 17:21:48 2015 +0100

    remove testing../tests.py
    
    was used to test blobs but got replaced with java
    integration tests quite some time ago (see
    1d66761eff967e7bf04853d3b0551009adbfca63)

commit 03e4671ac7d151edd91c3b0addc16a2a5507c4aa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Oct 31 19:28:04 2015 +0100

    fix a couple of null pointer dereference warnings

commit b92adc8f39dd1f6431ac5f2081865290b8c05e08
Author: kovrus <ruslan@crate.io>
Date:   Fri Oct 30 10:30:42 2015 +0100

    Update crate-admin to 0.15.3

commit 5360aeb17611ba963767a67fc1eb3909ae319064
Merge: e984ce2d74 e13387b347
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 28 20:33:28 2015 +0100

    Merge pull request #2816 from crate/j/filter-joins
    
    support distributed NL with filters

commit e13387b347d70a3000d79fa2ea3003e4dd207b14
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 28 18:00:35 2015 +0100

    update changes entry for join conditions

commit 3bb3fd6963d2f677664ee30bbf9edbb1c989c5dc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 28 17:50:57 2015 +0100

    testing: add test to verify that join condition isn't rewritten to source lookup

commit fc2c494756b6e479ac2fe3ee272ea468abb00527
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 28 15:47:33 2015 +0100

    fix function support/relation splitting for joins

commit 95a0a9eeec8ebae5c7d7c71f6ea22a4703fb902a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 21 15:42:38 2015 +0200

    use table stats to decide which side of NL to broadcast
    
    The smaller table should be broadcasted. This can
    significantly speed up query execution if the size
    difference of the tables is very big.
    
    In a simple test it reduced the time for a query from 125
    sec to 0.8 sec

commit e4c5a3bfae1934861ebd9d2e100d3beba36f814f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 19 16:18:59 2015 +0200

    don't push down limit to sub-relation if there is a join filter

commit 7d281aa9ffb79f3bdf895e3b4ef775dc8b3a0856
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 15 10:15:31 2015 +0200

    support distributed NL if filter is needed

commit f426d52c7fa7eaec66f72aeb081d9666789f9124
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 13 11:31:33 2015 +0200

    support join on general where clause condition (non-distributed)

commit e984ce2d74362c9e9496435d71c2cc32a90e9239
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 28 17:40:35 2015 +0100

    move source lookup conversion to InsertFromSubQueryConsumer

commit 323175448f787a019073ffa8771dc2b405282219
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 28 16:59:35 2015 +0100

    fix select * handling with multiple relations in the FROM clause
    
    prefixes weren't considered at all :(

commit f3633c564bbd7365ebd2a14921dee93422e423e1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 28 14:07:10 2015 +0100

    SystemCollectSource: don't include orderBy symbols in rows
    
    This error is hidden by the fact that there is always a
    TopNProjection which strips away the additional columns but
    it's not correct and will be a problem for filtered joins

commit dfcfd739a323d572cc4a856231e455f7e1be14ec
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 28 11:26:41 2015 +0100

    change ProjectionBuilder methods to static
    
    in order to make it clear that they don't actually
    use/depend on the QuerySpec that is passed into the
    ProjectionBuilder constructor.

commit e556027c654dc6e773cc71fe43e22547d25a2d5c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 27 17:15:12 2015 +0100

    support filters in sys table join statements

commit d9e5b58ff9db36f041372a4ac48889b555960ee4
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 27 17:38:15 2015 +0100

    move sql reference and rest documentation at end of (sub-) TOC

commit a0efc1c46aeb10eff24a6d88f34e19afb4e05287
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 27 16:00:41 2015 +0100

    remove outputs == orderBy limitation from joins on sys tables
    
    Doesn't apply to sys tables because there is no fetch phase
    for sys tables anyway.

commit f57c6a8be3798e848453b7489a73c28b7d639068
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 27 14:31:37 2015 +0100

    support orderBy on collectPhase
    
    Previously the `collectPhase.orderBy()` property wasn't
    supported in the execution-phase of sys tables. Therefore
    the Planner had to add a TopNProjection instead.
    
    This commit adds support for the `orderBy` property so that
    the planner no longer has to differentiate between sys and
    doc tables.

commit 04f2e93562aacc5c8f63d0ac72ba66ab94cfb13a
Author: Michael Beer <michael.beer@crate.io>
Date:   Tue Oct 27 10:52:14 2015 +0100

    changed benchmark dir to be able to use clean

commit f6471c1542eb60c58807d0a0db817fea0c9c0919
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 27 12:53:58 2015 +0100

    use a single collector to collect sys.shards

commit 00b9bd0a8cfae0173e8e7b66c799a249b6229bc5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 27 11:49:38 2015 +0100

    remove condition support from RowsCollector

commit 328c6d28c2891a8fecb97f4a5ed27bcf4e33e166
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Oct 27 09:36:04 2015 +0100

    make queryspec nullables optionals

commit 1acef1c3920288aef97c7919a78f91fa72e71948
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Oct 23 14:31:05 2015 +0200

    require OrderBy to have order symbols

commit 8d5cea0c2e6fe0a4bfa3a26b61084194c331d750
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 27 09:14:13 2015 +0100

    AbstractImplementationSymbolVisitor: change extractImplementations overloads
    
    The varargs overload was only ever called with one argument
    resulting in an unnecessary array allocation.
    
    Removed the collectPhase overload because it doesn't really
    reduce any boilerplate but just made it unclear which
    symbols of the phase are being extracted.

commit d8b4aaec293b237c7c93e72946cf28811a283d1b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 27 08:42:52 2015 +0100

    update gradle to 2.8

commit bdd698e3ef0f9383d315b96463124ae838d351fd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 26 19:20:24 2015 +0100

    remove unused code

commit 1825ce96e8ce8633e2a6daeb3f3c077b2b11054d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 23 20:20:14 2015 +0200

    remove TransportCloseContextNodeAction
    
    the FetchProjector has been changed to simply send an empty
    request to the TransportFetchNodeAction in order to close a
    context so the dedicated TransportCloseContextNodeAction is
    no longer required.

commit 456ba240601741739e45fe054d5f381da39befcb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 23 14:40:40 2015 +0200

    remove SymbolToInputVisitor
    
    it just implemented visitReference to throw an error but the
    BaseImplementationVisitor already throws an error for any
    unhandled symbol implementations so that is unnecessary.

commit f4c37fd3b6f6c108602ef67edf019f10925f6e1e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 23 13:59:11 2015 +0200

    remove ReferenceResolver and RowGranularity property from ImplementationSymbolVisitor
    
    the ImplementationSymbolVisitor doesn't use the
    ReferenceResolver and RowGranularity property itself but
    just exposed it for others. That is kinda senseless and just
    made things more complicated.

commit 8ff583c0266f5239da4d76c6e925ee6cac494319
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 23 12:22:15 2015 +0200

    make RowsCollector non-generic

commit 06079741ddae2d85227d9d0455229ba3022d3f9d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 23 12:02:25 2015 +0200

    change RowFilter to a static non generic InputCondition
    
    it will now simply evaluate the Input<Boolean> condition and
    is no longer aware of the expressions that might be linked
    to the Input. Whoever uses the InputCondition is now
    responsible to call setNextRow on the expressions.

commit a352e552e0c1008eb107b8eee3b6ca7ee1c1b263
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 23 10:51:03 2015 +0200

    merge UnassignedShardsCollectSource into SystemCollectSource

commit 29f28531f17455167c09b6d2c3d90206d5f971a6
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 22 20:11:38 2015 +0200

    clean up DDLStatementDispatcher
    
    and move ALTER TABLE related code to separate class as it contains the most logic

commit 380630f5579579754481cb7d2e1056cd9079462e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 22 17:50:32 2015 +0200

    merge InformationSchemaCollectSource into SystemCollectSource
    
    the getCollectors implementation of the current
    CollectSource are pretty much the same.
    
    Eventually most of them can be merged. This is just a first
    step.

commit 772ab96a5122cb2c8f723ae294652db783433347
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 22 16:26:16 2015 +0200

    remove unused FieldReplacingCtx

commit c420cd664cba1f4175e996f0c10eafda79027612
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 22 16:01:13 2015 +0200

    fix remainingOrderBy generation in MultiSourceSelect

commit caadba10ac3bbdff3ae04d59500cd63f2f21a084
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Oct 21 09:58:12 2015 +0200

    do multi source query spec pushdowns in analyze phase

commit e5dbecbf689626a1be9f3d5b8c87a3fcea12ddd4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 22 09:40:45 2015 +0200

    remove unnecessary null check in CrateClient

commit 71d78708ba3085f79ccebf417b26675738a5f681
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Oct 22 12:13:24 2015 +0200

    close RandomAccessFile channel when exception occurs

commit a97019e0ad15aee2aa5f92ff19e65f555e3c8ff5
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Oct 21 16:31:48 2015 +0200

    Created GenericDDLPLan and use it for CREATE TABLE

commit 48358497025dd2b4a2d59e2965e43cefc4906917
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 21 23:14:31 2015 +0200

    fix orphaned partition detection
    
    orphaned partitions with a remaining alias were not properly detected
    in CREATE TABLE statements (which would delete and override the alias and drop remaining orphan-indices

commit ed73f8af5fd9b233a205307d8630eade5be9b270
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 21 22:56:14 2015 +0200

    remove un-used doc generation dependencies

commit 3ee3f69a3565e1129393161b10806af67418883d
Author: Michael Beer <michael.beer@crate.io>
Date:   Wed Oct 21 21:30:21 2015 +0200

    fix: like queries fail if using a special regex

commit 9f91ad262cb5a573f47e25143202906f1677614d
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 21 16:53:39 2015 +0200

    only trigger keep alive on JobExecutionContext
    
    if no subcontext is itself triggering keep alive locally.
    like this we fix the case where two nodes keep each other alive though one is hung.
    ACTIVE subcontexts have the responsibility to keep their JobExecutionContext alive,
    as fallback the external keep alive via TransportKeepAliveAction is used.

commit dd62c255bc5e35ec98c6ae21007d28f62e397b9b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 21 16:32:30 2015 +0200

    minor CrossJoinConsumer clean ups
    
    One mergePhase function overload is unnecessary as it just
    called the other mergePhase function.
    
    The mergePhase executionNodes.isEmpty check can be removed
    because there must always be at least one executionNode
    (subRelations never add a "local" mergePhase if they aren't
    the rootRelation)

commit b48c137d3711bbf34a96526734993e2223cfe40f
Author: kovrus <ruslan@crate.io>
Date:   Wed Oct 21 16:12:32 2015 +0200

    Updated crash to 0.14.2

commit 00b9e8abd65138d14bd11d6cf0ccff74fd09b05b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 21 15:54:40 2015 +0200

    inject the CrossJoinConsumer into the ConsumingPlanner

commit 09f70a0f50e31dc785b3999067f17acc24427b7c
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Oct 21 14:31:10 2015 +0200

    introduced new base class for planner visitors

commit 4b0aeaea2a39041d5e68c4aed7b681f12be3f776
Author: kovrus <ruslan@crate.io>
Date:   Wed Oct 21 13:44:28 2015 +0200

    Upgraded Elasticsearch to 1.7.3

commit c9ddcc8bf61fc5a5805af45a5c33192f103b65db
Author: kovrus <ruslan@crate.io>
Date:   Wed Oct 21 09:25:40 2015 +0200

    Remove interval from the parser

commit 1f340df252a7993956e142873aa7c91aa9a0eab6
Author: kovrus <ruslan@crate.io>
Date:   Tue Oct 20 14:02:40 2015 +0200

    Address resourse release issues and locale dependent comparison

commit c32192f57535b88c8a1d8217eef3e100edd451d3
Author: kovrus <ruslan@crate.io>
Date:   Tue Oct 20 17:03:29 2015 +0200

    Remove InternalLiteral

commit e71a792c5ae1f3b59f19812bc0bf8e371b989dcb
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Oct 20 23:02:48 2015 +0200

    moved QuerySplitter to analyze package

commit 9f5b493cc6ab1310571f904aa17a6b81158de1a8
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Oct 20 16:38:36 2015 +0200

    moved FetchReference to other Symbols

commit 4a1d2393670fd30ec96668615800f5d124287e15
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Oct 20 16:27:52 2015 +0200

    moved symbol package from planner to analyze package

commit 04574fc94f6745340760b3836c0d638b4d33d84b
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Oct 20 15:37:45 2015 +0200

    move RowGranularity to metadata package

commit 07a2032532b2d808372bb33b7540ce6ceb676d7b
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Oct 20 14:41:55 2015 +0200

    optimzied imports on whole project

commit 1ced596e9d530ce8bc9db5369ff1408c09a7b418
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Oct 20 15:13:02 2015 +0200

    ensure import codestyle

commit ab2e85c22cfcfb17c442162d9c21ceab9166b8ff
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 20 13:48:03 2015 +0200

    improve custom analyzer docs

commit 4104ef88a3d24abc6282fa1b9248ea7d2e6b60aa
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Oct 20 11:59:39 2015 +0200

    remove path.plugins section from configuration docs

commit f8933ba181db4e02e9607247fe1ce5a41d72ac04
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Oct 20 11:05:19 2015 +0200

    add missing node settings to configuration docs

commit 6ee5f07e97c7336fe64bdc770a021b3e8fa09f21
Author: kovrus <ruslan@crate.io>
Date:   Tue Oct 20 11:39:27 2015 +0200

    Randomlyy select first node when clients connect

commit 1bc487ecdbb22512fa2fda0f8155b4c78ae09010
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 20 11:10:33 2015 +0200

    make sure DistributingDownstream doesn't get stuck
    
    If one downstream doesn't need more data but another one
    does `pendingRequests` is still increased by 2 but never got
    decreased for the downstream that is already finished.
    This would then cause a deadlock.

commit eabf84e477470a6d43660a611bb94a6c8d7b0083
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 20 10:42:02 2015 +0200

    catch all plugin loading exception
    
    also log detailed errors on known loading errors

commit 00e32f948c371d8aaf53e9d409919a99db3cabfb
Author: Michael Beer <michael.beer@crate.io>
Date:   Tue Oct 20 10:28:45 2015 +0200

    updated crate-admin to 0.15.2 and crash to 0.14.1

commit cb6fb4c27facede7b9e3b3c782e2aea846557159
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 20 10:22:04 2015 +0200

    re-use TopRowUpstream in IteratorPageDownstream
    
    The TopRowUpstream handles some race conditions that the
    IteratorPageDownstream didn't handle.

commit 5f2d62c0d9ef3169d721c072621b65889ff85845
Author: Glauber Machado Rodrigues <glaubermrodrigues@gmail.com>
Date:   Fri Sep 18 18:46:47 2015 -0300

    Added three array functions: array_cat, array_difference and array_unique; modified concat function so it will resolve to array_cat when concat function is called with 2 array args (so the operator || will work with arrays).
    
    The ``array_cat`` function concatenates two arrays into one array.
    
    The ``array_unique`` function merges two arrays into one array with unique elements.
    
    The ``array_difference`` function removes elements from the first array that are contained in the second array.
    
    Documentation provided in docs/sql/scalar.txt
    
    Array Functions
    ===============
    
    array_cat(first_array, second_array) returns array
    -------------------------------------------------------------------------
    
    The ``array_cat`` function concatenates two arrays into one array
    
    ::
    
        cr> select array_cat([1,2,3],[3,4,5,6]) from sys.cluster;
        +-------------------------------+
        | array_cat([1,2,3], [3,4,5,6]) |
        +-------------------------------+
        | [1, 2, 3, 3, 4, 5, 6]         |
        +-------------------------------+
        SELECT 1 row in set (... sec)
    
    It can be used to append elements to array fields
    
    ::
    
        cr> create table array_cat_example (list array(integer));
        CREATE OK (... sec)
    
    ::
    
        cr> insert into array_cat_example (list) values ([1,2,3]);
        INSERT OK, 1 row affected (... sec)
    
    .. Hidden: refresh array_cat_example
    
        cr> refresh table array_cat_example
        REFRESH OK (... sec)
    
    ::
    
        cr> update array_cat_example set list = array_cat(list, [4, 5, 6]);
        UPDATE OK, 1 row affected (... sec)
    
    .. Hidden: refresh array_cat_example
    
        cr> refresh table array_cat_example
        REFRESH OK (... sec)
    
    ::
    
        cr> select * from array_cat_example;
        +--------------------+
        | list               |
        +--------------------+
        | [1, 2, 3, 4, 5, 6] |
        +--------------------+
        SELECT 1 row in set (... sec)
    
    .. note:: Appending to arrays with array_cat in updates is handy, but unfortunately not isolated. We use optimistic concurrency control to ensure that your update operation used the latest state of the row. But only 3 retry attempts are made by fetching the newest version again and if they all fail, the query fails.
    
    You can also use the concat operator ``||`` with arrays
    
    ::
    
        cr> select [1,2,3] || [4,5,6] || [7,8,9] from sys.cluster;
        +-------------------------------------------+
        | concat(concat([1,2,3], [4,5,6]), [7,8,9]) |
        +-------------------------------------------+
        | [1, 2, 3, 4, 5, 6, 7, 8, 9]               |
        +-------------------------------------------+
        SELECT 1 row in set (... sec)
    
    array_unique(first_array, [ second_array]) returns array
    -------------------------------------------------------------------
    
    The ``array_unique`` function merges two arrays into one array with unique elements
    
    ::
    
        cr> select array_unique([1,2,3],[3,4,5,6]) from sys.cluster;
        +----------------------------------+
        | array_unique([1,2,3], [3,4,5,6]) |
        +----------------------------------+
        | [1, 2, 3, 4, 5, 6]               |
        +----------------------------------+
        SELECT 1 row in set (... sec)
    
    It can be used with one argument
    
    ::
    
        cr> select array_unique([1,2,3,3,4,5,6,7,5,6,9,10]) from sys.cluster;
        +------------------------------------------+
        | array_unique([1,2,3,3,4,5,6,7,5,6,9,10]) |
        +------------------------------------------+
        | [1, 2, 3, 4, 5, 6, 7, 9, 10]             |
        +------------------------------------------+
        SELECT 1 row in set (... sec)
    
    array_difference(first_array, second_array) returns array
    -------------------------------------------------------------------
    
    The ``array_difference`` function removes elements from the first array that are contained in the second array.
    
    ::
    
        cr> select array_difference([1,2,3,4,5,6,7,8,9,10],[2,3,6,9,15]) from sys.cluster;
        +--------------------------------------------------------+
        | array_difference([1,2,3,4,5,6,7,8,9,10], [2,3,6,9,15]) |
        +--------------------------------------------------------+
        | [1, 4, 5, 7, 8, 10]                                    |
        +--------------------------------------------------------+
        SELECT 1 row in set (... sec)
    
    It can be used to remove elements from array fields.
    
    ::
    
        cr> create table array_difference_example (list array(integer));
        CREATE OK (... sec)
    
    ::
    
        cr> insert into array_difference_example (list) values ([1,2,3,4,5,6,7,8,9,10]);
        INSERT OK, 1 row affected (... sec)
    
    .. Hidden: refresh array_difference_example
    
        cr> refresh table array_difference_example
        REFRESH OK (... sec)
    
    ::
    
        cr> update array_difference_example set list = array_difference(list, [6]);
        UPDATE OK, 1 row affected (... sec)
    
    .. Hidden: refresh array_difference_example
    
        cr> refresh table array_difference_example
        REFRESH OK (... sec)
    
    ::
    
        cr> select * from array_difference_example;
        +------------------------------+
        | list                         |
        +------------------------------+
        | [1, 2, 3, 4, 5, 7, 8, 9, 10] |
        +------------------------------+
        SELECT 1 row in set (... sec)

commit 05f66587bb8a88bebd40b8ba4e14133c30488c8c
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 19 15:52:34 2015 +0200

    minor docs cleanup

commit c4c6b738771b2ed4171db7ff55edb3579d5fd62f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Oct 18 19:48:29 2015 +0200

    make tests runnable with python3 in addition to python2.7

commit 705edc4e69539288024edec0d3f0abb8f8a5de49
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 16 16:58:17 2015 +0200

    fix keep alive timer starting when sending node could not be determined
    
    in this case the request was executed locally, so we do not neet to start the timer

commit 00ba64dd3695b8cd7b9beae4b3870d1e3c4f458c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 16 14:33:44 2015 +0200

    make sure FetchContext is closed if FetchProjector receives fail
    
    In some cases the FetchContext wouldn't be closed correctly
    (until the Reaper closed it).
    
    For example in the following scenario with 3 nodes:
    
        T       N1                      N2                  H
    
        1                                               send job requests
        2   created context
        3                             create context
        4                             failure
        5                                               fetchProjector.fail
        6  context isn't closed
    
    testSelectWhileShardsAreRelocating was flaky because of this

commit 3160122401770602e2f3fa3a88b17f838189ea5a
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 16 14:06:52 2015 +0200

    resultPhase() will return UpstreamPhase now
    
    also rename resultNode() to resultPhase()

commit f732c115480cc54baf84ddfb2baeae579171450d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 16 10:02:07 2015 +0200

    include the error message in the statsTables if JobExecutionContext is closed with a failure
    
    This also removes the keepAlive call (it is unnecessary. All
    other contexts are being killed as well anyway).

commit 3d9bd5cd99e64d72b3d16270466a993ef1d2b3ee
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Oct 13 23:41:16 2015 +0200

    let upstream phases send keepalives to their downstreams
    
    so their downstream contexts won't be killed by the reaper when the upstream phase takes very long to produce a result

commit 20d726fce056f9cf777d1837b0ab628dfeb02a33
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Oct 15 16:36:28 2015 +0200

    Fixed an issue in KillIntegration test, which was
    caused due shutdown of the nodes while operations
    where still running

commit 40c25ab30afe75fa9ba34a93ff16fd4f3dfc7b04
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 15 13:48:19 2015 +0200

    support cancel in SubExecutionContextFuture
    
    If there are multiple SubExecutionContextFutures within a
    CombinedFuture (that is the case if Futures.allAsList is
    used) a `close(CancellationException)` call causes `cancel`
    to be called on all other futures.

commit 38beb0d87bcdce962dcdf3053e2cc87478732ae7
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 15 14:10:49 2015 +0200

    sort synopsis doc in alphabetical order
    
    in order to ease orientation when more commands are listed

commit 2ac81c31e95611162d39ef1e70b856c27f91ab40
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 15 12:14:59 2015 +0200

    let final rowreceiver be prepared in projectorchains
    
    and prepare projectorchains in innerPrepare of execution-context lifecycle

commit a16e568a5023d43e18cf4bd04e504e33ec206421
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Oct 15 12:07:09 2015 +0200

    do not finish the projector chain in the prepare phase, this fixes a race conditions where projections are finished without being started

commit 22bf76183f057b7d90a2b34e0c73af486fa5144d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 15 11:08:40 2015 +0200

    make buildout for docs generation compatible with python3
    
    (not all tests pass yet, as there are a few output
    comparison issues)

commit 10358c85da2232c1873f02f5af9e5663b65eea12
Merge: 74421d7430 14fd06bd84
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 13 23:36:54 2015 +0200

    Merge pull request #2725 from crate/j/nl
    
    initial cross-join support

commit 14fd06bd840b3a2d3be3241357780a8a0e7d1314
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 13 23:26:40 2015 +0200

    add changes entry for initial cross-join support

commit eeaf62723663f5c5a43ff0c3137517f4becafa9d
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Jul 17 16:43:10 2015 +0200

    added cross-join benchmarks

commit a2f51f88c50323478cab8f797953c5cb5a75cf1f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 16 11:30:53 2015 +0200

    add CrossJoinConsumer

commit 80ceb3a5b27447a78704506bb0894c5656c041cc
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Oct 13 13:27:51 2015 +0200

    extract FetchRequiredVisitor from FetchPushDown

commit 4593c58d0d6fe6c6a3b0f3792fe02cdaaf64cfe4
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Jul 6 15:49:27 2015 +0200

    added NestedLoop execution Context

commit 0d819594af5cc6a33bb9d02496a65db534b973f3
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Jul 6 14:22:15 2015 +0200

    added NestedLoopPhase and NestedLoop plan

commit 3a8e6d8d7d4210c66286261a4e748c01b61d8842
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 2 09:15:09 2015 +0200

    fix performance of NestedLoop stress test

commit 8d2705080b467cf0402256afb6e194228463ab92
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 1 13:36:47 2015 +0200

    add nested loop stresstest

commit 53ddfffc031d3ed24d6fec5b43d0a3ba26772e26
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 2 17:10:11 2015 +0200

    implement repeat in MultiShardScoreDocCollector correctly

commit 9c9fb28c3d41f6a133553d6f6ccccb1013e00b52
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 28 14:19:00 2015 +0200

    implement repeat in CrateDocCollector
    
    In unordered queries or if there is only 1 shard it is
    possible to repeat directly in the Collector instead of
    caching the rows in the RowMerger.

commit 3aabe88baa06f2c9b147647adddde820d2e601a2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 25 16:01:07 2015 +0200

    fix pause race condition in unordered non-repeatable RowMerger
    
    it could happen that the RowMerger would emit a row even
    though it was already paused.

commit 781cda092967adeed41296e9e6fd5c940b9b8fcb
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Oct 2 09:33:40 2015 +0200

    fix order by and where clause splitting

commit 0a00380e2cc6aa9b6c863c75f035ce0588332ba7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 10 09:01:26 2015 +0200

    add QuerySplitter and RelationSplitter

commit 9a6369abd690ec321c5fc36e5676187ab789087f
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Oct 9 15:15:42 2015 +0200

    fixed issues where cross_join could hang

commit 7140ac710dd53df2fcd92f874dcd3c245b8893c7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 9 11:38:23 2015 +0200

    tweak logging in NestedLoopOperation
    
    Removed the trace log on each right row because that happens
    really often and doesn't really provide any insight.
    
    Added some more "state change" log entries instead. As those
    are way more interesting.

commit ec018a22af47fe0428729016384b624651a1834f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 29 09:32:29 2015 +0200

    support pause / resume in NestedLoopOperation

commit f9e1eea64c93c9f60cdac882e190e21cf92e5f62
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 23 17:14:42 2015 +0200

    fix possible deadlock in NestedLoopOperation
    
    the state was changed before upstream.pause() was called
    which could cause the other side to call resume BEFORE the
    upstream.pause() call was made which would cause the resume
    to become a noop and the NL operation to become deadlocked.

commit 7d5aa9357bf986467f57d308d7cac5e1129f6bef
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 21 20:30:34 2015 +0200

    change nested loop implementation to non-blocking concurrency

commit d549baa874a579851c12c579e84646b748547a42
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 16 16:33:11 2015 +0200

    change requiresRepeatSupport to requirements on RowReceiver

commit c6b90238bd386759bab7e51ae07d44a8b3ef260b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 10 18:33:09 2015 +0200

    add requiresRepeatSupport indicator to RowReceiver

commit 96310c8f916304d17da2a06e81254e988347d6de
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jun 10 00:39:51 2015 +0200

    implement nested-loop operation

commit b1431b87d65b98174c84fd1ff876cd65963e6d3d
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Sep 8 14:42:04 2015 +0200

    support (cached) repeat in IteratorPageDownstream / PagingIterators

commit 4fb181543d2b9948a832b770500be08b854fce0d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 10 14:36:35 2015 +0200

    add repeat() to RowUpstream

commit 74421d7430160039fa375a2d3733bf352608c105
Author: Claus Matzinger <claus@crate.io>
Date:   Tue Oct 13 16:01:55 2015 +0200

    es/upstream to include the new logging

commit b37ec311ef4d4db581d6325031736d610e6b52f7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 13 14:27:17 2015 +0200

    Use push based paging in QAF cases if there is a high limit or offset

commit 1e28b2ec94f3052431d7e8f493c76791c055919c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 13 11:31:41 2015 +0200

    use lower shardQueueSize for OrderedDocCollector's
    
    This should increase the performance of most ordered queries
    as the number of rows which have to be sorted per shard is
    smaller.
    
    Simple benchmark:
    
        SELECT "pageURL" FROM rankings_cj ORDER BY "pageURL" LIMIT 1 OFFSET 10000
            previous: 0.314 now: 0.239
    
        SELECT "sourceIP" FROM uservisits_cj ORDER BY "sourceIP" LIMIT 1 OFFSET 50000
            previous: 1.013 now: 0.663

commit 935e09f57b62291ddaa8fff9d0b93bdf58ff804a
Author: Claus Matzinger <claus@crate.io>
Date:   Tue Oct 13 11:47:01 2015 +0200

    changed the help text for the "cluster.graceful_stop.min_availability: " setting from 'all' to the correct 'full'

commit bf0525ee8fda326a346cc0aacfc981350b1239cc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 13 13:16:51 2015 +0200

    change executionNodes from Set to Collection

commit cf92d2de7c420532420a39a33be97ba00098d5f9
Author: Michael Beer <michael.beer@crate.io>
Date:   Tue Oct 13 11:13:58 2015 +0200

    crate release 0.52.0 testing

commit babde828cff1b1a0f3202d81ca22f252b8d618e4
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 12 22:00:43 2015 +0200

    ease testsetup for JobContextService

commit 1d2b75f34fc0623fcdb4614930854ede7ad8110a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 13 09:40:50 2015 +0200

    rename limit on CollectPhase to nodePageSize
    
    To make it more clear that it is just a hint which can be
    used to get the pageSize right. It is NOT a hard limit.

commit 26329ee54793401fd6d18129ea7cfdfff3b303f6
Author: Claus Matzinger <claus@crate.io>
Date:   Mon Oct 12 16:27:48 2015 +0200

    IPv6 address compatibility

commit b966c9d856cf63a809ee5ce882c8feee0c683a6e
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 12 15:49:12 2015 +0200

    avoid NPEs when selecting hidden columns
    
    and restrict access to hidden columns like _docid

commit ea7b6273c5613293a2445c71a9c350e3151138e1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 12 14:49:19 2015 +0200

    remove limit handling from CrateDocCollector
    
    Instead a topN projection is added to handle the limit.
    
    In a follow up commit the limit on the collectPhase will be
    changed to a nodePageSize which is no longer a hard limit
    but instead a hint that may be used by the collectors and
    the DistributingDownstream.

commit d3b6ed29e1abed7021f18310fb66e49d69799888
Author: Michael Beer <michael.beer@crate.io>
Date:   Mon Oct 12 12:05:27 2015 +0200

    fixed wrong reference of a graceful stop setting

commit 013a750e948927b491ee1550a9de71fc15b06001
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 9 16:48:48 2015 +0200

    remove unused ContextCallback

commit 54a8da3876dbea296efd00c700cb0262e4e3a67b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 9 16:37:21 2015 +0200

    add trace logging that measures time spent in collectors
    
    log entries look like:
    
        Collectors finished: StopWatch '2: collect': running time  = 247.6ms

commit 98f70480d81229e1b0d1c05817a4f45ba56999d4
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Oct 9 13:30:09 2015 +0200

    updated changelog to reflect release 0.51.6

commit c95f30ce06745f57a49ac24ef681e4be9e6a9121
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 9 11:52:02 2015 +0200

    IteratorPageDownstream: avoid emitting another row in finish
    
    calling finish() on the IteratorPageDownstream would always
    send the rowReceiver at most one more row if the iterator
    wasn't exhausted. (which is the case if the downstream
    returned false on a setNextRow call).

commit 9da6d6b6959d6e10a88093dce87b9cdd4efab08e
Author: kovrus <ruslan@crate.io>
Date:   Fri Oct 9 10:07:03 2015 +0200

    fix runtime check for nested settings

commit 15952b24bd46f596839544d070fb6de7ae374610
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 8 20:06:01 2015 +0200

    remove unnecessary ScoreReferenceDetector instance
    
    Detect is a static method, there is no need for an instance.

commit ad2f1dc28d452f5c470a04b000fa6c3cd4a57800
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 8 20:05:21 2015 +0200

    change setNextRow return type to void instead of boolean
    
    Always returns true anyway and the return value is never
    looked at.

commit b6fa2ce79a14c7b908a1f9bb9cb76d5404f08db5
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Oct 8 21:49:18 2015 +0200

    serialization of tableident now leverages the fact that schema is not nullable anymore

commit 07c87340f97cbdd759fe377e82fce84bc37d6fad
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Sep 30 09:03:48 2015 +0200

    implemented multi relation fetch projection
    
    fetches are now reader based and the information what to fetch is now
    held by the fetch context
    
    also removed fetch tests from executor integration tests since
    those are hard to maintain, and the functionality is tested
    in the integration tests

commit 8749938b45a5b69831ccfd1b9fdc4ddd6ca71a8f
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Oct 8 16:08:33 2015 +0200

    use transportbulkcreateindicesaction on master node in tests

commit d3c6d8dd68404ae6620eed0daf32bdc1c4066e35
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Oct 8 14:23:10 2015 +0200

    fixed a race condition in bulk index creation
    
    that could cause the re-creation of an already existing table partition.
    
    in this case the data that was already inserted into the previously
    created shards of the affected partition is lost.
    
    this may happen when creating a lot of partitions simultaniously,
    e.g. using multiple parallel COPY FROM statements or or bulk inserts.

commit f0818740fcd3ecbf438a70c06d4916437b6a0b61
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Oct 6 23:17:14 2015 +0200

    ensure that bulkshardprocessors use the same retry-coordinator
    
    for a single request no matter if the shard it goes to has been relocated to another node

commit d037a9b553be4c466a498549ed0d36045a7fdc9a
Author: kovrus <ruslan@crate.io>
Date:   Thu Oct 8 09:07:21 2015 +0200

    Throw an exception if nonruntime setting is attempt to be changed

commit 392408ca54c3c116808bc6b560a00d74778586ab
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Oct 7 22:24:51 2015 +0200

    fixed SHOW CREATE TABLE doc test

commit 99851adbffcfdf3b2c085859dab9ca05d696f10b
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Oct 7 21:06:14 2015 +0200

    updated changelog to reflext release 0.51.5

commit 6d0887610bf4e1323bdc87fd9c9ef3fe92db4dab
Author: Michael Beer <michael.beer@crate.io>
Date:   Wed Oct 7 16:32:49 2015 +0200

    fixed SHOW CREATE TABLE statement if nested objects exists
    
    Fixed a bug in SHOW CREATE TABLE statement that leads to a wrong table
    schema if the table contains nested objects

commit 27e08a14c47ac0a03d2e85d8516ba46ca4d5ccbd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 7 13:57:39 2015 +0200

    remove Transport*ActionDelegate interfaces
    
    These Delegates extended from BulkRequestExecutor without
    actually adding any methods but just redefined the same
    execute signature.

commit d07e16b9ab0041f786b90d38dbc7d55834bc0cb3
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Oct 7 10:49:13 2015 +0200

    make TableIdent.schema and PartitionName.schema not nullable
    
    this fixes the equality check on TableIdent

commit a307f32d134a262434ba3625d3a3411a1d7eafd3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 7 10:54:03 2015 +0200

    BulkRetryCoordinator: remove InterruptedException from releaseWriteLock
    
    release() on a Semaphore can't cause an
    InterruptedException.

commit 261e76b503b5fb76ca1c6ba561febcc051ec1603
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 6 14:38:41 2015 +0200

    update ec2-discovery submodule

commit 3d6bae975fe53f6172001737231f5fa384835049
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 6 13:00:55 2015 +0200

    make all tests runnable with disabled assertions

commit 48ff77bb14c430704394a834cf2466b68569c1f6
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 6 11:45:23 2015 +0200

    support gradle project property -PdisableAssertions to explicitly disable all assertions on test runs

commit 975344119bc1c865d7baa58d9aae8597bde6fa29
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 5 16:29:46 2015 +0200

    performance: limit was chosen too big for sorted select queries
    
    it was (limit + (2*offset))

commit f1140e48742adf4cb4f2200b3e7a44e3c36d10a2
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Oct 5 15:45:12 2015 +0200

    use new DistributionInfo instead of DistributionType
    
    modulo distribution column index can now be defined by planner

commit 1f102b3e5152a839a92d394304c6e9b47f7fbe7a
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 5 11:21:18 2015 +0200

    remove long-running and unneccessary testNoHangOnSortedOffset
    
    from TransportSQLActionTest

commit da51545fb2f1f8f0d6ce035744c5b7b2a67f5356
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Oct 5 11:04:03 2015 +0200

    fix a flaky JobContextService test

commit cea2b6d1a7341e896c62d1be648c7abc608a40aa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 2 20:21:23 2015 +0200

    testing: use sql request to generate data in LuceneDocCollectorTest

commit e9d3de612ecf54d625757d41fe06d02f460675c7
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 5 09:54:14 2015 +0200

    remove unused handlerSideCollect property from CollectPhase

commit 36f80295434bd50d8eb8f6666bc59a270a6530b8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Oct 3 21:58:41 2015 +0200

    update gradle wrapper to 2.7

commit 7945a7b55133e82dda28af3babac693098decc7f
Author: Michael Beer <michael.beer@crate.io>
Date:   Sat Oct 3 13:51:20 2015 +0200

    revert address ressource release issue
    
    commit #302f6b420d346201e45fce27c97257603fc9242e

commit 8bd05858e5c96f42ef93fc0876db4f43012c70ee
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 29 16:44:04 2015 +0200

    merge on scoreDocs instead of rows
    
    In order to avoid context switching and reduce complexity
    (The BlockingSortingQueuedRowDownstream that was used before
    was pretty crazy).
    
    In order to accomplish that the whole thing had to be turned
    around.
    
    Before we had
    
      +----+  +----+
      | S1 |  | S2 |
      +----+  +----+
        \       /
         \     /
      +-----------+
      | RowMerger |
      +-----------+
    
    Now It looks like this:
    
      +---------------------+
      | MultiShardCollector |
      |                     |
      |    +----+  +----+   |
      |    | S1 |  | S2 |   |
      |    +----+  +----+   |
      |                     |
      +---------------------+
    
    Instead of having multiple shard collectors that push to one
    single row merger there is now a single multi-shard
    collector which itself uses shard-collectors to retrieve the
    ScoreDocs (as Iterable<Row>) and merges them using the
    PagingIterator

commit 1d24f93ea1ac85f705162fb500005beceb104b9e
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 2 14:33:50 2015 +0200

    use LuceneDocCollectorProvider in tests

commit 3cc94c0ef07b55a7dd04aa6b711acc7f708f9d30
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 1 18:05:15 2015 +0200

    testing: use analyzer and QueryAndFetchConsumer in LuceneDocCollectorTest

commit d4f6cb1ddc8c545fd21610698a9874d678870ba7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 1 16:34:49 2015 +0200

    testing: make LuceneDocCollectorBenchmark test setup less concrete

commit 3948d673bc341410b550571858a33de1c44a769a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 1 16:18:18 2015 +0200

    testing: make setup in LuceneDocCollectorTest less concrete

commit 3c76172ece772372ec63f2198c5d5ecbefe3f7fc
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 1 15:50:23 2015 +0200

    support isDone() and isCancelled() calls to SubExecutionContextFuture
    
    these methods are used by generic Futures libraries
    like guava's Futures class

commit b7681b0ae4a900644e85b3e793ec1522b795de97
Author: Claus Matzinger <claus@crate.io>
Date:   Thu Oct 1 14:50:17 2015 +0200

    adjusted docs to reflect graceful-stop on most systems

commit 8b25e0e54f21ffd23d4a3ff31087f0cdff278877
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 1 11:04:37 2015 +0200

    remove duplicate sharedShardContext retrieval

commit 2450bbb4e4da3c1928e4cc34fb8bdeab0ec8ce25
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 1 09:46:17 2015 +0200

    create docInputSymbolVisitor once per index instead of once per shard

commit 4125842bb271ffe1483cd5033b89765255e351cb
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Sep 30 15:39:40 2015 +0200

    remove generics from BulkShardProcessor
    
    as it is only used with one request

commit 57768d18107c97349c083b33fe5758db53cfed09
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Sep 30 15:24:42 2015 +0200

    prevent NPEs in BulkShardProcessor when Shard routing is not ready yet
    
    and wait for shards to become available by blocking

commit b410b063fef78b9d40e37fe0c902b6afc99a9ef7
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Sep 29 14:56:33 2015 +0200

    create concurrent copy from stresstest

commit 4c769644e64a1d0956705f55ad1204ba7f6fa872
Author: mikethebeer <michael.beer@crate.io>
Date:   Wed Sep 30 14:19:23 2015 +0200

    fixed score reference NaN when using order by keyword

commit 15f82d3967129763101374e8ac71a0d1d2a07e11
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Sep 30 11:24:42 2015 +0200

    Fix: in some rare cases the tables in the information_schema
    was not updated on every node after table schema changes

commit 49b90c2c1b2b668b6718852c37f9635d14e6b67c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 29 10:43:03 2015 +0200

    throw an error if the same table appears more than once in the from clause

commit f72166c4b582e3e4372199c6afcdbbb57be08f88
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Sep 28 14:08:43 2015 +0200

    fix a serialization issue when for ShardUpsertRequest
    
    when it was serialized more than once (e.g. sent to a different node, then failed, retries and sent to another node
    because the shard was relocated)

commit c5c89a0b8baa22f2c5d480c78f965a8562d4cf08
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Sep 25 14:47:09 2015 +0200

    fixed an issue which caused an exception if one
    queried the sys.operation.log while a new operation
    was added.

commit b24af556196c87135086876669c6f17fd88ccf0f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 28 11:27:14 2015 +0200

    fix TopRowUpstream race condition which can lead to a deadlock
    
    follow up to e0fd62cdddca140316ec66c5384f4881240b3df4 which
    didn't fix the deadlock completely

commit e7e58f25667c8d2c71d02a718eae64f45e5101d1
Author: kovrus <ruslan@crate.io>
Date:   Mon Sep 28 09:59:02 2015 +0200

    Fix the bug in listing of s3 object when using *

commit e0fd62cdddca140316ec66c5384f4881240b3df4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 25 13:35:20 2015 +0200

    fix pause/resume race condition in TopRowUpstream
    
    The resume operation could become a noop if it happened
    after pause() and while shouldPause()/pauseProcessed was
    being executed in another thread.
    
    E.g.
    
        T1                          |     T2
    --------------------------------|----------------
                                    | requests pause
     resume                         | shouldPause returns true
     sets pendingPause to false     |
                                    | pauseProcessed becomes a noop
     resume becomes noop            |

commit 40e62d9d03bb7ec346f7fd094c3928997a8bc0bf
Author: mikethebeer <michael.beer@crate.io>
Date:   Fri Sep 25 13:24:50 2015 +0200

    udc hardware address is now in lower case format

commit 11b281105459bdeff703c8d95b3ebaad063a4b43
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Sep 25 11:41:45 2015 +0200

    moved input column computation for fetch projections into pushdown

commit b8ba61c52ba5fa1108471093986d279043748aa7
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Sep 25 11:45:26 2015 +0200

    Fix: Querying the information_schema caused a NPE if
    there was an orphaned partition

commit c39fa7ed3734444e9a488a5d7d94175d7260dce2
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Sep 23 14:07:37 2015 +0200

    fix support for order by _raw & _id

commit 4fe774a98c6144beb9ff316dd7d9f508b17aad5d
Author: mikethebeer <michael.beer@crate.io>
Date:   Thu Sep 24 11:35:47 2015 +0200

    updated elasticsearch upstream to 1.7.2

commit d58729e7b6cf56e42c26079fff6a561f195ae2c3
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Sep 23 17:32:50 2015 +0200

    fix: uncompress _raw (_source) value if needed

commit 21790739511d96ef02188d240625eeed86e418b1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 24 09:47:26 2015 +0200

    include subContexts values in JobExecutionContext toString
    
    We use the toString() on the JobExecutionContex to debug
    errors if a context hasn't been removed. For that case it is
    crucial to include the subContexts so that we can see which
    subContext got stuck.
    
    Removed the keepAliveListener from the JobCollectContext
    toString() because it is actually the JobExecutionContext
    and it would cause an infinite recursion.

commit a9a77408282fdb8ed3221c0ecc47a44e7b164920
Author: bquenin <bertrand.quenin@gmail.com>
Date:   Tue Sep 22 17:05:29 2015 +0200

    Updating README.rst: Logging configuration
    
    Explaining how to setup SLF4j as default logging framework with crate client.

commit 73d8b8a1181dbbb72b44eac85c16004fd1989369
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 22 16:12:45 2015 +0200

    keep order of tables in the FROM clause

commit e1c77c7880ae05723758a098af319d1c4a3878fe
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Sep 21 16:36:51 2015 +0200

    remove SortingRowMerger

commit 29acf374d8fea5b5cab718dccbc8f756f51262c0
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Sep 21 15:47:06 2015 +0200

    fix pause collector condition

commit 3b4264539802069039f022770c473f52d10ab3f2
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Sep 18 16:37:13 2015 +0200

    fix error cases when some collectors get executed sequentially
    
    when not enough threads are available

commit 7727fbc21a07f49d2d961f56c86c9586db6410f2
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Sep 3 16:23:50 2015 +0200

    adding BlockingSortingRowDownstream that blocks collecting threads when no row can be emitted

commit 58ac3fd5e60b72063f6c8a30a6000ec5f3d84e7c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 22 14:01:27 2015 +0200

    use TopRowUpstream in RowSender
    
    so that tests which use the RowSender have the same Upstream
    behaviour as the production collectors which use the
    TopRowUpstream

commit e710e3622f30517bc13c09a5dd37bf7e59a5933e
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Sep 22 11:32:55 2015 +0200

    use AtomicInteger for counting subcontexts
    
    eliminates synchronization on remove

commit 64b3278c0d27ba917fb4c18590979ae45692eb09
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 21 16:59:14 2015 +0200

    don't use weighted batch size if query has an order by clause

commit ddf288d2cb4ccc97eb5dd672b52d0cd914932531
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 21 16:37:35 2015 +0200

    fix isKilled() on JobCollectContext

commit 8f1dbcaa20ea9d3de13fb624b4d7ddfcbf30ba5c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 18 23:18:20 2015 +0200

    split Ordered/NonOrdered collector

commit 68238338f92deef973775bb05f79b439cd378497
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 18 20:39:22 2015 +0200

    remove RowUpstream from CrateCollector
    
    and port RowsCollector changes from cross-joins branch

commit ca921e8375111c5d42d865360955c35000db48e2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 21 14:28:25 2015 +0200

    fix LuceneDocCollectorBenchmark

commit b0150e4ce7c0cb7e9acb1a888aeae44abd6f8ca7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 21 14:29:05 2015 +0200

    add missing import in ContextPreparer

commit f0128331aeaf0bb603f85249245af4682e8d57c2
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 18 15:30:39 2015 +0200

    add missing FetchProjection streaming test

commit ae64b717391783f5459738ef1bbe8bd854d1a9db
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Sep 4 11:46:30 2015 +0200

    fixed propagation of exceptions if the handler node has no collectors

commit 77cd67b2e51d165af7338278da3ec64bd2119dd5
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Sep 3 09:22:48 2015 +0200

    removed unreachable code

commit 1abc3ad0b54ee51b632f418bb2d0bc3c25145e5d
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Aug 26 14:44:03 2015 +0200

    generate reader ids based on indexes

commit a55bb93ceeb5d55c056e20f16f88c5bd633b9c06
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 12 15:11:48 2015 +0200

    add a separate FetchPhase / FetchContext

commit 8a09bcfb4203c05a4514450c02cbfce16f5752d5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 12 16:16:30 2015 +0200

    depend on ExecutionState instead of JobCollectContext in LuceneDocFetcher

commit b8a99d10faee7b5e4140a0e9281f32cad2b55c1d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 11 13:53:02 2015 +0200

    add a shared reader allocation which is used across phases

commit d7f990fbc4a5b0faea12fc1f0ac4fcf51ac4a7bd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 11 11:45:05 2015 +0200

    allocate routing in planner/planner context
    
    In order to ensure that the routing per
    table/whereClause/preference pair is always the same per
    statement.
    
    This will be important for self-joins, otherwise it could
    happen that one table uses replica shards and the other one
    uses primaries or different replica shards.

commit 1cff1570ff629ed31167dcc90dc43b683223911a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 21 13:22:48 2015 +0200

    fix LuceneDocCollectorBenchmark

commit b10925add5a738e2753623c4d83847f88ee8b145
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Sep 21 11:26:13 2015 +0200

    use the maximum poolsize of a threadpoolexecutor
    
    in threaded operations in order to have scaling thread pools start new threads as needed

commit 433e67cff70bc172eb2a424a16dfbd62bd755b4b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 18 17:59:58 2015 +0200

    remove all special NULL_NODE_ID handling
    
    unassigned shards are now encoded by negating them and are
    part of the regular routing instead of placing them into the
    special NULL_NODE_ID location

commit 57eb0565c8cd22afa52f2da87ec5561ec2366db7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 18 16:22:40 2015 +0200

    avoid using NULL_NODE_ID in SysClusterTableInfo

commit 4bb7f9fcaa8f7504ea645b0ea790f75144e1de7f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 18 15:23:00 2015 +0200

    Avoid using NULL_NODE_ID for information schema tables

commit e603a48b18d6ba511567d1a8b2aa4138f72c0a16
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Sep 17 18:18:28 2015 +0200

    improved performance of pause / resume on
    unordered LuceneDocCollector by holding the current
    Scorer. So it’s not necessary to restart the search
    and to skip documents

commit 1970648505f6c2baafa8ff15a94ef3ffbf3a5c5a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 18 11:42:01 2015 +0200

    fix context setup for bulk requests if everything is on the same node

commit 2e263a13d9ab7d59adb24183618df0f2b91884e8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 17 22:20:59 2015 +0200

    use RowN instead of anonymous class in StreamBucket

commit fecf9f318f15dc22d78c1cce1cec87a7e0ac9e99
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Sep 18 08:42:22 2015 +0200

    make crate compile- and testable when offline
    
    removed dependency that could not resolved when offline because it is
    never downloaded because there is already a newer version of the same
    package

commit ce1adb5fd0420d8c472ac551541d5c0e45b361a6
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Sep 18 07:58:59 2015 +0200

    updated changelog according to 0.51.4 release

commit 752ad59a009bf1006cad2ee7b5247a0becc080d3
Author: kovrus <ruslan@crate.io>
Date:   Thu Sep 17 17:03:51 2015 +0200

    Fix in delay timeout before next retry attempt

commit 23c777e9b7da6c979990d5a0a938f0df349a32c2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 17 17:38:06 2015 +0200

    AbstractExecutionSubContext: mark innerKill as Nonnull
    
    The AbstractExecutionSubContext makes sure that innerKill is
    never called with t as null so it can be marked as Nonnull
    instead of Nullable.

commit f10610a45f2954d8755935185ff322eeebc10f00
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 17 17:09:12 2015 +0200

    SubExecutionContextFuture: use wildcard in addCallback

commit cccea3c3e2ccadd56fc624bddec2b3ccd648c684
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 17 16:17:49 2015 +0200

    add infinite loop protection to ContextPreparer

commit a4ae4d272873b71505aefa9a751f72e1c0388552
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Sep 10 06:58:01 2015 +0200

    refactor context close/kill behaviour, handle errors on prepare/start, eliminate deadlocks

commit bc1bf17883dc61ef2d28e1e8121fcd4d01307d87
Author: kovrus <ruslan@crate.io>
Date:   Wed Sep 16 22:27:24 2015 +0200

    Fix flaky test
    
    abs byte value for -128 relults in -128 which fails for iptype.value

commit 9d4aef9fab67339c8219692755650d3687c0661e
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Sep 17 10:04:30 2015 +0200

    remove duplicate code for all context aware ES tasks
    
    also handle errors on context.start()

commit 8e25bb2c40472b7f41c10157c9962d1a781e8e16
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Sep 17 09:53:52 2015 +0200

    changed wording for partition sys check
    
    so it has the same tone as previous check messages

commit 3ffb96eb361e21fdd09de79c87a98ab73021988a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 16 17:29:15 2015 +0200

    SingleBucketBuilder: remove synchronization and change failure propagation

commit 2f0bf00d701c5a000bfb6412d71053027d3a1947
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Sep 17 08:43:13 2015 +0200

    updated crate-admin to 0.15.0

commit 2aa3048a53ba67feb3022e2bb66ae4a861fd2573
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Sep 15 11:45:07 2015 +0200

    improved Speed of unsorted LuceneDocCollector
    pause / resume

commit 2cfef882824320486da61325c878363341a8e419
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 16 15:10:36 2015 +0200

    make sure the LuceneDocCollector doesn't finish if it is paused

commit 1c00c4b6f6f615e18dcba98b064f7abc48453a56
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Sep 16 12:19:43 2015 +0200

    fix GroupingProjectorBenchmark which made crate-bench fail

commit a28305e4e720fc4fc5f882b6efdd21e279d15ce5
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Sep 16 10:27:11 2015 +0200

    remove unused slice stuff

commit 9b7378617c66c1e8f4f2a7ff547aeded0106689a
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Sep 16 10:15:40 2015 +0200

    cleanup leftover tokens files from older compilations

commit a6a35abe51285c3074915eeea97fbebd31eb3195
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Sep 15 12:01:59 2015 +0200

    cleanup sql-parser

commit 9f7ec6ad5d6808746c79d3707f06d2e6316dd76c
Author: kovrus <ruslan@crate.io>
Date:   Sun Sep 13 11:35:34 2015 +0200

    Expose ip type conversion

commit bcc9bfb982bd40bc691dccfbb0a27ca8cef2f215
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Sep 8 14:51:30 2015 +0200

    allow quoted subscript expression for odbc driver connections

commit 8ba3135e1b079874e38bc3214fd2a02284dae72b
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Sep 15 16:50:29 2015 +0200

    fix ConcurrentModification exception at ContextPreparer

commit 576d89f6e756701f3847583300b47d89a9d9c372
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 14 21:55:01 2015 +0200

    replace anonymous Row classes with re-usable classes

commit cd0806cfc01c51f1fd1821f358d10f35f03e8e5b
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Sep 15 08:09:42 2015 +0200

    updated changelog according to 0.51.3 release

commit 5431d0a1b61af5f689a7bfee7cae6b6dc0bfc093
Author: kovrus <ruslan@crate.io>
Date:   Fri Sep 11 08:51:12 2015 +0200

    Add try_cast scalar function

commit 09beb409e6f41c321e63cbe058d54b4f9555b1c8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 14 16:12:29 2015 +0200

    support pause/resume properly in GroupingProjector and SortingTopN
    
    In group by queries with large results it was possible that
    the DistributingDownstream called pause on a
    GroupingProjector which just delegated it to its upstream
    instead of really pausing. Since the GroupingProjector sends
    its rows in the finish() method the pause had no effect.
    
    This commit also includes a performance optimization as the
    Object[] cells array is now also shared and not just the Row
    object.

commit 516cc1b2946c78cfa27622fe027b810c1bd72520
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Sep 14 12:25:00 2015 +0200

    improved performance when using pause / resume
    in OrderedLuceneDocCollector

commit a2307d40d42ce4b50d453b9f033aa4a5e8acad5b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 14 11:15:40 2015 +0200

    initialize collectors to empty list in JobCollectContext
    
    otherwise it can lead to a NPE if kill is called before
    prepare was called

commit c7ed06a16691b86c7d92319bea4ed5091599f349
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Sep 14 09:21:11 2015 +0200

    force test runs on every call in every module with tests

commit f3390796b3eb30a7e35cd1a4fc4cff44cde5d2e6
Author: kovrus <ruslan@crate.io>
Date:   Sun Sep 13 13:06:07 2015 +0200

    Fix ip validation bug and simplify validation

commit 03fdbaaf7788513fd18b46138f08e39298b1b946
Author: Claus Matzinger <claus@crate.io>
Date:   Fri Sep 4 14:03:41 2015 +0200

    unified code style for the idea project
    
    keep line breaks = true
    
    updated code style and upstream
    
    removed whitespace
    
    whitespace II

commit e5f054a12aef4cbe21b2d01eb49ffd979db1cea2
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Sep 11 14:59:58 2015 +0200

    ported additional column ident test to master

commit 38ffbb4529b83932c1e2c440d479e7119961615d
Author: kovrus <ruslan@crate.io>
Date:   Fri Sep 11 13:38:46 2015 +0200

    Fix failing test
    
    The message from  ToArrayFunction.checkPreconditions must be used

commit 1405b487c9d1f0bdd8672cea005d96f159c151bc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 11 11:37:36 2015 +0200

    add ListenableRowReceiver

commit b4c346261f317736921aa9755fd5a15384115c00
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 10 22:39:43 2015 +0200

    fix skip warning in DigestBlob
    
    See also: http://stackoverflow.com/questions/14057720/robust-skipping-of-data-in-a-java-io-inputstream-and-its-subtypes

commit 494a3a4ed3e5b3a01a335748b084cbd7321aa849
Author: kovrus <ruslan@crate.io>
Date:   Fri Sep 11 08:38:34 2015 +0200

    Simplify to array cast

commit c3df534d4d0b26f58cc9d554e8dbdc7de0f798d1
Author: kovrus <ruslan@crate.io>
Date:   Thu Sep 10 21:06:20 2015 +0200

    Simplify primitive types cast

commit 07a339df36ef24af3a59c4f24ffd2ea71b887576
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 10 22:00:45 2015 +0200

    WriterProjector: remove open()/close() from Output
    
    OutputStream is already closable so the close on output is a
    abit redundant. And it is usually the case that whoever
    acquires something is also responsible for closing it.

commit 1ee7fb68db80b408f32274cb11da56d89b12ac71
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 10 20:52:47 2015 +0200

    make CollectionFinishedEarlyException a singleton

commit 592047b366599911e8da44e42c487cd9f0c4da5f
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Sep 7 16:06:15 2015 +0200

    implement SAME_NODE distribution type, use it where possible

commit 5ccdaefe302e602196e3ae88a49d528725ce7c39
Author: kovrus <ruslan@crate.io>
Date:   Thu Sep 10 11:48:20 2015 +0200

    Catch illegal argument exception in the convert method of Literal

commit cd62778663a560f373ad890d507a362398b17bc7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 10 13:33:24 2015 +0200

    forward port TransportExecutor changes from cross-joins
    
    I left out the newBranch/leaveBranch because it is unused
    and only included the other changes.

commit 962897c9ba77c8c59356928b4473337f2006cefb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 10 11:29:08 2015 +0200

    forward port IteratorPageDownstream changes from cross-joins

commit 1431e061324266bdee81fe2b4eb6bb67535048d6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 10 09:50:07 2015 +0200

    avoid synchronizing setNextRow on RowReceiver if there is just 1 upstream

commit 6019d543d024a137ed7f7f35f87e05246e66bb72
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 9 20:23:03 2015 +0200

    GroupingProjector: don't call fail in setNextRow
    
    it will cause the upstream to call fail too which will cause
    fail to be called twice.

commit 3aef19ac820f614a5687dc569a8d970e35736be6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 9 20:00:29 2015 +0200

    re-use same MultiUpstreamRowReceiver instance and prevent double-prepare

commit 9591662295908159ed1e4239dbc7229b0558223e
Author: kovrus <ruslan@crate.io>
Date:   Wed Sep 9 18:34:25 2015 +0200

    Make the convert method of Literal throw ConversionException

commit 1807b1a3be2f53c060f7958b7a4a1253a8c022f5
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Sep 9 15:59:51 2015 +0200

    let gradle link es sources, not compiled class files
    
    so development is easier.
    idea or the gradle idea plugin are not able to link different configurations of module dependencies, unfortunately.
    so we only can link to the main sources, not the test ones

commit e67c6d88f56b54c9885799b96a9042d24f7351e7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 9 17:42:02 2015 +0200

    remove un-used stuff from MapSideDataCollectOperation

commit 54c67f65a449b0413b5c9bef45ad4f5dc828305f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 8 11:41:15 2015 +0200

    change Projectors to only support one upstream
    
    There are now 2 special RowDownstreams (sorted & non sorted)
    which handle the multi-upstream cases

commit ec43c75a11425982c397608271da822b159987f8
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Sep 9 11:10:52 2015 +0200

    use a dedicated close callback to notify the job execution service

commit 3d19da951c40a5361c9a8778aa76b46dfc037300
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Sep 8 15:24:36 2015 +0200

    added a new prepare method to ExecutionSubContext
    
    this allows for allocating resources before start is called on other subcontexts.

commit f2c51b6a336e84f7161bc6a36d0a18a4f5af3e00
Author: mikethebeer <michael.beer@crate.io>
Date:   Tue Sep 8 13:48:40 2015 +0200

    fix changelog ``number of partitions`` unreleased

commit 61e16356f3c4544d0e354b6c866cc86fa727a7c2
Author: mikethebeer <michael.beer@crate.io>
Date:   Tue Sep 8 09:04:12 2015 +0200

    update changelog to crate 0.51.2 testing

commit d7a7797bd8ad14823742fee9ee2e5f07e6a2af32
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 7 19:20:53 2015 +0200

    re-enable PartitionNameTests
    
    missed this in f48689cce4f5d40bb9d95cc77ff4db7b7e5bed1d

commit 994c287342509411ca2934216e94b93dccaab647
Author: kovrus <ruslan@crate.io>
Date:   Mon Sep 7 08:40:30 2015 +0200

    Add for custom schemas in number of partitions check

commit 1cf9b254c528b73beb9c419bec64665482cb7aea
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Aug 29 00:01:05 2015 +0200

    replace CachedRef and NonBlockingArrayQueue with guava equivalents

commit b33d4eb5555b9df11e6f3806d192a5d29c3c9264
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Sep 5 22:31:46 2015 +0200

    fix equals/hashCode implementation in UpdateProjection

commit 7fdd5c819df22f5edecd0cec953abd7962857633
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Sep 6 18:08:59 2015 +0200

    avoid URI allocation and Exception creation in HttpBlobHandler

commit ec78f3945bbfd05c41845efd6eccacdb59e495c3
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Sep 7 17:06:26 2015 +0200

    inlined CollectOperation interface

commit 98b75f2e6b7c617380cfd56f7b12b9d887ef265b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 7 16:37:29 2015 +0200

    remove Projector implementation from PositionalRowMerger
    
    it doesn't directly implement the RowDownstreamHandle
    interface.

commit 9f48faa5e867e3f04d9aaf2b95b2fef9ccb16a61
Author: mikethebeer <michael.beer@crate.io>
Date:   Mon Sep 7 15:01:45 2015 +0200

    update crate admin to 0.14.4

commit f48689cce4f5d40bb9d95cc77ff4db7b7e5bed1d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 7 09:25:02 2015 +0200

    optimize usage of PartitionName and clean up its interface
    
    There were various places where a indexName was parsed
    multiple times to get schema and tableName.
    
    A lot of the functionality of PartitionName was also kinda
    duplicated with a slightly different interface. This is now
    more generic and more flexible.

commit b69dd180907126b34b4cb1b491486557270dd746
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 4 23:06:35 2015 +0200

    remove Comparable implementation from Idents
    
    it is not used and the TableIdent compareTo resulted in
    warnings due to the schema being nullable.

commit 8998f11f2837917fd954a43127b9c2532d84e08b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Sep 6 14:55:02 2015 +0200

    remove equals implementation from KillJobsRequest
    
    Because object equality is enough for KillJobsRequest and
    hashCode wasn't implemented which could result in strange
    behaviours.

commit 4dc7ae2d0749cd52fe5e077d13d70dceefeebf1c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Sep 6 14:45:54 2015 +0200

    LocalFsFileInput: avoid path / file conversion

commit 51ac72312410dfb2d38f34cb6d6e12e67aecc8f0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Sep 6 22:02:07 2015 +0200

    ColumnIdent: optimize sqlFqn()
    
    1 mio iterations -> from ~0.43 to ~0.13

commit 79251472bbd91fc4c103b1cef17830b7414a6bcc
Author: Matthias Wahl <matthias@crate.io>
Date:   Sat Sep 5 23:02:01 2015 +0200

    use cached regexp filter for regexp operator queries for better performance

commit 6880f6929b718764da8824b9deb71d1e3aa699a2
Author: Matthias Wahl <matthias@crate.io>
Date:   Sat Sep 5 22:52:25 2015 +0200

    use cached regexp filter for like queries for better performance

commit b6c8924e85bff4e885e429b54479885539d25cf7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 28 20:09:31 2015 +0200

    use pre-compiled id function for bulk insert id generation

commit 68fed8e2fd17d119c4ebc7485bbfad0e27b07d04
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 28 22:58:25 2015 +0200

    rename ShardingProjector to RowShardResolver

commit 40d71f43259f22f2ef9c7996d66f8e3600628efd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 28 22:53:02 2015 +0200

    Remove Projector/RowDownstreamHandle implementation from ShardingProjector

commit 8f527be0b2e5fca19b027a0775589f5651b9f9f4
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Sep 4 12:01:18 2015 +0200

    updated es submodule

commit fc9862919735dc5b5b91e7aabd2ad4de39cfa957
Author: kovrus <ruslan@crate.io>
Date:   Fri Sep 4 00:53:15 2015 +0200

    Add number of partitions system check

commit 21a063bfa4fa2a61b50be36816ace43848b799cf
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Sep 3 09:38:56 2015 +0200

    fix handling of non-deterministic functions
    
    they had a random hashcode which made it hard to replace them with inputs which used a HashMap
    fixed this using a random value in the Function class which is different for each instance of a non-deterministic function but remains
    equal for deterministic ones
    
    for that to work the Function Serialization had to change, which is a BREAKING CHANGE. :(

commit 808355b598bf0e38922c6af153764823818b174e
Author: mikethebeer <michael.beer@crate.io>
Date:   Thu Sep 3 14:54:43 2015 +0200

    added udc to sys.cluster table info

commit 798222130f43d11b74ceed58ce5fb34e626b99a8
Author: kovrus <ruslan@crate.io>
Date:   Wed Sep 2 17:56:52 2015 +0200

    Update crash to version 0.14.0

commit 4316efbc8a39d30b27279ca6780b4e88e5333b07
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Sep 2 17:03:16 2015 +0200

    move LongRunningQueriesIntegrationTest to stresstest module
    
    as it takes HOURS

commit bc63e3d8361aa29d6da0e87d1676e2a94bc7953f
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Sep 2 16:58:46 2015 +0200

    trigger keepalive in collect(int)
    
    in order to have OrderedLuceneCollector to also execute it

commit 38a03a42761b2693e11c95364e8c924c3fed494a
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Aug 31 13:40:50 2015 +0200

    avoid long running queries to be killed by the job context reaper
    
    this happened if a long running query (or ordering) was executed inside the LuceneDocCollector
    when a shard had very few segments with a huge amount of documents
    so the keepalive time was not updated during execution

commit 5708fb565823023fe6c0d3ac622029dee41cd3a3
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Sep 1 16:48:31 2015 +0200

    close all subContexts of a job if a failure occurs

commit 7323435b8072eae3b2e4d10b7530dd088244b943
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 27 22:11:13 2015 +0200

    fix id generation in copy from

commit 5e9ead23e0fde2fb80821f0ef0c6ae334329adae
Author: kovrus <ruslan@crate.io>
Date:   Fri Aug 28 11:07:21 2015 +0200

    Address some null dereference issues

commit 76c5602080bbd3f2e2ad6430c2e68e1db4b885b9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 27 14:55:56 2015 +0200

    simplify GlobalAggregate and NonDistributedGroupBy plans

commit f05c612ef7ccf8234b6acaac3b7413ce08d420da
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 27 12:18:47 2015 +0200

    replace QueryAndFetch and QueryThenFetch with CollectAndMerge

commit a55f57ae6a33c864823bc539e39f2a06f64e0825
Author: kovrus <ruslan@crate.io>
Date:   Thu Aug 27 09:54:42 2015 +0200

    Address null dereference issues

commit 00839281f6ffaca2d2aa491a56372c14e0a950b2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 27 09:58:29 2015 +0200

    add a DistributionType property to ExecutionPhase
    
    This is mostly just setting up things so that a SAME_NODE
    distributionType can be added later on.

commit 537fa174b0467e0963ba5cb7306a1a912df972fa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 26 23:10:25 2015 +0200

    add codecov

commit 4e071e5cf4d8171e0b61eb0870987fcc713bdd34
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 26 11:41:18 2015 +0200

    ensure that long running operations aren't killed by the reaper

commit 16fbe91baedcf5a5aac4dfe1e64aa4724abcd59f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 26 11:27:11 2015 +0200

    wrap callback list into a MultiContextCallback
    
    Currently there is always only one ContextCallback added to
    a ExecutionSubContext so the list is mostly just overhead.

commit 302f6b420d346201e45fce27c97257603fc9242e
Author: kovrus <ruslan@crate.io>
Date:   Tue Aug 25 14:22:48 2015 +0200

    Address resourse release issues

commit e82c5b483be5a8dc38dc25294c1ea0fe181a3aea
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 25 18:28:22 2015 +0200

    LuceneDocCollector: avoid pendingPause race condition on resume

commit b9bb1b9db9c5b954ed453806816392c335ad9d90
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 25 14:13:57 2015 +0200

    fix orphan_partition expression and optimize other shard expression

commit 609e4616b517f5f46337f5bb4a88a498199dfc44
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 24 16:27:39 2015 +0200

    remove MergePhase cast from ExecutionPhasesTask

commit 166787a38f06c470964e7ee566443176305dd123
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Aug 24 15:12:56 2015 +0200

    don’t use SearchContext.setCurrent in LuceneDocCollector,
    because it’s unused

commit 68a349b6b408fc5d7aa1cadfabd26135f4591221
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 24 09:17:09 2015 +0200

    remove collect factory methods from PlanNodeBuilder

commit f150713b086906bd2490678b7993469b30c52096
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 21 14:37:08 2015 +0200

    inline methods from PlanNodeBuilder
    
    distributingCollect and distributedMerge were only called
    from one place.

commit bf78db7d795be727eb61a3d9621b8c7d0c7e0849
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 21 14:46:08 2015 +0200

    remove isPartitioned() from CollectPhase

commit fda9633535d19dcbfbddbbe0e223f69a94dd9264
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 20 15:56:48 2015 +0200

    SortedPagingIterator: avoid using materialize in PeekingIterator

commit 613c4141bed51174caf3d9d799a617448d995a31
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Aug 20 15:25:01 2015 +0200

    updated copyright header to use a simple company reference

commit 10635dea55acd4bac0d4545472fd983352d4d543
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Aug 20 13:51:51 2015 +0200

    fixed stresstests

commit 59837f647a715347209e0d5e8154b09914f5733b
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Aug 20 11:03:54 2015 +0200

    removed ResultProvider interface
    a result future can now only be fetched from dedicated classes
    
    renamed ResultProviderFactory
    
    removed unreachable condition

commit 1b2a2ef0d1e0a8378bdbd02c433ed5fc6186cfed
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Aug 20 11:02:35 2015 +0200

    fix materialization of RowN, it now has the proper size and also copies the array

commit 7a5fe8254a3565076fa093410313d794a7c36f61
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 20 10:48:57 2015 +0200

    kill jobs in the reaper instead of closing them

commit 46eb178ff15f2dc9c0b50a360aa6ea121627ecd4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 20 09:49:36 2015 +0200

    copy bytes in StreamBucket.Builder build()
    
    babb0cee5458c19e78e228224fd592ba66dd4d7d broke the
    StreamBucket.
    
    If the StreamBucket is sent to the same node
    writeTo/readFrom aren't executed so the bytes weren't
    copied.
    
    And `BytesStreamOutput.reset` resizes the bytesArray if it
    grew larger than 1024 which would also result in failures.

commit ed472264007b45a744591ebf3b83d02e7f5fab35
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 19 14:56:28 2015 +0200

    travis: add coverity addon

commit 4eb02c188a57637b6771eb0c4cb4141bf279f8d1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 18 21:28:17 2015 +0200

    replace NoopCrateCollector and SimpleOneRowCollector with RowsCollector

commit 9cee6a1db50a242f3142196c7e18695ac88921a6
Merge: fac7e44504 e66e445086
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 19 14:41:48 2015 +0200

    Merge pull request #2452 from crate/pause-resume
    
    pause / resume support

commit e66e4450860b53c837e9f219c6ae9e675be0c6a5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 18 13:35:14 2015 +0200

    reduce logging in LuceneDocCollector and cache Exception

commit b3324a9aa520546d3c2e4f0e4f6a48038996d5b6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 17 14:03:17 2015 +0200

    use pause / resume in DistributingDownstream
    
    This eliminates the Queue from the DistributingDownstream.
    Instead the StreamBuckets are used directly to save the
    rows.
    
    In addition the Broadcasting/Modulo distribution has been
    decoupled from the request handling.

commit 907f5adf8d3bd26b869a0bc8df324a8b7916eb01
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 18 18:18:23 2015 +0200

    implement pause/resume in Projectors

commit 9bae14f871f8887ca8eee0346da9124b9ce51b88
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Aug 11 15:48:34 2015 +0200

    implement async resume support at lucene collectors

commit b149e4a6da9eb5d86e05e22a7b1c21ce9d5c44c8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 18 18:06:47 2015 +0200

    add async flag to resume on RowUpstream

commit 0ada72ba94ec233fbd3543cf650ba95a84dfa1c4
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Aug 11 10:36:29 2015 +0200

    fix flaky PositionalBucketMerger test

commit 786511f1ec1268557532bdc4f7fbbcc38b893031
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Aug 4 11:14:56 2015 +0200

    implement pause support for unordered lucene collector

commit 5dac771c62cecd36b87d59bc5fe54e5aa957ad2f
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Jul 29 10:49:22 2015 +0200

    Implemented pause/resume on sorted Lucene doc collector

commit e9673ba1fbaf03c539c3e4b0973749abc1750fbc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 27 17:09:28 2015 +0200

    add pause/resume to RowUpstream and impl it in IteratorPageDownstream

commit fac7e4450482a8a1fefee556272a3d747c1a0ac4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 19 13:39:01 2015 +0200

    fix resource leak in trustStore initialization

commit a05d2713f7fbc7248f660b45ff8e3daf1cbd5690
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 19 13:30:07 2015 +0200

    fix resource leak in Build info

commit b09789bc0deebecc621a0b5d349eb8b4c0b20594
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 19 08:48:33 2015 +0200

    mark ShardCollectService as Singleton
    
    it's bound to the shard injector and we don't want to
    re-create it each time a shard collector is retrieved.

commit 774d81bd3ebb5ac09b706cde418f0b6454915aaa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 18 22:45:53 2015 +0200

    remove generic/TableInfo wildcard from SchemaInfo
    
    SchemaInfo was never really accessed using the generic

commit 23f5ba05ae7f241275976c3b7329b22e1b59aba7
Author: kovrus <ruslan@crate.io>
Date:   Tue Aug 18 15:28:03 2015 +0200

    Update cluster checks documentation

commit e6d6ea48f7b28e9e209c46f4d12fd9559889c4df
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 18 13:36:03 2015 +0200

    testing: reduce max bulkSize in testBulkInsert

commit 1ccb0185bffb89b5dbd7d17e8f22f9fdce03a7c6
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Aug 18 08:18:01 2015 +0200

    updated AMI best practice to reflect new naming of image

commit 893494ca51c876509afdfca35745c7a3fdee604c
Author: kovrus <ruslan@crate.io>
Date:   Mon Aug 17 20:32:43 2015 +0200

    Fix checks documentation test

commit ecb53a1feff87034008c3e9b505df27d168edcca
Author: kovrus <ruslan@crate.io>
Date:   Mon Aug 17 16:08:31 2015 +0200

    Use ReferenceResolver in min master nodes checks

commit babb0cee5458c19e78e228224fd592ba66dd4d7d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 17 14:21:31 2015 +0200

    avoid creating new BytesStreamOutput objects in StreamBucket

commit 03e016d6fb468d4c0f581c85df8058dee0d9ce4c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 30 20:40:26 2015 +0200

    base NestedReferenceResolver on ReferenceResolver

commit 0221e9b3f2b9c9db6aec0b45be7a2c7a07f2d6b2
Author: kovrus <ruslan@crate.io>
Date:   Fri Aug 14 16:52:30 2015 +0200

    Modify cluster checks for cluster with 1 node
    
    Cluster checks for default values pass in the cluster with one node

commit 61a1d161fb9239829bb6aa8e9693b7a6266fcc91
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 14 13:44:53 2015 +0200

    remove unused code and fix various minor issues

commit f525b1705f67e654a7a66f3169e90cbbfd4ec497
Author: kovrus <ruslan@crate.io>
Date:   Fri Aug 14 09:28:40 2015 +0200

    Change severity level for recovery after time setting

commit 06f3ec8f4f5176e7b655721593799b09c1ac43fd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 13 17:08:46 2015 +0200

    adapt blob/client/core modules test output to match the sql modules output

commit cef08d5b92818534eac916f59d5166a5b03d1132
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 13 16:51:16 2015 +0200

    don't eagerly close the JobCollectContext/SearchContext if there were no rows
    
    The searchContext will be closed indirectly if the
    JobCollectContext is closed.
    
    The JobCollectContext is closed after the fetch and once
    we've a separate FetchContext it can always be closed
    immediately anyway.

commit 4cf81d937931229502d70395bfe39a161c4c7940
Author: kovrus <ruslan@crate.io>
Date:   Mon Aug 10 14:23:52 2015 +0200

    Add cluster checks and expose it via sys.checks

commit 4d34b733cd0d02ae560db9d5e86d0977ace80751
Author: Claus Matzinger <claus@crate.io>
Date:   Mon Aug 10 13:53:52 2015 +0200

    DEVELOP.rst corrections

commit 2a4c4ed2d9614675de0c3afb58152843c9b5381a
Merge: 3d72181d43 322600e5c3
Author: Michael Beer <michael.beer@crate.io>
Date:   Thu Aug 13 14:51:24 2015 +0200

    Merge pull request #2434 from crate/m/crate-testing-0.51.1
    
    adapt changes to 0.51.1 testing release

commit 322600e5c371e0af75704244ae7220b90154024a
Author: mikethebeer <michael.beer@crate.io>
Date:   Thu Aug 13 14:09:38 2015 +0200

    adapt changes to 0.51.1 testing release

commit 3d72181d4301d52b9b5ee57df3325aab92e683e8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 13 12:14:42 2015 +0200

    fetch: keep track of closed contexts to avoid unnecessary close requests

commit e8270e5f7ae71900ab4a928fe52d1f449c8e03bf
Author: kovrus <ruslan@crate.io>
Date:   Wed Aug 12 16:52:08 2015 +0200

    Expose the gateway cluster settings

commit 857461cf5491ea3fef8518c75d07dff626a16305
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Aug 12 15:03:44 2015 +0200

    added os_info column to sys.nodes table
    
    the os_info column currently contains only the number of available
    processors per node

commit c5ea9a4c3bbcb4bca0328142bbd89b5946147ba4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 12 15:41:28 2015 +0200

    don't require SearchContext in LuceneDocFetcher

commit c38c318a735734645728bfaed233b30ab879fcdf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 12 11:14:16 2015 +0200

    don't send requests after job context has been killed

commit 71dc4cfb55bcd612fc5c7d738cd426c61d9df15f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 11 16:42:29 2015 +0200

    remove SearchContext dependency from LuceneQueryBuilder / InternalCountOperation

commit 036095511070e5c775bbfd9b05655b63dc2ee166
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Aug 11 14:36:11 2015 +0200

    fix flaky BulkShardProcessor retry blocking tests

commit 4296f43d41bca45b0c00e06a92aea0c249135960
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 11 13:25:05 2015 +0200

    QAF: include offset in limit of collectPhase
    
    testSqlRequestWithLimitAndOffset failed due to that since
    85e059fd4d8bcc88bf16ec773e40d05f5d646f43
    
    Before that commit there were no QAF plans for doc tables
    with limit/offset so the bug didn't really occur.

commit 9665a4e0a4ecc1b79d36d70bf872208d2f0e3e2c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 11 11:37:32 2015 +0200

    fix javadoc reference

commit 85e059fd4d8bcc88bf16ec773e40d05f5d646f43
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Aug 5 16:47:26 2015 +0200

    implemented FetchPushDown and use it in QueryThenFetchConsumer

commit 68561f5e1c9fc667f0874deda17083e105923534
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 10 21:20:49 2015 +0200

    testing: fix testKilledAllLog
    
    fails on travis:
    
        https://travis-ci.org/crate/crate/jobs/74921771#L2386
        https://travis-ci.org/crate/crate/jobs/74896585#L2195
    
    This is related to 6445199e6af655e52c54ec09993dd58b4438c803

commit 2262afb5314c2ca589a5fb2b3b22bb14fb78d50f
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Jul 30 11:35:13 2015 +0200

    Fix: reduced the amount of unnecessary data handled when doing Query And Fetch

commit 9d0744739c9ed5da354ee74fbcc4f300b8fe2f3d
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Jul 21 10:37:59 2015 +0200

    performance improvement: use MergeProjection at QAF for doc tables

commit 65ead710d6f0cf757730e9ba46cb61bc26b93ca4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 10 12:18:06 2015 +0200

    backport inputId / DownstreamExecutionSubContext changes from cross-joins branch

commit 31ce8466581684111d61ebff6fd136360c17bc4d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 7 17:16:59 2015 +0200

    refactor BucketMerger
    
    refactored the sorting/non-sorting logic into PagingIterator
    which is used by a generic IteratorPageDownstream. This way
    it will be possible to re-use the pause/resume logic in the
    IteratorPageDownstream instead of re-implementing it in both
    Sorting and NonSortingBucketMerger

commit 2da671f10fa7d461c07f877ba8ead7b0d2d337a4
Merge: 9d39b061c7 4eda42ed51
Author: Michael Beer <michael.beer@crate.io>
Date:   Fri Aug 7 15:39:15 2015 +0200

    Merge pull request #2407 from crate/m/fix-crate-ami-doc
    
    Adapt Crate AMI Documentation

commit 4eda42ed51164778d48e38222ab0f2f21c42822c
Author: mikethebeer <michael.beer@crate.io>
Date:   Thu Aug 6 18:15:49 2015 +0200

    document data path behavior

commit 9d39b061c74a7088e15158294b4689b53a3b17e4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 7 10:53:19 2015 +0200

    increase maxWaitTime for shardOperations in kill integration tests
    
    travis is a little bit slower

commit 51b0a0915a9ffbc2729d5750ccc037489fff55ed
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Aug 7 09:19:18 2015 +0200

    rename remaining ExecutionNode based namings to ExectuionPhase based

commit 73696dc9d4a8a7a1585b97ebff14618555710935
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Aug 6 18:11:32 2015 +0200

    improved EC2 retry logic

commit b8ff802faa044b1ff98f25d3ac35019f6dfcbc53
Author: mikethebeer <michael.beer@crate.io>
Date:   Thu Aug 6 21:38:00 2015 +0200

    adapt changes to 0.50.3 release

commit 4b08be5539d01cea9b3fb39c85f26d41db5acb36
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Aug 6 16:00:42 2015 +0200

    add method to plan a subrelation to plannercontext

commit d38fe63641869cf56d890bf7f431509a4bd33de2
Merge: 6445199e6a e0a40d3e13
Author: Claus Matzinger <claus@crate.io>
Date:   Thu Aug 6 14:48:59 2015 +0200

    Merge branch 'c/line_wrapping'

commit e0a40d3e13fb478f721cc9eb37cfea91ab73146c
Author: Claus Matzinger <claus@crate.io>
Date:   Thu Aug 6 14:06:59 2015 +0200

    updated crate-admin version to 0.14.3

commit 6445199e6af655e52c54ec09993dd58b4438c803
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Aug 5 17:30:51 2015 +0200

    fixed kill tests

commit 6efb6bf9fb8d4a3e83aa158448414e35c4d88cb8
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Aug 6 13:40:50 2015 +0200

    increase waitForMappingUpdate timeout to 20sec

commit 55a472ae93ed145d64dc1df188bfeff5540d6380
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Aug 6 11:48:13 2015 +0200

    updated upstream of ec2 discovery module

commit 28bd0b9ec04981480f2a4b6364e2f6ef54eea264
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Aug 5 17:32:41 2015 +0200

    Fixed an issue that could cause the blob recovery
    process to hang under some rare circumstances

commit 6e7232e854ad2b3dbab74c6b3875c3722afaffff
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Aug 6 10:23:54 2015 +0200

    mention max line width in documentation

commit c01fb7d7616368320109cbc12d16b2e4c24580db
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 5 16:08:05 2015 +0200

    clarify changes entry about s3 bug

commit 2f0dea219773890aa3c80fdac0fbbd8af06b3fad
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 5 14:35:56 2015 +0200

    do not shutdown executor in OutputS3
    
    The executorService doesn't belong to the OutputS3 so it
    isn't allowed to shut it down.
    
    Currently it is actually the generic threadpool and closing
    it fucks up the whole cluster.

commit 3869872957f4da36ab59d1bb4e1f7a018875da1a
Merge: 92b2adfa69 81ede18d96
Author: Michael Beer <michael.beer@crate.io>
Date:   Wed Aug 5 08:32:18 2015 +0200

    Merge pull request #2393 from crate/m/aws-cli-keyname
    
    add key-name to aws cli examples

commit 81ede18d96a569aec67a1b123667c61e1803932d
Author: mikethebeer <michael.beer@crate.io>
Date:   Wed Aug 5 07:15:27 2015 +0200

    add key-name to aws cli examples

commit 92b2adfa69d1cd64bc6e494965aa29b9c47cf960
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 4 12:08:44 2015 +0200

    add more logging and additional overhead to shardBatchSize

commit 98ae7689c0ae40d5fa76e2c218e7eaa301e79033
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 4 09:44:03 2015 +0200

    Use directExecutor for local merge
    
    TransportDistributedResultAction already runs the operation
    threaded, so there is no need to dispatch to an additional
    thread.

commit 73b2654c383832ed399a4943c8da9d5336ba5d29
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Aug 3 16:36:34 2015 +0200

    fix: catch and forward breaker exceptions at grouping projector instead of bubbling them up

commit a198e466fdf798b3b3f7f460f15bcefd33d72f3c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 3 15:02:37 2015 +0200

    make sure DistributingDownstream is unblocked

commit 42bb2eae8e74774088634505197503b518b27434
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jul 30 15:09:43 2015 +0200

    updated Elasticsearch upstream to 1.7.1

commit e2b84a15d56c8fca98504d3c4b08c2d9a56ac969
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 3 13:37:59 2015 +0200

    use dynamic page size in DistributingDownstream

commit 21134da2b1d2a097207b45993fa61b9b476a7f9d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 31 14:44:13 2015 +0200

    make sure build properties file is created before jar is created
    
    and that there is only one crate-build.properties file and
    not 2

commit e7beedd398ece8778c56ac45b47103dc86210452
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 31 10:14:18 2015 +0200

    use dynamic page size in LuceneDocCollector
    
    query with large offset, before this change (50 repeats):
    
        avg: 1.357  max: 1.648     min: 1.210
    
    after:
    
        avg: 1.171  max: 1.408     min: 0.980

commit 38d72fef56412158fe4f56f41580792427eb78c9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 30 15:59:20 2015 +0200

    clean up dispatching to CollectSource in MapSideDataCollectOperation

commit a3edc845928fb416b12acbdcc633ce77e512a1dc
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Jul 30 12:18:40 2015 +0200

    Fixed an issue that could cause a count function on partitioned tables
    to cause an error if a partition was deleted concurrently.

commit 0aa69da8a3fbf7b69962a1f26fba0b39460921a1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 30 11:48:35 2015 +0200

    don't recreate inputSymbolVisitor in LuceneDocCollector

commit 208290f7a730bba5d61ee22295989ea69b4cf123
Merge: 356bf9a22f a739bc922b
Author: Michael Beer <michael.beer@crate.io>
Date:   Thu Jul 30 10:39:06 2015 +0200

    Merge pull request #2374 from crate/feature-crate-ami
    
    added doc for crate aws ami usage

commit a739bc922ba84267f1eed44988944c2e1c71e10f
Author: mikethebeer <michael.beer@crate.io>
Date:   Sat Jul 25 07:57:40 2015 +0200

    added doc for crate aws ami usage

commit 356bf9a22f3dbbb1042469dad6a2f3f04622be25
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 29 23:16:24 2015 +0200

    generify row filtering

commit 46772848b3d91cf513c5f0f5133199a6115b71e5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 29 22:52:35 2015 +0200

    base RowCollectExpression on CollectExpression

commit bb82b328f68ba0cf4997a5ce0117fb4ebe61a558
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 29 22:35:35 2015 +0200

    change CollectExpression to an interface and remove generics in InputCollectExpression

commit 32d8c1eba54319622e95c7dd26d4a58700d65224
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jul 30 07:52:41 2015 +0200

    fixed indentation of version headlines in changelog

commit 03cecc56d7688ef3eff64c68f7d3ca99377db638
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Jul 29 18:45:09 2015 +0200

    updated changelog according to release 0.51.0

commit 97ffdb27e0625a8f441f99cde21ab83c2973867b
Author: kovrus <ruslan@crate.io>
Date:   Wed Jul 29 18:08:27 2015 +0200

    Update CHANGES.txt accordingly to 0.50.2 release

commit 7880b8d7538d4b164546ccaff1f35faf44867295
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 29 17:43:00 2015 +0200

    replace ResultProvider dependency with RowDownstream in JobCollectContext

commit 57127b234a21b6206f9d1d13b71bb2374a77cb1f
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Jul 29 15:32:50 2015 +0200

    Fix: reduced the amount of unnecessary data handled on select queries

commit b5193d9a8712f6aef218ad7c739cd4375cfae702
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 29 16:25:35 2015 +0200

    fix broken cache invalidation on tables in custom schema

commit c0ab870a6a65d9384e636a1b9560605ecc2eec54
Author: mikethebeer <michael.beer@crate.io>
Date:   Thu Jul 9 14:11:46 2015 +0200

    Add support for kill job statement

commit 19cb1f99f0cb6b95e2e2435e0533cae0966d0d85
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 29 13:50:23 2015 +0200

    use newly introduced ContextMissingException in TransportDistributedResultAction

commit 8e75a0d46013ba6864a90a6ae2e52896703f6cc7
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jul 28 18:22:23 2015 +0200

    fix KILL ALL for SELECT statements
    
    improved tests

commit 779f2e9cfcf1acacd168baa205ea4dff78b317c0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 29 11:47:58 2015 +0200

    add changes entry for EsRejectedExecution handling improvements

commit 3f713a5ff224d0a59a74d56616286338df1984d1
Merge: ecbeff6b73 9573877345
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 29 11:24:22 2015 +0200

    Merge pull request #2366 from crate/rejected-execution
    
    fixes to make sure EsRejectedExecution exceptions don't cause stuck queries

commit 957387734564465f5c8f0a9d16185dc6f9b368a2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 29 09:37:25 2015 +0200

    add an integration test with few available threads

commit cb218b7084eac2e812e4633e86752687525346a5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 28 16:55:34 2015 +0200

    run response actionListener in SAME ThreadPool
    
    usually the onResponse operation is very cheap and can run
    on the IO/caller thread directly.
    
    If the response operation is expensive the listener should
    be wrapped into a ThreadedActionListener or a different
    ResponseHandler should be used.
    
    This avoids EsRejectedExecutionExceptions which can cause
    queries to get stuck as the response could be swallowed.

commit 033f639330b8852e95954949c50da9019338830c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 28 14:13:22 2015 +0200

    catch EsRejectedExecutionException in Transports

commit 7b163efc428d7b9626c4dde1d9bcbc4aecb9610f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 28 13:34:51 2015 +0200

    use SAME executor in TransportJobAction
    
    Collect operations run in separate threads already and the
    context preparation is fairly cheap. Using Same instead of
    Search it is guaranteed that the Context creation always
    works and doesn't abort with a EsRejectedExecutionException.
    
    using same:
    
        ❯ wrk -c 500 -d30s -t4 http://localhost:4200/_sql -s select.lua
        Running 30s test @ http://localhost:4200/_sql
        4 threads and 500 connections
        Thread Stats   Avg      Stdev     Max   +/- Stdev
            Latency    35.19ms   17.59ms 477.37ms   78.48%
            Req/Sec     3.59k   613.58     5.33k    72.36%
        415313 requests in 30.00s, 71.30MB read
        Socket errors: connect 0, read 0, write 0, timeout 123
        Requests/sec:  13843.50
        Transfer/sec:      2.38MB
    
        ❯ wrk -c 500 -d30s -t4 http://localhost:4200/_sql -s select.lua
        Running 30s test @ http://localhost:4200/_sql
        4 threads and 500 connections
        Thread Stats   Avg      Stdev     Max   +/- Stdev
            Latency    35.36ms   15.14ms 490.24ms   72.98%
            Req/Sec     3.58k   496.57     6.94k    76.65%
        421952 requests in 30.00s, 72.44MB read
        Requests/sec:  14064.05
        Transfer/sec:      2.41MB
    
        ❯ wrk -c 500 -d30s -t4 http://localhost:4200/_sql -s select.lua
        Running 30s test @ http://localhost:4200/_sql
        4 threads and 500 connections
        Thread Stats   Avg      Stdev     Max   +/- Stdev
            Latency    36.49ms   21.45ms   1.70s    84.19%
            Req/Sec     3.57k   832.36    10.31k    79.86%
        414406 requests in 30.00s, 71.14MB read
        Socket errors: connect 0, read 23, write 0, timeout 23
        Requests/sec:  13812.04
        Transfer/sec:      2.37MB
    
    using search:
    
        ❯ wrk -c 500 -d30s -t4 http://localhost:4200/_sql -s select.lua
        Running 30s test @ http://localhost:4200/_sql
        4 threads and 500 connections
        Thread Stats   Avg      Stdev     Max   +/- Stdev
            Latency    40.37ms   35.45ms   1.69s    91.88%
            Req/Sec     3.20k     0.96k    6.13k    67.58%
        377092 requests in 30.00s, 64.88MB read
        Socket errors: connect 0, read 0, write 0, timeout 130
        Non-2xx or 3xx responses: 17
        Requests/sec:  12569.93
        Transfer/sec:      2.16MB
    
        ❯ wrk -c 500 -d30s -t4 http://localhost:4200/_sql -s select.lua
        Running 30s test @ http://localhost:4200/_sql
        4 threads and 500 connections
        Thread Stats   Avg      Stdev     Max   +/- Stdev
            Latency    32.67ms   23.15ms 979.39ms   83.91%
            Req/Sec     3.97k   616.80     5.50k    76.72%
        470269 requests in 30.00s, 80.86MB read
        Socket errors: connect 0, read 0, write 0, timeout 1
        Non-2xx or 3xx responses: 6
        Requests/sec:  15674.24
        Transfer/sec:      2.69MB
    
        ❯ wrk -c 500 -d30s -t4 http://localhost:4200/_sql -s select.lua
        Running 30s test @ http://localhost:4200/_sql
        4 threads and 500 connections
        Thread Stats   Avg      Stdev     Max   +/- Stdev
            Latency    33.08ms   29.24ms 464.06ms   93.44%
            Req/Sec     3.99k   607.62     7.96k    80.31%
        473806 requests in 30.00s, 81.46MB read
        Requests/sec:  15793.33
        Transfer/sec:      2.72MB

commit 202a1064a568c88d4436a9fa4efac9b8b98d02bf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 28 11:51:54 2015 +0200

    handle EsRejectedExecutionException in BucketMerger callbacks

commit ecbeff6b739499711733566ca0958c9e43a83a28
Author: kovrus <ruslan@crate.io>
Date:   Mon Jul 27 18:00:51 2015 +0200

    Add kill call for LuceneDocCollector in CollectCtx

commit 42c39b9dfd10a3fa990be3d0c9d68907fecddc65
Merge: b0cbf9bc78 acf19f60ca
Author: Chris Ward <chriswhward@gmail.com>
Date:   Tue Jul 28 17:06:32 2015 +0200

    Merge branch 'cc/config_docs'
    
    # Conflicts:
    #       docs/configuration.txt

commit b0cbf9bc783132e80c9da8a52fdaff04707a675f
Merge: dc98b8a4db 50fb9ef657
Author: Michael Beer <michael.beer@crate.io>
Date:   Tue Jul 28 13:14:43 2015 +0200

    Merge pull request #2360 from crate/m/fix-jobs-table-unknown
    
    fixed a bug where job gets listed in sys.jobs

commit 50fb9ef65778bdb7748f5503ba79ad6ded75fd39
Author: mikethebeer <michael.beer@crate.io>
Date:   Tue Jul 28 10:44:11 2015 +0200

    fixed a bug where job gets listed in sys.jobs

commit dc98b8a4dba14c3d24ab3a02c177275e0b1e6f2c
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jul 27 18:18:03 2015 +0200

    added SLEEP(x) scalar function for testing KILL statements

commit 486884e009ab7a0bc3d556389572c9ba792a77a0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 27 17:40:16 2015 +0200

    fix a NPE that can occur if a filter on blob tables returns null

commit c6338460dfbbd8edddbf06f54a9edb69154a4654
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Jul 27 18:06:56 2015 +0200

    improved changelog message

commit 299769fc21ac0b3a0cea0aa030017b7d62649cba
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Jul 27 16:45:15 2015 +0200

    Fix: fixed an issue which caused that some settings are not selectable
    if they are not set

commit e7b38bc6bbb5c7ef35860decb9ae4926be239560
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Jul 27 16:31:38 2015 +0200

    Fix: fixed an issue which caused TypeConversion errors
    if a setting was selected which represents a byte size
    (e.g. indices[‘store’][‘throttle’][‘my_bytes_per_sec’])

commit 62996a6cce5a4ab9da32734d25e992a23ad5db63
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 27 13:44:14 2015 +0200

    fix NoSuchElement exception in SortingBucketMerger
    
    fixes an error that was introduced with
    1aa2e2af91e4b8e2d7558e8826ea22b70b3b689f

commit 3d57af826bfd636bde5a2ffe8bede97c42cf9825
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jul 24 15:50:50 2015 +0200

    remove cloud.aws.region setting completely
    
    and use current region of the instance instead
    also documented that in the best practice

commit 1aa2e2af91e4b8e2d7558e8826ea22b70b3b689f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 22 19:07:25 2015 +0200

    use MergingIterator in SortingBucketMerger

commit ed061ed4bded189adef4e4788c7aacc0606e6b99
Author: kovrus <ruslan@crate.io>
Date:   Fri Jul 24 08:43:46 2015 +0200

    Change docs for bulk.partition_creation_timeout

commit f1e670c00950201a7a9c4d3d832f4b11de847867
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jul 24 08:43:20 2015 +0200

    corrected typo in multi node setup best practice

commit 60ac9dae027d6acc9c379eb3bf1a85042e8e08c5
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jul 24 07:56:40 2015 +0200

    automatically detect aws region
    
    and use it as default for ec2 discovery

commit 85d2c26b2b320053c2cb6c17df465562235d0b3b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 21 15:33:31 2015 +0200

    remove single bucket optimization from SortingBucketMerger
    
    instead it is possible to use the NonSortingBucketMerger who
    does the same thing.

commit 36f11c04021c03fa0cc941bff4b0cc515d8b4f53
Merge: d96025e875 cd6334da18
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jul 21 15:48:58 2015 +0200

    Merge pull request #2342 from crate/ec2-discovery
    
    Added support for EC2 discovery

commit cd6334da1846d7543f9de4ebd2dbffa66283e19e
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jul 13 18:46:56 2015 +0200

    added support for ec2 discovery

commit d96025e875296ca4ddac8e3931f5ada1eab32217
Merge: 7b150dfde7 3e00dafcdc
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jul 21 14:15:58 2015 +0200

    Merge pull request #2341 from crate/h/document-https-breaking
    
    updated documentation about breaking change HTTPS connections to S3

commit 3e00dafcdcd370c1e7ee6c9136725caac12e2fcc
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jul 21 13:55:40 2015 +0200

    updated documentation about breaking change HTTPS
    
    connections to S3

commit 7b150dfde722570254b4bf09529a29366b383766
Merge: e48a19fb3e 30ef75507d
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Mon Jul 20 23:52:53 2015 +0200

    Merge pull request #2335 from crate/r/threadpool-default
    
    Change documented thread pool size

commit 30ef75507d1be55ae86c0b046c039598572ce24c
Author: kovrus <ruslan@crate.io>
Date:   Mon Jul 20 14:54:35 2015 +0200

    Change documented threadpool size

commit e48a19fb3e9809bc64ee620f1ace0556affa0beb
Merge: a1b9ccc5e1 1cf700740d
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jul 20 22:18:49 2015 +0200

    Merge pull request #2336 from crate/h/updated-truststore
    
    fixed SSL certificate issue and use HTTPS for S3 connections

commit 1cf700740d03d6e4949de78c909930197c78cdf5
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jul 20 18:31:49 2015 +0200

    fixed SSL certificate issue and use HTTPS for S3 connections

commit acf19f60ca2a56843e089a1ce56f8610a9c7b9ba
Author: Chris Ward <chriswhward@gmail.com>
Date:   Mon Jul 20 17:54:21 2015 +0200

    Random line breaks removed

commit f9fc655ade43518db0748dad59dc5b0c56aa7ffc
Author: Chris Ward <chriswhward@gmail.com>
Date:   Mon Jul 20 13:26:30 2015 +0200

    Made some language tweaks to some of the configuration documentation
    
    Typo fix
    
    line break fixes
    
    Sorting line breaks…
    
    Couple more snuck in

commit a1b9ccc5e149a14e5ece78f95eb5ece773370780
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 20 13:37:14 2015 +0200

    move kill-job-on-all-nodes logic into TransportKillJobsNodeAction
    
    going to re-use that logic in other places too

commit 46cef6804084750f87b6dc7264ee63f4362cd838
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jul 17 16:29:49 2015 +0200

    QAF: do not rewrite to source lookup if symbol is part of orderBy

commit b13b8630c06ce64338c7527a420d6687ee9bc29b
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Jul 17 15:13:25 2015 +0200

    Fixed a rare bug which could cause a MapperParsingException
    if one creates a new dynamic array

commit 30ac94ca662d2b5c7b47311f884d47a0125eed50
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 17 13:46:59 2015 +0200

    reduce accessibility of ResultProviderBase
    
    doFinish()/doFail() shouldn't be called directly

commit ebce932535b78011f0085e51451e59e49a0e0193
Merge: ae55f09d91 20514358e8
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jul 17 13:08:33 2015 +0200

    Merge pull request #2322 from crate/h/added-travis-badge
    
    updated readme

commit 20514358e8b90e707d2ec6d353658dc00abfce94
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jul 17 12:04:07 2015 +0200

    updated readme
    
    - changed crate logo
    - added travis badge
    - updated tagline

commit ae55f09d91120ba460a50224d359a12bacf7f3da
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 17 11:20:54 2015 +0200

    use debug logging in TransportCloseContextNodeAction
    
    that the context doesn't exist is often the case and fills
    up the logs quite a lot.

commit eccc1c517e012deadcebef4f12ceef9233704c32
Merge: cba8b78d2a 30ca41253e
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jul 17 12:02:34 2015 +0200

    Merge pull request #2321 from crate/h/blobs-error-message
    
    improved handling of /_blobs REST URIs

commit 30ca41253e805a3f2dde44d90f3f0e8ced44d7cb
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jul 17 11:34:44 2015 +0200

    improved handling of /_blobs REST URIs
    
    to prevent invalid URIs from being passed to main handler
    where they raise missleading error messages

commit cba8b78d2a8a65da29b8858b04ef4318cab3896c
Merge: 079baca309 2a978be8f8
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jul 17 10:20:28 2015 +0200

    Merge pull request #2319 from crate/h/updated-client-readme
    
    updated README of client module

commit 2a978be8f8c9d7c326d452f4ee9103a3a6a55c4f
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jul 17 10:08:56 2015 +0200

    updated client readme

commit 079baca309089f1ee8719409e03a481d08fd19e2
Merge: 690ac0bb80 f151f3812f
Author: Michael Beer <michael.beer@crate.io>
Date:   Fri Jul 17 09:25:29 2015 +0200

    Merge pull request #2316 from crate/m/adapt-changes-0.50.1
    
    adapt and grouped changes of 0.50.1 testing

commit f151f3812ff935ccddb7840ed919e368e2c75029
Author: mikethebeer <michael.beer@crate.io>
Date:   Fri Jul 17 08:48:21 2015 +0200

    adapt and grouped changes of 0.50.1 testing

commit 690ac0bb80257eca253e288fa2bd9efe49a39dfa
Merge: 2a893f7582 68aa682c68
Author: Michael Beer <michael.beer@crate.io>
Date:   Thu Jul 16 17:39:33 2015 +0200

    Merge pull request #2313 from crate/m/update-master-changelog
    
    update master changelog according to new release

commit 68aa682c682011d5f4448eba51d8f4c1771244b6
Author: mikethebeer <michael.beer@crate.io>
Date:   Thu Jul 16 17:24:58 2015 +0200

    update master changelog according to new release

commit 2a893f7582c7c03274730af9ac0f6d4ddbe81584
Merge: 6e890645ac 4896ecc06d
Author: Michael Beer <michael.beer@crate.io>
Date:   Thu Jul 16 14:50:58 2015 +0200

    Merge pull request #2312 from crate/m/adapt-allocation-doc
    
    adapted cluster allocation params

commit 4896ecc06d433dca20bc5e87f1439ba61f6d188c
Author: mikethebeer <michael.beer@crate.io>
Date:   Thu Jul 16 14:28:39 2015 +0200

    adapted cluster allocation params

commit 6e890645acac1f8a89a0ee03a5f86cf73b95712a
Merge: 65a4321119 afea99e954
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jul 16 14:33:15 2015 +0200

    Merge pull request #2311 from crate/h/fix-doctest-master
    
    fix egde case in doc test setup

commit afea99e9547b3f4d3cd8347fca131b59ed81fd51
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jul 16 13:52:00 2015 +0200

    fix egde case in doc test setup
    
    use '0.0.0.0' as bind host in order to prevent binding to interface that
    does not support multicast

commit 65a4321119dd5daf5f1dc6a0d941f000893e85dd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 16 10:44:32 2015 +0200

    detect string array correctly if an analyzer is set

commit 81d18d75f113ac0a13f6bc7dcebd496323eeded3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 15 17:38:59 2015 +0200

    fix timeout handling in TransportBulkCreateIndicesAction

commit 0956095f3cec8189c2a69a387e80fde09c6e847a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 15 16:49:05 2015 +0200

    correct the BULK_PARTITION_CREATION_TIMEOUT default value
    
    was reported as 0s in the cluster settings but is actually
    10s

commit 7808209238586c77d1b66b67616c42a1be5da968
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jul 15 17:54:35 2015 +0200

    add node setting for downstream pages buffer size

commit c36048bb25e9891243c444952074f580e42009b9
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jul 15 17:43:36 2015 +0200

    implement broadcast distributing downstream

commit 27a476ab24187fa6f8eb7ec14b87b58dff80a8ce
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jul 6 16:47:14 2015 +0200

    distributing downstream will block now if 1 page
    is consumed and not yet sent to downstreams
    
    also rename existing distributing downstream to ModuloDistributingDownstream

commit 8632a3abd7e30a9a761d64b3006254312d6ca3ff
Merge: cad00148f7 85b253ed10
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Jul 15 17:29:54 2015 +0200

    Merge pull request #2303 from crate/h/try-fix-testlayer
    
     fix test setup for process tests

commit 85b253ed1037fed775ee2030ccce0abaabae2fef
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Jul 15 16:31:50 2015 +0200

    fix test setup for process tests

commit cad00148f7ffbdec64a6714a673cbfb53d09400f
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Jul 15 14:04:30 2015 +0200

    avoid global state in UnassignedShardCollectorExpression
    because they can cause inconsistent results on concurrent
    queries

commit 81e6085bf577dd6f05518e07de4a4a176b3b437d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 15 14:19:33 2015 +0200

    handle indices that are gone missing correctly in MapSideDataCollectOperation

commit d15e0c2716522e8e3d9941e30ce210c9836be4db
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 15 11:35:12 2015 +0200

    make sure refresh works if partitions are deleted

commit dd8efd27b3f8d48019de51352de597819bd4a310
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 15 11:20:07 2015 +0200

    fix indentation in DDLStatementDispatcher

commit b393b70dd96c6b1d7f0984381bc9f0de55e77e15
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 15 08:59:14 2015 +0200

    make context-close in FetchProjector synchronous
    
    Otherwise in case of a retry (due to shard failures) it
    could be that the context of the *new* query is getting
    closed by the NodeCloseContextRequest

commit ecfc3e3daa3dd208ca548a22b705fc629228c898
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 14 17:44:27 2015 +0200

    make sure that BucketMerger wait for all upstream results
    
    even in the case of failures

commit e547b6e6fedd9e7193906c703f5cb33b09fa337f
Merge: 0d1ed383e5 983d835c6f
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Jul 14 17:17:44 2015 +0200

    Merge pull request #2297 from crate/dobe/querieddoctable
    
    use DocTableInfo where possible as concrete implementation for user t…

commit 983d835c6f89ad917ffd29088748256d96c088e9
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Jul 3 11:20:30 2015 +0200

    use DocTableInfo where possible as concrete implementation for user tables

commit 0d1ed383e58d2a80dcbe09fb284c823a318e67a6
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jul 13 15:21:44 2015 +0200

    disabled auto-create index setting

commit 592377dfbf3c6958997e620f6134c95befe1c2ed
Merge: cb4e69d9f1 b02efd791e
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jul 14 14:05:16 2015 +0200

    Merge pull request #2296 from crate/h/config-fix
    
    make example of unicast host list in crate.yml more precise

commit b02efd791e6459ffe5108cbb3a55933b2f239866
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jul 14 14:01:14 2015 +0200

    make example of unicast host list in crate.yml more precise

commit cb4e69d9f10c0bbc25d733620774352ccd46743c
Merge: db462a61b2 55ea96a274
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jul 14 12:10:06 2015 +0200

    Merge pull request #2294 from crate/h/add-column-policy-to-information-schema
    
    add column policy to information schema

commit 55ea96a274b984f568e96df0772f07825fe2639f
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jul 14 11:54:38 2015 +0200

    added missing column_policy property in itest

commit 2a217faed1c26bca8f62f8fa20831e0c2ffbba32
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jul 14 11:49:24 2015 +0200

    added missing column policy to information_schema.tables

commit db462a61b25e2efb68a05f60f8059212df88e37e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 14 11:54:43 2015 +0200

    always set a result in DropTableTask
    
    otherwise drop table statements will get stuck

commit 1ac1e58af10740d9a094422eee4df4e334d6c672
Merge: 4ce02160f8 580d3d15dd
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jul 14 11:08:58 2015 +0200

    Merge pull request #2292 from crate/h/added-column-policy
    
    added missing column policy in SHOW CREATE TABLE result

commit 580d3d15dd41e6bae5f0cc153e122fee046a8174
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jul 14 10:57:52 2015 +0200

    added missing column policy in SHOW CREATE TABLE result

commit 4ce02160f8e7a654e23b9ce51ef50d1ab42ab856
Merge: 62078fdf6d ac9a2f5a4a
Author: Michael Beer <michael.beer@crate.io>
Date:   Tue Jul 14 09:31:01 2015 +0200

    Merge pull request #2291 from crate/m/fix-dynmamic-mapping-test
    
    fixed mapping issue causing flaky test on jenkins

commit ac9a2f5a4a01e7214b2b709a43c2ece18a0bf476
Author: mikethebeer <michael.beer@crate.io>
Date:   Tue Jul 14 08:11:07 2015 +0200

    fixed mapping issue causing flaky test

commit 62078fdf6de3e875aa623f57be42ebc707432f71
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 13 22:20:43 2015 +0200

    remove unused startCollect from CollectExpression

commit 051f435752e909a2453296ddd1a5ba4d58f68d8c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 13 21:59:49 2015 +0200

    replace duplicate CrateCollector implementations with one generic

commit 3b06048dedbdaa2d073ea58b3088919b9aba232d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 13 16:29:28 2015 +0200

    fix context unavailable race condition in FetchProjector
    
    Could be that ContextClose requests where made while fetch
    requests were pending

commit 8d12eedc3e3ec60b6bf42c5f65fc5b29aba2f15b
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jul 13 16:43:32 2015 +0200

    added missing locale to string format functions

commit 88db6b796d73ccda73aedd4bf13b6ca0efbf7806
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jul 13 15:50:35 2015 +0200

    disable auto-create index for killAll integration tests

commit fa9bd0f96b9bd507fb928229a83c1cc34e34ace3
Merge: cb995617f1 6bb8024063
Author: Chris Ward <chriswhward@gmail.com>
Date:   Mon Jul 13 15:51:10 2015 +0200

    Merge pull request #2216 from crate/cc/comb_docs_fix
    
    Cc/comb docs fix

commit cb995617f1983074167d84e64afe29905fb479e4
Merge: 8c4f35b301 b0086c53be
Author: Michael Beer <michael.beer@crate.io>
Date:   Mon Jul 13 15:49:39 2015 +0200

    Merge pull request #2283 from crate/m/update-admin
    
    update crate admin to 0.14.2

commit b0086c53befa30115d3dae9609cda53f01f1792c
Author: mikethebeer <michael.beer@crate.io>
Date:   Mon Jul 13 15:44:28 2015 +0200

    update crate admin to 0.14.2

commit 6bb802406380028559fcda2c7d4bbd803815635b
Author: Chris Ward <chriswhward@gmail.com>
Date:   Fri Jul 3 16:57:52 2015 +0200

    client and integration doc changes.
    
    Enforced line brea
    
    Fixed unnecessary line break

commit 8c4f35b301830328015af2c973f30d7735cb1c49
Merge: 5585c3b43a 57245bdb7d
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jul 13 09:23:51 2015 +0200

    Merge pull request #2277 from crate/h/travis-remove-itest
    
    removed graceful stop tests from travis run

commit 57245bdb7defdfb63430dd26adb76a1e22d44be3
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jul 10 16:51:44 2015 +0200

    removed graceful stop tests from travis run

commit 5585c3b43a198246c197d5e05404187562f88548
Merge: c593211f7d fa7d761613
Author: Michael Beer <michael.beer@crate.io>
Date:   Mon Jul 13 09:03:56 2015 +0200

    Merge pull request #2281 from crate/m/dyn-mapping-fix
    
    fixed flaky test at sql dynamic mapping

commit fa7d761613ebb10899f40dfe962c2c5774d259e4
Author: mikethebeer <michael.beer@crate.io>
Date:   Mon Jul 13 09:00:31 2015 +0200

    fixed flaky test at sql dynamic mapping

commit c593211f7d357e0da6ad36c64dc5b3a63fc666fd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 10 18:33:10 2015 +0200

    testing: fix flaky testRefresh() #2
    
    6942ccef8f4f2d59bb7f81faeaae0b6f8ea47e9e didn't really solve
    it since refresh_interval = 0 doesn't gurantee that the
    values aren't visible.

commit 6942ccef8f4f2d59bb7f81faeaae0b6f8ea47e9e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 10 16:54:43 2015 +0200

    testing: fix flaky testRefresh

commit abc93ec0af9823f7713e4afbc4f913b943c268dc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 10 16:10:35 2015 +0200

    extract Schemas interface from ReferenceInfos
    
    ReferenceInfos is one of those classes that pulls in a lot
    of cluster dependencies which is annoying for
    analyzer/planner unit tests because it has to be mocked.
    
    Extracting the interface will allow us to write a "static"
    stub Schemas class which can be used in tests.

commit 39196dee8e0518439182af3dafc6e88bf66fbbb0
Merge: 8c0f7dc746 3c30f579d6
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jul 10 16:50:01 2015 +0200

    Merge pull request #2263 from crate/show-create-table
    
    SHOW CREATE TABLE

commit 3c30f579d692ac27fc01f79aa5863486dfd7fe1c
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jun 29 16:51:48 2015 +0200

    added support for SHOW CREATE TABLE statement

commit 8c0f7dc746a12d7f40899cde7c5e8f2e0e1594eb
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Jul 10 14:56:30 2015 +0200

    Fix: If a kill was performed while a context was closed
    the kill could return before every context was
    closed, which caused some flaky tests

commit 86bc166d0f81c6efd3b1e91a0be72ad74e5acb13
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 10 09:21:50 2015 +0200

    make sure that the error message of SQLActionException is never null

commit 6b933ea27d9692bf2c534f441eca1cf7ceefba3c
Merge: a9fc4f155b 71d60d46e9
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jul 10 08:53:14 2015 +0200

    Merge pull request #2264 from crate/h/testing-port-fix
    
    make sure ports for test layer are unique

commit 71d60d46e97286c623c8e927714286ff9dead7f2
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jul 9 23:03:40 2015 +0200

    make sure ports for test layer are unique

commit a9fc4f155b5c17013164835048713881620ff6a0
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Jul 9 17:31:12 2015 +0200

    ensured that PageDownstreams don’t emit anymore
    when they are finished

commit 979bc57698da97d415c5136ced3bf7c22feeb0fe
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Jul 9 17:33:22 2015 +0200

    bypass request timeout when using BulkRequests
    in benchmarks

commit c9e4187218816e262a187ad0c75529d42d757403
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 9 15:13:24 2015 +0200

    simplify the TransportExecutor

commit 311ac066d2ca24c7e034be2e3055539f069265f5
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jul 9 16:33:54 2015 +0200

    added exclude patterns to sphinx configuration
    
    in order to prevent out/ folder from being built
    also updated sphinx command to print useful output

commit d41c5a1721d1c2f6c77f13f3ad6b5d587978123f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 9 14:00:35 2015 +0200

    testing: fix more flaky dynamic mapping update tests
    
    Replaces executeWithRetryOnUnknownColumn with
    waitForMappingUpdateOnAll calls because the former doesn't
    ensure that the mapping is updated on ALL nodes.
    
    A second query after the first one that used
    executeWithRetryOnUnknownColumn might still fail if it hit
    another node that hadn't updated the mapping yet.
    
    Also removed `testInsertNewColumn` because
    `testInsertNewColumnTableDynamic` tests the same.

commit b0a1f160c866a5f7f75c3d57e79bde03068bddb2
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Jul 9 11:29:54 2015 +0200

    fixed benchmarks

commit 22f576feb6c910bbfa655cd505c6dbcb834458b2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 9 11:58:46 2015 +0200

    fix stuck copy to s3 statements

commit 18314ddeb4209d42fd23dafa6c85353a57f65799
Merge: 7cc2d52683 b4aecb8afe
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jul 9 11:46:53 2015 +0200

    Merge pull request #2248 from crate/dobe/fixidpk
    
    do not use _id as primary key on partitioned and clustered tables

commit b4aecb8afe8dfc28978bb7384f13c50dd6d8841f
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jul 9 11:19:06 2015 +0200

    do not use _id as primary key on partitioned and clustered tables

commit 7cc2d52683a8550eab2c0773ccf199b7fa69f471
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Jul 9 11:38:36 2015 +0200

    fixed DocLevelCollectTest

commit 0348c8214b24d466779328acd7fe406a4a4379cd
Merge: 79ea766b33 a7f9a4d5c3
Author: Michael Beer <michael.beer@crate.io>
Date:   Thu Jul 9 11:10:49 2015 +0200

    Merge pull request #2247 from crate/m/update-crate-admin
    
    updated to crate admin 0.14.1

commit a7f9a4d5c302de9e7f2b85e3ba140584549d750d
Author: mikethebeer <michael.beer@crate.io>
Date:   Thu Jul 9 11:00:22 2015 +0200

    updated to crate admin 0.14.1

commit 79ea766b33ffc9e24c872fb7789c2ea5c10a9021
Merge: 6adf37e9de 14ff04fabf
Author: Michael Beer <michael.beer@crate.io>
Date:   Thu Jul 9 10:20:30 2015 +0200

    Merge pull request #2246 from crate/m/refresh-multi-table-update
    
    Inform about refreshing unknown tables

commit 14ff04fabf69d3911ff4c7decc1bbf03dd607369
Author: mikethebeer <michael.beer@crate.io>
Date:   Thu Jul 9 10:10:42 2015 +0200

    Inform about refrshing unknown tables

commit 6adf37e9de2572fdff11e8d7009fda8bb5a7b4ff
Merge: 9f2f4dcb5b 44a1031836
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Thu Jul 9 10:06:10 2015 +0200

    Merge pull request #2241 from crate/r/add-refresh-interval
    
    Add refresh interval to table settings

commit 44a103183675834bfd59b1146a5c417364c68433
Author: kovrus <ruslan@crate.io>
Date:   Thu Jul 9 09:24:10 2015 +0200

    added missing refresh_interval table setting in information_schema.tables

commit 9f2f4dcb5b5e68bc22a8dcfe4156be96510989b2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 9 09:17:55 2015 +0200

    remove numLeafUpstreams from the NodeOperationTree
    
    not really needed as the info is already in the MergePhase

commit 8788445c33ba6a3e6bde4d2de27eb7e90dbcd510
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Jul 9 09:06:27 2015 +0200

    Fixed a bug which prevented a retry if a shard was
    closed because of relocation

commit 3e239f18f9fdcb250d7f49f9accd804355c9d3a0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 8 16:31:27 2015 +0200

    clean up FutureCallback in NonSortingBucketMerger
    
    The FutureCallback used to be called for each bucket but
    since 3bd7d3ca it is called only once for all buckets so the
    listenerNotify stuff can be simplified and setNextRow
    doesn't need to be synchronized anymore.

commit 89b6160c1b068ae6e53d85d4eba5eb8c5fae49f2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 8 15:54:22 2015 +0200

    remove BucketMerger interface
    
    there isn't really a need for the interface, PageDownstream
    is enough.

commit c52a2070a04295ee84cfffe9c57a6d104cd5b81a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 8 15:00:14 2015 +0200

    plan QAF correctly if there is a rootRelation and orderBy or limit
    
    (that case is currently prohibited in the analyzer for
    inserts, but will be required for joins)

commit 850c789a45c1e23d4efabdec075f540810d9094f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 8 14:36:55 2015 +0200

    remove deprecated resolve calls from QueryAndFetchConsumer
    
    contract is that a (normalized) QueriedTable already has
    everything "resolved". So there shouldn't be any Fields anymore.

commit 775d9f168f755dafe30b58a0eb4721187728bac4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 8 14:01:06 2015 +0200

    don't plan aggregations in QueryAndFetchConsumer

commit bca3c7115d0fcf5442f05ce028184e602c6ec1f6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 8 13:20:58 2015 +0200

    don't build feature branches on travis until a PR is opened

commit 12bb4da4ac7dcae6daa78963c3f2f76c70ba15fd
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jul 7 20:48:07 2015 +0200

    updated changelog to reflect release 0.49.5

commit 01417e644f7fc81c0899d8244006e0a2b4cddcb2
Merge: 156790bc67 3b13e21b27
Author: Michael Beer <michael.beer@crate.io>
Date:   Tue Jul 7 15:55:51 2015 +0200

    Merge pull request #2218 from crate/refresh-multi-table
    
    Refresh multi table request

commit 3b13e21b279218ce287ebf6e49efa37e77fb981f
Author: mikethebeer <michael.beer@crate.io>
Date:   Tue Jun 30 15:56:10 2015 +0200

    added multi table refresh statement

commit 156790bc6729319c56d85e3e4c633ee80798630a
Merge: 2a3b17d8a4 54b0b8dd72
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jul 6 16:19:36 2015 +0200

    Merge pull request #2226 from crate/r/fix_sqlformater
    
    Fixup in SqlFormatter

commit 54b0b8dd723dc530d35ed7639cd7e21afbbf7e6a
Author: Ruslan Kovalov <ruslan@crate.io>
Date:   Mon Jul 6 15:55:43 2015 +0200

    Fixup in SqlFormatter.

commit 2a3b17d8a40b79b3eab87e2069fd061e66310590
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 6 14:01:10 2015 +0200

    testing: always use waitForMappingUpdateOnAll
    
    the waitForConcreteMappingsOnAll from the ES integration
    test class doesn't wait for the Schema/TableInfo caches to
    be invalidated and might still lead to flaky tests.
    
    waitForMappingUpdateOnAll operates on ReferenceInfos and
    therefore waits for the caches to be invalidated.

commit 4b7501ff3acd1bb1adf96ca28531af304622737e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 1 13:54:08 2015 +0200

    wrap ExecutionPhase inside a NodeOperation that has downstream info

commit e0e4b69301eab125cf2dc23d4610743096566f1f
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Jul 3 18:18:08 2015 +0200

    retry queries on IllegalIndexShardStateException which could occure
    after relocations

commit c9712389554dbdf239826b1516ee95ddc084d0d8
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Jul 3 18:04:07 2015 +0200

    Fix: If a kill was performed while a context was closed
    the kill could return before every context was
    closed, which caused some flaky tests

commit b7c3a34982d4e39d0681cba9814af68c11bbd13f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 3 15:14:38 2015 +0200

    throw meaningful error on copy <sys_table> to

commit 7f7af41cb6966fc39ad012d5fc3e2ecf09e98fa0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 3 14:43:01 2015 +0200

    testing: fix a few flaky tests

commit db75e2c1262122639e2637420906f996dbd1266a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 3 14:16:34 2015 +0200

    update gradle to 2.4

commit 0d8f60467eab4248f214fad76efbb7098bb66986
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Jul 3 13:27:54 2015 +0200

    Fix: JobExecutionContext threw a ConcurrentModificationException
    when reaper was called while contexts are closed

commit f94276be8f8f940f4e2771bdb4c74d44978b8e90
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Jul 3 10:54:00 2015 +0200

    Fixed flaky testKillGroupBy() test

commit 18239dbef8931c97bee868d3ea20c8c026dd55cd
Merge: bd485496b3 8fa4e06c7c
Author: Michael Beer <michael.beer@crate.io>
Date:   Fri Jul 3 10:24:26 2015 +0200

    Merge pull request #2210 from crate/m/license-update
    
    changed company name in license

commit 8fa4e06c7c169c46eed785515f7dbd984762bcaf
Author: mikethebeer <michael.beer@crate.io>
Date:   Fri Jul 3 10:19:49 2015 +0200

    changed company name in license

commit bd485496b333e965e3e61c283138b77b67a6a804
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 1 14:30:27 2015 +0200

    testing: increase sql request timeout on travis
    
    sometimes create/delete statements are really slow on travis
    as it seems :(

commit 7c9c1e11fa4d48137788510258f56b3767a6dd11
Merge: 88b8cfbf13 abd8daae41
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jul 2 16:29:49 2015 +0200

    Merge pull request #2204 from crate/h/fix-bulkdeleteparted
    
    fixed bulk delete for partitioned tables

commit abd8daae41ef461c15b4b3a3de61282048175ba9
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jul 2 14:48:22 2015 +0200

    fixed bulk delete for partitioned tables
    
    where partition column was part of the where clause

commit 88b8cfbf1365b94f9d6fbbe5c149a7ce94e73959
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Jul 2 14:18:27 2015 +0200

    - Fixed a threading issue in DistributingDownstreams
    that could cause some queries to return too few rows
    - Prevent DistributingDownstreams to send needless
    empty requests

commit 639020370a2e0151cfe09ce45e27386799c5e122
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 2 16:16:46 2015 +0200

    fix gitignore and add missing file

commit 8263accb0d62438fb5946e3c231bfe7669fdc505
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 2 11:34:57 2015 +0200

    avoid global state in sys and information_schema expressions
    
    can lead to inconsistent results on concurrent queries

commit ccebc339ffc7fa92c3a7bdbd4c522cf29f314d5d
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jul 2 11:12:31 2015 +0200

    fixed IS NULL lucene query
    
    that could return docs that already have been marked as deleted

commit 1ee87b31c0b94a638c8b68f748c161a266963165
Merge: 0ba2a1c2d8 759b222e6e
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jul 2 14:46:51 2015 +0200

    Merge pull request #2203 from crate/dobe/routingcalls
    
    ensure that getRouting is only called once per plan

commit 759b222e6e3cffd32c9059f4b59464dbb5acbf65
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jul 2 12:11:25 2015 +0200

    ensure that getRouting is only called once per plan

commit 0ba2a1c2d866f5d904fa7b2d0581fdcc57eae2f9
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jul 1 08:14:17 2015 +0200

    added proper unicode support to date_format function
    
    by converting to UTF16 string before formatting and converting back to utf8 bytesref afterwards
    as nearly every single format specifier needed to be encoded separately nonetheless

commit dfec6e9a2f9a615b46de849ce290b2d71765225f
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jun 11 09:12:25 2015 +0200

    implemented date_format scalar function
    
    in order to conveniently format date values.
    Format syntax is compatible to MySQLs date_format function

commit a572d35f9a749792f6eaaa267c952f54ab7d0d01
Merge: 5ed763bf50 c3c12d6738
Author: Michael Beer <michael.beer@crate.io>
Date:   Thu Jul 2 11:07:28 2015 +0200

    Merge pull request #2201 from crate/m/test-dynamic-null-array-in-bulk
    
    renamed test to make name more descriptive

commit c3c12d6738a484ad2c267a1727c727d96f221aa7
Author: mikethebeer <michael.beer@crate.io>
Date:   Thu Jul 2 11:02:54 2015 +0200

    renamed test and check if it is flaky

commit 5ed763bf50fe5f16e2152d9f0805ad548590c678
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Jun 30 17:54:19 2015 +0200

    Fix: Kill existing jobs before retry to prevent
    JobAlreadyExists errors

commit 75cf9ea2fb5f2dc6fe065fa36994067812853a4d
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Jul 1 11:02:21 2015 +0200

    improved doctest test suite

commit 76ea9cf2c2b853437d7dc6c4c3ae85e168218cb8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 1 13:58:31 2015 +0200

    testing: fix testInsertWithSymbolBasedUpsertByIdTask and testInsertNewColumnTableDefault

commit 73a77720f1718f47d48778af73e6f24f4f1f9490
Merge: 1a8f698215 cd914b583a
Author: Michael Beer <michael.beer@crate.io>
Date:   Wed Jul 1 14:24:18 2015 +0200

    Merge pull request #2198 from crate/m/fetch-hash-collide
    
    fixed hash collide in fetch requests

commit cd914b583a8bd924f71d35c29ed5c4f7e0e410c4
Author: mikethebeer <michael.beer@crate.io>
Date:   Wed Jul 1 14:13:20 2015 +0200

    fixed hash collide in fetch requests

commit 1a8f69821529e004b1e6cc832826106dcf548e3c
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jun 30 19:04:40 2015 +0200

    updated changelog to reflect release 0.49.4

commit f2f47af9dc73121d361a02c6192faf2195ff522b
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jun 30 16:49:48 2015 +0200

    fix flaky testCopyFromInvalidJson

commit 725cde91e8e5d2d5ddde99ac7c1ce9c26bca9235
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 30 12:23:26 2015 +0200

    rename ExecutionNode to ExecutionPhase
    
    to avoid the name clash with "executionNodes" which is a
    list of crate server nodes.

commit 2e29352f7484bdf9518823e57f24bb7cc975bef1
Merge: 3ec02b1af0 8162b19c4b
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jun 29 17:35:26 2015 +0200

    Merge pull request #2182 from crate/h/fix-order-of-genericproperties
    
    make order of table properties in sql formatter deterministic

commit 8162b19c4be3ecce72486c0085ac5d1c263c87e0
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jun 29 17:05:38 2015 +0200

    make order of table properties in sql formatter deterministic

commit 3ec02b1af08de72928354b1acb4827bbf8679a87
Merge: d6f2cc15c9 bdca6293cd
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jun 29 16:02:14 2015 +0200

    Merge pull request #2180 from crate/h/sql-formatter
    
    added support for CREATE TABLE statement in sql formatter

commit bdca6293cd9d7cc52d03e1a4a505e4c37b22b86b
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jun 26 17:10:18 2015 +0200

    added support for CREATE TABLE statement in sql formatter

commit d6f2cc15c908063e9717c50f29a0d8d54fabf04f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 29 15:14:01 2015 +0200

    disable paging in the FetchProjector

commit 22f520d2f65a52ea21037c3de462ca62b8dd7ba5
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jun 29 13:43:55 2015 +0200

    updated crate-admin to version 0.14.0

commit b3ace3d20b90d708062da3acec6581f7905548e2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 26 15:11:38 2015 +0200

    remove activeContexts assertion from JobContextService
    
    can fail due to a possible race condition:
    
    `JobExecutionContext.close()` is called in a different thread
    slightly before `kill()`. This will cause `kill()` to return
    without calling the `ContextCallback` because that is going
    to be called from the thread that called `close()` first.
    
    the assertion was there to ensure that kill leads to the
    ContextCallbacks being called `eventually`. That is also
    verified with unit tests so it should be okay to remove the
    assertion

commit 9eb2fc281b7e0a0ef931ba07c4e3f9059ad898c7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 26 13:10:03 2015 +0200

    move context close logic into FetchProjector

commit 3bd7d3ca8b7956830101e2188e1625e130f33173
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 26 10:35:03 2015 +0200

    make sure SearchContext is closed in all cases

commit 93a2015718f5ce3df5eb8ac182de905596ac21fa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 26 10:35:48 2015 +0200

    testing: make sure testSelectWhileShardsAreRelocating doesn't hang on errors

commit 4d961f939c1e1b6657eaf2461273bda3da6c2afc
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jun 26 09:15:22 2015 +0200

    fixed issue that could lead to deadlock and therefore freezing of a node

commit 85182f3f0e903f7a5b8eae3cd2ba48abbda5330f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 25 11:51:59 2015 +0200

    remove FetchAbortedException
    
    An Exception is used in the LuceneDocCollector to break out
    early of a collect operation because there is no other way
    to break out. But in the fetch operation there is no need to
    do so.

commit 46f0d56dfd3d1c7fb0e925ef7a20c9f439cd6ff5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 25 10:30:46 2015 +0200

    remove Engine.Searcher sharing logic from JobCollectContext
    
    This was (probably) intended to optimize self-joins but for
    that to work it would actually have to be done in the
    JobExecutionContext because the JobCollectContext is
    specific to one relation/CollectNode.

commit 97ab2129026d939b5b6f17978ca5c3ef1c1ac8aa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 25 10:25:48 2015 +0200

    add kill method to CrateCollector and remove JobCollectContext from doCollect
    
    a first step towards removing the circular referencing of
    Context/Collector.

commit 7db1331c7e1883484e194900c2939508edeab73f
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Jun 25 15:25:25 2015 +0200

    Fix: Querying from information_schema while a table
    is created could cause an error

commit 6e65acb5bdcefa08ba2e81caddb87494f9cc5906
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jun 25 13:48:31 2015 +0200

    better logging on COPY FROM error cases

commit a22873bcd810b9899e8935fb90c38d0db344c7f4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 25 09:26:01 2015 +0200

    remove RowCollector and AbstractRowCollector
    
              REMOVE
                              ,,
                             ';;
                              ''
                ____          ||
               ;    \         ||
                \,---'-,-,    ||
                /     (  o)   ||
              (o )__,--'-' \  ||
    ,,,,       ;'uuuuu''   ) ;;
    \   \      \ )      ) /\//
     '--'       \'nnnnn' /  \
       \\      //'------'    \
        \\    //  \           \
         \\  //    )           )
          \\//     |           |
           \\     /            |
    
              ALL THE THINGS

commit 8271601557a8bb1a3f581a6703ece987dbce2c16
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 24 16:11:42 2015 +0200

    fix NPE if _score is selected with order by
    
    In the `searchWithOrderBy` method the scorer isn't set on
    LuceneCollectorExpression so the ScoreCollectorExpression
    caused an NPE.
    
    Also removed the minimumScore check in `collect`: The
    ContextIndexSearcher wraps the LuceneDocCollector inside a
    MinimumScoreCollector so the minimumScore filter was already
    applied. (In most cases, for some `search` calls
    ContextIndexSearcher.Stage.MAIN_QUERY had to be set)

commit 60d02ca35df8a2e5c83b7c48f270a8a62695e81e
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Jun 24 17:50:52 2015 +0200

    selecting error from sys.jobs_log caused
    a NPE in some rare cases

commit 383d390614de853ef6ac842c1362528ebf49a4c5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 24 13:53:51 2015 +0200

    testing: log statement on request timeouts

commit 5b458889d82a8294673d5fe9f42aa8594ebe3e3e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 24 08:28:13 2015 +0200

    simplify exception handling in LuceneDocCollector

commit 443f29811f39c145ff1b978377d473d21259833e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 24 08:13:34 2015 +0200

    remove query null handling in LuceneDocCollector
    
    the query on the SearchContext is set using the
    LuceneQueryBuilder which always generates some kind of query
    and never returns null. Even if it would return null,
    matching all docs is probably not the right thing to do.

commit c90a150d75ba48946c4122357fb11301e577d662
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 24 07:55:49 2015 +0200

    add a SearchContextFactory to encapsulate CrateSearchContext creation

commit fbbac8b573eb080fd089cf7ddd23d6f8e5b53311
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Jun 23 17:47:47 2015 +0200

    fixed luceneDocCollectorBenchmark

commit d3089b088087c154d1ee0c8a572cd3d31819b4a6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 23 16:57:18 2015 +0200

    kill all: do not start subContexts if JobExecutionContext is already killed/closed

commit 5e69045b3fe2c0d31b15d84112925b8d6c9d5d5e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 23 16:53:17 2015 +0200

    testing: fix flaky tests in VersionHandlingIntegrationTest
    
    the routing is resolved before the where clause validation
    is done. If shards aren't allocated this will throw an
    error. So ensureYellow is required.

commit 24b1545385f0662636424ede7540531070251566
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Jun 23 14:20:59 2015 +0200

    Fix: If a query would fail because a shard starts
    to relocate during query time, the query is
    retried

commit 92b4f003c0e4bf3f652b99141a02e671e28141a5
Merge: de153daf6e 74b94815d4
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jun 23 14:07:50 2015 +0200

    Merge pull request #2154 from crate/h/admin-0_13_4
    
    updated crate-admin to 0.13.4

commit 74b94815d4c8acbb42913fa7c5fe5e45397220cc
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jun 23 14:02:19 2015 +0200

    updated crate-admin to 0.13.4

commit de153daf6e6c1c97b6cf0978cc69402ab9bf2846
Merge: f69a903ddd 488ab2c18e
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jun 23 13:44:50 2015 +0200

    Merge pull request #2153 from crate/h/plugins-fix
    
    load crate plugins only once on node start

commit 488ab2c18e5b08aa9a31e77d7d36aa3f293de0a3
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jun 23 11:15:43 2015 +0200

    load crate plugins only once on node start

commit f69a903ddd4284feb67366de4437f1962fe47f6d
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Jun 22 16:44:01 2015 +0200

    create jobId before execution, so it’s possible
    to retry jobs with the same jobId later

commit daaf5559477c45cde45d57a3b09e6893dd517d10
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 22 17:19:45 2015 +0200

    travis: remove oraclejdk8 from allow_failures

commit 2f3fef1612ff1f17ab6398356ca3a3e6765fe92f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 22 16:50:41 2015 +0200

    cherry-pick TransportExecutor changes from cross-joins branch

commit b71b19fb3961a625d58fe02a111154baedc457ff
Merge: 3ad8a0b655 ba9fc98ec5
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jun 22 15:13:59 2015 +0200

    Merge pull request #2149 from crate/h/fix-aggregation-datatypes
    
    instantiate certain aggregation dataypes on node start, not on first use

commit ba9fc98ec529b6e328a4fe069c62b565c9929486
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jun 22 15:05:42 2015 +0200

    instantiate certain aggregation dataypes on node start, not on first use
    
    which has caused a NullPointerException when one or more nodes in the cluster
    have not used the datatype before

commit 3ad8a0b655e87bae163909801f4eaf2efa83dc4e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 22 13:47:56 2015 +0200

    merge DDLPlanNode and DMLPlanNode into RowCountPlanNode

commit e7599fb50a9695dee7ebd7c603859f8c0e69dfa4
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jun 22 10:27:09 2015 +0200

    updated crate-admin to 0.13.3

commit 90586f313839086376d17fa307ee5ca4fa4a5e48
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Jun 19 17:15:52 2015 +0200

    increased speed of FetchPartitionedTable test

commit d3c8e225ed2a32ec31cc575efca2781669a08ca4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 19 15:07:49 2015 +0200

    testing: fix flaky doc tests

commit 36cb85bb6a463490e2d8b8811c198eb5fd4c4888
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 19 09:16:47 2015 +0200

    enable client only nodes in tests and fix a bug in sys.shard queries

commit cf66dedb1db2e51de3543902b2937385cbf7ec1f
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Jun 18 15:24:17 2015 +0200

    Fix: Fixed a bug where some searchers were
    not properly closed

commit 33519e92bdf086a89a01f6fa5915de4a2c876100
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 18 14:51:28 2015 +0200

    fix drop table if exists race condition

commit 5ab391874a90a588865080d130281a528b6f5dd1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 18 13:42:59 2015 +0200

    remove unused ForwardingFutureCallback

commit ab6c86a1d11031bdd5859aa7ca44cd433047ab11
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 18 11:39:56 2015 +0200

    fix a race condition in `ALTER TABLE <partitioned_table>`
    
    partitions could be deleted after the concrete indices have
    been resolves. Now the resolving of the indices is done on
    the master node.

commit 8546472963a0c5fd1d8a624bf4630c532b7feb8f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 18 09:35:38 2015 +0200

    testing: fix flaky tests

commit 1259c8e5c3124ecb305ebeafb3df4b47dbf0ced9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 17 17:29:32 2015 +0200

    start ExecutionSubContext in reverse order
    
    otherwise a Context that has an upstream could receive data
    before it is ready.

commit 9862d2df7909ec060ee1c6afdc49f81650260975
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 17 16:02:54 2015 +0200

    exit early in GroupingProjector finish if there was a failure
    
    return statement after downstream.fail() was missing

commit 7ee9eaf48918417b1319b2b2cbc4fd899acf4a94
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 17 15:36:35 2015 +0200

    fix stresstest compilation errors

commit 3747052dc2d2e3426b63bb00fba2f9316a465f3f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 17 14:45:15 2015 +0200

    simplify PlanNode interface

commit 303e31c4bc9ac64d642bbf6500a9634fa77551bb
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Jun 16 16:27:53 2015 +0200

    start Projectors on context start

commit cd84f72669cb61428dc3951436c1c7dda44a582d
Merge: c7b6a7aa87 09c8616963
Author: Michael Beer <michael.beer@crate.io>
Date:   Tue Jun 16 17:41:32 2015 +0200

    Merge pull request #2135 from crate/m/test-syscolumns
    
    changed test of syscolumn _doc causing a flaky test

commit 09c86169638a1650fb8919127086e006dc5a97b1
Author: mikethebeer <michael.beer@crate.io>
Date:   Tue Jun 16 17:09:09 2015 +0200

    changed test of syscolumn _doc causing a flaky test (iteration over map on jdk 1.8 is non-deterministic)

commit c7b6a7aa878aabd6400d2df0490e1eb2b810c8f9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 16 17:03:07 2015 +0200

    Change ConsumingPlanner/Consumer to top-down approach

commit 2e061d52c32087f6443949f38c597a81cefceda3
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jun 16 15:55:15 2015 +0200

    updated changelog to reflect release 0.50.0
    
    and set Crate version to 0.51.0 SNAPSHOT

commit 4016d0fbb3799e5c8266e44bbb01a446daf45c26
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jun 16 15:13:14 2015 +0200

    updated changelog to reflect release 0.49.3

commit cb72745567c25231c550b374197c26e7e48487a4
Merge: 658bd76c2a ec8d9c6a4e
Author: Michael Beer <michael.beer@crate.io>
Date:   Tue Jun 16 14:16:43 2015 +0200

    Merge pull request #2128 from crate/m/raw-query
    
    query on system columns (_raw, _doc)

commit ec8d9c6a4ed1c139a82194248aec8d440200b6e0
Author: mikethebeer <michael.beer@crate.io>
Date:   Tue Jun 16 14:14:48 2015 +0200

    div improvements

commit b627c37261b6123f333e3823b6bf88aa7696f13c
Author: mikethebeer <michael.beer@crate.io>
Date:   Tue Jun 16 13:34:13 2015 +0200

    reformat test case to 120 columns margin

commit 2b400d23b7350a2740e1c253246056a57a6db6a3
Author: mikethebeer <michael.beer@crate.io>
Date:   Tue Jun 16 13:28:12 2015 +0200

    added startswith condition around syscolumn check to speed up the normal case w/o system columns

commit e08a9260b84f3a515974ddbac2ef8a8f50e7858a
Author: mikethebeer <michael.beer@crate.io>
Date:   Tue Jun 16 13:10:55 2015 +0200

    improved full-source returning in ESGet task

commit 36f0f1ebaa4a5fc2896140ebf8b50d99e8fadb97
Author: mikethebeer <michael.beer@crate.io>
Date:   Tue Jun 16 09:55:00 2015 +0200

    added unit tests for system column queries

commit 268bb25e63c1218829e9aef4f74c426c3d4abaab
Author: mikethebeer <michael.beer@crate.io>
Date:   Mon Jun 15 18:16:52 2015 +0200

    added ESGet Request for _raw and _doc data on single request

commit 658bd76c2a73bcdf6f94a40ae7eee747a18b2ba2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 16 11:47:08 2015 +0200

    simplify WhereClause constructors and allow passing a Symbol as query

commit 672658501a0153ec0550f4f3b60eedb160bea00d
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Jun 16 11:23:11 2015 +0200

    Only apply default limit on QTF Plan if planned
    relation is root relation

commit 13bed16f7efe1b8022f5d60efe52ad931ed86462
Merge: bb4823b9f2 01b86344d2
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jun 16 11:27:33 2015 +0200

    Merge pull request #2130 from crate/h/crash-0_13
    
    updated crash to 0.13.0

commit 01b86344d26b8d4550b44060992c9efa2cdb81f6
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jun 16 11:22:45 2015 +0200

    updated crash to 0.13.0

commit bb4823b9f2ca63b9f2e861ba2335c7f16f969b3e
Merge: 80b09294cc a2d8443451
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jun 16 09:03:40 2015 +0200

    Merge pull request #2127 from crate/h/rest-status
    
    return correct status for ``GET`` requests on ``/``

commit a2d8443451c89871ee060fcd97a4a8bb2a9aab8a
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jun 16 08:51:43 2015 +0200

    return correct status for ``GET`` requests on ``/``
    
    while cluster is starting up

commit 80b09294cca50cc29ede8b4ca36ffcd4749ca3a6
Merge: ef9b032084 0ace098799
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jun 15 21:00:20 2015 +0200

    Merge pull request #2117 from crate/h/admin-0_13_0
    
    updated crate-admin to 0.13.2

commit 0ace098799322bc5205daa033aad44ebaaa660d8
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jun 9 22:23:46 2015 +0200

    updated crate-admin to 0.13.2

commit ef9b032084eba9b91763f4178109f9dcb80c05b3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 15 17:13:24 2015 +0200

    invalidate cache on create table table exists check
    
    Otherwise a script like the following would fail with a
    table already exists error:
    
        conn = connect('localhost:4200')
        c = conn.cursor()
        c.execute('drop table if exists user')
        while True:
            c.execute('create table user (id int primary key, name string)')
            c.execute('drop table user')
    
    This is because the ClusterStateEvent based cache
    invalidation happens asynchronous after the drop table
    statement has returned already.

commit 80824a7ffc8fe26e64bc1387463b74cadda8b7a5
Merge: 00e669301a db57c7a795
Author: Chris Ward <chriswhward@gmail.com>
Date:   Mon Jun 15 14:33:05 2015 +0200

    Merge pull request #2123 from crate/cc/doc_fixes
    
    Fixed several typos

commit db57c7a795e1fec42ff29587607feffa0555afbd
Author: Chris Ward <chriswhward@gmail.com>
Date:   Fri Jun 12 14:38:49 2015 +0200

    Fixed several typos
    
    corrected typo

commit 00e669301ab09e76735468446f3d4b83011ae679
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 15 11:57:03 2015 +0200

    fix Listener leak in ReferenceInfos / custom DocSchemaInfo
    
    The listeners that are registered in the DocSchemaInfo were
    never removed, causing a memory leak.

commit 39d7891dece193d8cff60557a6e06366dfc6cd30
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jun 11 17:41:31 2015 +0200

    only compile parser files if necessary
    
    clean task deletes old java parser classes, in order to regenerate them when necessary

commit 44a5a588d831e77af7638f568c6d3a475bf4f3d0
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jun 9 15:53:33 2015 +0200

    fixed incorrect comparison in query by IP type

commit b9755bee39a81a7adf9617a7357d03e519d39a78
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jun 9 16:51:00 2015 +0200

    fix all EsJobContext handling

commit c0da62a26cdc237dcf9e316f34c6803e75928e3e
Merge: ae70fa55a4 0bf70bb76b
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jun 9 11:24:16 2015 +0200

    Merge pull request #2103 from crate/admin-ui-node-stats
    
    new node stats

commit 0bf70bb76b361416d975406b464fbc3a5790d874
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jun 2 13:10:45 2015 +0200

    added node stats expression to sys.nodes table
    
    including process cpu usage and probe_timestamp for all cached stats
    values

commit ae70fa55a49b22eec9097067993aec5e1f09b46d
Merge: 1f4b74cebd e79d6f76e7
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jun 8 15:28:39 2015 +0200

    Merge pull request #2107 from crate/h/node-expression
    
    removed SysNodeExpressions from GlobalReferenceResolver

commit e79d6f76e789e7c626ae177e51617aa2175f1678
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jun 5 13:59:03 2015 +0200

    removed SysNodeExpressions from GlobalReferenceResolver
    
    also instantiate SysNodeOsExpression and SysNodeProcessExpression on
    demand and cache them in the resolver in order to be able to re-use the OS and
    process probes and achieve atomic os/process queries

commit 1f4b74cebd62c81bef0d2279495e0584eee1848b
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jun 8 13:39:12 2015 +0200

    handle exception while acquiring a searcher

commit c710eec3eba1e6af9349381e57d9d20eb2d314ba
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jun 8 12:01:21 2015 +0200

    close collect query context if exception occurs on collector instantiation

commit 2df625c26a69c934d955147435eb3b75d2c505b2
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jun 8 10:33:47 2015 +0200

    fix missing stats table log entry for delete-by-query stmt

commit 585f52e820a81388181a440ce64886616f6dd688
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jun 3 16:47:45 2015 +0200

    update CHANGES, add 0.49.2 release notes

commit a98541830ef1751d49d3002e78793d848f466904
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jun 3 15:34:38 2015 +0200

    fix LuceneDocCollectorBenchmark compilation

commit 7509b0072f5c29724267f576bdcb3d1ca41f5fc1
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jun 3 14:24:31 2015 +0200

    fix: pageDownstreamContext must close RamAccountingContext on close or kill

commit d365a77aad8c89633f6d38badc19bad3bdf0dd23
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jun 3 11:39:32 2015 +0200

    fix: close JobCollectContext after non-doc collectors finished

commit dced7f6db37ecc1bd3922c45d5cd3549ec6ede59
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jun 3 11:39:08 2015 +0200

    fix: close BulkShardProcessorContext

commit cca50ef5d8c1002a42e57e265cf11830d2d3567c
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jun 2 18:01:12 2015 +0200

    collect context has now sub contexts (query & fetch), which close themselves independently
    
    this fixes also a bug where the ram accounting context wasn't closed and so the circuit breaker counter wasn't reset on searches

commit c1fc9bfd92867322309392abc6fae551ecd96559
Merge: 418f9d275d 643bd5f4f3
Author: Eugene Pustovit <eugene.pustovit@gmail.com>
Date:   Tue Jun 2 21:01:35 2015 +0200

    Merge pull request #2099 from crate/e/schema-test-fix
    
    partitioned schema test fixed

commit 643bd5f4f3320dab4040458f9e29a7ea498c6021
Author: Eugene Pustovit <eugene.pustovit@gmail.com>
Date:   Tue Jun 2 20:46:45 2015 +0200

    partitioned schema test fixed

commit 418f9d275d9c43b28b3aa9b5bdebb7688b83a159
Merge: 4d5ae5c249 4f51224145
Author: Eugene Pustovit <eugene.pustovit@gmail.com>
Date:   Tue Jun 2 18:19:43 2015 +0200

    Merge pull request #2098 from crate/e/inf-schema-test-fix
    
    information schema test fixed

commit 4f51224145ccbb2d3da1e1ce537abb06b4e84263
Author: Eugene Pustovit <eugene.pustovit@gmail.com>
Date:   Tue Jun 2 18:01:43 2015 +0200

    information schema test fixed

commit 4d5ae5c24915b01ea36f0f32f80d1286dde683bf
Merge: 14d5a88003 f8aa76b45b
Author: Eugene Pustovit <eugene.pustovit@gmail.com>
Date:   Tue Jun 2 10:46:34 2015 +0200

    Merge pull request #2096 from crate/e/read-write-blocks
    
    documented and added tests for settings change for a single partitions

commit f8aa76b45b2bf0fa46f18d884bf3da74db026c1e
Author: Eugene Pustovit <eugene.pustovit@gmail.com>
Date:   Tue Jun 2 00:13:12 2015 +0200

    documented and added tests for settings change for a single partitions

commit 14d5a88003ba0162543a767c962612638e8ed213
Merge: 5f61879787 e2102ebcfc
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jun 1 15:19:19 2015 +0200

    Merge pull request #2095 from crate/h/column-tests
    
    fixed information schema column tests

commit e2102ebcfcdce6146705cd768b75e85404068326
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jun 1 15:07:44 2015 +0200

    fixed information schema column tests
    
    that expect a certain amount of columns

commit 5f61879787d4bc4100f59b07b9b3d3bdd38384d2
Merge: 873a7443d1 f24cce44c9
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jun 1 14:55:06 2015 +0200

    Merge pull request #2094 from crate/h/breaker-docs
    
    added missing settings for request circuit breaker

commit f24cce44c916678ae99e52c3a61be068876f182a
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jun 1 13:52:35 2015 +0200

    added new settings for request circuit breaker

commit 873a7443d11568f99486134e4aa77092294f3216
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 29 11:19:05 2015 +0200

    testing: set index.store.type and gateway.type for doctests

commit 67b02d34a9e3c1db026fd5b32c1c992f01641fe8
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri May 29 14:39:00 2015 +0200

    fixed flaky InformationSchemaQueryTest

commit fa8cd5d617ea53f77ada62fcc93fe1b45df8e773
Merge: 6a2257a46f 927824ed96
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri May 29 14:33:38 2015 +0200

    Merge pull request #2090 from crate/h/breaker-docs
    
    query circuit breaker

commit 927824ed96d747036b269c3eebc77975a540c163
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri May 29 09:03:20 2015 +0200

    make circuit breaker cluster settings settable on runtim
    
    and renamed missleading prefix `node` to `indices`
    
    Note that this is a backward incompatible change!

commit 6a2257a46fdb83a6b702f8924919865dcb8a0efd
Merge: 71d0b92502 6de828bdd5
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu May 28 17:09:36 2015 +0200

    Merge pull request #2087 from crate/h/settings-comparision
    
    made table settings of type timevale and bytesizevalue comparable

commit 6de828bdd5502fcd5c6a0d153e5d7e7e07cc512f
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu May 28 15:19:47 2015 +0200

    made it possible to filter on all types of table settings

commit 71d0b92502d11acc9517bf8a6445120b1c8a54b9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 28 16:54:36 2015 +0200

    testing: fix flaky testSelectNodeSysExpressionWithUnassignedShards

commit b86ab7fb8b2a85297ba071ef183ec263ea9105f9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 28 16:49:06 2015 +0200

    fixup! check killed state also in GroupingProjector

commit 0fbc610607405afd4d7fce79ca9446007f1af7ef
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 28 10:47:57 2015 +0200

    check killed state also in GroupingProjector
    
    finish() in the GroupingProjector is rather expensive. So in
    case of a KILL ALL it has to abort, otherwise the cluster
    load might stay high for quite some time.

commit c3989470aea19be41368ac95fffb5349fcfc3ad3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 28 14:50:29 2015 +0200

    re-use PARTIAL_COUNT_AGGREGATION_PROJECTION in InsertFromSubQueryConsumer

commit 7445d5f8b2e8476b119691db34f49377da1b40b2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 28 11:57:36 2015 +0200

    simplify FlatProjectorChain

commit ad5e1ba6fb50a8bfdb60630cc59c7006b15e017d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 28 12:16:09 2015 +0200

    testing: add timeouts for SQLRequests

commit 045aecaf01a06c7308a6b52aa2ba48336e042c34
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 28 11:27:32 2015 +0200

    require jobId in the ProjectionToProjectorVisitor

commit 3f22473846094e5d04c00d810d77badbf6ce7e01
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 26 21:56:03 2015 +0200

    interrupt active upserts on kill all

commit 69d64f7f72e617311cc0779c34174e2241c2042c
Author: Sebastian Utz <su@rtme.net>
Date:   Wed May 27 16:20:11 2015 +0200

    fix stresstest module compilation

commit dfdc943e02e8f28addff0c9dd5af700532c4c0ed
Merge: f6e213a541 a0386b1736
Author: Eugene Pustovit <eugene.pustovit@gmail.com>
Date:   Wed May 27 11:58:07 2015 +0200

    Merge pull request #2080 from crate/fix-table-settings-defaults
    
    fix-table-settings-defaults

commit a0386b173654a923003c7829a2c8212d0057514b
Author: Eugene Pustovit <eugene.pustovit@gmail.com>
Date:   Tue May 26 22:59:55 2015 +0200

    fix-table-settings-defaults

commit f6e213a5413f855f9da583eda4906dd6f98876c5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 27 08:41:02 2015 +0200

    testing: fix flaky testKillInsertFromSubQuery

commit c7259e98ed73e9ad7faa4ba10c91b5c757207ba3
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 26 16:25:58 2015 +0200

    fix row count when dropping exact 1 partition

commit 389d634039e6a87a660c39c7ff2d832790a0f47a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 26 11:55:05 2015 +0200

    change collect interruption to use a boolean flag
    
    Thread interruption doesn't work correctly in Lucene
    NIOFSDirectory. See
    https://lucene.apache.org/core/4_10_2/core/org/apache/lucene/store/NIOFSDirectory.html

commit 3fa072efd9651824255e6c38787efc26af4808dd
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 26 14:47:18 2015 +0200

    update CHANGES

commit 54cfe91adfec826f6363a0c0fbf1c23cc6281c71
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 26 14:25:54 2015 +0200

    add documentation about ``ALTER TABLE ONLY`` to import best practices

commit ed9d838253e6ad9901f394d68ff4c3fd84846d6e
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 26 14:02:15 2015 +0200

    add ``ALTER TABLE ONLY ...`` documentation
    
    also update ``ALTER TABLE`` sql reference

commit 454eca87bc9cd88ec69e8aebb35a39f61119745c
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 26 13:32:56 2015 +0200

    add support for ``ALTER TABLE ONLY ...`` stmt

commit 04a7daf26ddf5df207bc32f9fac3e90d64186a3e
Author: Sebastian Utz <su@rtme.net>
Date:   Fri May 22 17:55:34 2015 +0200

    add sql parser 'ALTER TABLE ONLY ...' support

commit 09cc648044d0323ef25f8c7c1bb59b2cad804c4d
Merge: 768d49c9d0 4d9c4db067
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue May 26 11:45:02 2015 +0200

    Merge pull request #2073 from crate/h/del-dns-cache
    
    delete fake DNS cache after test

commit 4d9c4db0670a4a8543a98a985d62290d7852a7a2
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue May 26 11:10:05 2015 +0200

    delete fake DNS cache after test

commit 768d49c9d0e9a2ad8b81f2217580c2c54fb12a29
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue May 26 08:41:19 2015 +0200

    updated crate-admin to 0.12.1

commit 4865eac2284f785dc17d9600e4c890907b8f0931
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 22 16:39:55 2015 +0200

    testing: change testSelectRandomTwoTimes so it is no longer flaky

commit c2170320a432d84df31bcbb2bff4b8f7c0a0ada6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 22 14:55:46 2015 +0200

    testing: fix flaky NodeStats.testFs

commit 059b94c57a1e87e29d9e543057c36540c0f47583
Author: Sebastian Utz <su@rtme.net>
Date:   Fri May 22 15:31:48 2015 +0200

    do not acquire new searchers inside a synchronized block

commit ccb7e658174e6d5a9064f5bcd44ca24f6e5a3235
Author: Sebastian Utz <su@rtme.net>
Date:   Fri May 22 15:30:51 2015 +0200

    multiply delay for acquireSearch retries

commit 1171cd01d2c1abe0a63facca5e0d1ad912c45b8d
Merge: 0ba4697d83 250cad004f
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri May 22 14:57:18 2015 +0200

    Merge pull request #2067 from crate/dns-disco
    
    added unicast host discovery via DNS

commit 250cad004f519d3f54e03e0bfd4eeaa638bae0a3
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue May 19 13:44:47 2015 +0200

    added unicast host discovery via DNS SRV records
    
    added dns-discovery module
    
    added test for parsing SRV records into list of discovery nodes
    
    more tests for SrvUnicastHostsProvider
    
    added documentation for srv discovery settings
    
    made DNS resolver configurable
    
    added note in documentation when DNS lookups happen
    
    order srv records by priority and weight
    
    added integration test for SRV discovery

commit 0ba4697d83c75b9e3a61dc1ffe43abeefa48935f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 22 13:47:59 2015 +0200

    fix delete/drop errors on partitioned tables
    
    could occur with concurrent deletes or if metaData across nodes are not up2date

commit 0a5ea93ecddbd446ba16b0b18467de8b0a869d20
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 22 12:08:31 2015 +0200

    fix custom blob path deletion handling
    
    previous logic was to delete the whole custom path folder,
    but the "is empty" detection didn't work so nothing ever
    happened.
    
    Fixes the "is empty" detection and changed the behaviour to
    only delete sub folders within that custom path.

commit b970ca1c848e966cf38f689267c4ca9093242a53
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 22 11:33:49 2015 +0200

    gradle: enable assertions for junit in intellij

commit be1f78fbd5f60b5c051b24ee7e9f97a470c16ecc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 18 16:34:24 2015 +0200

    use patched ElasticsearchIntegrationTest instead of outdated CrateIntegrationTest

commit 803c32da9e6dfa95c11faf6da1b5a5ee55cc582b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 21 09:12:35 2015 +0200

    support killing bulk indices creation

commit 0b9a7f7d6acb708268f3c01d96488389c3c4b7e1
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu May 21 10:03:18 2015 +0200

    updated changes to reflect 0.49.1 release

commit c92ed570aff0fd80b8fbfaeb1c07516990f9eaf8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 21 08:50:45 2015 +0200

    docs: document KILL ALL return value

commit 4923cc07ac2760f39aca845db2555734ed1aebe8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 21 08:39:55 2015 +0200

    gradle: remove outputs.files from ANTLR3 task
    
    `./gradlew clean compileJava` no longer re-created the
    parser

commit 9415b410ec8ec0ef1b4a83661988011a283a54fc
Merge: 253f834bb0 b772e899df
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 21 08:35:15 2015 +0200

    Merge pull request #2049 from crate/kill-all
    
    kill all support

commit b772e899dfb981a5895d00a343b494af9d27778e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 20 16:13:55 2015 +0200

    add changes entry for KILL ALL

commit c6355814c1e1c29bcc0400d74c44f035f7b86056
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed May 13 14:37:13 2015 +0200

    collector is considered interrupted in a broader sense

commit f39d72604121f8ace3425d1ad8c4b42285b9af6d
Author: Sebastian Utz <su@rtme.net>
Date:   Wed May 13 14:30:36 2015 +0200

    change kill job exception error code to 5030

commit f08201a884ac8daa4fb295de1d680742c9d16afb
Author: Sebastian Utz <su@rtme.net>
Date:   Wed May 13 08:33:05 2015 +0200

    increase version

commit bfb40f94e177a7fd2777eb778ca9a4ec7b33bd47
Author: Sebastian Utz <su@rtme.net>
Date:   Wed May 13 08:25:48 2015 +0200

    wrap CancellationException into a crate exception
    
    so the user gets a proper error message

commit 479f12b97e126e197f36f9996531606d6736e1bf
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed May 13 01:47:56 2015 +0200

    throw CollectionAbortedException in collect to abort collection properly

commit 6da1b249373ce00e814d5ad692d0a66ef3aec5eb
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue May 12 20:56:12 2015 +0200

    log killed queries

commit 22046d5dcf58d9fb34c573154e3fca52303a3dcf
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue May 12 17:54:26 2015 +0200

    implement killing collect operations
    
    by canceling their futures and handing cancellationexceptions to the downstreams

commit d42c8f74ea887a687a0add79cdff4a959d9f3809
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 12 21:12:06 2015 +0200

    integrate operation tracking into JobExecutionContext

commit e527104fc4566a583f8b832ab4a4f05b0972b633
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 12 21:58:21 2015 +0200

    add delete-by-query context & kill support
    
    also delete-by-query node supports list of where
    clauses, so planner will create only one node
    instead of a list of nodes

commit 2f41aee0dc80b136afe7aab45252f1fde79a11c0
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 12 21:13:33 2015 +0200

    add delete context & kill support
    
    also delete node supports list of ids(keys),
    so planner will create only one node instead of
    a list of nodes

commit 4acbd04ebfcbdcb8ed567235db3591df96c0e7ab
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 12 21:11:32 2015 +0200

    update Task and TaskExecutor interface (generics)

commit 374599eb52a0782f104344f731db8801e85623bf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 12 21:06:20 2015 +0200

    provide a start() method in the JobCollectContext

commit e1e1574c43bea205f5b1b3b1f10f80bcdb672a39
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue May 12 20:30:20 2015 +0200

    removed JobKillException and replaced it with CancellationException

commit 5b62e1e7b6abe043457e086b0359df7368d4dbdb
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue May 12 18:29:56 2015 +0200

    create SymbolBasedBulkShardProcessorContext
    and use it for UpsertById in order to kill
    UpsertById jobs

commit 5f3c3b69c30728216f21c68b827f17853822bd70
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 12 17:08:19 2015 +0200

    implement kill() in ESGetContext

commit 4d32435117878b923a2fd28b959329e535ec1abd
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue May 12 17:24:48 2015 +0200

    added kill() to SymbolBasedBulkShardProcessor

commit 80024eb5ba822598973f9a47233be77795fcfcba
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue May 12 13:56:29 2015 +0200

    expose collect operation futures and get rid of handler side collect operation
    
    Execute special handler side collect operations on the local node via MapSideCollectOperation:
    * unassigned shards, sys.cluster, information_schema
    
    this way we are able to get rid of handlersidecollect specialties and code duplications
    and can kill handler side operations easily

commit 1b8f36785cc9a0d0c8478825aa8e4c4c081987a8
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue May 12 13:54:21 2015 +0200

    increase timeout for CreateTableIntegrationTest
    
    and add better assertion

commit 82fe99f14fa5a9dc4f5f006605bec57739b4682b
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue May 12 13:50:28 2015 +0200

    set failure on downstream if collector fails

commit 741a4d3fcab31a6d79f0a8452cbab1fb72490542
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue May 12 13:47:44 2015 +0200

    rename ImplementationSymbolVisitor.process to extractImplementations

commit 6c1e7c485dcc99f5e53d5355bed93c3c778e63bd
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue May 12 13:43:18 2015 +0200

    typed clustersettings expression
    
    as it returned strings instead of bytesrefs for string settings

commit 4787ed29a267be9ec4028f36c68a6424b8f4576d
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue May 12 15:12:18 2015 +0200

    UpsertByIdContext prevent start if context
    is already closed

commit 9ae30a2e72800e5676ace550a03717112c5d95ac
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue May 12 14:18:15 2015 +0200

    implement kill on UpsertByIdContext in order
    to kill upsertByIdJobs

commit 7bc3b6fbaa8eaf90a2ef7bed3beb930240bce07e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 12 11:47:25 2015 +0200

    add reference docs for KILL ALL

commit caa8e3f187991a6c328abc87618feeef949a9ecf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 12 11:06:46 2015 +0200

    return number of jobs killed in JobContextService.killAll()
    
    instead of number of operations.

commit 2f862e3f423789971aa19d6da81f389bab5028e6
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon May 11 16:43:21 2015 +0200

    implemented kill PageDownstreamContext in order to kill MergeNodes

commit 167a1f3a3c837f69fa01395f3119f6ea54ea3b9b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 7 17:31:05 2015 +0200

    kill all: return how many operations are killed

commit 527dc395a732f45b920e8934b788fff398fe037d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 7 16:54:06 2015 +0200

    implement KillTask

commit cf0ef156d1fdaa343e78cd4822125fefeff50631
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 7 16:07:48 2015 +0200

    add killAll method to JobContextService

commit 1ed09e467fc2feabbacfeb98ae909c5a67f3b774
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 7 15:36:10 2015 +0200

    add kill() method to JobExecutionContext

commit 55224edd14ce010bc745d521ae17a3553bc9d77d
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu May 7 15:17:15 2015 +0200

    added possibility to kill CountContext

commit 27f94fb3f7d5939d2d14d6a6ac927d94720cb40c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 7 14:36:50 2015 +0200

    add transport handler for kill-all

commit 81549f319272c643fa7e5ad87cc7e7e9d6403d75
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu May 7 10:53:09 2015 +0200

    added support for kill statement up to task
    
    which throws an UnsupportedOperationException

commit 253f834bb089c8420e99e9857c7d5b51bb11691f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 21 08:23:17 2015 +0200

    add 0.48.6 release to CHANGES.txt

commit 028b81818cc11560a5e7070071e5c36c9ac6ea57
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 21 08:16:51 2015 +0200

    fix error handling in ChainedTasks
    
    could cause queries to hang

commit fe7753d9af9b7b02156e0360ecbaade7bc2f96a7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 20 16:40:13 2015 +0200

    optimize ``delete from partitioned_table``

commit e580fb48ec21364b287f730f596e0ff759bb84bc
Author: Sebastian Utz <su@rtme.net>
Date:   Wed May 20 17:02:19 2015 +0200

    fix example log4j config

commit 512fe2a4086dc6ce970cad086d3b80768de9683c
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed May 20 16:24:41 2015 +0200

    updated es/upstream

commit 62dde12c92643d542ba18fbc1b2b407860d067a0
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 19 21:01:28 2015 +0200

    fix bucket idx for handler side collects

commit c1e2f9da1d85867fbbe12f842ff1740d4e432319
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 19 21:00:16 2015 +0200

    handle concurrently dropped partitions while collecting rows

commit 42247b057bdbe5a12cb9db9d16d4fdd48e273333
Author: Sebastian Utz <su@rtme.net>
Date:   Mon May 18 18:06:23 2015 +0200

    pass exception to pageDownstream instead of throwing

commit 52fc9cc63ae6d8bbbcf9dbdac090ff0927a6a0f7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 20 13:37:19 2015 +0200

    remove unnecessary attributes from BulkCreateIndicesRequest/Response

commit a4002442ba59995921e57ece15b9d8c0a2a0c751
Merge: d4a14ea983 245dad9654
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed May 20 12:40:08 2015 +0200

    Merge pull request #2047 from crate/table-settings-feature
    
    added new table settings

commit 245dad965471a72b1c5020374feb13ee16df9dc0
Author: Eugene Pustovit <eugene.pustovit@gmail.com>
Date:   Wed May 6 15:41:02 2015 +0200

    added new table settings
    
    table settings can be set on `CREATE TABLE`
    and updated/reset on `ALTER TABLE`

commit d4a14ea9833aab8e9668120c6e9ac908ca1e0076
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed May 20 11:50:12 2015 +0200

    Fix: Updated es/upstream to prevent errors caused
    by too many cluster state updates when dropping
    tables with a huge amount of partitions

commit 7a8e83f0f2317ea09206ff39e3f5ae124d52820b
Author: Sebastian Utz <su@rtme.net>
Date:   Wed May 20 11:48:29 2015 +0200

    update CHANGES

commit 9e12f8142debd84b7bc299ddeda84ab19332d9d7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 19 12:04:28 2015 +0200

    optimize bulk index creation

commit 60be358d6df9041107a904c2919c5dcbf58d71d8
Author: Sebastian Utz <su@rtme.net>
Date:   Mon May 18 16:50:49 2015 +0200

    support multiple PluginLoader instances with different settings in one JVM

commit 8fea9a780bfde755fff966a7beedb38448d37ed4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 18 16:39:35 2015 +0200

    cancel Runnable in TransportBulkCreateIndicesAction on node stop
    
    otherwise closing the ThreadPool always runs in a 10sec
    timeout because the runnable won't shutdown.
    
    This slows down tests that start/stop nodes as stopping a
    node will always take at least 10 seconds

commit 18c925769b477904e21da254772c03bc657cc6e0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 15 19:56:11 2015 +0200

    remove outdated sql/README.rst and sql/DEVELOP.rst

commit f058e0a7fc1f628341827edbf7e58d225aed54f0
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri May 15 18:15:35 2015 +0200

    updated elasticsearch upstream to fix wrong
    query results on partitioned tables

commit 2965084b84a9cbac16f66dcddd95560a2b053142
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri May 15 18:11:20 2015 +0200

    updated changelog to reflect release 0.48.5

commit 3593f9a22723a9fe8d05cd20c639d411ff4e6b0b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 15 15:59:54 2015 +0200

    use write/readGenericValue with patch in upstream in ObjectType

commit d5007fb92fe200405621cc81d4da8c15e47cf82f
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed May 13 11:26:14 2015 +0200

    improve gradle build
    
    in order to not recompile dependencies when they should be up to date

commit 55c46169ecf4b5c2d082ad1653ce41129cc7e906
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 12 14:31:25 2015 +0200

    fix job context creation on get tasks, add test
    
    also solve idea warnings in ESGetTask

commit 404a269ada617a3f8b4cec8689612a12e1e9ef16
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 12 12:08:36 2015 +0200

    add a retry logic on SocketTimeoutException in the FileReadingCollector

commit 2a86c17a7ada79ff19e272b2f31b4745d2a795b8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 11 12:45:16 2015 +0200

    update aws sdk to latest version
    
    should fix a timeout issue that could occur, see:
    https://aws.amazon.com/releasenotes/Java/0082211660780598

commit 08ae0d75f1ed924169da7066127b14a4ac2dbfd9
Merge: dea1f778e1 865645802c
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue May 12 15:55:00 2015 +0200

    Merge pull request #2014 from crate/h/expr-refactor
    
    refactored abstract expression base classes

commit 865645802c646adbdddcc57bbaef7d7ee136e49b
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue May 12 14:39:57 2015 +0200

    refactored abstract expression base classes

commit dea1f778e1a25f546b8e0c88f5c99068a44ef2e7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 11 21:37:00 2015 +0200

    add the concat scalar function

commit 42115b27352a971030b6bb8ac6666f9b1c1cc38a
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 12 09:22:48 2015 +0200

    remove obsolete job context merge logic

commit c39f36d553a645f55c54eaf927c0f274c2f67218
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 12 09:21:58 2015 +0200

    remove obsolete UpsertTask

commit a2aedff8374ed18f269a40cea80763934ff75f60
Author: Sebastian Utz <su@rtme.net>
Date:   Mon May 11 17:00:32 2015 +0200

    send bulk UpsertByQuery request over 1 job action
    
    depend on multiple direct responses at job response support

commit 5941a57bdd86b20b9881b0f0dd3032f14f50c540
Author: Sebastian Utz <su@rtme.net>
Date:   Mon May 11 16:58:39 2015 +0200

    move jobId to ExecutionNode interface
    
    also it is now required and not a Optional anymore

commit 0815a576d645cbcc34a74af84bcbc6af0e935748
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 11 18:07:20 2015 +0200

    use shards from routing to determine unassigned shards
    
    Sometimes shards weren't displayed as they changed to active
    between the initial `getRouting` call and the
    UnassignedShard collection operation.
    
    Now it always displays all shards from the original
    `getRouting` call as unassigned (even though a shard might
    already have become active - in that case it will still be
    displayed as initializing)
    
    This also fixes `testSelectIncludingUnassignedShards` - that
    test was flaky because of this.

commit 181fc24b6f1825b8384575894d5a195624202a81
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 11 16:19:17 2015 +0200

    avoid TableInfo creation in ShardReferenceResolver
    
    ReferenceInfos/SchemaInfo cache the TableInfo so it is not
    necessary to rebuild the TableInfo from scratch in most
    cases.

commit 451029407f5836a9f85986bf055c8c734d4a68ea
Merge: 0f9fba25fe 930aa57042
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon May 11 14:29:11 2015 +0200

    Merge pull request #1989 from crate/h/es-1_5_2
    
    Updated Elasticsearch upstream to 1.5.2

commit 930aa570424e612ace2e07d554884cebf34050fe
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon May 4 12:09:35 2015 +0200

    update elasticsearch to 1.5.2

commit 0f9fba25fe3a2b4050aa71423e0397e633253e1e
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon May 11 13:03:54 2015 +0200

    Fix: removed unnecessary close context calls
    on CollectContext

commit b7b834e64ccf1478e186c4f73516c67b265431f6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 8 13:09:50 2015 +0200

    be more forgiving on trying to retrieve routing/shards for partitioned tables

commit 8be175691cc5f64ec3308fe7f88a47c082d8d1a1
Merge: 16ba8be7d1 38df63df9e
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon May 11 10:14:15 2015 +0200

    Merge pull request #1945 from crate/h/crash-0_12_0
    
    updated crash to version 0.12.0

commit 38df63df9efaad39d043e6751e62109fae2e7a53
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Apr 28 15:16:03 2015 +0200

    updated crash to version 0.12.0

commit 16ba8be7d1c2764e48caab0609514f7402427c29
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri May 8 16:46:18 2015 +0200

    Fix: In some cases a ``DROP TABLE`` statment does
    not delete all
    partitions. Now it's possible to repeat the
    statement in order to delete the orphaned
    partitions.

commit 35dda7743e8262c160aa2a83ca5b2e967363ba75
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri May 8 11:06:35 2015 +0200

    exclude es from showing deprecation warnings

commit 18a8a9785505bd684368a2da0995c45a30ec1f1f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 7 22:30:38 2015 +0200

    add IF NOT EXISTS clause to CREATE TABLE statement

commit e986d5a7a6f8318358eb7073d4d8b5373e0fc943
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu May 7 15:55:32 2015 +0200

    set Version.snapshot to true after release

commit ed426806ff03a291096cc71c6f841bd28eae697e
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu May 7 15:54:38 2015 +0200

    prepare release 0.49.0

commit 97a2d1d018e0c8fce43c7e2875e4c4ea28eeceeb
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu May 7 15:36:29 2015 +0200

    update changelog to reflect 0.48.4 release changes

commit a0ba64399e8825c95df1e544c9ac73c006cc764b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 7 13:55:07 2015 +0200

    move jobSearchContextId stuff from MergeNode to FetchProjection

commit 42ca77441d75c9baa9401ce7c89b6f7b6ad26856
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu May 7 11:35:53 2015 +0200

    Close CountContext on response or error

commit b0bdf4ecce01e3e1fc2e6899791f428c1b47d050
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 7 11:01:20 2015 +0200

    remove more unused code

commit 64940d4ab7529a89714f63949efc99bcb6e26982
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 7 10:41:31 2015 +0200

    remove unused CrateSearchService

commit 35c1c7e97ae9b760897bec9c7e0d8c1216cfe6b7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 7 09:47:58 2015 +0200

    remove unused code

commit 4d25e875895ec82a50b2b5543ba2df8ef7bfc31e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 6 21:21:33 2015 +0200

    handle EsRejectedExecutionException on blob upload

commit 326e843eb98c759ba09cb03a567123f7f2775020
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed May 6 21:17:45 2015 +0200

    unflake ReferenceInfosITest

commit aac7dc10af7a4a56fd5c9df8f2f3c5f6c21711aa
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed May 6 17:26:40 2015 +0200

    fix java8 javdoc creation

commit 58b4fc6eea21e0429b5716cc6816a9aac37d325b
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed May 6 17:25:45 2015 +0200

    remove bigarray stuff

commit f201552f612f2382fb744acbcb54ff18af19091a
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed May 6 16:51:14 2015 +0200

    fix javadocs warnings for java7

commit d18d59c3a93bea0a662caf3ed69469de2e509731
Author: Sebastian Utz <su@rtme.net>
Date:   Wed May 6 18:20:58 2015 +0200

    use SEARCH thread pool for job action
    
    thus we must not run operations in a dedicated search
    thread anymore also

commit 9d7c68bb47f1e9c418bca6dabf4eb867d6ca5b2f
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed May 6 13:24:07 2015 +0200

    change some deprecated stuff

commit 88c26e147b9dfa07b43474a68510bd00f6c489cd
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed May 6 17:04:38 2015 +0200

    added ESGetContext in order to register
    ESGetTask in JobContextService

commit ec5ef78ef8806510b5f3898374dc2bb40c708a29
Author: Sebastian Utz <su@rtme.net>
Date:   Wed May 6 15:32:30 2015 +0200

    remove freed bytes (accounted through .get()) from ram accounting context

commit ba4505e82fe5f92fabca1a82653b9fe716aaf8fc
Author: Sebastian Utz <su@rtme.net>
Date:   Wed May 6 15:31:22 2015 +0200

    optimize date_trunc scalar using compile api

commit 7554b40ff2b71c6ee3ba98434535cc57f966a2ba
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue May 5 17:24:32 2015 +0200

    fix update by id with multiple matching primary keys on different partitions

commit f6bc6938c1239467097f7828a9c67e9e113ef554
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed May 6 11:41:51 2015 +0200

    added UpsertByIdContext in order to register
    UpsertByIdTask in JobContextService

commit 0ace7e545e0a2f4a2d7f7abcd5dbc1e77a1967d3
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed May 6 00:12:14 2015 +0200

    correctly display initial and reset settings in sys.cluster.settings expression

commit bf352e8bc86d5773e1e569235c697641387887d6
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue May 5 17:22:30 2015 +0200

    add settings bulk.request_timeout and bulk.partition_creation_timeout

commit 0da28670c9ed36826de0f13ea3ffbcaef9b70143
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue May 5 16:56:11 2015 +0200

    removed unused UpsertByIdNode and UpsertByIdTask

commit 390daca0a51854d27af04171b90f130a9b8722f8
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Apr 30 21:55:52 2015 +0200

    update shardsizeexpression every 10 seconds
    
    in order to avoid an indexinglistener

commit a98361ed4e5283cd2c7ae5bf5fbcbedd923a5525
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon May 4 13:11:52 2015 +0200

    fix: performing queries on a partitioned table
    could cause unnecessary “execution rejected”

commit 3008857f6f24ffbbe7aef9c3925e4a208a887a4a
Author: Sebastian Utz <su@rtme.net>
Date:   Mon May 4 15:13:00 2015 +0200

    remove useless generic threadpool size setting

commit 315a62eb2125af64a103871147dd5f39f076f326
Author: Sebastian Utz <su@rtme.net>
Date:   Mon May 4 14:09:02 2015 +0200

    exclude overloaded ES classes while building single jar
    
    this fixes the default cluster name issue

commit 7762252871db9ed3938525a2f009888bd342a2cc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 4 11:52:00 2015 +0200

    fix group by with multiple group by keys and no order by but limit
    
    finish on the downstream was never called if
    downstream.setNextRow returned false

commit e0ce50585ca2ded80bdfdd52ba8eddef7a027ff2
Merge: 883b9b4a8f 0bc2718049
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 4 10:21:59 2015 +0200

    Merge pull request #1968 from crate/m/remove_update_stress
    
    remove UpdateIntegrationStressTest

commit 0bc271804937bd14caf04285c6b358fe2de87ea1
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Apr 30 21:17:23 2015 +0200

    remove UpdateIntegrationStressTest
    
    as it was replaced by ConcurrentUpdateStressTest in stresstest module

commit 883b9b4a8f5d71eb25be8d3f09cd15c410ee1c04
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 30 17:23:08 2015 +0200

    count operation: expose Futures for the callableList
    
    This commit changes the countOperation execution to expose a
    Future which wraps the underlying Futures which actually
    present tasks that are being executed by the underlying
    threads.
    
    This way if the future is cancelled the threads have
    ``interrupted` set and can terminate early.

commit c77b51c9fdc72cf3537d6fcfe5720ca5c78bc734
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Apr 30 14:54:19 2015 +0200

    add apache xbean to NOTICE

commit 53ac34c30657ca79dec457a4d62f60f58b035f89
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Apr 30 12:17:58 2015 +0200

    remove ES plugin scripts

commit 909039fc939541405b151fa78690154e494b0c5b
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Apr 30 12:16:12 2015 +0200

    support crate plugin installation under `plugins/`

commit d6d1945bd27b13f724c62ee65b7cdba14897105a
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 28 22:50:40 2015 +0200

    update CHANGES

commit d9491a7c27b45e1ad7da9de1b2527dc625cbcce6
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 28 22:17:43 2015 +0200

    add plugin documentation

commit 04ea389223527ecbcdca3b82ef2e05dbbe0f5bc6
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 28 09:53:17 2015 +0200

    implement plugin loader

commit e3fbeb61e4e695ea609ee2a05013b964154c0787
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 28 09:46:16 2015 +0200

    bind functions after registration
    
    this way plugins can also register own functions

commit 41ad677ab7340f211f312d4fdc2d193a77e8394a
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 28 09:32:48 2015 +0200

    use instance logger with package name on rest filter

commit 1690e6df19f187080a3e064d0863091021491447
Merge: 036b2dfdec eae58db5e3
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Apr 30 15:45:20 2015 +0200

    Merge pull request #1964 from crate/h/gateway-config
    
    documented gateway configuration

commit eae58db5e3f7f4eb988dad769634a84cfb9af574
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Apr 30 14:51:53 2015 +0200

    documented gateway configuration

commit 036b2dfdec9ac45a0e08b678d4ca233d4521982d
Merge: 18f04c93dd c4228baf6d
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Apr 30 15:36:53 2015 +0200

    Merge pull request #1960 from crate/h/improve-node-expr
    
    reduce overhead in node expressions

commit c4228baf6d00cdbb177b38c1514fa38766b67a4a
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Apr 30 13:16:32 2015 +0200

    reduce overhead in hostname and id node expressions

commit 18f04c93ddbdd19b4e7f0031e8e414464e7dbe93
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 30 14:36:48 2015 +0200

    Create and use a CountContext to execute a count operation

commit 5730b47283d9c9b1337463ae14498020e892f3ae
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 30 13:59:23 2015 +0200

    add a count(*) benchmark

commit 940b5d3c637922b45936d52ef907b82e1edbe278
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 30 13:42:56 2015 +0200

    use only 1 map for subContexts in JobExecutionContext
    
    to make it easier to use it for other SubContext
    implementations

commit ebaa6f0d8b171d7c976317bcc9c52295f38ce82d
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Apr 30 13:44:01 2015 +0200

    added lib-sigar to single jar

commit f7434712d4d1ca6b451f2c8628730038e7441d47
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 30 12:07:56 2015 +0200

    note that upgrade requires a full cluster restart in changes

commit 72f243c5aedc59935e175f85c28763277e30b273
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 30 11:02:51 2015 +0200

    docs: clarify serialization binary format compatibility

commit c641d27d5d2d0817ff40bb1b7971f072860df57d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 29 23:23:21 2015 +0200

    tests: properly cleanup tmp file

commit 6608317f22041c931813229494cbacda2d8e55f0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 29 08:56:25 2015 +0200

    reduce boilerplate code in Plan/PlannedAnalyzedRelation implementations

commit 072ee64bb80c2dabf6fe5e2df3b9985a81535719
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Apr 28 21:20:14 2015 +0200

    added crate-client to single jar

commit 38e2c9586c0c4c89b67e1350cb4579a3ed5877a6
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Apr 28 20:30:40 2015 +0200

    app: build sourceJar and javaDocsJar

commit 1e1b07d98d0f4f3afe89dfef1084d41ecf57b886
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Apr 28 20:31:38 2015 +0200

    fixed stresstest task

commit 1f9ed6177dd6e6aad7b51f42c7f7f38d8a060ba4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 28 20:35:49 2015 +0200

    use shortcut to call UpdateConsumer and share AggregationProjection

commit e65a6637fcee997118bdff3afda1544dc0407e74
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 28 20:07:20 2015 +0200

    do not create a JobExecutionContext if the given builder is empty
    
    the close-callbacks would never fire and the context
    wouldn't be cleaned up

commit 490e02e326afbe90b8bd5bc9f23170d7c18f90d8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 28 17:47:51 2015 +0200

    remove LocalCollectTask
    
    no longer in use

commit ea161249060593fbbff0e8bf9f9cd016dcfd44c7
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Apr 28 16:42:37 2015 +0200

    generify Bulkshardprocessors

commit abba7cec913e728eb527be46168d4adf28f650c1
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Apr 28 17:03:12 2015 +0200

    ommit version hash when uploading app archive

commit d585d0a3f01b33df41bfc5230da6620a163787ca
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 28 16:38:10 2015 +0200

    use CollectionBucket in QueryResultRowDownstream
    
    in order to avoid the ``.toArray`` call

commit 3a1c3c1a3517a1520714b141f3174e02c1eac106
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Apr 28 16:23:03 2015 +0200

    updated changes to reflect 0.48.3 release

commit 9cdd758d59c5cda32f1095e63e7a1447c4743d39
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Apr 28 15:41:03 2015 +0200

    moved getVersion to core so client does not
    depend on ‘app’ anymore

commit 344a4e803e65c0559c22af953543d67e9b71761e
Merge: 96c5559fac 91c5f8b334
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 28 15:16:20 2015 +0200

    Merge pull request #1942 from crate/j/count-operation
    
    replace ESCount with CountNode/CountOperation

commit 91c5f8b3343f8f3292a0cc51fb28f2e85f019d16
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 28 15:05:04 2015 +0200

    make CountOperation threaded

commit c3e33d9565954aff061f5ee850f243a275fe6cdb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 28 14:16:16 2015 +0200

    remove ESCount and use CountOperation instead

commit 25fdaec407e596710922776c9996e0bdea1097a2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 28 11:22:24 2015 +0200

    add CountOperation

commit 96c5559fac78ee2d133a2c5e0a1191beaf2fc253
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Apr 24 15:27:29 2015 +0200

    - build single jar including all crate components
    without dependencies
    
    - use single jar for distTar

commit bed686f1342bac6f4a995f7c0a25a3886ba63ed7
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 28 14:58:41 2015 +0200

    include java client in crate distribution

commit bab995c74929ce10eb276e26a2ce7ee9f671f4a0
Merge: e2f28134d6 9004ed6c9d
Author: Eugene Pustovit <eugene.pustovit@gmail.com>
Date:   Tue Apr 28 10:05:50 2015 +0200

    Merge pull request #1937 from crate/ep/max-string-length-doc
    
    String length restriction documented

commit 9004ed6c9d952aa10f3c1f346ba840dfd6794ee4
Author: Eugene Pustovit <eugene.pustovit@gmail.com>
Date:   Tue Apr 28 10:03:29 2015 +0200

    fixup! String length restriction documented

commit e2f28134d62f19dc66de9007119cc1693d17c8d2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 28 09:44:29 2015 +0200

    avoid warnings in ShardingProjectorTest/SortingTopNProjectorTest

commit ead683833582392b3b76d3ae86e3c047ed07beb7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 27 20:45:44 2015 +0200

    use NodeAction transports helpers in TransportFetchNodeAction

commit 6490d337df1b09552a6ff81b12e2d6457e0c32a2
Merge: 9a0cb9a5c8 1cdac1dd4e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 27 20:25:18 2015 +0200

    Merge pull request #1938 from crate/incremental_results
    
    internal paging

commit 1cdac1dd4ea57d0621810b6876f02fcbc1a0e136
Merge: 032ab6f06b 9a0cb9a5c8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 27 18:00:30 2015 +0200

    Merge remote-tracking branch 'origin/master' into incremental_results

commit 032ab6f06b7995bbd633050331ade4b12423aab5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 24 17:27:27 2015 +0200

    impl self-closing context handling

commit 42372266e287483dfc2de33a54121a4ab985c00f
Author: Eugene Pustovit <eugene.pustovit@gmail.com>
Date:   Mon Apr 27 17:46:51 2015 +0200

    String length restriction documented

commit 9a0cb9a5c8482c9c897d2217629238a5898cc091
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Apr 24 17:04:59 2015 +0200

    check for going a shortcut before waiting for indices
    
    to be created. Or else if nothing happens, the operation can get stalled

commit 32070313af1b196c815bc0387564b0f2be591cb2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 24 15:52:46 2015 +0200

    change failure handling in PageDownstreamContext
    
    In the next couple commits the context handling will be
    changed so that the PageDownstreamContext will destroy
    itself if it is finished/failed. In order for that to work
    finish/fail must not be called until all upstreams are done
    sending requests.

commit 738e2f2a33c01d8366216d2e5b30851faab2e5b2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 24 15:23:51 2015 +0200

    fix onFailure handling in DistributingDownstream
    
    if the downstream responded with a failure the
        DistributingDownstream sent that failure back to him
        instead of aborting.

commit 3996cb7f98deec749e73f64128a18cb1d1f1cdcd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 24 14:33:47 2015 +0200

    change the operationId on sys.operations to be an int
    
    Externally it is still a string as before (so no breaking
    change).
    
    But internally it will use the executionNodeId. This is
    actually a more meaningful information in regards to what
    kind of operation is running.
    
    In addition the random UUID generation isn't necessary
    anymore.

commit dc0b836969e21c871d17a1dbac5678f2192c3449
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 24 13:36:21 2015 +0200

    remove LocalMergeTask and RemoteCollectTask
    
    both have been replaced with ExecutionNodesTask

commit 7a7719698e9704539099353dbd20c27a40ab6eb7
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Apr 23 22:51:49 2015 +0200

    use termsfilter for IN and ANY in COUNT and DELETE queries

commit 1afd8142ff7c2d84b5e0e3b21cc633e852dcd3b4
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Apr 24 10:00:33 2015 +0200

    adding changes entry for commit f1c96b5 and baf36c4
    
    preventing timeouts when importing data into a partitioned table

commit baf36c43bdb84bbd25fe0017dcbbf81171d713fa
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Apr 23 13:35:45 2015 +0200

    process all BulkCreateIndexRequests sequentially
    
    by consuming them from a queue.
    
    And wait until indices made it into the cluster state before adding them to the BulkShardProcessorQueue

commit f1c96b517d6d4f31ada5c7b42da49f5a41c12869
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Apr 22 10:13:59 2015 +0200

    prevent errors while creating too much partitions with one import
    
    be it bulk INSERT, INSERT from subquery or COPY FROM

commit c4fd8c1cf76896eaac9db576e7675d5ae7e786d9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 23 22:20:31 2015 +0200

    remove test only LocalCollectOperation

commit 42b637a0c640444f145b9ff10ded8d5bb41b885a
Merge: 09b6527290 095a1f20f4
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Apr 23 17:47:19 2015 +0200

    Merge pull request #1924 from crate/h/adminui-0_12_0
    
    updated crate-admin to 0.12.0

commit 095a1f20f464ff5cebb2b28494c44a2fe460e2ec
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Apr 23 17:41:55 2015 +0200

    updated crate-admin to 0.12.0

commit 09b652729044528c4e8aa04f733f20f928fa1388
Merge: 06933655e8 ad10f6c601
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Apr 23 14:18:44 2015 +0200

    Merge pull request #1923 from crate/h/expose-http-addr
    
    expose rest url in sys.nodes table

commit ad10f6c6013b57b99b1cafd3ce97cc85baa496d9
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Apr 23 11:35:28 2015 +0200

    expose rest url in sys.nodes table

commit 25e202683d0d6ac164dcfe6099c798b9eae756b2
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Apr 23 10:50:37 2015 +0200

    fixed tests after rebase

commit 900eb9188e9d229a669d77b132eee9372fe488c2
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Apr 22 15:34:18 2015 +0200

    removed deadlock from PageDownstreamContext

commit 4872a634ac9ee87b899cfae7d8a9982912d00816
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Apr 22 11:46:07 2015 +0200

    use correct thread pool size

commit d9b34a55c342b847c2b8cbe95a3ae991cb71150b
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 21 11:37:56 2015 +0200

    add executionNodeId context layer for the JobCollectContext

commit 2a5b23e617d03df8d4274f2ae9d0c5787b5348d7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 22 11:31:58 2015 +0200

    re-use code in TransportCloseContextNodeAction

commit 3ffc03bc035389c3463402a105474f5286fef94d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 21 17:57:10 2015 +0200

    use local operation shortcut in DistributingDownstream

commit c776fac85d8f229e685681ef7f3500c38df9f399
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 21 09:22:30 2015 +0200

    use ExecutionNodesTask for global aggregations and non distributed group by

commit 6424bc2dc2fe9e85fe339a957181634012c8abc8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 20 17:08:41 2015 +0200

    use ExecutionNodesTask for QAF execution

commit 7f3444a6183ffc4e059f5e35c4661193eb892ff2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 16 18:11:40 2015 +0200

    remove old context handling

commit 785ac4a5e8fab1d8b2579f1abb90a6e48cc6ab54
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 15 17:48:43 2015 +0200

    execute DistributedGroupBy using new JobAction/Context

commit 5d93f33b7d361c932417ba27bdf061c3d8e6a7a3
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Apr 15 12:13:52 2015 +0200

    make distributed downstream pageable

commit ef5f0ff25c6d30daed9557bb2892a0d01d194b9d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 16 15:15:57 2015 +0200

    clean up code in Task
    
    moved code from the CTOR in ExecutionNodesTask to the
    start() method to be able to inject the downstream later on

commit 256b702d94407c0babbf678f3084f27f46944b76
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 16 12:03:30 2015 +0200

    handle possible "context doesn't exist" race condition
    
    a DistributedResultRequestHandler might receive requests for
    a context that doesn't exist yet.

commit c5e9920c454095dad970cc40a86dc6931fe44b71
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 16 11:44:44 2015 +0200

    extract ResultProviderFactory from MapSideDataCollectOperation
    
    will use this to create the downstream for MergeOperations

commit 212e478d8c7b2c2b5ca95923157d88be68c93353
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 15 15:03:30 2015 +0200

    add some more unit tests for qtf push

commit b3f493675e30dcd57319407a0a8e45e985bcb0f3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 13 18:12:03 2015 +0200

    add a push based QueryThenFetch variant

commit a28220063993afc2590157570f2b102046159632
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 13 16:00:11 2015 +0200

    add executionNodeId and bucketIdx to DistributedResultRequest

commit 71ee912f5ced1813f301cafe1805c3342e4fcc71
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 13 15:16:17 2015 +0200

    rename TransportMergeNodeAction

commit 868a4551ca26166b16c2bd1cae8db402eb838812
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Apr 15 11:11:36 2015 +0200

    clean up job action handler
    
    - simplified MapSideCollectOperation handling

commit 75a1671a561149350bb2a7602a256f5cbf459579
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 13 11:48:06 2015 +0200

    add jobExecutionContext to JobContextService

commit ab157884efb11a36d391c0e5e1b2f76d32659e30
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 13 11:16:21 2015 +0200

    rename CollectContextService to JobContextService

commit c2dbdab7335eebdc08ce21494b443e5795a4e068
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Apr 10 11:05:33 2015 +0200

    add incrementing execution node id to all execution nodes
    
    MergeNode implements ExecutionNode now

commit ac4ee36b12870a09734b631e9a332d357abf20ca
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Apr 9 15:26:22 2015 +0200

    use materialized Row at StreamBucket

commit 828ce6e7cee07f63211d58b4783647ef6ae51747
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Mar 27 17:40:55 2015 +0100

    replace collectnode action with first attempt of JobAction

commit 4d94a5a3079decfa944941a85362388405836538
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Mar 26 14:30:18 2015 +0100

    create ExecutionNode interface and let CollectNode implement it

commit a203bcebaedbc5dad721ad6910c9edd008ff3fce
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Mar 11 16:23:15 2015 +0100

    make collectoperations collect to a RowDownstream

commit 06933655e859d7267b115d0f7b1f13d0c0118e67
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Apr 22 11:46:07 2015 +0200

    use correct thread pool size

commit fa001985cb7a4a7fe9b34a9c852e14b5c8e1fad1
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Apr 22 11:25:31 2015 +0200

    fix InNumericBenchmark

commit c043038f53413ebd88fdbec21967cd5d1ab9cd2a
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Apr 22 09:53:20 2015 +0200

    use TermsFilter for ANY/IN with numeric literals

commit 9e33a70d489b11516b4b4b5b9fd0f5cf76a0bb40
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Apr 22 09:44:21 2015 +0200

    add IN benchmark with lot of literals

commit e426d636eb7e4ba7c9ae2899676f8cc4a66a7d1d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 21 16:24:37 2015 +0200

    change ensureYellow to also allow green in SQLTransportExecutor

commit fb0d2d01ad9be88aae655fd12ce922ad3428caed
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 21 14:59:50 2015 +0200

    remove tests from TransportSQLActionTest that are also in ArithmeticIntegrationTest

commit 7b0ff09bf6934a3ca8d33905f05aacd5e7b2df71
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Apr 21 14:40:24 2015 +0200

    update changes to reflect 0.48.2 release

commit ae6f31bdf6f4b25662c08ca744d06551728f5a0e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 21 09:58:30 2015 +0200

    change timeValue cluster settings to string type
    
    LONG is wrong as they contain the unit. For example '30m'
    isn't a number

commit 5a7a86f556b404108db32b8d7223039eca6b808f
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Apr 21 13:57:49 2015 +0200

    updated changes to reflect 0.47.9 release

commit 9d8da6ad289ef6e9d1853fc1c26d129695be8008
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Apr 21 13:28:53 2015 +0200

    Fix: non distributed Group by with no match did
    hang

commit 1ef9f388d116b61a3cef0d96298aa0097949ec1d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 21 11:17:42 2015 +0200

    disable group by on reducer optimization for partitioned tables

commit abff03dadd2dcf98f297e9459a630e2ffeee0589
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 20 21:18:06 2015 +0200

    don't create new threads in OutputS3

commit 0d49e78b146e2fe03311773f4b7cea9aadb8afce
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Apr 20 20:54:59 2015 +0200

    fix bench or stresstest test dependencies

commit 8fe285c00937be41812fafbfd72fa7a910387f32
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 17 10:12:08 2015 +0200

    use TermsFilter for Any/InQuery with string type

commit 3f55ca7e33a8abf4d3242b43a1c8948343ca03b7
Merge: dcff40f418 ed016ecf78
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Apr 20 16:37:36 2015 +0200

    Merge pull request #1904 from crate/h/udc-http-disabled
    
    http.enabled=false caused UDC module to crash on startup

commit ed016ecf7808e32d2a5dbae7e09c9c80eff99562
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Apr 20 15:21:15 2015 +0200

    http.enabled=false caused UDC module to crash on startup

commit dcff40f418c1bcc8f062af556137c008b68c1290
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Apr 20 15:46:52 2015 +0200

    fix partitioned bulk insert benchmark
    
    uniqueness of primary keys was not guaranteed, random number of partitions created, not really comparable

commit 154663ca1973ad252d3737b59a77dd4d58ba47cc
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Apr 17 17:41:14 2015 +0200

    added concurrent test framework

commit a1d6efb034a63755c571cdd547861f14e7cc0a17
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Apr 17 16:54:07 2015 +0200

    move benchmarks to stresstest module

commit 0aa0484a5f4f6f4a9d9770401aed73c2c42c1865
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Apr 16 15:23:02 2015 +0200

    coordinate bulk operation retries once for every cluster node on each node
    to optimize waiting times for retries

commit 7d28d7b4dfab46542006f0520a82a5097980eb20
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Apr 16 11:32:30 2015 +0200

    fix travis ci execution

commit 73415b95c13ebab7ee392d9ed5bf6ef8f9c2f05a
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Apr 16 11:32:04 2015 +0200

    apply testForks to all test tasks

commit b859cd00fe4d3e85e137e77340f9a66b0ee2c105
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Apr 15 15:55:44 2015 +0200

    fix warning about missing bootclasspath
    
    when crosscompiling for java 7 compatibility with javac from jdk 8

commit e089b40b4b5f04cd07324c38ec29c362a0626511
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Apr 16 15:28:46 2015 +0200

    LuceneDocCollector optimization: Filter for all
    ordered values

commit b92c683fd71a019e379037723c991eca07be7473
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Apr 13 11:51:05 2015 +0200

    LuceneDocCollector: filter for already collected documents on ordered
    queries

commit 1e89bad548d4646e00ea1d8eff42964927792251
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Apr 8 14:34:02 2015 +0200

    do internal paging in LuceneDocCollector

commit 76e477f87abbc9381e3433ed60653b83bb556b05
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Apr 13 11:13:58 2015 +0200

    use ClusterState.nodes().localNodeId() instead of ClusterService.localNode().id()
    
    as there are cases where the node is gone but from the cluster state but the localNodeId is still there

commit 86496f65abb1709b1134ac6d9e1bfd4cb286af94
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Apr 13 14:51:38 2015 +0200

    include synchronized .start() and .stop() on InternalNode from es

commit 1af42c5a6ccab568d4224e6e7f5a259388c9de29
Merge: 464ccd8a25 98d5d747f5
Author: Eugene Pustovit <eugene.pustovit@gmail.com>
Date:   Mon Apr 13 09:50:54 2015 +0300

    Merge pull request #1881 from crate/ep/unsupported-schema-fix
    
    Added exception on unsupported uri schema.

commit 98d5d747f520810043cb6945654fc327ff733116
Author: Eugene Pustovit <eugene.pustovit@gmail.com>
Date:   Sun Apr 12 22:21:46 2015 +0300

    Added exception on unsupported uri schema.

commit 464ccd8a258f3eae083f29f85b3a0526751e50aa
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Apr 10 10:55:20 2015 +0200

    use planner for creating a count(*) plan at DDL dispatcher
    
    (cherry picked from commit 63960e9cdcfa2ed55e7aac042e0f9ea7d8d27abc)

commit 1ce1c943f5402133ef932ab8e888001f15e35196
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Apr 9 15:05:55 2015 +0200

    clean up fetch projection integration test
    
    (cherry picked from commit 5d1d810301748386bc5adf69cba9b6746b87564b)

commit 5acb3e8bd8c7f740a75f290f2507032f350a3eaf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 10 15:38:57 2015 +0200

    generify  runFetchThreaded/runCollectThreaded and clean up interfaces

commit e94d97078b8b41380b6ea887b5d3e736992c14e2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 10 11:20:28 2015 +0200

    remove unused distributingCollect method overload

commit b5b787eb09c32eb67eaf09bb383e3a45cc9df0f5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 9 15:23:20 2015 +0200

    fix like on sys tables for multiline content

commit 2d6001058dccf86d7d43940279f1a30d3fe3a16b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 9 15:07:37 2015 +0200

    add generic evaluateIfLiterals functions
    
    Most normalizeSymbol implementations can use this in the
    future.

commit 6ee639e9debdd63387fafb384228245d7969f8cf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 9 16:45:12 2015 +0200

    add explicit order to doctest to be deterministic

commit e858c90f656cfc09c5fd9b36c3f36d273bc37ba7
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Apr 9 13:54:50 2015 +0200

    update CHANGES.txt to reflect changes from 0.48.1 release

commit 038e52897e6159d687a489978db439363f376ebc
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Apr 9 09:16:19 2015 +0200

    updated admin ui to version 0.11.5

commit c7429ce0c6880d5b8dfaaa0c4ddb434266b9ee88
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 8 15:54:35 2015 +0200

    remove assignmentColumns from InsertFromSubQueryAnalyzer
    
    not really used

commit 42ae95c36b60b2f30c61262d7d11a72ce3bb3339
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 8 15:36:32 2015 +0200

    fix static test data creation
    
    renamed InformationSchemaQueryTest to
    StaticInformationSchemaQueryTes and fixed the optimization
    to only create the tables once for the class.
    
    It didn't really work because Test classes are instantiated
    for each test method.

commit e86b3fc2bb2b3bb9fa03d98f863106ced62101d3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 7 17:15:12 2015 +0200

    change the implementation of the request defaultSchema

commit a2e316258b1e5e3971f6d44bbd86c9d9e2dca659
Merge: bc0aacd863 d0d9321d29
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 7 18:13:14 2015 +0200

    Merge branch 'fetch-operation'

commit bc0aacd8631d49c5992a09d358febb945e80b847
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 7 17:27:39 2015 +0200

    remove getReferenceInfo from ReferenceInfos
    
    Was only used in tests.

commit d0d9321d29f32acd404aae0dccb26ff11de2afa5
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 7 17:23:58 2015 +0200

    make NoOpProjector instance final

commit 64ea22fee71f780924cc1c117684fab772c4e45d
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 7 17:23:45 2015 +0200

    move PAGE_SIZE to Constants

commit 84e799679a9586f04ff94b335ca2239e6965740b
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 30 18:00:24 2015 +0200

    define fetch position as int instead of long

commit f2ce94b250dd0ef7f06bf7983d94ea9740144600
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 7 12:05:10 2015 +0200

    rename MergeOperation to PageDownstreamFactory

commit 995f72bd0708453481154a4a78d9ef90db1a1631
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Mar 31 21:43:28 2015 +0200

    use ArrayDeque instead of LinkedList at merge projector
    
    also check for BytesRef first on StringType, increases performance

commit e36dd3e48562d8377a92906867dc0a3e23b1b8a7
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Mar 31 16:53:58 2015 +0200

    do not use fetch projection if not needed

commit 480b4c0aa25d429ec82dde71113498acef60b267
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Apr 3 16:57:28 2015 +0200

    synchronize on activeContext lock on close

commit 6f2e162f2238c5c0e0ac0f0c96618f172e9a6942
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Mar 31 12:32:44 2015 +0200

    fixed LuceneDocCollectorBenchmark

commit 8377ba8a07a966f1228fc261f3d54624fa06e6db
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Mar 31 12:47:21 2015 +0200

    optimized merge projector
    
    - decreased synchronized calls to the required minimum
    - simplified code

commit 9ba2659f395dd23bc6a612a28d166f5831c82fe6
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Mar 31 12:12:31 2015 +0200

    temporary excluded LuceneDocCollectorBenchmark

commit afe354afd2f4c752b8064e6f09a5d4b07012f15d
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Mar 30 13:17:48 2015 +0200

    removed ESQueryThenFetch

commit 629bac6b2e8f407babba8917301d4de6916dd1a6
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Mar 30 11:04:15 2015 +0200

    fix LuceneDocCollectorBenchmark

commit ea1363cae5df0f849e9fba5baaea48c206258325
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 30 13:55:17 2015 +0200

    fetch docs in chunks(bulkSize) if limit is higher than default one

commit 29f2c6df5f6becee16cd1f7376d3a5d698f6d577
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Mar 27 17:05:39 2015 +0100

    moved LuceneDocCollectorBenchmark to correct namespace

commit 70e0addf5c7fdb88995bf2b8f9314bbbaeeb5655
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Mar 27 16:11:38 2015 +0100

    reverted adding OrderedRowDelegate

commit b84be21a9df35b9c005661e3deb477872eddd005
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Mar 26 18:04:01 2015 +0100

    fixed sorting in bucket merger

commit 53fb1f705d255557731bf86e38d6d394f6bae10c
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Mar 26 12:11:01 2015 +0100

    order by _score must be defined explicitly now

commit 5c08d4bcc7e1f4c4a616726832d846f92c53669d
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Mar 25 16:50:10 2015 +0100

    make Upsert and NonDistributedGroupBy printable

commit e9b9e39e6b5d1008314dafd8db2f368f7215f888
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Mar 25 16:49:01 2015 +0100

    only finish GroupProjector once

commit f3043dc29747e0a9b990bb475d71c90b7468d6d0
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Mar 25 16:31:10 2015 +0100

    fix SortingBucketMerger on similar sorting values
    
    who returned too early

commit 7b9e9b5dac79dc3eca695c212e288a9d50c4df00
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Mar 25 15:25:13 2015 +0100

    QTF: apply default limit also on TopNProjection

commit 7028d1dc28f0826c1a790b10624f754cea613b5d
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Mar 25 13:53:35 2015 +0100

    fixed NPE when applying limit on CollectNode

commit 600f5d7a47131f380abac992a3e0048c93b55555
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Mar 25 11:52:08 2015 +0100

    fix limit on collect node (offset must be added to the limit)

commit 046d2cd6346032549156d5639e2e44b1bc02aeaa
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Mar 25 11:01:40 2015 +0100

    support limit without order on lucene doc collector

commit c6913de1fc675aed5682ef9aa8d35eca9483fe5c
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Mar 24 16:20:15 2015 +0100

    replace ES QTF SORTING with collect & fetch

commit 3861cc07f80ed05bf2a11aae263e4b4a1b287b8b
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Mar 24 15:16:52 2015 +0100

    LuceneDocCollector: emit OrderedRowDelegate if
    orderBy contains values which are not selected

commit 24f07defe7397ac08f297c39da149a41ef535a4f
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Mar 24 09:45:26 2015 +0100

    fix flaky merge projector test

commit caf7fc8f645e7792da16432530ccfe2c0926e666
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Mar 4 16:54:12 2015 +0100

    Added MergeProjection

commit 03a177e2c547534de40a9b1bfe5e0f58a61c3ac3
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 23 16:43:43 2015 +0100

    use cache for partition values at fetch projector

commit 361b159d052c2b9583c7e259082bc7997d000394
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 23 13:33:07 2015 +0100

    extend all new unit tests from CrateUnitTest
    
    also fixed flaky positional merger tests

commit 5ae62fb6b336b14809920618369d3248419d664a
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 23 11:03:49 2015 +0100

    validate order at fetch integration tests
    
    using new order support of collect & merge nodes

commit 33ad5796a73cd80e9a148172c942dca872c245ba
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Mar 20 15:28:08 2015 +0100

    add materialize() method to Row interface
    
    let the row implementations decide how to materialize,
    instead of using Buckets.materialize().
    they know best how to do it, they often don't have to copy anything

commit 705b41b0ebec1879624b7ab69eb5d74dbd26ead2
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Mar 19 23:28:05 2015 +0100

    replace non-sorting QTF with collect & fetch projection

commit 9e258da94ed49ebf7c53836dd44626bdd5eaa521
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Feb 24 16:51:03 2015 +0100

    Added possibility to order in LuceneDocCollector

commit ab8101016b3ddbc3c3b83fc72cf7d336199a441e
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Mar 20 13:43:18 2015 +0100

    fix fetch-operation tests

commit 0f9b530f5e7efc979cee6fcfef69dfdb9f1ab6f2
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Mar 17 12:00:32 2015 +0100

    use sorted bucket merger in qaf and group by routing/pk

commit 402adced9579d308ee8843ccb0971ae1086fb153
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Mar 17 11:39:14 2015 +0100

    added benchmarks for sorted qaf on sys.shards and group by on routing column

commit a9b153830748fc4f0077a294fd0c4d827a24d632
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Mar 16 15:09:51 2015 +0100

    only run MergeOperation in ThreadPool in LocalMergeTask

commit 24b5ddaa8519577763110785b0af0b1e54d0e81e
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Mar 16 14:03:27 2015 +0100

    change ResultProviderBase to only setting the resultfuture
    
    by adding doFail/doFinish methods so subclasses can handle their stuff in both cases

commit d2f8ab4a25b4f096e697efa87581c6af41ed6058
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Mar 13 16:27:43 2015 +0100

    make MergeOperation a Singleton

commit 3643f2f6fbcb6e784b5b13ad650b0b28fbaac6bf
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Mar 13 14:03:12 2015 +0100

    remove unused code

commit 9ab8718d3b33a5f2acd088c43574d3d906d5947c
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Mar 13 12:06:25 2015 +0100

    unify bucketmerger implementations

commit 2d51682824348ea587f53adbb2d98ac715b8dd7e
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Mar 13 11:36:40 2015 +0100

    add concise .toString() method to all bucket implementations

commit 0a25d86104595e745308a905c63d3e9fd20e7d48
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Mar 13 09:15:21 2015 +0100

    use non-sorting bucketmerger at MergeOperation
    
    which currently only receives one page

commit 0fe5a543ef243240a455188fe4e457dc9cfe2780
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Mar 12 13:10:40 2015 +0100

    remove offset and limit from SortingBucketMerger
    
    and fix a bug with a certain arrangement of buckets (first one exhausted before second one)

commit 9bb927dd5895b266f42ffacae9e1475c72b34573
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Mar 9 16:17:08 2015 +0100

    implemented non-sorting bucket-merger

commit 1ebda9da501dd84ac7d86bc50462da5abe977862
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Feb 28 11:04:10 2015 +0100

    BucketMerger: Don't wait for all buckets
    
    It will now block "lazy" on need.

commit b20a51961c7cd0a8f6c3355693a22385e6243635
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 25 14:39:30 2015 +0100

    add BucketMerger which can be used to merge buckets

commit 3da1b1e38fbc5e4466a74450a0b7df945dfe63c6
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Mar 17 17:51:54 2015 +0100

    fix powermock issue with jdk >= 7u65

commit 49b441d1162d9dfc8a52b8316438acfa37f687e6
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Mar 6 12:16:59 2015 +0100

    implement fetch-projection

commit 2fe0b6415c7da180f0cfd2932f60304f6bef5802
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Mar 6 16:48:30 2015 +0100

    lift fetch related code to Bucket/Row interfaces

commit 1a4aa0d83c6d58689adaabe3ba6231c80cccc8b1
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Mar 4 09:35:45 2015 +0100

    implement node fetch operation incl. transport action

commit 9a59b2ec2f851c96ab515f541cdb9b4c1e291e56
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 2 16:10:13 2015 +0100

    register lucene collector under JobCollectContext instead of the search context only

commit 651de5ba14e7485c5ff283c320f45a00e7d5b3d5
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Feb 25 22:05:00 2015 +0100

    make CollectContextService jobSearchContextId aware
    
    added more tests for CollectContextService

commit 71aa8eac441d81e66160f81b07e3d152fb3f5b59
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Feb 25 13:41:03 2015 +0100

    properly cleanup searchcontexts after creation and after each test method

commit d2c560b5d74e148b26f6ec055d30e8b33ee2e1bc
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Feb 24 22:12:03 2015 +0100

    implement `_docid` expression
    
    reference implementation for collecting reader doc id's
    usable by a fetch operation

commit 6f2d52b8fd89fa19c501f6f199569a520e9d0d53
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Feb 23 17:02:52 2015 +0100

    create sequence of fetchIds for every related shard of current job

commit 741258e3697054b34505478462ee816af721a959
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Feb 24 14:54:49 2015 +0100

    implement node level searchcontext registry
    
    waiting for job-scoped shard sequence ids

commit 23e4108b1cb275f55256ac00198db01af6df095f
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Apr 7 12:03:42 2015 +0200

    fix: documented minimum java version

commit 8e3ea4902d9dc73e26d5492745ab9f32cec12f1b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 7 10:59:48 2015 +0200

    update crash for doc tests

commit 57634eff74e206d3f509134c58b12eb893019440
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 7 09:55:09 2015 +0200

    add high limit with fetch phase select benchmark

commit 8046f92be4540a252cb717966f9007630206fe8c
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Apr 3 18:56:04 2015 +0200

    update CHANGES.txt to reflect release 0.47.8

commit c971358505822e3d1c5f6ba638a0aca525799656
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 3 14:55:21 2015 +0200

    serialize transport headers in SQLRequest

commit 910ee6f4f2ffe17e127a778a78a37e216f55d8ff
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Apr 3 16:14:26 2015 +0200

    updated crash to 0.11.5

commit 39b95b0c3d84f9dff2e9775bf7d04541547fbfb7
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Apr 3 15:32:56 2015 +0200

    only log channel closed exceptions on TRACE level

commit ca9202ddfd16437600a5a2a99965ff5722adbca4
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Apr 3 14:51:27 2015 +0200

    ignore empty lines in COPY FROM

commit 7d42db3f81f71d555a8ef16f31234571a119c6f5
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Apr 3 14:49:10 2015 +0200

    remove unused setNextLine from LineCollectorExpressions

commit 953701327f4154120a11557bc13a41098d5acf91
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 3 13:57:43 2015 +0200

    improve null handling in SQLRequest setDefaultSchema

commit a5e272bc5646077003e2445a4182adfdde80e566
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Apr 3 11:19:03 2015 +0200

    added benchmark for ANY and IN operators

commit c307f901abccab58861a54b22147c06775930169
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Mar 30 16:18:37 2015 +0200

    use ANY operator instead of IN internally
    
    to support more than 1k elements.
    
    And extended usage of the ANY operator to query for array literal ( column = ANY ([1,2,3]) ).

commit bc74480d5db3346574aaca9f119bf34a2d0d545c
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Mar 26 15:36:49 2015 +0100

    changed handling of ANY comparisons to be more straight forward by swapping the internals on the evaluation level

commit 5c0d962e523d469e7d9deb073b19dbe83edcb117
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 3 10:01:28 2015 +0200

    add docs for SQLRequest#setDefaultSchema

commit 93ebc138c45c5fd7c24332e78eb98a7e99cffef5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 2 15:35:08 2015 +0200

    support setting the default schema in the SQLRequest

commit 565958002025425bcd76fd94575c0cfb49bd4a3a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 27 16:09:42 2015 +0100

    java 8 compatibility fixes

commit 736f07032c85c8aa60d56e59ef08be8d8e3d07c4
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Mar 31 10:21:38 2015 +0200

    increase limits in select-limit-order benchmark

commit 9b073a4ec387406a443833d426c6283af46cc874
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Mar 30 11:24:50 2015 +0200

    correctly format Strings with ENGLISH locale
    
    to be independent of user locale settings

commit 17dc05769c861824a47fa2e7faa569d3198566ca
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 26 17:54:21 2015 +0100

    correct multi-zone setup example

commit de583fe522e32e0bcd022aadad53a18a55f3ce7d
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Mar 26 22:02:30 2015 +0100

    add group vs arbitrary benchmark

commit 44092abdcdef5a1b1d2c1def88617bd3b89e821d
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Mar 26 16:57:23 2015 +0100

    add select benchmarks with high limits and offsets
    
    also change benchmark namespace

commit 276a785afc09c159814597203a25d486da5b17b6
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Mar 24 09:27:20 2015 +0100

    exclude slf4j, include log4j, change descriptions

commit 23648332e203085da297b1c0d38e2c49c81a9fb2
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Mar 24 14:31:45 2015 +0100

    test ordering by all primitive types

commit db27df4d0c74718a094296b521b2d2abfe03ebeb
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Mar 24 14:31:34 2015 +0100

    fixed ip type conversion

commit b0d3c297ebddc89617e4df6e06269688aef5c7ca
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Mar 23 16:24:04 2015 +0100

    ensure sorting on a dynamic column in a partitioned table works in all cases

commit fa901c418d50005cf284d1addffb1b200d89aada
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Mar 23 13:58:07 2015 +0100

    Fix: Grouping on a dynamically created column of a
    partitioned table could cause a Null Pointer Exception

commit 91b4fe95c6d62bbe8ef4af74fc57927dc3a61729
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Mar 23 15:48:57 2015 +0100

    include spatial4j and jts in crate client

commit c0ca8de04154acdf18430f95862008711a317a6a
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Mar 20 16:37:44 2015 +0100

    create shaded client jar

commit 4c8bdfdc0749af0a203a9b5b726595bd450fa139
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 20 18:13:29 2015 +0100

    remove unused docInputSymbolVisitor from ProjectionToProjectorVisitor

commit ffec0097ea00f655908a3f92ccf927628b4b8441
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Mar 20 16:57:02 2015 +0100

    also fix closing symbol based bulkshardprocessor

commit e3801650ec49eb6b98cec6ce0915d5e165172755
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Mar 20 14:06:01 2015 +0100

    support filtering by `_score` on group-by queries

commit 819b74e2c93d180e309d933a4a23ffae34db2a0c
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Mar 18 16:18:37 2015 +0100

    do not shutdown the BulkShardProcessor with pending requests

commit b162a2af88494e46e13bbbe0754e89e6d99eeb44
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 17 17:31:13 2015 +0100

    fix LuceneQueryBuilder for "x = null" where x is numeric or boolean
    
    This actually isn't a problem in 0.48 because the "= null"
    case is handled during normalization or analysis. But it is
    a problem in 0.47 for "where x in (null)" where this will
    result in a Range query from null to null which matches
    everything

commit f639351f2ba484964a289adb2ea5a1d042463d5f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 17 14:59:30 2015 +0100

    set the locale to ENGLISH for the format function
    
    FormatFunctionTest failed. For example with @Seed("8E1625C954A12A49")

commit de9002b707de376a60ca3c3638876867ea008e56
Merge: 5c86d08bd0 7277f50923
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 17 14:46:16 2015 +0100

    "Merge pull request #1793 from pustovit/distinct-error-msg-fix\n\nAdded group by validation when rewriting distinct statement."

commit 7277f5092319616f412c1a0d23403f9b4740438c
Author: Eugene Pustovit <eugene.pustovit@gmail.com>
Date:   Tue Mar 17 12:16:02 2015 +0100

    Added group by validation when rewriting distinct statement.

commit 5c86d08bd0b93ff6b296469926fab055483795b5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 17 09:55:56 2015 +0100

    update changes to reflect 0.48.0 release
    
    bump version to 0.49

commit 45d16d01aa8240f90c4c5b57c4a256c025332bdb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 17 09:42:43 2015 +0100

    add .floo and .flooignore to gitignore

commit 0a869e0b927d2356337f3c4ba7c39e35e0a9cd4c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 13 23:08:30 2015 +0100

    make LuceneQueryBuilder a singleton

commit 9d017286c817440186f7b9cd79ad9f41b240fbfe
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 13 23:56:46 2015 +0100

    update changes to reflect 0.47.7 release

commit 1c0c949437389ceba31aa904b89542367bd3ac90
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Mar 13 17:02:20 2015 +0100

    fix various issues concerning custom schemas
    
    count(*) queries and delete queries swallowed the schema on tables with custom schemas

commit fd01c2eb665c5d7e4b7b32982187bcfeeafd5f73
Merge: 4a1f09f698 e1e7673f46
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 13 17:05:55 2015 +0100

    "Merge pull request #1787 from pustovit/fix-for-ip-validation\n\nFix for ip validation"

commit e1e7673f460ce9dbc205daed6ec4ad93d97c4652
Author: Eugene Pustovit <eugene.pustovit@gmail.com>
Date:   Fri Mar 13 11:17:10 2015 +0100

    IP validation fix

commit 4a1f09f698f9ad8d87a3dfbb49671beaf79c105d
Merge: 55366dce08 49cee38d98
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 13 16:40:30 2015 +0100

    "Merge pull request #1780 from pustovit/null-in-wherein-list\n\nIN operator returns null when there is null and no match in the list"

commit 49cee38d981a62b5e5c7c2d05ed819e9420359c3
Author: Eugene Pustovit <eugene.pustovit@gmail.com>
Date:   Fri Mar 13 09:40:25 2015 +0100

    IN operator returns null when there is null and no match in the list

commit 55366dce083baa89fc3b6bab152be7f11e0ba546
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 12 16:20:31 2015 +0100

    document not (null) behaviour and change normalize behaviour to match that

commit f9b7c2557ad20aafbd59d7c26f9035013c8c9c02
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 13 10:59:23 2015 +0100

    don't use shared state in InsertFromValuesAnalyzer / CopyStatementAnalyzer
    
    caused validation error if requests are made concurrently

commit 36600f61054a03352a07ab49fbcf52086ca87d88
Merge: 6ea075370e fc20f53a72
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 12 14:32:19 2015 +0100

    "Merge pull request #1777 from pustovit/static-loggers\n\nLoggers made static"

commit fc20f53a7279cf6925487211bc2c7dcff0c63f63
Author: Eugene Pustovit <eugene.pustovit@gmail.com>
Date:   Thu Mar 12 14:21:15 2015 +0100

    Loggers made static

commit 6ea075370e218d97727a957efd0d928bcee92913
Merge: 4b475ebd49 510d50d5d2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 12 13:01:37 2015 +0100

    "Merge pull request #1775 from pustovit/docs-in\n\nDocs in"

commit 510d50d5d26cf9205ab3517a3fee009fda5183c5
Author: Eugene Pustovit <eugene.pustovit@gmail.com>
Date:   Wed Mar 11 19:03:58 2015 +0100

    Documentation for IN operator

commit 4b475ebd4998ae6dfbf56f398d31761c45a8c033
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 11 17:23:59 2015 +0100

    throw a meaningful error if is null is used on a function
    
    In the ESQueryBuilder since there is no "generic function"
    fallback

commit 40f2e8b5deedcc636dc7673c9f949e811cb0a2e6
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Mar 11 09:13:19 2015 +0100

    trying to fix coveralls report

commit 7164e5ff4189bb3110238042830bb5a09784c020
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Mar 10 13:03:21 2015 +0100

    upgraded gradle coveralls plugin to 2.3.1

commit ebc69563e61a3686c5d7044988150f343489e126
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Mar 10 09:19:33 2015 +0100

    add suite threadleak scope and 5 seconds grace for leaking threads

commit d2f1176a5f06ccfe78a0b7492ec0708318e49fcb
Author: Matthias Wahl <matthias@crate.io>
Date:   Sun Mar 8 22:35:48 2015 +0100

    cleaned test setup
    
    and made unittest all inherit from CrateUnitTest which has randomization and thread-leak-control

commit f24a7ce644304e6a4fd3c6add47a4ffe3c1484b2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 11 13:59:29 2015 +0100

    change drop table if exists to not raise an error if schema is unknown

commit 1964e8904a690327fbf47d9c8d0f90299a78d7b5
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Mar 11 13:41:20 2015 +0100

    close ScheduledExecutor in BulkShardProcessors
    
    in order to avoid Thread leaks

commit b7015637515a2b379c423e75a968bddbec6de9a4
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Mar 11 13:40:16 2015 +0100

    close file system watcher after PutHeadChunkRunnable is done

commit 90b8d7e5432a19c98148037d663721d9df998e23
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Mar 11 11:34:59 2015 +0100

    update CHANGES.txt to reflect the 0.47.6 release

commit f8a63bd511e11e5078a0e1bb1f13e22c9beec172
Merge: 9e02ec7c3d 3f6d6dd179
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 11 11:42:29 2015 +0100

    "Merge pull request #1769 from pustovit/dd-benchmarks\n\nTable creation and alteration benchmarks added"

commit 3f6d6dd17977feefbba86e1ea96b567130ba1e02
Author: Eugene Pustovit <eugene.pustovit@gmail.com>
Date:   Wed Mar 11 11:03:48 2015 +0100

    Table creation and alteration benchmarks added

commit 9e02ec7c3d13ac5d1f8ba7e654823a84b1398272
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 10 18:50:31 2015 +0100

    fix custom schema table filter in DocSchemaInfo
    
    schema "foo" detected "foobar" as its table and run into a
    NPE as it couldn't load it

commit 7690a858ec6e0eac19a5fd18ab0164bac195a178
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 10 15:02:41 2015 +0100

    cast to correct type after value extraction from source
    
    otherwise functions that are registered to specific types
    might fail.
    
    for example extract(day from ts) expects ts to be a long. In
        case the timestamp is in the integer range it received a
        Integer instead and failed.

commit 56268988909431948a61a40f9fe893c4e855d7f6
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Mar 10 14:22:22 2015 +0100

    fix ordering with a scalar on a column containing NULL

commit 1dcb4cc39f518cd3431822e0be62c1c627fc6752
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Mar 10 11:10:10 2015 +0100

    fix grouping by clustered by column on partitioned table

commit 90162729fa9150a8a5a815da26b88f52eb3dd4c7
Merge: 847e8617f9 f4d69aaeed
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Mar 10 09:22:30 2015 +0100

    Merge pull request #1763 from crate/dobe/upanddown
    
    Refactored the Upstream and Downstream interfaces of Projectors in order...

commit f4d69aaeedc554a79f76f39986dd98f8b721c608
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Mar 10 08:44:02 2015 +0100

    fixed a flaky test

commit 458beacf5a999f905020aa4bfa8ab469b597fcf1
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Mar 10 06:28:34 2015 +0100

    Refactored the Upstream and Downstream interfaces of Projectors in order to make them reusable

commit 847e8617f94db7ec09636fa5b5fbf094bdc27347
Merge: 755b40168e 54edc38a7b
Author: Chris Ward <chriswhward@gmail.com>
Date:   Mon Mar 9 16:28:19 2015 +0100

    Merge pull request #1758 from crate/cc/hotfix/migration_docs
    
    Initial typo sweep of migration docs section

commit 755b40168e5998e9776f99b319d7fdb1487aef80
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 9 15:20:00 2015 +0100

    fix exception swallowing in searchResponse callback

commit c0c2b4f62431e86c2add33c3d3605377f438b596
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Mar 9 14:34:03 2015 +0100

    correctly 'copy from' and 'insert from subquery' into partitioned tables

commit a62ca1c501ae61204405013064fa5b096328c3d0
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Mar 9 11:41:44 2015 +0100

    added 0.47.5 release notes to CHANGES.txt

commit 54edc38a7b615bde0db88b1998bbf5d7d473da24
Author: Chris Ward <chriswhward@gmail.com>
Date:   Mon Mar 9 10:54:01 2015 +0100

    Initial typo sweep of migration docs section

commit 35553b957bfbdf7b107ebfcb1769cbaaec49cac7
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Mar 6 15:16:15 2015 +0100

    cleanup client jar

commit b0ff871f6829aa486bff0f8963225f6f65917cf9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 6 14:19:06 2015 +0100

    copy from: apply quoting of special characters in path to uri conversion

commit 406ab0d978b6cac1a0d1796d586042e8ef0b7d4b
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Mar 6 13:48:19 2015 +0100

    add elasticsearch test suite cleanups

commit e4bef5413898371df5be837bffefd0373f4832ba
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Mar 6 13:44:50 2015 +0100

    updated crate logo in readme file

commit 1b679c5bcff0e6da16b145107f7f59e9670ddf88
Merge: b502bda5db f260dcba4d
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Mar 6 11:55:45 2015 +0100

    Merge pull request #1753 from crate/m/es_v1.4.4
    
    upgrade elasticsearch dependency to 1.4.4

commit f260dcba4dfb30344e9ecfb3fdfd2ff6688d0dee
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Mar 6 11:42:06 2015 +0100

    disable diskthreshold shard allocation in itests

commit c85bb81ac073ee99f258b6aa871e0c8d849f5f2a
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Mar 6 11:41:46 2015 +0100

    upgraded elasticsearch to 1.4.4

commit b502bda5dbfd4734f0e486b2a8264619b8fcf2cb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 6 10:51:17 2015 +0100

    docs: correct default in threadpool configuration

commit 8aff4402375604d3dcb524ead61531bdf26e7551
Merge: a3d192d577 2f591828ce
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Mar 6 09:20:14 2015 +0100

    Merge pull request #1731 from crate/dobe/pageandbuckets
    
    Bucket interface

commit 2f591828ce275e85eb9f63f5adb839149450196e
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Feb 25 14:08:16 2015 +0100

    results now use Rows and Bucket interface
    Buckets are now what was Object[][] result before
    directly create response/request streams in new ResultProviders

commit a3d192d577a9794a322feb8a9f7e5f9de1fb03bb
Merge: aac50906ca b5641587b1
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Mar 5 16:47:00 2015 +0100

    Merge pull request #1751 from crate/h/crash-0114
    
    updated crash to version 0.11.4

commit b5641587b1a1956f77e0d7b9d18e0247d4a6dc01
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Mar 5 16:44:52 2015 +0100

    updated crash to version 0.11.4

commit aac50906ca7b79f2a19acc20cb9940ba1638693c
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Mar 5 16:36:32 2015 +0100

    updated crate admin to 0.11.4

commit 4ad3634dc377578e218fe02c9f363dcd186f9cd4
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Mar 5 12:25:06 2015 +0100

    fix settings on partitioned tables
    
    they were screwed when merging docindexmetadata from a partitioned table template and its partition indices

commit 0704bd19af06fe013c029acdb873dc3e24652171
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Mar 3 09:44:52 2015 +0100

    try to unflake DocLevelCollectTest

commit 79c97608093e7e830ad088c2d418bbe03dfdf951
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 2 18:11:47 2015 +0100

    testing: fix flaky test

commit 7235eafdd6c6aa745aa80181b44825beeee52cfd
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 27 16:26:41 2015 +0100

    test some missing paths of docindexmetadata

commit a74aee150e7d33a47d0be9d8574bdf803aead455
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Feb 26 23:34:06 2015 +0100

    added number_of_shards and number_of_replicas to information_schema.table_partitions

commit fb817d18749cdf0c6767210f7d1f8130f6560d7d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 27 15:09:34 2015 +0100

    catch exceptions frmo mergeOperation.finished() in LocalMergeTask
    
    mergeOperation.finished() can fail too (not really at
    runtime, but during development...) this caused tests to
    hang now they error correctly.

commit 80900c248e4e2e81a5ece2ddd801413036ea7722
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 27 12:15:04 2015 +0100

    reduce gradle test output by using custom listeners
    
    stderr/stdout will be swallowed unless a test fails in which
    case the stderr/stdout that was generated by the failing
    test is printed.
    
    otherwise only 1 message per suite is printed.

commit 72f670f48f1399d3133d725a77ed4a6a12dc011f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 25 16:31:54 2015 +0100

    extract PriorityQueue / Ordering from SortingTopNProjector
    
    so that it can be re-used in other places

commit 4a91dfdbc98dff391da2b3b9d1c4e7a412f5b50f
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Feb 25 14:48:18 2015 +0100

    split projector insterface
    
    into ProjectorUpstream and ProjectorDownstream

commit 5ea1195ba72dc4855d7ed15b72e95538820f4ecc
Merge: 09742fad71 64f6ac02e9
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 24 20:42:25 2015 +0100

    Merge pull request #1720 from crate/dobe/cleanjoin
    
    removed join stuff in preperation of changing to the page interface

commit 64f6ac02e912015716db0c24047b6dfc79b972b4
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 24 17:36:48 2015 +0100

    removed join stuff in preperation of changing to the page interface

commit 09742fad71eabd3309be275bd026c1edb6305476
Merge: a99a71f125 80ffd1fede
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 24 17:08:11 2015 +0100

    Merge pull request #1712 from crate/dobe/dockeys
    
    Dobe/dockeys

commit 80ffd1fede5e1faac132d97deb92941c1b2dbd68
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Feb 11 08:52:42 2015 +0100

    primary key vaules of the where clause are now encapsulated in the DocKeys class
    new implementation of primary key and routing lookup allows for nested ORs
    removed deprecated primaryKeys on where clause
    updated es to empty string routing fix

commit a99a71f125707727f3695fb963d744fafab007d3
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Feb 24 16:10:58 2015 +0100

    updated AUTHORS file

commit f2c837cb32fddec32f892874c9e6db07b1bf01d8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 24 13:52:26 2015 +0100

    add ThreadLeakFilter to RecoveryTests

commit ff9b8e50a60ec3096469776f61796014114832d2
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Feb 24 13:28:01 2015 +0100

    fix flaky dynamic object update test

commit cc1bbda498eaed504bfb97a509020b6aebaaebef
Merge: 60ae3544a7 4e7b710000
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 24 09:06:10 2015 +0100

    Merge pull request #1710 from crate/dobe/fixcountdeleterouting
    
    fixed multi routings in count and delete by query requests

commit 4e7b710000b5e67ed2c09eb1d306530dad08f55a
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 23 11:38:22 2015 +0100

    fixed multi routings in count and delete by query requests
    removed special transport actions for those and set the routing to null if any routing contains a comma, which can’t be handled by the ES delete and count requests because they require a string instead of a Set<String>

commit 60ae3544a717f21f5757af2d17584043fa344285
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Feb 18 16:48:55 2015 +0100

    Removed runtime state from RelationAnalyzer since this is a singleton.
    
    This lead to race conditions since the nested contexts have been shared.

commit a2f8760d370572554ff299f93f5fa862a29865f1
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Feb 19 20:44:57 2015 +0100

    fixed an issue where routing values have been ignored in source based copy from

commit 240ff69d61ef4ad80299e516f3f9e7ed4d96f8d4
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Feb 18 15:29:51 2015 +0100

    Empty string routing values are no more treated as nulls.
    
    See EmptyStringRoutingIntegrationTest, which asserts the new behaviour.

commit ebd93f3b97e4df16689237cbb99e07d4c910a834
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Feb 18 15:30:48 2015 +0100

    added additional tests

commit 3bae9c0a2d609b3718d3fed72fbadaefacd2b838
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Feb 18 13:51:26 2015 +0100

    update CHANGES, add entry for upsert-by-query support

commit 46fd441bbaa243e1c53d7e9c43ba424ca7d48113
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Feb 18 13:25:38 2015 +0100

    add docu for upsert by query

commit 0cf45012ef31aaa16e7b43e410b4c0a419d16981
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Feb 18 12:00:32 2015 +0100

    renamed upsert related `*Old` classes to `SymbolBased*`
    
    also re-add tests for SymbolBased* classes

commit dd860e903c0a817a2d3cd4ada89e339b6f640cc9
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Feb 17 15:36:52 2015 +0100

    support insert by query using on duplicate key

commit dc4065a32012e5c4fd85c51591e57068c342f541
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Feb 10 12:03:10 2015 +0100

    implement new object array architecture at upsert
    (node to action only)

commit e030717dac6270d397bec9b3dbea95f984cd28a1
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Feb 12 13:35:13 2015 +0100

    implement sharding projector

commit f3cc46052ca96bea85e58029cfca262d9364f5c8
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Feb 17 17:55:52 2015 +0100

    Fix: Parameter substitution within subscript
    notation is not allowed anymore

commit 52bc67591391d2cb51ef5e732850b0fb1f1a194d
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Feb 17 16:13:17 2015 +0100

    updated changes to reflect 0.47.3 release

commit 559b7ae07cd063f138a101c8b9a325ad305fb4a8
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Feb 17 14:31:28 2015 +0100

    Fix: Inserting from a query which contains
    aggregation functions failed in some cases

commit ca22fc6916cadccd351587b94553bc2c9ac23faa
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Feb 12 17:55:59 2015 +0100

    Insert From subquery: made handling of
    indexWriterProjection more generic and moved it to insertFromSubQueryConsumer,
    so inner consumers don’t have to handle it.

commit f694b08e638188878b747ff97068a6fff06b659b
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 16 11:36:16 2015 +0100

    fixed isLiteral Matcher and failing tests therefore

commit 4c0f557ff81e89a3020cc178c0fba37fe871a285
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 13 15:43:28 2015 +0100

    update changes to reflect 0.47.2 release

commit e3aae0f696e6f518ea46f0cf5d922f6166318550
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 13 14:13:00 2015 +0100

    allow usage of fq column names in where clause of update statements

commit 978baaa4d7e9bad38c88f4b28254bb7968b17722
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 13 11:43:08 2015 +0100

    add ``overwrite_duplicates`` option to COPY FROM

commit 54074fab28aed90d14d2dfbc467b9b14679d5653
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 3 22:38:08 2015 +0100

    add retry on routing /searcher retrieval
    
    and use ensureYellow isntead of ensureGreen in tests

commit 10e60334c908fa4045309e69809523031afa9bf4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 13 10:37:20 2015 +0100

    remove testSelectRandomTwoTimes in TransportSQLActionTest
    
    the exact same test exists in ArithmeticIntegrationTest

commit 72dbd7bf6427a9275d7b63179586bd5a5840ecdc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 12 21:27:49 2015 +0100

    remove unused declarations

commit 641602f6d4edd9f573b6c51bb7ae63ab7673bded
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 12 16:55:23 2015 +0100

    fix sorting on functions that return a boolean value

commit e14cbeb30ddea1e5b2832a4f8dd2a512559a7bd5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 12 16:07:34 2015 +0100

    fix NPE that can occur in genMessage of FailedShardsException

commit 560e09e63900c59250a8cc28d0c85c7f266cfb2f
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Feb 11 17:23:13 2015 +0100

    removed:
    PlannerContextBuilder
    PlannerAggregationSplitter
    PlannerContext

commit f71eda8eae51d347a6dc54adf0393c9b58229be1
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Feb 11 14:34:48 2015 +0100

    use ProjectionBuilder in InsertFromSubQueryConsumer

commit 2c08457b5dc0d5d97c85bb48991daf96ad6e11fa
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Feb 11 10:42:58 2015 +0100

    use ProjectionBuilder in ReduceOnCollectorGroupByConsumer

commit 352af60f031d9dfdc3b678ae94d04593713c41a2
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Feb 10 13:19:26 2015 +0100

    use ProjectionBuilder for NonDistributedGroupBy

commit 6ba3e1e4e57902334483d7c5316a0bb71bb3c7dd
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Feb 6 00:16:09 2015 +0100

    use ProjectionBuilder for global Aggregates

commit 283a37d5c4179ec3288188b87f03d88f065b0fd0
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Jan 30 17:01:49 2015 +0100

    Implemented ProjectionBuilder for better projection chaining
    Use ProjectionBuilder in distributed group by

commit 296f104a4fde8896add6d512d53463d48e02d7df
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Feb 11 17:09:35 2015 +0100

    changed version to 0.48.0

commit bc437a16f650162ebe6b383044c273792850fcfd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 11 14:23:58 2015 +0100

    change Field equals to match relation only on identity
    
    otherwise self-joins won't work correctly

commit 8daab9a696bc190c6e1eae84b2286190cd3a799a
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Feb 11 11:27:36 2015 +0100

    updated crash version to 0.11.2

commit e2f8c7a31145f33b33e92193cc11004aabbfa1a4
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Feb 11 06:39:08 2015 +0100

    added a missing test for inserting with scalar

commit 1a9637d353a525a912304248ee5020e9443c7e04
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 10 22:03:27 2015 +0100

    update mailmap

commit fc3bb1444a0d4a48a955375c0658fd4f188fb509
Author: Senad Biser <sbiser@gmail.com>
Date:   Mon Feb 9 17:06:06 2015 +0100

    - testConversionWithNonAsciiCharacter unicode fix

commit ad8536d31ef19231dc80b24d9ee69765122d5cbf
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Feb 10 17:13:18 2015 +0100

    updated changes after 0.47.1 release

commit e09835b948b4fcdb9f4b28a24bafd4a5aef5639c
Merge: 9726325180 d09c20027d
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 10 09:37:37 2015 +0100

    Merge pull request #1657 from crate/dobe/pkinwhereclause
    
    primary keys are now members of the where clause

commit d09c20027dbd2ca292937c0df10dc1983e2e8ce5
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 10 00:04:17 2015 +0100

    made clusteredBy a set in whereClause

commit 56b5b166365f337b83f88201b69c398d89c9263f
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 9 17:34:00 2015 +0100

    primary keys are now members of the where clause

commit 9726325180054264b5a71fa2ee406b6edf2d8c61
Merge: c9ee525eec fef7616e62
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Feb 9 23:11:39 2015 +0100

    Merge pull request #1659 from crate/h/udc-docs
    
    fixed incorrect docs about how to disable udc

commit fef7616e62f3129db21a2db7a3e1cb223f253d30
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Feb 9 23:07:44 2015 +0100

    fixed incorrect docs about how to disable udc
    
    using command line arguments

commit c9ee525eec1430d22b5cca841705ee4e09d01d3e
Merge: 263d15b651 399fc2d242
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 9 16:48:50 2015 +0100

    Merge pull request #1595 from wallner/drop_table_if_exists
    
    Implement IF EXISTS clause for DROP [BLOB] TABLE

commit 399fc2d24279f050e7b156799ab5d1ec7259d878
Author: Florian Wallner <wallner@balumba.org>
Date:   Thu Jan 29 13:44:42 2015 +0100

    Implement IF EXISTS clause for DROP [BLOB] TABLE

commit 263d15b6514bdc3d01cebb147dbb600c0dd6689a
Author: Senad Biser <sbiser@gmail.com>
Date:   Fri Feb 6 15:14:13 2015 +0100

    DigestBlobTests, removed redundand stream close, added content check on final file

commit 7acf5671e931422834919180b9d38726fd7b70fc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 9 14:35:32 2015 +0100

    disable filter cache in genericFunctionQuery
    
    improves performance of queries like:
    
        where x = 1 and slowfunction(x, y)

commit d1c8b1fdb4b1b0447e297ecc6e22a1bcb772c4ec
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 9 11:12:46 2015 +0100

    use BooleanFilter instead of BooleanQuery to pre-filter in array equals case
    
    This way the execution order can be controlled (first
    BooleanFilter with TermFilter to pre-filter the result and
    then apply the genericFunctionFilter only on the results
    that are remaining)
    
    This way it is a lot faster and also has the advantage that
    there is no "MaxBooleanClause" limit.

commit 012650a8d8fc386fe44cd0800c4acd2c91ea578e
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Feb 9 09:55:40 2015 +0100

    add a note about treatment of column names in copy from statement

commit 531efdb0f523f68fdf2f2f781fea2370186a24ca
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Feb 6 17:41:25 2015 +0100

    prepare release 0.47.0

commit ae1c656795b3abe04eb15985691ec894a22bdd72
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Feb 6 17:29:54 2015 +0100

    updated changes after 0.46.5 release

commit 61768bbc7c27ded92fbf29d3ca0931169ac02aef
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 6 11:59:43 2015 +0100

    support eq on arrays

commit c98267fab7132f4654ee4e042d13a6fce562a353
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Feb 6 17:08:15 2015 +0100

    upgrade elasticsearch to v1.4.2

commit fdc1432d416ff5eb70254e6aa8ee1b35073eff1c
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Feb 6 17:04:01 2015 +0100

    update CHANGES (include latest 0.45.9 release entry)

commit b5b49b2eb3d85e67cb921c964561a2ebe557042b
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Feb 6 16:43:14 2015 +0100

    Fix: Hard wire utf-8 encoding, so unicode filenames work

commit 926ef72d7d1d8259e3fdb033266be5299bcf922e
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Feb 5 16:18:54 2015 +0100

    Fix: COPY FROM PARTITION failed if the source contained a ``partitioned by`` column:
    
    - add partitioned_by columns to mapping (index=no)
    - DocIndexMetaData: ignore columns if there is a
    partitioned by equivalent

commit 7ce586600f27ee427141bf24a1ad87d76650d9ea
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Feb 6 15:32:14 2015 +0100

    Fix: Adding new columns to existing partitions could fail if the table was altered
    before

commit 6b6ec7e650176f0966012ccf5d88b566df75ea56
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 6 14:54:15 2015 +0100

    make offset on QuerySpec a primitive int and add toString() to OutputName

commit a55956be8e493945416ac8e33ab3e08c9a8fa26c
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Feb 6 13:47:59 2015 +0100

    move insert-only related integration tests

commit d3b2a0542fcf0cbff8831eb07313f591ecf50af6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 6 11:10:46 2015 +0100

    fix eq on array literals, disallow eq on other array comparisons
    
    previously
    
     where [1, 2, 3] = [1, 1, 1]
    
    did match because only the size of the arrays was used for
    comparison.
    
    and where a_field = [1, 2, 3] failed with a
    ClassCastException. Now it returns an error that it isn't
    supported

commit 392d995d14e5b3c4eadefc9227c0284bdc07bdf5
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Feb 5 17:34:44 2015 +0100

    optimize single row upsert by bypassing bulk shard processor

commit e0cb45ac6a5ff4de75391099e66dde7b86009ff5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 5 14:32:22 2015 +0100

    disallow updates of protected columns in INSERT.. ON DUP..KEY

commit 1166d270cd4c3b56bafff3d4caf67c3d1ddec255
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Feb 4 00:30:43 2015 +0100

    updated CHANGES

commit 1e7d6f187698d607f55d0ba732c5adf15e453fb3
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Feb 3 16:34:52 2015 +0100

    added benchmarks for upsert

commit 49c761f072de2af6f548090b7d3b1fff7ba5bc10
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Feb 3 20:26:57 2015 +0100

    fix problem with not-yet available shards of upsert transport

commit 88864a6c04b5087f70b38f11e9a76be8e7c6dbac
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Feb 3 15:51:43 2015 +0100

    bulk shard processor use indexShards instead of
    preferenced shards for routing

commit ab59d2e0c0b97eecab3246d0ad86b8886a9ad8ac
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 3 11:55:14 2015 +0100

    extract the ValuesAwareExpressionAnalyzer
    
    so that it can be re-used in the insert-from-query case too.

commit d5d45d54b926b8e042163b4e7c09542fca0f5ba8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 3 09:55:11 2015 +0100

    remove CrateTransportCountAction calls from testCountRouting
    
    for empty strings the routing isn't set anymore (because it
        is set to null in the indexRequest routing() setter)
    
    so for this test it is random on which shard the empty
    string value will land and therefore the
    CrateTransportCountAction requests aren't deterministic
    anymore.

commit 0cf08693d3eafc0fdf92f4cb713802fd02b135e0
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Feb 2 21:00:10 2015 +0100

    rewrite insert plan tests (use upsert now), remove ESIndex nodes/tasks

commit 0b06f1ad272cb0b9c48e05ca6aa54e97e8062953
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Feb 2 16:51:33 2015 +0100

    fix upsert to partition and bulk upserts

commit 80665625900415662120baeb6793ede398624dbd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 2 11:57:51 2015 +0100

    support bytesRef values in ObjectType streamer

commit 8b19650d59193acb8374ae5e9617331db9f010a6
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jan 27 15:14:44 2015 +0100

    [WIP] implement multiple document support at upsert request

commit f65a54cae66a1f06661a5dff2c22ceb1bc6f1b85
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Feb 3 17:03:07 2015 +0100

    removed upsert by query from sql reference

commit 049d808251fe82237f6790de03acd6c1fdce7ca0
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Jan 26 16:31:16 2015 +0100

    Changed missing assignments from Map<> to Object[]

commit 2e6229cf20305413af1d7abb8e65b378a0b627e0
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Jan 22 22:40:24 2015 +0100

    support missing assignments in TransportShardUpdateAction

commit 332c031292c93b62e455d12265e1cfdaf2d1c5c3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 22 18:28:03 2015 +0100

    support ON DUPLICATE KEY UPDATE in InsertFromValuesAnalyzer

commit a3d37254e5b6005738c3c395548ed7e9bef146ef
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 22 15:32:58 2015 +0100

    support ON DUPLICATE KEY in the parser

commit b751a67bc3624dfaa9984b1079b8e421837fe70c
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Jan 22 14:19:13 2015 +0100

    added documentation for upsert

commit 4865417fbab6abccace06fdb69b5622ee0e13a61
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Jan 22 10:39:53 2015 +0100

    added syntax reference for ``ON DUPLICATE KEY``
    clause

commit 6588e3b2b187701d39869a30777bee44ebb3049e
Author: Eugene Pustovit <eugene.pustovit@gmail.com>
Date:   Thu Feb 5 11:35:02 2015 +0100

    IpType validation moved to value method

commit c614dafbb3f74ceb61d934e67e3d56054dc96ed5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 5 23:06:24 2015 +0100

    increase GeoShapeType coverage

commit 8ef35137b165453bedc4e4ab0691d05630ea5e68
Author: Senad Biser <sbiser@gmail.com>
Date:   Wed Feb 4 18:09:35 2015 +0100

    fix build and test failures on windows

commit b062d055613506f4e3d13c8aa631c753d383575c
Merge: 92970a3098 e4bcf79956
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 5 22:30:53 2015 +0100

    "Merge pull request #1618 from senchi/digestblobfix\n\nclose reference to file header in DigestBlob on commit"

commit 92970a3098b0a7a01dac4e5c468e28e0ce772a11
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 5 20:43:41 2015 +0100

    optimize bytesRef to long conversion
    
    by-pass utf8-utf16 string conversion

commit f4a7f2edf4041bdc0cef1f53de98524d0354fdf5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 5 15:05:44 2015 +0100

    fix primary key value null check
    
    assert value instanceof Map failed if the pk column is
    nested and a null value is inserted. Probably with some NPE
    afterwards if assertions are disabled.

commit 7185f2a3be0f3aaf0158cb8d401fbf9a43d56aa5
Merge: c0577e9cef 917afdfe44
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Feb 5 15:03:33 2015 +0100

    Merge pull request #1622 from crate/m/backward_qtf_paging
    
    implemented random access paging for query then fetch

commit 917afdfe44b9bd5cb36ba69c9e5762c1be5c3251
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Feb 2 16:55:07 2015 +0100

    implemented random access paging for query then fetch
    
    without caching. every page request will hit the shards

commit c0577e9cef53d23ff8ca94e86520abd38e3eac74
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 5 13:50:23 2015 +0100

    fix protected column check in update analyzer
    
    for assignments that involve two references or an unresolved
        function on the right side.

commit e4bcf7995680b08f6c2d6b1838705189ec41d240
Author: Senad Biser <sbiser@gmail.com>
Date:   Wed Feb 4 18:09:35 2015 +0100

    - close reference to file header in DigestBlob on commit

commit 11dbb93f72b05f4bbe2c8ab7a7addf1a76be9715
Merge: 526a3a2749 cb5fc85681
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 4 17:11:38 2015 +0100

    Merge pull request #1617 from crate/regex
    
    regex improvements

commit cb5fc85681a310854cbc8b3a6ddc7efd49625787
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 4 17:06:38 2015 +0100

    add changes for regex improvements

commit 1a04f8b4e23f34de872a9d942d5875ddd9088707
Author: Andreas Motl <andreas.motl@elmyra.de>
Date:   Sat Jan 31 01:41:04 2015 +0100

    add documentation for regular expression improvements

commit 84dcf3e3c9b9cc5c66c8a1e6ceb7c61fcb17018b
Author: Andreas Motl <andreas.motl@elmyra.de>
Date:   Fri Jan 30 23:52:02 2015 +0100

    improve tests for regular expression capabilities

commit 45b49eb36890ca8bb34ffa6162c7b902d40075fd
Author: Andreas Motl <andreas.motl@elmyra.de>
Date:   Fri Jan 30 03:25:12 2015 +0100

    improve regular expression capabilities

commit ac0b76482c67607741618e7c33f15242b1a4611e
Author: Andreas Motl <andreas.motl@elmyra.de>
Date:   Thu Jan 29 00:42:53 2015 +0100

    move regexp integration tests

commit 526a3a2749d488d780c4e1eea6683dc95ef90c28
Merge: a9106f7516 631de8a900
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Feb 4 16:44:16 2015 +0100

    Merge pull request #1616 from crate/h/admin-0113
    
    updated crate-admin to version 0.11.3

commit 631de8a90080c2857187f93399e4e88b347fecf7
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Feb 4 16:33:58 2015 +0100

    updated crate-admin to version 0.11.3

commit a9106f75164d4fc6e914d626cd22e842beeef1fc
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Feb 4 00:05:22 2015 +0100

    update changes to reflect 0.45.8 release

commit 85593ee0da5d7d6beef94424645461afc6fcc74b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 3 23:29:08 2015 +0100

    testing: fix flaky test

commit 0d04765129cd8e2b85b60cfda28e692245854dd7
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Feb 3 22:42:31 2015 +0100

    update CHANGES.txt to reflect 0.46.4 changes

commit ff1a38fb7815607894b9110a2f62e304cc481828
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 3 21:59:59 2015 +0100

    don't recheck distribution requirement in DistributedGroupByConsumer
    
    In some cases if shards are still initializing the
    requiresDistribution() method might change its result
    between two calls.
    
    This can lead to the NonDistributedConsumer believing that
    distribution is required and the DistributedConsumer
    believing that it isn't.
    
    To fix that just check once in the NonDistributedConsumer
    and rely on the order of the Consumers.
    
    In the worst case this will execute a query that could be
    non-distributed in a distributed way.

commit 7aeed451463756e499f62d59dcfede9c4dabb951
Merge: 58d5dd56b0 b33e66f823
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Feb 3 21:12:30 2015 +0100

    Merge pull request #1611 from crate/m/having_fix
    
    fix group by with having clause on aggregation

commit b33e66f823675f6f45c23e1996a9b2d7a130345b
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Feb 3 17:06:08 2015 +0100

    fix group by with having clause when the group key is not selected

commit 58d5dd56b020ead746b3a17389dedb7e5ac86e32
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 3 20:17:24 2015 +0100

    fix flaky tests

commit 6eb742e560a58e3c758371ffd3ac3b83f0f16ee8
Merge: 63b32267f9 cc165e9070
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 3 19:58:58 2015 +0100

    "Merge pull request #1609 from pustovit/picking-countfix-to-master\n\nAdded test for exception on count query for non-existant column"

commit cc165e9070b06cc056fdddfbcc76b2fec00051b5
Author: Eugene Pustovit <eugene.pustovit@gmail.com>
Date:   Tue Feb 3 15:34:18 2015 +0100

    Added test for exception on count query for non-existant column

commit 63b32267f98505a0905bd04ddb4656482e5e1026
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Feb 3 14:03:36 2015 +0100

    increased test coverage

commit 19f903e7d6c8800df64d3af6e707cfd68d5b3693
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 2 17:13:07 2015 +0100

    remove isUndefinedType()
    
    unused-method

commit f5dc7a3b9be6fb724aaf312290bdd324f0231bfb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 2 16:50:56 2015 +0100

    fix handling of empty routing values

commit f8ffa7dc3c5d6600ae6b5e23d5d74791ceb791d6
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Feb 2 16:02:30 2015 +0100

    Fix: Bulk inserts with mixed but compatible types
    (e.g. int and long) failed

commit 8c73e19d9f46f7530816df84cafb41ac487a803a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 2 10:47:05 2015 +0100

    ensure current_timestamp is evaluated only once per statement
    
    selectWhereEqualCurrentTimestamp() was flaky because that
    was not the case.

commit 78d839b789614f30b47bb4a6af2c5765b63ba916
Merge: a07932470a b1448ff89e
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 2 09:47:39 2015 +0100

    Merge pull request #1598 from crate/dobe/havingclause
    
    use a class for the having clause in analysis

commit b1448ff89effe3fa7e35bc7c53293a4623a551a1
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sat Jan 31 00:46:50 2015 +0100

    use a class for the having clause in analysis

commit a07932470a46d7e4bb4fcc79cc5595e7fcd4083a
Merge: e70292408a 0f799dd993
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jan 29 21:16:23 2015 +0100

    Merge pull request #1590 from senchi/filereaderencoding
    
    FileReadingCollector, force UTF8 for string to bytes conversion

commit 0f799dd993d0903e4b0586cdc1de11c05b0dc895
Author: Senad Biser <sbiser@gmail.com>
Date:   Wed Jan 28 17:56:23 2015 +0100

    FileReadingCollector, force UTF8 for string to bytes conversion

commit e70292408af42ae4bb3ff39c912acef983d1f696
Merge: bba213dd6d 6947318f1e
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jan 29 20:32:00 2015 +0100

    Merge pull request #1594 from crate/dobe/queriedtable
    
    use the special QueriedTable relation for single table selects

commit 6947318f1e64d5ad730f957ac8dd880f1954c632
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jan 29 18:30:51 2015 +0100

    use the special QueriedTable relation for single table selects

commit bba213dd6ddee79e3384e382b4e44097daa86a09
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jan 29 10:21:20 2015 +0100

    renamed FieldResolver to FieldProvider

commit 01122b19b30dafb67d7af0a91a99d36424ae0752
Merge: d76b41d27b 11e393d525
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jan 28 22:14:02 2015 +0100

    Merge pull request #1591 from crate/m/stat_aggregates
    
    added support for the stddev, variance and geometric_mean aggregation fu...

commit 11e393d5251e98ea342d7bbdb84b484efc6cee2b
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jan 28 18:19:04 2015 +0100

    added support for the stddev, variance and geometric_mean aggregation functions

commit d76b41d27b7b3cd0f5f3c28a9e6ab4a0889e9757
Merge: c7029c5019 49eb3bc3ee
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jan 28 13:05:19 2015 +0100

    Merge pull request #1589 from wallner/fix_doctests
    
    Let doctests use an IPv4 address

commit 49eb3bc3ee4d0598cb0051e85e3c18062ccc45b0
Author: Florian Wallner <wallner@balumba.org>
Date:   Wed Jan 28 12:08:45 2015 +0100

    Let doctests use an IPv4 address
    
    Make sure the python doctests let their crate servers bind to an
    IPv4 address when they start.

commit c7029c501990597c20621296d878983ac6db08f4
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jan 28 09:40:59 2015 +0100

    addec changes for CURRENT_TIMSTAMP support

commit 720b6d971ad9a89d35fb081dd4db8d888edea909
Merge: c9bc519026 b260ecc721
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Jan 27 16:51:13 2015 +0100

    Merge pull request #1585 from wallner/current_timestamp
    
    Implement SQL CURREMT_TIMESTAMP function

commit b260ecc7214e765545a97409de094336f226c63c
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Jan 26 17:33:13 2015 +0100

    Implement SQL CURREMT_TIMESTAMP function

commit c9bc5190261c203fb8a2641cd7be65e6f08f7fdc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 27 13:53:48 2015 +0100

    testing: (try to) fix RecoveryTests

commit 91ab64ef13fb7ac44ac7e84698a75893df55c97c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 27 13:26:09 2015 +0100

    remove more unused code

commit 71622adad83b1aa910372f4ff5f62800a44fd0ef
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 27 13:13:05 2015 +0100

    testing: increase coverage

commit ef333009e2a5184adcd13a9df4b1186451a8e9e1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 27 12:19:32 2015 +0100

    remove unused code

commit 5423aa79ccdeefd2d96d59fd66f5804f14d38944
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 27 12:03:07 2015 +0100

    testing: fix flaky test

commit a2624289bae6e2825b154c98e3ceeb84af475708
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 27 11:44:27 2015 +0100

    testing: set thread name in RecoveryTests
    
    to be able to debug thread leaks easier

commit 713478a79ebf311346ed0ab53fa39039b123f489
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 27 10:47:53 2015 +0100

    enable travis cache

commit ccad1f5b574ab958ba2132c1767bd75e46872416
Merge: db84c3f629 60a41e37d8
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Jan 27 12:07:54 2015 +0100

    Merge pull request #1584 from crate/dobe/analyzedstatementinterface
    
    AnalyzedStatement is now an interface

commit 60a41e37d8609b55c2028c96386e986ef8efc1b2
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Jan 27 11:25:00 2015 +0100

    AnalyzedStatement is now an interface
    removed deprecated newAnalysis on Analyzer and let the vistors create instances directly

commit db84c3f6291471d9f0da336c5e3cf467af8d2132
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 27 02:06:54 2015 +0100

    testing: set mode to local for scope SUITE and TEST

commit 816dcda565b45e58bc568344647700b6b4210539
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 27 10:09:33 2015 +0100

    testing: fix flaky itest (dml.txt)

commit 90abbbc08772019b1dd398ae89129e4f080ab653
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 27 01:05:14 2015 +0100

    move tests that don't require per Test cluster setup
    
    speeds up test execution

commit 7478b38825c3ca0b0aee392ac16347aa3eff2716
Merge: 5fa4e6c8e1 089e5f8a71
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Jan 26 23:29:59 2015 +0100

    Merge pull request #1578 from crate/dobe/hasnoresult
    
    Dobe/hasnoresult

commit 089e5f8a71eb65035ffb0a1e8badfe7cdac6f6ed
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Jan 26 22:27:03 2015 +0100

    moved responsibility of noResult checks to planners

commit e6e288b06a4ffea9a51e9809f2e13e8dfd5e1cd7
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Jan 26 22:24:39 2015 +0100

    handle nested unknown columns correctly

commit 5fa4e6c8e1fbe9ecd9a04214c315dbb10e73e902
Merge: fd1d5e06e8 cd3676a659
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Jan 26 13:52:53 2015 +0100

    Merge pull request #1573 from crate/m/remove_schema_parser
    
    remove unused SCHEMA non-reserverd keyword from parser

commit cd3676a6594a9c063972af2100718f12a4c3d06e
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Jan 26 13:07:41 2015 +0100

    remove unused SCHEMA non-reserverd keyword from parser
    
    it produced an annoying warning

commit fd1d5e06e869f20429f5fbf3b5354b79d88ebfbf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 18 23:26:16 2014 +0100

    add support for extract(field from source)

commit 81d79bd1c2d86f002858bbe9f4e17538c81d8843
Merge: 5b4fd5be2b b4a02aebdb
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sat Jan 24 00:10:34 2015 +0100

    Merge pull request #1569 from crate/dobe/cleanups
    
    Dobe/cleanups

commit b4a02aebdba48f8bf05c68e9673f4bf840608d66
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Jan 23 23:59:02 2015 +0100

    removed requirement for context in  aggregationsearcher

commit 7a066abe069f5ea717b37682928c8131f97a30ed
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Jan 23 23:47:24 2015 +0100

    fixed a flaky test

commit 0bc5c2d05ca906080731dea6a7a919fddb386fe6
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Jan 23 23:25:48 2015 +0100

    removed check which never could be true

commit d354eca5cedceafd28a3d992d09d0a4a3c7e70a0
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Jan 23 23:06:21 2015 +0100

    removed unused sys expression checks, since such expressions are only allowed if the relation is also a sys expression

commit 5b4fd5be2bd85d94eac1679c1ad70a385ba0a6b6
Merge: 00815c535b c951efc7dd
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Jan 23 22:46:23 2015 +0100

    Merge pull request #1567 from crate/dobe/queryspecmaster
    
    Dobe/queryspecmaster

commit c951efc7dd6269a716f2ff81dc9490c3db8e3d44
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Jan 23 16:20:04 2015 +0100

    handle Nullables especially for orderby and groupby in queryspec

commit 85cf289123fbc5c773a3c871b1f270a3963cdd08
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Jan 23 09:08:34 2015 +0100

    factor out queryspec from select analysis

commit 00815c535bb801db75b04c866f07874de9b4403a
Merge: 7fe669840f 8e61d1a11c
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Jan 23 22:22:25 2015 +0100

    Merge pull request #1568 from crate/m/qtf_paging_fix
    
    fix query then fetch paging on partitioned tables

commit 8e61d1a11c0fafdf4b47338b1a12a665efd2aa6e
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Jan 23 21:49:21 2015 +0100

    fix query then fetch paging on partitioned tables

commit 7fe669840f6fcb44d12a73a8eee8c5d44f0d5694
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 23 10:43:42 2015 +0100

    remove unused fields and fix warnings in ExpressionAnalyzer

commit 9f5f6d2bdb09ecfb6864550d4c5b2472fd349ff9
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jan 22 15:22:19 2015 +0100

    updated notice file

commit 1085b83079ded4de4ba9d369a6552a52fac34884
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jan 22 14:20:08 2015 +0100

    removed flaky and useless s3 test

commit 35470f1faf3f2e71270a633caf125a0102ced11d
Merge: d60f2479b3 2ff91a55d8
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jan 22 13:51:24 2015 +0100

    Merge pull request #1557 from crate/dobe/reduceanalyzedstatement
    
    Dobe/reduceanalyzedstatement

commit 2ff91a55d8939af10c5dceceb04bf5f409890958
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jan 22 12:54:32 2015 +0100

    removed autputNames and outputTypes from AnalyzedStatement

commit 5b5f80c7f58e69579d22782ed712fff5f9968e2f
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jan 22 11:54:18 2015 +0100

    renamed RelationVisitor to AnalyzedRelationVisitor

commit ed6f9c1029e9dddec06e92081ff61e4a2742268a
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jan 22 11:50:23 2015 +0100

    removed AnalyzedStatement dependency from transport action

commit 2e6b6a4642f944821b7c5e825d43f5b3368b937c
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jan 22 09:38:05 2015 +0100

    moved expectsAffectedRows to Analysis, since it is only interesting on the top level

commit d60f2479b36d046e68f6adf4ff2d127fe7021d6f
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Jan 22 11:21:36 2015 +0100

    removed unsupported syntax from ``Update`` synposis

commit ae34096313901944b671bde98f110f0829d8098c
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jan 20 17:14:18 2015 +0100

    increased version to 0.47.0-snapshot

commit 0ae9b4b5f78b421e1f4c1a6bbfa811ba5e6d8cb7
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jan 20 15:55:52 2015 +0100

    create copy of function at lucene query converter so original referenced function
    will be untouched
    
    fixes issues related to update assignments using same function reference

commit 08d907516bc73756a576bd953081a5cef03699d8
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Jan 20 16:02:52 2015 +0100

    Fix: Resolving a column from multiple tables could cause an UnknownColumnException
    if only one of the tables has the column

commit 1f3630e6e39f8750882878a4eca7ae42b3e2a671
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Jan 20 08:54:07 2015 +0100

    better naming for some test classes

commit d6b1aaf12ffe7eca8a3dff9d57cdb5f031c03384
Merge: bba4dd5af0 c9c70f01ac
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Jan 19 22:34:06 2015 +0100

    Merge pull request #1543 from crate/relations
    
    Relations

commit c9c70f01ac530d8d4757ae5a996f248f046c0012
Merge: f0960f596f bba4dd5af0
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Jan 19 22:23:00 2015 +0100

    Merge remote-tracking branch 'origin/master' into relations
    
    Conflicts:
            CHANGES.txt

commit f0960f596f3e88ffd3481da48a39dbbc200e4b1c
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Jan 19 21:34:43 2015 +0100

    removed statements which used sys expressions
    in wrong context from itests

commit 53d775814718486c4be4cdbbc54ca12348fc9435
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Jan 19 21:45:14 2015 +0100

    fixed sysShardsTest

commit 9f17b05b2cb4ee938922cf91e6758c39c7411983
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Jan 19 21:03:16 2015 +0100

    Fixed an issue which caused UnknownReference error
    if one uses `_node` when querying sys.shards while
    there are unassigned shards in the cluster

commit bba4dd5af0d30eb13200e932799a8cc2298b63fd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 19 18:17:19 2015 +0100

    add tests for blob streaming to fix flaky coverage

commit d70c2bb70586aa3ccd668232e4f44f5d6abf2997
Merge: a3533e20e1 38e426a6c1
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jan 19 18:19:51 2015 +0100

    Merge pull request #1534 from crate/h/license
    
    updated copyright year in license and notice file

commit 38e426a6c1d876a767eae0c5aa0bb38cd9a0718d
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jan 19 08:17:49 2015 +0100

    updated copyright year in license and notice file

commit a3533e20e11d51ce4143e05402ac9d5860c7b3f1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 19 17:44:32 2015 +0100

    call buildSQLActionException in all sendResponse paths
    
    One code path to sendResponse(.., e) missed the call to
    buildSQLActionException and resulted in error messages that
    in some cases aren't very helpful.

commit 4141072506528f89606820d51ea90324edbc3209
Merge: 783e74884b 50c2ea0d2a
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Jan 19 17:23:17 2015 +0100

    Merge pull request #1536 from crate/dobe/planvisitor
    
    Made Plan an interface and use a visitor for Plans in executor.

commit 50c2ea0d2abfd5d13c1db10f0d29ad5093129e06
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Jan 19 17:21:26 2015 +0100

    minor renamings for visitors in executor

commit c403ac5377e96599e8e0460e2d1a819509baabb9
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Jan 19 17:13:40 2015 +0100

    consistent Plan implementation naming

commit 36cffe2b482ee565cf50530c511f261e3a4763c8
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Jan 19 16:49:43 2015 +0100

    Made Plan an interface and use a visitor for Plans in executor.
    Existing Plans have been migrated to the IterablePlan implementation.

commit cb65c81e46bc120861f0637fb620b8fe78289ee0
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Jan 19 15:35:24 2015 +0100

    updated changelog to reflect 0.46.3 and 0.45.7

commit 783e74884be43451ca44fde470ff613e8ac0ea8d
Merge: d58aae17bc 28e067131b
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Jan 16 23:09:58 2015 +0100

    Merge pull request #1533 from crate/dobe/plannerrenamings
    
    Dobe/plannerrenamings

commit 28e067131b6d7c4d2c82be0690bcf96848a35d5d
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Jan 16 23:05:00 2015 +0100

    renamed .v2 package to .consumer

commit 53e4be4e7b6ee928d1338cb3127910dd903ed4f8
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Jan 16 22:58:51 2015 +0100

    renamed PlanVisitor to PlanNodeVisitor

commit d58aae17bca9d65804319b331e7e2f2b8da128dc
Merge: 70cfca9529 4d7b495a61
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 16 17:23:14 2015 +0100

    Merge branch 'master' into relations

commit 70cfca952920439cc8db9bcc201c863e2f9c31b0
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 16 15:25:38 2015 +0100

    update CHANGES

commit 57442df1d3b0e7dee962379777210c857dd78b0f
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 16 15:23:43 2015 +0100

    remove ES update by query benchmark, not possible anymore
    
    this worked only using the now obsolete and
    deleted update facet

commit 55d5c1ef2917bbbf52ced4edaf6243fe86fca5f1
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Jan 16 14:31:18 2015 +0100

    documented that it’s possible to reference a column
    within an update expression

commit b196478af3dfeb07ebecabb36fd246e842a707be
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 16 14:26:11 2015 +0100

    use ES upstream without obsolete update-by-paths support

commit e2916c1bfe84e6f8bbfe35259c8a6f9fa3e1b5ef
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 16 14:01:04 2015 +0100

    remove obsolete update facet

commit 325abb34ed825e0eda8a2fd2db273e543ebbff4f
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jan 14 21:53:32 2015 +0100

    implement update by id with expression assignment support

commit 03fb662030a27d4fdca3d27fa077c9cf4e23f164
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jan 14 19:48:59 2015 +0100

    move update integration tests into own class

commit ae512da5d5e83baa640363e9607ed115cfb11594
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jan 13 17:09:15 2015 +0100

    implement ShardUpdateRequest + TransportShardUpdateAction
    
    evaluation of assignments is now done at the TransportShardUpdateAction

commit 4d7b495a613ffc11d493f4f4f29f1f4bdb022ebf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 16 15:56:20 2015 +0100

    fix plan for QAF with limit / order by
    
    (also includes a change to make toString() more compact in
    various places. Makes the values easier to read in the
    debugger)

commit a58918b7ecc539c77ff0dc61e008d7af4631f337
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Jan 16 14:58:37 2015 +0100

    fixed documentation: Instead of an exception a zero
    row count is returned
    if > 3 VersionConflicts occur during an updated

commit 016157b41e5d32ab8d185b0d1f45ec8599c16d34
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Jan 12 17:25:04 2015 +0100

    fix: throw correct exception if one uses `_version` in a select statements
    where clause

commit d849cb30ae3c80eaca4cf0f8b8a6f5187799e441
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jan 12 16:35:54 2015 +0100

    implement bulk update support using new update projection architecture

commit c7287448abf2496393646fc54e1e364d0ce8c1f1
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jan 5 16:52:35 2015 +0100

    replace usage of ESUpdateTask by a CollectNode and
    a newly implemented UpdateProjection
    
    TODO: remove expression evaluation from UpdateProjector after our custom UpdateRequest is implemented

commit f9ae08d56a827710f23fcdb4e3903b1044a63d4d
Merge: 52a2bd6fcc 800f085796
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Jan 16 14:50:17 2015 +0100

    Merge pull request #1529 from crate/m/paged_nestedloop
    
    added simple paging functionality to nestedloop node

commit 800f085796e88200dd5101ce82bd3ea163098300
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Jan 16 14:16:59 2015 +0100

    added simple paging functionality to nestedloop node
    
    paging is applied on all fetched results without making use of paged source relations

commit 6dc544de9a7a9625a7b629931f1da7d71c4dfcab
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Jan 16 13:53:28 2015 +0100

    Fix: Return zero row count instead of an exception if update by id
    doesn't match any document

commit 52a2bd6fcc4cf5c085b7496a456f1e885fb3baf6
Merge: 8a125d11d9 60d21bf733
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Jan 16 13:58:20 2015 +0100

    Merge remote-tracking branch 'origin/master' into relations
    
    Conflicts:
            CHANGES.txt
            docs/sql/occ.txt
            sql/src/main/java/io/crate/analyze/DataStatementAnalyzer.java
            sql/src/main/java/io/crate/analyze/SelectStatementAnalyzer.java
            sql/src/main/java/io/crate/analyze/where/WhereClauseValidator.java
            sql/src/main/java/io/crate/lucene/LuceneQueryBuilder.java
            sql/src/test/java/io/crate/analyze/SelectAnalyzerTest.java
            sql/src/test/java/io/crate/analyze/WhereClauseValidatorTest.java
            sql/src/test/java/io/crate/integrationtests/VersionHandlingIntegrationTest.java

commit 60d21bf733df797f2c2e8de07eb0c9f20f0c0193
Merge: d3e595a710 50097a4fe7
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Jan 16 11:41:48 2015 +0100

    Merge pull request #1526 from crate/dobe/sysexpressions
    
    Dobe/sysexpressions

commit 50097a4fe7556aefaf5a188e2f87f482ea782fde
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Jan 16 08:41:17 2015 +0100

    implemented _nodes sys column on sys.operations table

commit 8a125d11d9957e50d92157aaec5610be1cf67b34
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 16 10:46:19 2015 +0100

    remove deprecated AbstractDataAnalyzedStatement
    
    and change CopyAnalyzer stuff to not use it anymore.

commit f7b533f06f5a765a4127791134f48227962d75f7
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Jan 16 00:02:44 2015 +0100

    only allow dynamic field lookup in doc tables
    fixed limited shard queries
    implemented _node column in sys.shards

commit 4a3e38a81396cf1545626f94a44d8da2ee12c8e8
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Jan 13 18:14:14 2015 +0100

    fix: throw correct exception if `_version` is misused in WHERE clause

commit 93fa3d37a1ae3e7f1e8a759e13c5c9135dd64a35
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Jan 12 17:25:04 2015 +0100

    fix: throw correct exception if one uses `_version` in a select statements
    where clause

commit aa629e3a205d2cdc2cfe7dbea9fad0826ea01b95
Merge: 5006de3c50 ec144defa1
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Jan 16 09:42:12 2015 +0100

    Merge pull request #1512 from crate/m/nestedloop_paging_prepare
    
    make NestedLoop use paging on its child relations if possible

commit 6548dda2f6db9a21da236702a6dc3658e342aace
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Jan 14 17:24:13 2015 +0100

    remove deprecated info method from node expressions

commit abf1aa99c24f6e20168585bee2e594ad1eccec8b
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Jan 14 14:30:48 2015 +0100

    removed info method from ReferenceImplementation interface and deprecated usage of it

commit 5006de3c505883c37a7e0599270a67b9191fcab1
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jan 15 22:24:54 2015 +0100

    fix type conversion of bulk parameters

commit d3e595a7108ce27c3d01b4d26e94fb380ed8694b
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jan 15 22:24:54 2015 +0100

    fix type conversion of bulk parameters

commit 81ed4148fdb8eb900200ad3b62eb7e7eb88a27c8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 15 17:41:14 2015 +0100

    use analyzed whereClause in GlobalAggregateConsumer

commit b3f24169a5b01297a9b1ed9732f3c838fca19baf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 14 10:42:47 2015 +0100

    add Path marker interface and remove target() from Field

commit 17727a959b46072a5c54dc87ab6c5f90bde48d67
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Jan 15 15:28:06 2015 +0100

    don’t allow full qualified names in update
    assignments

commit ec144defa17eebb3a1486ce97e5bdb543a3132b3
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jan 15 15:27:09 2015 +0100

    page offset begins after query offset was applied

commit b0c9ef937deb3216ebe134dac292d34e3aa9e0a3
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jan 15 15:24:07 2015 +0100

    implemented iterable bigarrays backed by multiple custom array implementations

commit b5f95b33480316a91b34f5ac6324e46272934734
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 14 23:34:50 2015 +0100

    move Reference validations
    
    target() on Field is deprecated, so can't use/access
    Reference anymore. Moved Validation to
    Planner/Consumer/TableRelation.
    
    This fits better anyway since the validation is often
    execution specific and not some kind of semantic validation.

commit 58a19239be1d2ea0dfd7edf52bc4afb4e547b143
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 14 22:38:54 2015 +0100

    use Field instead of Reference for having validation
    
    unwrap is deprecated. Shouldn't use it anymore.

commit ae1bc1697ca839301e07dea48c6de7ee062ea083
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Jan 15 11:30:45 2015 +0100

    Updated crate-admin to version 0.11.2 which includes following changes:
        - removed usage of sys expressions in wrong context
        - fixed a template rendering issue in cluster view in Safari
        - de-register watches to decrease DOM updates and improve performance in cluster view
        - fixed title of `tables` view if no tables exists or connection is down

commit 282ae7702548a238950adf0c45213d1d1a0b7d8f
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Jan 15 11:28:39 2015 +0100

    Updated crate-admin to version 0.11.2 which includes following changes:
        - removed usage of sys expressions in wrong context
        - fixed a template rendering issue in cluster view in Safari
        - de-register watches to decrease DOM updates and improve performance in cluster view
        - fixed title of `tables` view if no tables exists or connection is down

commit 830b5b260294612d8a5ba9a4ae428d6925263eed
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jan 14 17:17:12 2015 +0100

    make PageableTaskResults return instances Page
    
    and throw UnsupportedOperationException on rows()

commit a8509ff7ef5bea5a8a6af9a102aa3030dd23f1f7
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Jan 14 18:23:50 2015 +0100

    updated changelog to reflect 0.46.2

commit bf853fec53402a4dc7efecda3d4c560648baffc5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 14 18:09:10 2015 +0100

    split/move sort symbol validation
    
    validation that requires data from a Reference can only be
    done in the Planner /Consumer by using the Relation that
    owns the Field.
    
    This is a further preparation to remove .target() from
    Field. Once that is done Reference's aren't available
    anymore during analysis.

commit 470d36b7898c81e4741180f69d78d5ed3e0aba6a
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Jan 13 18:14:14 2015 +0100

    fix: throw correct exception if `_version` is misused in WHERE class

commit f5c08530c2736f5caa7865298564724e4db25d35
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 14 13:54:44 2015 +0100

    analyze LikePredicate without depending on Reference/Field.target()
    
    In order to remove `.target()` on `Field` the
    ExpressionAnalyzer may not use that property anymore.
    
    This changes the like analyzation to only use the types
    which is enough anyway (normalizeInputForReference does a
    lot more is it can also handles objects and stuff which is
    only relevant for insert)

commit fcf70c1b900677db0b17810231cb2f7d53c846a2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 14 13:55:37 2015 +0100

    remove the DataStatementAnalyzer
    
    got replaced with the ExpressionAnalyzer

commit 972834797a1785f5436188b0b429332e714c4d84
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jan 14 09:47:47 2015 +0100

    NestedLoop makes use of pageable source relations
    
    if possible

commit a34f3225a817da7ff2da90615a104e9492f03d56
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jan 14 09:46:28 2015 +0100

    close all searchcontexts after paging through a result

commit 9c34191da2bae15547ba0507314d8bdba0d5be02
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 12 18:34:45 2015 +0100

    add benchmark for GroupingProjector

commit 6fe8a5403bdf10997499874ff32568c8c47f99d8
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Jan 13 19:16:43 2015 +0100

    rename Pagable* to Pageable*

commit 6d39be2669babd5cdf357d2782101ab17021cf52
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 13 16:09:22 2015 +0100

    use correct RamAccountingContext for shard projectors/collectors
    
    As things currently work each collector and projector need
    to use a shared RamAccountingContext that is global per
    operation per node.
    
    (Because one collector will also check the
    RamAccountingContext to see if another collector tripped and
    abort collecting)
    
    This was wrong but didn't really cause any issues as the
    only shard projectors that are currently used don't account
    anyway.

commit 5b371da741d4100e41920fad864eb195936e48bd
Merge: a751d17ac2 b680807312
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Jan 13 16:42:04 2015 +0100

    Merge pull request #1504 from crate/dobe/bytesrefperf
    
    leaverage ordinal fieldcache capabilities for better performance

commit b68080731273609230946af6086cbfe5c386291e
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Jan 13 11:07:13 2015 +0100

    leverage ordinal fieldcache capabilities for better performance

commit a751d17ac2fa4beef451947e7b1b252599a0d45a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 9 15:00:46 2015 +0100

    rework aggregation states
    
    Instead of having an explicit AggregationState for each
    AggregationFunction, AggregationFunctions will now use
    simple java types if possible. This should reduce the
    overhead a bit and simplifies some of the
    AggregationFunction implementations.
    
    Each AggregationFunction now also has a partialType which is
    the DataType of the "partial state value". This made it
    possible to delete the special "AggregationStateStreamer"
    stuff.

commit 9a5d23d08b07bdf2365ff22a02172bca215071e9
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Jan 9 16:39:23 2015 +0100

    disallow _version in the where clause of a
    select statement

commit 12f1db085bdefc5e46f794485d750937c2d0ab02
Merge: f5993b3ae2 8a4a7bd7ee
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Jan 12 09:18:27 2015 +0100

    Merge pull request #1497 from crate/m/qtf_paging
    
    implemented Paging for QueryThenFetch

commit 8a4a7bd7eee170895d153291a99b26d3e2bed84e
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Dec 23 16:18:32 2014 +0100

    implement paging for Query then fetch task

commit 043194761832a053fe97ab70c9b15e392f92e755
Author: Tom Kapanka <spanky@kapanka.com>
Date:   Fri Jan 9 15:10:48 2015 -0800

    Update copyright year to 2015
    
    The year of the copyright needed to be updated from 2014 to 2015.

commit c14fdb6454c3f9b62aad2f300f5c01d0e1b84d7c
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Jan 9 11:53:50 2015 +0100

    fix: throw correct exception if one uses `_version`
    without primary key in a select statements where
    clause

commit 66bc1e9f88bdd315a987f3fd63c3fa8735563f59
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 9 10:45:10 2015 +0100

    estimate memory usage in ArbitraryAggState
    
    missed it in 587b463273fc49b0ccf639dad53d2b1c4ca6ddfc

commit 587b463273fc49b0ccf639dad53d2b1c4ca6ddfc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 8 17:51:31 2015 +0100

    reduce ram acocunting overhead in min() / max() aggregations

commit e2bbe910b6ee2200aeb6f76dcc0191ef80456332
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 8 12:44:24 2015 +0100

    fix warnings in GroupingProjector caused by SizeEstimator usage

commit 8f986b912798ba6d4b41bf8c048bc10da60902b5
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Jan 8 15:24:16 2015 +0100

    improved speed of Alter table settings in
    partitioned tables

commit f5993b3ae22b6dea22a2e4685e198629d9df3c7e
Merge: 252ac7a5c5 cdd0a380c4
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Dec 23 17:48:10 2014 +0100

    Merge pull request #1488 from crate/m/pagable_tasks
    
    add PagableTask and PagableTaskResult interfaces

commit cdd0a380c4478ba88bcfbd95b073ecb9ddb82a80
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Dec 22 11:29:08 2014 +0100

    add PagableTask and PagableTaskResult interfaces

commit 252ac7a5c5dca7b9f585057ffd1d2e16ef861cf0
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Dec 23 16:46:26 2014 +0100

    added QueryAndFetchConsumer

commit 38eea16f4831840e284d807bd1480027cf41e06f
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Dec 23 14:02:13 2014 +0100

    added ReduceOnCollectorGroupByConsumer

commit 024601c2780700781f94d18b68d63df100f5e378
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Dec 23 10:25:59 2014 +0100

    added NonDistributedGroupByConsumer

commit e081141ba2eba13477075cde7abf66f84fad432c
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Dec 22 16:20:09 2014 +0100

    Updated Changes after 0.46.1 hotfix relase

commit 5d3db04f85b90ad4851a2eae959fb3e1c0244b3e
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Dec 22 13:59:12 2014 +0100

    added InsertFromSubQueryConsumer

commit b0ec023f9429191b0b98d9ff6e14f04b8afb3f9e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 19 15:16:57 2014 +0100

    make InsertFromQuery a relation
    
    Must be visitable using a RelationVisitor for new consumer
    pattern in the planner

commit 2012e4ac525fe89a9a22711a70956234ba88d0da
Merge: 1d749f79c1 9e866031b4
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Dec 22 13:45:48 2014 +0100

    Merge pull request #1482 from crate/h/aws-dependencies
    
    Fixed broken COPY FROM/TO S3 caused by missing depencenies

commit 9e866031b4f3bfd5b396398861b5f9e733817961
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Dec 22 12:33:38 2014 +0100

    Fixed broken COPY FROM/TO S3 caused by missing depencenies

commit 1d749f79c1bf94f2d46d6046a7ae71e2d33a543e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 19 17:07:21 2014 +0100

    wait for schema update in doc tests

commit 470562e8f235ead09af2c33dd56deac884e92a90
Merge: 4facf2a0f5 942cd6eca8
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Dec 19 17:17:57 2014 +0100

    Merge pull request #1479 from crate/m/nestedloop
    
    M/nestedloop

commit 942cd6eca8c02edb6638338741ed112590c5444b
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 9 17:46:13 2014 +0200

    implemented nestedloop operation and creation/execution from nestedloop plan

commit 3c244544ac1773f82094d10f92a9e78a5c41025b
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Dec 17 15:51:12 2014 +0100

    added NestedLoopNode

commit 4facf2a0f5a25cc99dd1aa5f5ddf73db54d66464
Merge: aaf7d99d1d f42239655f
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Dec 19 15:35:33 2014 +0100

    Merge remote-tracking branch 'origin/relations' into b/merge_master_relations
    
    Conflicts:
            sql/src/main/java/io/crate/planner/Planner.java

commit 08a754369e9a37875cbe050b0a1ba5b51a998caf
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Dec 19 15:18:50 2014 +0100

    upgraded crate-admin to 0.11.1

commit aaf7d99d1dd6a0d740b3a464c0c8e48716f369c3
Merge: c7f0932c81 2a546c9561
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Dec 19 13:18:35 2014 +0100

    Merge branch 'master' into relations
    
    Conflicts:
            CHANGES.txt
            sql/src/main/java/io/crate/analyze/AbstractInsertAnalyzer.java
            sql/src/main/java/io/crate/analyze/DataStatementAnalyzer.java
            sql/src/main/java/io/crate/analyze/InsertFromValuesAnalyzedStatement.java
            sql/src/main/java/io/crate/analyze/PartitionPropertiesAnalyzer.java
            sql/src/main/java/io/crate/analyze/UpdateAnalyzedStatement.java
            sql/src/main/java/io/crate/analyze/UpdateStatementAnalyzer.java
            sql/src/main/java/io/crate/metadata/ReferenceInfos.java
            sql/src/main/java/io/crate/planner/PlanNodeBuilder.java
            sql/src/main/java/io/crate/planner/Planner.java
            sql/src/test/java/io/crate/analyze/BaseAnalyzerTest.java
            sql/src/test/java/io/crate/analyze/DeleteAnalyzerTest.java
            sql/src/test/java/io/crate/analyze/DropTableAnalyzerTest.java
            sql/src/test/java/io/crate/analyze/SelectAnalyzerTest.java
            sql/src/test/java/io/crate/analyze/UpdateAnalyzerTest.java
            sql/src/test/java/io/crate/integrationtests/SysShardsTest.java
            sql/src/test/java/io/crate/metadata/table/TestingTableInfo.java
            sql/src/test/java/io/crate/planner/PlannerTest.java

commit 1a3769f1f30fac514dabda851f698580720e8c7f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 19 11:50:35 2014 +0100

    keep thread pool open until all pending requests are done
    
    If a pending request is Rejected after close() has been
    called it is re-scheduled. This re-scheduling fails if the
    threadPool has been shutdown.

commit f42239655f31fc23659dd0ab3ab4e03a698ec24c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 19 11:13:06 2014 +0100

    throw meaningful errors if expression is unsupported

commit 695f81824b850ec097bdd77832d6748bd8b465a1
Merge: 4d89bfc99b c5b51c44c6
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Dec 18 15:54:56 2014 +0100

    Merge pull request #1474 from crate/m/task_executor
    
    adapt TransportExecutor to be able to create and run tasks dynamically

commit 6b37b02e0d6b4b5bbf854bdb501e8b1c181d4ecd
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Dec 17 22:14:55 2014 +0100

    switch to container(docker) based travis builds

commit c5b51c44c649426422078996be6f3bfa885c930d
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Dec 18 12:11:16 2014 +0100

    adapt TransportExecutor to be able to create and run tasks dynamically
    
    and streamlined the TAsk interface and usage

commit 4d89bfc99be42fb75e6fe425edd6758c1acff2ad
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 18 11:55:44 2014 +0100

    add DistributedGroupByConsumer

commit 2a546c95619701658c893e4538a084ceab115f28
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Dec 17 16:16:24 2014 +0100

    don’t allow ‘[‘ in column names

commit c7f0932c81a714735f2f681b3fe4fa7caf2a9740
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 17 14:07:02 2014 +0100

    add QueryThenFetch consumer

commit acbaa867ebb442140052871cfedd064778df9a00
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 16 17:49:52 2014 +0100

    add get consumer

commit 0026bd1560fa9cdc53282d6282f7edfec48636c2
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Dec 17 16:42:37 2014 +0100

    moved changelog entry to correct release

commit 411367755f6b505c4a8b43fc8f0937c749e160ea
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 17 11:40:07 2014 +0100

    disallow using sys expressions in any context

commit 83074345e75badbafe8a4b6959ee64ed827a7913
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Dec 17 16:18:37 2014 +0100

    prepare release 0.46.0

commit 524f140c2f2755927b1a0c25db25718bfb437b92
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Dec 17 10:10:10 2014 +0100

    updated changelog to reflect 0.45.6

commit 3d807d20bc4de8fbb8c7749951e8e860c2b1cdcd
Merge: cd214d78ed 8e21adf7ce
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Dec 16 17:38:01 2014 +0100

    Merge branch 'user_schemas'

commit cd214d78ed1e4646e0e57eb1ca2f764a7ff52bfc
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Dec 16 17:34:34 2014 +0100

    updated es upstream to fix flaky DeallocatorsTest

commit 8e21adf7ce70225e0205857d15d1b12c0d1321c1
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Dec 16 17:17:10 2014 +0100

    add note about partition name limitations

commit 3947a75c9a8e7bc8002d6eda19d91adb31430ae5
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Dec 16 12:50:54 2014 +0100

    updated CHANGES

commit 8e95c010cf8842464f9f79b322f2565520561637
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Dec 16 09:45:54 2014 +0100

    upgraded admin-ui to 0.11.0 (including custom schema support)

commit f59397667b14867b713ced12d4bc5c11e7637de9
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Dec 15 15:19:28 2014 +0100

    eliminate concrete doc schema checks
    
    replaced with system schema checks.
    also use defined schema at shard expressions instead of hardcoded `doc` one.

commit b3b78fa191b19ed22531904f406de0f1a5528313
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Dec 12 07:59:41 2014 +0100

    forbid empty schema on table creation
    
    and streamline exceptions thrown on illegal schema or table name

commit 38677d8cabcbadd20a26a0d86920a5c8324ba444
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Dec 12 07:58:40 2014 +0100

    add SCHEMA to non-reserved keywords (according to ISO/IEC 9075)

commit f5e80276b7270c378f575b02e6442b4ea373197c
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Dec 11 03:29:26 2014 +0100

    correctly handle partitioned table indices and templates

commit 1010c5660d9e663dcafdeebbd371e1ae46dd6551
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Dec 11 01:45:46 2014 +0100

    change PartitionName to consider schema names for custom schemas too

commit 93fd9c140a3a570b894c4148c52414595e806131
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Dec 11 02:14:52 2014 +0100

    add support for using custom schemas

commit 0072edc75ffea86f846cfe6fdabd90df0322c272
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Dec 9 15:57:10 2014 +0100

    added docs about querying user schema tables

commit 4e209a015db9c2f9faff2ffdbb84bf4902449232
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Dec 9 15:12:45 2014 +0100

    added docs for the user schema feature

commit 0ff2ad4615387063627c96ae39ff8a494897244a
Merge: 33117a9f53 813febb6da
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Dec 16 17:02:06 2014 +0100

    Merge pull request #1461 from crate/m/copy_to_dir_exc
    
    M/copy to dir exc

commit 813febb6dab696c8ed59fc446e86e15ba8be7ad8
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Dec 15 18:16:52 2014 +0100

    improve error messages on copy to and copy from

commit 4dac0d2c96ebfd56fdc897bba819fbe3853946a7
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Dec 15 18:16:39 2014 +0100

    catch CollectionAbortedException in LuceneDocCollector

commit c2f406df840f34150bd76816b85f54e6de683d15
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 16 11:38:58 2014 +0100

    add normalize in TableRelation

commit 33117a9f532d6494eb16087c9880ec80fe30c05e
Merge: 3c923e9d1e 93ea7f7a4a
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Dec 16 16:03:50 2014 +0100

    Merge pull request #1465 from crate/m/non_distributed_group_by_fix
    
    fix plan of non distributed group by queries

commit 93ea7f7a4ad6327edb2084e8a7d1fea658acbf00
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Dec 16 13:46:30 2014 +0100

    fix plan of non distributed group by queries
    
    and separate the planning process into two methods to reduce if/else shizzle

commit 3c923e9d1e0efd088b46cd6def376f5f0787bca2
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Dec 16 14:28:21 2014 +0100

    Fix: Added comments to the logging.yml config file
    and reduced the amount of log entries by changing
    the loglevel of some log messages

commit 572d00fbaf65ee348735dbd7ad7cf0e15df52df5
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Dec 16 15:19:23 2014 +0100

    documented that updating minor and major versions
    is critical and that the user has to check the
    update path.

commit 96f4590b6bea589edf2fa8c4c326a303edc89f04
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 15 16:56:25 2014 +0100

    add global aggregate consumer

commit ccebe6add40679785c2c807ead62b4a366873a40
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 9 14:39:36 2014 +0100

    Plan global count(*) in ConsumingPlanner

commit d6f65dd5157feee122b44e008432a671c3a1f787
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 16 12:03:48 2014 +0100

    don't unwrap symbols in ExpressionAnalyzer
    
    In case of functions those were changed inplace and the
    fields got lost. But they're required in the Planner later
    on.

commit 175733c1ff645858e980a382f59ced32cf27f7a2
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Dec 16 12:21:10 2014 +0100

    Fix: Changed output of column names in error
    messages to subscript notation, so the correct
    notation to address columns in sql is reflected

commit c0b0cce862e97a69d6ec199504f79b5aa07b86e5
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Dec 15 16:59:38 2014 +0100

    correctly track input columns for having clauses in group by queries

commit 831a8e32f6256a0d54f8bc5fbff2c8a83b10e229
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 10 13:09:10 2014 +0100

    add broken test for having

commit ead30fbd12de43e59a1ce699de817d18add06163
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Dec 9 16:10:46 2014 +0100

    try to fix flaky blob RecoveryTest

commit 6b11d9a95c515f012aa1509809bb6c04d6793fa4
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Dec 15 17:36:29 2014 +0100

    remove travis badge (builds are flaky)

commit 20deb66f58a05a72854b19c4220be9d4a69828eb
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Dec 15 16:41:26 2014 +0100

    Fix: Using CLUSTERED BY Column in PARITIONED BY
    clause throws misleading exception

commit 2741ddbc2e23434d8b06003a6d076433313eea7c
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Dec 15 15:26:14 2014 +0100

    Fix: Inserting arrays with a null value at first
    position failed

commit e4de398d4f41814523e12bec4179d6db44586650
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Dec 15 13:50:25 2014 +0100

    Fix: Nested Columns of ignored objects where exported
    as null values when using COPY TO

commit 831f3d4abe5d4bb9d5c5ddf5e1e752649d4ce8ed
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 2 18:36:09 2014 +0100

    change SelectAnalyzedStatement to have source relations
    
     - SelectStatementAnalyzer delegates to relationAnalyzer
     - RelationAnalyzer can now analyze QuerySpecifications
     - Moved some validation logic that depends on TableInfo into the Planner.
     - Moved some tests from SelectAnalyzerTest into
       WhereClauseAnalyzerTest or PlannerTest

commit 95755c43ad80299a9d27c9d9ea50327ca14dfdb0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 1 16:29:06 2014 +0100

    change update analyzer to have sourceRelation and use relationAnalyzer/expressionAnalyzer

commit a89bc91421107d421feddcae204e9a3b09fe04c8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 25 11:51:14 2014 +0100

    change Delete Analysis to relation structure
    
    DeleteAnalyzedStatement now has a relation as source/target
    instead of tableInfo.
    
    In case of bulk operations there are now longer nested full
    blown AnalyzedStatements but only multiple WhereClauses.

commit dcc820ef75ac63a3ed4889f6fb415b4dd729c3f9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 24 17:44:46 2014 +0100

    use ExpressionAnalyzer in CopyStatementAnalyzer

commit a67c56b93b567b958274b35621e13cedf01817fa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 24 16:09:19 2014 +0100

    add RelationOutput symbol and ExpressionAnalyzer
    
    This commit adds a RelationOutput, ExpressionAnalyzer and a
    RelationOutputResolver.
    
    The ExpressionAnalyzer can be used to convert Expression
    (from SQL AST) into a Symbol. Using composition over
    inheritance makes it possible to easier handle nested
    relations and re-use the ExpressionAnalyzer for different
    sources.
    
    The DataStatementAnalyzer is now marked as deprecated and
    shouldn't be used anymore.

commit f4f39a88a202731408ebd3a185ce5015c95ff6a6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 11 14:11:45 2014 +0100

    remove Streamable from PartitionName
    
    not used/required

commit 7761dc281a51a40073a73a5a857433250e206ada
Author: Rene Treffer <treffer@measite.de>
Date:   Tue Dec 9 21:31:03 2014 +0100

    Add a "run" task similar to the runDebug target
    
    Example usage: ./gradlew run -Des.path.home=$(pwd)/sandbox/crate_1/
    Note that all system properties are copied, thus -D on the gradle command line will work.

commit 91be85a95aa0f0127374f3d6c5985f5804a2356e
Author: Rene Treffer <treffer@measite.de>
Date:   Tue Dec 9 21:44:25 2014 +0100

    Fix symlinks in the crate documentation
    
    1. Symlinks should not contain a full path if possible as
       full paths are not portable
    2. The symlink target should be app/plugins/crate-admin/_site - this is
       the only _site I could manage to generate (via ./gradlew dist)

commit 0f29e646e9851553cd277fc580894438a74c7ce3
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Dec 10 18:15:57 2014 +0100

    Clarified naming in InsertFromValuesAnalyzedStatement

commit cbdbe930d64508dc99632abee25f9dd1a9f2e6dc
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Dec 10 16:14:58 2014 +0100

    improved speed of bulk inserts in partitioned tables to avoid request timeouts

commit 37ce1b9f7708b77346e61582e31d5f6fb0093588
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 10 11:45:09 2014 +0100

    catch all throwables in merge transport
    
    If there are streaming errors the requests will just get
    hung up and never return if only IOException is catched.

commit 8ed48ab9381e827a907e86a3e78d2ef17f64b74d
Merge: 59ef25ccfb 14215c08dd
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Dec 10 11:09:51 2014 +0100

    Merge pull request #1440 from crate/m/information_schemata
    
    added information_schema.schemata listing all available table schemas

commit 14215c08ddc50d129832119c7d047e4df670bae1
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Dec 9 17:05:42 2014 +0100

    added information_schema.schemata listing all available table schemas

commit 59ef25ccfb1e7e51f860cf31bf8b6b17d509c3c4
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Dec 10 09:28:57 2014 +0100

    normalized master changes

commit 0df86e51be9b9e2dbd4100cd589c40b74b9af9a6
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Dec 9 12:28:10 2014 +0100

    update es upstream to fix another flaky test
    
    Deallocatorstest.testDeallocatorsDeallocateOngoing

commit 1c6252c27d6b85642915f83ceab48660e47b8c2c
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Dec 9 11:21:16 2014 +0100

    updated es upstream to fix flaky ES tests
    
    * NodeStartStopTest
    * DynamicArrayMapperTest

commit 0e8d0ac1dc295c1ae9e008a21f7cbc1b0baf5fee
Merge: fc158e9943 49207735d2
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Dec 9 09:58:51 2014 +0100

    Merge pull request #1436 from crate/m/dynamic_array_edges
    
    handle dynamic empty and null arrays

commit 49207735d289bac1d1dbf4bd677e25a42849318b
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Dec 9 09:55:45 2014 +0100

    handle dynamic empty and null arrays

commit fc158e994341e5ad7d15c5b4f886aa4a7893ddb6
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Dec 5 23:05:39 2014 +0100

    travis: increased heap

commit 7ad810281c9fd462c111e9807d7c9e98e711a252
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Dec 5 22:15:11 2014 +0100

    fix travis OOME by adding memory related java env options

commit ab1aad387576084dcd7974579c2bba37883dbeb9
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Dec 5 18:32:30 2014 +0100

    updated elasticsearch upstream

commit 543988cbca2c94402ea2a3859a47c890aa69b0d9
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Dec 5 17:57:44 2014 +0100

    fix flaky blob RecoveryTests
    
    wait for writer threads to actually terminate

commit e005d6827f9481d8f6a9db3284531fc12e94ad32
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Dec 5 17:48:01 2014 +0100

    updated elasticsearch upstream to fix flaky tests

commit 959aba59c5a040c3436347f9c57227ca3355a222
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Nov 20 09:56:10 2014 +0100

    Array types are now fully supported in dynamic schemas.
    Note: Crate performs an internal migration, therefore downgrading to an
    older version is not supported

commit 760cba9a9a113ed8b816b7acebbae93a74f36a97
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Dec 5 16:16:03 2014 +0100

    hooked up query circuit breaker into ES circuit breaker hierarchy
    
    also enhanced query ram accounting and renamed
    query breaker settings

commit 9ef565e691dd3e9954c287015aa8ab6569a9d813
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Dec 5 14:20:53 2014 +0100

    fixed flaky TransportSQLActionClassLifecycleTest.testSysOperationsLog

commit 5c49be85a71b4040134901bd5129b346652c914d
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Dec 5 13:56:28 2014 +0100

    updated elasticsearch upstream to fix flaky tests

commit c316f8c8b508c7e7d744e3cf5787e351cdbc04c2
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Dec 4 17:34:58 2014 +0100

    Updated Elasticsearch to 1.4.1

commit 087efb5a45ae4c896c93ce4d520f57536f7c47d2
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Dec 3 16:27:15 2014 +0100

    fix flaky ReferenceInfosITest
    
    forgot the rare case that all shards are on 1 node

commit 9626782ac2f12ef916e5edf3fffc6475abb92db1
Merge: f41bb23029 9ff8f26bda
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Dec 3 15:53:34 2014 +0100

    Merge pull request #1424 from crate/m/compile_scalar
    
    actually compile functions when resolving their implementation

commit 9ff8f26bda2dd648e798ec5cd9e1525dcff7a541
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Dec 3 15:16:59 2014 +0100

    actually compile functions when resolving their implementation

commit f41bb23029d861188c44e5e50366316e363f3a14
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Dec 3 15:34:21 2014 +0100

    fix travis badge (wrong project ;)

commit 962f98d9684dec67749296232a56e2e09a5af070
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Dec 3 15:32:42 2014 +0100

    add travis badge to readme

commit 56232269d1647e7461cd7f69adab93ea1b33945e
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Dec 3 15:06:35 2014 +0100

    added note in DEVELOP.rst that test will fail if their is no running network connection

commit 778b248bbc834a89ed6d856ccd16f8f0f8981dcb
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Dec 3 14:34:20 2014 +0100

    fix flaky tests
    
    - use schema for all nested objects if not testing
      dynamic mapping
    - use columns of defined schema to avoid dynamic mapping

commit 9af48f9524946dfe6f25c7cd3543cd706f6b0006
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Dec 3 14:32:38 2014 +0100

    fix non-distributed group-by plan

commit 68d89ff3a0e1dc3b280c4fc61fafb699f8295952
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 2 14:54:33 2014 +0100

    remove a lot of unused code
    
    bye bye!

commit bc3c604d03e434c7cca715562e34b753fee5ac37
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 1 22:54:44 2014 +0100

    disallow indirect updating of nested clustered by columns

commit 07231fa8d4bfd712e5e3355a039c43fb1b4e9dc9
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Dec 1 12:07:17 2014 +0100

    always reset cluster settings after test run

commit f2c573ad2a4d64d2a6d8995004c9c47d86acb9f6
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Dec 1 22:24:38 2014 +0100

    do not account ram on projector instantiation

commit a639f83b7d8315b5e25a7b3fa51bb6d7c1dd6c9a
Merge: e28bc216ab 7ba2bd83c0
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Dec 1 17:53:26 2014 +0100

    Merge pull request #1416 from crate/m/flaky_blob_coverage
    
    fix flaky blob coverage

commit 7ba2bd83c089f44607ac63fccd4ef0d25ce9784f
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Dec 1 17:26:26 2014 +0100

    fix flaky blob coverage

commit e28bc216ab5ae6f379166677ed4dc1c6a2086b4b
Merge: b09c253bdf 25faa70ea6
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Dec 1 15:51:35 2014 +0100

    Merge pull request #1414 from crate/b/fix_group_with_limit
    
    fix group by queries on system tables with limit or the same aggregation...

commit 25faa70ea6b56d0bd867aee3531bbe79024282ef
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Dec 1 10:24:52 2014 +0100

    fix group by queries on system tables with limit or the same aggregation twice

commit b09c253bdfa35055ae6e55236a54c66288f13d03
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 1 12:01:16 2014 +0100

    fix locking in MergeOperation addRows

commit 91d3a1301c2746ee60dc0f2de10bbe72256086b3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 28 12:06:35 2014 +0100

    update es/upstream to include UnicastZenPing change
    
    nodes should accept pings while in disabled state.

commit 2841e332e830b4dcffcdcdfb00cdce381973b0fa
Merge: 641c803eff bfd35ea0db
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Nov 28 11:10:22 2014 +0100

    Merge pull request #1409 from crate/dobe-consistency
    
    docs on storage and consistency

commit bfd35ea0dbe7bd914a52ff5fe973bbf947eb9c64
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Nov 28 11:03:29 2014 +0100

    fixup! docs on storage and consistency

commit 83f418e2ae6ddd0237f2703765b2cf8ba68ec7b7
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Nov 27 16:48:40 2014 +0100

    docs on storage and consistency

commit 641c803effba6f3fac46db9c548f7a1b6aa07d5f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 27 16:33:10 2014 +0100

    remove rowGranularity from Analysis/AnalyzedStatement
    
    It is not allowed to have a column with a finer granularity
    then the table has in the query. So it is unnecessary to
    keep track of the max rowGranularity because
    tableInfo.rowGranularity() will always have the max
    rowGranularity.

commit b109166af7e0102511a4f1dc84d1061cfb85ffde
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 27 15:34:37 2014 +0100

    move validators into their own package
    
    also hides the visitor in internal classes to have a cleaner
    public interface.

commit 3adbad4aa6d4b8cea3fcdff467427259f2ea7c50
Merge: 6df932d70e 5878a84ad0
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Nov 27 11:26:24 2014 +0100

    Merge pull request #1405 from crate/m/grrrrrrraceful
    
    M/grrrrrrraceful

commit 5878a84ad0a11e899511bfce95962496906ee27d
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Nov 27 10:56:47 2014 +0100

    update es upstream to use a named threadfactory for AbstractDeallocator

commit 8d1648762b599b7eb825387418df30520568f54f
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Nov 27 10:40:37 2014 +0100

    unflake graceful stop integration tests
    
    by using a more reliable method of getting the public ip, and not one that is
    e.g. a virtual interface for virtualization purposes

commit 6df932d70e7f1c0efd43188f25c59a3053c675f4
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Nov 25 15:10:48 2014 +0100

    Add sql query circuit breaker.
    
    This adds a sql query circuit breaker which tries to estimate the amount of memory needed by a certain operation of a query to prevent a OutOfMemory exception.
    It raises a CircuitBreakingException if the limit exceeded.
    The default limit is 60% of the available HEAP.
    
    The limit can be configured using the ``crate.breaker.query.limit`` and related ``crate.breaker.query.overhead`` settings.

commit 7691bb1aa9078a1945aae0006989b15a50490e70
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Nov 25 21:22:15 2014 +0100

    fix NPE while handling shard failures of a distributed collect

commit 04cc033b363cf31e86b5bda16d6366301a9209f8
Merge: 3962c6598c ff1c848dc7
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 25 17:56:29 2014 +0100

    Merge pull request #1397 from crate/m/nested_arrays
    
    validate nested array values in INSERT and UPDATE statements

commit ff1c848dc77b716eeaea50779dde68844119d390
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 25 16:13:02 2014 +0100

    validate nested array values in INSERT and UPDATE statements

commit 3962c6598c12331c2c07f0c9f195205bd0c79423
Merge: b203a4527c 3f73291294
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Nov 24 16:25:51 2014 +0100

    Merge pull request #1393 from crate/m/graceful_stop_fix
    
    M/graceful stop fix

commit 3f732912940b5327234e9a16d65a80fd853f7e75
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Nov 24 16:07:40 2014 +0100

    update es upstream to fix graceful stop behaviour

commit e00be31eb95e35a242ecd3d3a17deaa45f5aa2ba
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Nov 24 15:39:48 2014 +0100

    increase timeout for discovery and don't set routing enable settings

commit b203a4527c73dec5af57a40e7e22bf889019dd1e
Merge: 92f51b6157 e7bba2c184
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Nov 24 14:20:47 2014 +0100

    Merge pull request #1390 from crate/h/multiargs-array-fix
    
    fixed null insert into array as first bulk argument

commit e7bba2c184a066b6205af8e0aa3d87e97e4df2c7
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Nov 20 14:22:57 2014 +0100

    fixed null insert into array as first bulk argument

commit 92f51b6157126744d63af299bbba7a34ab3d23d6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 24 14:16:51 2014 +0100

    fixup! add AnalyzedRelation interface and RelationVisitor

commit 7081ce661dc7bda896747261f68d1c0a26e10d0c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 24 11:49:03 2014 +0100

    add AnalyzedRelation interface and RelationVisitor
    
    Used in the Planner and InsertFromQuery case to do
    dispatching to SelectAnalyzedStatement.
    
    For now the AnalyzedRelation is just a marker interface
    until more Relations are added.

commit 969520989617a60080043edc6c38b8b46203f1b0
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Nov 24 12:26:10 2014 +0100

    prevent thread leaks due to deallocator prestarting threads

commit d04ccaa52354db4463b06bcd6d82d5d5473cdd51
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Nov 24 11:48:58 2014 +0100

    update es upstream to current no-comma-routing fix

commit fcf6323b91db5ecda23212040858dc7d447cccc7
Merge: cadb8f3f5b d6b2e4808b
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Nov 24 11:44:03 2014 +0100

    Merge pull request #1384 from crate/m/no_comma_routing
    
    fix routing for delete by query and count(*) statements

commit d6b2e4808b02832a5d07e24c955e428832fa2096
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Nov 21 13:58:56 2014 +0100

    fix routing for delete by query and count(*) statements
    
    by providing custom transport actions that interpret the routing parameter as a single opaque value
    and perform no splitting

commit cadb8f3f5bb1854e47ed11f579fd91437b0cb97d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 21 16:20:01 2014 +0100

    Add OrderBy object to encapsulate symbols / flags during analysis.

commit db4a7b9b9347ad1a179a84e9f8a5e50c59910817
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 21 12:22:01 2014 +0100

    remove rowCount from TaskResult interface.
    
    Tasks will now always write the rowCount into the rows and
    there is only one place where the extraction of the rowCount
    is done (in the transport where the SQLResponse is built).

commit ca2345133423269409f5c5d2a0d6bb08f458b6f5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 21 10:54:11 2014 +0100

    execute DDL statements using Planner/Executor

commit c378531997b77f6b03067828ea4363ee88f6c816
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 20 17:44:28 2014 +0100

    rename Analysis to AnalyzedStatement

commit e4294e1afe40d923ed4105a041c7f3373c7b282e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 20 12:32:06 2014 +0100

    remove unused BindingRewritingTraversal

commit 813e27743e3102760fd3c80fd3e15f13934c310c
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Nov 19 17:12:24 2014 +0100

    added section about lexical syntax to documentation

commit 11d7f5287cf235b245e061873511c9dedcd2cdf8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 19 18:01:19 2014 +0100

    move attributes from AbstractStatementAnalyzer to classes where they're actually used

commit 61ebc05bae3ced3df1441d22b2ec37920a39f9ca
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Nov 19 15:50:20 2014 +0100

    fixed information schema reporting wrong data type
    
    of arrays inside multiple nested objects

commit b78ace5f17d2c79cb2f0eb20d16403f8ebc63448
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 19 13:59:29 2014 +0100

    remove unused query attribute in SelectAnalysis
    
    and also replaces deprecated Objects.firstNonNull with
    MoreObjects.firstNonNull

commit cf1a1eca9dd514353969951a5136808aa05a3c15
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Nov 18 15:06:36 2014 +0100

    added more documentation about how to alter partitioned tables

commit a4fe020c05acba868bae22a7752001ee8d97502a
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Nov 18 12:20:36 2014 +0100

    made insideNotPredicate thread safe

commit ff36a3f4133cc8dd834d5b349644b1fff1e02a77
Merge: 087812461f 1599c6c87d
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Nov 18 13:07:03 2014 +0100

    Merge pull request #1367 from crate/h/flakeids
    
    use flake ids for internal id generation

commit 1599c6c87de05e325ed4d870d0a8932ddff59a55
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Nov 18 11:39:42 2014 +0100

    use flake ids for internal id generation

commit 087812461f2d60c2d62bcf52769f0dc8f9639418
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 17 19:10:18 2014 +0100

    remove DataTypeSymbol / Parameter
    
    make valueType part of the Symbol interface

commit 6b2798a74b46a60cc94b3d53bc5e4ac2b34059e7
Merge: c29bbd262e 79438e09e8
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 18 09:49:29 2014 +0100

    Merge pull request #1365 from crate/m/thread_leak_tests
    
    stop node and sqlservice in SQLServiceTest

commit 79438e09e8960cfeda2c525e3631a135358262b7
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 18 09:22:59 2014 +0100

    stop node and sqlservice in SQLServiceTest

commit c29bbd262eaa74a3f84c8717d1c6943a2d8ae711
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Nov 18 09:02:01 2014 +0100

    updated changelog to reflect release 0.45.5

commit c06831f1116915ca170d42e2acb2bda853a2ff9a
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Nov 18 08:44:13 2014 +0100

    updated crate-admin to 0.10.2

commit a1107b21bc9eae0ebdc32281d0e8093b6119a379
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Nov 17 16:46:45 2014 +0100

    correctly handle empty clustered by values or values containing commas
    
    as elasticsearch misinteprets empty string or strings containing commas
    do not use these as routing for requests

commit 4c13e059553700f7500e8040770d8235aa2b0da9
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Nov 17 17:45:22 2014 +0100

    changelog entry for commit 99854814bd4dc7bc529526992dfdb42ef01750aa

commit dac1296df26cdb4bae6d21f29686adcf8c35d1c6
Merge: 31e48f7799 99854814bd
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Nov 17 17:43:55 2014 +0100

    Merge pull request #1362 from crate/j/es140
    
    update elasticsearch to 1.4.0

commit 99854814bd4dc7bc529526992dfdb42ef01750aa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 6 14:56:13 2014 +0100

    update elasticsearch to 1.4.0

commit 31e48f77997b841be1088c013c85cd61b7be8188
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 17 16:36:10 2014 +0100

    remove PlannerFunctionArgumentCopier
    
    became unused with fe468cf64b6407fd1b2e06d90927fb3322923dd4

commit fe468cf64b6407fd1b2e06d90927fb3322923dd4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 17 11:23:46 2014 +0100

    support functions in QueryThenFetchTask
    
    removes LocalMerge with TopN projection from qtf-plans

commit ad11f738763ecba50eec35b810b3b8642fb90d2a
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Nov 17 12:37:12 2014 +0100

    forbid using ``alter table add column`` on a single partition.

commit 988811a713688613dbe203e834c69b1e57647735
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 17 11:44:43 2014 +0100

    remove lastEmittedDocPerShard logic from QueryThenFetchTask
    
    was always null / unused

commit b626f3df2d8c9097cb6bc71531e9bdf9b0afcc0e
Merge: 01aee17dee 098da179fa
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Nov 14 14:04:13 2014 +0100

    Merge pull request #1353 from crate/m/ignore_rootfs
    
    do not consider rootfs in sys.nodes.fs['data']['dev']

commit 01aee17dee15fbe15f14933d935b77d213a7ce70
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 14 13:58:33 2014 +0100

    forbid altering `column_policy` on a single partition

commit 098da179faf89090bcf4d0ece3c7eec6758ea31d
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Nov 13 14:58:01 2014 +0100

    do not consider rootfs in sys.nodes.fs['data']['dev']

commit ad4806a22af5e564ad251d50f90e0e59cd0e768e
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Nov 10 17:30:13 2014 +0100

    fix: support alter number_of_shards

commit 3a6f7410e9f60b8c99bec0a775318b5839989f31
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Nov 14 10:50:40 2014 +0100

    mention Debian packages in documentation

commit 800bdfa7bcc392bd0745bd5c13e738d1a5bef8a7
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Nov 14 09:43:07 2014 +0100

    updated crate-admin to 0.10.1

commit 03ec16cd9dd30d1bf1871570ae6395249b82ffae
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 13 15:50:34 2014 +0100

    travis: set ulimit

commit 43cb1644d51a5a596047d380e2d58f975f137d97
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 13 11:25:53 2014 +0100

    use parallel test execution on travis

commit c9bfbe5e812f2245d112ec4c724908552ccd114d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 13 14:11:41 2014 +0100

    fix flaky tests

commit 375e733568cc26f414981e7ec5b33a969cd335f4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 13 11:55:03 2014 +0100

    limit number of threads created on client

commit 66ec27571dd25ba2bad03d5c991b6cecc652ad3a
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 12 18:21:30 2014 +0100

    randomize ports for benchmark and integrations tests

commit cf8e643c588b933f9f5365e81ef6ae9e3ab6f91c
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Nov 13 11:00:30 2014 +0100

    updated changelog according to 0.45.4 release

commit 6ea32969fcd009a62ff92e7ee98b358dc24770ce
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 13 10:35:50 2014 +0100

    remove schemaInfo from Analysis
    
    it is part of tableInfo anyway.

commit 6fe5bb1ffd56c33bd80bff3f4076c180aa7ac6cc
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 12 14:43:03 2014 +0100

    unflake testDynamicPartitionedTable() test

commit 61c22474712f64e0b301361af73b379dff2aad04
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 12 14:03:00 2014 +0100

    unflake testSimpleMatchWithBoost test

commit 11bbec40a492a2d411b32eb93dedc9bc7326edc3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 11 22:03:29 2014 +0100

    make setNextRow in FilterProjector synchronized
    
    Fixes a race conditation where rows weren't filtered but
    should have been. (Or the other way around).
    
    The collectorExpression/condition that is used there
    contains shared state and setNextRow is called from different
    threads.
    
    testHavingGroupByNonDistributed failed about 3 times in 800
    runs.

commit 92667ca923f44e09f6f9df7776aa69651274a097
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 11 22:52:24 2014 +0100

    fix even more flaky tests

commit 53c0cdddd82f1e1ea2907eea04dca9bce01cc6ca
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 11 16:01:16 2014 +0100

    more flaky test fixes

commit 4ae2c589b2b372567aa26525af915f66cddc226c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 11 14:12:53 2014 +0100

    fix flaky tests

commit ca7e19a9080b0faa23bb4a112383e6e5361751da
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 11 12:39:13 2014 +0100

    use randomized testing in TransportSQLActionClassLifecycleTest

commit 435592027a75c98919e329dc3cbd8cfbc13ec9c8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 11 11:52:12 2014 +0100

    fix another flaky test

commit 37fe8c6831882d60feac034ad64bacbe7bdaa89f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 11 11:26:05 2014 +0100

    add missing super.tearDown call

commit b8e16bf9065621864608a6f10a77e3ef035178c6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 11 11:18:08 2014 +0100

    fix flaky test due to async schema update

commit a7c85bbbfb59f4657c7dd31437acb1e19c22ac02
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 11 11:14:08 2014 +0100

    close client in CrateClientTest

commit 5873683a4aa17e4630913f338eb15d53648f38e4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 11 11:13:32 2014 +0100

    use random ports in GracefulStop integration test

commit 88684fa601c2361ab0c1d9ad0a58eb73e07e2397
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 11 10:57:38 2014 +0100

    fix flaky test

commit 28f4b5876892ccc630b1855c714bddb65c3207e2
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Nov 11 09:58:42 2014 +0100

    fix: use ColumnPolicy mapping value instead of enum name

commit 23bedf329761010f16d94ebf8b613f17292f6a1d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 10 17:26:54 2014 +0100

    fix alter table add column on partitioned tables

commit 034457262eb71a78265409ddfc16354dd6df4e9c
Merge: b4cfd87a04 708c16dd21
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Nov 10 17:56:42 2014 +0100

    Merge pull request #1341 from crate/h/docs-wording
    
    replaced all occurrences of 'Crate Data' with 'Crate'

commit 708c16dd215caa4bd3e317b9c192993e0331f110
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Nov 10 17:40:06 2014 +0100

    replaced all occurences of 'Crate Data' with 'Crate'

commit b4cfd87a0405281cf181fadad3584d1b21a588f2
Merge: beaedd304d bc3d1f27b9
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Nov 10 13:49:05 2014 +0100

    Merge pull request #1340 from crate/h/timestampconversion
    
    added cast function for timestamp type

commit bc3d1f27b953eeb516efd85cfa701f707f30b1f3
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Nov 10 12:48:35 2014 +0100

    added cast function for timestamp type

commit beaedd304dc0f6eedb007dc51ec33317d0dfac12
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 10 10:54:53 2014 +0100

    remove unused methods in StringUtils

commit dcb5a1c316ac6476e3b857c9e6b57bedf153a6fe
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Nov 10 09:00:56 2014 +0100

    prepare release 0.45.3

commit d93de5a15ce0398b0ac76dec23a46d7b51eaf126
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 7 21:59:48 2014 +0100

    add names to threadPoolExecutors
    
    makes debugging easier

commit 055e6594084deb9c21480fee2eb6285227c51767
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 7 20:10:33 2014 +0100

    correctly extract nested columns in ESGetTask
    
    Fixes #1333

commit 2e8866cc37586efaf45bf6f834787a5546f8a5a7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 7 20:40:00 2014 +0100

    fix flaky test

commit 0ff662f953554beee20f7d16060e43132f3e6d1c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 7 12:12:44 2014 +0100

    build booleanQuery with TermQueries for "where X in (...)"
    
    the commit 61f0e8c773449b26866f179feedba54665f32cc2 together
    with 8ead30b6816e96b50f3040ee65908b12ea577081 caused a
    performance regression for WHERE x IN as it used table scan
    / source lookups instead of utilizing the lucene index.

commit 6e184fc3e8dd2e92cedcd56392a046e26a6ad8a5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 6 14:58:44 2014 +0100

    update lucene dependencies in client module

commit b090da631f75e918db9533cb9d2dc22b393e2c21
Merge: 47ef662269 f02f6c4df3
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Nov 6 16:29:11 2014 +0100

    Merge pull request #1331 from crate/h/admin0100
    
    updated crate-admin to version 0.10.0

commit f02f6c4df3926aae032e47a1f386a70eee996a3c
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Nov 6 16:05:47 2014 +0100

    updated crate-admin to version 0.10.0

commit 47ef662269e1aa008ee892fc7f3603e81dbd1ba0
Merge: 1d81250d44 4433db0c4b
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Nov 6 14:25:52 2014 +0100

    Merge pull request #1330 from crate/m/benchmark_labels
    
    add version labels for benchmark and delete obsolete benchmark methods

commit 4433db0c4b91b593c90d37dce3a7c5a805ec4edb
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Nov 6 13:55:35 2014 +0100

    add version labels for benchmark add delete obsolete benchmark methods

commit 1d81250d44545b512159fac15389840b91d9cf22
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 6 12:11:24 2014 +0100

    update es/upstream to 1.3.5

commit 2845ded663b604a72210e51aaf7be5d4d87c1a94
Merge: b9f371af44 f2ba55f4c7
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Nov 6 11:28:18 2014 +0100

    Merge pull request #1328 from crate/h/multizone
    
    best practice: multi zone setup

commit f2ba55f4c7d0e5fb4ebb9e82ac10f742dd665baa
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Nov 5 09:05:25 2014 +0100

    added best practice to docs: multi zone setup

commit b9f371af4436b01936514ae499bdaba702bcfe2a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 6 10:34:29 2014 +0100

    update docs/bootstrap.py
    
    new bootstrap won't use system setuptools but download the
    latest version instead.

commit a58d3585a87d679819e3731810efc485f6070394
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 5 17:06:14 2014 +0100

    fix bulkdelete benchmark

commit 932d23db827df620d9aabad48547e84c1cc2884f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 5 16:02:00 2014 +0100

    Require DataType of grouping keys in GroupProjector
    
    GroupingProjector now takes the key dataTypes as argument.
    Currently the types are un-used. But they will be used in
    the future for circuit-breaker and probably type based
    optimizations.

commit 24714574478582ce62f5a8a6e0948d397e8d87f8
Merge: c094c01a2a 9ec2dcddd7
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Nov 5 16:05:14 2014 +0100

    Merge pull request #1325 from crate/h/multinodesetup2
    
    alterations to multi node setup best practice

commit 9ec2dcddd7a87195781b718f1efd27c3c6c7a547
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Nov 5 11:54:02 2014 +0100

    alteration to multi node best practice

commit c094c01a2add2ce38b33c8b8b237cdf3c8b55a56
Merge: 31be829636 bf638a0399
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 5 15:55:54 2014 +0100

    Merge pull request #1326 from crate/m/squirrel_docs
    
    added integration docs for SQuirreL SQL

commit bf638a03999dea21a997ed396249682815120e17
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 5 15:39:57 2014 +0100

    added integration docs for SQuirreL SQL

commit 31be829636d57ee102c4e4b2224542549eb954ae
Merge: fefdb0177f 5fcf73b8ee
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 5 12:16:15 2014 +0100

    Merge pull request #1323 from crate/m/add_subcolumn
    
    fix adding columns inside nested objects

commit 5fcf73b8eef4934bc98a847e85d72a98fa029ef9
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 5 11:38:48 2014 +0100

    fix adding columns inside nested objects

commit fefdb0177f807b192ac7bc702d0ad4267ab0923b
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Nov 5 11:43:41 2014 +0100

    fixed itests that failed because of duplicate
    table creation

commit 3ddfdf494482069e9b74c67f0b4fd5cfcc7da612
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 5 11:15:57 2014 +0100

    update picked versions for sphinx/itest

commit 5441e5be68bb0e397ff30326ddf55603d631b7fb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 5 09:44:27 2014 +0100

    handle partitions in ESCountTask

commit ad7ce63b0cadea0e92285cb7432f77d059753b2c
Merge: b8fe6ed0f3 7b327a343e
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Nov 5 09:43:48 2014 +0100

    Merge pull request #1321 from crate/h/multicast
    
    updated section in multinode setup best practice about multicast/unicast

commit 7b327a343e29275e60c621597d544c7b21d7752e
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Nov 5 09:28:31 2014 +0100

    updated section about multicast/unicast

commit b8fe6ed0f3c2cbe5ce6c872ac9f2dd59e296a4e7
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Nov 4 14:43:24 2014 +0100

    added best practice for multi node setup

commit 600606e8bf9782006cca7138776772a9feafc6c9
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Nov 4 16:42:56 2014 +0100

    add unit test for querying a timestamp string on a partitioned timestamp column

commit 289b68a07e475abf5d15e7b97ef4e13a6e504b6b
Merge: 89b2fca452 1d66761eff
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Nov 4 10:48:08 2014 +0100

    Merge pull request #1317 from crate/b/fix_flaky_blob_tests
    
    write blob tests as java integration tests

commit 1d66761eff967e7bf04853d3b0551009adbfca63
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Oct 30 18:39:41 2014 +0100

    write blob tests as java integration tests

commit 89b2fca4524a086c41cd6b1e1c9f2b680c31362d
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Nov 3 13:58:46 2014 +0100

    added changes for column policy

commit 8fe51fc11a92fede9803ce35ebe84ef3552f6b36
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Nov 3 11:09:00 2014 +0100

    rebased master into strict table

commit f2ab203d2bac8c3e37c5ad48738c9591fba12736
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Oct 24 16:59:31 2014 +0200

    added support for reseting column_policy

commit 6f6fdf9ed693bf588596db7b3875f1e3239010d5
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Oct 22 18:01:58 2014 +0200

    Added support for column_policy in ALTER TABLE

commit 57815d90b032f7b7dc7c3c90c5768bc75921e071
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 23 12:14:33 2014 +0200

    made ReferenceInfo use new ColumnPolicy enum

commit 707a66db6b67729be22b6879d96d684dc85df7f9
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 23 11:43:02 2014 +0200

    added partitioned table integration tests

commit f2398c28f79062a65bf6ca6f206643527128c679
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 22 16:01:41 2014 +0200

    implemented creating tables with 'strict' or 'dynamic' column_policy

commit 6b1d25e05be926c7c661efc8df2bbe46e8802803
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 22 14:49:09 2014 +0200

    add columnPolicy property to TableInfo

commit 55a1f2d0a03951fdb8067e4d502d75f3279c3d51
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Oct 22 14:18:26 2014 +0200

    added documentation for table column policy

commit 3bfa6a5cbe0c52b9c772cabb0df77c05d9beceba
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 31 22:10:50 2014 +0100

    restructure develop.rst and extend contribute.rst

commit 30d35fdfca148a7d0eae5be38e35b5d7d1d92cb5
Merge: 506b3f10c8 5e824aedf9
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Nov 3 11:10:17 2014 +0100

    Merge pull request #1314 from crate/h/obj-literal
    
    object literal example and other documentation improvements

commit 5e824aedf9884868dda9ff348745cbfa666e6fa7
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Nov 3 10:41:01 2014 +0100

    added more examples for string literals
    
    link to csv2json.py in mysql best practice
    added note that the admin interface runs on each node

commit 506b3f10c800d32b828875da4ac9169ee763ec0a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 31 20:18:18 2014 +0100

    update readme

commit dd2e03569245a0ac76ae14f1ab08918bda0a94e0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 31 13:34:23 2014 +0100

    add mongodb migration docs

commit 6f50e15f0ded9fbc9ff236e5b8a46b0a6bc426a8
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Oct 31 16:44:29 2014 +0100

    updated changelog according to 0.45.2 release

commit 6b58266bba6b7ec0512030ba31d8773205319280
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Oct 30 21:33:41 2014 +0100

    best practice for migrating from mysql

commit a85bc8ceb9c301b51a8424fd9b762e6ee663efb3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 30 14:59:39 2014 +0100

    write changes entry for 7dcf68b136abfa55d45e5985eb77d5fb42f71d9d

commit 8ead30b6816e96b50f3040ee65908b12ea577081
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 30 10:32:26 2014 +0100

    always use source lookup in genericFunctionQuery
    
    -> where substr(analyzed_text, 1,1) = 'x'
    
    threw GroupByOnArrayUnsupported exception, now it works
    correctly using source lookup

commit bbf7fa5d14e5efd7138158fb35c30d779ada8c0d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 29 18:05:17 2014 +0100

    correct alias handling.
    
    we tried to resolve QualifiedNameReference by alias
    everywhere but that is only valid in order by and group by.
    
    this fixes:
    
        select name as n, substr(n, 1, 1)
        -> worked but shouldn't
    
        select name as n, n as foo
        -> both outputs where the value of "name"
    
        select tags, tags[1]
        -> tags[1] just used the value of tags ignoring the index access

commit 3c7a1cd0b2d2ba5d9144d3d2ada577ed2b30ee18
Merge: eda1c86924 17ae651841
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Oct 29 18:38:51 2014 +0100

    Merge pull request #1307 from crate/h/regex-hotfix
    
    fixed regexp_matches and regexp_replace

commit eda1c86924fa37d0e5de61523d924767c586c9d4
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Wed Oct 29 16:33:15 2014 +0100

    change aws-java-sdk to 1.8.7 because since 1.8.8
    we ran in timeout issues when using copy to

commit 2813c9f71861761bd827f3a720bced4c146b1e0f
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 23 23:55:38 2014 +0200

    updated and cleaned up deps

commit 17ae651841183b0f1c9eedd70ca13ea3587c2223
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Oct 29 14:48:19 2014 +0100

    fixed regexp_matches and regexp_replace
    
    when used in IS (NOT) NULL predicate
    and provide error message when regex_matches arguments are of incorrect type

commit 5e3e7d9eac9143a69e368aded2516824d645c043
Merge: 2953084c71 fe06b72dac
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Oct 29 13:57:26 2014 +0100

    Merge pull request #1305 from crate/h/lucene-collector-expr
    
    added _id  collector expression

commit fe06b72dac7fd571f7c726d7e4c4c5b42117e520
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Oct 28 18:02:00 2014 +0100

    id collector expression

commit 2953084c7122b3341adcabc6194a1e11f816660b
Merge: 263a28b61e 51086961be
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Oct 29 09:25:01 2014 +0100

    Merge pull request #1303 from crate/h/bulk-insert-parted
    
    fixed bulk insert into partitioned table

commit 51086961be4d32c410240fdbd6cef461d232c43a
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Oct 28 16:01:36 2014 +0100

    fixed bulk insert into partitioned table

commit 263a28b61e510b2f7d49ab4cacde6d764d01f221
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 29 09:18:47 2014 +0100

    fix flaky test

commit 1d9040126ecdd2e4fa4dc397d08dfc837329e33a
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Oct 28 16:43:16 2014 +0100

    updated crash to 0.10.3

commit 5e6354fc78e31c52ace079f182147052c4ca8c6a
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Oct 28 16:12:43 2014 +0100

    updated es/upstream to prevent spurious deletion of dangling indices.

commit 382ade3c792554cdfbcde3568b3d04a4b3dfa143
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 27 22:53:33 2014 +0100

    don't re-write partitioned columns or sys columns to _doc[..]

commit ae0ba00cea67b3c84cc4280265479816c4b6b394
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 27 16:04:18 2014 +0100

    support functions in select-list on queries that do pk lookups
    
    Also made the ESGetTask standalone so it doesn't require an
    additional MergeTask.
    
    In addition the plan for insert from query has changed so
    that it will always use QueryAndFetch to avoid handler
    round-trips.

commit ab422d0e460991d5704cc9ee4eb1725fad1ea21d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 27 17:48:20 2014 +0100

    catch Throwable instead Exception
    
    Otherwise if an AssertionError occurs requests would just
    hang and not get sent to the client.

commit 3bbc7feca1b1f40f7aa53fbcfb956a39cdd8b808
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Oct 27 15:14:27 2014 +0100

    Fix: raise an error if an array is inserted into an objects
    field which is not of type array

commit 68aca73dd13198dd77880f6599641f77d18fc88d
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Oct 24 17:12:49 2014 +0200

    updated changes to reflect 0.44.8 release

commit 1525c3b69188bc79a00ee8ccdbcb3072e5a8bf0e
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Oct 24 12:18:24 2014 +0200

    added documentation for bulk response errors

commit ea83980d6edfe07b4c7bad98b5b934d86abde342
Merge: 5495f29a60 614ed232b9
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Oct 24 09:43:44 2014 +0200

    Merge pull request #1296 from crate/h/dockerdocs
    
    added transport.publish_port setting

commit 614ed232b9daa68c234521a23f9e8e7a7513b8e5
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Oct 24 09:31:59 2014 +0200

    added transport.publish_port setting
    
    and updated docker run command in documentation

commit 5495f29a60c86fef9090a55c8eb08d2efddcfddb
Merge: c56a05fa63 c315df29d2
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 23 17:06:41 2014 +0200

    Merge pull request #1294 from crate/m/shard_projectors_fix
    
    fix issue when grouping by primary key(s) or routing column

commit c315df29d20ee785bdcb2386fbf70874ac1a736a
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 23 17:01:57 2014 +0200

    add streaming unittests for projections with configurable granularity

commit 5e0a084c14aa5725f42a27ba73b198d156950a4a
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 23 15:18:25 2014 +0200

    fix issue when grouping by primary key(s) or routing column
    
    * the required granularity for projections wasn't serialized
    * the projectors executed on every shard weren't initialized properly

commit c56a05fa6354290b9521f85ca47e5093c0c3a199
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 23 16:06:11 2014 +0200

    correctly load services and indexModules in CrateLoader
    
    (8bf829da714f067e9827cb64a04a0b50abed8503 broke blob support
    as it didn't load the BlobService anymore)

commit 30ec2b87f9af8fad2337281cfaf8418275d8b306
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 23 14:47:24 2014 +0200

    update es/usptream to include fetchSourceSubPhase change

commit 8bf829da714f067e9827cb64a04a0b50abed8503
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 21 12:05:07 2014 +0200

    load crate modules using ServiceLoader instead of es plugin mechanism
    
    also add fatjar plugin to be able to create a single crate
    jar.
    
    The es-plugin mechanism doesn't work with a single jar file
    as there can only be one es-plugin.properties file and that
    can only have one "plugin" key.
    
    In order to work around that the CrateCorePlugin is now the
    only plugin loaded using the es-plugin mechanism and that
    plugin is loading all other crate components (using the stock
    java ServiceLoader which works using META-INF/services files
    which can be merged in a single jar file)

commit b9c455af62d010cef97841ff1760439831985325
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Oct 21 17:47:56 2014 +0200

    update changes to reflect 0.45.1 release

commit fb7e676bf67646225a6988f42fc1090cc5e74995
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Oct 21 15:58:45 2014 +0200

    update changes to reflect 0.44.7 release

commit 9ac6195a7f4c7018cde0dd9e676fd6d18eb23005
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 21 12:01:04 2014 +0200

    remove hamcrest-core testing dependency
    
    hamcrest-all is already defined in es

commit 15825d58b534caedeba4818dc81cb012d10bd066
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 20 21:28:04 2014 +0200

    remove unused code

commit 35a2e151866de1d8b99c325c19e59adafa23a393
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 20 12:06:59 2014 +0200

    update jacocoReport task to use subproject sourceSets
    
    and also exclude the testing project

commit ec173de30597f29c300217fe4ba55256eaed4aae
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Oct 20 16:49:41 2014 +0200

    fixed flaky itest which casted the non deterministic
    thread_pools array

commit f27f4b36d664858dc46253e01ff108e2272931b3
Merge: 5b750ad836 ac01137e77
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Oct 20 17:19:59 2014 +0200

    Merge pull request #1281 from crate/h/global-aggregate-fix-partitioned-table
    
    fixed global aggregations on partitioned tables if there is no match

commit ac01137e7797e47d099b25737de4b4d634e4d71a
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Oct 20 16:52:21 2014 +0200

    return correct aggregation result from partitioned
    
    table instead of an exception
    if where clause has no match

commit 5b750ad836f292e25e9a8bb22e7829410c64582f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 20 17:01:24 2014 +0200

    remove tableNames from SchemaInfo interface
    
    was unused

commit af7390ad2affe19ebf4644996154c3c7896e0747
Merge: 16f5bc17c8 4b28dd62a3
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Oct 20 15:46:04 2014 +0200

    Merge pull request #1279 from crate/h/simple-match-boost-fix
    
    handle boost factor in simple MATCH predicate correctly

commit 4b28dd62a3b89215fa43d4297ac027991aa299d6
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Oct 20 15:07:50 2014 +0200

    handle boost factor in simple MATCH predicate correctly

commit 16f5bc17c85e9a7490a29034132eca60cdc2efe0
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Oct 20 14:06:28 2014 +0200

    updated changes

commit 337758f9e816f0d6d6fd234d6b84678bd4b7bcef
Merge: da630f2ffb c0eca7439b
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 20 13:48:49 2014 +0200

    Merge pull request #1272 from crate/m/transportsqlactiontest_split
    
    transportsqlactiontest split

commit c0eca7439bb1947109f5de49c356df0f9085dabd
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 17 16:28:40 2014 +0200

    split up TransportSQLActionTest

commit da630f2ffb691743891b1f488285542017889f48
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Oct 20 10:46:51 2014 +0200

    added store level throttling setting to
    
    data import best practice

commit e378042b56574447b6a132eb2a778d006c219b2e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 20 13:01:27 2014 +0200

    initialize loadingCache only if it will be used

commit 401eead820303bff891e4cc54a0e5b8d08642daa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 20 10:50:43 2014 +0200

    fix flaky testInsertNewColumn test

commit 638027b8defb41ac1e758b64dae1ccf908c9d935
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 20 10:39:02 2014 +0200

    update changes for f8a30caae253c8201b403eeb0651b9e1d9d799a5

commit f8a30caae253c8201b403eeb0651b9e1d9d799a5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 17 18:21:53 2014 +0200

    reduce memory usage for partition ident generation

commit 0b7bb742da9ec1d720389fa5de7bd29ab54cfce3
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 16 18:05:12 2014 +0200

    fix could not initialize Lucene QueryUtils bug when running integrationtests

commit 8aa557bc35feff0cc5e3ec5b2f336273617f2800
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 16 17:30:24 2014 +0200

    improved unknown column handling, better exceptions of unknown function signatures

commit eb7efa715ebba7939f33ca74651eef67312e8ae6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 17 15:02:49 2014 +0200

    update es/upstream for memory consumption improvement

commit aad13ee38722feffba28e763fcc6a8eddaf0cfee
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 17 11:29:08 2014 +0200

    fix NPE in genMessage of FailedShardsException
    
    shardFailure can be null

commit d77c012cbc1086a0ecf35935c9acd4826d6e7fa5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 15 20:20:15 2014 +0200

    enable coveralls

commit 35502bae4801038538f2fcf1ffd9315fbb51ef26
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Oct 16 14:25:54 2014 +0200

    fixed failing DataTypesTest due Changes in type conversion

commit c4047620759ecc9ce1adee19301e849a838d93d0
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Oct 16 14:16:33 2014 +0200

    prepare release 0.45.0

commit 2d533b7c4ed600f9ea386a3feb191f36b73c7f72
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 14 21:58:51 2014 +0200

    updated changes

commit 83ae83120b54e9cca0f6f140ac2236a6c0c45095
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Oct 14 21:45:10 2014 +0200

    fixed sql tests due changes in cast function

commit 659f0a345278d23a0ae11c45d79e9d676a16e81b
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 14 18:51:19 2014 +0200

    add cast expression support

commit da48f2305206179d8e101ee138f609ae7dead515
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Oct 14 21:25:35 2014 +0200

    added ToNullFunction

commit 69924bd8545a0c342b48e2ba92fb3a1baa258e7b
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Oct 14 21:06:08 2014 +0200

    simplified precondition check to cast functions

commit d4fad1ffa24bd132f267e212c96178264da719c8
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Oct 14 20:51:27 2014 +0200

    use generic precondition check

commit 044775f4e49fc3fc8a8606cb031f91eda292ded3
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Oct 14 20:47:16 2014 +0200

    added toShortArrayFunction

commit 17720d6d1fe8230fe2821f0bb1948c056727739b
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Oct 14 20:39:53 2014 +0200

    added ToFloatFunction

commit 85d00a3fdcaccf4f180a1c24c93347bd081d0653
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Oct 14 20:35:39 2014 +0200

    added ToByteArrayFunction

commit 4b29e5cbd2499bc1fdcce588e3fcc6c4942a6848
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Oct 14 20:26:49 2014 +0200

    added toBooleanArrayFunction

commit 8c167289a31b1bacfa6d48c78773f57c72f185fd
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Oct 14 20:00:41 2014 +0200

    added toShortFunction

commit 667bf7a027e583e1faebd26019a89d4b962d34e3
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Oct 14 19:56:00 2014 +0200

    added toByteFunction

commit 043a431e1d45e947854e3785211a6b2822e148e7
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Oct 14 19:46:43 2014 +0200

    added toFloatFunction

commit e0d3a84373e1de6849ab804c7d4366bec3d1ffe5
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Oct 14 19:46:35 2014 +0200

    added toDoublFunction

commit ca68d4208f661c5340fe183a5b45ca9cf519b826
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Oct 14 19:24:57 2014 +0200

    added toBoolean cast function

commit 5ccf00d81207b209bf1d3720478f9fada879c352
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 14 19:01:13 2014 +0200

    add ToDoubleArrayFunction

commit 651e99b0d68dab97ad91538e17e3c1f355504dc2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 14 18:37:25 2014 +0200

    add ToLongArrayFunction

commit 8c87332d094f639d7d00145ccbebe3ee613833c9
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Oct 14 18:37:15 2014 +0200

    made casting of primitives more generic

commit f1c643a118b90a653d09caa72c4c07e0142bebf6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 14 18:19:18 2014 +0200

    add ToIntArrayFunction

commit 3011db57fe0d31faabedfac35452f2b895cf6e81
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Oct 14 16:53:52 2014 +0200

    added toLong cast function

commit 556b03b6e23e036e6f3cbdaa3250980ad01ba336
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 14 16:37:12 2014 +0200

    rewrite implicit casts to new concrete cast functions

commit 21b605d9d6c9375a66d189396647ebbed6995519
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Oct 14 15:46:10 2014 +0200

    added toInt cast function

commit 5851c18b81c8de8f65650c9580cca2de2435c37a
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 14 15:32:06 2014 +0200

    added toStringArray function

commit cb3e04a02009fd1440722862dc7fbc014fdb876c
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Oct 14 13:57:10 2014 +0200

    added toString function

commit 33a9913b61e52364ee70e7b9093f303112060179
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 14 10:02:21 2014 +0200

    added docu for cast expression

commit fce45ab5aa1ddd570859dbcd6717c85e1a3d2554
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Oct 14 13:31:31 2014 +0200

    updated changelog to reflect releases 0.44.6, 0.44.5
    0.44.4, 0.43.5, 0.42.5, 0.44.3, 0.43.4, 0.42.4

commit c5aefa7214bd1a57ae13f631e85a04f4adf60f1d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 13 20:41:47 2014 +0200

    change Analysis creation

commit 1d4d92b1b3e15d45c54c7b7f397a4a4785932922
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Oct 13 14:25:40 2014 +0200

    use ESCount also for partitioned tables

commit 8dc152f0e6f7e444e1a6f17df68c1ecef06e40c5
Merge: 2aa97212d2 69351e0c96
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Oct 10 15:41:05 2014 +0200

    Merge pull request #1239 from crate/dobe-fix-copy-partition
    
    throw exception when trying to copy from missing partition

commit 69351e0c9698ba166388fae6b30866acc9f04f3d
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Oct 10 15:21:44 2014 +0200

    throw exception when trying to copy from missing partition

commit 2aa97212d2d3901a952ff5f0bf9f36a43ebcc895
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Oct 9 17:38:11 2014 +0200

    fixed failing tests due changes in error message

commit 9bf7cadca57fd496e955e6e428de916a44ce1c99
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Oct 9 17:00:57 2014 +0200

    fix: some shard errors were not being raised and so the shard failed silently
    when some kind of errors, like an Out of memory error occured.

commit 984b4efd264fee261d07840470be74b33552547e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 9 14:41:47 2014 +0200

    add DEBUG_MODE constant to Constants
    
    enabling that flag will result in more helpful stacktraces
    from SQLActionExceptions which is very helpful during
    development/debugging

commit 6c6e5d9c252d1338bf4b996ab2f0451a2662fa1f
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 9 11:10:21 2014 +0200

    fix flaky test by using REFRESH statement

commit cb054576e8def12466db3525d3c6ae5c154203c0
Merge: cc3b6b58ce ccc8cd0cc6
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 9 10:07:04 2014 +0200

    Merge pull request #1228 from crate/m/test_fixes
    
    M/test fixes

commit ccc8cd0cc6ef507bb39c53cf0a7ab4c7facd7dec
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 8 20:26:31 2014 +0200

    fix BlobEnvironmenttests on ubuntu

commit 866fab9d419cce78a55d8497a238031656ceb12a
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 8 21:42:01 2014 +0200

    add missing ensureGreen() calls to TransportSQLActionTest

commit a1fdeacf782c01332c57299a5fe28d2eae751271
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 8 20:14:41 2014 +0200

    fix udc test when no hardware address can be determined

commit 20c7f20b8e5e0d320da56892dd5fcf0d026d8134
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 8 20:07:34 2014 +0200

    more verbose udc ping test

commit 63ab4c574999a5f8573918a76f943bf4addf7e0d
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 8 15:38:48 2014 +0200

    try fix some irregularly failing test methods

commit cc3b6b58ce8e9cf654a7fd030b7418bae0ce9489
Merge: 5441e0f3e6 97b7c7029b
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Oct 8 16:22:14 2014 +0200

    Merge pull request #1231 from crate/dobe-upgradle
    
    upgrade gradlew

commit 97b7c7029be9dc6a97c6a79edd65d42355604bf2
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Oct 8 16:18:38 2014 +0200

    upgrade gradlew

commit 5441e0f3e68aa2f1276f094da072f38c47f87348
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 8 16:03:31 2014 +0200

    use tableInfo instead of Analysis in PrimaryKeyVisitor

commit 8fe33a6bfcc37fdb75b9a35ca6ef1bbf1458967e
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 8 12:13:54 2014 +0200

    wait for discovery to discover missing node in python process tests

commit 750c829a52665888fbcfe6e8f50c07603ecb4ea1
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 8 12:13:15 2014 +0200

    disable disk threshold allocation decider for crate test cluster

commit b07d6c644b8a080c20b1f659aadd3e7e2aee8aef
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 8 12:12:43 2014 +0200

    increase verbosity of checkNotNull calls

commit d9bef1ee903096e8f059f34fafa7361526bb34b2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 7 20:21:55 2014 +0200

    simplify RequestHandler in TransportSQL*Action

commit a4456b6e8b5cc7aef346fa44fc91cf00f8f99388
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Oct 7 16:56:48 2014 +0200

    upgrade es to 1.3.4

commit e9abc0fc3ff9bb7bed7a5f1352063d0bcc7d45eb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 7 09:16:51 2014 +0200

    fix flaky test

commit 0484041b6063992b2cef532b773a2e1250061a6d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 7 09:01:58 2014 +0200

    Rename NULL attribute to UNDEFINED
    
    to match the class name and better reflect its intention

commit a1670556223aefec76f8f52d041bbeaa091b62f6
Merge: 22746c7b95 0708683aad
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 6 21:27:29 2014 +0200

    Merge pull request #1224 from crate/m/benchmarks
    
    fix junit benchmarks

commit 0708683aad07d13f2ad748a738be3043c6fcdb17
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 6 11:00:48 2014 +0200

    move benchmark results dir to build dir

commit b54dd76eecd2110781e6149fecfd946a464d78c1
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 1 16:20:59 2014 +0200

    fix benchmark runs

commit 22746c7b9595e42d3ea87d7ccfaa9883d3956c86
Merge: 162d7ac340 84c97ed0df
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 6 13:51:17 2014 +0200

    Merge pull request #1223 from crate/m/array_subscript
    
    allow subscripts on array literals

commit 84c97ed0dfa01e8eced35bdde5e9be37ada03c15
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 6 11:57:59 2014 +0200

    allow subscripts on array literals
    
    and allow parameters as subscript indices

commit 162d7ac340322d7f92db6ca5f8fc6a013beaabc4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 3 11:17:08 2014 +0200

    resolve partitions using normalizer and partitionExpression

commit 5d42e7fcaf6bc7c255c4c26a9114c5df5ccfd5ad
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 3 01:34:11 2014 +0200

    implemented partition visitor
    
    and use it in DataStatementAnalyzer.generateWhereClause(...)
    for compatibility reasons. should be moved to DocTableInfo.getRouting(WhereClause)

commit 0ad4355eee1a5d4f3f7bcab9946a74f8806b17b6
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Oct 2 16:42:44 2014 +0200

    added test for partitioned update with not and conjunction

commit 3a38eed1067e6901d02773c981348f6cbbd287b9
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 2 14:36:15 2014 +0200

    fix update on partitioned tables

commit 10bc94eda4e5e907044a46d2a15405dadb6a4ef4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 3 14:35:26 2014 +0200

    fix lt and gt operator

commit f7148452992763e12d612c99260a75b9b690440b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 2 11:49:44 2014 +0200

    use partition ident in copy from
    
    was ignored before and import was done into `null`
    partition.
    
    This fixes https://github.com/crate/crate/issues/1215

commit 0e4391fd1bb8ef099de7cee780ef46be6ffe1ef8
Merge: a2839af020 e61ac2410e
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 2 13:03:44 2014 +0200

    Merge pull request #1217 from crate/m/delete_partition_fix
    
    fix deletion of partitioned tables

commit e61ac2410e56104d9b7bbbfb1101a66faed6505b
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 2 10:50:29 2014 +0200

    fix deletion of partitioned tables
    
    * when the WHERE clause had no match all partitions were deleted

commit a2839af020da982793b0bdfc82c3163e5e1f6dc9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 29 14:16:52 2014 +0200

    add getSafe to functions; rename getColumnInfo to getReferenceInfo
    
    Moves the null check logic from the AbstractDataAnalysis
    into the Functions class as both getFunctionInfo and
    getFunctionImplementation will probably be removed in the
    upcoming relations change.
    
    Renamed getColumnInfo to getReferenceInfo as it actually
    returns a ReferenceInfo.

commit b305e49e9b9c46668dc938cfb6998b47e45d288d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 29 14:05:59 2014 +0200

    change processWhereClause to generateWhereClause
    
    instead of writing onto the context the whereClause is now
    returned.
    
    Makes it easier to use the function in the upcoming
    relations changes

commit 35341f404131346500ba9a5ea1a8708131164c14
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 26 17:11:48 2014 +0200

    fix order-by subscript array access

commit 26cafd7851b09d29e2d6ca9ac2e32f3ad5b71d0f
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 26 15:47:28 2014 +0200

    fixed npe at regex matcher (a group can be null)

commit 3062823fbc5ba99f3051d220827616f899ef2822
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Sep 26 10:55:40 2014 +0200

    updated changelog to reflect releases 0.43.3 and 0.44.2

commit e01c3d716739bd029417b63cc4e814fc40e55bb9
Merge: a511ea2f23 eeda8b931e
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Sep 26 09:31:48 2014 +0200

    Merge pull request #1202 from crate/h/setting-fix
    
    track correct transient cluster setting for routing allocation

commit eeda8b931e1813f1f9d8c22acbef75dbb9396fc6
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Sep 26 09:27:18 2014 +0200

    track correct transient cluster setting for routing allocation

commit a511ea2f23ecd46d72e0ca4f9826c92eb99374f3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 25 17:47:20 2014 +0200

    add ensureGreen to testSelectStarWithOther
    
    test was flaky

commit af282bc90dff55022e141df588cab46e55299ca4
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Sep 25 15:00:11 2014 +0200

    fix: rexep_matches() pattern must no match the whole string

commit 6750b8bdafefafb70de2f5ff33ff61aa4562c896
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 24 16:27:15 2014 +0200

    add schemaInfo to TableInfo interface
    
    in order to streamline the Analysis classes in preparation
    for Relation/Join support

commit 72560b4d2bdd0f3d51dd50bba62c676e4403da32
Merge: 653575ef09 80eda77193
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Sep 24 13:48:48 2014 +0200

    Merge pull request #1195 from crate/h/no-pk-exception
    
    improved error handling for NULL pk values when importing data

commit 80eda7719377375d41876a54c2832fc1f62a5949
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Sep 24 13:44:56 2014 +0200

    use locale English for lowercase of default match_type of match predicate

commit 1210980522f9a925e68df3b241d9b9b6a3344122
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Sep 24 12:07:04 2014 +0200

    improved error handling for NULL pk values when importing data

commit 653575ef090c0ec3148f0fa3fbb3809d342d6638
Merge: 61f0e8c773 13b5de4499
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Sep 24 09:49:48 2014 +0200

    Merge pull request #1194 from crate/m/regex_doc_fixes
    
    fix minor documentation issues

commit 13b5de4499c6997dada92deb2fdf575a300ba4d4
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Sep 24 09:39:24 2014 +0200

    fix minor documentation issues

commit 61f0e8c773449b26866f179feedba54665f32cc2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 12 11:56:36 2014 +0200

    change lucene query generation
    
    before symbols were used to generate xcontent which was then
    parsed by ES components to generate lucene query
    classes. So the process was:
    
        symbols -> xcontent -> query
    
    This commit removes the -> xcontent step for all SELECT
    queries (DELETE / UPDATE still use xcontent) so now it is:
    
        symbols -> query
    
    This also enables a generic "FunctionFilter" which is a
    fallback that will use the Scalar functions to evaluate any
    conditions in the where clause if it is not possible to
    create optimized Lucene queries.
    
    So with this commit it is possible to do stuff like
    
        where oneCol = anotherCol

commit eb12b5e325f1501f9fa1054c2b67d1d1babd10d7
Merge: 51d825a256 9485fe5d09
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Sep 24 08:34:46 2014 +0200

    Merge pull request #1190 from crate/h/match-tests
    
    added some more test cases for match predicate

commit 9485fe5d09bd713f3366fd530ad25c925bdd7ff0
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Sep 23 17:23:40 2014 +0200

    added some more test cases for match predicate

commit 51d825a25641cf0981b1b58c1f8b4dde4ffea015
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Sep 23 16:11:59 2014 +0200

    new snapshot version

commit 7f1beacf7566692860e80f750edc6421d3df229b
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Sep 23 10:47:11 2014 +0200

    return NULL on array out of bound access instead of throwing an exception

commit 487cc9cc5211a7a5047384a5cdcbaddce295edd5
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Sep 17 01:07:21 2014 +0200

    implemented subscript array notation support
    (only 1 array element supported at nested subscript tree)

commit 5325862b90b0f7ef4b0fc573616ecb424334156d
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Sep 22 20:50:05 2014 +0200

    fixed regex index type variation tests

commit 8b67e3162d39ad69bbc83becfa76797ecd04eaa9
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Sep 22 20:49:19 2014 +0200

    fixed NPE on new boolean literal creation

commit 96fee3975985caa73c7e8fc53a7c3d18073a779c
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Sep 22 15:34:43 2014 +0200

    added test for regex functions on non-indexed and fulltext indexed columns

commit b45953cba479893ecc4d2cf0f779959941a1d9d3
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Sep 17 14:23:19 2014 +0200

    replace BytesRefInput and BooleanInput with Literals

commit 0587008b936d0e981f5c4b87f7430818e2eaaee8
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Sep 16 23:11:53 2014 +0200

    implemented regexp match operator

commit 43ec7121b20f50eb39635dc0aa8933d46c98d6ee
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Sep 16 18:34:32 2014 +0200

    implemented parser support for regexp operator ~

commit 46ed3abf7b1f5d9b8156d846aef29fb4911716e0
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Sep 16 22:27:14 2014 +0200

    add ``regexp_replace`` scalar function implementation

commit 0c781b479061f6f2d7b296f31ce20c997b570b38
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Sep 16 18:14:08 2014 +0200

    add ``regexp_matches`` scalar function implementation

commit 0efa8ddd761eadc938b69b54422de28302d42541
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Sep 16 17:25:45 2014 +0200

    improve regex functions docs

commit 89ea5bdcbce3dfcee9932df3d1a59be4cb45f46c
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Sep 16 17:25:36 2014 +0200

    add regexp operator ~ docs

commit 8d064e4131ddc04adb00d9b0d2c0fc99d909f764
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Sep 15 23:25:34 2014 +0200

    document regexp scalar functions

commit 23d1126ed77949cf978a4d347a99d889eb243c9b
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Sep 23 14:08:27 2014 +0200

    merged CHANGES from last hotfix releases

commit fbd8aaa34246be6b6a3419552f37ca13644e99be
Merge: 97ce11b4ba 4c03c7e7c6
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Sep 23 14:05:48 2014 +0200

    Merge pull request #1186 from crate/h/testfixups
    
    improved reliability of certain integrationtests

commit 4c03c7e7c6de36ccac080c2a7ca8cbb27204f5e3
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Sep 23 11:49:50 2014 +0200

    fixed flaky CrateClientTests

commit 97ce11b4ba4081b3d34be367cc722693a30a35e6
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Sep 23 11:45:25 2014 +0200

    fix: blob were saved directly at shard folder instead of sub folder ``blobs`` if no custom blob path was set

commit df4fba9665c55bb74e1203bfd3c00657ea20d1c5
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Sep 23 09:11:39 2014 +0200

    updated changelog according to 0.44.0 release

commit 79f68babc7e8d27f7040bf03f150e00e3a006feb
Merge: 91fd5a63fa c3d664da9e
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Sep 23 08:27:15 2014 +0200

    Merge pull request #1181 from crate/h/rename-nulltype
    
    renamed NullType to UndefinedType in order to avoid confusion

commit c3d664da9e808e00042a23d5105ed4bc58820556
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Sep 22 15:53:33 2014 +0200

    renamed NullType to UndefinedType in order to avoid confusion

commit 91fd5a63fad6d6e85e488424fae1f435f293e2db
Merge: 3e96c034b5 054cc583d9
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Sep 22 17:35:28 2014 +0200

    Merge pull request #1178 from crate/m/process_tests
    
    M/process tests

commit 054cc583d9bda57544da9a034a820b918769b03a
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Sep 22 17:28:10 2014 +0200

    upgrade crate-python used for tests to 0.12.0
    
    in order to use the improved CrateLayer

commit 478aee35c95fd7f90825fbac23dfe61d327c6740
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Sep 22 16:40:12 2014 +0200

    fix tracking of active sql requests

commit c6d819a2d2794386463c999f76e7f3bb26f578ef
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Sep 19 16:09:04 2014 +0200

    added tests for crate signal handling

commit b7368d6cc1ae77557c002ab89793db9ed6f5f5e0
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Sep 19 14:26:58 2014 +0200

    remove quickcheck from the testdependencies
    
    it spilled a warning about not being build for java 7

commit 3e96c034b564d5e020301fb0ef581b6293fbbc42
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Sep 22 12:33:43 2014 +0200

    update es/upstream
    
    to fix test errors due to missing SearchService binding in blob tests
    and fix errors on fast and parallel starting and stopping of Nodes

commit 556fe208f5eeca9b7f582d8f57d277570bb1fe43
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Sep 22 12:23:01 2014 +0200

    updated CHANGES according to 0.43.1 release

commit 59c764a3e1aa0915a2a680b516583e6f51360b0c
Merge: fc0c673bfc a9e8e70e8b
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Sep 19 12:10:19 2014 +0200

    Merge pull request #1177 from crate/m/request_fail_note
    
    M/request fail note

commit a9e8e70e8be26dce616d41f0b40ce3f3e9c5487a
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Sep 19 11:59:10 2014 +0200

    add a note about the admin-ui
    
    might turning red when a node shuts down

commit 19ee5d68daefae22fca242cd3fbc84f0aa427587
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Sep 19 11:48:47 2014 +0200

    add section about watching the graceful-stop process

commit f12f9f00bdaa2d0d8c2a687729f01b3ba4d1ccd7
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Sep 19 11:48:28 2014 +0200

    remove day_joined columns from partition import file

commit fc0c673bfc2e9c0680d7bebfc53c8277e031034e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 19 11:25:16 2014 +0200

    update crash to 0.10.1

commit 0ba56f6fd3f8ec3f65ec9631ed52bc7e5e27895b
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Sep 19 09:27:39 2014 +0200

    add a note that some requests might fail during graceful-stop procedure

commit 0daf3c0bc956405e8e8e31dcb93100132391d6c2
Merge: 5a5ffdcdbd 8b6691b5ad
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Sep 19 11:00:37 2014 +0200

    Merge pull request #1176 from crate/m/array_constraint_name
    
    change type of information_schema.table_constraints.constraint_name

commit 8b6691b5ade52b81fd148abb4c1128ceea82c43d
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Sep 19 10:55:36 2014 +0200

    change type of information_schema.table_constraints.constraint_name
    
    to array of string

commit 5a5ffdcdbdecd8ab8aae9ae8fb7d3989ef6b38a1
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 19 09:53:41 2014 +0200

    throw better error message if setting value is of invalid type

commit 7307ba70c169ca10189588f88f44fc0d6ccde470
Merge: 203db599a5 df63075e23
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Sep 17 08:58:24 2014 +0200

    Merge pull request #1169 from crate/m/travis_irc
    
    remove travis-ci logs from IRC

commit df63075e233a1b8d15f8ae7c5d68fe1b061f7025
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Sep 16 17:43:24 2014 +0200

    remove travis-ci logs from IRC
    
    unfortunately they are kind of distracting

commit 203db599a5b3434e7410002f7c1a7a9b762410e6
Merge: 927a659a0c 2dae993b20
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 16 17:07:18 2014 +0200

    Merge pull request #1167 from crate/streamline-selects
    
    streamline selects

commit 2dae993b2021413e6cebb27aa4c3a48e868be03b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 16 16:43:18 2014 +0200

    add changes

commit b5f77b3262b1d2a97b6d4732177bc702a9030ce5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 11 15:56:04 2014 +0200

    fix null handling in new InputFieldComparator

commit 960bbba19d218b7cae95f5d17a9ef45aeb20935f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 11 15:41:03 2014 +0200

    remove ORDER BY limitation from docs

commit 46cc3153e2b4c5d872929edc37d38abd9d4d8bbd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 11 15:35:55 2014 +0200

    rename SearchNode/SearchTask; remove sort support from ESQueryBuilder

commit af33b22c577ab02f237e927949c880005890009a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 11 15:08:12 2014 +0200

    disallow order by on unknown columns

commit 59ce633a4cfd247213152b8708fad37c11ed4212
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 11 14:34:12 2014 +0200

    add missing ensureGreen in tests and don't route to initializing shards

commit 546e6e3b5a3d31185b3d6b471511842bf1570958
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 11 11:35:47 2014 +0200

    support missing values in new InputFieldComparator

commit 28dd348d613362d23b4226d397488e8b478d3840
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 9 14:00:16 2014 +0200

    generate lucene Sort from symbols

commit 393a18559ea4d26baaa07c23c623e419c31eec7c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 9 15:08:59 2014 +0200

    fix test flakiness

commit 0d079cc0ca3b8b1ef10fbe14eaba798c4e6f5687
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 8 10:30:23 2014 +0200

    change ESSearchTask to use QueryThenFetch using QueryShardRequests

commit f17cab7796ba4275163935a4e573fc203a6ae5f0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 5 16:45:19 2014 +0200

    add request handling for QueryShardRequest/Response

commit 927a659a0cb5695196d5484ea1bec054d5842636
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Sep 15 17:15:34 2014 +0200

    fix doc reference

commit 26d3983fb42a06bebbfc2a50202d850e5ee6f7ad
Merge: af1f3e61ce 20ab5a623f
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Sep 15 16:48:01 2014 +0200

    Merge pull request #1162 from crate/cluster-upgrade
    
    Cluster upgrade

commit 20ab5a623fe1d5771545b52c4dc7c61a9b50681c
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Sep 15 16:12:34 2014 +0200

    add none and primaries as options for cluster.routing.allocation.enable

commit 3e9784b93182eed80c5fd966cdac654f38bb7d70
Author: Matthias Wahl <matthias@crate.io>
Date:   Sun Sep 14 22:57:11 2014 +0200

    remove stale debug log

commit 4930a0aa271e2e0bc055e2452c20c2866dfa6f48
Author: Matthias Wahl <matthias@crate.io>
Date:   Sun Sep 14 22:53:58 2014 +0200

    update cluster_upgrade
    
    to point users to the logs of their deallocating nodes

commit 74ef76c796c9f6a9364d84dc3beccd4b606d40c0
Author: Matthias Wahl <matthias@crate.io>
Date:   Sun Sep 14 22:49:11 2014 +0200

    update changes

commit 39770871de5c00e301d34bdef97bbf0796e614cb
Author: Matthias Wahl <matthias@crate.io>
Date:   Sun Sep 14 22:42:13 2014 +0200

    upgrade es upstream
    
    for increased deallocation loglevels

commit e05799dbd60d83db0ca81f7d98da47eada50db99
Author: Matthias Wahl <matthias@crate.io>
Date:   Sun Sep 14 19:44:12 2014 +0200

    reintroducing the cluster.graceful_stop settings

commit 37ebdfa045d04ff0dc455410f63dda3b12c6d7c9
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Sep 12 13:47:22 2014 +0200

    upgrade es upstream
    
    in order to linearize cluster state updates in Deallocators

commit 8dbbd68c3c78d3545a21ee8f44db869fe6403355
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Sep 5 12:22:27 2014 +0200

    update cluster upgrade docs

commit cad33eddc422889ff0523dca3fe4e9f0b9d6a554
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 1 16:41:33 2014 +0200

    also remove graceful_stop.is_default from set reference

commit befc5c1eed8d83ea7aa1932544bf776a7aadc89f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 1 14:46:28 2014 +0200

    document zero downtime upgrade requirements

commit e81ceeb8da414859fd4d46e9bfa3117b0fca1703
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 1 14:01:30 2014 +0200

    correct setting name in cluster-upgrade docs

commit ebd113a6235e3ad9a0151a25efcea0a0a02491e6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 1 12:33:56 2014 +0200

    remove graceful_stop.is_default setting
    
    it's not possible to support it

commit 72f506ef60b6cb91dbb51198fee3901f97887a10
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 29 16:33:06 2014 +0200

    load SQLService asEagerSingleton
    
    otherwise re-enable won't work as it will load a new
    instance of the service in InternalNode#start()

commit c195b5c644492027a91b8108deda19f5ad6d6e8c
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Aug 29 09:11:28 2014 +0200

    changed implementation of global settings

commit db2dec5de1a7fc4409904886fbb23ffc05d76990
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 28 17:55:17 2014 +0200

    disable http for SQLServiceTest

commit 90533d70bcf59d87bbc147ea8679cc4ce30576da
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 28 17:14:52 2014 +0200

    add SQLService that handles disabling of SQL transports

commit 28f9ee45a72981c37975cea970db33a5ec25f8a2
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Aug 27 18:13:30 2014 +0200

    documentation for graceful_stop cluster settings

commit 8d6bcecd9cf15be2350f4272ad459c3390c4c9d9
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Aug 26 11:23:22 2014 +0200

    added graceful_stop cluster settings

commit e6b678960e48871e0f77401a14e1650027521a7f
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Aug 22 15:00:43 2014 +0200

    documentation for zero downtime cluster upgrade

commit af1f3e61ce00f3cef9edcd7b06b57114a0994c82
Merge: e1d74ee6b7 ab4847ca9a
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Sep 15 15:53:41 2014 +0200

    Merge pull request #1165 from crate/m/sysobjectarrayrefs
    
    fix select object array child columns

commit ab4847ca9a566a2ad56384eaa9e927a9a1b00376
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Sep 15 15:15:21 2014 +0200

    fix select object array child columns
    
    of type string on system tables

commit e1d74ee6b7c4e0e8483cde70ff033450fa77382c
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Sep 15 12:22:21 2014 +0200

    throw exception if filtered by ``_score`` using anything other than a ``>=`` comparison

commit f847ebe40c02a9f082cdddc10260ee82453600b7
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 12 14:59:36 2014 +0200

    fixed streaming of cluster settings
    (stream TimeValue & ByteValue as strings)

commit 66d00cd2a04c2ba8b320ed670b1e835c0f46aa43
Merge: 40a43b4553 d154be6cd9
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 12 13:55:49 2014 +0200

    Merge pull request #1159 from crate/set-minimum-master-nodes
    
    Set minimum master nodes

commit d154be6cd964b917d8986ce198d186d7b9bcb2b0
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 12 12:28:07 2014 +0200

    hide graceful_stop cluster settings

commit 13b6a86a456f5c135945f7ce87f6cca90e2d7a1e
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Sep 11 23:53:39 2014 +0200

    new snapshot version 0.44.0

commit 3e4b6e8eb98c1b7e4e64d6ce3d9f1c85dd174377
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Sep 11 22:05:09 2014 +0200

    changed style of settings documentation,
    documented runtime changeable settings

commit 745d7633c5b17e0390a1ee123e96f3e8e3bfe68d
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Sep 11 16:00:45 2014 +0200

    validate every object element while applying whole object to setting

commit 3e34aa02218904ca13e58e5d2fd51e3e2d4ff9d7
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Sep 2 22:03:33 2014 +0200

    added missing settings to crate.yml

commit 60b8486e233d954af2075f35eb8a24a6228cc399
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Sep 2 21:18:28 2014 +0200

    added missing settings to documentation

commit 16b5fa9e07e10e4853c3855306b40e3b8732acdf
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Sep 2 18:16:06 2014 +0200

    fixed setting object settings

commit aa27340b8e23d2cdcec0b84e3c4144f276ee5232
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Sep 1 22:04:38 2014 +0200

    implemented mostly all dynamic cluster setting expressions

commit 24ec5cbfc9a728351b7aba3cdd61846d9efbfbfb
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Sep 1 18:33:07 2014 +0200

    added missing configuration settings description
    to crate.yml

commit cf815d2f9a4d52a7172b580d338fd210350fb0c4
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Sep 1 15:20:55 2014 +0200

    moved settings documentation from reference to documentation

commit 0413cdeec206d18667cb0c7dbe23ecf8832f09c4
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Sep 1 09:56:19 2014 +0200

    added docu for extended cluster settings

commit d16c593a7af72f1072a2a7d7ba53cf1ffac0d80f
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Aug 29 11:20:31 2014 +0200

    added cluster upgrade settings to crate.yml

commit cb1a2449292c24194d49987ab64485e5e2cb9476
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Aug 29 09:11:28 2014 +0200

    changed implementation of global settings

commit a388c4a7fd022a9b55323a570f7f94cbf0b6669c
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Aug 28 16:21:59 2014 +0200

    test fixup

commit 30ed769b491a0498aa48360d2e961239e38749ec
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Aug 28 13:10:29 2014 +0200

    implemented rounting.allocation.enable setting

commit 1d96632d6fae5031cff73e580ca1d2588af99f2e
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Aug 27 18:13:30 2014 +0200

    documentation for graceful_stop cluster settings

commit f1f2daa5944bc4ca577ae662ccacca59a799107d
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Aug 26 11:23:22 2014 +0200

    added graceful_stop cluster settings

commit 40a43b4553cbc5a807b245281e5c3ebe003bde13
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 11 16:54:48 2014 +0200

    prepare release 0.43.0

commit 0302458bc4a8db960401c58241a206792f5c859e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 11 16:16:44 2014 +0200

    sync changelog with 0.42 branch

commit 38aebe6cb8e154faccfa3262927f8aa367db5a0e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 11 16:05:27 2014 +0200

    fix bulk args validation
    
    detected type missmatch if one value was null

commit a7c4f01fa3e2406f22e771ec2d054c2fe290ad82
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 10 18:16:06 2014 +0200

    clarify that group by columns must be present in result column list

commit c9dccb3a40ff437be04224dd915bb928f9b188c8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 10 23:32:46 2014 +0200

    various small doc improvements

commit e38d97135abfe18746485f8c5a16024d393480e1
Merge: 4083649ac7 a8d7cc091f
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Sep 10 18:00:11 2014 +0200

    Merge pull request #1140 from crate/m/group_by_synopsis
    
    changed explanation for group by clause

commit 4083649ac77ff68752ae672076300bcac6510067
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Sep 10 15:11:09 2014 +0200

    added irc notifications to travis

commit 09e13840fac4b654b066318a62f6f66049b6dad9
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Sep 10 11:08:38 2014 +0200

    forbid `RESET` stmt persistence keyword instead of just ignore with warning (removed from parser syntax)

commit 1890125afe955b48bba0f70a3940d37f2b488fac
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Sep 10 11:11:33 2014 +0200

    update changes to reflect changes from 0.42.2 release

commit 82205a5ee92dbdc59ffa282c0caa18841c48c0dc
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Sep 8 20:46:12 2014 +0200

    ``RESET`` stmt respects configuration file settings now instead of applying default values

commit f18576cd2d9e85c0ce791ded3bd90bde1c86cf14
Merge: a945905c66 988f0b9714
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Sep 8 16:21:00 2014 +0200

    Merge pull request #1144 from crate/m/types_on_all_columns
    
    always return column types when requested

commit 988f0b97145293de7d8134693e3be069839830c5
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Sep 8 15:27:20 2014 +0200

    always return column types when requested

commit a945905c66a95a4e58d6a9523877e94403292910
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 8 10:38:47 2014 +0200

    add authors file

commit 14a36e1a79183a7e7ba1e3219ee962b839281f5f
Merge: 6153ef4e5c cb3692662e
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Sep 5 18:45:18 2014 +0200

    Merge pull request #1142 from crate/h/lucene-version-fix
    
    updated lucene version in client to 4.9.0

commit cb3692662e53669c800fdc756bbf1909fd566f6d
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Sep 5 17:48:09 2014 +0200

    updated lucene version in client to 4.9.0

commit a8d7cc091f6d5adfa798d9b9b163e08ef8adc227
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Sep 5 16:47:53 2014 +0200

    changed explanation for group by clause

commit 6153ef4e5cf3afa0d00b712bee94a16b2f8cf7b3
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Sep 5 15:40:53 2014 +0200

    use Version.CURRENT for version test

commit 1a3f8f839f747b5acabc0980043157c5b9153c15
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Sep 5 15:45:54 2014 +0200

    updated changelog to reflect 0.42.1 release

commit 619f07f6dffcd05b7fc91a61bd2cf648804b56ff
Merge: f738d9f92a 70ee07907d
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Sep 5 14:59:39 2014 +0200

    Merge pull request #1139 from crate/h/object-literals
    
    improved parsing of object literals

commit 70ee07907dbd0aaee20e6f0c6f9dce80b1aefb1e
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Sep 5 14:05:58 2014 +0200

    improved parser for object literals

commit f738d9f92a4cadd3b771dc918b638f2a1cc2ffc4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 4 21:03:23 2014 +0200

    Revert "support long getopt options in bin/crate"
    
    This reverts commit ed9059ebdbe36610d8d6b16e79183b7a6e35aa12.
    
    broke itests

commit ad7b14917209b529a08ca41a7cfd4ac2dc7b2be8
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Sep 4 14:16:36 2014 +0200

    updated link to CLAs in CONTRIBUTING file

commit 342abb9a0f0382c6bb2df24c985cbc5bfa6ebf06
Merge: ed9059ebdb 4bebdd24ab
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Sep 4 09:15:30 2014 +0200

    Merge pull request #1137 from sunny256/add-mailmap
    
    Create .mailmap to suppress duplicates in git shortlog

commit ed9059ebdbe36610d8d6b16e79183b7a6e35aa12
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 1 22:24:04 2014 +0200

    support long getopt options in bin/crate
    
    e.g. bin/crate --node.name=foobar

commit 4bebdd24ab2c259d2c23770a3fc04edcb6781dd9
Author: Øyvind A. Holm <sunny@sunbase.org>
Date:   Wed Sep 3 04:18:40 2014 +0200

    Create .mailmap to suppress duplicates in git shortlog

commit 81b2ccb4910b22cf692a693e7ca94d7034793141
Merge: 3586acbc20 9f29da15c6
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Sep 2 18:33:24 2014 +0200

    Merge pull request #1133 from crate/h/docker-installation
    
    added installation instruction for docker image

commit 9f29da15c6e147285a280a47de58a1a2d087485b
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Sep 2 14:54:16 2014 +0200

    added installation instruction for docker image

commit 3586acbc20579a6785b5db1a9e038ff2552a0c17
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 2 12:15:37 2014 +0200

    update crash to 0.10.0

commit 4b4aa1824cf86c4352fd2f678f5852ebb2a37e01
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 2 12:07:09 2014 +0200

    update es/upstream to be jkd8 compatible

commit 9aa7cc5a0a7307cd786477d5943e2f9eb599d31d
Merge: 111535bcbd 8e901be6c4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 2 12:07:02 2014 +0200

    "Merge pull request #1124 from mping/jdk8\n\nfix compilation error on jdk8: ensure the compiler doesn't complain"

commit 111535bcbdfe4a01b26605998ea923e8f922a129
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Aug 22 16:32:20 2014 +0200

    added support for having clause in global aggregate
    and group by

commit a9c179d3a670e413c341255a187fc44742947fda
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Sep 1 14:12:26 2014 +0200

    mentioned in documentation that altering analyzers is not supported yet

commit 8e901be6c4861a046c8eca58797fdef3c2d4e3ff
Author: Miguel Ping (RUPEAL) <miguel-ping@telecom.pt>
Date:   Mon Sep 1 11:32:09 2014 +0100

    fix compilation error on jdk8: ensure the compiler doesn't complain

commit 5c2313563243ee9e592adcc73c3caa4609a1dc09
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 1 11:17:49 2014 +0200

    update es/upstream to include LogConfigurator change

commit 13139943343e1446b745d2627bafb9320443c035
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 28 18:01:08 2014 +0200

    use global cluster scope in RestSQLActionIntegrationTest

commit 813e8f09019c0b8c28ca0974896e81fb985e82f4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 28 17:34:03 2014 +0200

    fix guice injection error if HttpServer is disabled
    
    if http.enabled is set to false a node will be started
        without HttpServer bound and guice will throw error
        because it is used in the NodePortExpression

commit e786c9ebc2e41eecab6559aee11851eb7580dcd7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 26 13:44:09 2014 +0200

    fix npe in clusterMasterNodeExpression
    
    masterNodeId can be null for example if there aren't enough
    nodes to form a cluster due to the minimum_master_nodes
    setting

commit b524c9e97967a0cec2be2ad431f70dc404d2894f
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Aug 25 12:10:57 2014 +0200

    prepare release 0.42.0

commit 46f1e8a5c7b99eb026fa8782511a69c74f8393fb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 25 11:58:25 2014 +0200

    fix duration() that broke with previous commit

commit 2833dd7cdd1ed30888ca1243f541fe6f6b243240
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 25 11:39:35 2014 +0200

    don't recalc duration on duration() calls
    
    The RestSqlActionTests where flaky because duration() was
    called multiple times and changed in-between.
    
    Would be even better to set the duration in the ctor but
    then we would have to break backward compatibility because
    we would have to change the serialization from writeVLong to
    writeLong

commit bfa7337f36f35fb654f970b0680d51c5792cb8f9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 25 11:37:11 2014 +0200

    use StandardCharsets.UTF-8 instead of Charset.forName(..

commit ad2cc900687068075cc95ef4809e83c4ec5674a5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 25 10:55:14 2014 +0200

    optimize group by primary keys queries

commit c4f3f2c766d34d54b6fc3466f8904aa34dab37dc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 22 10:24:39 2014 +0200

    optimize execution plan if group by is on clustered by column

commit 88a8984939cb8c9d69b530ad4301eeb1bfe0b3e2
Merge: d530f7898f 438e35dc71
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Aug 22 17:18:56 2014 +0200

    Merge pull request #1095 from crate/m/es_upgrade_1.3.2
    
    upgrade es to 1.3.2

commit 438e35dc71fee20fa71dd130cadfc295dbe64b63
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Aug 22 17:10:37 2014 +0200

    replace sed command with plain groovy

commit b3ccd8d0a85b0fc414bf4b9a563affa3c2014ccc
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Aug 15 14:27:52 2014 +0200

    upgrade es to 1.3.2

commit d530f7898f088123b87f9ae5a3cfa3705e7df821
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Aug 22 16:41:02 2014 +0200

    updated changelog according to release 0.41.4

commit 48774c3cba628d39b02729d49703bc91312589f1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 22 14:37:59 2014 +0200

    invalidate DocTableInfo cache if single partition is altered
    
    this fixes the testAlterTableAddColumnOnPartitionedTable
    test

commit 1e101fc08c5832cf5b69bc2ad343e5128c6d1019
Merge: 5ed0c5efc4 2fa4e28961
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Aug 22 13:02:29 2014 +0200

    Merge pull request #1093 from crate/h/restructure-docs
    
    restructured docs

commit 2fa4e28961977a8e90d66b7b4454e1a661b2c6a2
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Aug 22 11:18:37 2014 +0200

    made separate section for data types

commit b13dae9e4a1a38c6cb5f724e0e1c3fce311b7043
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Aug 22 10:30:16 2014 +0200

    added version to sys.nodes docs

commit 6311c651eba47b00d3915abc4969bd6c71d35514
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Aug 21 17:47:39 2014 +0200

    split up dml doctest and made separate section for fulltext search

commit 5ed0c5efc481e4e310090e84641e6057b9a79223
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Aug 22 09:35:59 2014 +0200

    fix bulk sql rest doctest

commit 4d6beda442d848ba1f4f22efb7fb8ff2a5dd6aae
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Aug 22 09:13:06 2014 +0200

    test utf-8 encoding in copy from
    
    (the test would fail sometimes due to the charset
    randomization if the FileReader wasn't using utf-8
    explicitly)

commit 1f4f4626cee075e108337ab0ae641181ab81b272
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 21 17:04:38 2014 +0200

    always read files using utf-8 encoding

commit c53004549d731ea77a4f2dc619037d265187ee3f
Merge: c95fe1d7a5 67d55b3968
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Aug 21 19:31:49 2014 +0200

    Merge pull request #1091 from crate/m/fix_doctests
    
    fix doctest execution

commit 67d55b3968005880d71e7dfbad5782393e56afa0
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Aug 21 17:35:26 2014 +0200

    fix doctest execution

commit c95fe1d7a5d497405be51047b39f0b569ff9add6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 21 16:30:39 2014 +0200

    add tests to ensure backward sql request/response compat isn't broken

commit 9f0e92f6181e554e2de213d09dbad3281d3f7f73
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 21 08:54:18 2014 +0200

    keep SQLRequest/SQLResponse serialization compatible with older crate version

commit 349abf8ab30f84414354daf9fe475f053352ec4c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 21 08:24:21 2014 +0200

    add changes entry for bulk operations

commit cf0e724b099ba85d3448d1f2be1a9ff4e14402bb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 19 21:23:20 2014 +0200

    set errors correctly in BulkShardProcessor

commit 10b54b69f14c579d07fc76ae0cd1b955d42b7a81
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 19 20:57:33 2014 +0200

    don't update records on bulk insert

commit b46c50c7ed08fa304df4d352a33646155c8208aa
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Aug 19 18:19:58 2014 +0200

    implemented bulkSql method on crate client

commit 3e4000a2da80761d70aba71da82e2419e9f12908
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 19 18:19:32 2014 +0200

    also generate multiple responses for bulk insert

commit af4d92b1281871c6efbc0e653dbc0ac1da7d2fea
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 19 16:59:55 2014 +0200

    fix imports

commit 2e49babe97327b853108ea007a34ed90426e68f6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 19 16:21:07 2014 +0200

    rename NonQueryResult to RowCountResult

commit 35227391e873281204c6deabe520a3918d340af1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 19 14:47:58 2014 +0200

    move bulkArgs from SQLRequest into BulkSQLRequest and split TransportAction

commit 92fde64405008901e344bf1e51caa8b18ba811fc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 18 18:22:03 2014 +0200

    introduce TaskResult to differentiate between rows and rowCount

commit fdc419a4729c748d04a65f6f4d283da24a582154
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Aug 19 11:52:00 2014 +0200

    added benchmark for sql single delete

commit 692a0d349da62326cdee3b51595ce58c25a75493
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Aug 19 11:33:35 2014 +0200

    added benchmark for BulkDelete requests

commit e4c187c2c523390462d8ef7905cfb172ca918ff4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 14 15:33:05 2014 +0200

    add support for bulk updates

commit 95b0d469d666237d0111089b50c4e4d2c5103133
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 14 14:42:04 2014 +0200

    avoid Predicate allocation in update analyzer

commit 353412458d3507d41ea40ebad86c59cfc49ac184
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 14 14:09:15 2014 +0200

    set creationTime in in both SQLRequest ctors
    
    and remove unused method

commit 5b9f880142caad52897537295ccc26556ad5381d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 14 13:42:48 2014 +0200

    return a nice error message if too few arguments are provided

commit d7d37ca956a718dda2001e9beb9903ddd693a50c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Aug 13 16:59:35 2014 +0200

    implement bulk delete

commit 392b2ae7673909c18d014d9fd4fcc40138bf4d75
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Aug 12 15:24:20 2014 +0200

    added bulk_args argument to SQLContentSource parser

commit 9ab5826462d46d223e773590ed98eb934f5c5f12
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Aug 12 17:24:41 2014 +0200

    bulk operation: add test for bulk args + multi value combination

commit 1097267ac14f612238063325868034d2682ac7ae
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Aug 12 14:48:36 2014 +0200

    documentation: native java client: describe Bulk Operations

commit c7244a72acd63d5695dd48e54c7a88739df63028
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Aug 12 14:25:23 2014 +0200

    documentation: clients: fix: typo, wrong method call, 85 chars.

commit 501b9a030eb75fae47ce081ad04a1833a1c62015
Merge: 526cf89d66 a4c4c0e44e
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Aug 12 13:23:41 2014 +0200

    Merge pull request #1050 from crate/l/docs-bulk-operations
    
    documentation: rest: describe Bulk Operations.

commit 526cf89d66d059130b42539366ac45fefb1ed76e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 12 11:39:02 2014 +0200

    avoid bytesRef/String conversion in InsertFromValuesAnalyzer
    
    XContentBuilder can handle utf8 bytes if wrapped inside a
    class that implements the Text interface.

commit a4c4c0e44e938532d1aabedac236bddfe30b8b2e
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Aug 12 12:15:26 2014 +0200

    documentation: rest: describe Bulk Operations.

commit b349caeb1ab25987a23a3f7cc901e42b3e2a5790
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 12 11:04:04 2014 +0200

    set autoCreateIndices value correctly in ESBulkIndexTask

commit 542ac7d86a78b004a022f8cb3f3b9ce2115ee1da
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 11 17:55:18 2014 +0200

    create XContent instead of Maps in InsertAnalyzer

commit b98a33b79ffb28c3e826260bf990e81051e2c57a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 11 16:51:44 2014 +0200

    support inserts using bulk arguments

commit 465cfd6b490f36adb7a843b0e8c2ed6f1ab19b7f
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Aug 11 16:46:08 2014 +0200

    use BulkShardProcessor instead of TransportBulkAction

commit 65415489b1da715ad16479b4c0ad3405b12b1d07
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 11 13:30:15 2014 +0200

    check bulk_args for mixed types

commit ebe8e3c860b96234f43c2f45828c5bb46d2fc6eb
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Aug 11 14:07:44 2014 +0200

    Added benchmark test to compare bulk inserts with multiple insert statements

commit e2068d7277cdf8baa2c70ae678b24431f2318dd5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 11 10:45:24 2014 +0200

    add bulkArgs to SQLRequest

commit 1e3c39141b91e8023c294850a5629b0258793c32
Merge: 65c0184ffe 96a94b6be8
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Aug 21 08:16:46 2014 +0200

    Merge pull request #1087 from crate/h/bp-rename
    
    best practice rename

commit 96a94b6be8cb6c700b9f64209ab3deb02dae67ff
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Aug 20 11:30:29 2014 +0200

    fixed spelling in best practice docs

commit 65c0184ffe6de9895257d1637dd9f183ece26065
Merge: b7e0d25c73 df50dc36df
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Aug 20 08:43:33 2014 +0200

    Merge pull request #1084 from crate/h/testfixes
    
    fixed test

commit df50dc36dfdf3044cb3da7fbbe859c4fee0b3965
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Aug 20 08:32:44 2014 +0200

    fixed broken tests caused by conflicting folders

commit b7e0d25c73c31728dfc383caea6dbd5aad3b90e1
Merge: f3fdd90900 62e8c6c8e2
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Aug 19 20:48:15 2014 +0200

    Merge pull request #1077 from crate/h/import-tutorial
    
    Best Practice: Efficient Data Import

commit 62e8c6c8e2e612f6f9edfd2b4623392f0d985ddf
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Aug 18 18:19:45 2014 +0200

    added best practice for efficient data import to docs

commit f3fdd90900f6a5c76386af008b127ce64bca12cc
Merge: 659e8f0233 ed5bc1fb94
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Aug 19 18:37:12 2014 +0200

    Merge pull request #1079 from crate/h/adminui093
    
    increased admin ui version to 0.9.3

commit ed5bc1fb941bc0149faf7ffb75418dd7dd070c25
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Aug 19 18:20:16 2014 +0200

    increased admin ui version to 0.9.3

commit 659e8f02331766dd91dfb4c8d145bba34f88531c
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Aug 19 15:24:32 2014 +0200

    fix: using the is not null predicate on a non-existing or ignored column
    did throw an exception

commit 4dcfcf387e12e94a0c1de4074e24b414fe3478b4
Merge: 579ced02a9 5e1446a806
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Aug 19 12:24:23 2014 +0200

    Merge pull request #1072 from crate/m/string_sys_expressions
    
    correctly serialize nested sys expressions

commit 5e1446a8060177343799bca8e9ed60d951f45f25
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Aug 19 11:50:03 2014 +0200

    fix possible NPEs in sys object and object array expressions

commit 85c1ef8364b9bf63d78b49bc80c82bf62b81adc8
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Aug 19 11:13:15 2014 +0200

    correctly serialize nested sys expressions
    
    of type string

commit 579ced02a9f6cf3017c66f6bd31768b4ef45e4b3
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Aug 18 15:30:02 2014 +0200

    fixed incorrect order in changelog

commit e2249423057e99cab3de827ea5c18e39d6825155
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 18 14:53:50 2014 +0200

    re-use empty types in SQLResponse
    
    and remove unused requestStartedTime(long requestStartedTime)

commit fa9faf1da268c2bedebc0ca499f12e13c9fa88d4
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Aug 18 14:51:45 2014 +0200

    prepare release 0.41.3

commit 9ff4e80e7d04050efcb142b468903eae1fda2429
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 18 14:25:56 2014 +0200

    fix failing test on travis

commit 6dd3ab8b95fdfb8383b21e2ae04cbe10b14c0361
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 18 12:21:31 2014 +0200

    list only block devices in fs['disks']

commit dbe4dd1c8caba529a845ff8b77e152ea68ad6d19
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 18 11:03:18 2014 +0200

    allow parameters in the clustered into clause

commit 03329d29c212651ae0f4b44a59dd0bc26c9f63a6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 14 17:23:56 2014 +0200

    reduce itest logging output

commit 7ea87a10e0062633e43f1de5f19a87fe19060f66
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 14 16:55:05 2014 +0200

    set exceptionFormat in gradle testLogging to full

commit eec4ae44f8175363b905ef06ee153c0f71331f97
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 14 16:51:15 2014 +0200

    fix some warnings

commit 80329a71d537361492c9e98eef083903aa2c4737
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 14 16:50:59 2014 +0200

    reduce java integration test console output

commit e0966f78290b465b104ea32dc15780ca063a1ae6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 14 16:50:40 2014 +0200

    only run test and itest on travis

commit 4e42006430aa30ff1aa319c15fcd7c9246643ac1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 14 16:26:49 2014 +0200

    Suppress Java warning "Unsafe is internal proprietary API"

commit 7ee0b905d5ffc99a9a7940f2be4d0ef5dadea531
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 14 16:23:30 2014 +0200

    replace deprecated method calls with their replacement

commit 54531d0dccee8906c33bd1b294b6e8f123e7263b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 14 11:46:32 2014 +0200

    fix an ArrayIndexOutOfBoundsException that could occur if ESSearchTask fails

commit 8eaedf2e98de2918e7cf4a9ac13dc02ef38c95b6
Merge: ad76c18076 40527702fc
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Aug 14 11:40:58 2014 +0200

    Merge pull request #1058 from crate/h/adminui092
    
    updated admin ui to 0.9.2

commit 40527702fc9e07f765d31cf77107f95c60e02846
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Aug 14 11:34:34 2014 +0200

    updated admin ui to 0.9.2

commit ad76c18076a720eae1b01edd6b9d24b6478dacd3
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Aug 13 09:26:34 2014 +0200

    fix merge error in ExpressionFormatter of sql parser

commit e470196255131d1bb182f3254d9375a42cece603
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Aug 12 21:59:50 2014 +0200

    ignore PermissionDenied errors on node stats

commit 0801e98f634399a84b5bfc52803da26eeaa8b1ce
Merge: 8e0d9724eb d7fa62a817
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Aug 12 14:35:50 2014 +0200

    Merge pull request #1048 from crate/query-time-boost
    
    Query time boost

commit d7fa62a817c177ffdf88804f7e4e2c30eb36daee
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Aug 12 12:03:48 2014 +0200

    update changes

commit 9f0d9564697ca1784a81a6d4cba040287d4959c0
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Aug 12 11:36:40 2014 +0200

    fix tests for stricter match version

commit e6f9d26beb25d4ca82a4065cd926bfa3fe325838
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Aug 8 17:46:52 2014 +0200

    add match example results to docs

commit d7ed1a404587466cbef281ec2ebb8d97108b0e82
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Aug 8 17:32:04 2014 +0200

    analyze match predicate in its new extended form

commit f7f817d76479d7290e15463a5e0af3460d61d6f4
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Aug 8 09:42:48 2014 +0200

    implemented support for multi match in ESQueryBuilder

commit 3d8e46a7425f30502e8b3cedb71839cd8c7cbba2
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Aug 5 18:12:58 2014 +0200

    added documentation for new match predicate

commit 5cce7709b2d23103fc12af7db11741836fabade2
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Aug 7 15:56:49 2014 +0200

    add parser support for multi match predicate

commit fe753a1e5a84fc547a87b5c3f0ae60ca373388bd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 7 15:46:00 2014 +0200

    throw proper errors if predicates are used outside WHERE clause

commit 4b8bd325bf0810f4f187be1fe1864d43bc5805a5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 7 15:27:32 2014 +0200

    change isAggregate bool to FunctionInfo.Type
    
    in order to also differentiate between Scalar & Predicate

commit e2d7d207728158961f597149f55bce68411fe05c
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Aug 5 17:53:24 2014 +0200

    refactored match function to predicate

commit 657267ee478e1e5e5aeac44d1be6df6e8738f499
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Aug 5 09:22:33 2014 +0200

    actually execute the examples

commit f892a4aaebec7855948e79ab65b024b1e1202668
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Aug 4 16:36:18 2014 +0200

    create predicate documentation for existing predicates

commit 8e0d9724ebc166b07e5fb89ec32e6d7307a67073
Merge: c4b5b65e45 688acdf035
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Aug 12 12:23:08 2014 +0200

    Merge pull request #1049 from crate/l/docs-improve-readability
    
    documentation: rest: improve readability - emph keywords.

commit 688acdf035036a974096d01138a5a8cbb3660c74
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Aug 12 12:08:55 2014 +0200

    documentation: rest: improve readability - emph keywords.

commit c4b5b65e458dc51f61108ee19da589a57fe58a82
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Aug 12 10:51:24 2014 +0200

    prepare release 0.41.2

commit 6fef571b55d4c32bb18d1e9055e0459eb98d99a8
Merge: 034722bd83 27da7d0949
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Aug 12 09:41:39 2014 +0200

    Merge pull request #1046 from crate/m/match_fix
    
    M/match fix

commit 27da7d09499abf121bdb2a90ccce26783911be38
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Aug 11 17:14:37 2014 +0200

    update changes

commit bc9669c0ab301ad3df151b4ea97f972f5ff297f4
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Aug 11 16:09:13 2014 +0200

    added IndexReferenceInfo to hav a notion if index columns
    
    and forbid match on dynamic references

commit 034722bd832d929ebb13e62f87c3ea39f1a067f7
Merge: b90c52cb4b 0b1df9c857
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Aug 11 16:54:49 2014 +0200

    Merge pull request #1044 from crate/l/improve-docu-readability
    
    documentation: improve readability; line length, indentation, highlighti...

commit 0b1df9c857633a8e0bab2f3dd86bb730e5b12485
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Aug 7 18:55:12 2014 +0200

    documentation: improve readability; line length, indentation, highlighting.
    related pull requests: #1036 #1038 #1043

commit b90c52cb4b3a153da36a2bd06f9eeff0f4719440
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 11 14:11:07 2014 +0200

    move fromMapByPath method into StringObjectMaps

commit b6d1966be7f13eba67af3f415a6edb98f687f064
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Aug 11 14:02:41 2014 +0200

    minor performance improvements for insert into
    
     - avoids new Predicate allocation
     - avoids string join + split to extract contents from a map

commit 029b0d27c0131fb8be2e041c8c33e4fd75c3c2c4
Merge: 73d0b87dd6 6e2048a802
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Aug 8 12:48:08 2014 +0200

    Merge pull request #1031 from crate/h/docutils
    
    improved formatting of field lists in docs

commit 6e2048a802ca1da2575d8589f49cb510877c8a9f
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Aug 8 12:38:00 2014 +0200

    improved formatting of field lists in docs

commit 73d0b87dd6c9ee839e68bfe78d6069ea596699b1
Merge: 129539d045 d46894ffdd
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Aug 8 11:13:27 2014 +0200

    Merge pull request #1030 from crate/h/docs-formatting
    
    improved docs code block formatting

commit d46894ffddce86bd28687696b1939f9897ce9365
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Aug 8 11:05:13 2014 +0200

    improved docs code block formatting

commit 129539d045ac0b83f220ed1e1e29e2ed025bcbfe
Merge: 29901f347d 6144c8661b
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Aug 7 17:18:04 2014 +0200

    Merge pull request #1028 from crate/h/nested-ft-analyzer
    
    allow custom fulltext analyzer in nested columns

commit 6144c8661b1da0e76464200fd70c6f0aa2916be7
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Aug 7 16:34:36 2014 +0200

    allow custom fulltext analyzer in nested columns

commit 29901f347d83d1a78d7a3c90faf52a464f25e667
Merge: 0c55bdbfd7 6cbcd4cf81
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Aug 7 15:02:40 2014 +0200

    Merge pull request #1025 from crate/l/remove-is.indices-docs
    
    remove documentation about information_schema.indices (which is not impl...

commit 6cbcd4cf81604bc13dab80cd45c1057ff720e739
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Aug 7 14:56:48 2014 +0200

    remove documentation about information_schema.indices (which is not implemented).

commit 0c55bdbfd7a34f259f9763bdb8fe37e07a42800d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 7 13:34:05 2014 +0200

    fix NPE that is thrown in copy to/from if reference is used in properties

commit 3c2e460c63996ab6ec4e011280a1958db6cc018b
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Aug 7 12:18:21 2014 +0200

    fixed NPE at information_schema.tables `blobs_path`

commit de79fb5eb8e922d428b94875142aa5a57a04f222
Merge: c9e5dac76e 73d17cc50e
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Aug 7 12:15:35 2014 +0200

    Merge pull request #1022 from crate/l/improve-copy-to-docu
    
    improved COPY TO documentation: did not mention the whole export beha…

commit 73d17cc50e142c8d6d45a22387b83ada7c9453f8
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Aug 7 10:00:17 2014 +0200

    improved COPY TO documentation: did not mention the whole export behaviour
    when distributed storage systems are used.

commit c9e5dac76e41b4ef5575dd8504f9c280608ea91b
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Aug 7 10:19:11 2014 +0200

    added blob path CHANGES entry

commit a12338c99d3b0b19f24664c65e72ffde3de8cd8d
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Aug 4 17:35:46 2014 +0200

    docu: fix typo

commit 8e90366ce218035a70da910ae10ab23d03891ae2
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Aug 4 14:24:50 2014 +0200

    implement information_schema.tables.blobs_path

commit 9dca31f97fcef1e222b262fcb2cf2a08584b6336
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Aug 4 15:05:59 2014 +0200

    added documentation about CRATE_HOME

commit 0ea54f8bb400e9a19ecefa2fb9484b9df5b62329
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Aug 4 14:14:10 2014 +0200

    new snapshot version

commit 6b817f42ee9155062809d98e932684b2b7671b2c
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Aug 4 12:17:32 2014 +0200

    renamed per table blobs path setting

commit b84a408bfddb6a9582baf41ecf06a6bcb3265f86
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Aug 4 11:47:51 2014 +0200

    renamed global blobs path config setting

commit 2b36c1cb2d6d77648a9ffffb461f8683503dfc57
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jul 31 22:12:42 2014 +0200

    support setting blobs data path per table

commit 9fd09208aec72e0f6009a3fcada9179ac186e5fd
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jul 31 13:33:04 2014 +0200

    added docu for supporting custom blob data location

commit 9341bfd798d692aecae084716c9bd71e0450e8de
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jul 30 16:24:57 2014 +0200

    support setting custom blob data location globally via config

commit 1f8975adb33996f6300d87b076e4b07a43d8a716
Merge: 8e92b37223 f7c62bd616
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Aug 4 13:59:48 2014 +0200

    Merge pull request #1014 from crate/l/tests-reduce-logging
    
    tests: reduce logging

commit f7c62bd6165498310004db45ce04d6f8ae60a993
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Aug 4 13:30:55 2014 +0200

    tests: reduce logging

commit 8e92b372235135e2b094c9ea87af460abd3eac6f
Merge: 47a14922a9 1bbf9bc8d3
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Aug 4 12:46:57 2014 +0200

    Merge pull request #1013 from crate/l/reduce-travis-ci-logging
    
    travis-ci: reduce logging, use 'quiet'

commit 1bbf9bc8d35ea689d22e712c83a58e41d2a6d8f1
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Aug 4 12:25:37 2014 +0200

    travis-ci: reduce logging, use 'quiet'

commit 47a14922a93d58874f02f3839e96bade9bbd4cc7
Merge: 7ce8c2b7b7 60b8d2a86e
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Aug 4 11:49:41 2014 +0200

    Merge pull request #1011 from crate/l/copy-to-fix-docs
    
    fix: synopsis of COPY TO used a misleading syntax

commit 60b8d2a86e6850b9e5478b57895cbd7c039287ed
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Aug 4 09:35:31 2014 +0200

    fix: synopsis of COPY TO used a misleading syntax

commit 7ce8c2b7b76866fd843928ea5a5aacecbb1f73fc
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Aug 4 11:12:33 2014 +0200

    update changes

commit 98531bccc6e735884a7ec1eafb09820cc746b6be
Merge: 6a97e92f6d 0d87b3c0a8
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Aug 1 09:55:22 2014 +0200

    Merge pull request #1001 from crate/m/arithmetic_fixes
    
    M/arithmetic fixes

commit 0d87b3c0a8fe97656aa1553640e70c5263672a89
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jul 31 16:34:58 2014 +0200

    apply proper validation to datatype conversion of numeric types

commit 85f30373d0f6b1d5eb1b3f2263294cd8c7785d40
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jul 30 13:59:20 2014 +0200

    fix arithmetic functions for all numeric datatypes

commit 6a97e92f6dc85e828446176c4ccaeff942589b67
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Thu Jul 31 11:59:45 2014 +0200

    fix: always return rowcount, even when it's not ascertenaible.
    In this cases -1 is returned.

commit 5d00ed3c2b1700246a8c9fdc797d059b6cbf2e7f
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jul 30 09:49:49 2014 +0200

    fix error when deepcopying functions in planner
    
    with immutable argument lists
    and providing a proper error trace for UnsupportedOperationExceptions

commit 5dc72e592f50c0afbfa79466d8448f5656728a9b
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jul 29 16:19:39 2014 +0200

    fix: composite index must only work with `string` typed columns,
    also defining it using the `plain` method must result in `keyword` analyzer

commit 696dbd24229f3879e1c164d53b65d844a944242e
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jul 29 14:10:35 2014 +0200

    fix: using non-equality comparison of a partition column within `AND` expressions results in empty row set

commit ef3a1efe02d7ddd2bfdeeb55d956d5cb72b3838c
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Jul 29 11:55:54 2014 +0200

    prepare release 0.41.0

commit 085e9a8decdf38bf09b3bc32454d188ff214fba4
Merge: 43b89a0aed 451ec43ff1
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Jul 29 11:46:25 2014 +0200

    Merge pull request #998 from crate/arithmetical_functions
    
    Arithmetical functions

commit 451ec43ff13d351c796d029b9834232a013a31dd
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jul 24 13:25:11 2014 +0200

    cleanup exception handling when scripts fail
    
    issue same exceptions in ESSearch and GroupBy

commit c2cb1a3dbfcdb231df42dee351f19b66b6812f21
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jul 23 16:18:57 2014 +0200

    allow random() and arithmetic operators in where clause and order by

commit 3df2a97eb4885b82b0fb00c34f61b895ab201579
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jul 23 00:32:18 2014 +0200

    added grouped where scalar test

commit 123976e7bdecc5812db862e0f0961f6172ee9b86
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Jul 22 23:59:53 2014 +0200

    fix using same function in order by clause as in output columns

commit e803eea6630c65a8f45f350998f7eaaac173376c
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Jul 22 23:23:51 2014 +0200

    allow scalar functions in where clause and order by clause to use more that one reference
    
    Conflicts:
            sql/src/main/java/io/crate/executor/transport/task/elasticsearch/ESQueryBuilder.java
            sql/src/main/java/io/crate/operation/scalar/elasticsearch/script/AbstractScalarScriptFactory.java
            sql/src/test/java/io/crate/executor/transport/task/elasticsearch/ESQueryBuilderTest.java

commit 349302dc355e62e55b800b71f27fa6575cdae82e
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jul 23 00:20:10 2014 +0200

    updated scalar docu

commit 0d0ebbd49bf130a1f5083c6c8f63ac8eccdf87e3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 21 06:59:56 2014 +0200

    change fieldType from string to int/int array json repr in AbstractScalarScriptFactory

commit 22ef6961454e2c4e8e15e8e2070dc206b82092a1
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jul 22 10:04:47 2014 +0200

    add support for order by numeric scalar

commit 9dc1e2e9623f97ff2015b854bc9d292f44422abd
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jul 16 17:03:41 2014 +0200

    add generic numeric scalar search filter script in order to allow arithmetic functions in where clause

commit 1e8784f2bcddb433efb585c447c3a85e254b2ac8
Author: Lukas Ender <hello@lukasender.at>
Date:   Wed Jul 16 18:12:03 2014 +0200

    mathematical functions: log: clean tests

commit 6890aaf338060e378e1b3bc3a93b9e823e91d91b
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jul 16 17:02:16 2014 +0200

    base is now the 2nd argument of LogFunction instead of 1st

commit db2fa8a46184b754ca12e023c7a822003e20bea9
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Jul 15 16:19:36 2014 +0200

    mathematical functions: fix docu (typos, correct rendering), alphabetical order.

commit 7ca3a5d05522a587e8a8db1ec22c122fabfbafec
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Jul 15 16:11:33 2014 +0200

    mathematical functions: null handling

commit 24425b4a3ef51069bdf5917c29821391ba56913b
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Jul 14 16:54:46 2014 +0200

    implemented scalar function log(x), log(b,x) and ln(x)

commit 798267b7016054a512e037f79a4113595a3a5bbb
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Jul 14 18:14:02 2014 +0200

    fixed SquareRootFunction type check test

commit 3d7f65d576e6d7d75920c9f562492cc8ac56e34c
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Jul 14 17:34:01 2014 +0200

    fix test suite

commit 09fb530c9f003c511c04870761dd4e111be89ae6
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon Jul 14 15:00:02 2014 +0200

    added square root scalar function

commit 0a49605fca1ed57b5a034169ac0b9765a3f0b471
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 11 17:12:28 2014 +0200

    add the floor function

commit 1775be843d75e1114ad42ddd3fe3a84c56302b81
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Jul 14 15:39:45 2014 +0200

    added abs scalar function

commit eb9cd7984a2b7cdefaf560e802c9764c5ee6189e
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Jul 11 14:02:36 2014 +0200

    added random function

commit 2c628aa2df15cfabe35bc40c01df9a580ce843ee
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 11 16:25:50 2014 +0200

    add the ceil scalar function

commit db8ed2b583afd34f2e933479a0da3af92b3b4ee6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 11 14:37:54 2014 +0200

    add the round scalar function

commit 43b89a0aed428e7dfa25fb2dedadc1d28774ff15
Merge: 75b60527a3 613e1ec4e5
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Jul 28 17:26:35 2014 +0200

    Merge pull request #997 from crate/m/itest_dep_conflict
    
    fix version conflict in itests when used from old workdir

commit 613e1ec4e5f01e0e54e8008800bc9d5b85cff0b9
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Jul 28 17:06:39 2014 +0200

    fix version conflict in itests when used from old workdir

commit 75b60527a3b2fb45a760d3e9aba399728a44e3e8
Merge: ed64ab9f4c cdaae2f2d8
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jul 28 16:51:49 2014 +0200

    Merge branch '0.40'

commit cdaae2f2d89d410a84d6fa229a4158e32023e658
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jul 28 16:47:15 2014 +0200

    prepare release 0.40.3

commit 9c041d2d4bed30161b96812519a09050612dc932
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jul 23 16:20:09 2014 +0200

    fix: throw exception while analyzing if a non-indexed or analyzed column is used within grouping, aggregation or sorting
    
    add IndexType property to ReferenceInfo

commit ed64ab9f4c0be8bda6df94152b61c39246dfffc7
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jul 23 16:20:09 2014 +0200

    fix: throw exception while analyzing if a non-indexed or analyzed column is used within grouping, aggregation or sorting
    
    add IndexType property to ReferenceInfo

commit 9ae133ed37c3f666d248fb288d2dae66a110a7cd
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Jul 22 17:05:28 2014 +0200

    added documentation for match function

commit afad05971d2ada11661da00ec84b8ad14e44295c
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Jul 22 14:56:37 2014 +0200

    replaced SQLAction python doctest with java integration test

commit acbdde7c70ad94812223c9dc62739ece6c6c4195
Merge: b9eecc1c0a 527e770e10
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Jul 23 14:49:11 2014 +0200

    Merge pull request #991 from crate/h/crate-help
    
    crate usage text

commit 527e770e102008ff2ee560f94e95ca28ba082c19
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Jul 23 14:18:38 2014 +0200

    updated incorrect options in crate usage information

commit a58d201f768a820783800c61a8c82a6c5430caf2
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Jul 22 17:05:28 2014 +0200

    added documentation for match function

commit 18735c0cea7c4fab5bfa40a97d8cf61a0226f9d0
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Jul 22 14:56:37 2014 +0200

    replaced SQLAction python doctest with java integration test

commit b9eecc1c0ab88f34cbd7c6b8683edaf3492909fe
Merge: 092c4c628c e9b86625d9
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jul 22 11:52:34 2014 +0200

    Merge pull request #985 from crate/h/admin091
    
    updated crate-admin to 0.9.1

commit e9b86625d96c3b9c59a661f1a8f0401936c91de4
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jul 22 11:34:16 2014 +0200

    updated crate-admin to 0.9.1

commit d9c99f20ea1d3a22f046fc3a86bde1f6b1165738
Merge: 276d1191ee 092c4c628c
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jul 21 15:33:57 2014 +0200

    merged tag '0.40.2' into master

commit 092c4c628c7732615db234a0e9ec7849a8e29498
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jul 21 15:28:35 2014 +0200

    prepare release 0.40.2

commit 8370ce634f0edffaa1cfc59bfc35b8c4ef1c95f2
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Jul 21 12:11:10 2014 +0200

    add proper cleanup do docs build file

commit dd3a9387fbaf558397dd451f883182216fbc75bd
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Jul 21 14:19:09 2014 +0200

    try to fix InformationSchemaTest flakyness

commit 31ac8084cf3a30ada159e694299176d0e29f2ea9
Author: Matthias Wahl <matthias@crate.io>
Date:   Sat Jul 19 00:02:37 2014 +0200

    update crash to 0.9.14
    
    Conflicts:
            CHANGES.txt

commit 276d1191ee9eeaacd1b8ceca62b6692975a8b7b4
Merge: a026a2dde0 61126bfdb8
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Jul 21 14:33:37 2014 +0200

    Merge pull request #980 from crate/m/crash_update
    
    update crash to 0.9.14

commit 61126bfdb82f03a176cd638abcae6ff6faeecd82
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Jul 21 14:19:09 2014 +0200

    try to fix InformationSchemaTest flakyness

commit 8a56774193d038df028248c1be9174ba663966b4
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Jul 21 12:11:10 2014 +0200

    add proper cleanup do docs build file

commit 30087e7012c8b1683df8ea772f550cdd766a75e2
Author: Matthias Wahl <matthias@crate.io>
Date:   Sat Jul 19 00:02:37 2014 +0200

    update crash to 0.9.14

commit a026a2dde03e614ec7e4594819cef49d8301136f
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jul 21 11:46:15 2014 +0200

    improved docs about ip type

commit 4f33abf132aa3aed0fc15a5ad54ccda35a6687df
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Sun Jul 20 11:25:51 2014 +0200

    added ip type to documentation

commit 9baaf064d7bb8fd14dfaf93f5cf33999f8572655
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jul 21 11:46:15 2014 +0200

    improved docs about ip type

commit e6506071306154f97cfe781cac8a9d4677a5900d
Merge: 467bfcadd2 80268b606b
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jul 21 09:40:06 2014 +0200

    Merge branch '0.40' of github.com:crate/crate into 0.40

commit 80268b606b04b4cec6a68bb65e96fc4ccb5f06f1
Merge: d4789ffcdb bcd97dbdf4
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jul 21 09:31:31 2014 +0200

    Merge pull request #982 from crate/h/ip-type-docs
    
    added ip type to documentation

commit bcd97dbdf4a0751eced5f7dfb1bfb1f4ba188f40
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Sun Jul 20 11:25:51 2014 +0200

    added ip type to documentation

commit 467bfcadd23ede47c9b36b59a2c71b57c7a7871d
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Jul 15 14:24:45 2014 +0200

    - reduced s3 connection and socket timeouts
    - enabled s3 error retries

commit d4789ffcdb96d6e42dbebff005d3b4ef69fd19b4
Merge: c1e8818634 4726dc987e
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Jul 18 21:39:08 2014 +0200

    Merge pull request #978 from crate/m/dash_crash
    
    made crash posix compatible

commit 4726dc987e889b26afb3fa0a32e20077a4ba176f
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jul 17 22:04:11 2014 +0200

    made bin/crash posix compatible

commit f5295e9c6363442ad03d25aecb03f46da7068364
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jul 17 16:23:35 2014 +0200

    SQLActionException is the only one thrown via the SQL rest endpoint

commit ed790128d1f9e8bcdd34f6b97c8a7fcce5b38edd
Merge: 968f1045c5 62c81dd777
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jul 17 15:53:49 2014 +0200

    Merge pull request #974 from crate/h/client-bulk-insert
    
    added note about bulk insert to client docs

commit 62c81dd77719bd8ecbb31a0f9588d785c33bc90c
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jul 17 12:23:55 2014 +0200

    added bulk insert example to client docs

commit 968f1045c5b2d5d22d85e76b0fd8a63b4ea92098
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jul 17 13:44:02 2014 +0200

    do not copy underlying bytes in substr function
    
    Conflicts:
            CHANGES.txt

commit c1e88186342236424ed7f1987622aee48566cea9
Merge: d9bd8d9f42 f1daf4369e
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jul 17 15:45:02 2014 +0200

    Merge pull request #975 from crate/m/substr_no_copy
    
    do not copy underlying bytes in substr function

commit f1daf4369e46bb539918a5679c2402e8c68ae1b9
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jul 17 13:44:02 2014 +0200

    do not copy underlying bytes in substr function

commit 66d8e5e34f934f5049043c906adbad3313c093f4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 17 14:23:48 2014 +0200

    remove unnecessary type cast in EvaluatingNormalizer
    
    the value returned from a ReferenceImplementation must
    always match the columns type.

commit e8e7020f6f35375387157db3269e960df2e2b05c
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Jul 15 14:24:45 2014 +0200

    - reduced s3 connection and socket timeouts
    - enabled s3 error retries

commit 7efdf3147e57676f3de5c01014ce5d04fccf4d43
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 16 08:30:41 2014 +0200

    fix locale issue in information schema
    
    (upperCase didn't work with e.g. seed
    398EBC218D23AC0B:C9A685A0DC6FD2AD and therefore
    testSelectTokenizersFromRoutines failed)

commit 3a33fd5b6d5509c9b75e29fc11520abaa8dba17c
Merge: 82ba736ba0 d9bd8d9f42
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jul 15 21:32:18 2014 +0200

    merged tag 0.40.1

commit d9bd8d9f42e771710feef4183781ee6cb814b07f
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jul 15 21:25:50 2014 +0200

    prepare release 0.40.1

commit 635cd7fc5b40980da45b8e6e740f26dcac638cb2
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jul 15 21:02:48 2014 +0200

    added missing changelog entry for recent commit 'expose close() in crate client'

commit 68c5ed179c5101d2b7949021c076804eba664c0b
Author: Alex Jarvis <alex@panaxiom.co.uk>
Date:   Tue Jul 15 17:31:37 2014 +0100

    Expose close() in CrateClient

commit 5507c9afcd8279384439a2644892f2fc4ddfd56d
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Jul 15 18:19:22 2014 +0200

    fixup! fixup! added insert by query request timeout

commit d8904bd27d6f7f7ec8dbe90a212cdb5f256ead5c
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Jul 15 17:35:37 2014 +0200

    fixup! added insert by query request timeout

commit 40d6563558905dbd3481d9df95df5cc1fc67ed71
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Jul 15 17:14:06 2014 +0200

    added insert by query request timeout

commit 7dc3180600cfb59462994e0c360519c30edf312c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 15 14:06:56 2014 +0200

    fix a blob recovery race condition
    
    This could occur given the following scenario:
    
        SourceNode           TargetNode
    
     --> start upload
    
     --> chunk request
    
             ** RECOVERY START **
    
     --> chunk request
                --> chunk replica --> X // no transfer state
    
     --> last chunk (transfer state removal)
    
           <---  get transfer state
    
     // no transfer state

commit d6c34c181fae970528756812e3175bb6dde0e6a1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 15 11:27:08 2014 +0200

    test improvement: fail on assertion errors inside Listener

commit 4ea8b72590387a4440e0ea59b72408b1d631bbe1
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Jul 11 13:37:06 2014 +0200

    fix String.format() exception in SQLTypeMappingTest

commit 977645c37d31bd095cb7ad5cc47380901902e93d
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jul 11 13:35:19 2014 +0200

    cleaned up changelog for release 0.40.0

commit 82ba736ba09f50336b99ef5b9ed0d8efcac18b11
Merge: 269a73e742 c409f6750e
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Jul 15 18:37:10 2014 +0200

    Merge pull request #970 from alexanderjarvis/master
    
    Expose close() in CrateClient

commit 269a73e742f2ad515d9750de0c2ecdf8d752a129
Merge: 45b9cf255d 721eb5d5eb
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Jul 15 18:31:51 2014 +0200

    Merge pull request #969 from crate/m/insert_by_query_timeout
    
    added insert by query request timeout

commit c409f6750e73eddd68e1a6a1d14e752bcb6490ad
Author: Alex Jarvis <alex@panaxiom.co.uk>
Date:   Tue Jul 15 17:31:37 2014 +0100

    Expose close() in CrateClient

commit 721eb5d5eb1c5b2f8346e83de6909534e9be326c
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Jul 15 18:19:22 2014 +0200

    fixup! fixup! added insert by query request timeout

commit 61935985109610204c601f13f7ae2df53e8dbb40
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Jul 15 17:35:37 2014 +0200

    fixup! added insert by query request timeout

commit 891927ddeec357146f0259516a50486c0b3b3f03
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Jul 15 17:14:06 2014 +0200

    added insert by query request timeout

commit 45b9cf255d3011ee865af521675ee4c2c18a7a4c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 15 14:06:56 2014 +0200

    fix a blob recovery race condition
    
    This could occur given the following scenario:
    
        SourceNode           TargetNode
    
     --> start upload
    
     --> chunk request
    
             ** RECOVERY START **
    
     --> chunk request
                --> chunk replica --> X // no transfer state
    
     --> last chunk (transfer state removal)
    
           <---  get transfer state
    
     // no transfer state

commit f14fbc778b805721089a585b25d79d2379dc281d
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jul 15 11:34:38 2014 +0200

    fetch all keys from buckets with more than 1000 files

commit 9a32a947502a8ae07955e23dd122fc6d1575fc4f
Merge: 6abcc150d1 afcd6b84c3
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jul 15 12:04:45 2014 +0200

    Merge pull request #965 from crate/h/bucket-key-listing
    
    fetch all keys from buckets with more than 1000 files

commit afcd6b84c30b3c036aa61c70e622d55014ef0f83
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jul 15 11:34:38 2014 +0200

    fetch all keys from buckets with more than 1000 files

commit 6abcc150d1199523d205a10fe02558ee370ff1e1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 15 11:27:08 2014 +0200

    test improvement: fail on assertion errors inside Listener

commit 12942c8744fbf68ac0dfa9cfd11c2e5220779605
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jul 14 14:43:40 2014 +0200

    improved docs according to suggestions from softlayer

commit 8ceee7cec5b369e4cc823ba1215ca6037ebb839c
Merge: 61a22e22ee f76d195cc0
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jul 14 15:08:46 2014 +0200

    Merge pull request #958 from crate/h/docs
    
    improved docs according to suggestions from softlayer

commit f76d195cc06b13664c68c169d4ed3ef5c32a076b
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jul 14 14:43:40 2014 +0200

    improved docs according to suggestions from softlayer

commit 38f3364738b8892bd1a1bf4a59e5fc0f4ccc3b14
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jul 14 10:53:50 2014 +0200

    prevent amazons3client from being gc'd

commit 61a22e22ee84e8ca31663007952d19fa7e5ae43f
Merge: 7806860336 4a5c4aa1e5
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jul 14 10:46:24 2014 +0200

    Merge pull request #956 from crate/h/s3-client
    
    prevent amazons3client from being gc'd

commit 4a5c4aa1e55be82afb0e5a5a8cb503ecf425da72
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jul 11 18:11:00 2014 +0200

    keep reference to amazons3client object to prevent it from being gc'd

commit 78068603362d850d2e8ea0545b7f70e61fc1d233
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Jul 11 13:37:06 2014 +0200

    fix String.format() exception in SQLTypeMappingTest

commit 1e6c792f0d333934ea58367cf47b91689f42f37c
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jul 11 13:35:19 2014 +0200

    cleaned up changelog for release 0.40.0

commit c2578f9a90e8e5e81b3eed5d874165a2fde51923
Merge: f08037f373 dc37ca5ce9
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jul 11 13:33:43 2014 +0200

    Merge tag '0.40.0'

commit dc37ca5ce9c4665a1d9a2203b002b8860aae25a0
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jul 11 12:20:07 2014 +0200

    prepare release 0.40.0

commit f08037f3731abf0838ee4cc7a0c0ce2ac8a3f9d1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 9 21:59:49 2014 +0200

    abort merge on reduce node if search threadpool is exhausted

commit 17dea04ce461ad75eb66ee51cf29abe5648e3ea0
Merge: 91cb99f2e0 0d8f291428
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Jul 11 11:53:58 2014 +0200

    Merge pull request #950 from crate/m/aws_no_credentials
    
    allow copy from/to to operate on s3 without access credentials

commit 0d8f291428864ce119ea4fa31e00b952f490158d
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Jul 11 11:40:45 2014 +0200

    allow copy from/to to operate on s3 without access credentials

commit 91cb99f2e03367e33d5887a4421c5f8b371673c2
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jul 10 18:17:41 2014 +0200

    fix crate client async with listener test

commit 1c297d758615f6582f8c3a6d5b9d926321abe92b
Merge: 8ead8572b9 6d7954f6ca
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jul 10 18:05:00 2014 +0200

    Merge pull request #945 from alexanderjarvis/master
    
    Add asynchronous methods to CrateClient for crate-scala

commit 8ead8572b933bbd2876ff2f61c6b533ce3b1da4b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 10 17:49:48 2014 +0200

    improve the error message for create table failures
    
    especially if an analyzer is used that doesn't exist.

commit 95ace36df652e9d670b3985a76bdce7343e2748b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 9 21:27:22 2014 +0200

    update elasticsearch to 1.2.2

commit 1ff9510fec3f1c38b71366b2c7fa49ec594a60b4
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jul 9 21:50:19 2014 +0200

    fix no limit on insert by query with non-distributed group by

commit 6d7954f6ca1dc4000321774a7f12678aae298c17
Author: Alex Jarvis <alex@panaxiom.co.uk>
Date:   Wed Jul 9 16:09:55 2014 +0100

    Added a test for async client

commit 1d5376df4efb9b339af254c4e5e832135ac20bbe
Author: Alex Jarvis <alex@panaxiom.co.uk>
Date:   Wed Jul 9 14:49:03 2014 +0100

    Add asynchronous methods to CrateClient for crate-scala
    
    Allows the caller to configure the ActionListener by overriding the
    onResponse and onFailure methods

commit 5a1684bf919d8cac3376b858130e356f67a6cbc7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 9 11:51:35 2014 +0200

    fix group by on string columns - redistribution was broken
    
    due to BytesRef hashCode change in lucene which is now
    different by default accross different jvms.

commit e763b638e2e8d9f4cbf0cca72093707e2464e4ce
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jul 8 16:08:58 2014 +0200

    insert-by-query: forbid using of limit, offset and order-by also at group-by queries

commit 029c489c975708d6b0c4ccb7dac1e57d7cebb82f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 8 10:59:31 2014 +0200

    change hashCode implementations to avoid array creation due to varargs

commit 6bf93274d8bc3afa984ef41be233d6c3c66491b1
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jul 8 11:00:34 2014 +0200

    updated changelog according to 0.39.3 release

commit 1be200848a0a2938ead2e09f4d377868c5d674b9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 8 00:28:51 2014 +0200

    use array for collectExpressions in GroupingProjector
    
    iteration over array seems to require less allocations than
    iteration over an arrayList (due to the iterator
    allocations)
    
    it is a minor improvement that seems hardly measurable.
    
    probably also depends on jvm implementation?

commit e61d2d16a9ec2748a4de0818bca5902bf2df484d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 8 00:28:13 2014 +0200

    avoid boxing in IntegerColumnReference

commit b02c6e15495148989b35fd98368419016dd73e92
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 8 00:27:40 2014 +0200

    do not require pre-build hashes in BytesRefColumnReference

commit edf4bf80d7f934b3131bdc367941223b5c3e8b53
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 7 22:48:36 2014 +0200

    avoid string/bytesRef conversion in Id class

commit cdc606b1f6ea9392d8229f8760c5711f78ca649b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 7 16:24:56 2014 +0200

    keep stacktrace on IndexShardMissingException

commit b2743c45cc6a685b28ae3967b06b260d8f2befce
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 7 15:05:55 2014 +0200

    limit the number of threads used for collecting
    
    this improves performance if there is a large number of
    shards on a single node as it reduces context switching.
    
    In a test run on a machine with 4 cores and 16 shards this
    reduced the runtime of a group by from 0.33s per round to
    0.24s

commit 84b53bfa147848b282b8bfb3a8ef1ca66fd9ef39
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jul 7 17:16:34 2014 +0200

    fix concurrency deadlocks

commit a8f92721a732f905acc603ceb811e9a2720b43db
Merge: 9386875fd3 7c86180325
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Jul 7 17:08:02 2014 +0200

    Merge pull request #920 from crate/dobe-bytesrefsubstr
    
    test for bytesref stubstring function

commit 7c861803257f95a6472a2396686213aae73ac6fc
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Jul 7 13:58:05 2014 +0200

    use substring(BytesRef) in SubstrFunction

commit 9ab388c2590eb88e3779d666fc4c3c182e576a83
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Jul 2 08:07:22 2014 +0200

    test for bytesref stubstring function

commit 9386875fd3959ffd2d3add350b3e05f4dbf3703e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 7 11:11:07 2014 +0200

    cache parsed sql statements

commit e59bc5109f351e65dfb7855acf94a39498c1081d
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Jul 7 13:04:42 2014 +0200

    apply proper quoting to crash arguments

commit e2cd59e006b64114a38d084072ae5ccafcc4cf34
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Jul 7 12:49:11 2014 +0200

    adapt TestSysNodesExpressions to new used expression

commit 5e1420780ad2dda87d83ee25915af7ed52aa8936
Merge: 153431fec4 c30c53f037
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Jul 7 12:33:24 2014 +0200

    Merge pull request #936 from crate/m/fix_sigar_test_usage
    
    fix sigar usage while testing

commit c30c53f0371928819be5f0ccd85de0f70363ac62
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Jul 4 18:21:41 2014 +0200

    fix sigar usage while testing

commit 153431fec4949fbf9ccc8ed69108cf4b7dba1146
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Sun Jul 6 13:20:14 2014 +0200

    updated changelog according to hotfix release 0.39.2

commit 3fe0ab62e7d00f7b76303e8d27f88fb791d5236e
Author: Sebastian Utz <su@rtme.net>
Date:   Sat Jul 5 23:08:24 2014 +0200

    fix concurrent issues at bulk retry logic

commit f870f8fff5cb4bd575da28312403a12a92faa67e
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Sat Jul 5 14:56:59 2014 +0200

    updated crate-admin to 0.9.0

commit ba5f90d71cfee35265f6b1513531e855d74836ee
Merge: b718b28fb3 7191ea09d3
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Sat Jul 5 14:33:58 2014 +0200

    Merge pull request #937 from crate/h/fix-used-diskspace
    
    fix used diskspace

commit 7191ea09d3f108340c1c2b574d2cda31214e3e8d
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jul 4 23:23:15 2014 +0200

    return used disk space in bytes

commit b718b28fb3836352d4a69512c0cdacb09426cb67
Merge: 9bed98d182 15e464c408
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jul 4 18:04:31 2014 +0200

    Merge branch 'master' of github.com:crate/crate

commit 9bed98d1824feef01890dd1cc97ffda5333139d5
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jul 4 18:04:18 2014 +0200

    BulkShardProcessor performance optimizations by using locks instead of synchronized

commit 15e464c408e2b504eefe7cf65a932378b94b5acb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 4 17:25:15 2014 +0200

    avoid creating new Ordering instances in ColumnIdent compareTo

commit 1da3e23967aaced03c23f8c69f60f595a3c9cbf4
Merge: 07eac438f1 2b7c7e5c36
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jul 4 17:04:21 2014 +0200

    Merge pull request #934 from crate/load-metrics
    
    Load metrics

commit 2b7c7e5c36f068df55e4c345364dc66b9f89b5d9
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Jul 4 13:11:29 2014 +0200

    increase version for feature branch

commit 910653fd7f2d935a72524b8e81dc50050c2c7df7
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Jul 4 12:54:35 2014 +0200

    changed sys.nodes.fs to contain total and separate disk stats and node data path locations

commit b302890ef6b5a6600e750d4885d25d65b13a2906
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jul 3 21:58:39 2014 +0200

    changed output of colum names in information schema to subscript notation

commit 64109751d5b9999c3015761ff7f7093a28a1a368
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jul 3 18:38:46 2014 +0200

    implemented max_open_file_descriptors expression

commit 32c22bc13e2015bba5cca7b2005bfef68602feac
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jul 3 17:44:59 2014 +0200

    implemented process expressions on sys.nodes

commit 835972ea42e1ffa3c73defd1e0f0a1e25d0737e1
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jul 3 17:08:16 2014 +0200

    added changelog entry for os expression on sys.nodes

commit 2e95ebf7548548181de2a97571a8cf61232b8d76
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Jul 2 10:12:36 2014 +0200

    implemented os expression on sys.nodes

commit 625370a1bd2abf617ca6c0443cd418cd617bcca5
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Jul 2 15:18:15 2014 +0200

    documentation for node load metrics

commit 678007396a828d001e0dda2023e9c4e458a2d5a1
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jul 2 15:54:21 2014 +0200

    implemented node network stats

commit 07eac438f112dd592736d44ab2163c6b98615f34
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jul 4 10:00:58 2014 +0200

    fix the blob replication which broke with the es 1.2.1 update

commit ad252c1f19adf3759d0142323cf943d10dca2a02
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jul 4 09:57:40 2014 +0200

    fix activeRetries increment at BulkShardProcessor

commit a1e9ef9e6cc967a73e8d0a39c04330a47eff9ce9
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jul 3 22:45:24 2014 +0200

    updated changelog according to release of 0.39.1

commit e3385060c8f12d609cabacf90ea788f9833b1eef
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 3 17:21:27 2014 +0200

    throw more detailed exception on insert input validation

commit 4dccde7412675a0b3de5761c5c12b31adc842305
Merge: eced9b4b9b c072ae3b63
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jul 3 17:03:38 2014 +0200

    Merge branch 'copyfrom'

commit c072ae3b6309ff704391f4c02a6f1e6a1d9a0bc9
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jul 3 16:21:59 2014 +0200

    fixed BulkShardProcessor.add() blocking while retry is running

commit eced9b4b9b89419ea191fb52252f942493cd0147
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jul 3 14:06:37 2014 +0200

    fixup! update elasticsearch to 1.2.1

commit 64485accecbf5fd6c4b574c0bdb9f049a18c51f5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 2 18:13:19 2014 +0200

    update elasticsearch to 1.2.1

commit 1faf54da4ea8ff42877009d48053f2074e14a8d1
Merge: b11237d696 27bcac8fd8
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jul 2 22:24:16 2014 +0200

    Merge pull request #924 from crate/s/copyfrom-mem-optimizations
    
    Memory/Cpu optimizations, delay for retry, retry fixes

commit 27bcac8fd85401bb0f60abd71148890dea8bb3a2
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jul 2 17:11:50 2014 +0200

    added increasing delay to BulkShardProcessor retry logic

commit 4d7ac7f169a134ad2239f0e25e775017cb31f759
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 2 14:40:43 2014 +0200

    improve error message if num columns doesn't match number of values on insert

commit 29c2bd9dad4acc8035609b4df8716683450e9a93
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jul 2 12:08:06 2014 +0200

    Id & PartitionName classes using BytesRef now instead of String
    
    this avoids unnecessary ByteRefs<->String conversions

commit e966f9436cb0441160dd8e5d5fba197e24d2ee98
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jul 2 11:25:44 2014 +0200

    fix cherry-pick issue

commit afaccdb516359e62594a7a438c3a527709f864ca
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jul 2 09:32:29 2014 +0200

    improve input validation for objects and object arrays

commit 3f842047e719b5b9dbf9c5fc1fa58297e50d1df9
Merge: c28859a72c e09241493c
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Jul 1 17:48:36 2014 +0200

    Merge pull request #916 from crate/m/fix_incomplete_drop_partitioned_table
    
    fix unresolvable state after failed DROP TABLE on partitioned table

commit e09241493ceeb2178a0161e4cd3721c69934f043
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Jun 30 15:18:13 2014 +0200

    fix unresolvable state after failed DROP TABLE on partitioned table

commit c28859a72ccfa601c65dcaf7071f870b06c876e3
Merge: 17ca79dd42 97d906cfad
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Jul 1 17:42:31 2014 +0200

    Merge pull request #918 from crate/l/orderby-sym-validator
    
    implement GroupBySymbolValidator

commit 97d906cfad0c5106f64735c6e3ae62b2e32eedea
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Jul 1 16:39:24 2014 +0200

    implement GroupBySymbolValidator

commit de8ff45d95514542402094e5eb8ebbe174f6cc1a
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jul 1 17:32:57 2014 +0200

    autocreate indexes synchronously on bulk inserts

commit 17ca79dd428d4f7d384419e52b2e4944ab99bb75
Merge: b24368441a 1c7b237fc7
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jul 1 16:29:27 2014 +0200

    Merge pull request #914 from crate/h/client-docs
    
    improved client docs

commit 1c7b237fc742a08646a668dfb64eb775f131db2e
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jul 1 15:02:55 2014 +0200

    improved client documentation

commit b24368441a55c8b72c02ba023b8a72e92b152eb0
Merge: 044245d166 f200b5b6a4
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Jul 1 16:09:03 2014 +0200

    Merge pull request #917 from crate/l/distance-aggregation
    
    implement GeoPointColumnReference

commit f200b5b6a43af9f71e7f7ce6bd63e02740cbd9a0
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Jul 1 15:37:54 2014 +0200

    implement GeoPointColumnReference

commit 044245d1664cadee8078b5de03803b7f74ebb5a0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 1 15:14:03 2014 +0200

    fix distance calculation

commit f5851a64b46c974a8ee0b5263f9815be4c3393d7
Merge: 8704a167ba f156649432
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Jul 1 14:45:08 2014 +0200

    Merge pull request #909 from crate/l/geopoint-sorting
    
    allow to order by distance

commit f1566494321d869ff6aa4a707dfad511f8a50770
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Jun 30 11:41:07 2014 +0200

    allow to order by distance

commit b11237d696c8f7deeb10194bfe4c47ca790a2a1b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 1 14:10:08 2014 +0200

    add another test for BulkShardProcessor testing the failure case

commit c9a65f6687c4a2be2843b3962dedca26cdf81c74
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 1 10:05:31 2014 +0200

    use a custom BulkShardProcessor in the IndexWriterProjector
    
    the BulkShardProcessor will retry on failures due to a full
    thread pool queue and block the .add() method.

commit 8704a167baeac3a5c47b05bb965aab15df76b55c
Merge: 2e9adafb7d 97c168d071
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Jun 30 15:20:56 2014 +0200

    Merge pull request #910 from crate/l/positional-argument-value-check
    
    L/positional argument value check

commit 97c168d0714ea9f6e45985d63e40f442dab6e244
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Jun 30 14:30:55 2014 +0200

    data type check: GROUP BY and ORDER BY with positional arguments

commit 2e9adafb7dc39cca7abfd169bc432a1943ac7dc6
Merge: 68328a7ca2 ff23ccf3e3
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jun 27 16:29:42 2014 +0200

    Merge pull request #908 from crate/h/fix-geopoint-doc
    
    fixed wrong geopoint definition in documentation

commit ff23ccf3e3b84f75abcf3ae4d4d5d09599816e45
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jun 27 15:53:20 2014 +0200

    fixed wrong geopoint definition in documentation

commit 68328a7ca2b29e30641f58eb2321ae1bdb3977b1
Merge: 07930bb3ad 611dad7451
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Jun 27 14:45:12 2014 +0200

    Merge branch 'insert-by-query'

commit 611dad7451b4f4dde3fc5407f5ee0e50cba4cb3a
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Jun 27 14:34:07 2014 +0200

    added change log entry

commit 9fc0bfafe9fb365e653c86ee54dc7834ad2b9816
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Jun 27 14:26:44 2014 +0200

    fix itest sampledata

commit 41b231fecb5b08fc3f554a93a23f12892cfdbe76
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 24 18:27:27 2014 +0200

    use doc lookup instead of field caches for normal select

commit 8a1b98d2cb7cb80478a8570b6a8ff56b6bedc14a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 24 16:31:54 2014 +0200

    fix itest flakiness and improve formatting

commit 4821ce532e2a5d958f91d6614dbeba161d8fa068
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jun 23 11:24:03 2014 +0200

    added docu for insert by query

commit 546d3c159b9c1199a53600beab96d45bb11ef2fa
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jun 18 17:20:03 2014 +0200

    issue inserts on shard for insert-by-query without limit
    
    - forbid insert by query with limit/offset or order by

commit 56b10868bd2441762fb8bbba81c7a3379550e5fa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 17 16:29:39 2014 +0200

    fix clusteredByColumn serialization in AbstractIndexWriterProjection

commit 658e35337da109bd042bbef42d8c241210198d74
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Jun 13 10:38:44 2014 +0200

    insert by query plan WIP

commit aacfa0134e10f7a81f350ef73bbb4e8bdce7937e
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jun 13 11:34:26 2014 +0200

    added implicit type casting on insert with subselect

commit f0b45abe294021d5fd871238f69812776eb63eea
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Jun 6 22:54:35 2014 +0200

    implemented insert by query analysis

commit a407538b48ed066ea61e4c7735eb5fb0d9630830
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jun 12 16:22:09 2014 +0200

    implemented internal-only ``cast`` function

commit 22bfeb90a4dc8ef9b94a8ed914593c14b31cad5b
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jun 5 12:37:38 2014 +0200

    added parser support for insert from subquery

commit 74984ac9a540f050419b27f08cc1b27ca6fb9c92
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Jun 6 22:54:35 2014 +0200

    implemented insert by query analysis

commit 0befde78a1a2a41f3d2e8c9ce1db269f25445e1c
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jun 5 12:37:38 2014 +0200

    added parser support for insert from subquery

commit 07930bb3adf56b0fdb8c4a6f6aaacc5b433702b7
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jun 27 14:19:32 2014 +0200

    don't issue a senseless equality check of 2 equal DocIndexMetaData

commit a16a963b6891ac442e7095cd35f692e007bee1ca
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jun 27 14:08:33 2014 +0200

    fixed equality check of ReferenceInfo objects

commit 133d87cf7d1cfe64d9841b3794340b746b68b306
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri Jun 27 12:22:12 2014 +0200

    updated crash to 0.9.13 which includes the following changes
    
    - fix: avoid stripping arbitrative whitespaces from
      commands passed via stdin

commit 4e13c0cb452c0215311e9a73cabaf730d958bd4b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 27 11:38:36 2014 +0200

    run sys.shards queries in the SEARCH threadpool
    
    in order to avoid blocking a netty thread.

commit 4e3747ea8bc131e5047bf20dddb5aeb50577d192
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 27 11:10:22 2014 +0200

    update changes

commit 45022dd912917d71c7f1523bc4f7b3ee2bd5179d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 27 10:53:10 2014 +0200

    run sys.shards queries sequential
    
    in order to avoid sys.shards queries from using too many
    threads and overflowing the threadpool queue sizes

commit b04a345e259f6a98ff3bbdd0254d3543fae54ba8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 26 16:10:13 2014 +0200

    update changes

commit e7a35fb832da5de37086522675eb979a1aaad24a
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jun 24 15:55:41 2014 +0200

    increased crate-admin version to 0.8.4

commit 355a3b564dd9a55fc504aa592222c6d36a8c936b
Merge: 134b3777ad 1c220dd838
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 24 17:54:47 2014 +0200

    Merge pull request #902 from crate/geo
    
    add distance and within geo functions

commit 1c220dd83818917a04ba5374c05f1c189e18d54f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 24 17:34:45 2014 +0200

    geo distance: add a note about the precision difference
    
    between indexed value and calculated value

commit 134b3777ad54df2fe96378985d6b15889740c626
Merge: 6e30390903 2bb1df692d
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Jun 24 15:55:54 2014 +0200

    Merge pull request #899 from crate/l/sys.cluster.master_node
    
    add sys.cluster.master_node expression

commit 2bb1df692dbe1944742643466008d720d9adc21f
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Jun 24 11:52:02 2014 +0200

    add sys.cluster.master_node expression

commit dae206e036e35f5e6688324ecff0fb6e5e1c8b55
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 24 14:07:52 2014 +0200

    support within function in the where clause

commit 94dad92d03a7a09ad23a47b23c6650a092626b5c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 23 17:48:22 2014 +0200

    add the within scalar function

commit 7c6209f5d03a54bc42cdc1aedae76e03633f2a1e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 23 15:10:49 2014 +0200

    support distance function in the order by clause

commit 84bffca186b535aae354847e98a138f298e88fe7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 23 14:29:59 2014 +0200

    use order by symbols instead of references in SearchNode/Task

commit 2e08f5aa421d910fea354bf271e86929900b4024
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 18 15:24:05 2014 +0200

    support distance function in where clause

commit e79df23ec8d842977bcd72ac350144257375798f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 17 18:09:06 2014 +0200

    add distance scalar function

commit 6e30390903ee82ce7cf6160d443d1d40ada7670c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 6 20:03:32 2014 +0200

    enable IsNullPredicate on all data types

commit 7fc1a9aebeba727fec29dc69add8460275218da1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 17 14:02:44 2014 +0200

    support adding nested columns to a table

commit fdb978e8672d99ba7bda9dce264308a312fa5e85
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 17 12:03:50 2014 +0200

    use TransportExecutor to execute the count request

commit 48d30b535c8072442d407c0bad5da197f74b202a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 16 11:59:15 2014 +0200

    alter table add column fixes:
    
    - prohibit adding a new index
    - correct the synopsis
    - handle adding primary key columns correctly

commit 203698abfa388bf8df105a01ec3b5eef7a7c3746
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 16 10:25:27 2014 +0200

    add column: validate nested columns and only allow add columns on non-system tables

commit cfc3344f44951327262d4e3fdc214f65dafaebeb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 12 16:53:38 2014 +0200

    refactor create table statement analyzer
    
    in order to
    
     * share code between create table and alter table add column
     * avoid empty lists in the mapping which break merging of the mappings

commit 7740b54c74eeec4c870e38262e021dfe5410dde7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 10 10:52:13 2014 +0200

    implement "alter table add column"

commit 7470463b9bb30ab6bb233d8b2b20da88d5b23361
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 17 10:48:06 2014 +0200

    don't allow array columns as primary key

commit b5bc2902a0f137ab0d63afce5702d428e89c3521
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Jun 16 15:31:10 2014 +0200

    prepare release 0.39.0

commit 6045ff43e67861620eb39feff8adcae3206d2eb0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 16 14:37:18 2014 +0200

    fix partitionName generation from assignments with bytesref values

commit 6f7517e1bde7a7f41c028a2c73c4242b968aa4e0
Merge: dc9324002d 5b3b974aa7
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Jun 16 10:29:46 2014 +0200

    Merge pull request #883 from crate/l/merge-0.38.5
    
    L/merge 0.38.5

commit 5b3b974aa7f5d86e8819c37f9b16858569e37447
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jun 12 16:36:02 2014 +0200

    update changes to reflect release of 0.38.5

commit dc9324002d60b60c7276fbae76b2ce2c4ebac3f6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 13 23:06:19 2014 +0200

    fix flaky tests and possible NPE in blob container

commit bd8f9fee34d87dbf30967537b662aa86a4d2729b
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jun 13 20:35:14 2014 +0200

    fix: validation for ``array`` and ``object`` typed partition columns were broken

commit d54ae9ee59344d6e9c9f369184f313849531adb3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 12 23:32:02 2014 +0200

    change substring function to handle null values correctly

commit c7a2bd025035c89c4eb5c4633aa2294d8a6c3770
Merge: 1944a941fd f234d28601
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jun 12 17:21:27 2014 +0200

    Merge pull request #874 from crate/m/group_by_docs
    
    update docs about group by and aggregates

commit f234d2860123b8b8b94e9e685c90118f7489f784
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jun 12 17:11:16 2014 +0200

    update docs about group by and aggregates

commit 1944a941fd85052ba2043365a0ba0160e379ecde
Merge: d36dfe446f cd3f489c5c
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jun 12 16:51:19 2014 +0200

    Merge pull request #873 from crate/m/refresh-docs
    
    update docs for refresh_interval setting

commit d36dfe446f8012cb5a0103d0dc783e023ea8e640
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jun 12 16:36:02 2014 +0200

    ensure that a _version=0 query has no match
    
    and does not execute

commit cd3f489c5c4257c5508ed37823b2d602daef1a71
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jun 12 16:49:55 2014 +0200

    update docs for refresh_interval setting

commit 453ad5955508475630873f5fadd34cb845d7a590
Merge: 9c34500e0a 423a9d66c9
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jun 12 10:31:18 2014 +0200

    Merge pull request #870 from crate/m/flaky_refresh_tests
    
    fix flaky tests

commit 423a9d66c9e558302ba872456719b56228989a4d
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jun 11 17:36:30 2014 +0200

    fix flaky tests
    
    these tests expected that with refresh_interval=-1 new rows are only visible
    when a refresh is triggered externally, but it can be triggered internally at any point, no guarantees

commit 9c34500e0ac819bf267e7861e7ed69f71d38061e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 10 17:40:39 2014 +0200

    handle CollectionTerminatedException correctly in handleNodeCollect()

commit f8e4c7c0f108db5296de0b3c705c7f8e27059cac
Merge: f904837b57 1720f1045a
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Jun 10 14:19:00 2014 +0200

    Merge pull request #865 from crate/l/update-es
    
    L/update es

commit 1720f1045a8c7c9bb514b50d5c08960343da1f95
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Jun 10 13:02:49 2014 +0200

    fixed failing tests because of ES 1.1.2 upgrade: index.version.created

commit 62d3b965404e204965c99e2a7bf4edeea0c05758
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Jun 10 11:36:44 2014 +0200

    upgraded elasticsearch to 1.1.2

commit f904837b57160ec75a788d7885eada5d10f8908c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 10 11:41:43 2014 +0200

    fix flaky tests

commit 2898ebddd71ce4e4aefb9bc56f50c143322174ea
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jun 10 10:41:21 2014 +0200

    fixed substr scalar doctest

commit fa4b47f30875a0a2a0630f9d56d0290100f1c06c
Merge: e6c9dc54dd 0624590cdc
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jun 10 10:38:35 2014 +0200

    Merge branch 's/orphan-partition-expression'

commit 0624590cdcaf181dffb1c5c3fde13e998b9c318c
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jun 6 17:40:00 2014 +0200

    implemented `sys.shards.orphan_partition` expression

commit e6c9dc54ddcbae8a9f5fc611a1dff51ae8163c35
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 10 09:33:51 2014 +0200

    parser: add "alter table add column" support

commit 4d727a1dc736950155bc940bd1447a825fa84777
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jun 6 16:00:11 2014 +0200

    fix: log error instead of recurring exception throwing if shard of orphaned partition is started

commit a69889d77aff56e7d55d8ef7432d79ff63ea2136
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 9 19:09:05 2014 +0200

    update changes to reflect release of 0.38.4

commit 301898123ba5aa05582fd09823ab6db4468b873c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 9 19:03:48 2014 +0200

    raise FailedShardsException instead of NoShardAvailableActionException
    
    returns a more descriptive error message to the user and is
    consistent with the failures from the Search/Get Tasks

commit f34db76706471a04e67c5cc0ad711940b0eeaef8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 6 22:32:16 2014 +0200

    correctly handle shards that are initializing when querying sys.shards

commit 50d9628fc657c1ec31bf103184a9a111149e8a13
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jun 6 19:55:44 2014 +0200

    fixed partition column evaluation if using is null predicate

commit a983bb951db3a73ed60da585ae9f258215058dfb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 6 18:53:55 2014 +0200

    fix is null / is not null on system tables

commit 3c4bb44845838fc76b167f6ffc9d2bb675e36901
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 6 18:44:22 2014 +0200

    add a test for the NonBlockingArrayQueue

commit b1f75b5ce772a4f78da62a8c262d402ad13cd0e2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 6 16:01:02 2014 +0200

    also track jobs that have no result (like inserts)

commit 33750b846644b1ab6b8e2db654f00a6449f6e7f4
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jun 6 16:04:18 2014 +0200

    updated version of crate-admin to 0.8.2

commit edbfd4f8c36e9925563559ac4b0afe2b625c8812
Merge: 9d4a5a0b35 f2ff356484
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jun 6 15:10:06 2014 +0200

    Merge pull request #854 from crate/h/substr
    
    H/substr

commit f2ff3564846cbb3742903b3b944d0475e2f8c9d0
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jun 5 17:30:38 2014 +0200

    added substr scalar function

commit 9d4a5a0b35a0c8dd43592e836b1ab47c2deaa160
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri Jun 6 10:50:44 2014 +0200

    convert bytesref into strings in format function
    
    Conflicts:
            CHANGES.txt

commit 369892e2750c3ef43ee20dc704fba445537672fc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 6 11:24:52 2014 +0200

    implement distributed collect on node level with doc granularity

commit fbac7c51aefc9d66be37949ddf3645f8ccd231f6
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Jun 6 09:24:09 2014 +0200

    add the set reference doc to the reference toc

commit 203084ddace49b7069ecae7db5f498dc34cca9fc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 6 09:07:10 2014 +0200

    remove operations from "current" in all failure cases

commit 9bfb7bd10e12a08bb79d916aabea5788fb6b5658
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 6 08:36:27 2014 +0200

    update changes

commit 4319756ce8ce20977b80c9895c576d7af89d0b08
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 5 18:09:03 2014 +0200

    try to keep old logs if the size of the q is changing

commit 04e0e093cd60b7c9af825470483102278852e736
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 5 17:21:43 2014 +0200

    document stats tables

commit 8609a6031ec29acffea3818c5d913abf6bc029a9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 5 14:54:58 2014 +0200

    add possibility to enable/disable stats tables via cluster setting

commit 4486a0083c1b543771e8d16b419882c9b48462d9
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jun 5 09:57:54 2014 +0200

    fix SetAnalysis.hasNoResults()

commit 84a031c26fe9fce160c9698e9757406b3583310a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 4 18:05:31 2014 +0200

    add sys.operations_log table

commit f5f9af1e18b174dfd088e8be9ef0b0e58c53a1f1
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jun 4 17:50:50 2014 +0200

    implemented set and reset statements

commit 1db31bf24cfb5f49375dd6e71321772607081aa8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 4 09:08:44 2014 +0200

    add the sys.operations table

commit 83365f66ce8ba3b3f1fd08397f18c1141c7c01f9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 4 15:51:42 2014 +0200

    fix changes and use json representation in docs

commit 39b6428db62b99ceca23cb83419070f3fb26e7ef
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jun 3 23:34:01 2014 +0200

    implemented `sys.nodes.thread_pools` expressions

commit b36c757ac44bb8e35d318486eecad061aba9c83a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jun 4 12:31:22 2014 +0200

    fix itest

commit 4c7622d099db953e0f8c8ddb6ee5754e8eb6a522
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 26 14:46:17 2014 +0200

    add sys.jobs_log table

commit 205db9ff2f002c16384071a393eeb7ec131a4b99
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 26 18:00:19 2014 +0200

    remove tableIdent from routing and isInMemory from TableInfo

commit 30c224316160ce0ef61bcdb289e3c2b0f1215438
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 26 11:20:30 2014 +0200

    access in memory tables directly instead of using a key

commit cc7af5c6edb5e9320b30e199ffd77aa29aebb539
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 26 09:42:26 2014 +0200

    use UUID as job table key

commit 4823cc94b1ff4f53ea229bd83f0d0962704efc5d
Author: Sebastian Utz <su@rtme.net>
Date:   Fri May 23 16:50:58 2014 +0200

    implemented sys.jobs in-memory table including collector

commit c02104566b81ed3108302f5c769d0c84817071f6
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 20 11:48:18 2014 +0200

    implemented parser support for `RESET GLOBAL some_setting`

commit 71b931f309cc7d3ce9105fe311d3a81745dc0179
Author: Sebastian Utz <su@rtme.net>
Date:   Mon May 19 21:42:50 2014 +0200

    added parser support for `set global column = value`

commit b3199b42646f569b0ab8320258933cb820a6218d
Author: Sebastian Utz <su@rtme.net>
Date:   Mon May 19 19:56:33 2014 +0200

    implemented ``sys.cluster.settings`` expression

commit c84b94018b18ca0982f3ab62c1a6641225d2e91e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 5 15:38:25 2014 +0200

    convert ips to bytesRef if loaded from fieldcache
    
    currently there is no clean way to differentiate between
    internal storage format and output format.
    
    So in order to handle ips we need to change them to the
    expected output format for now.

commit 168873918936d07b909565f6763eeaccefef4caa
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jun 5 16:01:50 2014 +0200

    fixed table info cache invalidation

commit 5f0579551b02befd5a607b3682532ecaf20259b0
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jun 4 22:44:40 2014 +0200

    invalidate only related table infos from cache on meta data change

commit a105b0c378ab9d8df0f6bb32b9db1752fccd40fc
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jun 5 12:41:54 2014 +0200

    exclude test classes from coverage report

commit 74848fd8c17df1bbe9e0c8b025d6ab911db86fa7
Merge: 96ee585b77 b31b23cca0
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu Jun 5 08:43:39 2014 +0200

    Merge pull request #843 from crate/h/nightly-task
    
    added gradle task for nightly builds

commit b31b23cca09aa288096ace77f9efce90d182bd81
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Jun 4 17:23:36 2014 +0200

    added gradle task for nightly builds

commit 96ee585b77ffd6dfbc055b993200fcbf9184d1dc
Merge: 4341868739 df6f4528b2
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Jun 4 15:51:34 2014 +0200

    Merge pull request #842 from crate/h/adminui-0.8.0
    
    updated admin ui to 0.8.1

commit df6f4528b2dc142e22f00269babcb0c79011a718
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed Jun 4 15:01:01 2014 +0200

    updated crate-admin to 0.8.1

commit 4341868739b9258aa482bf81ceacb353bd8f8edb
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Jun 3 19:52:53 2014 +0200

    prepare release 0.38.3
    
    Conflicts:
            core/src/main/java/io/crate/Version.java

commit 4c7293eb1340765203c4a3e66ca943de735f53e1
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Jun 3 21:32:50 2014 +0200

    fix typo in DEVELOP.rst
    
    Profiling => Test Coverage

commit fb926164e43c9483a430498c7872b8b5af686e7d
Merge: ca9c0f8f0b 552012e0ab
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Jun 3 19:15:50 2014 +0200

    Merge branch 'b/fix_tests'

commit 552012e0abdad0bcafef9a6cb87670ca285baa9d
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Jun 3 19:12:56 2014 +0200

    fixed itests after updating crash

commit ca9c0f8f0bb7c910069e6c5d5c26f1b7eb51b425
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Jun 3 18:01:45 2014 +0200

    update crash to 0.9.10
    
    Conflicts:
            CHANGES.txt

commit 58e773ac9f2a9bcdff4bd561ec20ab6ca4ffbe22
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed May 28 17:08:11 2014 +0200

    fix: fix display of nested columns in information_schema.table_partitions.values
    
    Conflicts:
            CHANGES.txt
    
    Conflicts:
            CHANGES.txt

commit ff454b603a90344d431f4ba35d18b8a0ce87d331
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue Jun 3 15:06:22 2014 +0200

    updated crash to 0.9.8 which includes following changes
    
    Conflicts:
            CHANGES.txt

commit d4337a517a49f50a90eea4f0c2ce71999fed31df
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Jun 3 16:08:07 2014 +0200

    document usage of jacoco profiling and findbugs via gradle

commit 52d6656a8462c801b2ab44486c91808fde02ac31
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Jun 3 15:58:07 2014 +0200

    skip BenachMarkBase when running bench via gradle

commit af7a0be89beaedccd5f20e8ff7c61ef0a5f397d7
Merge: 64968f5a1e e914315798
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Jun 3 14:40:43 2014 +0200

    Merge pull request #833 from crate/m/any_additional_operators
    
    M/any additional operators

commit e914315798b037dbc14bd227ade40dc9a749846f
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Jun 3 12:09:17 2014 +0200

    implemented any not like operator on string arrays

commit 64968f5a1e93f96da64ec622027f5a8ec5b68d6c
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Jun 3 14:37:23 2014 +0200

    disable jacoco on ES submodule and continue build even with findbugs errors

commit 83f9671a6a58c61a4b5958b79798d3e50a34be02
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Jun 2 16:05:38 2014 +0200

    implemented any like operator on string arrays

commit 608903e6b5802c76e4594d87be639c6b2a1364c2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 3 12:04:44 2014 +0200

    allow date_trunc on long and string literals

commit 1428f655fb335c40d133b00ce5c8c1cdcb20edc7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jun 3 09:37:04 2014 +0200

    improve arithmetic docs

commit 3594736ec9da2054e01357433114ed57725564d7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 2 18:34:01 2014 +0200

    update workerCount setting in NettyHttpServerTransport
    
    (was updated in es/upstream)

commit a42e6e7f8ad59c76cd4a72dc3f769722e501e810
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 2 18:21:25 2014 +0200

    add custom exception for shard failure and use in both ESCount/ESSearch tasks

commit bd3ac22acc2c0c13895ce6a70386a0109908add9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 2 17:30:33 2014 +0200

    throw an exception if CountResponse contains shard failures

commit d8ae707a18a17e0a7a66d1a0987e35efac7413ec
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jun 2 11:26:16 2014 +0200

    add retry logic to ESBulkIndexTask
    
    if the Bulk ThreadPool queue runs full requests are
        rejected. This retry logic avoids losing inserts.

commit 36351469e9d5dd56c740abdd8d41cb28ae1df0a9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 30 22:56:13 2014 +0200

    fix issues found by findBugs #2

commit 6c25dbfd5f272bd02dad12d46a7bb4ab2121ed00
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 30 22:24:59 2014 +0200

    fix various issues found by findBugs

commit c2a28a5e7d238b2f57f260cbece48c16f9cec9f6
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed May 28 18:10:32 2014 +0200

    add jacoco coverage and findbugs gradle plugin, upgrade gradle to 1.12

commit 608ef865229629257917459c85cb9540071ec54e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 28 10:09:15 2014 +0200

    avoid unnecessary array creation in ESBulkIndexTask

commit 056c8a1326ec34ee69f85d9f547217e64fa45878
Merge: 2b687efae6 d4b2517d4e
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed May 28 09:55:49 2014 +0200

    Merge pull request #824 from crate/m/npe_refresh_partition
    
    fix npe when using partition clause with null

commit d4b2517d4ec5039c370414974f1ec1ff8c57792e
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed May 28 09:42:41 2014 +0200

    fix npe when using partition clause with null

commit 2b687efae68a02579f5062950e50455ba9be86ef
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 26 15:05:09 2014 +0200

    allow arithmetic operators on timestamps

commit 7172a566486f65dbc4acf33bafa32d4d72ab3d37
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 26 14:48:09 2014 +0200

    fix unwrapping of nested exceptions
    
    and enable stacktrace in responses if logging is set to trace

commit 21ed92ac6d905df6cf23ba16b0cc767e97eed5a0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 23 14:12:27 2014 +0200

    add arithmetic functions

commit 07fc40d6c372c533ee6ef0644fa7bdc9d31d4552
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri May 23 16:41:04 2014 +0200

    fix hidden directive in docs

commit b741080e4b4147077e6335a5f71ce90242f44cb5
Merge: f3fb5d1f37 1b1d32b747
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri May 23 16:20:27 2014 +0200

    Merge pull request #818 from crate/h/forwardport-0382
    
    forwardport 0.38.2

commit 1b1d32b747853a46446362f3203432be1b248419
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri May 23 14:03:36 2014 +0200

    prepare release 0.38.2
    
    Conflicts:
            CHANGES.txt
            core/src/main/java/io/crate/Version.java

commit 2050cc5778e0707b699e3a3e0627df987c0c9008
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri May 23 13:55:54 2014 +0200

    increased crash version
    
    Conflicts:
            CHANGES.txt

commit 5b85e21c6f2f896d1f9bd732f8da6bdac24b5a82
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri May 23 11:55:49 2014 +0200

    fixed broken references in client docs

commit f3fb5d1f37cd6640b8caee0a253a79c8c7b725ac
Merge: 7bf8956f7f 23b2c871c5
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri May 23 14:37:59 2014 +0200

    Merge pull request #817 from crate/partition_copy
    
    Partition copy

commit 23b2c871c53e043abea726225e2b73942af843c1
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri May 23 14:32:33 2014 +0200

    fix copy analysis and projections to use ColumnIdents instead of strings

commit ea40a829c30ce2a6b4d992f4dc7c0b7462c51059
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri May 23 12:39:09 2014 +0200

    update parser tests for refresh on partition

commit 5e9db5d363fca523cd46326c8b0c105bc16818f1
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri May 23 12:09:06 2014 +0200

    updated changes for story branch

commit c9d58737481520b4116c7e9182a2315d05e1f414
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri May 23 11:50:33 2014 +0200

    increase version to 0.39.0 SNAPSHOT for feature branch

commit d082e5a617b9a418705f9dcc23683f1c0847e3b9
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri May 23 10:13:47 2014 +0200

    implemented alter table on single partitions

commit 1267931b2f70d9e8934b844a7c895dfd3c81215d
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu May 22 18:35:05 2014 +0200

    added partition clause to alter table stmt in parser

commit 16a3d4b3f23996a327f91cdacef573f7ba946017
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue May 20 18:43:45 2014 +0200

    added documentation for array and object literals

commit 3c4ae98061d73acc5bc7d47c4e86983c81cb947c
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed May 21 11:32:56 2014 +0200

    slight improvement to copy to description

commit 3430fa54b14ea95cca474ebf336360ac06cfb711
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue May 20 18:10:19 2014 +0200

    implemented analysis of array and object literals

commit 04465498293b7f9ffd98721f198064e98b32c47e
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue May 20 12:10:37 2014 +0200

    add ArrayLiteral and ObjectLiteral to parser

commit c5f5677a940997e586d1c5eff0ceb645df10ca54
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 20 13:36:05 2014 +0200

    support COPY TO on partitioned tables without partition clause

commit 05d217cf14e7f1752069e447a3ce448e6db9529a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 20 10:48:14 2014 +0200

    add partition clause to the copy to statement

commit c14345dcd3a6f4a18f733005163cfce60819c5b1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 19 16:17:00 2014 +0200

    add support for the PARTITION keyword in the copy from statement

commit a4b4155bfb4bd9d3ba3f46b7e7524ac645638d41
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 16 15:03:39 2014 +0200

    change refresh table for partitions to use new synopsis

commit b435ce6fc8fe0391ece0a4f9c5ec4b2a7f78c152
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 16 14:15:59 2014 +0200

    make ExpressionTo*Visitor singleton

commit 741d1fe55ad4c8817a831c3119cd9c6187b77d91
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 16 10:17:02 2014 +0200

    parser: change copy from/to to support "<tablename> PARTITION (...)" clauses

commit 7bf8956f7fa0a47610b3e13c547ba54646fbcda2
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri May 23 10:22:25 2014 +0200

    prepare release 0.38.1
    
    Conflicts:
            CHANGES.txt

commit 44ca71d8786e75cbe1d74a02a1a86cd58c4a8092
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri May 23 10:04:16 2014 +0200

    added setup instructions to client docs

commit b13d5035c3914262f0ee500e51a05c5b48bc9a37
Merge: 285fabadaf eb3e5ce527
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 23 09:36:27 2014 +0200

    Merge branch '0.37'

commit eb3e5ce5271be9057699b69501cfe6a9338bc5e8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 23 08:43:14 2014 +0200

    prepare release 0.37.5

commit 43d123fc81ff1355b74f14c9a4bd4c26bc53b092
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 13 10:55:06 2014 +0200

    added missing exception messages
    (cherry picked from commit c77376bdcb0621ecbc8415dd1a44e3454151a641)

commit fea15783e92eedcd98fb07d278fb088386a29435
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu May 22 17:30:02 2014 +0200

    rework partition, primary key and clustered by properties on TableInfo to ColumnIdent

commit dc07403afb1343122fe8e9562d736e4ac63242a5
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed May 21 17:56:39 2014 +0200

    several fixes around nested partitioned columns

commit 32af9ca13eee8ac1b7097b9fcf1df3a67827af16
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue May 20 12:23:36 2014 +0200

    test case: missing columns in information_schema.columns. caused by 'partitioned by'

commit 53c35d1ee5bc09b1e3ae9e886d825cdc26ab4146
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 22 16:30:49 2014 +0200

    fix schema update on partitioned tables

commit 2bfe538e48908826ea05de936dffe00e80948e92
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 22 15:24:01 2014 +0200

    fix template update for partitioned tables

commit 285fabadaf4c7ac4ece01180065fbdbd0f32e210
Merge: 326df7bbc3 ae7e269187
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu May 22 14:00:16 2014 +0200

    Merge pull request #811 from crate/h/bintray-upload
    
    changed gradle task to upload client jar to bintray

commit ae7e26918700c0e9cfc7f5ded9c6954118237b7f
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu May 22 13:01:25 2014 +0200

    changed gradle task to upload client jar to bintray

commit ad9d412fff3b7ab930f4410cd072cbc8b472325b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 22 11:52:32 2014 +0200

    fix deletion of empty partitioned tables

commit 3dcbbdba0c41abb5aace581857e162d93b4df921
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 22 10:06:15 2014 +0200

    add support for ORDER BY <ordinal_number>
    
    (was already documented that it is possible to do that)

commit 326df7bbc397f0c0d77059814998c42d89bbc453
Author: Sebastian Utz <su@rtme.net>
Date:   Thu May 22 11:08:02 2014 +0200

    do not sign locale installed jars

commit 3c3dcaea9fbade970105a7617a55d417273a02ce
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu May 22 09:07:30 2014 +0200

    fix group by clauses which use ordinal numbers to refer columns

commit f4f2fa6e9017b0c24376db2a319973d610298876
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 21 21:14:19 2014 +0200

    fix copy from s3 globbing

commit 03c29cec589a73c6e5877e55ee45d33433e29b31
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 21 10:38:50 2014 +0200

    add support for order by... NULLS { FIRST | LAST }

commit 7c166ae437034ac45df9d71f2915bbf6923a6a02
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 20 16:46:59 2014 +0200

    added client tasks for javadoc & source jar creation
    
    also sign all jars and pom before deploying to maven

commit 248daa34304212e76647ff63d15f4a3ad9aeb49e
Merge: 19fdf2fb38 fb50e3e0ca
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue May 20 16:52:00 2014 +0200

    merged 0.37.4 into master

commit fb50e3e0caaaa783998f2289f0037b1d42109868
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue May 20 16:01:18 2014 +0200

    prepare release 0.37.4

commit 19fdf2fb38f110b1b3b3a8a9a04446778352fe16
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 20 12:34:04 2014 +0200

    added 'install' task to app, alias for 'installDist'

commit 891a84e37bba480239a5c2aaaf5133883350ef1d
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 20 12:33:44 2014 +0200

    fixed building of client jar

commit 5aca9ae296677567dce07da61a43ccb5b50663e4
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue May 20 11:32:31 2014 +0200

    updated crash to 0.9.6

commit 4bb406d1ecee8a455eec0f26430ebf652c0adf8f
Author: Sebastian Utz <su@rtme.net>
Date:   Mon May 19 19:20:09 2014 +0200

    fixed typo at client gradle script

commit 90e3d012fd2234c2ba11dd8d83a00dd88ee7e822
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon May 19 17:27:36 2014 +0200

    improved snapshot settings visibility

commit 38c39ca14b4e813cc09ed61c297c613aba9203f5
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon May 19 17:16:05 2014 +0200

    prepare release 0.38.0

commit f9d2b24d7a5678050e589309e3e2a0f1d5e7e74e
Merge: 8a6721810a 34c8b3e221
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon May 19 15:48:31 2014 +0200

    Merge tag '0.37.3'
    
    Tag release for revision 0.37.3
    
    Conflicts:
            CHANGES.txt
            app/build.gradle
            core/src/main/java/io/crate/Version.java
            docs/versions.cfg
            sql/src/test/java/io/crate/integrationtests/TransportSQLActionTest.java

commit 34c8b3e22159371552559010169feed8e8dee1c7
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon May 19 15:35:01 2014 +0200

    prepare release 0.37.3

commit 36b3c230352644daefbe747f66428d94d387f0ff
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon May 19 15:34:13 2014 +0200

    updated crate-admin to 0.7.3

commit 1fd80c2ae5f1f8b28c3bdb8fc304c2e42101bc4d
Merge: d55c176bc4 069a02d36e
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon May 19 15:22:28 2014 +0200

    Merge pull request #791 from crate/l/hotfix-doc-agg-index-off
    
    L/hotfix doc agg index off

commit 069a02d36e183c7f3276dc6d5f16c72f0448a34d
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon May 19 11:43:50 2014 +0200

    document data aggregation behaviour on field in
    column with disabled indexing

commit c0fea0c3e611bd8571ff4d4fa07da6f3fac98290
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon May 19 11:56:52 2014 +0200

    remove nailed version for crate-docs-theme

commit d55c176bc45d17ee8e26362a2f085cc96c60e1c4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 19 14:11:55 2014 +0200

    update crash to 0.9.5

commit 7fababd0e07f89e239662e40cdff31f0d95a44dc
Merge: ebeee945b3 e81681b056
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon May 19 14:01:26 2014 +0200

    Merge pull request #793 from crate/l/hotfix-do-not-ignore-unsupported-analyzer
    
    L/hotfix do not ignore unsupported analyzer

commit e81681b056f935ea484153a6fdb16be332583297
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 13 15:03:31 2014 +0200

    validate type/analyzer setting in CREATE TABLE statements
    
    Conflicts:
            CHANGES.txt

commit 8a6721810aa6837d779a408c1644fb7949fca007
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat May 17 20:41:25 2014 +0200

    fix a flaky test

commit 35d973d5cbd6d386d73ae98fec70be945875f3f0
Merge: 4b659427cb 8b42f45167
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri May 16 15:09:20 2014 +0200

    Merge branch 'master' of github.com:crate/crate

commit 4b659427cbf66bc60628ac7aae0af297a3818113
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri May 16 15:08:46 2014 +0200

    merged 0.37.2 into master

commit 8b42f45167699b10752481e30059d07c78833b61
Author: Sebastian Utz <su@rtme.net>
Date:   Fri May 16 14:26:16 2014 +0200

    fix: default settings of crate client have been applied incorrect

commit ebeee945b3d722cf1f299fa231261f3986640a0c
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Fri May 16 13:57:56 2014 +0200

    prepare release 0.37.2

commit f562a3c87491a2963be28d88c2a4103484294501
Merge: bc8a2e1d45 1154a5c44a
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri May 16 11:37:39 2014 +0200

    Merge pull request #785 from crate/m/HOTFIX_misc
    
    hotfix misc

commit 1154a5c44ab3dd9d53728df163154c57af35a2e8
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri May 16 11:00:43 2014 +0200

    allow aliased subscript expressions

commit f59fbe0520116e11e71ef45f769a8ecd8a2bdc42
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri May 16 09:43:54 2014 +0200

    allow single character blob table names

commit 591507497a2481a62718eabc051ef07f9f6699f3
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu May 15 17:46:50 2014 +0200

    fix count(*) on empty partitioned tables
    
    Conflicts:
            CHANGES.txt

commit 5d5a44535ade6dd35c59f6bc654eb87f1d506231
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon May 12 17:23:58 2014 +0200

    prepare release 0.36.6

commit 39b3473fd1ec8e148501b2d096b5cd0ea3b2b739
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon May 12 16:31:13 2014 +0200

    improve error handling for AWS s3.

commit 3f3268d45a7b80f5b2246511c4542030ab3e37b8
Author: Sebastian Utz <su@rtme.net>
Date:   Fri May 9 15:55:15 2014 +0200

    prepare release 0.36.5

commit bc8a2e1d45041dc888e3c969804ae1032ccd3036
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 16 10:47:12 2014 +0200

    unwrap ExecutionException to improve error reporting
    
    e.g. instead of
    
        SQLActionException[Failed execution]
    
    the user will now get
    
        SQLActionException[com.amazonaws.services.s3.model.AmazonS3Exception:
        Status Code: 403, AWS Service: Amazon S3, AWS Request ID:
        6F27AB0AB5FE3155, AWS Error Code: SignatureDoesNotMatch ...

commit 5988ef00554c0e30eb30b2def3604614dd69fa0f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri May 16 10:35:54 2014 +0200

    always use HTTP for S3 auth

commit 10e125567508132fe2b0b26bb1d64b7dcd913e69
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Fri May 16 10:18:23 2014 +0200

    updated crash version to 0.9.4

commit da61993555ddd8a3b07a08599dbddbfe87dd3444
Author: Sebastian Utz <su@rtme.net>
Date:   Thu May 15 18:03:03 2014 +0200

    updated usage of client at client readme

commit 9796dbc9104f47a97f7cc8d92e1fa98ae84e93a0
Author: Sebastian Utz <su@rtme.net>
Date:   Thu May 15 16:39:37 2014 +0200

    data types in response are optional now

commit ac93cdd543c07c6da8041c7375824668caf07ec3
Merge: 9d9e269662 97be00579d
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu May 15 15:42:13 2014 +0200

    Merge pull request #777 from crate/hau/admin-version
    
    increased versions of crash and crate-admin

commit 97be00579df3632a428924d08f7d7b17cef7e6a3
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu May 15 15:16:48 2014 +0200

    increased versions of crash and crate-admin

commit 9cf54c031d4854f68bf23a55f06e5cabc88fe651
Merge: 1ebb5e04bb d9d080dbae
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu May 15 15:00:57 2014 +0200

    Merge pull request #776 from crate/hau/fix-threading-issue
    
    Fixed threading issue in RestSQLAction

commit d9d080dbae008b37e98fbc25e5800a34b0286c45
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu May 15 14:31:33 2014 +0200

    fixed threading issue in RestSQLAction

commit 1ebb5e04bb5340f2693cc3e3994200ddfe483b5f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 14 09:05:05 2014 +0200

    improve error messages for invalid geo_point values

commit a513d43ef1cf4cbd557ae888bb0236f0a59eaaa6
Merge: 8d08a5ab07 326411b3fc
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue May 13 19:15:14 2014 +0200

    Merge pull request #773 from crate/blob-listings
    
    Blob listings

commit 326411b3fcb8ba49ffdeb62e685284dd5f1e0511
Merge: f19a8b1b75 739fcf731e
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue May 13 19:05:08 2014 +0200

    Merge pull request #774 from crate/l/blob-last-modified
    
    L/blob last modified

commit 739fcf731ea8688896b2454ee1c5fd237217aea1
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue May 13 18:19:52 2014 +0200

    blob listings: add 'last_modified' expression

commit f19a8b1b7524cf28eccfb5971c831b7c62ca9a9d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 13 14:24:44 2014 +0200

    allow select on blob tables  / integrate BlobDocCollector
    
    Conflicts:
            CHANGES.txt

commit 6505039b0e2eb7c0fdd2967cee000412e0f2414e
Merge: 146548fd6a 63d3bf23d3
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue May 13 18:01:10 2014 +0200

    Merge pull request #770 from crate/l/blob-doc-collector
    
    L/blob doc collector

commit 63d3bf23d3549ccbc6ec405a1fc9eb1ed5911c04
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue May 13 12:19:50 2014 +0200

    implement blob doc collector

commit 146548fd6a5897d93d8bf3043c733f47d712d2b2
Merge: 8d08a5ab07 44ac8a210a
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue May 13 15:00:18 2014 +0200

    Merge pull request #767 from crate/l/restructure-doc-expressions
    
    prepare package structure for blob doc level expressions

commit 44ac8a210abe0f5a0a692ac020694bd1a3fe8ccf
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue May 13 14:47:12 2014 +0200

    prepare package structure for blob doc level expressions

commit 8d08a5ab07db4e43dec867f0714a646f9a57b58e
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Tue May 13 16:55:49 2014 +0200

    removed developer and installation instructions from documentation

commit 304d445573c7bdeb1d0a77da758faec2039c05fa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 13 15:03:31 2014 +0200

    validate type/analyzer setting in CREATE TABLE statements

commit 8668479714228734f7495dc0ef83752d371149f4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 13 13:41:54 2014 +0200

    add GeoPointType to sql/rest docs

commit 1e78aaded6e891d1d1389ffae54b012998158f61
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 13 11:25:57 2014 +0200

    add the ``geo_point`` type

commit 5e911eedea126d8c2e0e7e3db97875f594ef9c71
Merge: 53878bdfdd c77376bdcb
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 13 10:56:45 2014 +0200

    Merge pull request #765 from crate/s/exception-messages
    
    added missing exception messages

commit c77376bdcb0621ecbc8415dd1a44e3454151a641
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 13 10:55:06 2014 +0200

    added missing exception messages

commit 53878bdfdde317fefbaffe2ae30b770bfb24c03f
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 13 09:28:43 2014 +0200

    hardcoded client node.name to randomUUID
    
    eliminates the need of 'names.txt' resource

commit 7b130303f7f46c9282f775be086dae4b0d84b05d
Merge: 1878710dca d7af7a7f78
Author: Sebastian Utz <su@rtme.net>
Date:   Mon May 12 23:58:05 2014 +0200

    Merge pull request #764 from crate/client-java
    
    Client java improvments

commit d7af7a7f78c50afe2019a8da88c240473106e6b1
Author: Sebastian Utz <su@rtme.net>
Date:   Mon May 12 23:57:21 2014 +0200

    added column data type example to client usage docu

commit 465cb270e7411175f1f84b6ad5a1cdf06a61523e
Author: Sebastian Utz <su@rtme.net>
Date:   Mon May 12 23:40:25 2014 +0200

    added maven dependency example to client package readme

commit e2e818780e739c202c88f19a3c4c6e545e6caabc
Author: Sebastian Utz <su@rtme.net>
Date:   Mon May 12 23:25:54 2014 +0200

    updated CHANGES

commit 0c9aa57037f60627c825a3daae4ecf8e5a0a981f
Author: Sebastian Utz <su@rtme.net>
Date:   Mon May 12 22:06:43 2014 +0200

    return data type of every responded column

commit 2cb8bcfaca5d7a40b9f57de65a31855cfca4a60f
Author: Sebastian Utz <su@rtme.net>
Date:   Mon May 12 17:08:03 2014 +0200

    refactored java client docs

commit 458674f4063e3e5bafef6ad7bc00f9f31852200c
Author: Sebastian Utz <su@rtme.net>
Date:   Mon May 12 17:06:55 2014 +0200

    upgraded to crate-docs-theme 0.2.3

commit 2782ca136a242093963c5490a06e8c879451aa91
Author: Sebastian Utz <su@rtme.net>
Date:   Mon May 12 17:06:33 2014 +0200

    fixed doctest

commit e307d5a44d8f8837d0afaaf6f7a19b7127066ad6
Author: Sebastian Utz <su@rtme.net>
Date:   Mon May 12 14:13:00 2014 +0200

    added maven upload tasks to client package
    
    also added missing lucene dependencies

commit d70cea4645647960dbdbf6bbbf3bab2e73bf2b52
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 6 09:49:32 2014 +0200

    refactor data types into classes

commit 25a9437c341cda5357a0c4ac991ce83b59c1867a
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon May 12 10:56:29 2014 +0200

    added client docs configuration for readthedocs

commit 753347dd4ca1ed074252ee7fc3e12ccc71dba893
Author: Sebastian Utz <su@rtme.net>
Date:   Thu May 8 11:43:42 2014 +0200

    exceptions are not needed anymore at sql shared resources

commit bd76c22e76865d5b528931f738b327cb6f7d54ab
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 6 16:35:39 2014 +0200

    exclude duplicates at client jar task

commit 0d93b438867e494b7e75cb831889a2654e42b2c8
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 6 11:35:59 2014 +0200

    client depends only on 'shared' resources from 'sql' package now

commit e3bc96214419b62b297a0be7dbdf2c1c9f8dbd61
Author: Sebastian Utz <su@rtme.net>
Date:   Tue May 6 11:34:24 2014 +0200

    moved sql xcontent parsing to rest action

commit 1878710dcacb62c9a6a53427bcc17a79b5251b9e
Merge: 99d7b1ec3b b841a080dd
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon May 12 19:21:07 2014 +0200

    Merge pull request #762 from crate/l/forward-port-report-errors
    
    forward port: improve error handling for AWS s3.

commit b841a080dd2e55deea7b3a5eaf817452c14459eb
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon May 12 19:11:06 2014 +0200

    forward port: improve error handling for AWS s3.

commit 99d7b1ec3b0752ba1383758e79198691db674917
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon May 12 16:31:13 2014 +0200

    improve error handling for AWS s3.
    
    Conflicts:
            CHANGES.txt

commit de11a33fa5511e2fe0ef5fcd0f3946bed5662910
Author: Sebastian Utz <su@rtme.net>
Date:   Fri May 9 16:12:19 2014 +0200

    update CHANGES

commit 9d9e2696621acbfdcabdc02779a75ba41caf76d4
Author: Sebastian Utz <su@rtme.net>
Date:   Fri May 9 15:04:36 2014 +0200

    prepare release 0.37.1

commit 29eda864d02037aaf7c1a589bd221f31d56ad44d
Author: Sebastian Utz <su@rtme.net>
Date:   Fri May 9 14:51:45 2014 +0200

    fix: raise an error if same column is defined more than once on
         table creation

commit 319984a7307f73bfb2f3e45ef29b485d6a0e4aa7
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu May 8 17:48:06 2014 +0200

    prepare release 0.37.0

commit d55d837c565b658b1cbdca366fe20bd7fa35cc39
Merge: c333c30ffc a6f7af3632
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu May 8 15:26:27 2014 +0200

    Merge pull request #750 from crate/b/read-the-docs
    
    read the docs

commit a6f7af3632b3c225b98497c214170f9fa34539e2
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Thu May 8 11:45:07 2014 +0200

    increased version of admin-ui

commit 0fbef4d49c96bb79cda331f8bdeda35b20259868
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Wed May 7 13:40:38 2014 +0200

    added sql syntax highlighting to docs
    
    Conflicts:
            docs/sql/aggregation.txt
            docs/sql/reference/select.txt
            docs/sql/reference/update.txt

commit 26d006060e939f33a3ebfb85e1111ea457937af2
Author: Philipp Bogensberger <philipp@crate.io>
Date:   Mon May 5 11:59:20 2014 +0200

    changed documentation so it can be built by readthedocs

commit c333c30ffca287f4bc87047edf67736716c59dba
Author: Sebastian Utz <su@rtme.net>
Date:   Wed May 7 17:45:33 2014 +0200

    refactored exceptions, only SQLActionException is raised outwards

commit c2083cdf8e81e341d41d02479c312375657738a6
Merge: 61d251f1dd f2aecfd05f
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu May 8 10:22:00 2014 +0200

    Merge pull request #751 from crate/m/object_arrays
    
    fixed ANY and comparison on object array fields

commit f2aecfd05f4eaa61b1b32841a025c75cc3d43b37
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu May 8 10:17:00 2014 +0200

    fixed ANY and comparison on object array fields

commit 61d251f1dd45f5d2af1619eb3fca872e5b9fcced
Merge: e9fbc2b7aa 0068b38e14
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed May 7 18:36:42 2014 +0200

    Merge branch 'master' of github.com:crate/crate

commit 0068b38e1430f65566dd4d25f8f750a583b50e37
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 7 18:33:38 2014 +0200

    remove unused code from EvaluatingNormalizer

commit e9fbc2b7aab9bdf8fa0f10cf901724fbb4808d3b
Merge: e0d25b0770 e11e99a1e7
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed May 7 15:15:38 2014 +0200

    Merge branch '0.36'
    
    Conflicts:
            CHANGES.txt
            core/src/main/java/io/crate/Version.java
            sql/src/test/java/io/crate/analyze/SelectAnalyzerTest.java

commit e11e99a1e71eec58098a4605ed67fcd2af430592
Merge: 1c55275342 39b0959afe
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed May 7 15:02:30 2014 +0200

    Merge pull request #747 from crate/m/HOTFIX_transport_serialization
    
    M/hotfix transport serialization

commit 39b0959afe00a0bc1aa76c1f1c409d0dca1aff44
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed May 7 14:11:38 2014 +0200

    prepare release 0.36.4

commit d61919a4b7a18dbc9ac43a08a292ef3811aa7b74
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed May 7 14:08:30 2014 +0200

    forbid order by on compound types

commit 57b6b8fdadc269e17ae97789362fc33e57bca3d4
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed May 7 14:07:59 2014 +0200

    fix transport serialization of sets

commit e0d25b0770bc9a85ce77cba9a01d13102ed577f2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed May 7 09:52:44 2014 +0200

    remove unused ColumnProjection

commit 425d288c4307256c2faf23d3c6a22837338b0eb9
Merge: 5d051620f4 ae5e0db0c4
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed May 7 09:00:31 2014 +0200

    Merge pull request #744 from crate/m/debug_output
    
    increase debug output

commit ae5e0db0c4701cc137cc33d4d17cd7976d292f05
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed May 7 08:56:38 2014 +0200

    increase debug output

commit 5d051620f4e3ff6859169a85430876fdfa0e24a2
Merge: 1408c2dc22 21affa3816
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue May 6 16:47:01 2014 +0200

    Merge pull request #740 from crate/l/table-alias
    
    add support for tables aliases in SELECT, UPDATE, and DELETE clauses.

commit 21affa3816ebcba2406396b43404493de15aa496
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon May 5 16:10:08 2014 +0200

    add support for tables aliases in SELECT, UPDATE, and DELETE clauses.

commit 1408c2dc22505d50a25debe5fdd6c85509443c78
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue May 6 09:27:54 2014 +0200

    remove IndexMetaDataExtractor
    
    was only used in tests but not anywhere else.

commit 7a1ac9301379b6ff136965b866abcd388765eeff
Merge: 1c55275342 af808504ce
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon May 5 16:07:47 2014 +0200

    Merge pull request #739 from crate/array_contains
    
    Array contains

commit af808504ce7fcc21e679a39c29d2b50f0ba766ea
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon May 5 14:54:00 2014 +0200

    renamed ANY aggregation function to ARBITRARY
    
    and ANY_OF/SOME_OF operators to ANY/SOME

commit 630e2880c6ffc3bb780c7587ea835694e5210861
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Apr 30 08:38:30 2014 +0200

    changed operators to ANY_OF/SOME_OF to avoid ambiguities

commit b4e40c8e23659a1a6d3a66c288b651b810d6680b
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Apr 28 17:36:33 2014 +0200

    implemented ANY array containment operator

commit 26635f9e516f25c4adf245b53599a5e595c76558
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Apr 25 11:07:46 2014 +0200

    increase version for feature branch

commit 902a37d5359f2f2d03f406e8f3e582c55639d177
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Apr 29 12:36:41 2014 +0200

    documentation for the ANY operator

commit a8d1b07f4974ba0d2900a120b472fbb03814e064
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Apr 25 12:23:13 2014 +0200

    implemented parser support for ANY/ALL array comparisons

commit c2068239e7fd6f73995825c64adb8b644407d5b6
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Apr 25 11:07:46 2014 +0200

    increase version for feature branch

commit 1c552753428fe7daea4cc111f1b01026ecbb4717
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 5 11:59:23 2014 +0200

    prepare release 0.36.3

commit e113e7a1b317d69dc6072eed66a1ce799bb10915
Merge: c9553de0b0 63b60253ae
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon May 5 11:52:17 2014 +0200

    Merge pull request #737 from crate/m/HOTFIX_date_ranges
    
    M/hotfix date ranges

commit 63b60253aeebdaa0152f64b85e00aeeaa3249cf3
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon May 5 11:44:30 2014 +0200

    updated CHANGES

commit 1549919ef2d53f305cbd64517a00ed3f3c5b24fa
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon May 5 11:24:07 2014 +0200

    added regression test

commit 26984e2098b9ab26f5c8228e562fb2978726087b
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon May 5 11:23:58 2014 +0200

    update ES upstream to v1.1.1 + bugfix-commits

commit c9553de0b08d69036a063b2ff542136380f6cbab
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon May 5 10:58:24 2014 +0200

    remove inout from settings.gradle
    
    inout was removed with 75d2cd87837f6fe4cbfe5646038150a5c6165012

commit 83dac809b34ad8f5ac45cbb15a067fa00e67781c
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon May 5 10:55:50 2014 +0200

    removed mentioned maven repo from java client docs

commit dc85e9076bfaa34b3075279a2d0c6917d5095615
Merge: f2de5663c0 f843128338
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Apr 30 14:21:22 2014 +0200

    Merge branch '0.35'
    
    Conflicts:
            CHANGES.txt
            app/build.gradle
            core/src/main/java/io/crate/Version.java
            sql/src/test/java/io/crate/executor/transport/TransportExecutorTest.java
            sql/src/test/java/io/crate/integrationtests/TransportSQLActionTest.java

commit f8431283389784cd18caa5e4548fd41c1fb28557
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Apr 30 12:54:22 2014 +0200

    prepare release 0.35.8

commit 64390915e9f7d2129f4c8b77391ea0fc22e0d26a
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Apr 30 12:53:52 2014 +0200

    upgrade crate-admin to 0.5.3

commit f2de5663c08f9fa10019bcc20e68e008a3a8f71f
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Apr 24 14:32:20 2014 +0200

    prepare release 0.36.2
    
    (cherry picked from commit 3b8bf5400ee4abe6870460d2eb136a16b99f07d6)
    
    the 0.36.1 version tag was already used but never merged
    into master.
    
    Conflicts:
            CHANGES.txt
            core/src/main/java/io/crate/Version.java

commit 5625519d97f73353980756fb979cc4fb0e3afeb2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 29 17:32:41 2014 +0200

    prepare release 0.36.1

commit f35d625a1929833e629eb6604c826545805e60b5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 29 17:23:38 2014 +0200

    update crate-admin to 0.6.3

commit 7d8f7b9df9a1d1c9708eec5b26d0b79f7d60e935
Merge: 6d85372ffe ceead9445d
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Apr 29 14:51:38 2014 +0200

    Merge pull request #726 from crate/hau/sysNodesVersion
    
    implemented version on sys.nodes

commit ceead9445d2010bf42b99b99e93db6a569e1681a
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Mon Apr 28 15:56:15 2014 +0200

    implemented version in sys.nodes

commit 6d85372ffe214b6d581ebed8a82f7c1dfafd6076
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 28 18:20:17 2014 +0200

    replace udc integration test with a unittest

commit ee1dd0ec6fd79aa0167f51ac8dc1c38946a18a96
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 29 10:55:36 2014 +0200

    fix: made the version check on updates atomic
    
    (cherry picked from commit 95266f7a08066d1afeda17611bc3dfa011f30d20)

commit 95266f7a08066d1afeda17611bc3dfa011f30d20
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 29 10:55:36 2014 +0200

    fix: made the version check on updates atomic

commit fae8f7bddff02fe7cbe4cb72381b9eba2c712b71
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 28 15:46:44 2014 +0200

    document that crash can't insert objects

commit 80d9e98b7b838dda02741f6154e991091b25d743
Merge: 3f32ee2dcb 658365b9c2
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Apr 24 14:14:45 2014 +0200

    Merge branch '0.35'
    
    Conflicts:
            CHANGES.txt
            core/src/main/java/io/crate/Version.java
            sql/src/test/java/io/crate/analyze/SelectAnalyzerTest.java

commit 658365b9c248124aa117462157cb27e0ee236a43
Merge: 31febd0c77 a1c14fac43
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Apr 24 11:45:18 2014 +0200

    Merge pull request #716 from crate/m/hotfix_arithmetic_npe
    
    HOTFIX: throw exception on unsupported expressions

commit a1c14fac4360d63960a2f9b9b4e00a7c43e6cc68
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Apr 24 11:45:01 2014 +0200

    prepare release 0.35.7

commit d92af7a1390c8e7e60fe7630e7611a2810308b48
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Apr 24 11:44:40 2014 +0200

    HOTFIX: throw exception on unsupported expressions
    
    throw UnsupportedFeatureException during analysis when using expressions that are parsed successfully but not supported

commit 3f32ee2dcb968323775ee25ea980a912053ca2fb
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Apr 22 17:39:04 2014 +0200

    prepare release 0.36.0

commit 47b38b8fd27fb74e73deab56ac0c4d5046e65a14
Merge: 4cec986b99 34ce164a78
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Apr 22 17:29:17 2014 +0200

    Merge pull request #714 from crate/l/cleanup-versions
    
    clean up Versions

commit 34ce164a788a23b6c41afc9434cb823b15892a05
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Apr 22 17:26:33 2014 +0200

    clean up Versions

commit 4cec986b997e82aa3ff2ecb1fd72ed0daf470a9f
Merge: 7e24359702 6eef2633d9
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Apr 22 17:16:21 2014 +0200

    Merge pull request #713 from crate/l/update-versions
    
    L/update versions

commit 6eef2633d9786787c42e97cf5ee169d6d05a9fdc
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Apr 22 17:11:23 2014 +0200

    updated crash to 0.9.0

commit 83708309402bcec5a0f627dfcdc3f663daf617bf
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Apr 22 17:09:58 2014 +0200

    updated crate-admin to 0.6.1

commit 7e243597027879d872f1247df8565cae41d90b8a
Merge: c3064c2810 75d2cd8783
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Apr 22 15:48:07 2014 +0200

    Merge branch 'master' of github.com:crate/crate

commit c3064c2810aff7cf5429fcc510906156c42d6052
Merge: c2eedf2461 31febd0c77
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Apr 22 15:47:48 2014 +0200

    Merge tag '0.35.6'
    
    Tag release for revision 0.35.6
    
    Conflicts:
            CHANGES.txt
            core/src/main/java/io/crate/Version.java
            sql/src/main/java/io/crate/operation/reference/sys/shard/unassigned/UnassignedShardsReferenceResolver.java
            sql/src/test/java/io/crate/integrationtests/TransportSQLActionSingleNodeTest.java

commit 75d2cd87837f6fe4cbfe5646038150a5c6165012
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 22 15:31:57 2014 +0200

    remove the inout module
    
    it is no longer in use.

commit 31febd0c77a2e9abe2af05fe18f18be7af5a6913
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Apr 22 13:49:41 2014 +0200

    prepare release 0.35.6

commit 3869e5039fe56aced0790f8e7c2bdf1028252bf7
Merge: 628673a29d d1b511b970
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Apr 22 12:58:11 2014 +0200

    Merge pull request #711 from crate/l/add-routing-col-example
    
    added routing column example using compound primary keys

commit d1b511b970251c7598e09da4413b27c63a763732
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 22 11:37:06 2014 +0200

    added routing column example using compound primary keys

commit c2eedf24618da029abe3ed407111a10fcf0d0372
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 22 11:37:06 2014 +0200

    added routing column example using compound primary keys

commit 8a0e9dc6c31959c705609d776e534d977569034c
Author: Sebastian Utz <su@rtme.net>
Date:   Sat Apr 19 12:16:00 2014 +0200

    added dependencies to the jar task of the client package

commit bf989aaa27ea9360adcd78f02bb6e1eefc554624
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 18 22:16:54 2014 +0200

    remove unused code
    
    copy from is no longer executed using the ImportTask but
    instead it uses the RemoteCollectTask.

commit 628673a29df5fbc157cfa17ee94fd4dea12224f2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 18 11:47:47 2014 +0200

    fix: add sys.nodes and sys.cluster expressions to UnassignedShardsReferenceResolver
    
    this way a query like  select sys.nodes.name, * from sys.shards
    also works if there are unassigned shards.

commit 44997c0651fb6247f8e1a1e29543c7123e9ea8ac
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 18 11:47:47 2014 +0200

    fix: add sys.nodes and sys.cluster expressions to UnassignedShardsReferenceResolver
    
    this way a query like  select sys.nodes.name, * from sys.shards
    also works if there are unassigned shards.

commit c3b234d8822b2682b8197b78a2c9669212221d9b
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Apr 16 21:43:59 2014 +0200

    nested roundtrip test

commit 3188280e7779ff28125908ab348224605361d9b0
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Apr 17 09:57:14 2014 +0200

    pinned commons-codec:1.9 at ES subpackage, solves threading issues at Base32

commit a2940c932197ee199b90fad5dd4dd875f5d73d0e
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Apr 17 00:41:54 2014 +0200

    update crate-admin to 0.6.0

commit 54f226490972249f33a8172dfb81b162ae770990
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Apr 17 00:35:44 2014 +0200

    fix changes in LuceneDocLevelReferenceResolver

commit 972cddb4d0d95f3c9dbd7585452988b99ea8629b
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Apr 16 23:17:13 2014 +0200

    update changes

commit 412bdd8a1cf5d373bdf4e8db442772f05f8a0619
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Apr 16 23:02:48 2014 +0200

    always encode partition ident using base32 despite of values size
    
    optimised PartitionName in general

commit c9c8c5f7ad8a1297496c2d3afb0d97495a6b9f18
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Apr 9 08:59:28 2014 +0200

    add partitioned table docs

commit 113551d0a79fbd2f3974308717335c4fb6df2771
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Apr 16 15:15:15 2014 +0200

    fixup! fixup! make refresh partition a string to support all possible values

commit 8f220a1a57a7acc7ef53eef1747973e43f97b8c6
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Apr 16 14:52:00 2014 +0200

    fixup! make refresh partition a string to support all possible values

commit 34e9369289601c2075f817f10790cc67f1b62d5e
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Apr 16 14:45:06 2014 +0200

    make refresh partition a string to support all possible values

commit 48b2e9f2e1909d35ecd1a9b9de8a20f138bb9dba
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Apr 16 14:07:41 2014 +0200

    fix alter table on partitioned tables

commit 2048032e4b3d06a0445ba01926b2d94ed09c9b39
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 15 20:15:50 2014 +0200

    filter out partitions at information_schema

commit 24617408badcdabee861abfdaba91b022ea29f05
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Apr 15 19:53:32 2014 +0200

    optimize table_name and partition_ident handling in unassigend shards for partitioned tables

commit 826b4b2eb4cfee1c876a4c678eaaffbe50b7e8be
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Apr 15 19:22:02 2014 +0200

    fix partition_ident for unassigned shards

commit 35ce9f4bb4c3c88f2d14c265b9ae721e3cd5c866
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Apr 15 17:22:06 2014 +0200

    elect primary or secondary shard for unassigned shards

commit 79c879579e463bc3c62534da6ecbe42d82479b59
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Apr 15 17:41:27 2014 +0200

    implemented refresh on single partitions

commit ab06aaafb67898211e45f650e86c232ebe51252d
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Apr 15 14:31:30 2014 +0200

    support for refreshing all partitions in a partitioned table

commit 9cd777461531dad68b3efc15f1d022d6880bc914
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 15 16:20:49 2014 +0200

    prevent COPY TO using partitioned table (not implemented yet)

commit b2e66f7ae03b020a739da7b2eb9ad2bf82e09523
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 15 16:13:38 2014 +0200

    added `sys.shards.partition_ident` expression

commit 37293278f378050df1f044af0f36f2e672327519
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Apr 8 15:30:18 2014 +0200

    support ESGet with partitioned tables

commit d1328cb9cfe6336929545f4c39810b5d31f9fa60
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Apr 8 15:29:56 2014 +0200

    add LocalMerge to ESSearch to add scalar-function support in result-columns

commit f02d54d9d5f4a9d01ba0fa0a1fa4b00e5fbfc916
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Apr 8 14:51:39 2014 +0200

    replace injector with clientProvider

commit d9d572358d0312257d18f56c0bc3a5e52fca739b
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Apr 15 14:24:09 2014 +0200

    Fix merge conflicts.

commit 45fed5b321bd1a4f4ef468936b8936bdee07f286
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 8 15:55:19 2014 +0200

    support import into partitioned table

commit 4223067a10202d88b8dca3e8071c4ed865f7153d
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 8 11:28:41 2014 +0200

    define alias at template instead of manual creating index/alias on insert

commit decd546cc4c2857f91a9fcb58e00d19a5d4166e1
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 8 11:29:31 2014 +0200

    added missing CHANGES entry

commit 0516279270676b3460c34a08e96a7cc3adc8bd65
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 8 10:31:59 2014 +0200

    upgraded to ES 1.1.0

commit 2270af09b943f4531f5fa69f827b7ac503591e1f
Author: Lukas Ender <hello@lukasender.at>
Date:   Wed Apr 2 09:17:42 2014 +0200

    added table 'information_schema.table_partitions'

commit eeadc219d77621a8612cdf3af1f92b13f73124d0
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Apr 4 14:51:42 2014 +0200

    support alter of partitioned tables

commit 74ea5e194223a8bc7b2b1544112c521c52249479
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Apr 4 14:50:07 2014 +0200

    fixed tests (add needed mocked binding)

commit 12fb7d17cd5756c955ce8837bb82e8b076538f72
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Apr 3 17:23:11 2014 +0200

    fix dropping empty partitioned tables

commit c20f219d435395af7ff9d1c64a3b6e332c5c6938
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Apr 1 15:32:55 2014 +0200

    added column 'partitioned_by' to table 'information_schema.tables'

commit abfbcb3c4c1cb34f8baca8430325d70c4eaf4c8d
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Apr 3 12:30:05 2014 +0200

    Items of string arrays now get transformed to strings

commit 1941870cb5372cf0e4de6947d0ec0c35cab67ffe
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Apr 2 14:40:43 2014 +0200

    update partition template if partition schema changes
    
    fixed deleteById on partition table

commit 4300774bd5693e85d8e1c42b63b49d0db7d99322
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Apr 2 00:21:34 2014 +0200

    implemented ESSearch on partitioned tables

commit 14df4112317c5fa720f7aae21a3dfba795a8f551
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Apr 2 10:28:33 2014 +0200

    use callbacks when chaining tasks, remove boilerplate

commit a65e45f1982304831de60a32897c9c6183fac437
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Apr 1 22:34:19 2014 +0200

    fix SelectAnalyzerTest

commit bebcd75c43c0f32ff90e9c5f96b838373ee35638
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 1 21:18:59 2014 +0200

    added drop support for partitioned tables

commit 2fe1f64a238f45371b1ace4b6d5f57f8d159f312
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Apr 1 20:35:03 2014 +0200

    nested column partitioned order by tests

commit ea22bf187e69ad960c84f2ddcd5e08cc6b93ffd6
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Apr 1 20:13:53 2014 +0200

    fixup! forbid order by partitioned columns

commit 0f7e3f24a37cb78026a86c9672f953f88088fe2c
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Apr 1 20:02:48 2014 +0200

    forbid order by partitioned columns

commit 11d2835b3c7d075406f8c8542661b0f80eae1811
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Apr 1 13:50:50 2014 +0200

    implemented partitioned by column expressions

commit da434b03cec7381abe9cab88f3728445b89f6d79
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 1 17:20:28 2014 +0200

    support delete on partitioned tables

commit f6cd4f17563daa489980e3d60b6f35f8e3ca9441
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Apr 1 13:53:35 2014 +0200

    support update on partitioned tables

commit 42409a0d3cef1a0355e641c49eddd1fb52e6197a
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 31 23:19:13 2014 +0200

    implemented filter support(where clause) on partitioned columns
    
    also set routing to related partitions only

commit 91bd8e0055c1b39e043fa9e355ec69499f6e48b5
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 31 16:47:04 2014 +0200

    fixed string to timestamp conversion (try long cast first)

commit 2a0fc72a0bfe40fe587af0337d5c8780c4762eb9
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 31 15:57:34 2014 +0200

    fixed DocTableInfo test

commit fe7e83bbc4a959efb0de0240088963f150979628
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 31 14:08:37 2014 +0200

    added partitions to WhereClause

commit dadb0229ef7269fd771052974cccc17f2163a9bb
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 31 11:24:45 2014 +0200

    partitioned-by columns have INDEX granularity instead of DOC
    
    - impl `partitions` function on TableInfo, returns already resolved PartitionName instances

commit c7a38c41a439a5fd1dab2de55163e81ce3c145ae
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Mar 28 14:25:54 2014 +0100

    implemented insert on partitioned tables

commit ebdbc196ef497df48a2d5f144a9f0654852eba18
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Mar 26 18:56:15 2014 +0100

    build DocTableInfo's for partitioned tables using created templates

commit da7140ef2fbc1cef8459faf5fb22f8b2a78e9020
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Mar 27 16:30:03 2014 +0100

    doctableinfo for partitioned tables

commit 2a78cf0c67cf4c4f0065f07eaa326faa7b238d4b
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Mar 27 10:07:33 2014 +0100

    fix partitioned CREATE TABLE to exclude partition columns

commit ba765cd67242954dfd11d3e213e598e5cd37e1d7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 16 12:08:31 2014 +0200

    use sourceLookup for copy to with columns

commit 1a112193c26c78a9570c9566bc4560e657000f05
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 14 15:26:50 2014 +0200

    add support for column selection in COPY TO

commit 03ba5e91d8b72e121640506974e3a432a30874bc
Merge: 1692a0646f aa37882008
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Apr 14 17:44:18 2014 +0200

    Merge remote-tracking branch 'origin/0.35'
    
    Conflicts:
            CHANGES.txt
            core/src/main/java/io/crate/Version.java

commit aa3788200876d9fe25fabe6f4d901c5f791460de
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Apr 14 17:05:08 2014 +0200

    prepare release 0.35.5

commit 178414f572ac9d9835f52ffb47454fd2b30b418c
Merge: 2572a94dfa d0c245dca3
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Apr 14 16:59:52 2014 +0200

    Merge pull request #689 from crate/l/upgrade-admin-ui
    
    updated crate-admin to 0.5.2

commit d0c245dca38ed95a666ff409f6a5d8259cca9a77
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Apr 14 16:36:09 2014 +0200

    updated crate-admin to 0.5.2

commit 2572a94dfa8cbc35d13f2a3bfcaf1ff96bef9f39
Merge: c63c53b079 5eba83b526
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Apr 14 16:26:41 2014 +0200

    Merge pull request #688 from crate/l/hotfix-clustered-into-0-shards
    
    do not create (blob) tables with num_shards < 1

commit 5eba83b5267c15de91e9f68da483433b2f0796d8
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Apr 14 16:15:18 2014 +0200

    do not create (blob) tables with num_shards < 1

commit c63c53b0794aff508eb0c14fdecbfff7a924d4b1
Merge: eff1f48596 aa53069a24
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Apr 14 15:31:26 2014 +0200

    Merge pull request #687 from crate/l/hotfix-sys-shards-unassigned
    
    fixed collecting unassigned shards.

commit aa53069a24d86b69915ecf59fe7eb38a6b1f04d4
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Apr 14 11:45:09 2014 +0200

    fixed collecting unassigned shards.

commit 1692a0646fdb62c55d0c831ccfff8d75c98dfba1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 8 16:10:43 2014 +0200

    implement COPY <table> TO DIRECTORY

commit eff1f48596f395dd596ea6c93be9afa1aa72e930
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 14 10:59:59 2014 +0200

    update crate-theme to 0.0.15 and cleanup picked versions
    
    Conflicts:
            CHANGES.txt

commit f510d993bc67c8b7a5453341a3806d8348d2d816
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 14 10:59:59 2014 +0200

    update crate-theme to 0.0.15 and cleanup picked versions

commit 3ce8e7d4e3f6e725ee7c6a13d8fffd63b09255a2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 7 14:50:33 2014 +0200

    add s3 output for COPY TO

commit 646c3d7abc12ca2db34ec5b2a148deebb1f84782
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Apr 11 15:03:56 2014 +0200

    use HTTPS url for ES submodule

commit ca0f2bf6652760f08db63da06b7d2527e2918ed8
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Apr 11 14:29:05 2014 +0200

    added sys.nodes.heap expression

commit f4ea2b79e1879adc3d996118176ea164a00afcd6
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Apr 11 12:55:43 2014 +0200

    added travis config

commit 44ce43561a6c4c18543327d28607ec7bc14cc235
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 10 15:17:55 2014 +0200

    prepare release 0.35.4

commit 717026fb134f78043ade87eafd8394e821aa0a61
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 10 13:51:40 2014 +0200

    fix serialization error with count(distinct long_col)

commit f9cd3ca709cb34fb24e25053ddce6f34347bcb27
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Apr 10 12:17:13 2014 +0200

    fix NPE that could occur using COPY FROM

commit bc95a81416dbbc37c545c5cde1c5495e8debe4c0
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Apr 8 23:18:12 2014 +0200

    prepare release 0.35.3

commit 390acea63a5a6c36d52499a1f7138683250eeafb
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Apr 8 23:08:45 2014 +0200

    downgraded crate-theme to 0.13

commit e65cc173b8d78415a43561af2610635fab592d19
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Apr 8 21:47:22 2014 +0200

    prepare release 0.35.2

commit 3197d104081ca575cac5a1c0f6199ca78ffe3623
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Apr 8 21:30:37 2014 +0200

    updated crate-admin
    nailed new python package versions for itest

commit d2091da189f65d3907eb8d3c65bbbe62b7a67dca
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Apr 8 17:27:41 2014 +0200

    prepare release 0.5.1

commit a053230aabfc8779b1b48e8b685fd09e4519737f
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Apr 8 17:17:44 2014 +0200

    upgraded admin ui

commit 569e99459a38b2630a84a29fc127ecdf26f3cc0a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 8 11:33:39 2014 +0200

    fix settings serialization in the WriterProjection

commit cf7efd9eeddd484b515480005534467999b4c0f6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 8 09:12:59 2014 +0200

    fix NullPointerException in OutputFile
    
    the NPE hided other errors that occured in open() (like
    FileNotFoundExceptions)

commit ba4cb0ed6d8ad576bdaa2eed91964d6b3015ed7a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 7 16:53:46 2014 +0200

    prepare release 0.35.0

commit a552384adeb6d989a99530bc758ef95898752888
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Apr 7 16:01:07 2014 +0200

    admin-ui fix

commit 2d1805fc13a7bc35cd138cb1bd0ee5b8ebf67090
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 7 16:00:48 2014 +0200

    COPY FROM: ignore AccessDeniedException

commit 8acc362de9eb2d2706a257d9853949e652cdac32
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 7 15:25:21 2014 +0200

    allow expressions as uri in COPY FROM statements

commit d4fe1f96dae253c5b7e5652e46be7483853196b4
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Apr 7 15:11:38 2014 +0200

    streamline changes

commit a5b19f95c8f73759aed8c4732a4bd51e0d3250db
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Apr 7 14:32:57 2014 +0200

    upgrade crate-theme to most current version

commit 32b3ac0521b56a2af310725b355c3dfba752b182
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 7 13:55:58 2014 +0200

    docs: fix copy_from reference

commit a40fc7db18c74ce0738e0dd02e4fe249a56a0b3c
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Apr 7 13:42:50 2014 +0200

    updated crate-admin to 0.4.2

commit 3fd42ee7f22022a20a56aad2a15a1533697bd325
Merge: d7db1d298b 619d24786e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 7 12:41:28 2014 +0200

    Merge pull request #671 from crate/copy
    
    add S3 support and more options to COPY FROM

commit 619d24786e22f8b84903395807d2980a71c615be
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 7 12:29:54 2014 +0200

    use HTTP for the S3 connection
    
    using HTTPS results in SSLPeerUnverifiedException.

commit 823a01faef3c1a44a3d75012075d7c8f15c46648
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 7 11:42:07 2014 +0200

    fix prefix handling in S3FileInput

commit ac6a23daa48d5a91436db859baf09edcd93c324d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 7 11:14:27 2014 +0200

    fix copy from shared state issue

commit d472eed7054a7a1b8b7b8378e668340d9e32660f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Apr 7 09:35:25 2014 +0200

    copy from: implement "compression", "shared" and "num_readers" options

commit 01441eed2cf2f16199733adf0dd3ac35c07fdca4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Apr 4 14:32:08 2014 +0200

    update the copy from documentation
    
    this commit already documents options which are not yet
    available but will be added shortly.

commit a1f5e214456175b252bbcff7f3eadf0b8995b2b5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Apr 2 14:27:07 2014 +0200

    extend FileReadingCollector to support reading from s3
    
    note: since number of readers cannot be set yet and the
    "shared module" import functionality is disabled - reading
    from s3 will result in duplicate imported rows if there are
    more then 1 node in the cluster
    
    this also replaces the PCRE support with globbing support

commit d7db1d298b8b79ffbdadc5365d34a94474f04011
Merge: caa88745cf 938adec5bd
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Apr 7 12:26:26 2014 +0200

    Merge branch 'm/multi_hotfix'
    
    Conflicts:
            CHANGES.txt
            core/src/main/java/io/crate/Version.java
            docs/sql/ddl.txt
            sql/src/test/java/io/crate/analyze/BaseAnalyzerTest.java

commit 938adec5bdf0ca5057c5487ffc40384fabeadafa
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Apr 4 19:05:09 2014 +0200

    prepare hotfix release 0.34.1

commit f40b207255017c84e4c6b972ba6bed6432a5bdb0
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Apr 7 10:54:14 2014 +0200

    do not display internal blob table names in sys.shards.table_name

commit 471228c6b001b888b4d70285653bf57f860f54b9
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Apr 4 19:03:30 2014 +0200

    detect nested primary key and clustered by values in insert analysis

commit fdf0668a94bb1474672635d101226864af799336
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Apr 4 14:38:12 2014 +0200

    fix ping_counters in udc

commit 33dc8bf9209f3dfb963dc31ad4b73538fcc912de
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Apr 4 12:25:35 2014 +0200

    remove partitioned table documentation

commit 569cf51182b50a5e6098e4c45c22c6f87ee93983
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Apr 4 12:07:27 2014 +0200

    updated bundled crash to 0.8.3

commit caa88745cf85f52302ffb5990f47d9dbd31b01ac
Merge: c53ea96a01 6a764d3d6b
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Apr 7 09:03:26 2014 +0200

    Merge pull request #665 from crate/dobe/snapreleases
    
    Dobe/snapreleases

commit 6a764d3d6b6431b55c2bf31db6c6bab3163c1fc3
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Apr 7 09:01:40 2014 +0200

    be more descriptive in release task docs

commit 76fb3c30d16ecc5255d6c2c2828e819f53dc1b28
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Apr 4 14:18:23 2014 +0200

    fixed link
    ignore eggs directory in sphinx

commit 0b3677fd90e24c013c87ae71110fc18e7257090e
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Apr 4 14:10:34 2014 +0200

    less verbose sphinx build

commit 93b60efcd6402f979fdfdd6f5df427982d21af97
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Apr 4 12:22:39 2014 +0200

    allow for snapshot releases

commit c53ea96a011e4b0a352584bdd04f1398958efea7
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Apr 1 22:14:57 2014 +0200

    fixed export test by adapting to affected row result

commit ad8abf090092b7069fd9e96e13e31fded8736a54
Merge: 8555dee80b 51452df57b
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Apr 1 21:47:11 2014 +0200

    Merge pull request #656 from crate/dobe/copytodocs
    
    Dobe/copytodocs

commit 51452df57b585c67928710686bc204547b7168ee
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Apr 1 21:24:50 2014 +0200

    copy to docs

commit 28f744ccd7efef6b76dcfea25022e6a9b35f607f
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Apr 1 20:39:13 2014 +0200

    only return affected rows for copy to

commit 8555dee80b0b4d4bacb8524c1019750e48261781
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 1 20:52:53 2014 +0200

    fix NPE in copy from if table has no explicit primary key

commit 196670bd2ed405b8f9c2bbc31337524d99236614
Merge: bac9914ca6 d60400274b
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Apr 1 20:23:48 2014 +0200

    Merge pull request #628 from crate/m/crate_max_mem
    
    do not limit java max heap size to 1g by default

commit bac9914ca69a47677d2af0faf4a00e7384928804
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 1 20:04:52 2014 +0200

    add options support to copy from

commit 5ec3c8c8f1b9405d71c46e7feb5774979901fdfc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 1 13:56:22 2014 +0200

    use collectNode/indexWriterProjector to execute copy from
    
     - removed support for variables in the path. If we want to
       support that functionality it will be added back as
       something like format('%s...', sys.cluster.name)
    
       similar to the copy to statement.
    
     - injecting the Injector is necessary because the Client
       cannot be injected directly because of cyclic guice
       dependencies.

commit a6ac6fdd2cb5227086939a60a1518f87d3223f94
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 1 16:26:09 2014 +0200

    FileReadingCollector: add support for directories and regex

commit 5bfa9f3ae62f3659c2f8d3d8c82701e8d1d0cab7
Merge: 68b57ac051 5f3c850c74
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Apr 1 15:51:49 2014 +0200

    Merge pull request #639 from crate/dobe/writerprojection
    
    wip

commit 5f3c850c7477540120133b03611365cafab5369f
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Mar 27 06:37:02 2014 +0100

    shard level projector fixes
    implemented basic writer projector

commit 68b57ac051b6d3865d6a900b20e38654f79eff18
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Apr 1 14:03:31 2014 +0200

    extend IndexWriterProjector to send the number of imported rows to its downstream

commit f558b855f30ce264165902cdbb1f33e2ab779697
Merge: 284f649dba 1d9a2aa6ab
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Apr 1 12:32:43 2014 +0200

    Merge pull request #638 from crate/l/refresh-interval-table-settings
    
    added support to set 'refresh_interval' for tables

commit 1d9a2aa6ab45eee8edd439c389fec6887ef253e5
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Mar 31 14:48:38 2014 +0200

    added support to set 'refresh_interval' for tables

commit 284f649dba6e9b5e26c334b3aac2413104f277f0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 26 10:57:56 2014 +0100

    add IndexWriterProjector

commit b7abb020a8420b62a1adbf904340751392fbcce3
Merge: 2ae6e2b91f 72a8b740ad
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Mar 31 17:31:37 2014 +0200

    Merge pull request #641 from crate/m/fix_negative_generic_property
    
    fix negative values in genericProperties

commit 72a8b740adef17326482cace17553987c64b1773
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Mar 31 17:15:25 2014 +0200

    fix negative values in genericProperties

commit 2ae6e2b91fa1e6ea1f06d33c2fcafa0cd9752995
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 31 16:42:30 2014 +0200

    fix: AND operator normalization was wrong if one of the arguments is a boolean

commit 9a778466f2c0cdcee4b16e828321bb8120b33a9a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 27 11:17:04 2014 +0100

    change the Projector interfaces to support long running tasks
    
    the intermediate projectors now no longer have to support
    "gathering" rows but only have to pass them to a downstream.
    
    the last projector of a chain is now a "ResultProvider"
    which exposes the result as listenableFuture. Due to this
    Projectors can do network io without having to block.

commit 167a8c5438ca98caffd23b6ada81f278dd558b50
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 27 14:52:08 2014 +0100

    make projector upstream/downstream connection bi-directional
    
    The goal is to make the projectors interface more async
    friendly and have a listenableFuture as result in the
    ProjectorChain. This commit is a preparation to accomplish
    that.

commit 65a123cfcaa7ad7ecc368e080d9bb8aeeb14168c
Merge: 22d375081d 24f07470ee
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Mar 27 11:08:09 2014 +0100

    Merge pull request #631 from crate/dobe/sourceexpr
    
    _source expression for lucene doc collector

commit 24f07470ee2447b019d97658d38ee2be21de2f82
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Mar 27 11:03:49 2014 +0100

    moved TestingHelpers to testing
    moved some tests to classlifecycle

commit 8e93a2a23c3d5c7f8faf56f0b12d7acd36eff888
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Mar 27 06:36:09 2014 +0100

    _raw expression for lucene doc collector

commit 22d375081d8e8ac1a82c376b96cd389610aedd85
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 27 08:57:43 2014 +0100

    docs: remove note about required quotes for system columns
    
    that is no longer necessary

commit 6f7e4b032634da49449aba8aeb57b1b7dc6b2462
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Mar 26 21:13:01 2014 +0100

    prepare release 0.34.0

commit 03be4d3ac22cc809fe94e756bcfb77aef19ecb26
Merge: 42be74dcae c749730c45
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Mar 26 18:11:10 2014 +0100

    Merge pull request #629 from crate/m/npe_index_definition
    
    allow index definition and primary key constraint to occur anywhere

commit c749730c45d0c6c1afc382967483aebedff80e05
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Mar 26 18:02:26 2014 +0100

    fixup! allow index definition and primary key constraint to occur anywhere

commit 6efb33db4b171874df23d00371511b255bc360e3
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Mar 26 17:44:48 2014 +0100

    allow index definition and primary key constraint to occur anywhere
    
    in table element list

commit d60400274bebc85c9e8526657de8ee1e4fecbc3e
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Mar 26 16:48:33 2014 +0100

    do not limit java max heap size to 1g by default

commit 42be74dcaed27f570c9a32fbdeca7f1da33ac193
Merge: 18e21c77fc 5f6b621bd0
Author: Lukas Ender <hello@lukasender.at>
Date:   Wed Mar 26 15:47:36 2014 +0100

    Merge pull request #619 from crate/l/fix-where-boolcolumnref
    
    fix: in where clause of select statements:

commit 18e21c77fc8f2f82195b7f184cef96bf6dbd8864
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 25 19:29:08 2014 +0100

    add FileUriCollectOperation and FileReadingCollector
    
    (preparation for copy from using sql modules infrastructure)

commit 5f6b621bd0ca69e6db3b70d79836fa57b72c0dd2
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Mar 25 16:18:48 2014 +0100

    fix: in where clause of select statements:
    it is now possible to query 'select * from foo where booleanCol'
    where 'booleanCol' is a column with value type boolean.

commit 940336b79fa01fdd64657f26b089439926933af2
Merge: ad0dca49d0 6c1e0ef118
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Mar 26 15:15:01 2014 +0100

    Merge pull request #627 from crate/m/order_by_fix
    
    fix issue #622

commit 6c1e0ef118f9668fd1882797ffefd4f6f0935842
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Mar 26 14:40:29 2014 +0100

    fix issue #622

commit ad0dca49d04090bc308363ae7a89dffdfec628ed
Merge: 6d897e814a 3b1953702b
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Mar 26 14:37:31 2014 +0100

    Merge pull request #626 from crate/s/partition-name_null_fix
    
    fixed serialization of null values at partition name

commit 3b1953702b9290e93e8cc29d204f7d98660e3b35
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Mar 26 10:39:15 2014 +0100

    fixed serialization of null values at partition name
    
    minor: refactored Id class

commit 6d897e814a0891b08c5331f0e325ff742cdc29bb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 26 14:15:18 2014 +0100

    add copyright profile to idea task

commit 5cee323aeed36ee8f4fc3d3f9343609c31060ad8
Merge: 6bda1c965c db0d78f3ae
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Mar 26 13:00:21 2014 +0100

    Merge pull request #624 from crate/m/create_partitioned_table
    
    create partitioned table

commit db0d78f3ae7958e79d5f3dd51abff7d3543afa81
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Mar 26 10:01:30 2014 +0100

    implemented CREATE TABLE (...) PARTITIONED BY (...)

commit dfbf2cb9154cf4694e7ca4ab1ebd98353da0b7c6
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Mar 25 14:12:12 2014 +0100

    use Locale.ENGLISH in String.format()

commit 4a101ca87e346fd5fb126f9f860efeb1e52c993f
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Mar 25 09:45:29 2014 +0100

    make copy to accept subscripts as well

commit 6bda1c965c6d3ac9b4cba39931e7a69b5eeb1acf
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Mar 25 16:28:28 2014 +0100

    added PartitionName impl
    
    used to create partition table names of partitioned tables and vice versa

commit 495b09f76cdb894d3f6abf6bf82438ffb3b2787a
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Wed Mar 26 06:42:56 2014 +0100

    grammar

commit acea35ab0d76c243bdb5b1403d37579ea186b6f9
Author: Christian Haudum <christian.haudum@gmail.com>
Date:   Tue Mar 25 16:45:05 2014 +0100

    Added semicolons to crash commands in docs

commit 4c1a4dc8060fe751f22ae22fe2b137bdb7785abf
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Mar 25 15:08:08 2014 +0100

    added tests to validate forbidden SysExpressions in functions

commit 81fcf32a9abed790795f80e5ac7e8fc8a7f1f155
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Mar 25 15:26:17 2014 +0100

    upgrade crash standalone to 0.8.1

commit e7c5ca793d96bd6c1fd09d97008c60cefe7213e5
Merge: 5bedeb5ef6 382273b3a6
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Mar 25 12:26:58 2014 +0100

    Merge pull request #617 from crate/l/remove-is-indices-from-docs
    
    remove documentation for information_schema.indices

commit 382273b3a66e81444f8177b377fab1ad600725d0
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Mar 25 12:23:59 2014 +0100

    remove documentation for information_schema.indices

commit 5bedeb5ef614d3e553a6ec9157decc3b1d24853d
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Mar 25 12:13:25 2014 +0100

    fix: unassigned shards must return NULL by default for the `primary` column

commit e7404a65abf6f056ad5a1750fb4c07705ffabbeb
Merge: 05fc227d8a c786147804
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Mar 25 12:11:44 2014 +0100

    Merge pull request #591 from crate/l/is-routines
    
    L/is routines

commit c7861478040f90099b3bdf76e7af28e1af216897
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Mar 11 18:19:19 2014 +0100

    implement information_schema.routines

commit 05fc227d8ad34f03d3d9b66d77d1701b95bd0450
Merge: 2080c32f57 8c079297be
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Mar 24 21:22:32 2014 +0100

    Merge pull request #615 from crate/l/remove-return-type-symbol-formatter
    
    L/remove return type symbol formatter

commit 8c079297bebaf03dae1a66bf01f271e8b2c43530
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Mar 24 18:22:37 2014 +0100

    'return type' will no longer be used in the SymbolFormatter for functions and aggregates

commit 2080c32f576779e64151c9572521bd6213bc78a8
Merge: d763d97233 3ab5c021a6
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Mar 24 18:14:34 2014 +0100

    Merge pull request #599 from crate/l/global-distinct
    
    add global distinct support

commit 3ab5c021a65288d4d6c730df331a0a80bc2b6530
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Mar 21 09:05:48 2014 +0100

    add global distinct support

commit d763d97233d2467a3e8195eeadb0ea46c4dab2c8
Merge: df6177520d 7f1f139bb2
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Mar 24 16:50:09 2014 +0100

    Merge pull request #614 from crate/m/partitioned_by_parser
    
    PARTITIONED BY parser support

commit 7f1f139bb2b38926166ea6f6a262954556754dcd
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Mar 24 16:38:30 2014 +0100

    PARTITIONED BY parser support

commit df6177520d9467737bda5fdee533328e1c4c03a0
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 24 15:23:41 2014 +0100

    fix: prevent select or filter of system columns if executed via es

commit 4bc8d319e937021b22ab0a80ecd7f04d9ea853b0
Merge: 6a90dbbba3 a9d3ebb845
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Mar 24 15:43:13 2014 +0100

    Merge pull request #611 from crate/l/fix-global-aggregates
    
    fix global 'group by' analysis

commit a9d3ebb8457acec054b2d52a986e25fb3ec797b5
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Mar 24 10:40:09 2014 +0100

    fix global 'group by' analysis

commit 6a90dbbba3d16d3e4fdd47ec851088ac8b2b1897
Merge: 470521d103 80ab4c760a
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Mar 24 15:02:40 2014 +0100

    Merge pull request #612 from crate/l/fix-itest-transportsqlaction
    
    use global cluster scope in TransportSQLAction test to prevent a faulty ...

commit 80ab4c760a1f2c5647d08385dfe4ac9b6a8fb68e
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Mar 24 14:59:31 2014 +0100

    use global cluster scope in TransportSQLAction test to prevent a faulty behaviour on some machines.

commit 470521d1032bf3880beace562ff75980fcc0ec77
Merge: 1a232fb599 7c5bff7584
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Mar 24 14:47:29 2014 +0100

    Merge pull request #610 from crate/m/startup_scripts
    
    refurbished startup scripts

commit 7c5bff75846fd49295bc7b4ad8a86cd6b175efdb
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Mar 24 14:17:13 2014 +0100

    refurbished startup scripts

commit 1a232fb59911adbd46adb7426865c33a51ff152e
Merge: c5d4eb58c4 45785f3a05
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Mar 24 13:04:04 2014 +0100

    Merge pull request #609 from crate/m/invalid_table_name
    
    forbid '.' in table names

commit 45785f3a053ddc66f9b0b5024603a27fb468543f
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Mar 24 12:37:43 2014 +0100

    forbid '.' in table names

commit c5d4eb58c404b83014a58799a94f7c94bf21e675
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 24 10:48:11 2014 +0100

    parser: support WITH clause in COPY FROM statements

commit fde4a2b848a07a3a3fbaaafbbc012a814f7803eb
Merge: 940f508dff 18220da783
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Mar 24 11:03:46 2014 +0100

    Merge pull request #607 from crate/dobe/shardprojections
    
    prepare for shard level projectors

commit 18220da783a8de2998545eb2256a4efd6878c150
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Mar 20 15:54:57 2014 +0100

    prepare for shard level projectors

commit 940f508dff1e7a7c722a83021825ae4459894e34
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 24 10:50:07 2014 +0100

    prepare release 0.33.0

commit 6ca802385699951439adf881330d1eb88a2f190a
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Mar 24 09:47:58 2014 +0100

    update crash and crate-python to 0.8.0

commit eef3235ff2a702a12532903092955efcf4852744
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Mar 22 00:36:16 2014 +0100

    further test run speed improvements

commit 88669f64b8204cd4b4f59d3a14c503872f4a5a66
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sat Mar 22 07:32:07 2014 +0100

    allow to set number of test forks via gradle CLI

commit e23a387f0e9764fc654aa2f1f948dd8cc118c411
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 21 22:42:24 2014 +0100

    improve integration test execution time
    
    added a new ClassLifecycleIntegrationTest class that will
    keep its state until all test methods of a test class are
    run. This performs a lot better than wiping all
    templates/indices and re-create them for each test method.
    
    currently only some methods from ShardStatsTest have been
    moved to SysShardsTest (saving about 20 secs on a simple
    test)

commit ee2c4ff3081d626648336ae26efb42fc6d6f8821
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 21 22:37:16 2014 +0100

    remove obsolete test

commit af5a700b7a28c53b3d5d270b80ec23bd5622e811
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Mar 21 17:35:35 2014 +0100

    use copy from in itest setup

commit 7a588ea9479df2bbcdde627face67c8f6cafba0d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 21 18:43:37 2014 +0100

    tests: set ClusterScope to GLOBAL where possible

commit 8d9d8f1806f44a4be2711e83db417c0bc416a983
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Mar 21 17:18:55 2014 +0100

    optimize sets of compound primary keys in where clause to multi gets

commit 56a1daebcbcd53f59330a229c9b8c756250819f6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 21 16:50:33 2014 +0100

    docs buildout: remove unused lovely.buildouthttp extension

commit 8d13aa845779001444c5ffb1d3f18102e4fd1486
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 21 14:19:47 2014 +0100

    parser: add support for copy to

commit 51bf685aa9f9cb214616bf4c2d22ae2b1ab58789
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 21 15:20:08 2014 +0100

    parser: modify INSERT statement to not allow qnames as columns
    
    insert foo (foo.x) is not valid.
    
    this is also a preparation for copy to to be able to reuse
    the columnList declaration.

commit 6002e9294f26036c77cbca9ae293642d495c0f14
Merge: 1f23d17f96 f502b8227f
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Mar 21 15:15:34 2014 +0100

    Merge pull request #598 from crate/s/clustered-by_fixes
    
    fixed tests (were broken by last clustered-by commits)

commit 1f23d17f9614b0ff6d3053aea371b7840b1a4723
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Mar 21 15:04:17 2014 +0100

    update crate admin to 0.3.1

commit f502b8227fef6c6b3dade085884d184ef0957c6b
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Mar 21 13:17:01 2014 +0100

    fixed tests (were broken by last clustered-by commits)
    
    also only apply id if not null (same with routing value)
    added some more tests

commit 9853a316b1b034824c39c11e3098770678b14ba1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 21 11:45:45 2014 +0100

    correct schema creation for nested objects

commit 4d947f55a27b223186a2c8bf4c4954dfaad72033
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 19 18:17:12 2014 +0100

    add format scalar function

commit 52f1e18437a561915db26d14c130106a9f30d043
Merge: dc02e78a46 60c63333db
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Thu Mar 20 21:43:43 2014 +0100

    Merge pull request #579 from crate/jb/correctlinks
    
    corrected links

commit dc02e78a46d02e63b892c4562c7a74d0938c0546
Merge: af55b17a51 05c6eb0f7e
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Thu Mar 20 21:40:00 2014 +0100

    Merge pull request #595 from crate/jb/typo
    
    corrected typos

commit 05c6eb0f7e5d4f4d55f1b8a8a9f2399c983bd88a
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Thu Mar 20 21:35:31 2014 +0100

    corrected typos

commit af55b17a514c2d57042148bc97e646bfe66ad57e
Merge: f8459e51b7 96111401ce
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Mar 20 19:24:14 2014 +0100

    Merge branch 's/multiple-primary-keys'

commit 96111401ce348ec348b397fb1fe35faf089a42f1
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Mar 20 16:45:14 2014 +0100

    support multiple primary key columns

commit f8459e51b7be7735465a44f8d3774b7b1e107a59
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Mar 20 14:39:48 2014 +0100

    updated required java at DEVELOP.rst

commit a2673d69f7e61fab13273de540d02154a83c9811
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 20 11:59:50 2014 +0100

    prepare release 0.32.3
    
    (cherry picked from commit a98a1cecede13ef58cdf350f345ee63e429bf6ff)

commit 02a0c3d014fcc7a2ce990a2c4bc1f53facd886dd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 20 11:25:44 2014 +0100

    fix DocTest setup

commit ad8b269ee4a5a7784554674edb3fbb9c9f33192e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 20 10:56:42 2014 +0100

    inout: deactivate import tests
    
    There are currently some threading/locking issues that need
    to be resolved before the tests can be re-enabled.

commit 080e372983bb94b256f785bc656a65edaaac9e8a
Merge: 91cfeb6d06 a3da123f2f
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Mar 20 10:44:36 2014 +0100

    Merge pull request #592 from crate/s/clusteredby_without_pk
    
    added Id implementation responsible for computing _id

commit 91cfeb6d061510a9b913cd38b43a2ee71730633c
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Mar 19 15:19:28 2014 +0100

    fixed sys.nodes.load when on windows

commit a3da123f2f999caef40ce833113423bace10ca41
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Mar 20 10:40:18 2014 +0100

    Fixup! added Id implementation responsible for computing _id

commit 1c8841ed0a80d779baf4ec7155ff121dae85597e
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Mar 19 21:52:45 2014 +0100

    added Id implementation responsible for computing _id
    
    re-enabled support for clustered-by without primary key

commit ed2a6b7466d4a46fc8766258d7293e5c4a8357f0
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Mar 19 14:53:06 2014 +0100

    crash_standalone must end with .py for windows compatibilty

commit 63070b28ef6f63de23da25484baa259b7850209e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 19 15:07:30 2014 +0100

    inout Importer: fix threading issue
    
    bulksInProgress just indicates if there are pending
    processes but never checked if the Importer has processed
    all lines of the files that are being imported.

commit a69dbac9840c79fc3b11be7a12d2aae51f7f3263
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Mar 19 13:47:28 2014 +0100

    fixed tests

commit 39949ff8bf0f8a3937cdcac57b5870ef8d0fd123
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Mar 19 12:16:05 2014 +0100

    fixed update tests

commit 3ef3cadf033b17fefe9fd26d37365776b69fa055
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Mar 19 12:00:50 2014 +0100

    fix: prevent updating of system, primary key and clustered-by column

commit ad25c392403265f4318913661244ea5e24ef3ae1
Merge: 1575de4f45 0881ca7a14
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Mar 19 11:36:05 2014 +0100

    Merge pull request #587 from crate/s/forbid-clusteredby-without-pk
    
    forbid clustered-by without primary key for now

commit 0881ca7a148b3d0e10211b4941d3dd084147df08
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Mar 19 11:33:12 2014 +0100

    forbid clustered-by without primary key for now (until new _id generation behaviour is clearly implemented)

commit 1575de4f455b68cc6eeff8db468fe6639c4c13d0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 18 17:17:04 2014 +0100

    fix copy from for tables without primary key
    
    _id was always set to an empty string because "pks" is an
    empty list if create table was used to create the table but
    no primary keys have been defined.

commit 61812474e87f28beb1465b1bae3eb797fdd59608
Merge: 0f2d552ef8 7fdcd03395
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 17 12:53:41 2014 +0100

    Merge pull request #583 from crate/s/clusteredby_without_pk
    
    support clustered-by key without primary key constraint

commit 7fdcd03395197aa16a9adcd4f37adcd4e32c5f6d
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Mar 14 23:37:44 2014 +0100

    support clustered-by key without primary key constraint
    
    prepared for multiple primary key contraints

commit 0f2d552ef8fabaae506b10bc845a338032b9ae76
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 17 12:23:37 2014 +0100

    prepare release 0.32.2

commit 8a3c774514ef048356cd947a0b9fbc692895d8d6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 17 12:09:16 2014 +0100

    inout: fix threading issue in Importer
    
    afterBulk of the listener is called from different threads,
    so the failure/success counters need to be thread-safe.

commit f39216d78eddea027f2a229b2b3ca84075bb18a5
Merge: 6609dceaeb 8ece0ab934
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Mar 17 11:58:28 2014 +0100

    Merge pull request #584 from crate/l/log-version
    
    log crate version

commit 8ece0ab934859e021ebaaf0f3940d67a34eeda75
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Mar 17 11:36:24 2014 +0100

    log crate version

commit 6609dceaeb143bb450c281818eccec2d95667526
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Mar 17 11:08:34 2014 +0100

    document supported jvms

commit 1f3c63bfceb36a8c312310579c7bb2ee6ad7a4e6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 17 09:44:47 2014 +0100

    update crate-admin to 0.3.0 and prepare release 0.32.1

commit 043ca882e3db5dfde787811fb27f766f98b6f0a0
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Mar 17 07:04:16 2014 +0100

    prepare release 0.32

commit c934f6a2aa97222b1518a7ffa89702817aac4def
Merge: cebbb3e11f 7f75c483f9
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Mar 17 07:00:16 2014 +0100

    Merge pull request #582 from crate/m/refresh_docs
    
    added refresh docs

commit 7f75c483f93a29fc245a9d572db0a196ee44f4a6
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Mar 14 19:06:45 2014 +0100

    added refresh docs

commit cebbb3e11f27c347d3a102b2fec52f2a320199a6
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Mar 17 06:35:28 2014 +0100

    doc update

commit 6bfad8f46efaf71ceaf1bfa3ad1995ce757148a9
Merge: d0d8d46c1e e29819f406
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Mar 14 18:52:20 2014 +0100

    Merge pull request #581 from crate/m/disable_es_api
    
    disable elasticsearch HTTP REST API and add setting to reenable it

commit e29819f4062f767fcc111c2c48e325e79c8f65f7
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Mar 14 18:03:39 2014 +0100

    disable elasticsearch HTTP REST API and add setting to reenable it

commit d0d8d46c1edfc08ddcdd49c949e5cc4fdbb0a8e0
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Mar 14 16:57:48 2014 +0100

    crash upgrade

commit 843810758b2f6735270faa3a5b9f682b73ec7f8e
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Mar 14 16:17:19 2014 +0100

    upgrade crash

commit 60c63333dbda5be1ff6baa7aab1059dafa0d6c03
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Fri Mar 14 01:05:59 2014 +0100

    corrected links

commit fbc7549ed4d4280d89516b5a93c48fcf1b085c2c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 13 16:28:51 2014 +0100

    prepare release 0.31.0

commit 035a4f67d6af7a373588ee819cbf30e24fa1b54d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 13 16:22:29 2014 +0100

    update crate-admin and sphinx theme settings

commit 499ed71f100f900da0af47bd237e223c7e9fba08
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 13 11:40:11 2014 +0100

    optimize global count aggregates by using a ESCountTask

commit 946287fa026b9574cc778fdd40c19e49b802b434
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 12 18:47:53 2014 +0100

    add support for `ALTER BLOB TABLE`

commit 10aa59a9bcd56678c518b0961f58762a2a70c9ac
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 12 16:49:09 2014 +0100

    parser: add `ALTER BLOB TABLE` support

commit 7ec0ebcf455083d7ea30f64f96bfb1afab379448
Merge: ad8537c66b 567b7b6dc3
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Mar 12 17:51:41 2014 +0100

    Merge pull request #575 from crate/m/crash_build
    
    download crash during build

commit 567b7b6dc3bccb2e51f724fb96ce47f4bc1d8994
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Mar 12 17:18:42 2014 +0100

    download crash during build

commit ad8537c66baa3e9756b4b6f89f32470b3336a9bd
Merge: 4eadba68d5 f4ce8a9526
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Mar 12 16:24:51 2014 +0100

    Merge pull request #573 from crate/dobe/noclientdocs
    
    removed client documentation from server docs

commit f4ce8a95264e943bfecc7bb7fca33ab20fe5ba98
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Mar 12 16:20:56 2014 +0100

    removed client documentation from server docs

commit 4eadba68d574fe78a6603fcbc0c111c4f5758eca
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 12 11:34:21 2014 +0100

    implement alter table

commit 0e712c4f4145f17dc334e4fd84684bfa43cd06ce
Merge: 82f52f2d35 4e117a7213
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Mar 12 15:49:33 2014 +0100

    Merge branch 'master' of github.com:crate/crate

commit 82f52f2d350d5c42dda087ffc169f5209905eb2a
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Mar 12 15:49:23 2014 +0100

    removed missing doc from docs

commit 4e117a7213a4a73ffe2cb80d77f43ccc131a05ef
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Mar 12 15:22:05 2014 +0100

    fix parser test for CREATE ANALYZER command

commit 608abbd1ac353ae5414218958ac2efa8d133015a
Merge: bfe83cc110 9ae2263ef3
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Mar 12 15:19:30 2014 +0100

    Merge pull request #570 from crate/dobe/synopsis
    
    added reference docs

commit 9ae2263ef314c5b1a2919ac4b291f81cdbd3ec49
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Mar 12 11:29:54 2014 +0100

    added reference docs

commit bfe83cc110342358f827222ffbe27c8622d26a62
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Mar 12 14:56:35 2014 +0100

    prepare release 0.30.0

commit f8219e0a00026d2eed8898401934094ba01afbf8
Merge: 4c4cc7183c 24d6089331
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Mar 12 14:00:08 2014 +0100

    Merge pull request #571 from crate/m/create_analyzer_with
    
    streamline WITH usage in CREATE ANALYZER statement

commit 24d6089331977cf6f0cdab4148023ea2bba98774
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Mar 12 12:49:21 2014 +0100

    streamline WITH usage in CREATE ANALYZER statement

commit 4c4cc7183cd22f042652782ee3bcf67b8233062d
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Mar 12 11:47:13 2014 +0100

    fix RefreshAnalyzerTest mock setup

commit a32c240ee7dc56c68a2a5367a9166e61d3c559cd
Merge: 2d866d5790 f92d86a1a6
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Mar 12 11:24:39 2014 +0100

    Merge pull request #568 from crate/m/refresh_impl
    
    implemented refresh sql statement

commit f92d86a1a6839faee7a17b33c73a01c826b36582
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Mar 12 10:01:08 2014 +0100

    implemented refresh sql statement

commit 2d866d579029c89e3191c68a94bb66d5297ec434
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 12 11:14:21 2014 +0100

    parser: add support for ALTER TABLE <table> RESET (property1 [, ...])

commit 8783e943682cdc41db6a939e48395a947ebb54e1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 12 09:56:10 2014 +0100

    parser: add alter table support
    
    (currently limited to properties)

commit 567803a53ac6caaa89adbc88864d210a64ea52a0
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Mar 12 09:19:22 2014 +0100

    prepare release 0.29.0

commit ba76de47361648b974307e3e6c50dc7c4a435f19
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Wed Mar 12 09:11:40 2014 +0100

    improved wording

commit eb5d9380fef2dd5172f002fc030c476a8abb1ebd
Merge: 7336464674 db2cc79fd6
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Mar 11 18:24:35 2014 +0100

    Merge pull request #566 from crate/l/crate-admin-0.2.6
    
    update crate-admin

commit db2cc79fd6d6ddbb6edb77eeb958ddc986023f23
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Mar 11 18:20:35 2014 +0100

    update crate-admin

commit 73364646742368115d3a007a7d1f993a4568a352
Merge: 7f89ad99d3 e56157e694
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 11 17:25:46 2014 +0100

    Merge pull request #565 from crate/j/numreplicas
    
    change number_of_replicas in the information schema to a string

commit e56157e6947fc05f7128c2e088a63ca4bb94c618
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 11 17:17:45 2014 +0100

    update crate-admin to not depend on number_of_replicas being a number

commit 414f34ef701a3b3701ede066660562695195e4a9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 11 16:56:07 2014 +0100

    change number_of_replicas in the information schema to a string
    
    Conflicts:
            sql/src/test/java/io/crate/integrationtests/InformationSchemaTest.java

commit 7f89ad99d303ea9a12798e34c07fc7f988fea991
Merge: f0b5cb46ca 46cd2880c7
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Mar 11 16:54:50 2014 +0100

    Merge pull request #562 from crate/s/blob-finalize
    
    updated blob package for blob tables usage

commit 46cd2880c71a036d164f7687eecc528f2c7f4114
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Mar 11 15:14:13 2014 +0100

    updated blob package for blob tables usage
    
    - changed REST endpoint
    - updated documentation
    - removed REST status endpoint & code

commit 29cf9ff2628821c64ffeda4f7c331c388f113aca
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 11 10:03:33 2014 +0100

    transport & blobIndices: add support for drop blob table

commit f0b5cb46caeba4e32846adf8fc56c5b89ee923ab
Merge: 680f964dbd dc4aaecace
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Mar 11 16:43:46 2014 +0100

    Merge pull request #564 from crate/m/refresh_parser
    
    added parser support for REFRESH TABLE <tableName>

commit dc4aaecacef05a012ee241c9f11f48268e9fa6d5
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Mar 11 16:34:54 2014 +0100

    added parser support for REFRESH TABLE <tableName>

commit 680f964dbd4fbae7dd9916a4b351e63f4f25d5b8
Merge: 37f782082d abd31cd4d5
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Mar 11 16:03:40 2014 +0100

    Merge pull request #563 from crate/m/docs_remove_es_refs
    
    update analyzer docs, configuration docs and remove es refs

commit abd31cd4d5918806e3efcd8f191976c82d2a0bc8
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Mar 11 15:18:31 2014 +0100

    update analyzer docs, configuration docs and remove es refs

commit 37f782082da1fd3e5b472ed0d1c7ab46aa4fcfcd
Merge: 1193f24ad7 fc103fdb46
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Mar 11 11:22:06 2014 +0100

    Merge pull request #561 from crate/m/sys_shards_num_docs
    
    fix error on sys.shards.num_docs when shard is not started

commit fc103fdb4688c17d2175b79e26663ab709275b14
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Mar 11 11:08:23 2014 +0100

    fix error on sys.shards.num_docs when shard is not started

commit 1193f24ad76e1f6ef37f658cd88e6bfdae0bd556
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 11 09:38:26 2014 +0100

    analyzer: add support for DropBlobTable

commit 0a6e38d67afbd2ab09130fbc4d60b97d2b2dd67a
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Mar 11 08:55:30 2014 +0100

    update crate-python and crash.zip.py to 0.4.0

commit e27f905c1e075108dc72d815a5a59ffc846686a7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 10 19:31:36 2014 +0100

    remove duplicate :blob module dependency

commit a08e2293fea4111e6249887515bb113ff4ae53a9
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Mar 10 17:46:08 2014 +0100

    prepare release 0.28.0

commit 1f2e66019fd6941913eec75fde6d9cad4e146d31
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 10 17:33:22 2014 +0100

    fix formatting in CONTRIBUTING

commit d8461e0fda0d433577b74b9227fe43d10c1ae63a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 10 17:18:08 2014 +0100

    Describe git flow in more detail in CONTRIBUTING

commit d64164f2d7752afdd94c8e41dd4bd1017a27c3ff
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Mar 10 17:24:30 2014 +0100

    fix merge issues in ShardStatsTest

commit 7c074704b5e476c6d94a8cbe2571eb663bd325ce
Merge: 99d7f6b6fd a2da900df3
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Mar 10 17:20:58 2014 +0100

    Merge pull request #557 from crate/m/blob_shard_references
    
    blob shard references

commit a2da900df367433f04b42c4dcef316f257fd3777
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Mar 10 16:24:02 2014 +0100

    fix empty list type handling in DataTypeTest

commit 21586119520c10f460ca6949e13be0f62955af45
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Mar 10 16:23:37 2014 +0100

    adapt SysShardExpressions for BlobShards to new BlobSchemaInfo

commit bb46695228acf8c0fbbae85ade18e97245121644
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Mar 10 15:54:40 2014 +0100

    implemented blob shards on sys.shards

commit 99d7f6b6fd1582039d83140b5470495d68888595
Merge: bd9942dc9f 18dd252330
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Mar 10 17:06:24 2014 +0100

    Merge pull request #556 from crate/l/order-by-nulls
    
    fix 'order by' containing null values

commit 18dd252330c4d51112f5cfb430dd4491951b0649
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Mar 10 15:44:44 2014 +0100

    fix 'order by' containing null values

commit bd9942dc9f812355772fe3edf268c111233bb5ea
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Mar 10 16:55:28 2014 +0100

    add `DROP BLOB TABLE` support to the parser

commit fd3e1b6ec3e6e03308805b99657f0bc8c6a9f913
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 7 11:39:09 2014 +0100

    add support for create blob table in the analyzer

commit 9f932e35cbcf5517f17b4fb93e5fdfd44c401978
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 10 16:04:47 2014 +0100

    reverted usage of blobIndicesService.indices() here
    
    can only be done after transition to index prefix is done everywhere

commit 25f7968e35cfdf8ac77f8cdb1f6fc7483b097120
Merge: 4f0e5b7445 9868de63cd
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 10 15:43:40 2014 +0100

    Merge pull request #555 from crate/s/blob-schema
    
    implemented `blob` schema and table info

commit 9868de63cd3d6263584e3bd33c1d98ad80070e15
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 10 12:29:26 2014 +0100

    implemented `blob` schema and table info

commit 4f0e5b74453e721a15f84da140f54688dd84ed03
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Mar 10 13:07:49 2014 +0100

    re-enabled a test

commit 6b9b6bacc8c58d8c60b206a929013a2b17167901
Merge: 5f66799675 bd4c930746
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Mar 10 10:41:01 2014 +0100

    Merge pull request #549 from crate/m/parameter_delay_resolving
    
    delay parameter resolving until type is known

commit bd4c930746a861f48e41375b7c7fb48efdc2701f
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Mar 7 14:44:26 2014 +0100

    delay parameter resolving until type is known

commit 5f66799675c7780e332429d95c618869eda98285
Merge: 6fc9054acb aa880112dc
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Mar 7 16:57:46 2014 +0100

    Merge pull request #547 from crate/s/hello-twitter
    
    added twitter example using crash at hello.txt

commit 6fc9054acb1662abe20d60d40ea10cca617453b6
Merge: a0884cb7ea a8feddd3ce
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Mar 7 16:30:22 2014 +0100

    Merge pull request #554 from crate/l/fix-formatting
    
    L/fix formatting

commit a8feddd3ce26838e538ec741a30036934b21c35a
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Mar 7 16:21:42 2014 +0100

    ensure proper formatting

commit a0884cb7ea5d3035d684bbbdb22d9a067fe51e89
Merge: 82726d3f38 15b6e8916b
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Mar 7 16:14:01 2014 +0100

    Merge pull request #552 from crate/l/crate-admin-0.2.4
    
    updated crate-admin

commit 15b6e8916bbc94f2d7612165cadf74d2c65f0f27
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Mar 6 14:52:34 2014 +0100

    updated crate-admin

commit 82726d3f3808cfcacbb6dd05a7c6d55d7346be75
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 7 15:08:51 2014 +0100

    add documentation for the number_of_replicas `range`

commit 7c336d70651560c7e68897a020b808f25932515b
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Mar 7 14:59:30 2014 +0100

    updated links at readme

commit d958fea8d7663226b09ce226d162eeb717197020
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 7 14:48:43 2014 +0100

    correct sql-parser tests

commit 42b860efd6cac6153c0ba7ef99c1a380687fea56
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Mar 7 14:04:32 2014 +0100

    replace table option REPLICAS with property number_of_replicas

commit aa880112dc5b92976f70244977064d4ebc5aeca7
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Mar 7 11:48:19 2014 +0100

    added twitter example using crash at hello.txt

commit fcef48a8a54795246f4c35c23cb5696fc9483622
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 6 19:51:45 2014 +0100

    add "CREATE BLOB TABLE" support to the sql parser

commit 2bd8b3db933362ce1c2c5c5f17d230d141930d77
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Mar 7 09:29:38 2014 +0100

    prepare release 0.27.0

commit e2f44f5ea55ea20c5f342aeb107312ae30a3f3bb
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Mar 6 17:11:05 2014 +0100

    io.crate.operator refactored to io.crate.operation

commit 0747566ee17c55c35f2172153f9eaf59a09136dd
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Mar 6 16:46:44 2014 +0100

    wiped out io.crate.operator.collector

commit 896100d6af48edf45a3953da849f619a816ec101
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Mar 6 16:40:53 2014 +0100

    sql facet rename to updatefacet

commit f0c928c2b2819877de2cc419d4a5117dfa66e638
Merge: c0b1985920 89b6244456
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Mar 6 16:09:22 2014 +0100

    Merge branch 'master' of github.com:crate/crate

commit c0b19859206a527fa3c0d0adb07294b602ecf81f
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Mar 6 16:07:28 2014 +0100

    removed partialsqlresult interface

commit 89b62444560d4a0900a870dd02f0c3f67a248f26
Merge: 5d5460b0b7 52f9a23379
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Mar 6 16:05:19 2014 +0100

    Merge pull request #545 from crate/j/distributed_merge
    
    improve UnkownUpstreamFailure handling in a distributed merge task

commit 52f9a2337925703e3a1557b7ea4011697ae559e0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 6 16:06:37 2014 +0100

    improve UnkownUpstreamFailure handling in a distributed merge task

commit 5d5460b0b7a3c4b36672c39e582033330194e8d2
Merge: 49225b5f1d ca5f69fa77
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Mar 6 15:57:46 2014 +0100

    Merge branch 'master' of github.com:crate/crate

commit 49225b5f1d04f4f58fdef4eca9d47bf82029e303
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Mar 6 15:57:37 2014 +0100

    cleanup lucene package

commit ca5f69fa77c86ec085e76a5c5bdada2e0ee35795
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 6 15:53:20 2014 +0100

    remove obsolete `index.mapper.map_source` setting.
    
    the setting was evaluated in a patch we added to
    elasticsearch. But that patch isn't needed anymore and has
    been removed.

commit b54a64f975c3800f5289afb475708db2672aa5e9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 6 15:45:19 2014 +0100

    remove the obsolete disable_delete_all_indices setting

commit 6659e424ca68bf835606b2737e7fdb41b65f8cd0
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Mar 6 14:52:42 2014 +0100

    fix number casting on NodeStatsTest

commit d842548c6b5517abe0e3326083ed1cde5240e8e9
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Mar 6 14:41:18 2014 +0100

    fix tests around sys.nodes['mem']

commit b870aa4bc39339a86803718a529f0cc1c7ddf977
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Mar 6 14:24:09 2014 +0100

    fix old state of NodeStatsTest

commit 92ffc54c7d24af83bbbfb8cf8bf03de5c327ddc0
Merge: d91d1c56c7 218df850f5
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Mar 6 14:16:21 2014 +0100

    Merge pull request #505 from crate/m/correct_mem_stats
    
    fix sys.nodes.mem numbers to give correct results/percentages

commit 218df850f597a1f8ab96706437f5ed721a486713
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Feb 26 15:40:43 2014 +0100

    fix sys.nodes.mem numbers to give correct results/percentages

commit d91d1c56c702b1cffc1933514e7cb7dc738731e1
Merge: 4a028ec26f 1324457062
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Mar 6 14:13:31 2014 +0100

    Merge pull request #533 from crate/l/date-trunc-tz
    
    L/date trunc tz

commit 1324457062539b99fb51cfb33f29915cc3c7f389
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Mar 6 14:11:08 2014 +0100

    small fixes

commit 6a2e4bd968b7fb44aa68b5e94e4accc5a8782f4d
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Mar 6 14:09:44 2014 +0100

    copyright fix

commit 8ba9d0f04e991ec814f97693126619ea6485c88b
Merge: 56c9ca9c84 4a028ec26f
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Mar 6 13:50:00 2014 +0100

    Merge remote-tracking branch 'origin/master' into l/date-trunc-tz
    
    Conflicts:
            CHANGES.txt
            sql/src/main/java/io/crate/operator/scalar/DateTruncFunction.java

commit 4a028ec26f46b4182cc76720e84ee133e7941478
Merge: f4574e315b 5932333400
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Mar 6 12:22:04 2014 +0100

    Merge pull request #542 from crate/s/renamed-namespace
    
    renamed NS org.cratedb to io.crate

commit 5932333400fd3ec9bd279cacfb55cfecab1e349a
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Mar 6 12:15:06 2014 +0100

    renamed NS org.cratedb to io.crate

commit f4574e315bc891d69c84aac8deeb77c26693269c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 6 12:19:59 2014 +0100

    suppress warning about replaced recovery handler

commit b969e4e711a8ef8ac6e3e782108db22879a8a99c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Mar 6 11:58:29 2014 +0100

    start crate in the foreground by default

commit 074f03bf14049793e22cb1421ac5a63c62e2af8f
Merge: 8a0f2a5b25 5db2169529
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Mar 6 11:33:31 2014 +0100

    Merge pull request #539 from crate/m/include_crash
    
    M/include crash

commit 5db2169529dd447844c4c1030218301989158a3c
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Mar 4 22:02:27 2014 +0100

    added crash to server distribution
    
    phase 1: put crash.zip.py statically into the crate source tree, download to come

commit 8a0f2a5b251b56ea02cdb5472d971a3db478cd55
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Mar 5 16:23:57 2014 +0100

    add support for implicit type casts in set literals

commit 6083e5a3ac44fed87a36135cb2b7fec6c07d2404
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Mar 4 21:41:58 2014 +0100

    prepare release 0.26.0

commit ac1b035b967b5629eea7842d4fb5e42ed8b9de8f
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Mar 4 21:36:44 2014 +0100

    docu wording

commit 09b45f471345fcba0dfdb98b943ab0bf0fe638ad
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Mar 4 21:17:02 2014 +0100

    added docu, removed obsolete todo

commit 84a99c5bdae6fa1cd884dbbda8f078ba2a7c97be
Merge: f590f5f426 5f38c66ea2
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Mar 4 20:25:34 2014 +0100

    Merge pull request #537 from crate/s/remove-akiban
    
    removed obsolete akiban sql parser and related code

commit 5f38c66ea238ff53dc1ea68097259e83914f71b6
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Mar 4 20:11:47 2014 +0100

    removed obsolete akiban sql parser and related code

commit f590f5f4268f55143798e6d9b425d7c6e0466b98
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 4 18:19:33 2014 +0100

    prepare release 0.25.0

commit 6dd8598cc7c3776a92c6c9c859623327ed4fcb88
Merge: ad15e15e2c 5cf94ac1b6
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Mar 4 17:42:55 2014 +0100

    Merge pull request #536 from crate/l/crate-admin-0.2.2
    
    update crate-admin

commit 5cf94ac1b6de3cd8456cc28cbf4e9f879cb941ff
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Mar 4 17:37:11 2014 +0100

    update crate-admin

commit ad15e15e2cc988015a3fde688d7a9df030654c76
Merge: a27b0ca204 e7da629ad6
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Mar 4 16:55:39 2014 +0100

    Merge pull request #535 from crate/l/crate-admin-0.2.1
    
    updated crate-admin

commit a27b0ca204864cda881cf5947ebcdd1773f85f2a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 4 16:49:48 2014 +0100

    fix sphinx/buildout

commit e7da629ad63dd59fd7d720dbe4b9b84b11476b71
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Mar 4 15:29:17 2014 +0100

    updated crate-admin

commit 9f4786b27763f796dd33c77b45de798e09149e23
Merge: de013f4769 98e8a71dc6
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Mar 4 16:36:11 2014 +0100

    Merge pull request #532 from crate/s/create-analyzer-analysis
    
    implemented `create analyzer` analysis

commit 98e8a71dc679346b90d5779113c07684cceedf63
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Mar 4 13:18:24 2014 +0100

    implemented `create analyzer` analysis
    
    removed akiban fallback for `create analyzer`, use presto now

commit de013f4769ad7dcf5e82885a4b96b998261436e3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 4 16:15:12 2014 +0100

    fix: filtering on a nested column inside object arrays

commit 78df23ffdddf5e871db0e442cc35eb2f9c38ec78
Merge: c315cddd18 8b5140b855
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Mar 4 15:46:40 2014 +0100

    Merge pull request #529 from crate/m/information_schema_table_constraints
    
    implemented information_schema.table_constraints

commit 8b5140b85516d5e9442f4eb74b10f92bd77e064f
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Mar 4 09:44:54 2014 +0100

    implemented information_schema.table_constraints

commit c315cddd18ed00bf71d3d02baa3f7585db518e36
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 4 15:08:31 2014 +0100

    add docs for the array type

commit 018be741adc17476ccc27b9640e98b281409b6af
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 4 14:50:16 2014 +0100

    update crate-theme to 0.0.10 to get rid of the PIL dependency

commit bdf1d4f755e481d78b39f14d53a7812682110207
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 26 17:33:55 2014 +0100

    add support for array types

commit 56c9ca9c847535036e9b3da4f6b5fd798f77ea86
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Mar 4 12:32:12 2014 +0100

    updated CHANGES

commit 1240de41eb145f863d588cea08832ea35d24f501
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Mar 4 12:25:37 2014 +0100

    updated documentation

commit 0f36a0d805d2c2c7d5ea222ed2d96301bf37cc9a
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Mar 4 12:25:24 2014 +0100

    implemented time zone aware date_trunc

commit 683a6f6d26fd097af55159f86aef38a37831a260
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Mar 4 12:21:33 2014 +0100

    prepare release 0.24.0

commit 749f198f2a9f05f294ce2c6c2911fecf1cec25b2
Merge: 92145bebbd 7b16499f67
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Mar 4 10:51:54 2014 +0100

    Merge pull request #530 from crate/l/crate-admin-0.1.2
    
    use crate-admin 0.1.2

commit 7b16499f675eada5bcccdbb03a8edc0bbd063e87
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Mar 4 10:49:04 2014 +0100

    use crate-admin 0.1.2

commit 92145bebbdc2c98f8d3c69bb0f617ad20f3cb0b2
Merge: 32d759bc23 3f5e82155a
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Mar 4 09:51:57 2014 +0100

    Merge pull request #525 from crate/l/date-trunc-fix
    
    L/date trunc fix

commit 3f5e82155a461d97d6d4a802e5fe5600e98eb267
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Mar 3 15:48:11 2014 +0100

    update CHANGES

commit 6e47a80fb173898997bb7d45dee91c59234882bb
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Mar 3 15:42:41 2014 +0100

    update documentation

commit 1c58477e87be8453931865c72952c54521247f6b
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Mar 3 15:42:20 2014 +0100

    change the default time zone of the truncation to UTC
    since the DB uses UTC as default as well.

commit 32d759bc239c94e7da89fe9f7d9c3ee9ce90bf7e
Merge: ea86e3555c ee763c4e90
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Mar 3 22:13:12 2014 +0100

    Merge pull request #528 from crate/m/analyzer_service
    
    update AnalyzerService to current ES state of Analysis stuff

commit ee763c4e9008068f71ea34be457eefcdb5d30e9e
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Mar 3 22:04:57 2014 +0100

    update AnalyzerService to current ES state of Analysis stuff

commit ea86e3555c23825f1f65c85c0bf6d9077d622796
Merge: f398ccc05e 2097282d49
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 3 21:01:10 2014 +0100

    Merge pull request #527 from crate/s/es-update-settings-task
    
    added ESClusterUpdateSettingsTask/Node

commit 2097282d493658c6660a96d3a6d4e8aa080742fa
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 3 20:25:03 2014 +0100

    added ESClusterUpdateSettingsTask/Node

commit f398ccc05e7272236fa0b92f06a0ee561f39387d
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 3 20:20:16 2014 +0100

    re-set correct es submodule commit

commit 97e8da9274107978bab99e1b7e0917dbfd1961b0
Merge: d38490693b 649e49424b
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Mar 3 18:50:27 2014 +0100

    Merge pull request #526 from crate/m/create_analyzer_parser
    
    create analyzer support in parser

commit 649e49424b335fdecc605faf70bcc9c866a7d8d0
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Mar 3 18:13:46 2014 +0100

    create analyzer support in parser

commit d38490693bba5cf68a62b9e540bc01ac7534ad4d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 28 16:27:32 2014 +0100

    add support for create table in analyzer and planner

commit e3f2cf5f5de239080cea8b6f6e65212af21b510f
Merge: 798311ca53 998711302a
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Mar 3 12:43:02 2014 +0100

    Merge pull request #522 from crate/ddl
    
    DDL

commit 998711302a4845466568c2a00de6355844e60231
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 28 11:57:03 2014 +0100

    implemented drop table and made Planner an AnalysisVisitor

commit a00da21b2ba27ab72f40abf89b144408466731cf
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 28 15:28:03 2014 +0100

    split up analysis

commit f8620c9b3071833ee78da6082138acc11ec1ded7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 28 14:45:28 2014 +0100

    integrate the ESCreateIndexTask in the TransportExecutor

commit 9ea8305da3ee09ce1ed0996888bbc68ace8594e8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 28 13:39:00 2014 +0100

    split PlanNodes into DQL/DML and DDL

commit c127e16dbe66a84cbe4d11d4c97a3b7a6a42e2ed
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 28 11:28:14 2014 +0100

    add ESCreateIndexTask and prepare DQL / DML / DDL Analysis/PlanNode distinction

commit 798311ca53f5af2445fa5746907ea7de915411cf
Merge: ef6fa988de 2086c3d441
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 3 12:37:04 2014 +0100

    Merge pull request #523 from crate/s/minor-cleanup
    
    removed unused code

commit 2086c3d4415e605548622c6b73a1eaa7ca59d427
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Mar 3 12:29:28 2014 +0100

    removed unused code

commit ef6fa988de5987a5eed9bce3c6faa95da6c8ee3b
Merge: 04e612b9b6 7d5cab9401
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Feb 28 16:07:42 2014 +0100

    Merge pull request #520 from crate/l/crate-admin-0.1.1
    
    use crate-admin 0.1.1

commit 7d5cab9401c6b0fa90ed77f9c1c1d531221c6a82
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Feb 28 15:58:25 2014 +0100

    use crate-admin 0.1.1

commit 04e612b9b69b4dd90cb910c1de28bfb2a642cfd7
Merge: 270dc58e03 af70777d3e
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Feb 28 15:01:05 2014 +0100

    Merge pull request #518 from crate/l/crate-admin-0.1.0
    
    use crate-admin 0.1.0

commit af70777d3e6340cedcbdd5cfcc20faf1617175f4
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Feb 28 14:50:39 2014 +0100

    use crate-admin 0.1.0

commit 270dc58e03de55462d7b4838d5a40ca3e1d55b45
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Feb 28 12:28:27 2014 +0100

    use our public ES fork now

commit 756989dee626b937611f4609b2878b3cfcd4c369
Merge: 470f5d68ec e48b733060
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 28 11:29:49 2014 +0100

    Merge pull request #515 from crate/m/create_table_array
    
    implemented set and array types in parser

commit e48b73306085862b6807c06be7a275d4f748ca02
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 28 11:26:13 2014 +0100

    implemented set and array types in parser
    
    can be arbitrarily nested at least as far as the parser is concerned

commit 470f5d68ecefd16201a8ff56da3398acece2e134
Merge: a401c7ed9d 39ae1501ae
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Feb 28 11:04:03 2014 +0100

    Merge pull request #514 from crate/l/date-trunc-tests-set-timezone
    
    date_trunc tests: set default time zone to 'Europe/Vienna'

commit 39ae1501ae57901dd03259b7f56717c8ac838645
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Feb 28 10:56:40 2014 +0100

    removed logger

commit 08d2c0566fc32d91ac244e9a6a2fde3f204e51ea
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Feb 28 10:39:53 2014 +0100

    date_trunc tests: set default time zone to 'Europe/Vienna'

commit a401c7ed9d53c6493c98d28a4b7ffa74f77f0e86
Merge: 3605701943 190e9a2082
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 28 10:43:54 2014 +0100

    Merge pull request #510 from crate/m/create_table
    
    create table parser support

commit 190e9a2082875c4c11354c47da478b6bea5f7459
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Feb 27 16:19:37 2014 +0100

    create table parser support

commit 36057019436779681973b93a827270fe222eed2f
Merge: b03e12c848 fd5141a8f7
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Feb 28 10:35:12 2014 +0100

    Merge pull request #513 from crate/s/doc-syntax-fixes
    
    docu syntax fixes, removed obsolete documentation

commit fd5141a8f721f54f3ee4bdea42042db6d59564b1
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Feb 28 10:25:24 2014 +0100

    docu syntax fixes, removed obsolete documentation

commit b03e12c8487893c46581f4734aba3b073f235e66
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Feb 28 08:22:32 2014 +0100

    less logging, more test

commit a68ba72266f1c5ba7ffb7da6710f6513462b1372
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Feb 28 08:18:19 2014 +0100

    upgrade to newest es-head

commit 0eeaa1041946f76e6b264061f2ef0b05191f2c2f
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Feb 28 07:20:57 2014 +0100

    decrease log level in blobs and some cleanups

commit 5a4c49939b5afc680ed23a5a24d616997b4db206
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 27 23:01:14 2014 +0100

    add a CONTRIBUTING.rst
    
    to use the github integration
    https://github.com/blog/1184-contributing-guidelines

commit 8bf6d3969aa6d1978c75c245ab8d3f9509d9eb08
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Feb 27 22:32:05 2014 +0100

    upgrade to gradle 1.11

commit 03488c49f935ce16dfdc990271dfa6805d0adb73
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Feb 27 22:30:22 2014 +0100

    fixed test resource copy
    this fixes the RestImportActionTest

commit 8711079eab7ce09a199488bfb3678732722a69c9
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Feb 27 21:48:19 2014 +0100

    remove trace logging from tests, we should start use annotations like @TestLogging

commit 6b0a44b5672ce9a9e3bd2736f69b2f554289ac12
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Feb 27 21:45:20 2014 +0100

    fix varargs call warning

commit e91293df01d3304557951192747b69881f05655f
Merge: ac6bdec94c e20f1eede6
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 27 20:40:02 2014 +0100

    Merge pull request #509 from crate/l/fixed-date-trunc
    
    implemented date_trunc

commit e20f1eede680cdb2748674a4a295a78fefc1dd24
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 27 18:55:04 2014 +0100

    fixed CHANGES

commit 203e52c637e21adbc07f03fcd9262e85e6e730b3
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 27 18:47:05 2014 +0100

    implemented date_trunc

commit ac6bdec94c1d1af582e1df0277fd4ca7020cad89
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Feb 27 18:13:36 2014 +0100

    upgraded to new admin-ui

commit 34c550cf427c6c7cd3d72a45492a741838d3b7b8
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Feb 27 18:11:22 2014 +0100

    disable warning for unchecked cast

commit 605e552542a6346616404799efa4bf7488b97795
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Feb 27 17:57:41 2014 +0100

    Revert "implemented date_trunc"
    
    This reverts commit b670e365b2f3ed570f76bd66e745f30638d0cc61.

commit b670e365b2f3ed570f76bd66e745f30638d0cc61
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Feb 25 12:01:34 2014 +0100

    implemented date_trunc

commit cb3d7259368abd9ebd823944d26aea07c2fe215c
Merge: a7a170b8d8 77f608098e
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Feb 27 17:15:31 2014 +0100

    Merge pull request #508 from crate/dobe/es10
    
    Dobe/es10

commit 77f608098e74cb2e84df5cc6c3428cb359e37070
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Feb 27 17:13:18 2014 +0100

    fixed _version col extractor in search

commit 5286f72eaabe0aa1d653f797f92c00dce164219f
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Feb 27 14:18:03 2014 +0100

    various cleanups

commit 7666baeafcd740b82db97ed29b5f4c2c830de1e3
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Feb 27 12:24:02 2014 +0100

    changes

commit 7fd15704e077f9cbd2188e83740387e1660dd06e
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Feb 27 12:16:21 2014 +0100

    fixed version handling in update by query

commit 7f0fb2f174f3ec467519b867ada441f90ba1b485
Merge: fb5e77835b a7a170b8d8
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Feb 27 11:28:24 2014 +0100

    Merge remote-tracking branch 'origin/master' into dobe/es10
    
    Conflicts:
            inout/src/main/java/org/cratedb/import_/Importer.java
            inout/src/test/java/org/cratedb/module/import_/test/RestImportActionTest.java

commit fb5e77835b10b404ffb3fc5a2b89b48bd4511611
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Feb 27 11:19:58 2014 +0100

    removed sigar from gradle deps, sinc this is provided, and added note

commit 5a96010e89a6ca5b80c685a11e9349f504160a96
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Feb 27 11:14:58 2014 +0100

    fixed common ancestor fetch problem in es query builder

commit c4aba4c32a8bbfee6c8f4fb3c866b7c36bb6b903
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Feb 27 08:47:59 2014 +0100

    added source level field extractors
    outputs in ES plan nodes are references now

commit fe6cb1b5dd062e4ab5747064ec9a77e8ab82c72c
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Feb 27 08:39:44 2014 +0100

    test fixes

commit 7cacc6e3546888d999e69f81d478efa313d962f6
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Feb 27 08:39:17 2014 +0100

    fixed test, signature of addalias has changed

commit 62da22c4ae4d7daf17d26b26644c0e07968751e2
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Feb 27 08:38:47 2014 +0100

    updated gradle deps from es pom

commit a7a170b8d808f900738110d68f1796020441f81b
Merge: 480d4be6de d3fb60c6eb
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Feb 26 17:50:00 2014 +0100

    Merge pull request #507 from crate/m/inout_tracelogs
    
    some trace logs for input plugin

commit d3fb60c6ebe979ff977eb8cf91d66677b59fd12c
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Feb 26 17:35:57 2014 +0100

    some trace logs for input plugin

commit 480d4be6ded5055326ff2b081e42574e001f3c62
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 26 14:26:59 2014 +0100

    remove un-used classes from the core module

commit 1ae3bcdb328e87e433a4cb748b440e137479b0c0
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Feb 26 14:16:25 2014 +0100

    gettask fixes

commit 62b06779e62493bc2b5ed19f7d75a11e5813cc9c
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Feb 26 14:15:50 2014 +0100

    fixed tests

commit bd836ed43f1bc1dd429de492c697662e27f3026e
Merge: 047b723a96 77d781635e
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Feb 26 13:23:38 2014 +0100

    Merge remote-tracking branch 'origin/master' into dobe/es10
    
    Conflicts:
            core/src/main/java/org/cratedb/Version.java
            sql/src/main/java/io/crate/executor/transport/task/elasticsearch/ESDeleteByQueryTask.java
            sql/src/main/java/io/crate/operator/operations/collect/ShardCollectService.java

commit 047b723a96e86b17436306ad475e84a0d61c5362
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Feb 26 13:14:51 2014 +0100

    ensure green state in import test

commit c052b4221790d68bed9357c0cc9bf7b7dd3e0c92
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Feb 26 13:11:52 2014 +0100

    search source fixes

commit 77d781635e35003a450705877d65333b26b5e2d1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 26 11:55:50 2014 +0100

    support locales that cause different lowerCase/upperCase representation

commit 4bc0d5bd3f9095421d0a8052d1f6e4211e238168
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Feb 26 11:46:32 2014 +0100

    fix ellipsis error with empty string

commit 111fd56c26a342bba04e3302d75b8aceae29cd7d
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Feb 26 11:01:45 2014 +0100

    fix stats test to run on other platforms than osx (jenkins)

commit 6051e42b5aa1a6892297d1802fdd9d4fbec7f735
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 26 10:45:32 2014 +0100

    prepare release 0.23.2

commit 5f3b1ba647c89937fc2c5c974133f6058041cb11
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 26 00:01:53 2014 +0100

    prioritize the upstreams exception over the "UnknownUpstreamFailure"

commit eb6242267c9d66582795069211a7f8e7c510a301
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 26 09:18:58 2014 +0100

    fix flaky test due to missing ensureGreen()

commit 6c6cc88cbd6759b335380cf6259c86b32453e428
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 26 08:58:32 2014 +0100

    fix a race condition that could lead to wrong results

commit 41942643d9bb2c2f2baee63f95c38188762c7e19
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 25 23:17:30 2014 +0100

    fix threading issue in localMergeTask
    
    the decrement was done too early. In some cases the
    addRows() operation of another thread was still in process
    while another already called result.set()

commit 5e9d6f6ebbfebf85dcd9c1fefe9c491c1802f91e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 25 22:58:23 2014 +0100

    use the same threadpool in the LocalMergeTask
    
    for some reason using a separate executor causes the
        countdown to get corrupted which leads to wrong results

commit 6aa2f3b5d8b58b01e5cb7f1d72c3f520137043e8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 25 21:18:15 2014 +0100

    update changes to reflect the last few merged pull requests

commit be8094cd3f60f50686f27a354b282e062f57f32b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 25 21:04:32 2014 +0100

    remove unused dependencies from ESQueryBuilder

commit d779ec8040b5739a32c7b4c4837068c0a6454bed
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 25 19:49:29 2014 +0100

    synchronize the mergeOperation in the LocalMergeTask
    
    it's called concurrently and isn't thread-safe

commit 6dc745df314932d72c4c35ab9612ecb09c507e79
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 25 18:55:13 2014 +0100

    v101 in crate version

commit dd5d824eec9afe8f750f48eb107e4b059e74aec0
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 25 18:41:05 2014 +0100

    upgrade es to 1.0.1

commit 237c8959f34d695f1f9a3ccf9b345653830253fe
Merge: fd8cb5b0ff d0dd764bd2
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Feb 25 18:24:23 2014 +0100

    Merge pull request #498 from crate/m/exception_formatter
    
    symbol formatter for use in exceptions and other output

commit d0dd764bd25effef8cec596266d42fe0407c9b7d
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Feb 25 18:21:50 2014 +0100

    fixup! symbol formatter for use in exceptions and other output

commit 64720da2b4be08acddda0eab87a9915ac486dc12
Merge: 9b45376da1 fd8cb5b0ff
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 25 18:17:36 2014 +0100

    Merge remote-tracking branch 'origin/master' into dobe/es10

commit 9b45376da15319c50cb8b9f7c0c7e7c9343e0646
Merge: bd88bd7830 c9ca7ebb8c
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 25 18:17:02 2014 +0100

    Merge remote-tracking branch 'origin/s/es-1.0.0' into dobe/es10
    
    Conflicts:
            core/src/main/java/org/cratedb/Version.java
            sql/src/main/java/io/crate/analyze/elasticsearch/ESQueryBuilder.java
            sql/src/main/java/io/crate/operator/operations/collect/ShardCollectService.java
            sql/src/main/java/org/cratedb/action/SQLQueryService.java
            sql/src/main/java/org/cratedb/action/TransportDistributedSQLAction.java
            sql/src/main/java/org/cratedb/action/parser/ESRequestBuilder.java
            sql/src/main/java/org/cratedb/action/parser/QueryPlanner.java
            sql/src/main/java/org/cratedb/action/parser/SQLResponseBuilder.java
            sql/src/main/java/org/cratedb/action/parser/visitors/QueryVisitor.java
            sql/src/main/java/org/cratedb/action/sql/NodeExecutionContext.java
            sql/src/main/java/org/cratedb/action/sql/SQLFields.java
            sql/src/main/java/org/cratedb/action/sql/TransportSQLAction.java
            sql/src/main/java/org/cratedb/information_schema/IndicesTable.java
            sql/src/main/java/org/cratedb/lucene/index/memory/MemoryIndexPool.java
            sql/src/main/java/org/cratedb/service/InformationSchemaService.java
            sql/src/main/java/org/cratedb/service/SQLService.java
            sql/src/main/java/org/cratedb/service/StatsService.java
            sql/src/main/java/org/cratedb/sql/facet/SQLFacetExecutor.java
            sql/src/main/java/org/cratedb/sql/facet/UpdateCollector.java
            sql/src/main/java/org/cratedb/stats/ShardStatsTable.java
            sql/src/test/java/org/cratedb/integrationtests/InformationSchemaTest.java
            sql/src/test/java/org/cratedb/integrationtests/SQLTypeMappingTest.java
            sql/src/test/java/org/cratedb/integrationtests/TransportSQLActionTest.java
            sql/src/test/java/org/cratedb/module/sql/test/QueryPlannerTest.java
            sql/src/test/java/org/cratedb/module/sql/test/QueryVisitorTest.java
            testing/src/main/java/org/cratedb/test/integration/CrateIntegrationTest.java

commit d5664bf30017a08aac39b110be17b88a9377ae2b
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Feb 25 18:04:13 2014 +0100

    symbol formatter for use in exceptions and other output

commit fd8cb5b0ff84c9a7413812ddb30059a92e18c6dd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 25 16:44:28 2014 +0100

    add ensureGreen to various tests to avoid random test failures

commit bd88bd7830b657673164cfe62f2644f2eb657913
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 25 15:40:44 2014 +0100

    add DynamicReference support in ESGetTask

commit 58131983e20b95201df732c09483d6a979e3928e
Merge: ac23818c17 2cf06a7ee4
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Feb 25 15:41:10 2014 +0100

    Merge pull request #496 from crate/m/fix_jenkins
    
    jenkins investigations

commit 2cf06a7ee4d2ab95eab13b640feb7069c3a7d3ca
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Feb 25 11:14:56 2014 +0100

    jenkins investigations

commit ac23818c177665d882ff0c716f3e889813bd4bdd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 25 13:48:43 2014 +0100

    don't show closed tables in the information schema

commit 56b1ca32e015ea4f58cf3fcfc31e0c521ef033b2
Merge: e12cda87e9 55eb1bdb45
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Feb 25 12:30:04 2014 +0100

    Merge pull request #493 from crate/l/fix-doc-is
    
    L/fix doc is

commit 55eb1bdb45455f6170db24a673402ab363092ed5
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Feb 25 12:22:53 2014 +0100

    updated CHANGES

commit ab54cf79b404b7818257bfec2d9048a4c47331dc
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Feb 25 12:20:54 2014 +0100

    add UNASSIGNED

commit e12cda87e9e46f878224d4d6e7e77ad79b5c8fe5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 25 11:50:58 2014 +0100

    prepare release 0.23.1

commit ba62dfa5bd5ac5fb6a3eb4d5c70fc6ab263000df
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 25 11:28:02 2014 +0100

    add support for parameterExpression in the limit and offset clause

commit 738aaa4db2dd7250ae0ddff071aaee51700ec441
Merge: 69e433b37d d8d49b3c0d
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 25 08:08:32 2014 +0100

    Merge pull request #491 from crate/dobe/scalarsonsys
    
    Dobe/scalarsonsys

commit d8d49b3c0da930e72643c4a4c56d01b1f8420592
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 25 07:06:53 2014 +0100

    add note to func

commit 427ec099215de2f0d767b4f654fa2de7ee05f4f3
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 25 06:50:38 2014 +0100

    make test more verbose

commit 50e5e4348067944f627022923e58c17b6709c2b1
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 25 06:50:20 2014 +0100

    fixed test

commit 4c07c8a83a3f26371c6caf2090b18026e4153477
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 25 06:49:56 2014 +0100

    pushed printedrow up

commit 6d71fa2e6076283d6f473f9056169a259c2b17ff
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 25 06:48:58 2014 +0100

    only allow scalars on system tables

commit 69e433b37dc97caabeb9c84dc7b00b15473ec068
Merge: 7f2d83f6ac a9431666f1
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 25 05:33:37 2014 +0100

    Merge branch 'master' of github.com:crate/crate

commit 7f2d83f6ac771d1f3ee057d84efb19db9c7c84f3
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 25 05:33:09 2014 +0100

    added explicit test for string streamer

commit 8e486ff7119755e7dbb1c81e8b5fefdc36c9ae08
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 25 05:32:12 2014 +0100

    fixed integration tests, some are commented out for missing features

commit 375cd13ef2f0aab1f4c12356e607777c24be5424
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 25 05:26:02 2014 +0100

    handle literals in output columns

commit 7ab168c57a26a14aa783864239465512b6ba97fb
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 25 05:25:36 2014 +0100

    return table name in unknown table error

commit a208e4783bea4e415aa5067634090e2886c75141
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 24 19:07:39 2014 +0100

    notes on analyzers

commit a9431666f1a1e5d3527ce1838a0a5058f8da3e7b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 24 18:56:42 2014 +0100

    fix exception handling with akiban fallback

commit 6410299f21eaf2db881eb5bff14f3b4c4a907a09
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 24 18:50:24 2014 +0100

    throw right exception

commit 0b5d2fe8b094045c03361a177dbdb23b87b574ec
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 24 18:50:01 2014 +0100

    raise on wrong table

commit e655f00b57e3daf42daf234daf45bc09d2ec00b1
Merge: 1e37ba0ddb bb2eeb06b6
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Feb 24 18:31:32 2014 +0100

    Merge pull request #489 from crate/m/fix_doc_tests
    
    fix doctests

commit 1e37ba0ddba9212275a7adc617438b81123e0f43
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 24 18:00:29 2014 +0100

    add hasNoResult() to analysis and don't execute sql requests if it is true

commit bb2eeb06b66d0a2eeba75ecfdf78aa6b6092c3ea
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Feb 24 18:20:16 2014 +0100

    fixup! fixup! fix doctests

commit 59468473382f72259fabf139c85ca715f16960ca
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Feb 24 18:16:42 2014 +0100

    fixup! fix doctests

commit 47c94e07522617b05a9c76b567a867edd8439b66
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Feb 24 17:51:17 2014 +0100

    fix doctests

commit 29f8325f1287121bb718326400d4cc40fec62aad
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Feb 23 18:10:52 2014 +0100

    remove all un-used akiban related code from the TransportSQLAction

commit ba6de7d8000101220519444a2f1ee1a85ff9c692
Merge: d5d0d25eb1 969e702d2a
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 24 16:17:17 2014 +0100

    Merge pull request #488 from crate/m/fix_all_the_tests
    
    fixed the first 99%

commit 969e702d2a242922cbf5faac85a96d06490b95c0
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Feb 24 16:12:28 2014 +0100

    fixup! fixed the first 99%

commit c6780411488f28c24dad4680adbf00b3bb909663
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Feb 24 15:19:34 2014 +0100

    fixed the first 99%

commit d5d0d25eb1dce467a1fd7d0ff1997323e6691269
Merge: 52c7906dc5 f6182193d0
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 24 15:47:38 2014 +0100

    Merge pull request #487 from crate/dobe/exhandling
    
    fixes and logging

commit f6182193d0becbab2bd7e6547c836ffbb58df25d
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 24 15:45:42 2014 +0100

    added missing return

commit e75c63c7e256ca48a174d9f656012ced184c5c7e
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 24 15:28:06 2014 +0100

    fixes and logging

commit 52c7906dc57747bff1f0cb23b2dd897043a8e5b7
Merge: acd1d908db 0065762207
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 24 14:54:16 2014 +0100

    Merge branch 'master' of github.com:crate/crate

commit acd1d908db1733d0ae346afcf2b2a4a434bad9bf
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 24 14:53:49 2014 +0100

    fixed downstream and execution node mismatch in distributed merge plan

commit 00657622075d50a5470c9e6a12777668ef8eb2a4
Merge: ebb0fe9eb3 4fbdc2ee31
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Feb 24 14:20:58 2014 +0100

    Merge pull request #486 from crate/l/crate-admin-0.0.4
    
    use crate-admin 0.0.4

commit 4fbdc2ee319d1b96c1b58a6b5dc140a90413873c
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Feb 24 14:17:47 2014 +0100

    use crate-admin 0.0.4

commit ebb0fe9eb3e57ec842679444949cf17223c7d10a
Merge: 852a66eb5e 5bf71eb759
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Feb 24 12:39:50 2014 +0100

    Merge branch 'master' of github.com:crate/crate
    
    Conflicts:
            sql/src/main/java/io/crate/analyze/StatementAnalyzer.java
            sql/src/main/java/io/crate/planner/symbol/ByteLiteral.java
            sql/src/main/java/io/crate/planner/symbol/Literal.java
            sql/src/main/java/io/crate/planner/symbol/ShortLiteral.java
            sql/src/test/java/org/cratedb/integrationtests/SQLTypeMappingTest.java

commit 5bf71eb759517c1ac0a563983094845d8537a9a4
Merge: 97bb8046e8 f79121fe68
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Feb 24 12:37:41 2014 +0100

    Merge pull request #485 from crate/m/sqltypemapping_fixes
    
    M/sqltypemapping fixes

commit 852a66eb5e693b63dd0f18b3e09690f630d36866
Merge: 864e041017 97bb8046e8
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Feb 24 12:36:53 2014 +0100

    Merge branch 'master' of github.com:crate/crate

commit f79121fe6895cb9e983023b837bb2f99ae554325
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Feb 24 12:21:15 2014 +0100

    strict type checking for in lists

commit 59b0eaaa3dc0e24f68b4acc5bbdd621ef04f089b
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Feb 24 12:06:53 2014 +0100

    some test fixes for dml doctests

commit bfac175132a7c4ad149608a38441a01c3115af0d
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Feb 24 12:06:00 2014 +0100

    fix nearly all type mapping tests

commit 31cb40a77f5e19bb100ce9a9fb8f1929519c8239
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Feb 24 11:34:23 2014 +0100

    improve type system by validation byte, short, integer literals in correct range

commit 864e041017e5585732d4a1789c154d95570cd4fd
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Feb 24 11:34:23 2014 +0100

    improve type system by validation byte, short, integer literals in correct range

commit 97bb8046e870821b7e195efc965b75e36767af22
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 24 09:30:25 2014 +0100

    correct changes / release entry

commit 5abb05b90effb24fa74602598d906277f3b4f70a
Merge: c7ff37db2b 4f5a2ee095
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Feb 24 09:24:51 2014 +0100

    Merge pull request #484 from crate/m/information_schema_itests
    
    M/information schema itests

commit c7ff37db2bf558be1014699acaa06e6be1ee8ecd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 24 09:27:19 2014 +0100

    prepare (pre-)release 0.23.0

commit 4f5a2ee095cf774c5c9ed13a62a707f672f31cb9
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Feb 24 01:15:08 2014 +0100

    fixed information_schema doc page. currenlty skipping queries for not implemented tables

commit 1fc70566e914c471825eadefaf2cd803b0951488
Author: Matthias Wahl <matthias@crate.io>
Date:   Sun Feb 23 20:58:33 2014 +0100

    fixes for information schema tests

commit 6efc14de76c9ceaf0b59584d72fb58e3cf218c71
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 24 00:21:26 2014 +0100

    doc fixes

commit 6d9e09a0479951548c434f93f8f6ac3a80ee1eef
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 24 00:11:27 2014 +0100

    more deterministic stats.txt

commit d13ac973741c35ab05d05934305b590e2ac7309c
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 24 00:02:48 2014 +0100

    rest.txt working in itest

commit dee632c6da5d4cbda4ea235555b3159a163c207a
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sun Feb 23 23:41:00 2014 +0100

    aggregation itest is now working again

commit 8d665040b5f00fa241c5e7fd7db5b92d1ecc23a0
Merge: f3a13d3442 af70882e23
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sun Feb 23 23:31:58 2014 +0100

    Merge branch 'master' of github.com:crate/crate

commit f3a13d3442352f69bfd32b58becbc5d1b720d152
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sun Feb 23 23:31:45 2014 +0100

    removed useless super call

commit 05f472488fc0d1bfd37b77e11c75bf281e0b1ba5
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sun Feb 23 23:31:15 2014 +0100

    added a serialization test for distributed result

commit 1778a6000d73c54bb904b1b7166f6902614a82a7
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sun Feb 23 23:30:08 2014 +0100

    fixed NPE in null column shuffle

commit 32c55bf938c5b96fa36764c2858eff6ba074d8d6
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sun Feb 23 23:28:49 2014 +0100

    throw and forward exception if distributing collector is not able to send result to downstream

commit 5446f6c0bf2385a2ec71e4d98cc7c1a477f6f9a3
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sun Feb 23 23:27:24 2014 +0100

    fixed any aggregation streaming, which handled null values wrong

commit 01362429ba6c3db1c598b10fcc7200f986a0cbb2
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sun Feb 23 23:24:24 2014 +0100

    use more logic from upstream in read byteref

commit af70882e2316785f6e2ac90a52620414cf0a9959
Merge: d876d85f77 9f17b43df3
Author: Lukas Ender <hello@lukasender.at>
Date:   Sun Feb 23 20:57:44 2014 +0100

    Merge pull request #483 from crate/l/gradle-crate-admin
    
    L/gradle crate admin

commit 9f17b43df36d159df33b4a33eb5b10f34240104b
Author: Lukas Ender <hello@lukasender.at>
Date:   Sun Feb 23 18:26:47 2014 +0100

    download crate-admin from external source and bundle it.

commit edea1e71bdb2901c6a949de71ce9324ce4091eb6
Author: Lukas Ender <hello@lukasender.at>
Date:   Sun Feb 23 18:25:36 2014 +0100

    remove 'crate-admin' from 'admin-ui'.

commit 33ebbf0811bf81942ff59b762a2027fab097a74c
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sun Feb 23 15:59:14 2014 +0100

    test fixes

commit d876d85f7772b3e4b37a855d5bc4c8059aa5ba1f
Merge: 9ed9ece266 77b7aaaae9
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sun Feb 23 15:54:46 2014 +0100

    Merge pull request #481 from crate/m/groupbyaggregate_fixes
    
    M/groupbyaggregate fixes

commit 77b7aaaae91d42cbf58bbadd9ef9c68bfad80ec3
Author: Matthias Wahl <matthias@crate.io>
Date:   Sun Feb 23 15:48:59 2014 +0100

    some test fixes

commit fd707e3b1d9e8159c9a7898879747595dba943d5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sun Feb 23 15:05:07 2014 +0100

    fix planner bug that occured with multiple count(distinct)
    that re-used the same input column

commit 346731842ad71bc165f841c68cbe689aad33775f
Author: Matthias Wahl <matthias@crate.io>
Date:   Sun Feb 23 15:22:49 2014 +0100

    fixed some groupbyaggregatetests

commit 5010e9281c53aa8a98c80630fa515e330369eb3b
Author: Matthias Wahl <matthias@crate.io>
Date:   Sun Feb 23 15:22:37 2014 +0100

    typo and made class public to reach logger to set TRACE level when needed

commit d38ff314966572831eb302bc115f7f192a7f4f3c
Author: Matthias Wahl <matthias@crate.io>
Date:   Sun Feb 23 15:19:01 2014 +0100

    do execute global aggregate with NO_MATCH where clause as always one column is returned
    
    could be optimized, though

commit 6684cc259ad0aedbf4bfcb3934881909b36bf27f
Author: Matthias Wahl <matthias@crate.io>
Date:   Sun Feb 23 15:17:43 2014 +0100

    add helpful trace output to LocalMergeTask

commit acb2a595528f60660d19582610c120a5d26822a7
Author: Matthias Wahl <matthias@crate.io>
Date:   Sun Feb 23 15:16:46 2014 +0100

    better errors for Group By Analysis

commit 73eb0a263f68e76a85c75952433fffdeff47f1db
Author: Matthias Wahl <matthias@crate.io>
Date:   Sun Feb 23 15:13:51 2014 +0100

    sum(...) returns null, when nothing has been aggregated

commit 91d169866ad49741f80ee82deab717d7a0fa9590
Author: Matthias Wahl <matthias@crate.io>
Date:   Sun Feb 23 15:11:42 2014 +0100

    make collectsetaggregation ignore null values
    
    as it is required for COUNT(DISTINCT <column>)

commit 86f41ea59d0c9b8afe1a72144d05f31f73df6500
Author: Matthias Wahl <matthias@crate.io>
Date:   Sun Feb 23 15:11:01 2014 +0100

    give AnyAggregation a notion of being empty (when nothing has been aggregated)

commit c4d2bf5481c9a3cbd93e9301464e851a8654ee64
Author: Matthias Wahl <matthias@crate.io>
Date:   Sun Feb 23 15:08:56 2014 +0100

    added trace plan printing

commit 1e691be310cac6db762090d02ddc590cc9cf8ee3
Author: Matthias Wahl <matthias@crate.io>
Date:   Sun Feb 23 15:06:36 2014 +0100

    add method humanReadableName to Symbol for use in e.g. error messages

commit 5ad3199b97ff5be967f4ff99b6f03d11b809d86b
Author: Matthias Wahl <matthias@crate.io>
Date:   Sun Feb 23 15:04:48 2014 +0100

    more readable 'unknown function' exception

commit c8d5b357eb55f21442d67307abf8b0c895d2c3ec
Author: Matthias Wahl <matthias@crate.io>
Date:   Sun Feb 23 15:03:33 2014 +0100

    make primitive streamers support NULL values

commit 9ed9ece266dcbd79cda5aba15e4dbb367a72e6ff
Merge: cef5b59b10 9759e686a7
Author: Lukas Ender <hello@lukasender.at>
Date:   Sun Feb 23 14:42:49 2014 +0100

    Merge pull request #480 from crate/l/stats-itests
    
    perform actual itests

commit 9759e686a713c5979b0b77a93f451c3f3a68d02f
Author: Lukas Ender <hello@lukasender.at>
Date:   Sun Feb 23 14:41:56 2014 +0100

    fix typo

commit ccbe73b389d48cce1c2b30abd0af5b257fc53ea0
Author: Lukas Ender <hello@lukasender.at>
Date:   Sun Feb 23 14:23:32 2014 +0100

    perform actual itests

commit cef5b59b10d8e3039122ca0d452d7f35b4a085c6
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sun Feb 23 14:18:45 2014 +0100

    handle nulls in ColOrdering

commit 872746dd813f4bf63c078c2de40af080675be120
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sun Feb 23 13:54:15 2014 +0100

    handle wrong from clauses right in select

commit 85eee79f1ab59b48f833a85c5f78e581a4e0c6f1
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sun Feb 23 13:29:47 2014 +0100

    added test for shard granularity

commit 41be90b2637aee0c7f37cc07c348240b6a6212c3
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sun Feb 23 13:28:56 2014 +0100

    test boolean literals

commit c8881aa7371c66e0a15686c33bf3a240000a3e92
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sun Feb 23 10:47:18 2014 +0100

    fixed stats docs

commit eb2ec984094ba513520e728e999c5ce8dc34f6ee
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sun Feb 23 09:47:36 2014 +0100

    removed granularity check in doc collectors since the unassignedshardcollector is also a doc collector

commit a39f24bdb7fd116246188b8a46160a45f05b43ca
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sun Feb 23 01:21:16 2014 +0100

    fixed npe in delete plan

commit 6e1eb69fd5dc7c33977d4aa27b3f447a3745693c
Merge: b1661700b6 3f540daf5c
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sun Feb 23 00:47:38 2014 +0100

    Merge branch 'master' of github.com:crate/crate

commit b1661700b69d6149c40ef5f7a330eeee92d28844
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sun Feb 23 00:47:20 2014 +0100

    handle collect failures in distributed merge

commit bb73d110942cdff9143abee441b843ed0a2ba7d3
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sun Feb 23 00:44:56 2014 +0100

    respond bootstrap failures in colllect

commit 87cfe31a76e6938869cc336b9fc314973992cc82
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sun Feb 23 00:40:06 2014 +0100

    make sure all exceptions are forwarded

commit 10dfd4c9a380a671129cabef632648a198103686
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sun Feb 23 00:39:07 2014 +0100

    throw special exception on unsupported granularities in handler side collect

commit 3f540daf5c0c739710e8eb3c7ba1dfa3fab7b167
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Feb 22 23:42:41 2014 +0100

    create the state only once for global aggregations
    
    startProjection is called for each row and that created a
    new state for each row.

commit 434d87160d739f66bbdfd742a631f467d7b5807a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Feb 22 23:18:48 2014 +0100

    change stats.shards tests to sys.shards tests

commit 19dde9248c45195d8455e12f9c561aa6db431877
Merge: 5ebca65eda 28166e8f8c
Author: Lukas Ender <hello@lukasender.at>
Date:   Sat Feb 22 22:52:51 2014 +0100

    Merge pull request #477 from crate/l/typofix
    
    fix typo in readme.

commit 28166e8f8cde68064f4540059241f12812f1a64e
Author: Lukas Ender <hello@lukasender.at>
Date:   Sat Feb 22 22:51:01 2014 +0100

    fix typo in readme.

commit 5ebca65eda5db4554e381fe6046b28d163c5634f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Feb 22 22:41:38 2014 +0100

    fix the like operator
    
    the order of the arguments was wrong

commit d4eea01558224cb06abe080af1640c9b43f443bc
Author: Matthias Wahl <matthias@crate.io>
Date:   Sat Feb 22 22:22:41 2014 +0100

    fix table headers in stats.txt

commit 40981a2ecad20364c4b5df693e82c7cb5d891a8b
Merge: efab0da463 a77422979a
Author: Matthias Wahl <matthias@crate.io>
Date:   Sat Feb 22 22:16:04 2014 +0100

    Merge pull request #475 from crate/m/fixes
    
    M/fixes

commit a77422979aebd904578d979c37f6f5f3dcfcab2b
Author: Matthias Wahl <matthias@crate.io>
Date:   Sat Feb 22 22:08:54 2014 +0100

    fix PlannerTest.testGroupByOnNodeLevel()

commit d8bcf41f0f513ad8d1be16adb163f98984178ba6
Author: Matthias Wahl <matthias@crate.io>
Date:   Sat Feb 22 21:57:35 2014 +0100

    fixed number of references in tests

commit 17c6992cb6831c520f27a723d1397712a6f80f1d
Author: Matthias Wahl <matthias@crate.io>
Date:   Sat Feb 22 21:57:10 2014 +0100

    restricted references in update statement to same table

commit 9507c12b657d4ee156322cb03a782087d59ac20a
Author: Matthias Wahl <matthias@crate.io>
Date:   Sat Feb 22 21:56:33 2014 +0100

    corrected types for sys.nodes.fs['free_percent'] and sys.nodes.fs['used_percent'] to DOUBLE

commit efab0da46334ad2bb42ddcefe5644de7e79bab65
Merge: 189ab69a2f 810cfb7d3f
Author: Matthias Wahl <matthias@crate.io>
Date:   Sat Feb 22 21:54:57 2014 +0100

    Merge pull request #474 from crate/m/copy_statement
    
    full support for 'copy from' statement

commit 810cfb7d3fc704aea6b36a624be1af1d8a39dd17
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 21 20:15:16 2014 +0100

    full support for 'copy from' statement

commit 189ab69a2f20450400a489344a9b3e1b51615c13
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Feb 22 20:45:24 2014 +0100

    add support for selecting unassigned shards from sys.shards

commit 7d33d7af01952edf83b9d12485b183502477ac3f
Merge: f0f2ca18b5 0682662bbf
Author: Lukas Ender <hello@lukasender.at>
Date:   Sat Feb 22 21:08:33 2014 +0100

    Merge pull request #468 from crate/l/replace-shard-stats-doc
    
    L/replace shard stats doc

commit 0682662bbfcd1e504017a1d04a07051b1d65e823
Author: Lukas Ender <hello@lukasender.at>
Date:   Sat Feb 22 21:03:54 2014 +0100

    minor fixes

commit f0f2ca18b5d31ce59eaf5475d4faecf5cacc6ebc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Feb 22 20:49:46 2014 +0100

    fix the plan for non distributed groupBy
    
    the aggregations on the mapper are already final.
    so they must not be grouped again on the handler.

commit 9a93e18e1345e782478f0218c8d0df893431098d
Author: Lukas Ender <hello@lukasender.at>
Date:   Sat Feb 22 20:12:45 2014 +0100

    add info about sys.cluster

commit c55be34b30eb016aad17b5453df135ae037801f7
Author: Lukas Ender <hello@lukasender.at>
Date:   Sat Feb 22 20:01:22 2014 +0100

    improved formatting: table, type info,...

commit 20b641bb470c793f1d4b6f2a1fcd6d1754c1f1cd
Author: Lukas Ender <hello@lukasender.at>
Date:   Sat Feb 22 15:12:50 2014 +0100

    documentation for sys.{nodes,shards}

commit bd2a0dba2a1c41b700f76e55cc22d1c51752b661
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Feb 22 12:18:29 2014 +0100

    fix multi get in ESGetTask

commit 407cd76e4f07695aca13e365a23ed678499670cb
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sat Feb 22 12:08:42 2014 +0100

    filter dynamic references now returns no matches, was different in

commit 9b3735a15f886353e8dd9002b3ef86f0715c1c5a
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sat Feb 22 11:44:09 2014 +0100

    allow _source in select and _uid in order by

commit 219d7ee321cac83f2600410facedf104996bfef4
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sat Feb 22 11:30:58 2014 +0100

    fix star count to also count nulls

commit a180489253402531eac902412b5aed5c870309ab
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sat Feb 22 10:53:55 2014 +0100

    allow for mixed granularity in select
    normalize order and groups in analyze

commit 7c9873b4075d032cc38a772b895d0ca1b761ce34
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sat Feb 22 10:12:29 2014 +0100

    chars parameters are now string types

commit 24751838a5d495401be6d014f1716499f4d08c68
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sat Feb 22 09:51:08 2014 +0100

    support dynamcreferences in search task

commit 7e4b29b770de04c5b4efe28fe2b0eff4a9b99025
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sat Feb 22 09:45:24 2014 +0100

    fixed npe

commit 2cd9843a6036312e1dcf21d3707c9cfe57e0d956
Merge: eec997ac15 47da876747
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sat Feb 22 07:43:21 2014 +0100

    Merge pull request #471 from crate/j/bugfixes
    
    J/bugfixes

commit 47da876747795e39444ef5916a93c544b5ac70d5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Feb 22 01:15:52 2014 +0100

    fix bucket generation in ModuloBucketingIterator
    
    negative hashCodes caused an ArrayIndexOutOfBoundsException

commit 75dc550234938755e8500e3e7c140ce4a5bb6415
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Feb 22 00:51:27 2014 +0100

    fix error handling in DistributedMergeTask
    
    if the upstreamResultFuture doesn't contain an error the
        mergeTask waited forever for a response.

commit 2ec2fefb32c305b5de97ac03a22ce525cf1f8d33
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Feb 22 00:30:25 2014 +0100

    ignore null values in the count aggregation

commit ae5d6dbed347d69e631f2900fd1b099364826aa1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Feb 22 00:26:41 2014 +0100

    fix failing DistributedMergeTaskTest
    
    outputTypes in mergeNode are now mandatory.

commit 777e45bd05427e102370b2109d0ba28a6d4f5f24
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Feb 22 00:26:08 2014 +0100

    fix NPE in ESGetTask that occured if fields are selected that don't exist.

commit d701413ea3424c164e85b8dbcc6efe4f1d01886f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Feb 22 00:25:53 2014 +0100

    fix set streaming with null values

commit eec997ac15fd5ff2ee2d560555dc079f8cf0d3d9
Merge: 347d89f4db c4da31bf11
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 21 23:50:09 2014 +0100

    Merge pull request #469 from crate/m/system_schema
    
    implemented systemSchema flag on SchemaInfo, cleaned up Analysis stuff

commit c4da31bf11679ceaaf7c05964d506c5c699792cd
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 21 23:41:49 2014 +0100

    fixup! fixup! fixup! revert pseudo support for selecting higher granularity columns as it didn't work

commit 91b0692245e0bbb743dc1a05e015bd4dfa69b62e
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 21 23:37:14 2014 +0100

    fixup! fixup! revert pseudo support for selecting higher granularity columns as it didn't work

commit 347d89f4db8dffd0f64da9a853ccf8c8a29b6cc4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 21 18:40:01 2014 +0100

    extend primary key visitor to support pkCol = 1 or pkCol = 2

commit a78a93476b62c3a1a8d9b89ab481b0ca78539553
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 21 23:34:26 2014 +0100

    fixup! revert pseudo support for selecting higher granularity columns as it didn't work

commit 3ca6be04b4b674294285623c8b36894e4a7e7422
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 21 23:05:33 2014 +0100

    revert pseudo support for selecting higher granularity columns as it didn't work

commit daf6de30babff35c0c36e4af9a8753f69142a12c
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 21 22:41:38 2014 +0100

    fixup! fixup! fixup! generalized getting reference from qualified name in analyse

commit 2634fccd9c49b4720997e93199fe62f06d037128
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 21 22:39:21 2014 +0100

    fixup! fixup! generalized getting reference from qualified name in analyse

commit d2a4db3ccf71f159b0f600affac57d5df2cbeb07
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 21 22:23:23 2014 +0100

    fixup! generalized getting reference from qualified name in analyse

commit e81a2ebdb194e60339eb2cb04dcccaaaeb325ab4
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 21 22:21:24 2014 +0100

    generalized getting reference from qualified name in analyse
    
    Bonbon: made this possible select sys.shard.id, id, name from some_table

commit e627af2f92f802ef3013cb2f59985d7b9de5dbbc
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 21 21:46:53 2014 +0100

    fixup! fixup! fixup! implemented systemSchema flag on SchemaInfo, cleaned up Analysis stuff

commit de558245d993fd55494151613dc024f478879282
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 21 21:44:28 2014 +0100

    fixup! fixup! implemented systemSchema flag on SchemaInfo, cleaned up Analysis stuff

commit a65c3f7758dca2067851702723cc33f69d65236b
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 21 21:39:08 2014 +0100

    fixup! implemented systemSchema flag on SchemaInfo, cleaned up Analysis stuff

commit 564afe8e94391883f17d51e986b93a1c24ee675f
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 21 21:34:54 2014 +0100

    implemented systemSchema flag on SchemaInfo, cleaned up Analysis stuff

commit 1c25b667cc020d0033ae8bc4ca3e814e936f64a6
Merge: af6ee4b6f5 02703b525c
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 21 19:16:05 2014 +0100

    Merge pull request #461 from crate/m/update_by_query
    
    implemented update by query

commit 02703b525c382191721d896f869d4ca953cf0217
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 21 16:08:00 2014 +0100

    enabled update, remove akiban from sqlfacet

commit b325dce48f85a3365bba71426c5b06ceb23f6d37
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 21 14:14:38 2014 +0100

    implemented update by query

commit 03e547a7e5e3960cb9c976d0f06d3f99fce13123
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Feb 21 14:19:29 2014 +0100

    documentation for sys.{nodes,shards}

commit 4b12532ee0e294c68d26a468c6c2850973cb1177
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Feb 21 18:09:59 2014 +0100

    updated version.cfg

commit af6ee4b6f51c181892ab84d9a58f040a197816d1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 21 17:31:58 2014 +0100

    revert the change that ESTasks return BytesRef instead of strings

commit 224cbed2d3d172fe50903e6913a5d4afcd761ea3
Merge: 8ed2ef572b 90cdd62130
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Feb 21 17:34:22 2014 +0100

    Merge pull request #464 from crate/l/count-aggregation
    
    rewrite count('literal') to count()

commit 90cdd621308be8bfcf1f555d644e1c646cda891f
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Feb 21 17:30:48 2014 +0100

    fixed: rewrite count('literal') to count()

commit 8ed2ef572b4949350232fba57b050a214fc16c94
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Feb 21 16:37:51 2014 +0100

    added propperfindlinks

commit da65ccfe041ee496fa38e751bafd31b088311fb1
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Feb 21 15:34:06 2014 +0100

    rewrite count('literal') to count()

commit 8db09bf5243ec76c56d85f379028d272ae042ef6
Merge: 5edb070565 b3ab06d65c
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Feb 21 16:26:37 2014 +0100

    Merge pull request #466 from crate/dobe/normalizeanalyze
    
    normalize in analyse

commit b3ab06d65ca2f8e296fee5c07f79956c355a097d
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Feb 21 16:26:15 2014 +0100

    fix duplicate normalize

commit dd0853c1f1d31f1a17ca77aa10a55dec3e48a233
Merge: e89a76c6a0 5edb070565
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Feb 21 16:22:39 2014 +0100

    Merge remote-tracking branch 'origin/master' into dobe/normalizeanalyze

commit 5edb070565bc092899af804cc720fca185d73845
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 21 15:55:17 2014 +0100

    fix streamer computation for mergeNodes

commit e89a76c6a0d565ce4f6aa5991bdf68829a2260dc
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Feb 21 16:19:57 2014 +0100

    normalize in analyse

commit a7cc698132b9b9f3b21336ecd95f6a176206afaf
Merge: ac4ea32015 74c182657c
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Feb 21 15:30:18 2014 +0100

    Merge pull request #463 from crate/dobe/fixes
    
    Dobe/fixes

commit 74c182657cc2b70a447e764e23ea790a961f4625
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Feb 21 15:29:40 2014 +0100

    formatting

commit d99819380cfa9aab616c9a100144afed93ca5838
Merge: 9dc4d5f016 ac4ea32015
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Feb 21 15:21:08 2014 +0100

    Merge branch 'master' of github.com:crate/crate

commit ac4ea32015582c531d78467fb94cb6c49363744d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 21 14:11:27 2014 +0100

    convert strings to BytesRef in the ESGetTask and ESSearchTask
    
    so that the handler can except that each column with DataType.String is a BytesRef
    
    this currently doesn't apply to Maps and should be extended
    later on

commit 9dc4d5f0166a1eb1218bb316238d4bf874675494
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Feb 21 15:12:09 2014 +0100

    only use one datatypevisitor

commit 93542388f6fd608460d6ad2f070c7ca4ef1c1a9b
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Feb 21 14:51:55 2014 +0100

    handle dynamic refs and null in like left side

commit 74c84df7ce338db41ee8b63de3036ca8c09eccc0
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Feb 21 14:21:36 2014 +0100

    handle dynamic refs in comparisons

commit 100804146d8358cde77283ce9bcf2fe4227d7710
Merge: f538dbda07 ec2d081c7c
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Feb 21 13:32:45 2014 +0100

    Merge branch 'master' of github.com:crate/crate

commit ec2d081c7c134fa923270cf160f2caf52eafdfa7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 21 13:23:57 2014 +0100

    fix NPE in ShardRelocatingNodeExpression

commit 5f8a2e5ba801569527d59819d373d5da692719b8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 21 12:46:26 2014 +0100

    add number_of_shards and number_of_replicas to information_schema.tables

commit f538dbda076dc9d1d12b0234448e3bb438f48b54
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Feb 21 12:10:39 2014 +0100

    allow dynamic refs in match

commit b492ead6346a1c49d3a3fe0e2b2babd4fa31bbfa
Merge: 72c323212c 41d7ef8b4d
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Feb 21 11:33:34 2014 +0100

    Merge branch 'master' of github.com:crate/crate

commit 72c323212c1f2ed94fcd488634f96141951052aa
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Feb 21 11:33:24 2014 +0100

    handle nomatch in response hander directly
    handle dynamic references in IN predicates

commit 41d7ef8b4d683ef36327429a429f8be87ccff391
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 21 11:10:48 2014 +0100

    add support for HandlerSideRouting in the planner

commit ef35cd2f40b7f6c4dabdcec8bfff05af4e8f47b9
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Feb 21 09:46:10 2014 +0100

    fixed whereclause serde

commit b413fe29bbaf51005e09c76d546c329547511495
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Feb 21 09:30:22 2014 +0100

    factored out inner classes of planner to have a smaller file

commit 5801fd92a5f1e2820ef7d2d111b716ab8f86d871
Merge: dad442e58f bf5d0802bd
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 21 09:21:27 2014 +0100

    Merge pull request #456 from crate/m/update_by_id_task
    
    implemented update by id plan and task

commit bf5d0802bdd684602a2d6502feee944c77450cf1
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 21 09:17:55 2014 +0100

    fixup! fixup! fixup! implemented update by id via presto

commit 868524c5de73d78000393e237d5e5b9e83060743
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 21 09:16:32 2014 +0100

    fixup! fixup! implemented update by id via presto

commit 7ba3bfbd037bbf490f46a2c6d6d8414b16208004
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 21 09:13:51 2014 +0100

    fixup! implemented update by id via presto

commit 8ef4b7af7402f873741376d700b7ce1d625d5808
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 21 09:01:53 2014 +0100

    implemented update by id via presto

commit dad442e58fddb7db5bd868098b656910faca64e2
Merge: f0d7427804 0132be6897
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Fri Feb 21 08:59:40 2014 +0100

    Merge branch 'master' of github.com:crate/crate

commit f0d7427804dd4484b13ec046ab31e67608bb4d2b
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Fri Feb 21 08:59:26 2014 +0100

    consistent use of Crate Data / CRATE wording

commit 0132be6897ca3ebd610a7d7dcbc4ca8dd2389e7c
Merge: c1b072c165 a272b96a0e
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Feb 21 08:30:14 2014 +0100

    Merge pull request #455 from crate/dobe/is_columns
    
    Dobe/is columns

commit a272b96a0e8af12ea5730d7f9a231d3864664989
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Feb 21 08:21:39 2014 +0100

    shorten test

commit c598c89a1c64dbc72ed8232a886f349058a5cd94
Merge: 6ed0ee165c c1b072c165
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Feb 21 07:20:20 2014 +0100

    Merge branch 'master' of github.com:crate/crate

commit 6ed0ee165ce42937c3d6fe3fbd1377d8337f19cc
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Feb 21 07:20:07 2014 +0100

    information_schema columns impl
    TableInfos are now iterators too

commit c1b072c165664c2dfabfe6c792a27e35c86c583b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 20 22:02:33 2014 +0100

    cleanup planner and enable count(distinct) plans

commit 84264dafa2cad724bc7bee0000cfad0a089b2ed6
Merge: 6c4b91727f d3cccb4c1d
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 20 21:22:02 2014 +0100

    Merge pull request #453 from crate/l/minor-improvements
    
    * use singleton BooleanLiteral.{TRUE,FALSE} when possible.

commit d3cccb4c1dc9461096a8c5dfa1c611a610691409
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 20 21:17:23 2014 +0100

    * use singleton BooleanLiteral.{TRUE,FALSE} when possible.
    * remove some unnecessary casts.
    * use assert instead of Preconditions.

commit 6c4b91727f8c5c0c5397e9f71173341e919a5dc2
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Feb 20 20:53:49 2014 +0100

    supress some unchecked warnings

commit df0f7e7695796877d445fb4889ae4206dcbe89c2
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Feb 20 20:53:33 2014 +0100

    aggregation projects startcollect in startprojection

commit e93ea05a902ebec2381b8d285583c752311b1bf5
Merge: e44ce1ddea cd867cbf24
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 20 20:30:27 2014 +0100

    Merge pull request #452 from crate/l/operators-evaluate
    
    L/operators evaluate

commit cd867cbf24373dc4e3375c477068104fd7493291
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 20 20:27:53 2014 +0100

    CodeStyle: INSTANCE, since it's a constant

commit 11e16b243c722ce20fad8745011d72f203be9cb2
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 20 18:14:19 2014 +0100

    remove NotEqOperator. see pull request #448

commit 135ee052b6b157381732c9bbfded5f5e515654d0
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 20 18:09:11 2014 +0100

    prevent possible NullPointerException

commit c17e3a1e361bdf88c838d7d5bdb8f233729c9db8
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 20 17:43:52 2014 +0100

    implement FunctionImplementation, not Scalar

commit aa1c34483e52890cb4820f068fb9cb47600d9f2a
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 20 17:42:57 2014 +0100

    use BooleanLiteral singletons

commit 5a44de32e7b0989e73b9e2d00791b5d0d5f1d72b
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 20 17:42:07 2014 +0100

    make MapComparator instance final

commit 7ddacc3fe15f69fb045a236b1fb4d525fd9a1835
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 20 17:41:04 2014 +0100

    fixed EqOperator

commit a0b4a3a9890a5a0d58b6e0b44d6940122dce513f
Merge: 7d71b6f136 e44ce1ddea
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 20 17:04:39 2014 +0100

    Merge branch 'master' into l/operators-evaluate

commit 7d71b6f1366126e51c08d098f9c823c0cae0ecfd
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 20 16:57:13 2014 +0100

    simplified unit tests

commit e44ce1ddeac29b1a7374acd038adcb9c180f1d55
Merge: 20f4d0c4aa 971c1ee259
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Feb 20 16:51:56 2014 +0100

    Merge pull request #288 from crate/presto
    
    Presto

commit 971c1ee25943fc07723cba5e79125804e58ccfe7
Merge: b463cc45e3 20f4d0c4aa
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Feb 20 16:47:49 2014 +0100

    Merge remote-tracking branch 'origin/master' into presto

commit b463cc45e3262ab68ec481f6afc64d371cee43a1
Merge: 8aa260a9fe a7ab128b80
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Feb 20 16:46:38 2014 +0100

    Merge pull request #451 from crate/dobe/is_tables
    
    Dobe/is tables

commit a7ab128b80a8c1714c15d60c8bcec135b7db8bb0
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Feb 20 16:44:23 2014 +0100

    removed unneeded null check

commit 897391fd2a1af891ad6e95f5e3c50f9bd6a88957
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 20 16:43:31 2014 +0100

    bugfix: Like RegEx: escape additional RegEx chars: '[,],(,)'

commit 9bc40b44e03a30360f88000e115401e599e1a1fa
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 20 16:35:06 2014 +0100

    fix typo

commit 9e8079c898d4070a5d6a3d90585c18f0c572b56b
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 20 16:33:36 2014 +0100

    improved LikeOperator

commit 7d7fe6a48cfc12a6919c06ee55b90975b7498a46
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Feb 20 16:29:15 2014 +0100

    eq operator implements scalar

commit 725a61e33f482e3de2b2a6d4cde689faec9e0210
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Feb 20 16:29:05 2014 +0100

    ReferenceInfo and schemainfo are not iterables

commit fde4e7947ff3f1016bba8c942c3ebc6df128ad1b
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 20 16:20:28 2014 +0100

    improved InOperator

commit 75637a9a8d858a6e0909406fd894ffafeb6d99a6
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 20 15:58:24 2014 +0100

    improved OrOperator

commit 217260ecb3ce86350a5fb41137605a10feb7d022
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 20 15:53:04 2014 +0100

    improved AndOperator

commit 22620348f43ab15881080a591ff602319d1eae99
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 20 15:38:00 2014 +0100

    improved CmpOperator

commit 8aa260a9fefe86a3c72b28ce709fc81d149636ce
Merge: 140af5b296 daf6d36f72
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Feb 20 15:36:49 2014 +0100

    Merge pull request #449 from crate/m/update_analyzer
    
    support for update statement in analyzer

commit daf6d36f72d243f236c8ac3e95cc810e38439487
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Feb 20 15:35:27 2014 +0100

    fixup! fixup! fixup! support for update statement in analyzer

commit 7a45baffbd5f068015888e82885d21e3dc4880f3
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Feb 20 14:46:12 2014 +0100

    fixup! fixup! support for update statement in analyzer

commit 6b2ed84ab2498a063f3fb8c56725c4e6a24c792e
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Feb 20 13:59:31 2014 +0100

    fixup! support for update statement in analyzer

commit 294dba8ed7db5e43b55158383473c1ff7e254e53
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Feb 20 13:52:32 2014 +0100

    support for update statement in analyzer

commit 140af5b2960e17f5c32a7a7d5cb84621f7093f32
Merge: edf4ff1034 65be0c3a40
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Feb 20 15:09:46 2014 +0100

    Merge pull request #450 from crate/m/autogenerated_pk
    
    determine correctly if table has autogenerated primary key (_id)

commit 65be0c3a408c6462594c2f0a9ab2afc8ebfd6db1
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Feb 20 15:06:43 2014 +0100

    determine correctly if table has autogenerated primary key (_id)

commit cec5653de93138f6cf3be83d2b3f3d23c2ed6527
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 20 14:44:49 2014 +0100

    reverted changes in NotEqOperator, marked as deprecated

commit c2be52959c7d13fc63eb0ac48ddb48eee63579df
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 20 14:44:27 2014 +0100

    reimplemented LikeOperator, InOperator

commit 3c5e12aff4ce6c73ddb7027ba9e88181726a5032
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 20 14:05:19 2014 +0100

    * reverted changes in normalizeSymbol.
    * implemented evaluate in CmpOperator.

commit e9832fad1d2f54aa0175408bcac8d67c3ed2064c
Merge: be2f0aa6a1 edf4ff1034
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 20 13:49:30 2014 +0100

    Merge branch 'presto' into l/operators-evaluate
    
    Conflicts:
            core/src/main/java/org/cratedb/DataType.java

commit edf4ff1034598eb5b9559032b00413bbc1793f0e
Merge: 8071586a42 c9d45a2160
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 20 13:47:26 2014 +0100

    Merge pull request #448 from crate/l/rewrite-not-eq-op
    
    rewrite 'exp1 != exp2' to 'not(eq(exp1, exp2))

commit c9d45a2160ab12e7ef7ec9d4bbccb276a46383e3
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 20 13:47:08 2014 +0100

    simplified List creation

commit 59910d485beeed310e8ec1976a3b34b812ba6a03
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 20 13:29:50 2014 +0100

    rewrite 'exp1 != exp2' to 'not(eq(exp1, exp2))

commit be2f0aa6a16cb043a8dd03b13381d470a192e738
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 20 11:46:42 2014 +0100

    reverted changes in normalizeSymbol.
    reimplemented evaluate.

commit 6fa7ea79fe6c421978fcdd5a03fd67896c16e522
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 20 11:40:12 2014 +0100

    match like operator interface with Scalar interface

commit 3bc55c9de2bd7c336c55a911b7842d709d7a3451
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 20 11:38:34 2014 +0100

    reimplementation of OrOperator.

commit 02db9aaebf3a30c61cc76d7f9a72e7170a32e48e
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 20 11:31:58 2014 +0100

    reimplementation of AndOperator.

commit 6777622bbbb5cddfd0b4eb0741d912098086c519
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 20 11:27:07 2014 +0100

    * Scalar now requires two generic arguments.
    * changed interfaces/implementations to match new Scalar interface

commit 20f4d0c4aa1334092102deaf608bd365b6dc90e4
Merge: f206a2540e ecb71dfd39
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Thu Feb 20 10:02:02 2014 +0100

    Merge branch 'master' of github.com:crate/crate

commit ecb71dfd39b2ec0aa02583f4b8917be3d736a314
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 20 09:24:17 2014 +0100

    update crate-python to the newest version

commit 8071586a425a3fdb766d4cf81f798244219d912f
Merge: 4812a88f46 4fd86bb47b
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Feb 20 09:25:28 2014 +0100

    Merge pull request #447 from crate/m/missing_visitor
    
    implemented missing symbol visitor methods

commit 4812a88f46a569dd4c72bb3096523c82c1efc01d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 20 09:24:17 2014 +0100

    update crate-python to the newest version

commit 4fd86bb47b7f06c1a626bf45320871fc058f8a70
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Feb 20 09:21:28 2014 +0100

    implemented missing symbol visitor methods

commit ac2d4db2f16d89b2eb8356b1c9235e364b784bf7
Merge: 3abafa6c9d fdfe728ee5
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Feb 20 08:56:07 2014 +0100

    Merge pull request #445 from crate/dobe/handersidecollect
    
    Dobe/handersidecollect

commit fdfe728ee551ff1038d0625c26b33f9aa5fc6918
Merge: 12420db74c 3abafa6c9d
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Feb 19 19:15:56 2014 +0100

    Merge remote-tracking branch 'origin/presto' into dobe/handersidecollect

commit 12420db74ca288e7b8f2cebc8b4a2970624f195f
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Feb 19 19:15:13 2014 +0100

    seperated handlerside and mapside collect operations

commit f206a2540ef4a6612985700b84702d7754343e07
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Wed Feb 19 19:00:06 2014 +0100

    add README and LICENSE, update URLs for new website

commit 3abafa6c9d36ccad7ce3335ed45a7a396bd8edc9
Merge: b488c59daa 82ce424617
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Feb 19 18:38:50 2014 +0100

    Merge pull request #444 from crate/m/type_mapping
    
    handle unknown columns and correctly map types

commit 82ce424617af68fae1df37e49c9d4ed4ff8b3c90
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Feb 19 18:35:52 2014 +0100

    fixup! fixup! fixup! fixup! handle unknown columns and correctly map types

commit b81191372c5f9ee249101437aa0a2ad0ea3a688a
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Feb 19 18:18:38 2014 +0100

    fixup! fixup! fixup! handle unknown columns and correctly map types

commit a1ae2150562f58b6e04d5791e03477fa0172e3ce
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Feb 19 18:18:22 2014 +0100

    fixup! fixup! handle unknown columns and correctly map types

commit a6b91b1cfc25475779e74325d765d835f27708d5
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Feb 19 18:16:53 2014 +0100

    fixup! handle unknown columns and correctly map types

commit 66bd47983a73c62ab9264a8ab336f9ce831ad065
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Feb 19 17:14:13 2014 +0100

    handle unknown columns and correctly map types

commit ae0544ab05a6d34caec3b5b5ddeb7042df94d324
Author: Lukas Ender <hello@lukasender.at>
Date:   Wed Feb 19 16:47:19 2014 +0100

    call 'evaluate' in AndOperator#normalizeSymbol.

commit cdd6d72614963424c71a2ee032d32fa39446f980
Author: Lukas Ender <hello@lukasender.at>
Date:   Wed Feb 19 16:15:07 2014 +0100

    call 'evaluate' in 'normalizeSymbol'

commit 445f11c540644adde70db998bdecac58db45af37
Author: Lukas Ender <hello@lukasender.at>
Date:   Wed Feb 19 16:02:24 2014 +0100

    implemented evaluate in InOperator.

commit 9b50dce0565d3b34122b181ee8a4bf27627f4398
Author: Lukas Ender <hello@lukasender.at>
Date:   Wed Feb 19 15:26:52 2014 +0100

    implemented evaluate in LikeOperator

commit 79d28611985aa0786c0045eba8f8f295f11c7b87
Author: Lukas Ender <hello@lukasender.at>
Date:   Wed Feb 19 14:41:20 2014 +0100

    use Presto's way to generate 'like'-regex. added additional unit tests

commit cb1fc8d7408f28c98ec5d85d043e0b3b602f7d4b
Author: Lukas Ender <hello@lukasender.at>
Date:   Wed Feb 19 12:00:00 2014 +0100

    implemented NotEqOperator as CmpOperator

commit a284e64807dd92f1807c3a06888472a7d861b540
Author: Lukas Ender <hello@lukasender.at>
Date:   Wed Feb 19 10:29:58 2014 +0100

    first implementation for And-, Or-, CmpOperator

commit b488c59daa24309c08d02c871e622e703a969132
Merge: fd237aba1d 0daa5e5e45
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Feb 19 14:10:47 2014 +0100

    Merge pull request #442 from crate/dobe/whereclause
    
    Dobe/whereclause

commit 0daa5e5e4567f254a18bc42589aa9ed6f360da4c
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Feb 19 14:06:51 2014 +0100

    typos

commit ec401a1edcfe9982c3152505c20822db6d249e64
Merge: 3c4af040c1 fd237aba1d
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Feb 19 13:43:51 2014 +0100

    Merge branch 'presto' of github.com:crate/crate into presto

commit 3c4af040c1a8f40a1624d5f4e4774d4e508b472b
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Feb 19 13:43:40 2014 +0100

    whereclause is now a class

commit fd237aba1d19c84b23c66492ef9502f73c0c72f0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 19 12:27:07 2014 +0100

    re-use collectExpression in the ImplementationSymbolVisitor
    
    in case of count(col1), avg(col1) the inputs for count and
    avg need to point to the same collect expression otherwise
    the input for the second one would be null

commit f7d7685b2648b79663d225ac7c20d7907e49b971
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 19 11:46:29 2014 +0100

    planner: if the table is an alias always to a query, no getPlan

commit d6f211b8db7a922db99bbc126769238bf333673b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 19 11:45:56 2014 +0100

    CollectNode: assure toCollect() doesn't return null

commit f580959e80faafe481afc521a625135f17b5aec6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 19 11:08:30 2014 +0100

    fix state sharing in aggregationProjector
    
    this caused all tests with aggregations to randomly fail.

commit 7cf89d3d3cca98a550395e9260e4a09652bfbc04
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Feb 19 09:06:30 2014 +0100

    cleanup

commit ebf04ce8e45d33916a035a7a5a39a2b131a741e1
Merge: de027479aa c6285ca099
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Feb 19 07:29:51 2014 +0100

    Merge pull request #438 from crate/dobe/docrefs
    
    Dobe/docrefs

commit c6285ca0992dfe43a64251190c48a07e7b431cae
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Feb 19 07:29:16 2014 +0100

    added override

commit 423d181dab5c881667ed40b5353ff9f6136332c1
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 18 23:40:38 2014 +0100

    comment fixes

commit d76eeca541a80d7d1a8f4ae1cf62701d52a5af88
Merge: 4e0e483fe4 de027479aa
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 18 23:37:43 2014 +0100

    Merge remote-tracking branch 'origin/presto' into dobe/docrefs

commit 4e0e483fe49650dd0ef5599c16070044a7dde3cc
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 18 23:26:09 2014 +0100

    Merge remote-tracking branch 'origin/presto' into dobe/docrefs

commit 6fd51f6342e43fce824e0b1eebb062447719847f
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 18 14:57:02 2014 +0100

    abstract doclevel collectors away from others

commit de027479aadef071cd4b15f78838445052541ea8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 18 18:16:35 2014 +0100

    add support for unknown columns in DocTableInfo

commit 753e0b42e7d2a40f759c4f6f57087b453d87cc6b
Merge: 853b6ef278 ea492ef57d
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Feb 18 17:53:55 2014 +0100

    Merge pull request #432 from crate/l/match-function
    
    L/match function

commit ea492ef57d787c0cbb0a19bab362e07dd4f100a9
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Feb 18 17:51:56 2014 +0100

    remove unnecessary test

commit 853b6ef278b13e9f99c54f727be5fdcb72cc692d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 18 17:17:45 2014 +0100

    analyzer: add support for is not null

commit 1ff9179902ce0e81c498128ed2574a74294fc302
Merge: 097d3fd341 e9892e2107
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Feb 18 17:22:53 2014 +0100

    Merge pull request #434 from crate/m/table_partitions
    
    add partitions to TableInfo

commit e55f6db1ffe5c67a1aafd097fbcc5b8d9f67c53b
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Feb 18 17:17:35 2014 +0100

    only return 'function'

commit e9892e21071f751f2fec54c1b9a0f1af2cadc1a7
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Feb 18 17:12:51 2014 +0100

    add partitions to TableInfo
    
    useful for getting all the tables an alias-table consists of

commit e6c393a7f8cea1586d4bf12624fd3518f2c6b7ac
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Feb 18 16:50:17 2014 +0100

    simplified MatchFunction#register() and unit tests

commit 097d3fd3414698d7f691857320bb50abfae7ddf4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 18 16:44:18 2014 +0100

    fix ColumnIdent creation in the doc table metadata builder

commit 9288c11801a748d6d7ed027de45d13f87435fb6d
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Feb 18 16:33:11 2014 +0100

    Refactoring of MatchFunction requires to use the class differently.

commit 55ba1ba5511f3b01961796a66be7ccdb4bcc2bf6
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Feb 18 16:26:51 2014 +0100

    implemented MatchFunction

commit 5b7eadbe48e0e46bc7d3edd142d8fad424da7fc9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 18 16:05:29 2014 +0100

    planner: build correct plan for aggregations with literals as parameter

commit 58aa18ff1f98e64d5061e2f6a71e6b6911e65a76
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 18 15:02:49 2014 +0100

    renamed CollectorExpression to LuceneCollectorExpression to avoid confusion with CollectExpression

commit fa1faa621a6cd1a01e4c182ee2eebdd2eec38931
Merge: 697e7d3adb 9db63ecb41
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 18 14:50:52 2014 +0100

    Merge pull request #425 from crate/m/remove_nested_columns
    
    remove nested columns from ReferenceInfo

commit 9db63ecb419f1fae68a299b16970bc5b2a05ea22
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Feb 18 14:48:57 2014 +0100

    fixup! remove nested columns from ReferenceInfo

commit 697e7d3adbd8f0705e629e3b98e3f25fcf471aa6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 18 14:39:35 2014 +0100

    fix negative array access in SortingTopNProjector

commit d7467a2b5fc3b736cc48ada44736ddf7a6cc7b49
Merge: a7eccda8bd 518e06d66c
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Feb 18 14:34:18 2014 +0100

    Merge pull request #426 from crate/l/real-like-support
    
    implemented LikeOperator: behaves like a real LIKE now.

commit a7eccda8bdacae0909dff7e85a97d846f542ed82
Merge: 57b1e68aca 3d43c80455
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Feb 18 14:32:25 2014 +0100

    Merge pull request #429 from crate/m/disable_array_insert
    
    disable array insertion

commit d4222a388d6115f649208d7294610f3b25b5d5dc
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Feb 18 12:21:04 2014 +0100

    remove nested columns from ReferenceInfo

commit 3d43c8045507338f848051eeee3df87847c68e43
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Feb 18 14:22:19 2014 +0100

    disable array insertion

commit 518e06d66c4cd1ec881561d4be7a64ce677ad90b
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Feb 18 14:27:04 2014 +0100

    added additional 'mixed' unit tests

commit 20c83012259dee810023132f74822243108787c7
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Feb 18 14:15:15 2014 +0100

    bugfix: return 'symbol' if 'expression' is not a Literal

commit 57b1e68aca0709653e7c51ee428661f2292db623
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 18 14:02:49 2014 +0100

    sql-parser: change parameterExpression to 1 based indexing
    
    this way the first "?" and $1 will both create a
    ParameterExpression with position 1
    
    and then the index access is consistent

commit 2171d825c3549606082530e8d5e03fb60f1a0a75
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Feb 18 14:10:49 2014 +0100

    removed LikeOperator from CmpOperatorTest

commit 494dba6f908e0a00ed5d601b059f56514b7a83ca
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Feb 18 14:05:28 2014 +0100

    added missing public keyword

commit 69c12e0fa759d079dcaad2cdb89e6a1455855843
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Feb 18 14:05:00 2014 +0100

    simplified unit tests

commit f2db69c21636956ab033aa1e8f1cf8f3b8f5a972
Merge: 8077604da4 f41114c66d
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Feb 18 13:54:08 2014 +0100

    Merge pull request #427 from crate/m/table_alias
    
    implement table alias recognition

commit f41114c66d01b24ae702e5c494fc52a9cc84f0ac
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Feb 18 13:23:31 2014 +0100

    implement table alias recognition

commit 7417a7e58c3f0e37064fe7a7b363b1f1db0f2ed2
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Feb 18 12:27:02 2014 +0100

    implemented LikeOperator: behaves like a real LIKE now.

commit 8077604da4ebe122f13dcac70378d31bb33ee510
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 18 11:42:31 2014 +0100

    simplify string/bytesRef handling on literals

commit d4d018c36c57b55fac895c0cf7c30d976e8297f5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 18 11:32:54 2014 +0100

    planner: fix bytesRef handling for the ESGetNode

commit 191beb34ea338689e65e9109edcea6528e3c581c
Merge: ec7d08a29c a8a2673efd
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 18 11:33:30 2014 +0100

    Merge pull request #422 from crate/dobe/cleanup
    
    cleanup

commit a8a2673efd22868e62f2326cb12daa8957ff0774
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 18 11:22:05 2014 +0100

    cleanup

commit ec7d08a29c8e7512e343a1306f6475e3d491a4b7
Merge: 355a4203ab 574a2986e1
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Feb 18 11:08:33 2014 +0100

    Merge pull request #418 from crate/m/improve_type_validation
    
    improve type validation

commit 574a2986e1cc9cbf648c31738d7f2b526fe6ae40
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Feb 18 09:10:50 2014 +0100

    improve type validation

commit 355a4203ab18432b1f91438fde15b56c7cd83db5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 17 19:29:29 2014 +0100

    don't fail if table has no column definitions

commit 0cd7c0e359823fdf56ae109eb503cb22f1c41261
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 18 09:42:53 2014 +0100

    correct exception handling in DistributedMergeTask

commit 6ae01a156767c074d4397a0416273f580ee0bdcb
Merge: 861d5188c8 07a5dbf2fa
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 18 09:28:21 2014 +0100

    Merge pull request #419 from crate/dobe/tablenames
    
    Dobe/tablenames

commit 07a5dbf2faad6260ff9d939322c7407ea1f47d28
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 18 09:24:01 2014 +0100

    getSchemaInfo impl

commit a219df191119fdc41cd41818c452c79da2c11eb9
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 18 08:17:53 2014 +0100

    removed old comment

commit a0201d438ca86a5f2d51c4407efda632c09e8230
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 18 08:17:46 2014 +0100

    table names in schema info

commit 861d5188c8ab626fdb8389d2bf5b34dc914ceaf2
Merge: c40af5a20f 39a117c7c4
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Feb 17 23:56:02 2014 +0100

    Merge pull request #417 from crate/m/types_and_objects
    
    add support for object reference infos and proper tinput ype validation/...

commit 39a117c7c499a9969a0fea73db1ab46afd93af8c
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Feb 17 23:12:31 2014 +0100

    add support for object reference infos and proper tinput ype validation/normalization

commit c9ca7ebb8c0cf195132146703dfd164462566acf
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Feb 17 20:03:09 2014 +0100

    compatibility changes for ElasticSearch 1.0.0

commit c40af5a20fd2c7f10b7f06311cf20121fa69a752
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 17 22:42:46 2014 +0100

    add rowsAffected and _version handling to deleteTask
    
    also enables the deleteTask for all delete requests.
    but the alias check still needs to be done.

commit cda1b7e7f03a516d523db4cdd8989300550f038f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 17 21:33:54 2014 +0100

    planner: add multiget support

commit bca9f8520ae73f283e54f8a61c6c14493e804419
Merge: e8b699633c ba27fcbc31
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Feb 17 18:36:21 2014 +0100

    Merge pull request #411 from crate/l/query-support-in-xcontent
    
    implemented InConverter

commit ba27fcbc31735d54e926065138ffca0573d8e8f9
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Feb 17 18:32:11 2014 +0100

    simplified unit test

commit 6f51fe5c497ac2b15163f8d98dc02ffcca19a73d
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Feb 17 18:15:24 2014 +0100

    fixed discussed issues

commit e8b699633c6ecb43f7dc0d0e8d63a55188e0b43e
Merge: 8aeb6850d7 b77212b18a
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 17 16:28:21 2014 +0100

    Merge pull request #414 from crate/dobe/clusteredby
    
    Dobe/clusteredby

commit 8aeb6850d7e0ba8e0849532b3540b4f86b687811
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 17 12:10:04 2014 +0100

    improve error handling on RemoteCollect

commit b77212b18a1702850e4f7b48656a5f0ff4c47c3c
Merge: 43fc06e539 e9d901abc9
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 17 16:14:15 2014 +0100

    Merge remote-tracking branch 'origin/presto' into dobe/clusteredby

commit e9d901abc991d1d509c52078b1acf843871b4bc2
Merge: d343232f22 671d84298c
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Feb 17 16:13:27 2014 +0100

    Merge pull request #412 from crate/m/disable_insert
    
    disable insert via presto again since it's still unstable

commit 671d84298c8bd87ade9e3450d4d7890fddca487d
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Feb 17 16:12:26 2014 +0100

    disable insert via presto again since it's still unstable

commit 43fc06e539a5e8bca8c8cdd9a1da36185cc126e1
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 17 16:11:30 2014 +0100

    analysis now sets the clusteredby attribute

commit 90e8647666fa6f14e18d70d97660f98d29baea49
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Feb 17 15:01:36 2014 +0100

    implemented InConverter

commit d343232f2214da5e598563cdad3f167e4998a0c3
Merge: d419534c7b 3651cfaff1
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Feb 17 14:05:47 2014 +0100

    Merge pull request #405 from crate/m/bulk_insert
    
    bulk insert, insert plan, use presto for inserts

commit 3651cfaff10a00fb45631ce663909dcaf59ef9ae
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Feb 17 13:36:05 2014 +0100

    normalize insert values in analyze phase

commit c598f272d69dc82e54f81726f660d28eb4bc416e
Author: Matthias Wahl <matthias@crate.io>
Date:   Sun Feb 16 20:52:03 2014 +0100

    use presto for inserts

commit 49717d5983c74247cc15f51ea9c083cc05750783
Author: Matthias Wahl <matthias@crate.io>
Date:   Sun Feb 16 20:09:14 2014 +0100

    implemented insert plan creation

commit 1c836f9f6dcbe766fdf8d4c35868ed5a2b0ab4b0
Author: Matthias Wahl <matthias@crate.io>
Date:   Sun Feb 16 19:41:15 2014 +0100

    implemented bulk insert in case of many values lists

commit d419534c7b3e970c12d8d9c5e2d39ae7340ab8e1
Merge: 2a652ade41 e3df1a8307
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Feb 17 12:30:50 2014 +0100

    Merge pull request #404 from crate/m/split_analyzer_test
    
    splitted analyzer test by statement

commit e3df1a8307db4d9ef56a2fbc66a66764d9cd5cba
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 14 15:15:32 2014 +0100

    splitted analyzer test by statement
    
    with common setup stuff in superclass

commit 2a652ade41ca49f916837ea3edce552e9e03c3bc
Merge: acd4544de4 93a8d52135
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 17 11:59:26 2014 +0100

    Merge pull request #409 from crate/dobe/setpk
    
    Dobe/setpk

commit 93a8d5213554432969b2eae1ae25fb2054802b6a
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 17 11:57:55 2014 +0100

    fixed intersection again

commit 8a80bafde99fa3f82f68ca9fa51dfbb2c014a625
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 17 11:44:40 2014 +0100

    fixed tests

commit 7a3df40325390f6c33968937bb72e10cc7147dba
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 17 11:44:31 2014 +0100

    index nodes should not be serializable

commit b59aabbdfff52696bd9c239987bab5ad7e39c639
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 17 11:43:38 2014 +0100

    handle bytesref in index task

commit 7f7842b28f751f4bded9e98aca9985315f953eff
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 17 11:18:48 2014 +0100

    fixed intersection shortcuts in setliteral

commit 81e11eea1bd9c7499bc0b60711b4d724a15f86d7
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 17 11:18:22 2014 +0100

    fix none operator functions in query pk analysis

commit 7a4d9c61cd5fbe689840f8fe3f33b3056aa441d1
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 17 11:17:54 2014 +0100

    fixed tests

commit 5127af2deb775042f95cb77e07d457e5c41b9747
Merge: 6670a9cc30 acd4544de4
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 17 09:54:54 2014 +0100

    Merge remote-tracking branch 'origin/presto' into dobe/setpk

commit 6670a9cc30ae59dc24b775140286332d0638bab5
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 17 09:51:33 2014 +0100

    set literal now contains only the raw values
    string datatype is using bytesrefs now

commit acd4544de4df3fc05203b6420476833569218749
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 14 23:38:03 2014 +0100

    optimize group by on single key
    
    locally with about 1mio rows this cut the execution time
    from 800ms to about 600ms

commit ae9a9a75f3fe59823bb26d23d1967ea6513989f8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Feb 15 01:25:47 2014 +0100

    extend ESGetTask to be able to select _version and _id

commit 730958b27df4d8c9e9120ebc7e7616f9f6bae51a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Feb 15 00:54:06 2014 +0100

    unwrap UncheckedExecutionException
    
    e.g. the TableUnknownException in the DocTableInfoBuilder
    get's wrapped in a UncheckedExecutionException due to the
    guava cache that is used.
    
    -> unwrap to show the client the correct error.

commit cb1e7a31512b8cb562a6811a6a69b2a8bec1e205
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Feb 15 00:53:07 2014 +0100

    sql transport: correctly forward exceptions to the client
    
    exceptions that occurred in the parser, analyzer or planner
    were swallowed.

commit ade849210d57af6d0bc9aec4e4b0aa12fc0ca7a8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Feb 15 00:38:52 2014 +0100

    throw more accurate exception if function implmentation is not found

commit c50092067d069a6ed9dce31a9605fad1acb67b25
Merge: eb1f3388d7 ee50dd38ec
Author: Matthias Wahl <matthias@crate.io>
Date:   Sun Feb 16 17:29:14 2014 +0100

    Merge pull request #403 from crate/m/index_task
    
    implemented index node and index task for single insert

commit ee50dd38ec8401eafc51717a6ccca7768aeafcad
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 14 09:57:26 2014 +0100

    implemented index node and index task for single insert

commit eb1f3388d7990ec94f3734427f9415f00bbdd015
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Feb 15 00:29:15 2014 +0100

    planner: fix: set outputs on ESGetNode

commit 2610ef67a51e35db83bbb635ef74d285675216ad
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 14 17:57:37 2014 +0100

    analyzer: support QualifiedName with 2 parts (table + column)

commit 5051e2c15edcbe58849562ed47e74a2a61e2adfd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 14 17:55:59 2014 +0100

    revert the BytesRef -> String convertion change
    
    Using the DataType.String from the OutputTypes doesn't work
    as e.g. the ESSearchTask will return String directly and not
    BytesRef

commit 1eca87be3b8f7b5a739851951dce388d2151ebae
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 14 17:16:30 2014 +0100

    planner: add support for building ESDeleteNodes

commit 313a1525b12e687daa874bfe56ab9cb6d57c0a0a
Merge: 655c8b7a6a 2347b1637c
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Feb 14 17:18:49 2014 +0100

    Merge pull request #401 from crate/l/where-is-null
    
    analyzer: implemented IsNull predicate and visitNullLiteral.

commit 2347b1637c33d427accce8f533b7cc26793531ba
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Feb 14 17:18:06 2014 +0100

    additional assertion and code style

commit a90902d66c0305f8d4785d43e7aaa58a3e30a9da
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Feb 14 17:09:50 2014 +0100

    improve tests

commit aca0de7db904a280f0e8b8600483a14219ee35e4
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Feb 14 17:03:32 2014 +0100

    use ImmutableList

commit 655c8b7a6a4972fbee51b618cee28b78b94374c8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 14 16:35:40 2014 +0100

    extend ESGetNode and ESGetTask to support multiple ids

commit 8ef976eb5a55f9e35a3e36b7adbec3dc274a8036
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 14 16:33:09 2014 +0100

    planner: build Get plan if primary keys are available

commit 23b06c3bc2d7b83553918bee8a68889bc51f2828
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Feb 14 16:46:27 2014 +0100

    analyzer: implemented IsNull predicate and visitNullLiteral.

commit 9fbe1c16f2facc94a6d149fa79e8aa015867fc59
Merge: da5df132e4 ac66cbdd41
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Feb 14 16:11:18 2014 +0100

    Merge pull request #399 from crate/l/refactor-predicate
    
    created module io.crate.operator.predicate.

commit ac66cbdd419f922e422d1063edff92941f52aa5c
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Feb 14 15:52:41 2014 +0100

    renamed variable names

commit d57d4b9cbdaebdeb9d9535a17791394695e4e1a2
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Feb 14 15:50:50 2014 +0100

    renamed variable names

commit 59e566f18496d2ab3fcadd4710c17853ac9a6522
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Feb 14 15:39:11 2014 +0100

    created module io.crate.operator.predicate.
    - moved NotOperator, IsNullOperator to .predicate
    - renamed NotOperator, IsNullOperator to NotPredicate, IsNullPredicate
    - same holds true for *Test
    - updated all dependencies accordingly

commit da5df132e4ea24564732122f20adce0d6b9a4ef6
Merge: c435b47581 6374c23681
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Feb 14 14:07:19 2014 +0100

    Merge pull request #396 from crate/l/like-support-statementanalyzer
    
    analyzer: implemented LikePredicate

commit 6374c236810ed8c25ed2ef8461843eb365bf0c7f
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Feb 14 14:05:57 2014 +0100

    analyzer: like support: move assertion to the top

commit 8b1aad3799edea667ff8a958aa6373a4bc47b935
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Feb 14 13:56:09 2014 +0100

    analyzer: like support: added unit test: reference in pattern

commit ccb057d922fb04755fa8312a0639079c32a4d0e8
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Feb 14 13:52:59 2014 +0100

    analyzer: like support: handle data types

commit c435b475814a91b6de0234a39eea7d0d7141f429
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 14 12:06:15 2014 +0100

    forbid  "_version" in the ESQueryBuilder
    
    where "_version" = 1
    would never match because the field doesn't exist in the
    lucene index.
    
    it must be paired with a primary key and then the planner
    has to build a ESGetPlan

commit d5eba05d3085277d959ec13252fc25701673e1df
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 13 17:45:12 2014 +0100

    add _id, _version and _score on DocTableInfo
    
    they are not in the index mapping but are special fields
    that can be queried

commit e6ef005cac322984ba2415528f250a190b107a3c
Merge: 61845e729d 823b653b08
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 14 11:45:51 2014 +0100

    Merge pull request #397 from crate/m/affected_rows
    
    support for building empty responses with affected rows

commit 823b653b088f5cd3f68038f7d247ad3192327e4f
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 14 11:32:39 2014 +0100

    fixup! fixup! fixup! fixup! support for building empty responses with affected rows

commit 4e33f6d9d0a402b2a76b2985216b0cf503bcd492
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 14 11:31:23 2014 +0100

    fixup! fixup! fixup! support for building empty responses with affected rows

commit e1d70e76f57734cd821f3e90fb29b809d4337214
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 14 11:21:48 2014 +0100

    fixup! fixup! support for building empty responses with affected rows

commit 7074035bb75ee6440ef7213bd944caa09e50d417
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 14 11:12:08 2014 +0100

    fixup! support for building empty responses with affected rows

commit 9b689de2669d85c853d01181a4d3c6dd6c21474b
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 14 11:07:43 2014 +0100

    support for building empty responses with affected rows

commit cc55d2e6792e1d71810c518fef81015b71537ba0
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Feb 14 10:44:39 2014 +0100

    analyzer: implemented LikePredicate

commit 61845e729d6088e46299755472aa537816155620
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Feb 14 05:52:48 2014 +0100

    moved pkvisitor to proper package

commit 5fe3423e9a389eb876f4bf14499f1bd0463e32c5
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Feb 14 05:47:12 2014 +0100

    added missing test annotation

commit e435d09771eb03726b14c4eed98b973ff8adfe8a
Merge: 631fbdb934 5641ff09ab
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Feb 13 22:17:05 2014 +0100

    Merge pull request #395 from crate/m/insert_type_conversion
    
    implicit type conversion on insert

commit 5641ff09ab0cc2d88eb8d2b5fd33733b6a7a084e
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Feb 13 21:54:28 2014 +0100

    fixup! implicit type conversion on insert

commit 631fbdb9340a48976b9fe47da33bb5ce25223224
Merge: 9d50aaa9bc b80ea7485f
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Feb 13 21:47:01 2014 +0100

    Merge pull request #392 from crate/dobe/primarykey
    
    Dobe/primarykey

commit b80ea7485f8ef7129d94143eed721c473a577426
Merge: e26bb2f4a6 9d50aaa9bc
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Feb 13 21:45:43 2014 +0100

    Merge remote-tracking branch 'origin/presto' into dobe/primarykey
    
    Conflicts:
            sql/src/main/java/io/crate/analyze/Analysis.java
            sql/src/main/java/io/crate/analyze/Analyzer.java
            sql/src/main/java/io/crate/analyze/StatementAnalyzer.java
            sql/src/test/java/io/crate/analyze/AnalyzerTest.java

commit 7a340d7b0e8f56a3eae6090383bbc82f9381fd67
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Feb 13 21:38:28 2014 +0100

    implicit type conversion on insert

commit e26bb2f4a648eb70180bd752569bdd94b59d5530
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Feb 13 21:07:20 2014 +0100

    removed unused func

commit 9d50aaa9bcf1c7984d3ecb8092317a86f504f772
Merge: c56b2c371f b39368cb12
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Feb 13 21:03:38 2014 +0100

    Merge pull request #394 from crate/m/object_literal
    
    implemented object literal

commit b39368cb1293834f48b85bde0229094bead36908
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Feb 13 20:03:05 2014 +0100

    implemented object literal

commit c56b2c371f9ba395336affe06d6b55265aceae4d
Merge: e3d3c6a144 3701a1d160
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Feb 13 20:07:51 2014 +0100

    Merge pull request #386 from crate/m/analyzer_insert
    
    support for insert statement in analyzer

commit 3701a1d16089fda897e0a523b03fd1681832ce9d
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Feb 13 11:36:07 2014 +0100

    support for insert statement in analyzer

commit 44cbac08baa85c096ee53419ed0808c29d9ea48f
Merge: 198a45f71d f4fd47a23b
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Feb 13 19:03:37 2014 +0100

    Merge remote-tracking branch 'origin/presto' into dobe/primarykey
    
    Conflicts:
            sql/src/main/java/io/crate/analyze/Analysis.java
            sql/src/main/java/io/crate/analyze/StatementAnalyzer.java
            sql/src/test/java/io/crate/analyze/AnalyzerTest.java
            sql/src/test/java/io/crate/planner/PlannerTest.java

commit e3d3c6a1446520527848e195880a7919c8b00335
Merge: f4fd47a23b 46172c53aa
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Feb 13 18:40:29 2014 +0100

    Merge pull request #391 from crate/s/es-delete
    
    implemented ESDeleteNode + Task

commit 46172c53aab03422660315678c8857e0fe813d28
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Feb 13 18:26:02 2014 +0100

    implemented ESDeleteNode + Task

commit 198a45f71de1591a138ccadd250cf8bdd78537aa
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Feb 13 18:30:43 2014 +0100

    implemented primary key literal extration in analyzer
    added primary key to tableinfo

commit f4fd47a23bbc6b6b38e757008cf415574c439bf8
Merge: 0802e7cc89 5a837890b1
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Feb 13 18:23:03 2014 +0100

    Merge pull request #390 from crate/m/parameters
    
    change numbered parameter rom :x to $x

commit 5a837890b14505b7e88801d389ef389ba029e8cc
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Feb 13 18:18:35 2014 +0100

    fixup! change numbered parameter rom :x to $x

commit 73ae85e4fe4d8d7ef9ac6dd9e0779f330c962c27
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Feb 13 16:05:55 2014 +0100

    change numbered parameter rom :x to $x

commit 0802e7cc89a6036f369b149df868b6ef06715050
Merge: 485ae7cc46 00888c5d2b
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Feb 13 17:51:19 2014 +0100

    Merge pull request #389 from crate/s/delete-by-query
    
    implemented ESDeleteByQueryTask/Node

commit 00888c5d2b33242be7e9eb7ba57f8ea6db5bb814
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Feb 13 16:32:42 2014 +0100

    implemented ESDeleteByQueryTask/Node

commit 485ae7cc46b50f7a4a666fff76afebe784b71cd7
Merge: 1715e8c1de bc5e8ff906
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 13 16:55:08 2014 +0100

    Merge pull request #387 from crate/l/rewrite-aggregation-distinct
    
    L/rewrite aggregation distinct

commit bc5e8ff9066d07d3af6deb1013792548118f9842
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 13 16:51:13 2014 +0100

    fixed discussed issues

commit 1715e8c1de8fa9e273cefbfc6a10c2d23e197047
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 13 16:17:32 2014 +0100

    make quoted idents case sensitive

commit 9d14404eacde71ff1587d62cba982cae80561c11
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 13 15:52:39 2014 +0100

    removed unnecessary comment

commit d51ee52497d56250b665fb986c7c58d73085efce
Merge: 04f083d6f0 7e43ee34f0
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 13 15:47:32 2014 +0100

    Merge branch 'presto' into l/rewrite-aggregation-distinct

commit 04f083d6f004125a90b57a58055c3590a8cc9b10
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 13 15:46:47 2014 +0100

    analyzer: rewrite function(DISTINCT x) to collection_function(collection_set(x))

commit 7e43ee34f0444cbac010a393e9ac6117ad7e886a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 13 14:55:46 2014 +0100

    analyzer: clarify NegativeExpression handling and add an additional test

commit af6f471f579899c82f89b3be4cd320aad3a30bd4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 13 14:42:33 2014 +0100

    analyzer: throw exception with better error message on invalid ordinal
    
    also add support for NegativeExpression in analyzer

commit 40ddb38a3fd8fb903acdefa796de0a056b0bb732
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 13 14:19:04 2014 +0100

    analyzer: allow group by on ordinal and columns that are not in the result column list

commit af2e601b0c562e2da1980b0615d381b858689b92
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 13 00:09:30 2014 +0100

    support "to partial" aggregations in the GroupingProjector

commit 84863fd7b81fb08124446b1995e643d88d32e489
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 13 12:08:14 2014 +0100

    analyzer: updateRowGranularity on tables
    
    this is necessary if the result columns don't contain references
    
    and should also correct the behaviour for
    
        "select sys.cluster.name from sys.nodes"
    
    (which currently doesn't resolve the reference corrently and
    needs another fix)

commit 2d797ab4ee11addd53240165ffa24feafe7a03de
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 13 11:49:08 2014 +0100

    planner: enable group plan for queries without aggregations

commit 090541175cf7cb0e02655a99ce9037f3918d20e3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 13 11:38:26 2014 +0100

    planner: build optimized plan for group by on granularity < doc

commit 2ebd65f0e1916af45c310ebe22b1040c6e26a4b4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Feb 13 00:09:30 2014 +0100

    integrate distributing collect operation

commit 0679fb7518d0c3c7c8ab3973bc61d591603f0aa0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 12 16:47:37 2014 +0100

    planner: support group by with aggregations

commit d42a8a5516e0fc9ff86a0a4c359884b16a0f0f5e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 12 15:20:39 2014 +0100

    set PlanNode ids and rowGranularity

commit 80769fbc6c534009587f6f869b70e6b03f29e6b4
Merge: 12966b25ea 3954d89618
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 13 09:15:53 2014 +0100

    Merge pull request #376 from crate/l/where-in-support
    
    L/where in support

commit 3954d89618702482a3b6553163832a76dfa83b36
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 13 09:13:13 2014 +0100

    added note in 'writeTo'

commit 8220b2e42afae698d6446f938b9bef48af912cbd
Merge: 7cf9d9e8ee 12966b25ea
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 13 08:57:24 2014 +0100

    Merge branch 'presto' into l/where-in-support

commit 7cf9d9e8ee29b0469b5ade0a4e6f58585d8b390f
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 13 08:57:02 2014 +0100

    fixed discussed topics. added (de)serialization test.

commit 12966b25ea5691e41f7cfd8b19f2269a45bf4f60
Merge: 81b2c2630d 11e41ec290
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Feb 12 17:47:54 2014 +0100

    Merge pull request #374 from crate/dobe/doctableinfo
    
    Dobe/doctableinfo

commit 11e41ec2906c55842ffd853d1b2f5de2cb5e60ec
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Feb 12 17:47:22 2014 +0100

    removed unused arg

commit 43c217a9b9710ebb2da4a03eeab199247cd01004
Merge: 4f71ca1bfc 81b2c2630d
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Feb 12 17:43:56 2014 +0100

    Merge remote-tracking branch 'origin/presto' into dobe/doctableinfo

commit 4f71ca1bfc112fda2f59d8f41fdfbd31e961ceeb
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Feb 12 17:42:28 2014 +0100

    more copyright

commit edf00d375acb162c9c0d58585b42f4ef3dcc4fa9
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Feb 12 17:40:51 2014 +0100

    consider transient settings in alias check
    added copyright

commit ec84c2a4e8f106fd76a418140c49221b51cfd4fc
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Feb 12 17:40:05 2014 +0100

    remove setliteral, was added by mistake

commit 81b2c2630db1aa1ea2f50f4724e437fa8487c1d5
Merge: 7167b65281 6713e64ee7
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Feb 12 16:45:18 2014 +0100

    Merge pull request #378 from crate/m/parser_update
    
    support for update statement in parser

commit 6713e64ee751dbef84319ad48774eee1739609f7
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Feb 12 16:25:01 2014 +0100

    support for update statement in parser

commit 7167b65281dbde05b4255c544fea92913fc6f3ab
Merge: a88b39b5b5 39e0087178
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Feb 12 15:43:27 2014 +0100

    Merge pull request #377 from crate/m/collector_fix
    
    collect fix

commit 39e008717827b866aeb8d9d2c24ae207ddbe32dd
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Feb 12 15:40:57 2014 +0100

    collect fix
    
    make SimpleOneRowCollector call startProjection on downStream projector
    some cleanups and naming stuff

commit 9add1e9c654629ba062ec29c395a9ccf9d5bac93
Merge: 7a23157038 a88b39b5b5
Author: Lukas Ender <hello@lukasender.at>
Date:   Wed Feb 12 15:21:34 2014 +0100

    Merge branch 'presto' into l/where-in-support
    
    Conflicts:
            sql/src/main/java/io/crate/analyze/StatementAnalyzer.java

commit 7a231570382cf60d21002c43c177ca0c38f5ca16
Author: Lukas Ender <hello@lukasender.at>
Date:   Wed Feb 12 15:16:46 2014 +0100

    basic in-support in where clause

commit a88b39b5b50c5aeb6cc04b3d24fd13323df511fa
Merge: 85ea87eee9 e67b403078
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Feb 12 15:14:35 2014 +0100

    Merge pull request #375 from crate/m/parser_delete
    
    support for delete statement in parser

commit e67b403078bced3aa6dbf8856bdffe82175991bd
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Feb 12 15:06:09 2014 +0100

    support for delete statement in parser

commit 85ea87eee938a34ca07911d0e3bce0fe5a6a572d
Merge: 5019c3cce3 e8bf72251d
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Feb 12 14:28:52 2014 +0100

    Merge pull request #373 from crate/m/parser_insert
    
    implemented sql-parser support for insert statement

commit cfbccc385be483f0aa5b4e0bcda496dd75c850db
Merge: 10b9135e3f 5019c3cce3
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Feb 12 14:21:42 2014 +0100

    Merge remote-tracking branch 'origin/presto' into dobe/doctableinfo

commit 10b9135e3ff472ee061901b6cecd419541cc0921
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Feb 12 14:21:16 2014 +0100

    DocTableInfo implementation

commit d1e0321b793198f8c51d05c5ba30f2c7212c0ce7
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Feb 12 14:20:56 2014 +0100

    fixed fqn

commit e8bf72251d710ec5ff75a89a0e40b9261a12aa51
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Feb 12 14:14:06 2014 +0100

    implemented sql-parser support for insert statement

commit 5019c3cce3a0baf685043ffc6c5c7c53df489a82
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 12 14:11:11 2014 +0100

    Planner: set input/outputTypes on PlanNodes

commit ed857f4373e0ac92ae5d59917d4b0fd883c1220a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 12 12:36:01 2014 +0100

    add output and inputTypes to planNodes
    
    (currently only for global aggregation)

commit 75d5795827aea8a125a4f1acfca5e4f3907db711
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Feb 12 11:34:58 2014 +0100

    removed already done TODO

commit 02c750264bee62211bd7018e66cd11c3027115eb
Merge: c49e3d231c c366a5af62
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Feb 12 11:30:45 2014 +0100

    Merge pull request #369 from crate/s/analyzer-parameter-substitution
    
    added parameter support to analyzer (convert parameter to literals)

commit c366a5af625c764564529689971c0c514dfe5e90
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Feb 12 10:54:46 2014 +0100

    added parameter support to analyzer (convert parameter to literals)

commit c49e3d231cb391f5ccf093e38a35792e443018a6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 12 11:11:07 2014 +0100

    convert BytesRef to String before creating the SQLResponse

commit e4a6a21ec6eb9da0540a55ebb547bd625ae94453
Merge: 382b52bdc6 0005aff909
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Feb 12 11:10:37 2014 +0100

    Merge branch 'presto' of github.com:crate/crate into presto

commit 382b52bdc6127664e7826400b63b4560a21cc313
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Feb 12 10:59:12 2014 +0100

    updated comment on normalizer usage as ES query builder

commit 0005aff909b4488dc69dbed45ad3c6471beb0c90
Merge: 5b06cd5a84 d88a1692c1
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Feb 12 09:54:30 2014 +0100

    Merge pull request #367 from crate/m/uptodown
    
    rename upStream to downStream in projectors

commit 5b06cd5a840ca3ca0d3d9ba77ea59d7b60c7fe63
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 11 18:37:13 2014 +0100

    activate new task based execution in TransportSQLAction

commit d88a1692c1420bcc0a5739c2236a16b1f09e8641
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Feb 12 09:08:46 2014 +0100

    rename upStream to downStream in projectors

commit 4c7439077e3f6219245380706e962aed97be52df
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Feb 11 23:01:46 2014 +0100

    first draft implementation of IntegerSetLiteral and LongSetLiteral.

commit 39926eb162626af46a0efc99a7dcc65c3313e92e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 11 21:15:55 2014 +0100

    add offset support to the analyzer

commit b9e45773be419867de4b988494c79669306f79cd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 11 21:00:48 2014 +0100

    analyzer: expand * to all columns of a table

commit 2b7fb0b2dcf6a9a99dec1fdc117b961cb59e5658
Merge: 717a4075c8 ef043a144b
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Feb 11 18:15:15 2014 +0100

    Merge pull request #364 from crate/m/localcollecttask
    
    LocalCollectTask

commit ef043a144bd88227c222f9f8985ceef96f6248a6
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Feb 11 17:55:39 2014 +0100

    support LocalCollectTask in Job creation

commit 717a4075c80251c9ba72ad9799a1b14898f1afd9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 11 16:36:29 2014 +0100

    set outputNames in the Analyzer

commit 81ba3e0fc9ce31586e6667ae0796abe3562386c6
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Feb 11 17:55:05 2014 +0100

    adapt LocalDataCollectOperation to also run local collect on cluster level

commit 0c353879b6297198acbb883c1c80f8c90990925f
Merge: 236b094292 2149f0e4a3
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Feb 11 17:04:12 2014 +0100

    Merge pull request #362 from crate/l/rearange-datatypes-lists
    
    L/rearrange datatypes lists

commit 2149f0e4a3194dfb4efde0eb91afa442c3e58548
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Feb 11 17:01:25 2014 +0100

    fixed imports and newline

commit 7d8e618c87528fb257a6988bbf761e8619022648
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Feb 11 16:51:51 2014 +0100

    fixed broken interfaces

commit 3c04d4e4262fabc66144e4b216024138bdd1c7c6
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Feb 11 16:35:05 2014 +0100

    fix bug in collect operation when where clause is false

commit cea57790d4ec7b408eea43505cc8537d3b2c6817
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Feb 11 16:33:49 2014 +0100

    implemented LocalCollectTask

commit 236b0942922c0262ee25d02772ba00f4743d90ab
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 11 16:33:20 2014 +0100

    fix es/upstream commit pointer

commit bfffb6762bffe31b5f1293b4e55aea6686c3a9fc
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Feb 11 16:29:26 2014 +0100

    use ImmutableList

commit b7f3a9ae4d6d39ce1be708118bf5436051e9f0f8
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Feb 11 16:10:38 2014 +0100

    rearrange lists in datatypes.

commit f802737dd8a4eb3a501820ef9fd68ffc3d007833
Merge: 377f3b6995 1310716e7b
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Feb 11 15:03:58 2014 +0100

    Merge pull request #358 from crate/s/operator-implicit-cast
    
    added implicit type cast of operator literal inputs

commit 377f3b69959444628a40e4b3a45cc5a5d181564f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 11 15:05:30 2014 +0100

    add rowGranularity check to AnalyzerTest

commit 1310716e7b7b299275ea2ba8c0f959ae8b700c32
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Feb 11 11:33:30 2014 +0100

    added implicit type cast of operator literal inputs

commit c79e881710e8adb7a4f55c0e9ec7af95656d9566
Merge: fc5a416b53 a03570d64e
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Feb 11 14:58:48 2014 +0100

    Merge pull request #359 from crate/m/distributing_collect
    
    distributing collect operation

commit a03570d64efc3ee382ef43011bbd0d37d65d186c
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Feb 11 14:34:39 2014 +0100

    bucketingiterator

commit fc5a416b539cfc481f4dc8a697915fbbffd45c70
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 11 13:30:49 2014 +0100

    implement newjob for MergeNode, CollectNode and ESGetNode

commit e37717f13e786b84e1a82b0a922b0d5159045462
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 11 13:37:02 2014 +0100

    fix NullPointerException in ColumnIdent serialization
    
    broke MergeNodeTest and GroupProjectionTest

commit 5829bd987444d394e0b1127a8b36c58de494de46
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Feb 10 16:35:35 2014 +0100

    distributing collect operation

commit 2038359af8f1e9da22dd10700b294364677290a4
Merge: 351d2da0b9 a68f805cc9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 11 11:40:20 2014 +0100

    Merge branch 'j/distributed_merge' into presto

commit a68f805cc98a105d23170b63e26aed64b71b1494
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 11 11:15:46 2014 +0100

    various smaller cleanups:
    
     * change outputs() interface in projections
     * handle context removal in the DistributedResultRequestHandler
     * use DataType.NULL instead of null to indicate aggregationStates

commit 351d2da0b94a78f3c4f6a014f8e547418e8f5e60
Merge: 29cff410b2 9ad5abc37f
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 11 09:57:04 2014 +0100

    Merge pull request #354 from crate/dobe/tableinfo
    
    Dobe/tableinfo

commit 9ad5abc37fb15525c3aebc0ddae7a1c235e66142
Merge: a4c3112b6b 29cff410b2
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 11 09:56:28 2014 +0100

    Merge remote-tracking branch 'origin/presto' into dobe/tableinfo
    
    Conflicts:
            sql/src/main/java/io/crate/operator/reference/sys/cluster/ClusterIdExpression.java
            sql/src/main/java/io/crate/operator/reference/sys/cluster/ClusterNameExpression.java
            sql/src/main/java/io/crate/operator/reference/sys/node/NodeHostnameExpression.java
            sql/src/main/java/io/crate/operator/reference/sys/shard/ShardRelocatingNodeExpression.java
            sql/src/main/java/io/crate/operator/reference/sys/shard/ShardStateExpression.java
            sql/src/main/java/io/crate/operator/reference/sys/shard/ShardTableNameExpression.java
            sql/src/test/java/io/crate/operator/operations/collect/DocLevelCollectTest.java
            sql/src/test/java/io/crate/operator/reference/sys/SysShardsExpressionsTest.java
            sql/src/test/java/io/crate/operator/reference/sys/TestSysNodesExpressions.java

commit bfa6c9aa81cfd779203f5d4b7472492aa6d74a72
Merge: 291616effa 29cff410b2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 11 09:37:03 2014 +0100

    Merge remote-tracking branch 'origin/presto' into j/distributed_merge

commit a4c3112b6b3826ba0581b88117c3493e618d3eff
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 11 08:34:14 2014 +0100

    node expressions now use the same pattern for table info as shard expressions

commit 29cff410b2e82a8b3df8b19c763dc9fe02f90160
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Feb 10 20:13:57 2014 +0100

    fixed bytesref sys expressions

commit 291616effa1c5a00ed700f3a29b0ea31660f1781
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 10 17:11:54 2014 +0100

    remove unused class

commit c9063215a1efaa534b7be7f34a6d5270cf0fa594
Merge: eedc94fe62 0f49c3b67c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 10 17:07:33 2014 +0100

    Merge remote-tracking branch 'origin/presto' into j/distributed_merge

commit eedc94fe6284e758162193e5de9d1e1a69b0bd77
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 10 17:06:30 2014 +0100

    fix DistributedMergeTaskTest

commit cbd1d18b2cbb7d9dac7de094b357ebb3d538f7ad
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 10 17:04:42 2014 +0100

    streamlined sys cluster expressions and module locations

commit 0f49c3b67cbf82f8c27c514a974c54d44d38e1b6
Merge: 1370d79fa8 4f154e0a8b
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Feb 10 17:02:00 2014 +0100

    Merge pull request #352 from crate/s/sys-expressions-bytesref
    
    using BytesRef instead of String at all sys expressions

commit 4f154e0a8bd28ad417137cf507ca57a14e953f66
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Feb 10 13:50:08 2014 +0100

    using BytesRef instead of String at all sys expressions

commit 1370d79fa80d84282b312f5a56172d21bf635534
Merge: f3a799014c 0b1bdee26a
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Feb 10 17:00:06 2014 +0100

    Merge pull request #357 from crate/m/fix_gathering_topn_projector
    
    fix gathering topn projector with 1 row input

commit 0b1bdee26ae38c9b61dbccd0d14d276663e07e51
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Feb 10 16:54:31 2014 +0100

    fix gathering topn projector with 1 row input

commit f3a799014ce3edcfc76bae1b8424a7b7b29c0f7d
Merge: cbe2dc144d 59630a4ded
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Feb 10 16:53:32 2014 +0100

    Merge pull request #356 from crate/s/exclude-junit
    
    excluded junit dependency, use custom junit dep instead

commit 59630a4deda331b9d024d90d75c3dea49e340f13
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Feb 10 16:38:26 2014 +0100

    excluded junit dependency, use custom junit dep instead
    
    same with org.hamcrast

commit 2f704b59a38941ac89a1bde125261a8fe9ab87c1
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 10 16:29:54 2014 +0100

    cleanup

commit 4a219b6fdb97021e2de1d66d3418d6f97366f0ce
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 10 16:25:30 2014 +0100

    moved immutabletableinfo to testing

commit 4e7f4d5d9df6d6f3a911a0d6263529e10a3071b3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 7 15:59:39 2014 +0100

    implement DistributedMergeTask

commit c8818dbafc0287b91caf86b582b1780693e1a128
Merge: 4889d74472 cbe2dc144d
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 10 15:27:38 2014 +0100

    Merge remote-tracking branch 'origin/presto' into dobe/tableinfo

commit cbe2dc144d36a4d6f79e05eff2cd261b82a48d01
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 10 15:25:43 2014 +0100

    removed attic test

commit 4889d74472666bb24ecdc98b20ad30e9b8ab558c
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 10 15:25:43 2014 +0100

    removed attic test

commit 950e5871ebb160dde087ce9f4e8e09910888d216
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 10 15:25:27 2014 +0100

    use valid symbols in tests

commit 4dfd61bd549683089c7cd0873476b4d437802fca
Merge: de78d62bb2 32d5ee6b1b
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 10 15:04:26 2014 +0100

    Merge remote-tracking branch 'origin/presto' into dobe/tableinfo

commit de78d62bb2df0a44e84c3b14dc4348f59fd6eddc
Merge: 5a1c8ad706 6a3eea106f
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 10 15:00:49 2014 +0100

    Merge remote-tracking branch 'origin/presto' into dobe/tableinfo
    
    Conflicts:
            sql/src/main/java/io/crate/operator/reference/sys/node/NodeIdExpression.java
            sql/src/main/java/io/crate/operator/reference/sys/node/NodeNameExpression.java
            sql/src/test/java/io/crate/operator/operations/collect/DocLevelCollectTest.java
            sql/src/test/java/io/crate/operator/reference/sys/TestSysNodesExpressions.java

commit 32d5ee6b1b53456fa65b95a72a755a80a19e11c0
Merge: 6fcb78bfa7 04afef3623
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Feb 10 14:50:30 2014 +0100

    Merge pull request #351 from crate/m/iter_projectors
    
    add iterator interface to projectors

commit 04afef3623835865d2cdf19f93068a146165721a
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Feb 10 13:06:46 2014 +0100

    add iterator interface to projectors

commit 6fcb78bfa73705ad9cc51109ac9379292dc4d9ee
Merge: 6a3eea106f 69aa775fb7
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Feb 10 13:26:11 2014 +0100

    Merge pull request #349 from crate/s/fixed-analyzer-creation
    
    fixed analyzer creation

commit 69aa775fb72e945e57561a534e35408723bef35f
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Feb 10 12:50:32 2014 +0100

    fixed analyzer creation

commit 6a3eea106fb03add311801d84c58ec19ec3831e8
Merge: a5259e19b2 f2e345f4fa
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Feb 10 11:30:18 2014 +0100

    Merge pull request #347 from crate/m/test_fixes
    
    fixing tests

commit a5259e19b2385774edf6486efbf4b443e9c5c19f
Merge: 9d81b3dac8 b3be82f51f
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Feb 10 11:29:55 2014 +0100

    Merge branch 'presto' of github.com:crate/crate into presto

commit 9d81b3dac8eb0605dcb1efb823b4ed22c3cd1b34
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Feb 10 11:29:37 2014 +0100

    fixed evaluating normalizer tests

commit b3be82f51f76390145dfd7e2af0027fe6c475772
Merge: db4abb507c a7c503f8ba
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 10 11:28:26 2014 +0100

    Merge branch 'presto' of github.com:crate/crate into presto

commit 5a1c8ad706d727b84773ab4e184434f8f6752d07
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 10 11:28:10 2014 +0100

    wip

commit 44f40738e9b1142bfd482d75089f79145d83753c
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 10 11:27:48 2014 +0100

    wip

commit f2e345f4fa54a938173f3b5078f41fc45b61e03c
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Feb 10 11:26:37 2014 +0100

    fixing tests

commit db4abb507c5abbe1427b43984f961be552eb5b0a
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Feb 10 11:26:25 2014 +0100

    fixed serialization of collect node

commit a7c503f8ba5038cab803ec3f23af9500193e2bfc
Merge: ab60352bbf de3e3be985
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Feb 10 10:41:09 2014 +0100

    Merge pull request #346 from crate/s/where-swap-operator
    
    swap operator if left is not a reference while analysing

commit de3e3be985a776e18db84d4e23aa271872cd0ac2
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Feb 10 10:25:15 2014 +0100

    swap operator if left is not a reference while analysing
    
    removed possible function swapping from EvaluatingNormalizer

commit ab60352bbfce36dde27734579a3619b3fdec9d3e
Merge: 44bbbb9e7c 4bb91803af
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Feb 10 09:11:35 2014 +0100

    Merge pull request #345 from crate/l/offset-support
    
    sql parser now supports 'offset'.

commit 4bb91803afdd32e5eb93ec100e80b045524bd07f
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Feb 10 09:10:14 2014 +0100

    fixed naming

commit bb8817f83c432be9ae8e6eff029f8012c160c139
Author: Lukas Ender <hello@lukasender.at>
Date:   Sun Feb 9 22:23:05 2014 +0100

    sql parser now supports 'offset'. 'limit' is not required when adding 'offset' to a statement.

commit 44bbbb9e7cda1e2697a4adac0c70fd413314f85e
Merge: 798ae6244e 4f5892b57d
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 7 15:31:45 2014 +0100

    Merge pull request #343 from crate/m/localmergetask
    
    local merge task

commit 4f5892b57d9eb3fc483d13f9a87370051c0bad0a
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 7 14:51:45 2014 +0100

    local merge task

commit 798ae6244e5062dbac66e6f630cf1dda1362a72a
Merge: 8d63a2f15e 26ee8315e7
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Feb 7 14:28:21 2014 +0100

    Merge pull request #340 from crate/l/fix-stringstobytesref
    
    fix: String to BytesRef

commit 26ee8315e7d1503046745bf6bfb83be2c827dd7b
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Feb 7 14:03:15 2014 +0100

    - NodeId and NodeName now use Discovery to get the requested information.
    - NodeName uses BytesRef instead of String now.

commit 8d63a2f15efb199c934f75e9adacafb3a7d8dea6
Merge: 04e6f2ba2f 7b868c1356
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 7 12:42:00 2014 +0100

    Merge pull request #334 from crate/m/fix_cluster_routing
    
    fix routing service test

commit 7b868c1356558c6409d665f7cde1f79dbf61b6fd
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Feb 5 18:00:10 2014 +0100

    fix routing service test

commit 04e6f2ba2f48e5f045a681d50be581b72bedda6c
Merge: 0de11aa2a7 052388fd78
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 7 12:19:40 2014 +0100

    Merge pull request #342 from crate/m/mergeop
    
    merge operation

commit 052388fd784ef7476111f9cf2f898a7ded4da596
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Feb 7 09:30:18 2014 +0100

    merge operation

commit 0de11aa2a72d5166cf5c1322e423662f16e04d22
Merge: fd158b8866 59be3a9362
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Feb 7 11:39:33 2014 +0100

    Merge pull request #338 from crate/s/where-clause-analyzer
    
    added where clause analysis

commit 59be3a93622a21d90a74fe28fc8440bb359678d4
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Feb 7 11:36:45 2014 +0100

    Fixup! added where clause analysis

commit 1c96b0215040b81289224244974e861c3e71ad4e
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Feb 7 11:34:18 2014 +0100

    Fixup! added where clause analysis

commit fd158b8866fd069956a1f6a5a6a8c7c7b6f382d4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Feb 7 11:31:20 2014 +0100

    add MergeOperation interface

commit 0c99f330b5fa6b9ad44025c26cdc566cb852d68e
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Feb 7 11:28:14 2014 +0100

    Fixup! added where clause analysis

commit 64d45b514ef9b795a50fc7daeb396e45a9c6fd18
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Feb 7 11:15:20 2014 +0100

    fix: String to BytesRef

commit 62f62a08597b7ca27df25dc1c84db17ad745e22a
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Feb 7 10:48:28 2014 +0100

    organize imports

commit a90a04a87cb08eb0da593cad0ccf9121ddb51f9a
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Feb 7 10:46:36 2014 +0100

    implemented sys.node.id expression

commit 1daf05629197d3bebd887cef8e7f726f2f4b22f4
Merge: 1611ec2af6 e060d14dab
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Feb 7 09:50:03 2014 +0100

    Merge pull request #336 from crate/dobe/downstreamnodes
    
    add downstreamnodes info to collectnode

commit 6726d8f4a4cffa2d4683613326dab19f0d417404
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Feb 4 21:00:34 2014 +0100

    added where clause analysis

commit 1611ec2af6f83f750c1dda0c8d85d9188d7bc391
Merge: 9d20077879 c8e0d764ad
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Feb 7 09:45:59 2014 +0100

    Merge pull request #329 from crate/s/fix-collec_set-test
    
    fixed collect_set aggregation test

commit c8e0d764ad06bebd021cbbb1fb009f308df21f03
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Feb 4 12:22:00 2014 +0100

    fixed collect_set aggregation test

commit 9d2007787912c4c986c353520d02404db0d4c9a9
Merge: 60072e2ad7 84f68871bb
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Feb 7 09:23:54 2014 +0100

    Merge pull request #337 from crate/l/shards-table-name-expression
    
    L/shards table name expression

commit 84f68871bbb512ece9775ecce0eb4e7605c44688
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Feb 7 09:22:10 2014 +0100

    use ShardTableNameExpression.COLNAME

commit 7fe71c6c5d4f5541e88a6b747fd8fa9a411765b4
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Feb 7 09:20:23 2014 +0100

    Revert "updated CHANGES"
    
    This reverts commit ea42d164d620b687a95a6b3bbaea12f9d7ae5db1.

commit ea42d164d620b687a95a6b3bbaea12f9d7ae5db1
Author: Lukas Ender <hello@lukasender.at>
Date:   Fri Feb 7 09:05:12 2014 +0100

    updated CHANGES

commit e060d14dab91f72f096366aaad11b8aa0f4de6e2
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Feb 7 07:16:27 2014 +0100

    add downstreamnodes info to collectnode

commit cfe641699cd3a0c0c394ba82d047f43039b70446
Author: Lukas Ender <hello@lukasender.at>
Date:   Thu Feb 6 19:51:37 2014 +0100

    implemented table name expression

commit 60072e2ad70db3d994f361a69667ff6c6d0b9907
Merge: 6640f9da9a e0bf685f90
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Feb 5 18:05:49 2014 +0100

    Merge pull request #333 from crate/m/use_streamcompute
    
    use stream computing feature in TransportCollectNodeAction

commit e0bf685f90e583cec8ca3d01844bb7e96477c36d
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Feb 5 17:56:17 2014 +0100

    use stream computing feature in TransportCollectNodeAction

commit 6640f9da9a241aac5a04b692db0c1a2f86894a70
Merge: d035dfffd4 4fd324f8e5
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Feb 5 13:43:37 2014 +0100

    Merge pull request #332 from crate/m/plannode_streamer
    
    compute streamers for collectnode and mergenode

commit 4fd324f8e5665f7b2ff11ed9e9edc1e8f6c9bf8c
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Feb 5 09:23:26 2014 +0100

    compute streamers for collectnode and mergenode

commit d035dfffd4154dba209c87824543c230c1f5784e
Merge: 2d338e1859 1018063c30
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Feb 5 00:07:01 2014 -0800

    Merge pull request #331 from crate/dobe/esnodes
    
    es nodes are now based on new plans

commit 1018063c30d12547621d36df35fd2cc7feafe2aa
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Feb 5 09:06:20 2014 +0100

    removed unused overrides

commit fcf33e5c0524315aa18e6c0ba763792bd1d93e10
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Feb 5 09:04:18 2014 +0100

    removed comment

commit 823ed70c3cba0be0867b73812d741f70a4e523d3
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Feb 5 09:00:27 2014 +0100

    es nodes are now based on new plans

commit 2d338e185990a4a0eba081ab5abde1845ebc7924
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Feb 5 07:22:34 2014 +0100

    add AggregationProjector

commit a4e1971acf805bd3b6c313f56ce2ac69750f66c6
Merge: 9a221f666f 0cbe84b927
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Feb 4 11:24:20 2014 -0800

    Merge pull request #328 from crate/l/removedocsoverview
    
    removed 'docs overview' as this is not part of the software.

commit 0cbe84b9270dc8be1944775d110b17f563d7a671
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Feb 4 20:23:49 2014 +0100

    updated changes

commit e5151015c77344ea81e0c3096181247456f78b31
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Feb 4 20:22:53 2014 +0100

    updated changes

commit d45fa0b054054733907db301262e8b851f37e552
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 4 19:00:28 2014 +0100

    change GroupingCollector to GroupingProjector and extends Projections visitor

commit 3dba7b9689b63861cb398d0c7ca09da7ae5aba3d
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Feb 4 18:50:39 2014 +0100

    removed 'docs overview' as this is not part of the software.

commit 9c6fb718e6e16bca34cdb4bc5c49cecceb6f4960
Merge: fd5f621626 18e5e4828b
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Feb 4 09:20:59 2014 -0800

    Merge pull request #326 from crate/m/topn_projector
    
    topn projectors impl

commit 18e5e4828b2c6e52beaee7c4f6648d259c46c6ea
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Feb 4 14:14:56 2014 +0100

    topn projectors impl

commit fd5f621626f2474801a969a93ad1bc1497cd673b
Merge: 38e856fc37 f48d0e72d5
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 4 07:36:40 2014 -0800

    Merge pull request #324 from crate/dobe/moreplans
    
    Dobe/moreplans

commit 38e856fc37b6a9220c1d1430b29ffd5c98472046
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 4 16:15:50 2014 +0100

    extend AggregationCollector to support partial to final aggregation

commit 9a221f666f12eeb45768e13b64dfcd65133c1652
Merge: 0cc545bf69 11c567d467
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Feb 4 07:19:51 2014 -0800

    Merge pull request #323 from crate/l/docsoverview
    
    L/docsoverview

commit 11c567d467d0c3165566cb98fe42c2533fa5d5b6
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Feb 4 16:17:36 2014 +0100

    naming: replaced 'Installation' with a more specific heading

commit f48d0e72d50412c5709519133bd53a5ce0457c63
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 4 15:47:15 2014 +0100

    shard collect plan and ESSearch plan

commit eaeff99544dabc6c2f9ce9539072ee393c51bb88
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 4 15:46:17 2014 +0100

    nice tostring

commit db1f579fc4e3fcffe2feaf82303f239f9128fd26
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Feb 4 15:22:02 2014 +0100

    added /docs/eggs to gitignore

commit 3ee91a444f6991264fdb479834bd6873d661b1f9
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Feb 4 15:12:59 2014 +0100

    updated changes

commit bb8074f21109d82f2b88f1ea84fd42297a61d5fa
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Feb 4 15:01:12 2014 +0100

    added docs overview.

commit 44c126490379d65dffa50edf0bd128b6b3298a30
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Feb 4 14:59:35 2014 +0100

    added quick guide. this is basically the text from the readme.rst

commit 8c4de3b718b5d88b439fefbbb9a6988bd288f2e9
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Feb 4 14:57:23 2014 +0100

    readme: fixed wrong naming

commit 8479e415cef0d24b99ccf307d3d1b735a516e526
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Feb 4 13:36:56 2014 +0100

    extend ImplementationSymbolVisitor to support InputColumn

commit e188f87b244b911231e3552f49c8f81d9bb02946
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 4 11:12:30 2014 +0100

    add outputs to topnprojection

commit b24a9c068c7b3930f9eb6af2aa2bd9abca8f263b
Merge: 7170a7e8c0 8606f183c9
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 4 10:46:08 2014 +0100

    Merge branch 'presto' of github.com:crate/crate into presto

commit 7170a7e8c0751b59d42502b8bd4b339b136f9f45
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 4 10:45:49 2014 +0100

    some todos for where clause

commit 8606f183c9e9f249a85c21d3cddfa414ebd8d364
Merge: f1ade9dfec 25c25e8562
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Feb 4 00:27:20 2014 -0800

    Merge pull request #316 from crate/m/doc_level_collect
    
    doc level collect

commit 25c25e85629b9fa93108c1424d80fd5bb1359ef8
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Feb 3 09:21:55 2014 +0100

    doc level collect

commit bb51897f589bec9f1b8c12996f34777d77c87e6e
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Jan 31 13:54:00 2014 +0100

    simple node- and shard-level collect using Projections

commit f1ade9dfec8970a1c47f0d084b912fe89bc7cd8e
Merge: af1f6558eb 6ac95c3f30
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 4 00:18:15 2014 -0800

    Merge pull request #321 from crate/dobe/globalaggplan
    
    first plan generation, currently for global aggregation only

commit 6ac95c3f306503469b2fa3d49a281da308598040
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 4 06:50:45 2014 +0100

    first plan generation, currently for global aggregation only

commit af1f6558ebe0c447071c9e6db60eb180dd188a90
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 4 06:45:45 2014 +0100

    make input column comparable

commit 5d217893a29e205846feddc02a840ab0f726aae4
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 4 06:45:31 2014 +0100

    fixed hashcode in reference

commit 7c8782d0204be21076bd9873f90c8e7d2c032ca3
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 4 06:44:11 2014 +0100

    removed comments

commit 1c78dd6f238a405bc6a0de77e883327c4a3b045a
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 4 06:43:28 2014 +0100

    fix part handling in table ident

commit fcae63fff7721831254af949b4863e19e81ae650
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Feb 4 06:43:12 2014 +0100

    fixed tostring

commit 229e536b682f7df994fbc661f865535d0f24f5a3
Merge: dbd12d46d6 68fb153230
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Feb 3 14:54:41 2014 -0800

    Merge pull request #320 from crate/s/collection-functions
    
    added CollectionCount and CollectionAverage functions

commit 68fb153230d4252608d45c0495a58c1a594e5ed0
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Feb 3 22:00:46 2014 +0100

    added CollectionCount and CollectionAverage functions

commit dbd12d46d6baf831b2732eeca0646aa2d8f96d75
Merge: 4c33dca81f df43310282
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Feb 3 12:59:51 2014 -0800

    Merge pull request #319 from crate/s/shard-reference-resolver
    
    implemented shard based reference resolving

commit df43310282a954dc5836fa6011c4455f28940f6b
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Feb 3 19:36:24 2014 +0100

    implemented shard based reference resolving

commit 4c33dca81f4d384915bab38416d2b2e4999fca4f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 3 17:55:37 2014 +0100

    add Match ScalarFunction and impl converter
    
    (to build elasticsearch match xcontent query.)

commit 35cbe75ac0f9992fc0579eac6a424d78239d7fb1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Feb 3 15:03:40 2014 +0100

    implement RoutingsService

commit 5701dd092ad7ea495ef2a4e658856f07ac8132bb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 31 23:24:24 2014 +0100

    add ESGetTask to execute Elasticsearch GetRequests

commit 35afc30121f86708edc5a949f0f5379d26b3818d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 31 16:18:27 2014 +0100

    executor: implement newjob for ESSearchNode

commit 50d9d2c1ac0d38d38df3de0781a16bf9b2a4c6f8
Merge: e967cc9ac9 0cc545bf69
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sun Feb 2 00:36:43 2014 +0100

    Merge remote-tracking branch 'origin/master' into presto
    
    Conflicts:
            sql/src/main/java/org/cratedb/action/sql/analyzer/ClusterUpdateCrateSettingsAction.java
            sql/src/main/java/org/cratedb/action/sql/analyzer/TransportClusterUpdateCrateSettingsAction.java
            sql/src/main/java/org/cratedb/plugin/SQLPlugin.java

commit e967cc9ac9accce45b7815e79961aa962a4a0f03
Merge: 519e5e0827 29a6374c25
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sat Feb 1 05:31:20 2014 -0800

    Merge pull request #313 from crate/dobe/projectedplan
    
    Dobe/projectedplan

commit 29a6374c25f0ad3fc1a40cab4a028932097a4840
Merge: 3456d284be 519e5e0827
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Sat Feb 1 14:26:54 2014 +0100

    Merge remote-tracking branch 'origin/presto' into dobe/projectedplan

commit 519e5e0827be4d7a9e19c39994d20796aa3a960e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 30 17:47:53 2014 +0100

    add ESSearchTask/Node and XContentGenerator

commit 3456d284be594037c57a01accb5ccf6fdb3aa8da
Merge: 026198ec58 c898b75700
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Jan 31 17:24:26 2014 +0100

    Merge remote-tracking branch 'origin/presto' into dobe/projectedplan

commit 026198ec584d1f0cec59159fd42d2768a094b985
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Jan 31 17:23:36 2014 +0100

    outputTypes are provided as members

commit c898b757002e393c21c9dfcb4cdc39996df6d43b
Merge: 44183062fe 4bb73b314e
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 31 08:21:06 2014 -0800

    Merge pull request #310 from crate/s/collect_set-aggregation
    
    implemented CollectSetAggregation

commit 4bb73b314e15e84ae1d108ab7753bbdd5d08a85a
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 31 09:58:51 2014 +0100

    implemented CollectSetAggregation

commit aefd875fdd150694b740101587bbdc893f04a803
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Jan 31 16:44:40 2014 +0100

    basic plan node classes

commit c35966d724de7e3a0c98f289c1c8b5b01f18ef2f
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Jan 31 16:41:54 2014 +0100

    deprecate old plan nodes

commit 44183062feab978825653f949d09c6fc78d2e87a
Merge: d536b30f33 1cc8bef357
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Jan 31 03:22:28 2014 -0800

    Merge pull request #312 from crate/dobe/projections
    
    messenger classes for projections

commit 1cc8bef3578018953d3d728931f2e3ba9c8ba62b
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Jan 31 06:42:58 2014 +0100

    messenger classes for projections

commit d536b30f33d87730d18bcbc47b6b9a7101713489
Merge: 9671a4e1a2 d8fafd50ff
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jan 29 09:00:52 2014 -0800

    Merge pull request #307 from crate/m/shard_topn
    
    implemented topN (limit, offset, order_by) collect on shard and node level

commit d8fafd50ff755b50201608bdc4f9f40f4b5b09aa
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jan 29 17:33:20 2014 +0100

    implemented topN (limit, offset, order_by) collect on shard and node level

commit 9671a4e1a2394c242cbf22e0b27372e3649b74aa
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 29 17:00:38 2014 +0100

    move LuceneQueryBuilder to lucene package

commit 9186d2f71b74a4fe6271d5687f0bfcfd00d782f6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 29 16:40:17 2014 +0100

    add IsNullOperator and IsNullQuery support to LuceneQueryBuilder
    
    to support "where x is null"

commit 66af7fd73aa5f497f0c3730a9e479e2ce301b653
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 29 15:27:05 2014 +0100

    add a NotOperator to the new LuceneQueryBuilder
    
    to support stuff like where not name = 'x'

commit 0cc545bf69541d620508bc8a0665998c420dc448
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 29 14:24:53 2014 +0100

    prepare release 0.22.2

commit 95a1f082b8b36f246eabbc22dfbb1f7864329315
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 29 13:50:12 2014 +0100

    don't load BlobModule on client node
    
    loading the BlobModule broke the _search_into functionality
    of the inout module as the TransportClient couldn't be
    created.

commit 93921997e73625966377d182946ff5743bc449a5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 29 11:05:18 2014 +0100

    add LikeOperator support to the LuceneQueryBuilder

commit 0a3db17ee561afdeb4741b2840de879cdd5f0449
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jan 29 10:48:22 2014 +0100

    sql: operators: add LikeOperator and simplify EqOperator

commit 9360dc70acefead1ea01c286a8b344e6403ba965
Merge: af15ccf796 1e5548f2a9
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Jan 28 09:50:35 2014 -0800

    Merge pull request #302 from crate/m/future_collect
    
    changed collect interface to use listenablefutures

commit 1e5548f2a9a5874ef509ef884a4e226074062a62
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Jan 28 17:31:34 2014 +0100

    changed collect interface to use listenablefutures

commit af15ccf796fb9938ba0270f3696d3b88cb34933c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 28 16:47:36 2014 +0100

    extend the function tree normalizer to also swap literal/reference symbols

commit 85f7dc8692678ebf9f61b9594b18f4a28efadb1f
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Jan 28 17:03:45 2014 +0100

    fix npe caused by uninitialized clusterstate

commit 7164445920f92eb4f2ddf2e3b025b9461d468c6a
Merge: 90cb67804f cd385b3ee0
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Jan 28 07:25:54 2014 -0800

    Merge pull request #298 from crate/m/shard_collector
    
    simple concurrent shard collect

commit cd385b3ee0045ad5d0714e2bf1a55baa35da9f5e
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Jan 28 16:02:38 2014 +0100

    shard collect: fixes, cleanups, cosmetics

commit 0c01569be453e3ead63e1e3ea2195fa858c22056
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Jan 28 11:26:52 2014 +0100

    fix crate.io tests

commit dfcae16f561bfece4121276656189df8a8dcabfb
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Jan 28 10:42:46 2014 +0100

    simple concurrent shard level collect

commit 90cb67804f5ebc59030b8a81e19115a6a09b8f1c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 28 15:58:34 2014 +0100

    extend LuceneQueryBuilder to support byte/short and boolean

commit c5e2fa1f8cbb199170e525596d66f48d176f6851
Merge: 6db547f827 86b8892979
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jan 28 06:47:02 2014 -0800

    Merge pull request #299 from crate/s/presto-shard-expressions
    
    implemented shard expressions

commit 86b8892979bdc7ab910c5c024cd0f57c0c98aeb8
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jan 28 15:33:09 2014 +0100

    implemented shard expressions

commit 6db547f82782ec25380ff684406cca458b578e80
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 27 18:31:55 2014 +0100

    add lucene query builder

commit 13532b6145d31f357682d41f281f105dc290f54a
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jan 28 11:26:52 2014 +0100

    implemented cluster expressions, refactored expressions

commit c548633104e6cbb984ca6ffb779987eef5ebbf90
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jan 28 11:24:20 2014 +0100

    fixed unknown import

commit 511f08a57aea7987f5e9192f267439826c6634a1
Merge: 65b43da775 9dbfdcac62
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Jan 28 01:00:09 2014 -0800

    Merge pull request #296 from crate/fix-rpm-typo
    
    fixed typo in 'create rpm repo config file'

commit 9dbfdcac62e0e6261475149c1fac9adf5cb27cf3
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Jan 28 09:54:47 2014 +0100

    fixed typo in 'create rpm repo config file'

commit 65b43da775c80b1c7ef44b8600f6bb71b4e9871b
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jan 27 19:45:43 2014 +0100

    fixed doctest suite

commit a7cd85d470156a97a0e00ff27b11bcd4c5ba61d3
Merge: ec3a2e24e8 06e0e3d04d
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jan 27 19:19:46 2014 +0100

    Merge branch 'master' of github.com:crate/crate

commit ec3a2e24e8a3c0762aba8cd230948b806836ac7e
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jan 27 18:17:40 2014 +0100

    updated es module

commit 06e0e3d04d562601caff5d535683b4089aa1c9d9
Merge: cd284aec9f 6195344f4b
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Jan 27 09:02:08 2014 -0800

    Merge pull request #294 from crate/cleanup-root
    
    Cleanup root

commit 6195344f4bdf560912632495f8e3c9adee1c9ff0
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Jan 27 16:38:56 2014 +0100

    added link to our CLA

commit dfa15d7f72d6e9c17653e8e7a73d5a07e13b97c8
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Jan 27 16:04:30 2014 +0100

    fixed typo. added BLOBs as a feature

commit c21408791aa4ff8bbabde0c34185203f802f0193
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Jan 27 15:59:03 2014 +0100

    fixed missing hyperlinks and information

commit ee5f3b0787c4174f37c233af9a900495f6aa0592
Merge: 9d27024356 cd284aec9f
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Jan 27 14:55:21 2014 +0100

    Merge branch 'master' into cleanup-root
    
    Conflicts:
            CHANGES.txt

commit 9d27024356e4971af0ada56f8df26881cd1fce35
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Jan 27 14:51:58 2014 +0100

    fixed typos and list formatting

commit 98d8143d9a77de589e831a86f9d2a1fcd0e70bb4
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Jan 27 14:41:21 2014 +0100

    fixed formatting

commit 1ce186fd080ab02e8e93a2f9638afe8630b2a9c6
Author: Lukas Ender <hello@lukasender.at>
Date:   Mon Jan 27 14:34:45 2014 +0100

    extended README with additional information about crate and how to use it

commit dd2ec4b38c42bdea149d88431cd568f6cace1195
Merge: e4c0814374 cad2a3da86
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Jan 24 06:04:05 2014 -0800

    Merge pull request #292 from crate/m/node_level_normalize
    
    normalize where clause on node level

commit cad2a3da8602f1a2e5ecbaea755e1159b38c0ce2
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Jan 24 12:42:49 2014 +0100

    normalize where clause on node level

commit e4c0814374d91cfd60349c45356da80fea892309
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 24 12:15:15 2014 +0100

    add Gt, Gte, Lt, Lte operator and LongLiteral

commit cd284aec9fc3357e8705bca9ea6d395105b3051a
Merge: 2e77639f53 af49c51725
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 24 03:50:59 2014 -0800

    Merge pull request #293 from crate/s/update-cluster-settings-refactored
    
    use ES cluster-settings-update action instead of own custom one

commit af49c5172525e116ff06d7535b00ed28a05b06bf
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 24 12:48:51 2014 +0100

    use Es cluster-settings-update action instead of own custom one

commit a98ac67520fb20991c3da719dfbb9e0285660e0a
Merge: 3980d96afd 370901b524
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jan 23 14:01:54 2014 -0800

    Merge pull request #283 from crate/m/node_collector
    
    implemented LocalDataCollector

commit 370901b524ed02a29fdd20951638fef906dacd86
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jan 23 17:37:41 2014 +0100

    literal support for all types

commit ce876bab8e18ab013266844e6a4bf59e5baf5658
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jan 23 17:27:00 2014 +0100

    fixup! revert nodeportexpression changes

commit 30f6289b7042b7f73cc9e62e0551526de913f277
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jan 23 17:13:53 2014 +0100

    fixup! simplifications

commit 8c5b5271205f1597bb1547beeaff4fcb2d8cba07
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jan 23 16:20:45 2014 +0100

    improved LocalDataCollectorTest

commit e85b577bf8970f896dff4d4a91739e75ed0034e9
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jan 23 16:14:10 2014 +0100

    simpler nested inputs representing functions as column values

commit d42ed6b29744f2e4ac84321c5f672fa680ad2283
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jan 23 14:11:53 2014 +0100

    another collect approach and function support

commit dc6d89df9a6e02016e968c56755ee5535a7fd282
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Jan 21 16:11:19 2014 +0100

    safer node port expression

commit 419c7c89a90128f834ed2da55494a20b7638f4c7
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Jan 21 15:03:35 2014 +0100

    implemented LocalDataCollector

commit 3980d96afd3306f9bbd0d2fb92141e457caa3c1a
Merge: 9e40ba2e1d 5f41c13979
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jan 23 09:04:29 2014 -0800

    Merge pull request #289 from crate/m/port_expression
    
    more robust NodePortExpression

commit 5f41c139794a5dedb1a2c6e306b593f6ffaf69ed
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jan 23 17:25:36 2014 +0100

    more robust NodePortExpression

commit 9e40ba2e1d17c0c9ce2197b4b0aafd78ac81a814
Merge: 6a129c0690 19a7331925
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jan 23 08:26:39 2014 -0800

    Merge pull request #281 from crate/j/evaluating_visitor
    
    add EvaluatingVisitor

commit 19a7331925d9ad9291f3eba280968a447681ce30
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 23 17:17:13 2014 +0100

    fixup! fixup! fixup! fixup! fixup! fixup! fixup! add EvaluatingVisitor

commit 6a129c069003dc5fd3f81ba647069357b606c884
Merge: 20411eeeca 2e77639f53
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jan 23 17:12:50 2014 +0100

    Merge remote-tracking branch 'origin/master' into presto

commit 5526e42ec6ffd8f73115a41aed493cee50b1c02b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 23 16:47:09 2014 +0100

    fixup! fixup! fixup! fixup! fixup! fixup! add EvaluatingVisitor

commit 23d2fd673f0e1b048658b9bb7c57f265bbce7d28
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 23 16:39:26 2014 +0100

    fixup! fixup! fixup! fixup! fixup! add EvaluatingVisitor

commit 4a2cfa873b7cf13dbb360ed3c66c0c79157c220f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 23 15:03:29 2014 +0100

    fixup! fixup! fixup! fixup! add EvaluatingVisitor

commit aa7722ad4bb9036a456cf1c9b5f15760e285fafd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 23 14:56:44 2014 +0100

    fixup! fixup! fixup! add EvaluatingVisitor

commit 787a41c07aff13351aae7c1201c51656a9589999
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 23 14:14:45 2014 +0100

    fixup! fixup! add EvaluatingVisitor

commit 7eb39b081b10dec88351782bc8834aff4b8feca5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 23 14:10:28 2014 +0100

    fixup! add EvaluatingVisitor

commit 2e77639f5391c99375194b453e6ed7cba09b16ce
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jan 23 14:08:35 2014 +0100

    prepare release 0.22.1

commit aae7fa4367df9f38620bea447301ac0763f9c78d
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jan 23 14:05:52 2014 +0100

    upgraded crate-theme to v0.0.9

commit 20411eeeca57ecfbd329e144f5e12b24f717a893
Merge: 7caf5bd146 2bff011a65
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jan 23 13:16:02 2014 +0100

    Merge remote-tracking branch 'origin/master' into presto

commit 7caf5bd146c9c9e0981e044ec2778aa3e4d57820
Merge: 3a14985946 f3a4e9e42e
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jan 23 04:15:35 2014 -0800

    Merge pull request #287 from crate/dobe/aggtests
    
    cleanup agg tests

commit f3a4e9e42ed87c3435615612a1b58747b945c478
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jan 23 13:09:57 2014 +0100

    cleanup agg tests

commit 76a24bc429de6e5a9a724ca10706fc108dfff39c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 20 21:28:13 2014 +0100

    add EvaluatingVisitor

commit 3a149859469a7071ea0f6d0fd361b7e2ec68e4e5
Merge: 6091295320 a76d05e9f3
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jan 23 02:39:23 2014 -0800

    Merge pull request #286 from crate/dobe/inputcolumn
    
    input column impl

commit a76d05e9f3113721eca4173e60f9cff510c6db17
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jan 23 11:38:05 2014 +0100

    clean list constructor

commit 966e779311ec3a55e833619d50db2fcf434519e0
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jan 23 11:36:24 2014 +0100

    removed unused getter

commit 429902e4e0a5148a34c81b2d86eb177ba3c9395b
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jan 23 11:31:26 2014 +0100

    use mutable lists in tests to show planned mutability of functions

commit cc8d9fa21b3c67cc6a60ba915f6c964b0b98eae0
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jan 23 11:14:16 2014 +0100

    input column impl

commit 2bff011a653d269b1fc77797fe986a828297e6b1
Merge: 6ef8d0dd9e b8eea7d3ac
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jan 23 00:54:14 2014 -0800

    Merge pull request #285 from crate/s/udc-logging
    
    udc: log start-up message only on debug level now

commit b8eea7d3ac4ba45b7d77857dc899cd16df925d94
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jan 22 17:44:04 2014 +0100

    udc: added missing trailing slash to example config url

commit 8c931100582cf69271031bfcb7c67a808fbefa45
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jan 22 17:43:12 2014 +0100

    udc: log start-up message only on debug level now

commit 38e5528ab702aec9b0fc44da43118aa176c5e613
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jan 22 17:30:49 2014 +0100

    admin-ui: implemented basic cluster view

commit 6ef8d0dd9ef956ffeccb22e0d456dd0f9d6bc29d
Merge: 1815b6ad64 f1a281b2e3
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jan 23 00:49:29 2014 -0800

    Merge pull request #284 from crate/s/admin-ui-cluster
    
    admin-ui: implemented basic cluster view

commit f1a281b2e3d4ccd718adaa50a7bf8e3c96b37340
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jan 22 17:30:49 2014 +0100

    admin-ui: implemented basic cluster view

commit 6091295320e554639e93df7b59b32e170f8543c1
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Jan 22 17:10:41 2014 +0100

    fix test dependencies

commit 883f46c6bdb1a2bc50b5c28b5d62dba21a71ba7c
Merge: 6705091786 1815b6ad64
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Jan 22 17:03:35 2014 +0100

    Merge remote-tracking branch 'origin/master' into presto

commit 670509178690931d09b4e8cc792fe76dc05d6868
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Jan 22 17:03:07 2014 +0100

    WIP Planner

commit 5441f204095d548136c7398f3c79c249e4fac515
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Jan 21 22:00:27 2014 +0100

    fixed hyperlink and formatting

commit aedb037680cdb83d0838a67e24e478168b579de8
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Jan 21 21:54:51 2014 +0100

    updated CHANGES

commit 516b7b03eeccb1d312833f6f2328a71a92bbca14
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Jan 21 21:54:43 2014 +0100

    updated README

commit e801f3069490d2b27a76297afa79e0dc0918ed5a
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Jan 21 21:54:30 2014 +0100

    replace port '44200' with '4200' in documentation.

commit 46c00d18264e12aed10e966dbb0458479460eff4
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Jan 21 21:42:44 2014 +0100

    create_tag: added info to be aware of relative paths

commit 35043acd5b62ae695cfa093e8c43cc1f2e1ee4ab
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Jan 21 21:40:38 2014 +0100

    introduced devtools, moved create_tag.sh.

commit 1815b6ad6478eaf2ad15b9eba94345387fe6ed5d
Merge: dc1dd02f3a 4291894c49
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Jan 21 06:06:31 2014 -0800

    Merge pull request #282 from crate/update-config
    
    updated default config: crate.yml and logging.yml

commit 4291894c4963e98c277704fea8acf787fbebb2c8
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Jan 21 15:04:42 2014 +0100

    updated discovery section

commit 9ff39058d8147e20020c5c1aecbf08abd2b71dad
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Jan 21 14:31:39 2014 +0100

    updated CHANGES. fixed logging.yml

commit 5ec03699810e51201f8a32f98570da5c15580b2e
Author: Lukas Ender <hello@lukasender.at>
Date:   Tue Jan 21 14:16:31 2014 +0100

    updated default config: crate.yml and logging.yml

commit b486624316233896179750e5637a15514079351e
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Jan 20 22:52:17 2014 +0100

    more analyze wip

commit 3b813a60bdfa229a6044a51d052f6b9e41b8e2f4
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Jan 20 18:14:42 2014 +0100

    string literal symbol

commit 54f406857137ddd31b01ab51077139d03b0d3ed6
Merge: f581aa7b42 c2f1a2de77
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Jan 20 18:00:37 2014 +0100

    Merge branch 'presto' of github.com:crate/crate into presto

commit c2f1a2de77381df0ff775dafaa8d87cf36848e45
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 20 18:02:25 2014 +0100

    add another ctor for FunctionInfo

commit 0a26b084a78ba165fb0a850a2cf206a18c65f550
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 20 17:56:04 2014 +0100

    expose FunctionInfo and ReferenceInfo in Reference and Function symbol

commit a1765c38fca78e8f7edab061d28b1cd4e301758a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 20 17:55:06 2014 +0100

    add operator functions

commit dc1dd02f3a32efa88cab10a85d785ac85c5a2192
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jan 20 17:42:06 2014 +0100

    prepare release 0.22.0

commit 3d2fa0d19789ffd5e77f4f3df18cb256505e4d71
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 20 17:17:59 2014 +0100

    add arguments to Function (symbol)

commit f581aa7b42ac6761c404e2e691768539172339c5
Merge: fdf81902e5 3d2fa0d197
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Jan 20 17:17:25 2014 +0100

    Merge branch 'presto' of github.com:crate/crate into presto

commit aa42946196726ea1ed5ef748e2f7ccc7f416737d
Merge: a05f99fea5 911956055b
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jan 20 08:10:07 2014 -0800

    Merge pull request #278 from crate/s/udc-truststore
    
    fix: udc ssl truststore was not found at JAR's

commit 911956055b473858c6c150a8c98d9ccd0e59c907
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jan 20 17:03:37 2014 +0100

    disabled logging of udc at info level

commit 96106cd447fe827c0b7f4726b160c71a5d09e32a
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jan 20 17:03:10 2014 +0100

    fix: udc ssl truststore was not found at JAR's

commit a05f99fea592e0b42aa5b3605926473db5338be9
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jan 20 16:32:16 2014 +0100

    test-fix: removed umlaut from test table-name, results in strange unexpected error at some setup

commit fa7618275834f53117c02dc25faaf6b530bae00c
Merge: 9b9cee040c ab16f7a58e
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Jan 20 15:57:29 2014 +0100

    Merge branch 'presto' of github.com:crate/crate into presto

commit 9b9cee040c673f4c4869f8ba49742405eb499fb1
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Jan 20 15:55:21 2014 +0100

    add license header to generated sql grammar files

commit fdf81902e508de90011220373b9812ab5c292a49
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Jan 20 15:30:46 2014 +0100

    rename test and copyright

commit 3b7037183686ba635dfa15ef9ed0346a0b35674f
Merge: 6db360d971 2cb43214c3
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jan 20 06:30:33 2014 -0800

    Merge pull request #277 from crate/s/fix-count-distinct-zero
    
    fix: distinct count aggregation should return 0 when hitting no column

commit 2cb43214c3c6c0a12b03384c379abadfd0a6eef5
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jan 20 15:08:11 2014 +0100

    fix: distinct count aggregation should return 0 when hitting no column

commit ab16f7a58eb4a62fe7ffba00f5ab4e3faf50caa5
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Jan 20 15:14:52 2014 +0100

    rouing and plan stuff WIP

commit c23a5a8e758d865f792e6030dc2d925d450526cd
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Jan 20 15:13:25 2014 +0100

    make metadata module modular

commit f0ad7e619a23967801df28afbfc8722edacd4115
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Jan 20 15:12:49 2014 +0100

    merge

commit 0c6c27b2bc65f04d098f121bc8d371840d80b09c
Merge: 1427533dcf 6db360d971
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Jan 20 15:05:00 2014 +0100

    Merge branch 'master' into presto

commit 6db360d97103adf132481c9c55f73028ef43fc76
Merge: 78283f00cd 637ac8cee4
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Jan 20 05:58:39 2014 -0800

    Merge pull request #276 from crate/m/es0.90.10
    
    M/es0.90.10

commit 637ac8cee498dd0579aec4f2eb86287868498ba0
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Jan 20 14:55:34 2014 +0100

    add analyzer doc for 'type_as_payload' token filter

commit 78283f00cd9f6b62f6a582c0c68c6dd21da0a5c3
Merge: ba7c412a82 695735ba8f
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jan 20 05:46:17 2014 -0800

    Merge pull request #275 from crate/s/disable-_all
    
    disabled _all fields on table creation

commit 695735ba8f944889bfe3ee8608899e4335ca6588
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jan 20 11:06:59 2014 +0100

    disabled _all fields on table creation

commit a9fb465dd32b792ffde467d4bfeb8d9f182f1537
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Jan 20 14:20:16 2014 +0100

    adaptions to es 0.90.10

commit 0e41ef5f7c94c46c16a443970b94c264be0b6238
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Jan 20 14:19:29 2014 +0100

    upgrade es upstream

commit 1427533dcf8270d18f8a64a1ea74e2c5c1860e6e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 20 14:10:58 2014 +0100

    add Function symbol

commit 475df56e24ebfc3359e8f6ef503ce57b7202fa7f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 17 17:57:29 2014 +0100

    add GroupingCollector

commit 20bce206ee491c2c787b0e970b6a99e25498227a
Merge: 8dd9bbdf5f 4c0d9c6809
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Fri Jan 17 17:13:47 2014 +0100

    merged

commit 8dd9bbdf5f727b0bad20b1078c23ca20612c0b98
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Fri Jan 17 17:07:50 2014 +0100

    update license headers

commit 4c0d9c6809759455563f301a3c0db67dba4251b4
Merge: 2d9cc9cc3a fa509455c5
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 17 07:58:47 2014 -0800

    Merge pull request #273 from crate/s/presto-node-expressions
    
    implemented basic node expressions

commit fa509455c570aef44a4356a145efdbb4c102b218
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 17 14:53:00 2014 +0100

    implemented basic node expressions

commit ceb930c25b7d5048aa5b4ebf1a3175d7f90616f7
Merge: 2d9cc9cc3a e5a1ff59c5
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Fri Jan 17 16:30:16 2014 +0100

    Merge branch 'jb/license' into presto

commit e5a1ff59c53ef50ee435d03e81bfd1c5b99c7030
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Fri Jan 17 16:22:39 2014 +0100

    corrected license wording

commit 2d9cc9cc3acacccb4a63ef28262d99f5f507f34c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 17 13:48:22 2014 +0100

    implement result serialization in the NodeCollectResponse

commit 5638f3ca43e290189af7fab1e658bff5cc447256
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Jan 17 12:43:06 2014 +0100

    Routing is no more a symbol, it is now also a member of CollectNode instead of Reference

commit 7959dd32914808407d067e3a404676cdb6477f16
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Jan 17 12:02:56 2014 +0100

    topn is not a symbol anymore, moved members to topnnode

commit f58e8b9b9bde66de957a26853bd29da882eee585
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Jan 17 10:46:36 2014 +0100

    renaming test stuff

commit 53363be765742f2fadd317d6a149332d772b6bc3
Merge: 83095cecca 1129cd26ec
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Jan 17 10:35:50 2014 +0100

    Merge branch 'presto' of github.com:crate/crate into presto

commit 1129cd26ec2d1381ac4b685de98b8b9fcc4fb827
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 16 18:35:18 2014 +0100

    make symbols serializable

commit 83095ceccaabac58eb2833f4b0d769f5a322a21b
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Jan 17 10:34:18 2014 +0100

    static visitors

commit 26afa98cf8d836d0e6050d09d5ecbfd90545e65f
Merge: 32908a8961 ba7c412a82
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Jan 17 09:02:56 2014 +0100

    Merge remote-tracking branch 'origin/master' into presto

commit 32908a8961f318d9ba5ea88422638a959f8374a3
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Jan 17 09:02:26 2014 +0100

    notes

commit 7133a2ce6de264660dec6c9f65f64f08afb906f8
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Jan 17 06:55:03 2014 +0100

    allow for sorting in topn task

commit 30eb02253e91fe01b58475845c3573afb225e82d
Merge: 365530b04d a4c60ef402
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jan 16 23:40:10 2014 +0100

    Merge branch 'presto' of github.com:crate/crate into presto

commit 365530b04d5ea6250a5ebe28f065ce595fddf6bc
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jan 16 23:39:54 2014 +0100

    sorting range collector

commit ba7c412a82b0760a8a5fcb3f97e88f068a1d0244
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Thu Jan 16 22:28:31 2014 +0100

    slightly improved udc wording

commit c5e8a2540b73fccbd4bb2a8c0a307401d42de2fd
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Thu Jan 16 22:17:45 2014 +0100

    update copyright headers

commit a4c60ef4023e3cbe9866f99ad5f380b47311c743
Merge: f809a14ac1 4f6e5adb30
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jan 16 09:37:08 2014 -0800

    Merge pull request #268 from crate/s/presto-aggregations
    
    implemented any, min, max, sum, count aggregations

commit 2bbc118bebb64e3aaa078902fb11c0f9f2dd492c
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Thu Jan 16 18:36:18 2014 +0100

    corrected download url

commit 4f6e5adb300c3da72c1d6e735fc0b0561b533f23
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jan 16 17:35:17 2014 +0100

    implemented any, min, max, sum, count aggregations

commit 3f2e3344137bc73235594323e6f79b27546d8476
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Thu Jan 16 18:35:00 2014 +0100

    update copyright headers

commit e25869ad87da9b9bb224f6b8538397fd26e01dcf
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Thu Jan 16 18:34:10 2014 +0100

    update copyright headers

commit dc62a8bdbfa573240f94e63d26ff886c7b640144
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Thu Jan 16 18:28:19 2014 +0100

    update copyright headers

commit 3c5b61d13a0db43b128e4f40fd6a67931d97d50d
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Thu Jan 16 18:27:34 2014 +0100

    update copyright headers

commit 1b2bfd3e541e81b1060f6f9b569f10a4e7ae4b63
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Thu Jan 16 18:26:56 2014 +0100

    update copyright headers

commit 14a8f20107add320a2d84d5590856f64c6eb1ade
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Thu Jan 16 18:08:36 2014 +0100

    update copyright headers

commit 9108477071bd7f694fa0d5185e44cc92bcd96819
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Thu Jan 16 18:07:52 2014 +0100

    update copyright headers

commit 57b89ff968882f5dfc6b1301360d5100b6c5f9dc
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Thu Jan 16 18:07:16 2014 +0100

    update copyright headers

commit d86f5f57c54d4028c6ee5d0de4d481d6219e4c92
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Thu Jan 16 18:05:55 2014 +0100

    update copyright headers

commit f4e121168c7b69d43ef664187291602fbd227fe8
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Thu Jan 16 18:04:48 2014 +0100

    update copyright headers

commit f809a14ac1b56006c69abccbd026e87282be636a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 16 17:47:37 2014 +0100

    implement request handling for the RemoteCollectTask
    
    (currently empty requests are sent, no real serialization
    done yet)

commit 16705fba59e1c595adc9acd63cf172b6a90bbcb9
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jan 16 15:23:49 2014 +0100

    docs

commit bb8c0a5db55aead07bc76e3ab1314af8c1716fd9
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jan 16 15:18:39 2014 +0100

    factored out rang collector

commit 269336807eb2754bb44a35cd47e1116ef2ffa57c
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jan 16 14:03:40 2014 +0100

    topn collector for unsorted stuff

commit ccf5a37a3f63adfe2961cbe6641e01ea495a0e78
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jan 16 10:25:37 2014 +0100

    make result of executor specific

commit bb407597640257e6588c26d9b32118df11063f3f
Merge: b1a9f6cdaa 84018f3be9
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jan 16 00:22:24 2014 -0800

    Merge pull request #267 from crate/m/udc_debug
    
    only debug tracebacks on failed udc ping

commit 84018f3be97106677af7500011b90a8d017ef028
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jan 16 09:12:56 2014 +0100

    only debug tracebacks on failed udc ping

commit 4a191ad3b8d6fb4f9bdf15733a53e5229d6082f6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jan 14 18:08:49 2014 +0100

    add Binder to convert statement to bound statement

commit b1a9f6cdaa0209307ca333e89e8fe1bedaffcd1a
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jan 15 22:45:28 2014 +0100

    prepare release 0.21.1

commit 9410b9274b59bbc0a053fb91d3c7024cad83e388
Merge: 97b5cb8876 961e9bb77f
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jan 15 13:33:42 2014 -0800

    Merge pull request #266 from crate/m/udc_double_encoding
    
    fix double encoding in udc

commit 961e9bb77f4887a9d9c46197b64c0d5b7bd15011
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jan 15 22:28:32 2014 +0100

    fix double encoding in udc

commit 97b5cb8876182fb4721e2cf7b60f29228fb66f53
Merge: 4fe4156475 5c42331746
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jan 15 11:25:53 2014 -0800

    Merge pull request #265 from crate/m/udc_npe
    
    fix NPE on close of UDCService

commit 5c4233174669fccfb3febbb75a639ef41d414f19
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jan 15 20:18:04 2014 +0100

    fix NPE on close of UDCService

commit d6ea4da15ae02f0dc8b463e4cd8d92d64e18de7d
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Jan 15 17:55:15 2014 +0100

    Functions is now injected

commit 4fe4156475799e91f63c9979d05709a9d135065b
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jan 15 17:28:55 2014 +0100

    prepare release 0.21.0

commit 96ce4fdc2f1820625b37e73557fe013d26e89ca7
Merge: 093a27c23a 2ac1a0443c
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jan 15 07:25:04 2014 -0800

    Merge pull request #264 from crate/m/port_change
    
    changed port numbers

commit 2ac1a0443c9f136146ce46b22601ddfb38b1f4d5
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jan 15 16:22:10 2014 +0100

    fixup: completely isolate test runs

commit 97e59c1ae48f05d7b413225772357a9f3f4f4a84
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jan 15 15:20:41 2014 +0100

    fixup: test ports for itests as well

commit 88aed0540fbbdd623853df2dadedd8f947f524d3
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jan 15 14:41:54 2014 +0100

    changed port numbers
    
    for http from 9200-9300 to 4200-4300
    for tcp from  9300-9400 to 4300-4400

commit eaa5c2b76bcc08de81791572399d5a49c7e27067
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Jan 15 13:18:44 2014 +0100

    WIP started to factor out the aggregation task

commit 4e57c07603f2446a1c09ff0dc2844dc04f6206ef
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Jan 15 13:01:00 2014 +0100

    factor agg task out in test

commit 4aac033e6cdf869aa729c4fbf334b2252eca7003
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Jan 15 12:41:43 2014 +0100

    aggstates static

commit 093a27c23abb9de2bce58e5bb4d0f4d456a22a68
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jan 15 11:28:34 2014 +0100

    fix test flakyness in another one of many cases

commit 535403a5bc4cafca669dd4574545a87dc8958cf5
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Jan 15 11:25:13 2014 +0100

    symbolvisitor and routing symbol impl

commit 169c3c6d40ba0bb919d1eeee27a4a19f3c8cf271
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jan 15 11:12:14 2014 +0100

    do not fail if crate.yml is not there

commit 8ce1e76b81fd7b54e03ac4faf4a9b38bc82cc2c2
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jan 15 10:31:33 2014 +0100

    fixed UDCService test

commit a0db944518a767a7e67dcab2c343fdd67454f9cc
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jan 15 09:52:39 2014 +0100

    added comment how truststore was generated

commit 44eb337304239f533f112091668ae23feff3d39b
Merge: 6a16eeb355 23a9da7421
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jan 15 09:51:21 2014 +0100

    Merge branch 'master' of github.com:crate/crate

commit 6a16eeb3554e77d7f5d78516cf0919370fe25a66
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jan 15 09:50:44 2014 +0100

    prevent test flakyness in one of many cases

commit 23a9da74211255d3f7549e3b6c3d6e525cb6bfc4
Merge: 1ca71fff57 1e72d21da1
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jan 15 00:48:40 2014 -0800

    Merge pull request #262 from crate/s/udc-ssl-truststore
    
    added ssl truststore including StartCom CA, fixes UDC

commit 1ca71fff577379bf2b693d2dc854d5bc6df449e6
Merge: 942a267d2e 487c2cccb4
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jan 15 00:21:23 2014 -0800

    Merge pull request #263 from crate/m/udc_config
    
    add default udc values to crate.yml

commit 487c2cccb4b0dcda1113b09c189400f6a2b9a8df
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jan 15 09:19:06 2014 +0100

    make app crate.yml a symlink to the dist crate.yml

commit 7ed47343a0fa5ebe45ed8d035586a5b2089c904b
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jan 15 08:52:19 2014 +0100

    add default udc values to crate.yml

commit 8008ad18f559ba354a1fd3471ba5115f6306eb18
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Jan 15 00:35:44 2014 +0100

    WIP executor stuff

commit 6acf6b6e35c7bf4c33923d49e75f92af34a577e7
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Jan 14 23:54:34 2014 +0100

    global reference registry and node load impl

commit 1e72d21da1af4638373a54789e3cf6a62672c9f8
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jan 14 21:58:56 2014 +0100

    added ssl truststore including StartCom CA, fixes UDC

commit 942a267d2e5c88f871d1788a01cf0538221a317d
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jan 14 18:16:46 2014 +0100

    added missing docs to documentation toctree

commit 0aa01a1a0679b543a72c61bc541fe12cc4bca32f
Merge: f33df681e6 cac029fa91
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jan 14 09:14:13 2014 -0800

    Merge pull request #261 from crate/s/fix-clustername
    
    fixed default cluster name (specially on linux platforms)

commit cac029fa91359d4e7fd765ddad8d17b05bce4e1f
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jan 14 17:51:41 2014 +0100

    fix default clustername: explicitly add crate-app.jar to CLASSPATH before ES jars

commit f33df681e643e5246e699fde21992cd149449cbc
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jan 14 16:41:50 2014 +0100

    cluster id is now transient

commit da9a9b1cd7d5e0135e7a73af4bd01f874702568f
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jan 13 23:20:55 2014 +0100

    implemented UDC module including tests
    
    implemented simple HTTP test server

commit 8b9f0411e6e5f73bb96c63b1a7be2506153af7aa
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Jan 14 14:25:06 2014 +0100

    functionident uses string instead of qname

commit e89ead253c82d8c1deb64f0f8951d282d89df9ac
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Jan 14 12:18:30 2014 +0100

    TableIdent for table information

commit e9d4a4b0ac174bc7540c979f2ffeef1e1dbda212
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Jan 14 12:02:54 2014 +0100

    first sys expressions metadata

commit ba0240ed286ea09f7ac1682bdff0dc27f757ff1d
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Jan 13 22:04:02 2014 +0100

    average aggregation implementation in io.crate

commit 90af6451bc1da0a4c2cb0ca88f066eb1e328343e
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Jan 13 22:03:12 2014 +0100

    use array for inputs

commit 9b024474c197f9a60f74251efa8d754f28beb2e7
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Jan 13 22:02:29 2014 +0100

    cleanup

commit 879cd73951e208a7974e42a4185bbfeb7a6cffbf
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Jan 13 22:01:46 2014 +0100

    inline getType

commit f997fa1256d2ee2bb4569da4fddb0405e0af50b7
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Jan 10 18:58:06 2014 +0100

    udc module, tests needed

commit 7f8952add13f238573d26d2fc4e7dca79bb4cd17
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Jan 10 15:18:37 2014 +0100

    udc module - non functional

commit 461852923d6ac08d28be79306ba5aafab7d1835f
Merge: 6b63f9a7ff 00cd0462f6
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jan 13 11:08:26 2014 -0800

    Merge pull request #259 from crate/s/cluster-id
    
    implemented generation of an unique ClusterId on initial cluster start-up

commit 00cd0462f679d5894c3680cca73095d4de0365a2
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Jan 13 16:56:33 2014 +0100

    implemented generation of an unique ClusterId on initial cluster start-up

commit 524a74e078fccfcd73ccf8e9a5aca08731f26164
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Jan 13 17:11:24 2014 +0100

    missing file

commit 7b4b8aa63f40940e15886f560f5230f4f3eab7cd
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Jan 13 17:10:10 2014 +0100

    planner

commit fd3680b85bff40dfa0affaebd6d060831100837b
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Jan 13 17:08:39 2014 +0100

    aggregation base

commit c3125a73b47dcfacd94b6d535eb346dc2f1f4602
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 13 14:13:00 2014 +0100

    switch to presto if sys.nodes is queried

commit 6b63f9a7fffde11e286b2387908bac8db4ad660b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 13 11:08:48 2014 +0100

    add parameter expressions to presto based sql-parser

commit f1c753a79c44004e2d7472e507861322e554fbba
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jan 13 11:12:15 2014 +0100

    use TestNG to run sql-parser tests via gradle

commit fa21f99a2049ec967e9301e4e8355ea171595c07
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jan 10 11:12:19 2014 +0100

    add SubscriptExpression to sql-parser

commit 1f376e2ac6f5d68eb53b262f32aee87640e052c3
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 10 15:38:02 2014 +0100

    admin-ui: minor html changes related to page header

commit 83ec80643ec4f8aa66b597b51553cc6b78a2ced2
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 10 14:55:23 2014 +0100

    prepare release 0.20.4

commit 5b46102c6d2a4ee3367c2c4cede2a8ec9b15d5b9
Merge: 34274b253f 41b0cf3613
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 10 05:53:48 2014 -0800

    Merge pull request #256 from crate/s/admin-ui-tables
    
    admin-ui: fixed number format, fixed table missing + underreplicated shards count

commit 41b0cf361373e9998c70b4793a8456292fdca37e
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 10 14:42:48 2014 +0100

    updated crate-theme to v0.0.8

commit cf900bda4a78015a70599375632af296d557b5ed
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Jan 10 14:00:27 2014 +0100

    admin-ui: fixed number format, fixed table missing + underreplicated shards count,
    show first table if selected table was deleted/closed

commit 34274b253ffb889998eaecdb84db76bf3903ced9
Merge: 3e3ce12099 5ac7e280fc
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Jan 10 01:00:43 2014 -0800

    Merge pull request #255 from crate/m/unknown_types
    
    ignore unknown types in legacy mappings

commit 5ac7e280fc77e3fcd7aaf94650d84bedc997000b
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Jan 10 09:57:38 2014 +0100

    use gradle-1.7-all.zip in gradle wrapper to ease inspection for intellij

commit 658198e0042fbdbcff3bff5521e978d687163a33
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Jan 10 09:04:43 2014 +0100

    ignore unknown types in legacy mappings

commit 3e3ce12099926a406fb609962ad2da25a4017c45
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jan 9 16:16:56 2014 +0100

    prepare release 0.20.03

commit f4ec497f78b29227a5cc96a4112412e0e270cf8c
Merge: 99a1f578f7 df9fe995ce
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jan 9 07:14:14 2014 -0800

    Merge pull request #254 from crate/s/admin-ui-tables
    
    admin-ui: fixed table css, data reload flickering, sidebar button

commit df9fe995ce1b66edf520d8c219241e9267cd2e00
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Jan 9 16:04:06 2014 +0100

    admin-ui: fixed table css, data reload flickering, sidebar button
    re-enabled blender font at docu

commit 99a1f578f7ea11204b7ff0570c577cefea74f3ab
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 9 14:35:18 2014 +0100

    change sql-parser namespace to io.crate

commit 47fcb5547d8303d0cad55687c8410fc07e02e6bf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 9 14:23:38 2014 +0100

    include sql-parser in the gradle build

commit 07bb523c2e6575a0d6b47df00a4514a67ebf6f10
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jan 9 11:37:43 2014 +0100

    add the presto sql parser

commit 300db40f43d1e7f9e7b5749a6ef8c4f07df5c4f9
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jan 8 08:14:26 2014 +0100

    prepare release 0.20.2

commit cf81180065bd76bc5195dd65f64575af9756fca7
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jan 8 08:13:05 2014 +0100

    correct spelling and grammatical mistakes in ddl-doc

commit 74ace204a2ab260b4b59e9e423273f45bb83962d
Merge: 217f100bef 2532ccc06f
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Jan 7 23:09:39 2014 -0800

    Merge pull request #252 from crate/s/admin-ui-tables
    
    admin-ui: implemented tables overview page

commit 2532ccc06f5ae72480b1f39741d5724ef8c50ac7
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Jan 8 02:16:32 2014 +0100

    admin-ui: implemented tables overview page

commit 217f100befadb8e5cef68f58c6c172d7e853b2c7
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jan 8 01:16:44 2014 +0100

    prepare release 0.20.1

commit aa64a16b45ed47039548c2f035a972df387c145d
Merge: 7954bd8f19 029d98e825
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Jan 7 15:35:46 2014 -0800

    Merge pull request #251 from crate/m/craty
    
    implemented object definition in CREATE TABLE statements

commit 029d98e825475f85faa66b3542d90f84bdd68985
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jan 8 00:27:15 2014 +0100

    fixup: clarified docs about added columns to ignored object

commit 09b378aeab59a7333297b02fffa9f5877a84e67d
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jan 8 00:23:56 2014 +0100

    fixup: doc fixes and TableVisitor cleanup

commit 48947cb77fc54ec2914e198f609b2630d7fe4e5a
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Jan 8 00:05:40 2014 +0100

    implemented object definition in CREATE TABLE statements

commit 7954bd8f192917a4357769e50ac05c4f1e9c3801
Merge: 783cefbb29 747360bccd
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jan 7 06:06:40 2014 -0800

    Merge pull request #250 from crate/s/admin-ui-overview
    
    fixed underreplicated docs count if state is red

commit 747360bccd316fe90d297a1e3f5f959ccbc73448
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Jan 7 14:20:02 2014 +0100

    fixed underreplicated docs count if state is red,
    display big numbers rounded with units

commit 783cefbb295b0df77527e1d099bb11245923442d
Merge: 348c7c6cdf 390af2b026
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jan 2 07:50:48 2014 -0800

    Merge pull request #248 from crate/m/craty_object
    
    renamed all occurrences of craty to object

commit 390af2b0268417b11c7e32ed7e148650082d6065
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jan 2 16:48:05 2014 +0100

    renamed all occurrences of craty to object

commit 348c7c6cdfe4b541df64ae02d1bc615404f10e9f
Merge: 283b478d77 1df643fab0
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jan 2 06:40:29 2014 -0800

    Merge pull request #247 from crate/b/nodetypeenum
    
    sql parser nodetypes are now enum

commit 1df643fab0fdfafba8bee1648ef0be05d5cf719a
Merge: f053c9265a 283b478d77
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jan 2 15:10:23 2014 +0100

    Merge remote-tracking branch 'origin/master' into b/nodetypeenum

commit 283b478d7775038106111a632709fc3a739564ab
Merge: d33a0eeb80 f7bfdadcc8
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jan 2 06:09:58 2014 -0800

    Merge pull request #246 from crate/m/race_cond
    
    fix deadlock in collect with ScriptValues

commit f7bfdadcc8cf7fb5b71376792079e1063c9ac17a
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jan 2 15:07:45 2014 +0100

    fixup: review fixes

commit f053c9265a5c1900a4108fb17619055637e86099
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Jan 2 14:49:36 2014 +0100

    sql parser nodetypes are now enum

commit 8e2a665cfd4627e83022434ac9176e4a5bdc73c8
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Jan 2 13:51:37 2014 +0100

    fix deadlock in collect with ScriptValues

commit d33a0eeb80b6453f717ffb01323c7ae95c101ef7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 20 15:17:17 2013 +0100

    prepare release 0.20.0

commit 26a35dc0ae116819cd26f40a50028aae8050c734
Merge: 05c017a733 0252f5f337
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Dec 20 05:47:37 2013 -0800

    Merge pull request #244 from crate/s/admin-ui-overview
    
    admin-ui: implemented general overview page

commit 0252f5f337d30c6987020753f74f1b17d1dc1ff5
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Dec 17 20:03:08 2013 +0100

    admin-ui: implemented general overview page

commit 05c017a73328f4d609e06ec23cd762c9b34f55e5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 20 10:51:04 2013 +0100

    terminate seenValues on reducer if possible
    
    to avoid unnecessary serialization to handler

commit 22799652275b13df8364d4907049ffe2e888cc41
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 20 11:20:03 2013 +0100

    rename reduceJobStatus and ReduceJobStatusContext to better reflect what they're doing

commit 2b628a26e4c993c827409431f2bc71603e2f7c5e
Merge: 03518347fc 8fff647241
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Dec 20 01:59:46 2013 -0800

    Merge pull request #240 from crate/m/npe_unknown_column
    
    fix npe on unknown column in stats.shards

commit 8fff647241ad4480120a6e3b997c1b294f13eaed
Merge: 56c652d015 03518347fc
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Dec 20 10:51:30 2013 +0100

    Merge remote-tracking branch 'origin/master' into m/npe_unknown_column
    
    Conflicts:
            CHANGES.txt

commit 56c652d0158b40f65e299209354395e17c2478b7
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Dec 20 10:21:07 2013 +0100

    fix npe on unknown column in stats.shards

commit 03518347fcfa37e24ebd07748991aa5a107f4669
Merge: 20e0f1fb9d bbd3a0e0a7
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Dec 20 01:46:11 2013 -0800

    Merge pull request #241 from crate/m/apply_scope
    
    change putInScope to applyScope

commit bbd3a0e0a79799c192915e1ee71903b197fa379e
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Dec 20 09:03:58 2013 +0100

    change putInScope to applyScope

commit 20e0f1fb9d313f95dfaf52747c81e5111b91737b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 19 21:10:05 2013 +0100

    throw an error if the global distinct keyword is used

commit e2b15c039becf3134670eeefce28bf7ab80d7a11
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Dec 19 16:57:14 2013 +0100

    do not create folder in project tree for testing

commit 300000f9f600f356f25f5854c15598aa275541a4
Merge: 5147ccb214 4af7d9c3e4
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Dec 19 06:28:47 2013 -0800

    Merge pull request #237 from crate/m/cluster_name_expression
    
    cluster name expression

commit 4af7d9c3e41c64a8a09dfcad45a6955a74841cdc
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Dec 19 15:22:09 2013 +0100

    updated changes

commit 395ceb9e0c5c23023fa095f6594313271d3cc180
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Dec 19 14:59:40 2013 +0100

    junit benchmark is now a dependency

commit cf27082e15923ac328655df9c6773d848732fd9f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 18 22:02:39 2013 +0100

    support crate.yml by default

commit 4bd14261e10a45a46e706148811f3a56e6736da2
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Dec 18 23:13:04 2013 +0100

    cluster name expression and basic infrastructure for global expressions

commit 2651cde18e7d85c79600f1f7d51b40c0c76e6793
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Dec 17 11:06:33 2013 +0100

    cluster name expression

commit 5147ccb214b9d3689d7520bd4ff4af0ba1179ad5
Merge: 1eb4bb95bd d3375b270f
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Dec 19 06:04:19 2013 -0800

    Merge pull request #238 from crate/b/junitbenchmark
    
    junit benchmark is now a dependency

commit d3375b270fb3be3b27aeafb7c830c897421ebd96
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Dec 19 14:59:40 2013 +0100

    junit benchmark is now a dependency

commit 1eb4bb95bdcb169d478f9a3470cbcbb5bf0de4b8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 18 22:32:35 2013 +0100

    add intellij run/debug configurations to DEVELOP.rst

commit 7a215a1c8233381c2f7906f90a19e784578d42e9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 18 22:02:39 2013 +0100

    support crate.yml by default

commit 4c7968c3cf872a8aad335de1cc3448630a99e0d3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 18 17:10:59 2013 +0100

    fix integration test failure

commit f7473c4e77141abecaabde5d0aae6296be7866de
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 18 16:02:55 2013 +0100

    fix aggregate expression toString representation for count(*)
    
    caused integration tests to fail since count(*) was
    displayed as count()

commit d8b97d13cad4a9e7e0d5906346f908a579030ab6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 18 15:42:42 2013 +0100

    put seenValues serialization logic in its own class

commit e7a24fa54431e01c7a2d0651649cd684dc45a7a1
Merge: 1736e182b6 9e5b1540fb
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Dec 18 06:48:58 2013 -0800

    Merge pull request #234 from crate/s/admin-ui-console-addons
    
    admin-ui: finalized console page

commit 9e5b1540fbddc6f0c57e6c8067872b4098c24242
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Dec 18 15:30:04 2013 +0100

    upgrade to crate-theme 0.0.3 (final console styles)

commit 62ed44247602d694f4bb65277171a10854142066
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Dec 17 12:03:21 2013 +0100

    show query response status including duration

commit 97f01ccb655a6655582139997d1051ab03ebfff6
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Dec 16 17:15:38 2013 +0100

    admin-ui: added simple loading indicator on submitting a SQL query via console

commit 1736e182b61d005363b315e7d846f713f01822c1
Merge: c11f9a2362 defdaa2a1d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 18 05:29:54 2013 -0800

    Merge pull request #233 from crate/j/groupby-bytesref
    
    optimize group by

commit defdaa2a1d107de69e69097bb843585c02bfb1fb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 18 10:40:42 2013 +0100

    update changes and clean up

commit 5506d922eb3ae4484d5e5af0698262dbb4251061
Merge: 3b9496adb1 c11f9a2362
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 18 10:39:14 2013 +0100

    Merge remote-tracking branch 'origin/master' into j/groupby-bytesref

commit 3b9496adb17e085cbb6e93cca1b99d21d80f07eb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 18 10:38:29 2013 +0100

    fix merge error in GlobalRows
    
    its own GroupByRow was never considered for the merge.

commit f5439017f00f164d861ec2905a066116195fa469
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 17 21:02:40 2013 +0100

    better reflect in globalRows that it's one row per bucket

commit 4b8f8cc9941c6017b943529ee1daaf7685454495
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 17 18:52:33 2013 +0100

    aggregate everything into one row on mapper on global aggregate queries

commit c11f9a236254cbd580659b1aba66a82d5943e266
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Dec 17 16:50:56 2013 +0100

    fixed flaky test related to ignore closed tables at information_schema

commit 4b23f6450ebfedaf0ad7e725f3789017a0328b47
Merge: e54aa72dcb a36628edf6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 17 16:41:24 2013 +0100

    Merge remote-tracking branch 'origin/master' into j/groupby-bytesref
    
    Conflicts:
            sql/src/test/java/org/cratedb/service/InformationSchemaQueryTest.java

commit e54aa72dcb7355dd59ffe68168c4fdbf7597d01e
Merge: 395187d013 58329faede
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 17 16:32:47 2013 +0100

    Merge remote-tracking branch 'origin/master' into j/groupby-bytesref
    
    Conflicts:
            sql/src/main/java/org/cratedb/action/parser/visitors/QueryVisitor.java
            sql/src/test/java/org/cratedb/module/sql/test/QueryVisitorTest.java

commit 395187d013b3d42a5d1bb35a96c002697b805f75
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 17 16:31:19 2013 +0100

    fix bytesRef serialization for null values

commit a36628edf627aca6e962e9a842f132989b63d24d
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Dec 17 16:16:41 2013 +0100

    prepare release 0.19.14

commit d54d5f8e9e1794f97da3ec10abd61bb1cd60786b
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Dec 17 15:53:28 2013 +0100

    fix: ignore closed tables at `information_schema`

commit 58329faede415b3441fe09020aed80e1a495e9df
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Dec 17 16:16:41 2013 +0100

    prepare release 0.19.14

commit d7c11283615aa9f74d307487aa6c9527bb6b09c7
Merge: e0b89c92db fb29dfd25a
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Dec 17 07:15:08 2013 -0800

    Merge pull request #232 from crate/s/infoschema-tables-closed
    
    fix: ignore closed tables at `information_schema`

commit fb29dfd25a2b1d49c11cf79e6408e862d24ee3ef
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Dec 17 15:53:28 2013 +0100

    fix: ignore closed tables at `information_schema`

commit 1c1483ab75de738a46e375facf1bb4cda5bc6d5b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 17 15:24:17 2013 +0100

    remove obsolete tests

commit e0b89c92db52b5a1abed5491fdca1dedb61df434
Merge: b7e7759790 8591831762
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Dec 17 06:17:56 2013 -0800

    Merge pull request #231 from crate/m/no_dotted_nested_columns
    
    dotted column references not translated to nested columns

commit 7c6cb4a1b77181af4d271d3b2a4864957113b804
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 17 15:02:41 2013 +0100

    enable deactivated assertions in tests

commit 8591831762911e02a3e85310fa92b4da5efa8bb2
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Dec 17 14:43:34 2013 +0100

    dotted column references not translated to nested columns

commit 11832ef673cc8e5ca9542d0b2ccb892992d6883a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 17 13:55:04 2013 +0100

    remove unused ParameterInfo

commit b7e77597900874213ab499fbb4eee9b5228daec7
Merge: a6db49f027 c8db3638e9
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Dec 17 03:08:28 2013 -0800

    Merge pull request #230 from crate/m/stable_information_schema_test
    
    stabilize InformationSchemaServiceTest

commit c8db3638e9205dbe5b299866415365c86f14d62f
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Dec 17 11:35:50 2013 +0100

    stabilize InformationSchemaServiceTest

commit 520234cc59192b8ad1b9c6325b33749f3d60797b
Merge: 444eea77b9 a6db49f027
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 17 11:33:51 2013 +0100

    Merge remote-tracking branch 'origin/master' into j/groupby-bytesref
    
    Conflicts:
            sql/src/main/java/org/cratedb/action/groupby/aggregate/AggExpr.java
            sql/src/main/java/org/cratedb/action/parser/visitors/QueryVisitor.java
            sql/src/test/java/org/cratedb/integrationtests/GroupByAggregateTest.java

commit 444eea77b9a27f035fea0312054545f32fce445d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Dec 17 11:30:37 2013 +0100

    fix shard stats tests

commit a6db49f0270e899b65b1d128932585ff2b0fdd11
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Dec 17 11:15:58 2013 +0100

    prepare release 0.19.13

commit 3b05300714203db578e33f6803bf3ba602d6479e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 16 18:38:30 2013 +0100

    typed serialization for stats.shards queries

commit 213bbabe499e125962a72808e7222c801e9503e6
Merge: 5531475cc7 d79a37ab62
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Dec 16 07:49:31 2013 -0800

    Merge pull request #228 from crate/s/admin-ui-health-sql
    
    admin-ui: resolve cluster health state using SQL now

commit d79a37ab625678e8562d949e51b3e6a7878a51e5
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Dec 16 16:07:45 2013 +0100

    updated to new crate-theme v0.0.2

commit db7dd9b57c6340cc450f09e412d14aab91590614
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Dec 16 15:51:50 2013 +0100

    admin-ui: resolve cluster health state using SQL now
    
    implemented SQLQuery service, also used by console view now

commit 5531475cc7c3ca52d4176f1857c675368ed2ac8e
Merge: 84a9e69e15 531f0677ab
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Dec 16 07:07:35 2013 -0800

    Merge pull request #227 from crate/m/aggregate_nested_columns
    
    allow nested column references in aggregate functions

commit 531f0677abb43bfc8f6201ffb35312dd6e65ed31
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Dec 16 15:30:04 2013 +0100

    allow nested column references in aggregate functions

commit 0383ee23dc43636d2452d0b9a1cd8e327b32ecd5
Merge: 98fcd2566d 84a9e69e15
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 16 13:57:38 2013 +0100

    Merge remote-tracking branch 'origin/master' into b/groupby-bytesre
    
    Conflicts:
            sql/src/main/java/org/cratedb/action/sql/ParsedStatement.java

commit 84a9e69e1596ee73943ee6886c4c687aa2cd1a0c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 16 13:47:27 2013 +0100

    prepare release 0.19.12

commit bc9772e7e32cba48274aa6f51752cc9d47819358
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 16 12:14:17 2013 +0100

    fix order by for non-alias if used together with group by

commit c4b734c4ead68c3c413811280881aafb31692f9c
Merge: a9f62939df 3f6c8ee1f4
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Dec 16 03:27:28 2013 -0800

    Merge pull request #226 from crate/m/count_on_shard_stats
    
    fix count(*) on "virtual" tables

commit 3f6c8ee1f458a3b59dee0c7a550ceb4594216f59
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Dec 16 11:40:28 2013 +0100

    fix count(*) on shard stats

commit a9f62939df56287473b091770e1107374168a8ad
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 13 12:20:17 2013 +0100

    prepare release 0.19.11

commit f7ec5d731883b797684af159394853e8a59614e1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 13 12:09:59 2013 +0100

    log IOException: connection reset by peer as warning instead of error

commit 3d33f1ad8c5872275ccf71dcb23c4778f0bdb6f0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Dec 13 11:59:09 2013 +0100

    fix 409 conflict handling for chunked requests

commit 98fcd2566d3f639e26229cb2544f03dc3f8dd8f5
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Dec 13 00:24:34 2013 +0100

    seperate distinct count from other count state, should fix distinct count

commit 31f3865b3f57c81368444705e8447e61a8cc9bb1
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Dec 13 00:18:47 2013 +0100

    make tests deterministic

commit 951898efb8be0547da07c916d095d9efb37be4e8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 12 11:00:49 2013 +0100

    now AggExpr have their own returnType which may be different from the internal expression

commit 97d5bf3429590d5f71b6b52f554fcbaf38ec45e6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 12 10:41:32 2013 +0100

    throw error on group by if multiValued and fix error handling on reducer

commit 70da58a53e648a4a3e5b8f8abe0701fa1fe0deea
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Dec 12 08:41:35 2013 +0100

    some global agg fixes

commit f0d70fa9705e9f55b53e7cb494ac9f4b6b5861b4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 11 22:20:11 2013 +0100

    add a LiteralValueExpression to support stuff like count(?) args: '*'

commit f76b5bff16039c14a640926cd0a91001313f923a
Merge: 73ef041136 7450394837
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Dec 11 21:47:37 2013 +0100

    Merge remote-tracking branch 'origin/master' into b/groupby-bytesre

commit 745039483744cb6a0bcdb63f931a488a4a47730d
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Dec 11 21:43:18 2013 +0100

    prepare release 0.19.10

commit 73ef0411366f9d9628c31309cbf07de9b92832cc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 11 21:38:56 2013 +0100

    fix merge errors

commit 03e0e28615061029766e77f45907f20d8ec56a65
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Dec 11 20:26:25 2013 +0100

    new design based on sb-admin, updated angularjs

commit 072b5f0b4b77473f76a16b9e1975b362df29bc17
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Dec 6 16:54:23 2013 +0100

    admin-ui: added sql console, fixed footer

commit 45307766848c7aa39389984ba28135a6880fcb3b
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Dec 6 15:32:08 2013 +0100

    show real load from cluster now

commit aa99187ccc1ef82e5d8b09ba8dba17d988fffffe
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Dec 6 13:00:02 2013 +0100

    implemented new admin-ui using crate-theme

commit 35efda6e4f40eabbba1222c5d0f683f5bf651167
Merge: 93bf936784 09f2ab9d81
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 11 20:10:10 2013 +0100

    Merge branch 'master' into b/groupby-bytesre
    
    Conflicts:
            sql/src/main/java/org/cratedb/action/SQLMapperResultRequest.java
            sql/src/main/java/org/cratedb/action/SQLReduceJobResponse.java
            sql/src/main/java/org/cratedb/action/SQLReduceJobStatus.java
            sql/src/main/java/org/cratedb/action/TransportDistributedSQLAction.java
            sql/src/main/java/org/cratedb/action/TransportSQLReduceHandler.java
            sql/src/main/java/org/cratedb/service/StatsService.java
            sql/src/main/java/org/cratedb/stats/ShardStatsTable.java
            sql/src/test/java/org/cratedb/action/SQLReduceJobStatusTest.java
            sql/src/test/java/org/cratedb/integrationtests/ShardStatsTest.java

commit 93bf936784b9a62abbe4c13d95cb38b9331b70b9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 11 19:25:37 2013 +0100

    correct types

commit 041e31efadac1c0d6f81a769f5ef68905cf54d3a
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Dec 11 19:47:48 2013 +0100

    global row serialization fix

commit cf9e44485fe2502f66cee6443b1e3238f3a3c083
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Dec 11 19:45:54 2013 +0100

    only merge if not null

commit 5c840d539c8202be65ca2bc92817b05a9595ac73
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Dec 11 19:17:21 2013 +0100

    formatting

commit 985e5b8feb24fa346cd8c82aee2fc82b902c0216
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Dec 11 19:13:58 2013 +0100

    handle null keys

commit a1134bc6ba31eef89346350059a7e5c48cdf09d3
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Dec 11 19:07:43 2013 +0100

    make bytesref expression return safe values

commit 8427ff3be389943ec6098e2025ca4bb740a86173
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Dec 11 19:03:49 2013 +0100

    do not call terminate twice

commit 0f233ce1064e8148f37df00eae9bb3d1e45d7f4f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 11 15:18:12 2013 +0100

    fix serialization error in GroupByRow

commit 3d976f8fc538a73797b400d1768c482ea9e5ff64
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Dec 11 14:34:13 2013 +0100

    wip

commit 09f2ab9d817a189ead6e347dbd49a13ab5c5f614
Merge: 088b18ba3d c1e718cc0f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 11 02:38:53 2013 -0800

    Merge pull request #222 from crate/j/nonblocking
    
    avoid blocking on reduce jobs (sql group by queries)

commit c1e718cc0f23fef76cbb736f1dc8a062da204d84
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 11 11:20:02 2013 +0100

    use a recycler to store the reduce result

commit dfacd9cf1b5286be82d264fc4af5759db8767816
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 11 10:51:37 2013 +0100

    use weakref for reduce job timeout
    
    this way the memory can be reclaimed by the gc before the
    scheduled runnable is executed

commit 394abbaf599b6dcfe2399b700ff1cf5cc0d3146b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 5 18:28:18 2013 +0100

    avoid blocking on reduce jobs (sql group by queries)
    
    this should also fix possible thread-deadlock's that
    occurred if too many group by queries where executed in
    parallel

commit 088b18ba3d610f0353b356913d97a7c4dfa4cd9f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 5 16:37:09 2013 +0100

    change threadpool settings for group by
    
    to avoid blocking each other in case of mapper/reducer race
    condiction

commit 2dbecbf9d125fd7802fea043b1636d45efa928d0
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Dec 5 15:14:11 2013 +0100

    prepare release 0.19.9

commit ffb4f347c4686d187ed876b8fa070c7b127e9f8d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 5 14:27:49 2013 +0100

    global node setup for benchmarks

commit d080e923b7c28eb16b324906200981cb1ffc1add
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Dec 5 12:15:03 2013 +0100

    remove randomization from test classes

commit 09bb9047ab03c23fae097844f7bcb69b59a04dac
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Dec 4 18:28:50 2013 +0100

    trying to catch common deserialization exception that gets swallowed

commit 417f7be97b85fdb20314a30d25f89f3eea8fae1e
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Dec 4 18:09:11 2013 +0100

    more verbose assert messages on common failure on jenkins

commit 1fb462fad24981ef358c431b281686d4c0950db0
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Dec 4 16:45:19 2013 +0100

    use SUITE scoped Cluster in TransportSQLActionTest
    
    because some tests query the information_schema.routines which accesses the cluster state for custom analyzers etc.

commit 18d07634c381adef1c7baf65359f8cd40d9262bc
Merge: 31f4b879d4 a258be8803
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Dec 4 13:42:11 2013 +0100

    Merge branch 'master' of github.com:crate/crate

commit a258be8803f2dfc1aeaa6d4bc1d3189ea3f72f0c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Dec 4 13:41:58 2013 +0100

    update es/upstream submodule

commit 31f4b879d486f1da1aae91baad59aebb4cf7a3be
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Dec 4 13:41:42 2013 +0100

    set archive base name for 'admin-ui' plugin

commit 7437c0bbe9daa776f9d8ea228e61bd4b288a4322
Merge: ba77c82599 118cda4a23
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Dec 4 04:40:29 2013 -0800

    Merge pull request #216 from crate/s/admin-ui
    
    renamed crate admin plugin to `admin-ui`

commit 118cda4a23856eaa1bf2c3633972be3b4d6b3c4a
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Dec 4 13:38:40 2013 +0100

    renamed crate admin plugin to `admin-ui`

commit ba77c8259936c37fe07e60b68d01b4582f21312a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Dec 2 09:47:41 2013 +0100

    update elasticsearch to 0.90.7

commit d366547dfdddbd2fd2f34b723940870e69cf3969
Merge: f7a1afee86 01863639d1
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Dec 4 02:48:09 2013 -0800

    Merge pull request #215 from crate/s/shard-stats-aggregate
    
    support aggregates without group by on shard stats

commit 01863639d128204e8c5e13e592102e829570f09e
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Dec 3 22:15:04 2013 +0100

    support aggregates without group by on shard stats

commit c9bf4b1549850f0bb522646dc1b743a71417b985
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Dec 3 20:34:25 2013 +0100

    Also list unassigned shards when querying shard stats table

commit f7a1afee866dd8010256fc947429b45de92be6e9
Merge: e495b25d55 f28ecb61e3
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Dec 4 02:08:07 2013 -0800

    Merge pull request #213 from crate/s/shard-stats-unassigned
    
    Also list unassigned shards when querying shard stats table

commit f28ecb61e373be00d59bb007f5a11c7306589df7
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Dec 4 10:49:04 2013 +0100

    Fixup! Also list unassigned shards when querying shard stats table

commit c2f973916c22d03f0d3a4611c590d644fb65b255
Merge: 784fa77094 e495b25d55
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Dec 4 08:57:15 2013 +0100

    Merge remote-tracking branch 'origin/master' into b/groupby-bytesre

commit 8cac1fc33f14b7f410524c6815db194e55028b13
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Dec 3 20:34:25 2013 +0100

    Also list unassigned shards when querying shard stats table

commit e495b25d5527f98a5877bc3accf0efee89c42b51
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Dec 3 22:50:49 2013 +0100

    fix groupbyrow deserialization errors

commit 93bec59e652502f940c901c30f716983fd696dcc
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Dec 3 21:40:55 2013 +0100

    bugfix: fix NPE in GroupByRow Constructor again

commit 9b22ce5bf19737ab3d125978a0e5ba7d36ae063e
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Dec 3 21:09:08 2013 +0100

    bugfix: fix NPE in GroupByRow Constructor

commit f4d72de3afbecd741a2406b49435f88ae6ea404f
Merge: 5f029a9d30 0a9bf0178e
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Dec 3 09:59:36 2013 -0800

    Merge pull request #212 from crate/m/count_distinct_many
    
    bugfix for many COUNT(DISTINCT ...) calls

commit 0a9bf0178e351496d2249efe419e6f6ff6f1033c
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Dec 3 18:20:10 2013 +0100

    bugfix for many COUNT(DISTINCT ...) calls

commit 5f029a9d30c6b30f5054892e8885da1ffcc262ee
Merge: b64e2bc6dd a137ef4bf8
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Dec 3 09:54:05 2013 -0800

    Merge pull request #211 from crate/m/any_optimization
    
    any aggregate optimization

commit a137ef4bf8b94de84bf62a384f50b985ddbea455
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Dec 3 16:09:50 2013 +0100

    any aggregate optimization

commit b64e2bc6dde573f9369999a38f0e5a03394dda1a
Merge: 454642835e a5122e3d1b
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Dec 3 07:33:16 2013 -0800

    Merge pull request #210 from crate/s/stats-memindex-pool
    
    use new implemented MemoryIndexPool at shard stats table

commit a5122e3d1ba15008e801133514e319425e06e6f5
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Dec 3 10:40:23 2013 +0100

    use new implemented MemoryIndexPool at shard stats table

commit 454642835ed35de89faa36149bf3eaf52eb48d57
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Dec 3 15:54:52 2013 +0100

    fixed stats doctest

commit bcc2bda13ca237c2fcad5cf185b8201dd2e5d2b5
Merge: 5ed940e5e9 4da5e67b85
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Dec 3 06:28:04 2013 -0800

    Merge pull request #207 from crate/seut/shard-stats
    
    implemented dynamic in-memory stats.shards table using distributed sql

commit 4da5e67b85e090edd9adce9ae265ea123d10577a
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Nov 26 23:36:37 2013 +0100

    implemented dynamic in-memory stats.shards table using distributed sql

commit 784fa77094270ddfa95d4d1fc35018d812b1a54a
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Dec 3 09:28:15 2013 +0100

    group by basic benchmark

commit 5ed940e5e954504f94421f6192a896a7013765cd
Merge: 26854510fe 1fb63518d6
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Dec 2 07:16:35 2013 -0800

    Merge pull request #209 from crate/m/agg_serialization
    
    concrete serialization of aggstates

commit 1fb63518d65af8e2d5dfd9a6e558b0f97e2d670b
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Dec 2 16:06:16 2013 +0100

    concrete serialization of aggstates by using anonym implementations of abstract AggState classes

commit 26854510fed977aef6a942d551ed77b3207e65ee
Merge: 2fc1a83619 4e7cfd9621
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Dec 2 05:59:46 2013 -0800

    Merge pull request #208 from crate/mwahl/count_on_columns
    
    count on columns

commit 4e7cfd96218c95d299e19f735757bec414583d7d
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Dec 2 14:46:58 2013 +0100

    COUNT on columns

commit 7cf6b7c3f68c72a999c9fdb1460c8a84411d69be
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Nov 29 14:30:04 2013 +0100

    make count count non-NULL values in columns

commit 2fc1a8361992eb54fa4637b52d0114e7a9a90306
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Nov 29 12:37:02 2013 +0100

    hotfix 2: adapt tests to new ANY aggregate function behaviour

commit 339ff9c79e9d73d07bb0ad709ecfbf6a5c843b55
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Nov 29 12:23:43 2013 +0100

    hotfix: adapt tests to new ANY aggregate function behaviour

commit 9adcb7d3c44604576c09d2b45d7285d82aac007a
Merge: cc125db206 69edd4b6f3
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Nov 29 03:09:28 2013 -0800

    Merge pull request #206 from crate/mwahl/agg_any
    
    any aggregation function

commit 69edd4b6f3a9f02dbd678c85c2fe3fd7b21e0f74
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Nov 28 18:45:52 2013 +0100

    any aggregation functions

commit cc125db2066a8f5d29c1f6c39d296ab132f82b52
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 27 18:42:19 2013 +0100

    add support for the DISTINCT keyword in the count aggregation function

commit 1cd78ccf85924bb9a439937a695331c184209532
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Nov 28 16:00:06 2013 +0100

    bugfix: 0 result rows in global group by created an error

commit 452da5daeba49a958027a25c4df93414cffdbca1
Merge: a60563a957 53c049c7f9
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Nov 28 06:32:10 2013 -0800

    Merge pull request #204 from crate/mwahl/agg_global
    
    aggregation functions without group by

commit 53c049c7f9687cbe51b7acc3fb3ce2c6d835fd03
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 27 21:22:35 2013 +0100

    aggregation functions without group by

commit a60563a95788a0de97f5311dbb586e9a47e092ec
Merge: 234630be2a 5cc0b67d0c
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 27 08:19:13 2013 -0800

    Merge pull request #203 from crate/mwahl/agg_avg
    
    AVG aggregate function

commit 5cc0b67d0c57dc805710dee2d72e68ca659ce584
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 27 16:37:02 2013 +0100

    AVG aggregate function

commit 234630be2ad34e275d16a23009e4772aa441aedf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 27 15:13:56 2013 +0100

    move createAggState method from AggFunction to AggExpr
    
    this avoids dependence on the AggFunction map
    
    Conflicts:
            sql/src/main/java/org/cratedb/action/groupby/aggregate/min/MinAggFunction.java

commit 9dbd8e0a289646e42577ef36e77a35429f78cf3e
Merge: ec24cd4c54 dd6741d7f3
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 27 06:06:50 2013 -0800

    Merge pull request #201 from crate/mwahl/agg_sum
    
    SUM agg function

commit dd6741d7f3b9c4089e8dbdaf831c2ba3a900e770
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 27 11:49:15 2013 +0100

    SUM aggregation function

commit 9210ad9c6f64bea7e31e17cf6d081a8b6c20535a
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 27 09:58:22 2013 +0100

    max aggregate function

commit 01f731f3efac21958c9e81eeaa67a7b42a90157b
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 26 16:03:00 2013 +0100

    basic MAX Aggregate Function Implementation

commit ec24cd4c54ae29a4485183b0ee15a7bad4a982a1
Merge: bd3fb1c6f1 da2a89b450
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 27 03:55:35 2013 -0800

    Merge pull request #200 from crate/mwahl/agg_max
    
    MAX aggregation function

commit da2a89b450558e4b42710515ebf22c387632997a
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 27 12:46:56 2013 +0100

    add max agg function to stubs helper

commit 247080725b9ee4bfcb552a117a656f588d06aa49
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 26 22:00:59 2013 +0100

    replace idxMap with GroupByFieldExtractor

commit fb35637c1741143e9c96acbd6306c60f4555fe2f
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 27 09:58:22 2013 +0100

    max aggregate function

commit d1fa21cd818ecb6fbd682baf64f1b5311d8517f0
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 26 16:03:00 2013 +0100

    basic MAX Aggregate Function Implementation

commit bd3fb1c6f14ec2d8be60420918172c5d0a14dfe3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 26 23:32:33 2013 +0100

    add a nodeExecutionContext stub that can be shared across unit tests
    
    currently this is just preparation work - the existing unit
    tests need to be adjusted.

commit 0aefe74fa427bf58464be4bf7cd8686aabe76b18
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 26 22:00:59 2013 +0100

    replace idxMap with GroupByFieldExtractor

commit 8381378c16b89b99b01180cb8041da658f2d3e55
Merge: 8d24892a84 0a14a704bf
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 26 10:07:11 2013 -0800

    Merge pull request #192 from crate/mwahl/avg
    
    Min Aggregation Function

commit 0a14a704bf906fe0d1be52d96d1ff323fc965b8f
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 26 19:04:39 2013 +0100

    fixup: fiiiiiiiiiixuuuuuuuuuuuuuuuppp

commit ad4d0dcc1ec98a803c98c4e4ae4db918714ac7d4
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 26 18:56:14 2013 +0100

    fixup: fix fix fix

commit 191bcac30c69138f62a0e6b09108fdfef141c25d
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 26 18:44:07 2013 +0100

    fixup: fixed up

commit 25c2217a99f673492c7b91b356eab0caf771e6d5
Merge: f030e76402 1e71735286
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 26 09:30:53 2013 -0800

    Merge pull request #197 from crate/j/group_by_field_extractor
    
    optimize GroupByRow field-value access when building the SQLResponse

commit 1e7173528654f700e0e339ffb6f9d7a67afd2e1e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 26 18:21:41 2013 +0100

    optimize GroupByRow field-value access when building the SQLResponse
    
    do so by creating anonymous lookup classes outside the loop
        with direct array access.

commit f030e76402d9556f1df8d35406262dc59479b672
Merge: 270763f7b9 8d24892a84
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 26 18:20:17 2013 +0100

    Merge remote-tracking branch 'origin/master' into mwahl/avg
    
    Conflicts:
            CHANGES.txt
            sql/src/main/java/org/cratedb/action/groupby/GroupByRow.java
            sql/src/main/java/org/cratedb/action/groupby/SQLGroupingCollector.java

commit 270763f7b9f93bde8100257bf592a4ea6f505a64
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 26 18:04:45 2013 +0100

    fixup: docs and generic MinAggState

commit 8d24892a84280179286edbee56dd179653c72bf5
Merge: 3c11565329 b256ccaf9f
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Nov 26 08:42:09 2013 -0800

    Merge pull request #196 from crate/dobe-grouping
    
    grouping agg improvements

commit b256ccaf9fb005f738874c8ca5b7c0c70405120e
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Nov 26 17:41:44 2013 +0100

    removed unused field

commit 3c11565329ee7e7f39d589dcff91c11752adeb03
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Nov 26 17:03:15 2013 +0100

    grouping agg improvements

commit 336075dd1db88d1e17cbfd7a0d0c146e36d5c770
Merge: cd367ec4af 9ab11737e7
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Nov 26 08:01:49 2013 -0800

    Merge pull request #195 from crate/j/tracelogging
    
    more fine grained trace-logging on mapper

commit cf696ec6f02a011e57b31c8a629611df45adc916
Merge: b1a960dc7b cd367ec4af
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 26 15:39:43 2013 +0100

    Merge remote-tracking branch 'origin/master' into mwahl/avg
    
    Conflicts:
            CHANGES.txt
            sql/src/main/java/org/cratedb/action/TransportDistributedSQLAction.java
            sql/src/main/java/org/cratedb/action/TransportSQLReduceHandler.java

commit b1a960dc7b32fe0d38c0db6234f3432f1db10af0
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 26 15:30:17 2013 +0100

    fixup: fix MIN with nonexisting column and docs

commit 9ab11737e7644ca38da53d39eeb8d8459b4ae145
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 26 14:31:29 2013 +0100

    more fine grained trace-logging on mapper

commit a17aae530956af8a475b6c7c03dc255a2c0500c2
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 26 14:24:57 2013 +0100

    fixup: typed MinAggStates

commit cd367ec4af35191b5fdee91d19459e5bfcb486e5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 26 12:02:26 2013 +0100

    prepare release 0.19.8

commit 0f9ade72f86ef95257cb6ec3a5e781433b660144
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 26 11:28:13 2013 +0100

    fix NPE on tracelogging and add more logging

commit c4277265adeab5075e7cbce0a0194912c7490a4e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 26 09:31:12 2013 +0100

    don't rely on classpath overloading to register the "/" rest-handler
    
    instead a guice module binding hack is used.

commit c4d01d4e94b0cfbce6cdceee80b202a84ca6bec8
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Nov 25 23:19:42 2013 +0100

    fixup: more efficient dataType checking

commit 3f0cbc52ccd6a56139b6425cc1751c83cabd0ffb
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Nov 25 17:53:24 2013 +0100

    ignore sandbox

commit 6ae049b6f533b7aa44f47ef3b40a4a4031fc9843
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Nov 25 17:52:16 2013 +0100

    prepare relase 0.19.7

commit 5bf1c275c60c8898f7a1ea56240e71f9cb5802ba
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Nov 25 17:09:05 2013 +0100

    fixup: changes

commit f77b5e9b21678fd3ab4ba51b36d40cbfec285ebe
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Nov 25 17:04:36 2013 +0100

    fixup: test fixes

commit 8dcd1949b1a16454a9f2757e40e4aee2d3e41c3e
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Nov 25 16:01:30 2013 +0100

    fix issues with min agg-function/-state

commit 92df6e0de8abb1398a1f84d27b71ad051c87715a
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Nov 25 14:53:31 2013 +0100

    reintroduce type mapping on min(<column>)

commit 5a783533006a53d03b7933223dd87eaa403229d7
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Nov 25 10:41:26 2013 +0100

    min agg expr and group-changes done, bugfixes TBD

commit 9e64a0d7493ffb83e28381579f316780820bba7e
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 22 13:58:33 2013 +0100

    implemented SQL MIN(columnName) aggregate function
    
    TODO:
    - support MIN(columnName) without alias
    - throw exception on MIN(*)
    - fix groupBy grouping collision bug
    - support order by MIN(columnName)

commit 8d0998bfdd189aaf70041a48a378ecb140a0d5e9
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Nov 21 16:30:33 2013 +0100

    common testclasses for sql tests

commit 54381df7e982dbec6fa31bf22c083f240903a106
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Nov 21 15:41:06 2013 +0100

    sql nodes test

commit cca8d7d4bbbf3ed22c0f13e7266a01bbd82d1e3d
Merge: 47b1c5c6eb 357c959435
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Nov 25 04:47:20 2013 -0800

    Merge pull request #190 from crate/mwahl/fix_group_by_nested_object
    
    bugfix: group by on nested column - missing mapping because of missing types

commit 357c959435e2874288ceac83bafcb3f9becc5d6d
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Nov 25 13:16:02 2013 +0100

    bugfix: group by on nested column - missing mapping because of missing types

commit 47b1c5c6eb2e18897c394ee848bf945be177c2b3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 25 13:41:41 2013 +0100

    fix isEmpty() in LimitingCollectionIterator

commit db982b57b1a4c33a2009aa140960e52e34b9b11e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 25 10:21:47 2013 +0100

    fix NegativeArraySizeException on group by queries
    
    occured with a offset that is larger than the number of rows

commit a7320346d5c31059ea48f5f446d04b621429022f
Merge: 8f84e02f15 b6001fdae8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 25 02:44:22 2013 -0800

    Merge pull request #188 from crate/j/group_by_perf
    
    group by performance improvements

commit b6001fdae8a3d2d28b0110f062e92551b401d155
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 25 10:08:48 2013 +0100

    group by: improve merge logic on reducer

commit d0615a41e36e7b948480dc2c43777c5a8385cc99
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 25 09:56:02 2013 +0100

    group by: don't pre-sort on mapper; don't sort on reducer if rowCount < limit

commit e0d154789237cfdd82a285c302d257fe308618c6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Nov 23 12:44:32 2013 +0100

    group by: use map based merge instead of sorted list merge
    
    this seems to be much faster.
    
    group by on a high cardinality field with 70k rows now takes
    about 10ms on average instead of 40ms on a single node

commit 961dc945ce1e8b066561653623a548c486bb5451
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Nov 23 11:50:27 2013 +0100

    group by: use ArrayList und Collections.sort instead of PriorityQueue

commit 89a47cf40412bdcbf05ce2a8812f6805c94dcb2a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Sat Nov 23 00:04:32 2013 +0100

    use PriorityQueue instead of MinMaxPriorityQueue
    
    less memory usage and takes only 1/4 of the time for q1.addAll(q2)

commit 8f84e02f159ede91d4e1ccbbfd0308ebad011161
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 22 15:59:47 2013 +0100

    add support for group by query on information schema

commit 58992eb06be4d3d1462cb3b4b15e416508ba57f7
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 22 15:43:57 2013 +0100

    prepare release 0.19.6

commit 94b07eab5e1e2c0a24307490eb4208d614bd99c7
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 22 15:22:08 2013 +0100

    fix: added sql query duration to SQL xcontent response

commit 7c1a2c4c1e2faa498b0e481e7f02df6b0d9f8a50
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Nov 22 14:15:03 2013 +0100

    prepare release 0.19.5

commit dda004d5bb085c129eacef802848a7b14dd8fda5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 22 12:14:45 2013 +0100

    correctly apply offset for group by queries.

commit 5b3392f43eeeac236597c4ca8122a89027aa8d9d
Merge: af93b75db3 85d1fd9789
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Nov 22 03:10:53 2013 -0800

    Merge pull request #183 from crate/dobe-inout-fix
    
    inout pk fixes

commit 85d1fd97890c520c513c6e9cc7510f0182a65c24
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Nov 22 12:03:45 2013 +0100

    inout pk fixes

commit af93b75db34432781a45fd9d21b9ccd3712c509f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 22 09:45:23 2013 +0100

    raise error that group by on column with fulltext index doesn't work while parsing.

commit 63e8144bccb6060dcae1554450f1675173e7ae96
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 21 21:23:01 2013 +0100

    don't start node in IndexMetaDataExtractorTest

commit 508cc3b967239dc2af4d6033a227e9426db388f4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 21 15:22:28 2013 +0100

    prevent loop on reducer if shard result is received before job-context is established

commit c762531efab6b09f69c34a4b570475504a5e62a4
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Nov 21 15:43:55 2013 +0100

    hotfix: itest fix

commit b422fffc5117a5ccd452dc2e13e1cdda77104261
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Nov 21 15:30:12 2013 +0100

    added forgotten limit 2

commit bfb6703fbe29eda634c8288b1c24804ac9be08d5
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Nov 21 15:10:09 2013 +0100

    hotfix: core package moved

commit 5323625c6e5a4b34ecc3d248848a38280d8b4d55
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Nov 21 14:57:46 2013 +0100

    remove generated file

commit 0ccbf28a9132d65f0feb04a527850877bc8ef361
Merge: c12f5f1b32 6899cef854
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Nov 21 05:47:26 2013 -0800

    Merge pull request #177 from crate/seut/crate-version
    
    Implemented usage of crate version

commit 6899cef8544e6bc8d58507ce05efc58f3b16528e
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Nov 19 16:30:06 2013 +0100

    Implemented usage of crate version
    
    implemented crate Version & Build class,
    use crate version number at main rest endpoint,
    use es version as `es_version`,
    use Version.CURRENT for distribution & create_tag.sh,
    removed static versions.json, read it from main rest endpoint instead
    Conflicts:
            CHANGES.txt
            app/build.gradle
            core/build.gradle

commit c12f5f1b32c29c5d0db42f162d25d85f09e2563f
Merge: 70149e3a60 ff5d05c197
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Nov 21 05:43:12 2013 -0800

    Merge pull request #179 from crate/mwahl/test_fixes
    
    Test Setup fixes

commit ff5d05c197dbcfbc4311cbc8a60f20d68a5a86dd
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Nov 21 14:18:47 2013 +0100

    SQLType.ConvertException rework

commit b64d026d9c9b6bfbe915d74962520ab357bd5918
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Nov 21 14:18:29 2013 +0100

    inout: less test output, doctest without background cluster

commit 70149e3a600c9ec69cb29d3593f269d235257be6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 21 13:55:03 2013 +0100

    group by: forward SQLRequest to reducer and parse statement again

commit 32222ab7d1b834b09868515f25667c0b721d16b6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 21 11:17:12 2013 +0100

    optimize group by state serialization
    
    the state classes no longer contain the info about which
    class they are.
    
    instead the receiver has to know in which order the states
    are and the type of the states in order to read them
    correctly.

commit d939898ad54989f6ee642853bec5565d906061af
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Nov 21 11:57:06 2013 +0100

    doctest test refactoring

commit ee3d19781f8fe2d9ae3ba868bcb42db304456d62
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Nov 21 11:56:55 2013 +0100

    ip sql type

commit 9d61aa9596d9ac8ef83e3b7d62348e85a404a4a0
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Nov 21 11:45:00 2013 +0100

    more verbose output for TypeUnknownException

commit a35649d8e766b8f93176e6cb4cb4cf0d7ecf2ee9
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Nov 21 09:04:32 2013 +0100

    increase inout test logging

commit 540344688a71c28f28e670dbc9c23d569bccd793
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 20 17:48:54 2013 +0100

    disable group by on fields that contain arrays
    
    throw GroupByOnArrayUnsupportedException if a field that is
    encountered during a group by operation contains an array

commit 5d37b932ff8dc7e8f47267f67a19b9b605f5f33f
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 20 18:54:35 2013 +0100

    first attempt

commit c507d3dc81352e26089a4193a7060c5002e6e6f9
Merge: 6f511b8fdc 62b69432e0
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 20 08:51:41 2013 -0800

    Merge pull request #175 from crate/mwahl/duration_test_fixes
    
    duration test fixes

commit 62b69432e088b6970441dd47ebd1f1a797742286
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 20 17:49:36 2013 +0100

    fixup: same checkin ClusterStateSettingsActionTest

commit 927d8d3f335acb800ae50f8baf87347b0611f243
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 20 17:46:23 2013 +0100

    duration test fixes

commit 6f511b8fdcab51c69ca080eb37caec1bcb7a6cb4
Merge: fdf41db799 8735aaa63b
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 20 07:43:43 2013 -0800

    Merge pull request #173 from crate/mwahl/type_guessing
    
    type guessing

commit 8735aaa63b505989220b94af2dca8c582becf061
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 20 15:45:10 2013 +0100

    type guessing

commit fdf41db799400112ee5b8e53731b6cd20a25f4bd
Merge: ae20f7b7bc bdba78e22d
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Nov 20 07:17:28 2013 -0800

    Merge pull request #174 from crate/seut/sql-duration
    
    Added ``duration`` property to SQLResponse, reflecting the duration of a SQL query.

commit bdba78e22da1377f897ddcf65537172ec7182ba3
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Nov 20 15:56:01 2013 +0100

    Added ``duration`` property to SQLResponse, reflecting the duration of a SQL query.

commit ae20f7b7bc83d609888323fb8c119d4e492318b4
Merge: 2ca1a37057 d9dccf990f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 20 06:51:50 2013 -0800

    Merge pull request #171 from crate/j/group_by_newstructure
    
    change format of groupByResult sent from Mapper to Reducers

commit d9dccf990fa59136c6f5c6abbd2ca1a24e37d005
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 20 14:36:38 2013 +0100

    extract idxMap from GroupByRow

commit b336f90e558da22058bb74e53ba0ff1d16b71c6e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 19 18:26:14 2013 +0100

    complete map/list structure change for group by

commit b977eb4844c829d3144ce1c07cd0dd3e6ba5d95c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 19 16:57:28 2013 +0100

    add guava sorting to OrderByColumnIdx

commit c5dad17707f0c8c60a0daca9c3b173d3f7586872
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Nov 19 10:51:35 2013 +0100

    use list for group by result instead of map

commit 5a0155aa9143c4476160e2215d64b79bf5d201a9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 18 12:11:40 2013 +0100

    add test for group by on empty table

commit 2ca1a370574f63690a62fcbb072b56d1a79c32e9
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 20 12:37:35 2013 +0100

    hotfix: detect dynamic nature of column correctly

commit 88fbf9db2230da6f0818b4583ff848a907f97c13
Merge: 34c0433711 b5db619123
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 20 03:23:35 2013 -0800

    Merge pull request #172 from crate/mwahl/sqltoxcontent
    
    Mwahl/sqltoxcontent

commit b5db61912371e0c37021b3710c8accd3ba50d3c8
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 20 12:11:51 2013 +0100

    fixup: review corrections

commit e37ddae65ff53d94bcab90aaf59c6760a89804c5
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 20 09:51:44 2013 +0100

    docs, more tests, better exceptions

commit 209b6bd50c379ff819d309bc749adfda48b84c0c
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 20 09:51:25 2013 +0100

    new es upstream, do not map source on GetRequests

commit 4963f8632aceac483bb1030c2430f699fa201e49
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 19 17:41:14 2013 +0100

    mapping of object types

commit 963481ef278cf880aa152a263d229c40c9b5b3fc
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Nov 18 18:19:31 2013 +0100

    basic sql-type mapping

commit 93b7640ebc70b24ac6a4bb7d5eabcbd22106a160
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Nov 15 20:18:38 2013 +0100

    refresh for AbstractNodesTests

commit 34c04337110275cf20e457933735abb0f4bb20cd
Merge: d5b60a62fb 38672da35b
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 19 09:39:50 2013 -0800

    Merge pull request #170 from crate/seut/group-by-default-limit
    
    Increased default ``SELECT`` limit to 10000.

commit 38672da35bb926d854b35a7bf1470a068765b4c2
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Nov 19 18:20:43 2013 +0100

    Increased default ``SELECT`` limit to 10000.
    
    Also use this default limit on ``GROUP BY`` queries if no limit is defined explicit.

commit d5b60a62fb3df817238ffd5525bf0120be49c9ae
Merge: ccd54e1b45 f9273553f3
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Nov 19 08:46:49 2013 -0800

    Merge pull request #169 from crate/fix/select-star-npe
    
    fixed NPE when using a star select on an index with no defined mappings

commit f9273553f37583ba070a11c75cd922b73c427cf7
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Nov 19 17:11:47 2013 +0100

    fixed NPE when using a star select on an index with no defined mappings

commit ccd54e1b451d6ec758f281f6fca578d0d3bf2809
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Nov 18 14:56:07 2013 +0100

    prepare release 0.19.4

commit 967be376cfcd19fc3f7862a1227f3175e2787d11
Merge: 21677b00ba 4448278205
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Nov 18 05:53:54 2013 -0800

    Merge pull request #168 from crate/seut/blob-disabled-error-handling
    
    proper error handling while uploading files to an index with disabled blob support

commit 4448278205dac6a667d717513d4c7c6f8d3d6224
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Nov 18 14:37:03 2013 +0100

    proper error handling while uploading files to an index with disabled blob support

commit 21677b00ba4d246486114534ab4d3e4212014d64
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Nov 15 20:16:40 2013 +0100

    test fixes, round #2

commit 4028fa476c30dfe3e9f5722fa52e4bc7eea14e1f
Merge: a27effca2d 8fab17e35e
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Nov 15 09:32:03 2013 -0800

    Merge pull request #166 from crate/mwahl/test_fixes
    
    test fixes and improvements

commit 8fab17e35edc77b82dde9056c0b6acb55f918b97
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Nov 15 17:20:43 2013 +0100

    test fixes and improvements

commit a27effca2df6a36ed3daff50e2482ebb4ab70732
Merge: 08d91980e5 aeb0dba934
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Nov 15 07:43:36 2013 -0800

    Merge pull request #165 from crate/mwahl/copy_mapping_docs
    
    mapping docs & proper error handling on table-alias queries

commit aeb0dba934b47a33af55a1e0786a3872de2584b3
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Nov 15 14:22:30 2013 +0100

    remove redundant _routing field from table mapping

commit 185fa639316052c048dbba6db6a7d5eee1591846
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Nov 15 13:55:05 2013 +0100

    proper error handling on table-alias queries

commit 08d91980e546782670baccb954e5ca4933b5b7ad
Merge: 52c3e0257f 926f82ffa6
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Nov 15 02:51:50 2013 -0800

    Merge pull request #164 from crate/mwahl/information_schema_indices
    
    information_schema.indices.columns now returns lists of column names

commit 926f82ffa613110b57d1c55dc25aba6d71b4d409
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Nov 15 09:34:34 2013 +0100

    information_schema.indices.columns now returns lists of column names

commit 52c3e0257f26944e857b0c9737091d8c0433e65f
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Nov 14 01:29:24 2013 +0100

    prepare release 0.19.3

commit c213021dddc9c2717609d89b4cf104d60ead62b5
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Nov 14 01:29:02 2013 +0100

    Schema check for table aliases can be disabled by config now

commit 60908cbd97168030c52459dcbd87d1b994ff33bb
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Nov 13 23:39:23 2013 +0100

    prepare release 0.19.2

commit 2279d524e1fa8c1a77797c8a821e7f868a5947a8
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Nov 13 23:25:14 2013 +0100

    Added support for table alias usage on ``SELECT`` queries

commit a0fa51b4ec14eec0b2fa00cc1ab9827ccf5877d2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Nov 13 21:35:59 2013 +0100

    use indexName from shardId instead of tableName from parsedStatement
    
    this way aliases should work correctly with group by

commit 793bed88a49cb38a1175c1bd9a408c1e993f76bd
Merge: 423f4daeba aee96795b4
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Nov 13 20:02:26 2013 +0100

    Merge branch 'master' of github.com:crate/crate
    
    Conflicts:
            CHANGES.txt

commit 423f4daeba1560d0fbe79c5ab171b12a6cdb3186
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Nov 13 20:01:37 2013 +0100

    Windows build: favor crate jars over all other jars at classpath

commit aee96795b4d7bbb9ca31f2be0638eab05ebcb82f
Merge: bd586a2091 977aa94e94
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 13 09:18:43 2013 -0800

    Merge pull request #162 from crate/mwahl/test_data_dir
    
    fix test setup to create data dirs as temporary directories

commit 977aa94e94aaad340a0756f0beefc95ec917aa34
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 13 18:11:12 2013 +0100

    fix test setup to create data dirs as temporary directories

commit bd586a20913769fa7ed11dc37b501f8f15200c37
Merge: f078831ae6 130586a4fe
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Nov 13 08:01:21 2013 -0800

    Merge pull request #161 from crate/seut/inout-import-vars
    
    fix: use nodeName instead of nodeId for path var ${node}

commit 130586a4fe7c784aaccf21474b5a805f2af728be
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Nov 13 16:50:41 2013 +0100

    fix: use nodeName instead of nodeId for path var ${node}

commit f078831ae6c69dce95d7a2dae37e9618cd6cb318
Merge: 4fd43ab2d0 6c70108bd9
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Nov 13 05:26:51 2013 -0800

    Merge pull request #160 from crate/seut/inout-import-vars
    
    Added support for variables inside the `path` value of a    ``COPY`` SQL command

commit 6c70108bd973f557541494cf4e2e4d408a0f55e6
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Nov 13 13:21:09 2013 +0100

    Added support for variables at the `path` value of a ``COPY`` command

commit 1a26265862b3fdf75881654bf94e075821344638
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Nov 13 13:19:21 2013 +0100

    Fix: using regex pattern on ``COPY`` did not work properly

commit 4fd43ab2d03a117a9f0a7025777e3bbfc1d1a0c3
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 13 12:16:25 2013 +0100

    prepare release 0.19.1

commit 1ff90799bc9ff3f37d5450dc3aae484f168766ed
Merge: 07c545934a fcb7200b78
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 13 03:13:52 2013 -0800

    Merge pull request #159 from crate/mwahl/core-package
    
    core package

commit fcb7200b78e2dd5f5ab5df93c93663151607f472
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 12 18:36:59 2013 +0100

    core package with IndexMetaDataExtractor

commit 07c545934ac84e9ec0d641045a8236e9e9fd0410
Merge: 27c3b3d518 c6d88c28d6
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Nov 13 11:21:06 2013 +0100

    Merge branch 'master' of github.com:crate/crate
    
    Conflicts:
            CHANGES.txt
            docs/sql/dml.txt
            docs/sql/information_schema.txt

commit 0a74497eb7eb71a9e26070ef97b6d1398259bc53
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 12 17:09:25 2013 +0100

    added empty core package and changed jar names to prefix crate-*

commit 53c444d58045e5cafa2c8ae0f17ca4da62cec739
Merge: f9fc276c71 c6d88c28d6
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 12 16:14:35 2013 +0100

    Merge branch 'master' into mwahl/core-package
    
    Conflicts:
            CHANGES.txt
            sql/src/test/java/org/cratedb/module/sql/test/IndexMetaDataExtractorTest.java

commit c6d88c28d6aae26f326b223426af7db0dcca479c
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 12 14:43:10 2013 +0100

    fix indexmetadataextractor tests

commit cc3e080b28c025415c6106ce7bc25040b3cf1e63
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Nov 12 12:23:52 2013 +0100

    prepare release 0.19.0

commit 8911ed0a7d6c07a946145380f81d879d4eb1e3d8
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Nov 11 17:59:44 2013 +0100

    Added support for importing data using SQL `copy` stmt

commit f89bccf32da0fec585a60f615cfbb674d991d36c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 11 15:08:06 2013 +0100

    prepare release 0.18.6

commit 09762b33d1364a0a38585683081914c9a169f17a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 11 15:00:21 2013 +0100

    fix NPE that occurred if a null value was passed inside a complex type

commit 97842383017df64f09f29141b928be43b3c713f4
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 12 11:47:46 2013 +0100

    created IndexMetaDataExtractor

commit 91c690bf557087ca7ecb8258f0988823d23a21f2
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 12 11:46:55 2013 +0100

    fix encoding bug when de-/serializing analyzer settings

commit de560f8aa080228d56463a9a71cf6189145a0678
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Nov 8 14:21:40 2013 +0100

    put routing info in information_schema.tables

commit f9fc276c71982eed6cdb5404f643813e6c9147c1
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 12 14:05:49 2013 +0100

    fixup: remove merge artifact from changes.txt

commit c16499e7b72621b019df9f9b2525865ff47835d4
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 12 13:54:48 2013 +0100

    fixup: javadoc and schema-corrections

commit 74b077f9668ed15ca0999d36e670022a0f02b6ae
Merge: f8a593215a cb9b0da02c
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 12 12:23:53 2013 +0100

    merge

commit 27c3b3d5188371cd3d978c2ed8fcac8fccce400f
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Nov 12 12:23:52 2013 +0100

    prepare release 0.19.0

commit cb9b0da02c1ef2b2c82630cf0190903157cbf3c9
Merge: 7cd7f1711b 0a1da35147
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Nov 12 03:21:56 2013 -0800

    Merge pull request #158 from crate/seut/sql-copy
    
    Added support for importing data using SQL `copy` stmt

commit 0a1da35147a4c659a6d575a4fb71cd2053e3f66a
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Nov 11 17:59:44 2013 +0100

    Added support for importing data using SQL `copy` stmt

commit f8a593215aa042ee8ad7b67d3801500b970a621b
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 12 12:19:12 2013 +0100

    prevent NPEs in IndexMetaDataExtractor.getIndices

commit 0d06e61d93c173d19aa23766849ee474a8eb2df0
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 12 11:47:46 2013 +0100

    created IndexMetaDataExtractor

commit f29909eae5e81507748761be506c15827d793e14
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 12 11:46:55 2013 +0100

    fix encoding bug when de-/serializing analyzer settings

commit 7cd7f1711b83c0f698b5ffe8d7c4e9f8799448df
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 11 15:08:06 2013 +0100

    prepare release 0.18.6

commit 7aef7b5252e7000911fef84e0af2f0bf3dd29e97
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 11 15:00:21 2013 +0100

    fix NPE that occurred if a null value was passed inside a complex type

commit ed8dece44d53cba37be684cc9134ab8652ab3264
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 11 14:22:35 2013 +0100

    prepare release 0.18.5

commit b18b8ab9e696cf246775ada6a77d54e4dd13f883
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 11 13:43:16 2013 +0100

    sql args: apply the mapping to all values inside a dict or list

commit b3feafd673d62afe2b4908d07d693241b6ade994
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Nov 8 14:21:40 2013 +0100

    put routing info in information_schema.tables

commit f807da707758c26b3f6b104ccbb8c1fc4e1fc5af
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 8 11:59:02 2013 +0100

    prepare release 0.18.4

commit 7da421ed0ccc81f3e479c998dca180fee8330f48
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Nov 8 11:38:46 2013 +0100

    add support for count(?) and count(pk_col)

commit dbcbb21cc93392616d3ddd5607eab11c33fc910f
Merge: 371cffa712 5d8270739a
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Nov 7 11:58:26 2013 -0800

    Merge pull request #153 from crate/seut/default-clustername
    
    use InternalSettingsPrepare for applying crate node settings

commit 5d8270739ab1f9767f46a30d17024eee0b9a9102
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Nov 7 20:51:13 2013 +0100

    use InternalSettingsPrepare for applying crate node settings
    
    re-enabled cluster-name tests

commit 371cffa71221b5376a2ae9d9dd170a2d63cf1d8b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 7 18:28:41 2013 +0100

    prepare release 0.18.3

commit 1748e08d881d83fb2fd0036c83ac27a0a5771cec
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Nov 7 18:03:36 2013 +0100

    changes

commit c788bec71b1f234145b66e0f3445c7dc3bb8192c
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Nov 7 17:10:29 2013 +0100

    make information_schema tables behave like normal tables

commit ddf4f3f74986c0ecac282e9cf6bec7c16e8ec687
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Nov 7 12:15:16 2013 +0100

    fix for npe in information_schema queries

commit ded2277f0607df2dbe019d2f9358a1b15f7a09de
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 7 18:04:49 2013 +0100

    disable clusterName and deleteAll tests temporarily
    
    bootstrapping class now applies the settings so the tests
    fail. We'll figure out a way to use the crate settings also
    in the tests later.

commit 5449c288c398faeea1fb6d2f9eaa7f56e104ae24
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 7 17:56:20 2013 +0100

    fix value mapping on insert for value/parameter nodes

commit 8cb67dbcc41399c298837f4bbb03c4d0e6fd7a99
Merge: 06ec88fe44 48747f9b6b
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Nov 7 07:30:00 2013 -0800

    Merge pull request #150 from crate/seut/default-clustername
    
    fixed setting of default cluster name

commit 48747f9b6bd33f4f6cd965b73cc0ec2e1a2819a6
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Nov 7 16:13:01 2013 +0100

    fixed setting of default cluster name
    
    implemented own bootstrap class
    added SQL settings to distribution config

commit 06ec88fe443a3de5f85c240b3aa64ea2e7e13175
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Nov 7 13:58:26 2013 +0100

    fix sql group by limit bug

commit f8ee07c4892fc9b4547a1e41dbcebd542aa9c506
Merge: 1cb731debc 4b5d91bbb6
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 6 09:17:03 2013 -0800

    Merge pull request #146 from crate/mwahl/routines_information_schema
    
    routines information schema

commit 4b5d91bbb69ff6604d6ecc4a7a841d7c5aa76361
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 6 18:08:51 2013 +0100

    fixup3: switch to correct es/upstream

commit 6ba29d9ea090576b3fc39da25bd1fd52f259e60b
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 6 17:34:18 2013 +0100

    fixup2: pr fixes

commit a13e29e9870045149535481ca0cab9aa0de26af5
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 6 15:09:36 2013 +0100

    fixup: pr fixes

commit fd13f3e36f00542ca69af44e471ffb0188ceaec3
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 6 12:07:35 2013 +0100

    changes

commit 0c5dbb3293c3b572fd71ab3534eeb8e950bf63b9
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 6 12:07:31 2013 +0100

    docs

commit 0e7ead6693b669b1e0c11f05e538eb10d0d2b95d
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Nov 6 12:00:27 2013 +0100

    routines information schema table and refactoring of information schema table "framework"

commit 623c59432e90c7053671679dc88b232ac568d8d1
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 5 15:46:23 2013 +0100

    removed reusing custom tokenizers, token-filters and char-filters

commit 1cb731debcdc15a75fd094f166980b99529c721d
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Nov 6 13:25:35 2013 +0100

    prepare release 0.18.2

commit e4a6875505f935d34a9ebd91d509a4c76f56a23b
Merge: 418d90a84e 83a8c433f2
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Nov 6 04:24:47 2013 -0800

    Merge pull request #147 from crate/seut/fix-update-by-path-pk
    
    Fix: use update-by-path on primary-keys queries as well

commit 83a8c433f2f5d0fbd368fdc5deab8d0a8a47c8fa
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Nov 6 13:22:37 2013 +0100

    Fix: use update-by-path on primary-keys queries as well

commit 418d90a84ea6e687d60281879938bf3d8c45a645
Merge: 3bf8c5da53 b741ffab97
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Nov 6 01:20:29 2013 -0800

    Merge pull request #145 from crate/seut/information_schema_table_indices
    
    Added virtual table ``information_schema.indices``

commit b741ffab9735a79df322ff1ece3fd3bd69d638ed
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Nov 5 17:43:40 2013 +0100

    Added virtual table ``information_schema.indices``

commit 3bf8c5da53e631f1f3de535fc3750fbc8ed5d7cc
Merge: 70dd017ee7 08569042a9
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Nov 5 07:11:23 2013 -0800

    Merge pull request #144 from crate/seut/information_schema_table_columns
    
    Added virtual table ``information_schema.columns``

commit 08569042a9aa8f1332078bcb0cd06816c33c826f
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Nov 4 19:09:46 2013 +0100

    Added virtual table ``information_schema.columns``

commit 70dd017ee78988b632a5931bb6cba710a82bbcb6
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Nov 5 10:14:22 2013 +0100

    fix refresh issues in information_schema indices

commit ea0ef977091797d5ca8c5fdc2ae38ede166a270d
Merge: 079e98f150 ae5e7d7227
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Nov 4 10:59:14 2013 -0800

    Merge pull request #143 from crate/mwahl/analyzer_docs
    
    Mwahl/analyzer docs

commit 079e98f1508909775ea79aec81f6e93645f051ce
Merge: 3f3a32e71d 4b8b74deb6
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Nov 4 10:54:49 2013 -0800

    Merge pull request #142 from crate/mwahl/information_schema_table_constraints
    
    information schema table constraints

commit 4b8b74deb6b90f0bd59c0a869e8c8cf60a7c004f
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Nov 4 18:27:26 2013 +0100

    docs

commit 0b156d4753c1fc30c88b6a4203cc9ab5633d831c
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Nov 4 18:16:40 2013 +0100

    tests for informationschematables

commit ae5e7d7227a6e0bc9f7056313dac190830dc78eb
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Nov 4 18:45:11 2013 +0100

    added reference to es-docs

commit 40f92578a6e1cfb089969af14624b44d270d0a39
Merge: 7f4bad21dc 3f3a32e71d
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Nov 4 18:33:20 2013 +0100

    Merge branch 'master' of github.com:crate/crate

commit 76d8ba49f27c1f22b116a09c8e1aba4ab573e35f
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Nov 4 16:45:13 2013 +0100

    fixed synchronization and table-constraint indexing

commit ab14a1f6700505f6c45128ac4a4f86a40f788e89
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Nov 4 16:37:34 2013 +0100

    merge fixup

commit aad9913ac7e2a23f02fc19a14addd103193494f1
Merge: 2e2d9818e2 3f3a32e71d
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Nov 4 16:29:28 2013 +0100

    Merge remote-tracking branch 'origin/master' into mwahl/information_schema_table_constraints
    
    Conflicts:
            docs/sql/analyzer.txt
            sql/src/main/java/org/cratedb/information_schema/InformationSchemaTable.java
            sql/src/main/java/org/cratedb/information_schema/InformationSchemaTableExecutionContext.java
            sql/src/main/java/org/cratedb/information_schema/TablesTable.java
            sql/src/main/java/org/cratedb/service/InformationSchemaService.java
            sql/src/test/java/org/cratedb/service/InformationSchemaServiceTest.java

commit 2e2d9818e24f83e8cf5f725490152fffd4bfdcf0
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Nov 4 15:37:17 2013 +0100

    InformationSchemaService Refactor

commit 3f3a32e71dd66048f3c300d758f713fe95d34d45
Merge: a4822b4090 2a7c2fa4ac
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Nov 4 06:09:08 2013 -0800

    Merge pull request #141 from crate/seut/index-docu
    
    index definition documentation overhaul

commit 2a7c2fa4acf31804e0cc734284fa425093abe5ab
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Nov 4 12:52:34 2013 +0100

    index definition documentation overhaul

commit a4822b409057993b9f16e83606ad82f06de98a24
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 4 12:04:51 2013 +0100

    update changes

commit 3a611b7c879f2565d58c2069699adb2489bf0fed
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Nov 4 11:16:51 2013 +0100

    fix NESTED_COLUMN_REFERENCE handling for the like operand

commit 7f4bad21dcc2e5c42a7c0ee41e48b942888c670f
Merge: 2b06673ada b748245bda
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 31 09:22:25 2013 +0100

    Merge branch 'master' of github.com:crate/crate

commit b748245bda95b5672316ee7b14b7e46975f9ee03
Merge: 91237b68de 80141814af
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 31 09:09:20 2013 +0100

    Merge branch 'master' of github.com:crate/crate
    
    Conflicts:
            CHANGES.txt

commit 2b06673ada31b3778564d8878df63c4e7f70c045
Merge: 358b39082f 91237b68de
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 31 09:08:06 2013 +0100

    Merge branch 'master' of github.com:crate/crate
    
    Conflicts:
            CHANGES.txt

commit 91237b68de190c4b78a0544360f0a88b5129c7a3
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 31 08:59:27 2013 +0100

    prepare releas 0.18.1

commit a9395b6a51a1cfcdef90d95a1b847d4965fa93d6
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 31 08:47:36 2013 +0100

    implemented index method plain

commit 569ab5ebd0dd170d71beca5b320770f8432e2342
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 31 00:02:28 2013 +0100

    prepare release 0.18.0

commit 80141814af91fa6180a54b954ae603a8317aa922
Merge: 358b39082f 7b2401ffc7
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 31 00:53:39 2013 -0700

    Merge pull request #139 from crate/seut/index-plain
    
    implemented index method plain

commit 7b2401ffc7531b3efa82147ce7aa2adb207b8455
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 31 08:47:36 2013 +0100

    implemented index method plain

commit 358b39082f285909625dcbae48b952e54238de3c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 31 00:02:28 2013 +0100

    prepare release 0.18.0

commit 516e2318792b2bfa187138d7a7eb3fe7d73f7d81
Merge: 286d073338 790204bd36
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Oct 30 15:58:04 2013 -0700

    Merge pull request #135 from crate/seut/create-table-add-index
    
    support index definition and fulltext search

commit 790204bd367b6c981e4536896d6b9d1bd0ef94aa
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Oct 30 18:45:05 2013 +0100

    added fulltext search & index definition docu
    
    _score is now usable on select, order and filter

commit 57dff92668ba7b724d9c29acb5e5a64e08a1244f
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 30 11:42:36 2013 +0100

    crate.analyzer.custom -> crate-analysis.custom

commit 79074071d90b32472961d03ea786c704badba025
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 30 11:38:05 2013 +0100

    docs and renaming

commit 0ae82501cbb238aed8abebeb4f03b9060ea79440
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 29 23:39:12 2013 +0100

    implemented own SQL MatchFunctionNode

commit b488e2df06114a77b5a89e4f2330ff44cda3b532
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 29 22:45:24 2013 +0100

    support sql fulltext search using `match(…)`

commit ec00dff5e95f54bd678773f7da9af6923a71b16d
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 29 16:43:54 2013 +0100

    implemented index definition support on table creation

commit 66c806d5470ffd7dbc92b7b633818dd9d8f0611d
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Oct 29 23:15:05 2013 +0100

    support custom analyzers in create table statement

commit bad5e863a6790d50b6106c58bb4fa4c5fa6d0e86
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Oct 29 20:21:06 2013 +0100

    resolve the analyzer settings and put them into index settings within create table

commit c46ea816f7277dd66765be8cb54b7a24ed4ee8a1
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 29 16:43:54 2013 +0100

    implemented index definition support on table creation

commit 286d073338e9f451b0c4ad340c6104db21d588f8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 30 23:27:40 2013 +0100

    add support for `where in` on information schema queries

commit 97e681f484a643b8a8e46171960175d6bb028a06
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 30 23:06:55 2013 +0100

    add support for is null / is not null information schema queries

commit 4df15542672ed02d932b627d8099de292e97b19d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 30 21:07:10 2013 +0100

    add support for like clause in information schema / lucene queries.

commit 243412e6be2876b529ffa79a73d70a7ec378421e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 30 19:56:46 2013 +0100

    fix broken InformationSchemaServiceTest setup

commit 49cd43edbe5c0589ea30c30fb504ec2ce9e352df
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 30 17:40:43 2013 +0100

    merge test methods together to speed up test runs

commit 24e86c401ec85fb11c59ce1a135c827549c3b364
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 30 17:28:08 2013 +0100

    create correct lucene query for not equals clauses

commit 5b8bb46856ff30e8aa375336d0da8b76857e27f1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 30 17:06:27 2013 +0100

    fixup! correct built lucene query for where equals on numeric fields

commit 91dc9e6459030783ef2c808d8eb9c03a536e3f57
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 30 16:53:41 2013 +0100

    correct built lucene query for where equals on numeric fields
    
    TermQuery doesn't work, a NumericRangeQuery with lower ==
    upper value is required.

commit 03a9ee5b80d7aa25e272470a88af933b2e800348
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 30 16:19:31 2013 +0100

    add support for numeric range queries on information schema tables

commit e8c68908ad6aa90d6165599400bf36d094dd73cb
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 30 16:01:22 2013 +0100

    added TableConstraintsTable

commit e0e676c16f83f3af92ebd64f0c096031d9db3140
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 30 15:43:43 2013 +0100

    Revert "remove LuceneQueryVisitorTest because it is currently unused"
    
    This reverts commit bc2e5cf288905b4f7287582169cb331976d4ee9a.

commit 55fb2c2a8d22cde51d2bf097221c111f98b3d07e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 30 15:40:55 2013 +0100

    document information schema limitations

commit 237584a6c33f1bcab3a38a478215e6cf224d8f96
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 30 15:01:30 2013 +0100

    add docs for information schema

commit 07c4005c4d3e2313377639355a809e30308de8d4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 30 13:56:53 2013 +0100

    made information schema tests reproducable
    
    moved the tests using the transport client into the
    InformationSchemaServiceTest class.
    
    the AbstractSharedCrateClusterTest base class re-uses the
    node in between the test runs. For the information schema
    tests its required that the node is re-started so that the
    tables index doesn't contain any old data.

commit 8bfc6c046c48f6335ca0efbdea6e69c63eb1480b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 24 11:26:19 2013 +0200

    add InformationSchemaService
    
    this service can be used to query the InformationSchema
    tables

commit 3f673c32bd25ae0ba34019c1af9b693308a46367
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 22 17:17:45 2013 +0200

    add the virtual INFORMATION_SCHEMA.Tables table

commit bd7db40dd73d9aa2b72cf283c9bbd0bb32256ab9
Merge: da22d7718f d1372700b7
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 30 06:35:53 2013 -0700

    Merge pull request #128 from crate/mwahl/generic_properties_with_parameters
    
    support parameters in generic properties

commit d1372700b78f5ce96a37bf5678845e75cbd9fbf8
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 30 14:31:57 2013 +0100

    add parameters to create analyzer statements

commit a8c6f4ee85144d89698b8177065bce43c3296d14
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 30 14:25:01 2013 +0100

    added tests to verify parameters in generic properties work as expected

commit da22d7718f55d3540aab2bf95fa9ef63839b1076
Merge: 09c0273493 56f1a71a9b
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 30 06:21:51 2013 -0700

    Merge pull request #129 from crate/mwahl/analyzer_integration_tests
    
    analyzer integration tests & doc updates

commit 56f1a71a9bb1b59ac0b64fc2a4f66dbd274b7ec6
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 30 12:46:04 2013 +0100

    use settings created by CREATE ANALYZER for search

commit 674e1a410b3067f07833cc8e0c5425106ec0e852
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 30 12:45:40 2013 +0100

    doc style improvements

commit 971846303ccd18a53d2ae912b322216977d85cbd
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 30 12:04:28 2013 +0100

    support parameters in generic properties

commit 09c02734935d97de515272a3a5e5d1d0e6bf875d
Merge: ea00595faf 57b521ec9e
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Oct 29 10:38:49 2013 -0700

    Merge pull request #126 from crate/mwahl/create_analyzer_impl
    
    Create Analyzer Implementation

commit 57b521ec9e0b117754746897bdcffde6a850c757
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Oct 29 17:21:39 2013 +0100

    code-style and optimizations

commit 66029564e086e7e8c841fd2e4dafaff153baf112
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Oct 29 17:06:16 2013 +0100

    doc updates

commit 3a84acf2a397fb6245703df3b67b5318cfe10587
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Oct 29 16:31:31 2013 +0100

    merge fixes after refactoring

commit 57cb5d497ce2a2917ee49f886eff5ead29d3fdf1
Merge: 799b491ed6 ea00595faf
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Oct 29 15:41:39 2013 +0100

    Merge remote-tracking branch 'origin/master' into mwahl/create_analyzer_impl
    
    Conflicts:
            CHANGES.txt
            docs/sql/ddl.txt
            sql/src/main/java/org/cratedb/action/parser/XContentVisitor.java
            sql/src/main/java/org/cratedb/action/sql/NodeExecutionContext.java
            sql/src/main/java/org/cratedb/action/sql/ParsedStatement.java
            sql/src/main/java/org/cratedb/action/sql/TransportSQLAction.java
            sql/src/main/java/org/cratedb/module/SQLModule.java
            sql/src/main/java/org/cratedb/sql/parser/parser/SQLGrammar.java
            sql/src/test/java/org/cratedb/integrationtests/TransportSQLActionTest.java

commit 799b491ed6334801c15b28e7a83d5170dd6b6517
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Oct 29 14:44:10 2013 +0100

    docs and changes

commit 8f7d3214bf124657168c70041308fb1acde47aa5
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Oct 29 14:44:01 2013 +0100

    allow for reusing custom tokenizers, token-filters, char-filters

commit ea00595faf290658e9249f453d85985f3605f5bf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 29 11:45:18 2013 +0100

    prepare release 0.17.3

commit 1c7e72822e0a0384aac35eb84297d08fd3828b78
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 29 11:34:17 2013 +0100

    fix NPE that occured while generating the SQLResponse from a GetResponse

commit 490444fb2c66145baa56710d5c40da57170ff987
Merge: 56061f87c2 5c1c31f23b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 29 03:23:44 2013 -0700

    Merge pull request #123 from crate/j/sql_to_lucene_query
    
    J/sql to lucene query

commit 5c1c31f23bc5ebca79a547463fedf896d7728ca1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 29 11:05:32 2013 +0100

    update docs to reflect new error messages in exceptions

commit 3ac08c6ef57d6717a44e502eab01bd7bbc8e95bb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 29 10:50:10 2013 +0100

    re-enable QueryPlannerTests and make them pass

commit 3ce8ec46496c49682d70b508cba0842e643418c8
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 29 08:56:17 2013 +0100

    remove LuceneBenchmark
    
    test was just useful to make sure in-memory lucene index
    concept is fast enough.

commit 917ea5b7a6d1560771012114aabd237f7272dc38
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 28 19:23:24 2013 +0100

    add some more comments to various classes

commit bc2e5cf288905b4f7287582169cb331976d4ee9a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 28 19:14:27 2013 +0100

    remove LuceneQueryVisitorTest because it is currently unused

commit dc21294268e7f9aa592c27eddeac584a08ff176d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 28 19:11:56 2013 +0100

    use DocumentMapper to get mapped values until a better solution is found

commit 7406a509e7bf1a798017a59f42c09c3fd22aa08c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 28 17:22:59 2013 +0100

    put planner result into ParsedStatement.  clean up QueryPlanner

commit 1d7e65e53d6dc2e67f651c79a4f52b791aefec20
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 28 15:02:35 2013 +0100

    fix NPE that occured if no index meta data was available

commit 8a5b7c406699160df150ae3c865266ca676a1d08
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Oct 28 14:09:25 2013 +0100

    throw StandardException if nestedColumn is accessed by numeric index
    fixed parser tests related to full path at columnName of NestedColumnReference
    Conflicts:
            sql/src/main/java/org/cratedb/sql/parser/parser/NestedColumnReference.java

commit bb104881c1e8ef7cf08b01a70b743c149828d3c7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 28 09:30:28 2013 +0100

    refactor visitors:
    
      - merge QueryVisitor, WhereClauseVisitor and XContentGenerator
    
      - Visitors no longer have any state that is meaningful
        after visiting. All state is now written to the
        ParsedStatement
    
      - Moved Response and Request builders to SQLParseService
    
      - Use IndexMetaData instead of DocumentMapper to parse
        the statements as DocumentMapper is only available on
        nodes that contain a shard for the index.
    
    Conflicts:
            sql/src/main/java/org/cratedb/action/parser/QueryVisitor.java

commit 884a6ac501f9bb0a6c77205cf00d31264e09dc9d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 13 09:43:25 2013 +0200

    add WhereClauseVisitor to generate lucene queries from sql
    
    (cherry picked from commit 94f5339b37f22d79ef517f3b5bed9b75e20d4fae)
    
    Conflicts:
            sql/src/main/java/org/cratedb/action/sql/NodeExecutionContext.java

commit e79b7349aa4311c357d7525f5ca959bdd35fcf4c
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Oct 29 10:42:51 2013 +0100

    create analyzer statement

commit 56061f87c2e69581f9c1435be9e8ddbb3fcc36fb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 28 20:00:45 2013 +0100

    fix a NPE that occured when SQLRequest's args property was set to null

commit fbbcb68c20f0a73f4ddb41df93621e1da7a3fca3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 28 15:17:25 2013 +0100

    prepare release 0.17.2

commit d435f9d832b9a9f5090c419223ead53ff6d312c4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 28 14:54:51 2013 +0100

    handle ParameterNode correctly when building wildcard queries

commit 246419c46cbe345cf3e9325e8afcc235868c7f08
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 28 14:37:14 2013 +0100

    updated es

commit 1c385aafb6ce54d7b488ba3cf7b140eccf05f6ae
Merge: 5a9206f4df 20d529bc48
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 28 14:24:52 2013 +0100

    Merge branch 'master' into mwahl/create_analyzer_impl
    
    Conflicts:
            sql/src/main/java/org/cratedb/sql/parser/parser/AnalyzerElements.java
            sql/src/main/java/org/cratedb/sql/parser/parser/CharFilterList.java
            sql/src/main/java/org/cratedb/sql/parser/parser/CreateAnalyzerNode.java
            sql/src/main/java/org/cratedb/sql/parser/parser/GenericProperties.java
            sql/src/main/java/org/cratedb/sql/parser/parser/NodeFactoryImpl.java
            sql/src/main/java/org/cratedb/sql/parser/parser/NodeNames.java
            sql/src/main/java/org/cratedb/sql/parser/parser/NodeTypes.java
            sql/src/main/java/org/cratedb/sql/parser/parser/SQLGrammar.java
            sql/src/main/java/org/cratedb/sql/parser/parser/TokenFilterList.java
            sql/src/main/javacc/org/cratedb/sql/parser/parser/SQLGrammar.jj
            sql/src/test/resources/org/cratedb/sql/parser/parser/create-analyzer-1.expected
            sql/src/test/resources/org/cratedb/sql/parser/parser/create-analyzer-1.sql
            sql/src/test/resources/org/cratedb/sql/parser/parser/create-analyzer-2.expected
            sql/src/test/resources/org/cratedb/sql/parser/parser/create-analyzer-2.sql
            sql/src/test/resources/org/cratedb/sql/parser/parser/create-analyzer-3.expected
            sql/src/test/resources/org/cratedb/sql/parser/parser/create-analyzer-4.expected
            sql/src/test/resources/org/cratedb/sql/parser/parser/create-analyzer-4.sql
            sql/src/test/resources/org/cratedb/sql/parser/parser/create-analyzer-error-1.sql

commit 5a9206f4dfb7dfffd287e3e332c631e5f567f5ff
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 28 14:09:50 2013 +0100

    create analyzer stmt parsed to ParsedStatement

commit c9027fd90f12897903cb72976cf909ffed6fbf52
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 25 20:30:58 2013 +0200

    prepare release 0.17.1

commit 7165e452658f6e19da9454fe32865ea4adbd067b
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 25 17:55:26 2013 +0200

    Overwrite objects on update instead of merge

commit 76d066f97e9b9d3a1f00c388908136e3a9fb8c50
Merge: ba4663c56e a727d90aca
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Oct 25 05:33:16 2013 -0700

    Merge pull request #120 from crate/dobe-sigar-fix
    
    fixed sigar loading

commit a727d90acaa479ce97ece9df2936ffeccc628dfd
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Oct 25 14:00:30 2013 +0200

    fixed sigar loading

commit ba4663c56e26f307fb969477acefcf73d47690ab
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 25 10:58:11 2013 +0200

    prepare release 0.17.0

commit 1b7d61fcdf7cef9f4b8a747f21da9efc446b627c
Merge: 20d529bc48 787670e663
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 24 09:08:53 2013 -0700

    Merge pull request #119 from crate/seut/where-version
    
    Implemented support for optimistic concurrent updates and deletes.

commit 787670e6633800294b32bf14d703c7126d6cae24
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 24 15:13:07 2013 +0200

    Implemented support for optimistic updates
    
    Also added documentation about Optimistic Concurrency Control at Crate
    and System Columns.

commit 3d549f292d862b551d310e90e03c3db53758b238
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Oct 21 20:26:23 2013 +0200

    implemented ``delete … where _version=<version>``

commit 20d529bc489d7d8b3c30b1034c6aa05a73fe3da9
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 24 15:20:28 2013 +0200

    hotfix: remove stale references

commit c3cdef6a5596a9d96a04d94fb874db2fb94bae46
Merge: cb37dfd8c4 73112c812a
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 24 03:47:43 2013 -0700

    Merge pull request #117 from crate/mwahl/create_analyzer_parser
    
    Mwahl/create analyzer parser

commit 73112c812ae2c6941f432fbfa52b605584dd1bd0
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 24 12:41:16 2013 +0200

    make CharFilterNode and TokenFilterNode simple NamedNodesWithOptionalProperties, which they are

commit 06b43e1832b117a29d85b22fcb31049bf0acb2db
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Oct 22 19:39:33 2013 +0200

    create analyzer statement

commit cb37dfd8c4bf1727e8b58e6942bcfcf699a0c853
Merge: f2f193ddd8 7d63168fa4
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 24 03:09:53 2013 -0700

    Merge pull request #118 from crate/seut/crash-rowcount
    
    use new crash version, added expected row counts to dml

commit 7d63168fa4a01547604798940c4506d8505332ce
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 24 11:50:23 2013 +0200

    use rowCount at all integrations tests now

commit 2ff2808c9cac61094860d423db25a1afa79d053b
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 24 11:49:54 2013 +0200

    fixed rowCount for DistributedSQLActions (e.g. groupBy)

commit f2f193ddd8d333fcac1ca63e4e8f0141747037a3
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 24 11:13:54 2013 +0200

    hotfix: updated SQLGrammar

commit 032d166bff1d8b858594e7b8903f1425fd06aabd
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 24 09:48:45 2013 +0200

    added update multiple documents once test

commit cc370818b4f458c587bbfbe25b02daf05489b041
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Oct 23 22:52:27 2013 +0200

    updated crash, added expected row counts to dml
    implemented (pseudo) row count for bulkrequest

commit e7a6b2a80976c3e88ea303313f5474147775c83e
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Oct 22 19:39:33 2013 +0200

    create analyzer statement

commit e37e3a397f210cab078ab98f3f3986937164f66f
Merge: ad2c26d074 d085b4e84d
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 23 02:18:11 2013 -0700

    Merge pull request #116 from crate/mwahl/create_index_parser
    
    create index and inline index-"constraint"

commit d085b4e84d8b4ef4254df98397bc571824c21eab
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 23 10:28:52 2013 +0200

    create index statement fixup

commit 6c3eee7bfbbba8e1b77b4e46c343b9706d662fd3
Merge: 644d2dc58b ad2c26d074
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Oct 22 15:02:34 2013 +0200

    Merge branch 'master' of github.com:crate/crate into mwahl/parser_fulltext

commit 644d2dc58bba97499709684298cee8f41cf8844b
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Oct 22 15:02:23 2013 +0200

    unparser fixes

commit c815eeda95d9a0466d08a91803093d25d195a4a4
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Oct 22 14:24:50 2013 +0200

    inline index-constraint

commit ad2c26d074aa0684f4443313e1086527fabd9e6a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 22 12:31:58 2013 +0200

    prepare TableExecutionContext for information schema support

commit d5f922542bc8b1b3fe457891907c9b00c3262b76
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 21 21:04:26 2013 +0200

    reduce ActionListener boilerplate code a bit

commit a9469a11bc826eda942de273b6927756c61bfabb
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 21 20:48:36 2013 +0200

    create index statement

commit 1ce641864f93474d4bd52e80fadb00feacb55e03
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 21 20:01:57 2013 +0200

    fail immediately if a shard failure occurs during a group by operation

commit d39c999dca7cdc09abf2dcf22dcdfb24d1db4b01
Merge: 333b4a8d47 dfc8206014
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Oct 21 10:42:36 2013 -0700

    Merge pull request #110 from crate/seut/routing-col-primary-key
    
    Only primary key columns can be used for routing

commit dfc82060142c138c9e7b52c79860e7b23a6a2d89
Merge: a0990afcc2 333b4a8d47
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Oct 21 19:42:22 2013 +0200

    Merge remote-tracking branch 'origin/master' into seut/routing-col-primary-key
    
    Conflicts:
            CHANGES.txt

commit a0990afcc26ec171eab9cc1ce46bf8c0cab973ea
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Oct 21 19:39:39 2013 +0200

    use tableContextSafe() instead of tableContext() at QueryPlanner

commit 1dd42cb8ae7660e0404416a03dae8e6658e1bed1
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Oct 21 17:31:30 2013 +0200

    Only primary key columns can be used for routing
    
    Throw exception otherwise.
    Also refactored QueryPlanner a bit.

commit 333b4a8d47d671452ee77043dbb64b31a55549e1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 21 17:33:29 2013 +0200

    remove * and ? as like wildcard characters

commit efb363d4bd3fbf19f4862b2739ef15c47fd83141
Merge: b0a813982f 6525daa317
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 21 06:56:48 2013 -0700

    Merge pull request #108 from crate/mwahl/multiget
    
    Mwahl/multiget

commit 6525daa317190220d67c2f5df0289f59c6e3f1a8
Merge: f2b7f8f21c b0a813982f
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 21 15:55:40 2013 +0200

    Merge branch 'master' of github.com:crate/crate into mwahl/multiget
    
    Conflicts:
            CHANGES.txt

commit f2b7f8f21cc3df4e9ac46ddf6f9d67e9c6244896
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 21 15:51:02 2013 +0200

    bubble MultiGet-Errors up

commit b0a813982fb33c19db9bac8db3b99523e15fc759
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 21 14:39:06 2013 +0200

    prepare release 0.16.0

commit bbe275385adcfa8ad8c733b38c5ff20e39ef85dd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 21 14:22:26 2013 +0200

    access the tableContext lazy
    
    the table mapping was loaded even though it wasn't always
    required. Now it's loaded on the first access.
    
    this should also fix test failures on jenkins that occured
    due to a race condition when the mapping couldn't be loaded
    as the dynamic mapping was just updated.

commit ad47402e68911544207aa71c103caa63f5e51cb4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 21 11:09:38 2013 +0200

    add support for sql like operator

commit 8d3a5f57cebd9ec4686f5172a5897ccfd1f02e1d
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 21 12:53:53 2013 +0200

    test for column aliases in result columns

commit bed2d89afe2d32b3c2ee013c13ce8198853ef711
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 21 12:43:04 2013 +0200

    CHANGES

commit b1f0613a89c21033e6ef6071c79bbc60648cb7a3
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 21 12:39:20 2013 +0200

    more comments, simpler orderby-flag

commit 4522a2421a57f2b45f4ff00c9edd12e871b61e4b
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 21 12:32:23 2013 +0200

    use real columnNames for GetRequest and MultiGetRequest Fields, remove stale error checking

commit 4db8400e40c9951fa75e40d19b360c2a2ad14b63
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 21 11:43:10 2013 +0200

    move ParsedStament-Types to enum

commit cd9bf42454b2a00dbc6fa57cc8f0101fd9a36c71
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 21 11:32:11 2013 +0200

    merge issues

commit 767d6d45370e77f7ec6f894cd1416542f8d5b0e8
Merge: 6617e463ce fba3409710
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 21 10:28:47 2013 +0200

    Merge branch 'master' of github.com:crate/crate into mwahl/multiget
    
    Conflicts:
            sql/src/main/java/org/cratedb/action/sql/ParsedStatement.java

commit 6617e463ce9218aba4fa51aa00fccd09757d1970
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 21 10:25:18 2013 +0200

    multiget-request on or-select-queries without order-by or group-by

commit fba34097104d3267b2f019b59d48bb531f30ecef
Merge: c1bd05c470 1643b54c71
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Oct 21 01:21:26 2013 -0700

    Merge pull request #106 from crate/seut/drop-table
    
    implemented drop table

commit 1643b54c71cefa348cf0080dcc3a4699f6a4fda6
Author: Sebastian Utz <su@rtme.net>
Date:   Sat Oct 19 10:16:11 2013 +0200

    updated CHANGES

commit 5ae270ee638ed550bead84d47ffe5a2501b603e9
Author: Sebastian Utz <su@rtme.net>
Date:   Sat Oct 19 10:10:12 2013 +0200

    implemented drop table

commit c1bd05c470f72aed6df694d4b9a8590d08591ce2
Merge: 3ecf31159c 512cb1423e
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 18 12:00:56 2013 -0700

    Merge pull request #105 from crate/seut/exception-helper
    
    Moved crate exception handling to helper class methods

commit 512cb1423e3b5eb53c8aa532cc0976895c9c01b8
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 18 20:51:58 2013 +0200

    Fix select object test failures
    
    Using setRefresh(true) on a IndexRequestBuilder seems not to work properly, use refresh() instead.

commit 4e30ebcda4f5df0c3fe270edf4f9bf960a2f97d1
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 18 20:38:09 2013 +0200

    removed non-deterministic failing concurrent regression test which actually tested the exception handling(as per mfussenegger), this is done by ExceptionHelperTest now

commit d4f5a9169202e7c3dab95eb6ebd9ed7bd8bceead
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 18 20:34:32 2013 +0200

    moved various crate exception handling code to helper methods

commit 3ecf31159c177fbb5da4d6ac833a4d042bc3c093
Merge: 9e8d7b21b3 5587df8451
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 18 09:02:13 2013 -0700

    Merge pull request #102 from crate/mwahl/system_column_reference
    
    added simple SystemColumnReference

commit 5587df8451d3bffd1f4167867032280a1edbc218
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 18 17:28:17 2013 +0200

    fully qualified systemcolumnreferences

commit 689571fbfd08602ddba02d70b2f3cfe650a0b2e5
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 18 17:02:24 2013 +0200

    another test for qualified system-columns

commit dbe3e3e91fae0712411c2b7a0f00e7c464320970
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 18 16:59:23 2013 +0200

    SystemColumnReference as simple marker

commit 611d0b8758e8184c01f311efcb95d656509b2c5d
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 18 16:58:05 2013 +0200

    make the parser understand our systemcolumnreferences

commit 9e8d7b21b3e38aa02b51871db975b8a83c486aef
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 18 16:46:40 2013 +0200

    fix reRaiseCrateException, increased number of threads for concurrent version conflict test

commit c039f4371a78b000aafa028dacefbced89e9a580
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 18 16:19:19 2013 +0200

    compare against nodeType instead of doing instanceof checks

commit 03dce06a805aef145c12ce25ef85ccde5ba29a0f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 18 15:55:13 2013 +0200

    add support for group by on columns that contain null values

commit 90677ccbd3315edef0f286439c61e658ab240e51
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 18 15:25:16 2013 +0200

    add support for group by on nested column properties

commit 07b4d756e98c783f867327c76fbd7005e5fb5d7f
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 18 14:15:39 2013 +0200

    removed comments

commit dbc72741e37a5e874ed6e206a8c213ef204ba495
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 18 14:13:35 2013 +0200

    Fix nested update test-failures
    
    The order of the key in the response map is random so the tests
    weren't deterministic.

commit c35af8d51db6079d1170dcfd2579a6f46bfdea1c
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 18 12:48:47 2013 +0200

    added simple SystemColumnReference

commit 88dcb93f9a00c66b76c733e2bffe522f1d502683
Merge: 3e7a19a93f dfa9a58e2f
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 18 03:42:20 2013 -0700

    Merge pull request #101 from crate/seut/sql-parser-nestedcolumn-test
    
    added nested column tests for select and update

commit dfa9a58e2fb83ef2cbd180a83e91c7c2e793e571
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 18 12:32:31 2013 +0200

    added nested column tests for select and update

commit 3e7a19a93f7dfde59e25ec69b7b38ad5f1c122c4
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 18 11:47:46 2013 +0200

    fix create table tests at TransportSQLActionTest, related to default store=false

commit 749d73e91c616d2513a4d2a216983627e61858de
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 18 11:32:39 2013 +0200

    fix SQLParser test related to new keyword ``crate``

commit 339a3e5b043315af40166e50107302296e5118f8
Merge: e189d37cad 90cc4ec5f1
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 18 11:11:23 2013 +0200

    Merge branch 'master' of github.com:crate/crate

commit e189d37cad7377ed659940b9714833a7b15b2c9c
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 18 11:10:54 2013 +0200

    fixed tests

commit 90cc4ec5f154bef86bcb94509d23c961e6b9cb1c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 18 10:46:45 2013 +0200

    fix failing QueryVisitorTest

commit d4a1bfac106bb68d5e4182b9c6ec1179a701c82e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Oct 18 10:29:54 2013 +0200

    use DocLookup instead of FieldLookup in SQLGroupingCollector
    
    should perform bettern and doesn't require the fields to be
    stored.

commit 5d915fdc1e4ceb816ad5266b121793d182c9c24d
Merge: 43c4779f8f df60753d59
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 18 01:32:58 2013 -0700

    Merge pull request #100 from crate/seut/create-table-unsupported-type-fix
    
    added regression test for create table with unsupported type

commit df60753d5990d1d4c0bdea0e49e06ce12adfcdc1
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 18 10:29:58 2013 +0200

    added regression test for create table with unsupported type

commit 43c4779f8fe14e5bf61c2d052f17753cb83d2a7d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 17 21:11:15 2013 +0200

    fix sql where + group by

commit c2939aa2db71056ad7085deb4521303e4a44b12c
Merge: 660f0a9704 9e38b71beb
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 18 01:05:00 2013 -0700

    Merge pull request #96 from crate/mwahl/benchmark-optimization
    
    Mwahl/benchmark optimization

commit 9e38b71beb5bc1d739e4c12ad9865af46344108b
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 18 09:57:16 2013 +0200

    delete again

commit e7a423dfee41731ef79b8f354764d0b36727fda4
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 18 09:34:31 2013 +0200

    deleting old configuration statements

commit 2433f1fcb46de348789486d7abfd837ad0256ed4
Merge: 04e82aafa9 660f0a9704
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 17 18:32:28 2013 +0200

    Merge remote-tracking branch 'origin/master' into mwahl/benchmark-optimization
    
    Conflicts:
            sql/src/main/java/org/cratedb/action/parser/TableVisitor.java
            sql/src/main/java/org/cratedb/action/sql/ParsedStatement.java
            sql/src/main/java/org/cratedb/action/sql/TransportSQLAction.java

commit 04e82aafa9bcaed9d2d04e25f7e971d069770f49
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 17 18:30:57 2013 +0200

    improve benchmark-cluster-setup and result output

commit 660f0a970452cf2dc49bd5bcc8a1996c9f093bc9
Merge: cd75d9b2da 9c8d5a02cd
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 17 00:00:45 2013 -0700

    Merge pull request #97 from crate/ber/create-table
    
    Implemented ``CREATE TABLE`` with core data types, replicas, routing and shard settings

commit 9c8d5a02cd111117cf71109cc6389d7600180076
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 17 09:00:06 2013 +0200

    fixup, exception should define message

commit 4a99e503f367f6a62e69134ddae881fc36a11232
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 17 08:55:06 2013 +0200

    fixup, changed error code, removed idea template

commit 8b668c3c5e7c83a51ac605451614efca06988f73
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 17 08:50:25 2013 +0200

    fixup, typos, added table exists exception, default store=false

commit c0d46e8d11aac60d48d6f6540fd92d79ce32ad57
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 17 08:24:01 2013 +0200

    typo

commit a7b0c9fdbc33accda968e76923b1f75d6aa95b90
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 17 01:30:57 2013 +0200

    implemented easter egg ``crate table`` ;)

commit f6aeddb5e7722660c5b84303d61e359e0ae6300b
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 17 01:30:01 2013 +0200

    fixup default replicas value changes

commit d824219d1c67f543766b01dff78c6c4fee9ebddb
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 17 00:56:47 2013 +0200

    updated CHANGES

commit 5b6bd73d109c08a2e759774daa8b080a5b99366a
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 17 00:53:50 2013 +0200

    changed default replicas to 1

commit 89d96cecc1526afd78533b43725ceca0aff25777
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 17 00:27:08 2013 +0200

    add crate DDL documentation

commit 5ba800492daa5701bb2910b438c403a75e931bb3
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Oct 16 22:44:13 2013 +0200

    implemented ``create table..`` stmt support including integration and unit tests

commit eb346473395fbdc646890f02f90ac5e8a3d90764
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 16 14:42:12 2013 +0200

    error on unsupported types

commit a499ee41bb1445ea6eb96fc0c49072e504ce2f2d
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 16 14:41:11 2013 +0200

    tiny progress on tablevisitor

commit f71d110a28829f549aebf2483258166783b02d71
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 16 12:33:12 2013 +0200

    basic skeleton infrastructure for create table

commit f8692b41c9c451f43bef5782c25eb8e28646e38c
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 17 00:25:50 2013 +0200

    empty line

commit cd75d9b2dac35bfa3224c59061c3d9524519e5df
Merge: 73d4184536 2dda6b3613
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Oct 16 15:23:55 2013 -0700

    Merge pull request #95 from crate/seut/sql-parser-create-cratedb
    
    sql parser crate ``create table`` dialect addons

commit 81d845db7c2cf4a30d74cd8b0f31f801bee66b80
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 17 00:20:42 2013 +0200

    benchmark-optimizations

commit 1103e9ad1ba31aaa440e4a7e6fc9316b98e8600f
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 17 00:20:32 2013 +0200

    included junitbenchmarks directly - apache 2.0 license

commit 73d4184536bc7a2a17cafbb5ee132736bdc6a40c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 16 19:28:23 2013 +0200

    add limit and order by support to sql statements with group by

commit 2dda6b3613f9a8a2f41700431de7b1f694952781
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Oct 16 20:23:53 2013 +0200

    added sql parser test for ``boolean`` core type

commit d3291345901b13fcef1898071c1de3b5ed5c152c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 9 16:45:52 2013 +0200

    add basic sql group by functionality.
    
    Limit and order by support is missing for now

commit 79cbba99a5ae081b9401655bbd7d83a71aed226f
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Oct 16 17:09:11 2013 +0200

    SQL parser now supports CrateDB core types

commit f706c40e67ac580614042530e57b01711855f503
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 16 14:42:12 2013 +0200

    error on unsupported types

commit fa925bff3359c788d26af5061d0d8cd0c3685b53
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 16 14:41:11 2013 +0200

    tiny progress on tablevisitor

commit 33c2c3d40894941044e827b5f17deb806366ea77
Merge: 0354082f94 41e72fbcb2
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 16 12:41:19 2013 +0200

    Merge remote-tracking branch 'origin/seut/sql-parser-create-cratedb' into ber/create-table

commit 41e72fbcb28b6e41e8b093f6a02b6924a46a802e
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Oct 16 12:39:23 2013 +0200

    recognize CLUSTERED BY/INTO and REPLICAS sql keywords, define values as ``CreateTableNode.crateProperties``, added tests

commit 9377d90b89edabb38849805e91d3f6b91e33e147
Merge: df8a16c4b6 abc8fac6b5
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Oct 16 12:33:41 2013 +0200

    Merge branch 'master' of github.com:crate/crate

commit df8a16c4b6a944cc29fe25ed650ddcc472205af4
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Oct 16 12:33:31 2013 +0200

    removed debug output in sql-parser tests

commit 0354082f94d160e260a0d9eccc8ec646e548413a
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 16 12:33:12 2013 +0200

    basic skeleton infrastructure for create table

commit abc8fac6b5c05041cf05a66f31df5e21dd146b98
Merge: 412521f20d f75279231c
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 16 03:08:49 2013 -0700

    Merge pull request #93 from crate/ber/query-planner-refactor
    
    Ber/query planner refactor

commit f75279231c79f1f132a6c4907a05b18fccd5434d
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 16 12:06:48 2013 +0200

    renaming

commit e4fef78b70d7b4b7c5ff418f9bdbff44eaf3e1a8
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 16 11:46:00 2013 +0200

    real settings

commit 9b789ce1003a0fc7182d3dbd75d76e0064c76416
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 16 11:45:08 2013 +0200

    check or-node operands seperately

commit 412521f20d639ad56993019921f0799b4e68c753
Merge: 6f82971355 ee825426f2
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Oct 16 02:11:35 2013 -0700

    Merge pull request #94 from crate/seut/foundationdb-tests
    
    added missing sql.parser tests (copied from akiban/foundationdb-sql-parser)

commit ee825426f2bb8101a6593eb64d7325d19b0c38ad
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Oct 16 11:07:11 2013 +0200

    added missing sql.parser tests (copied from akiban/foundationdb-sql-parser)

commit 262a073dcae8e414b1038abf3f4f680c63b31ef8
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 16 10:33:37 2013 +0200

    cleanup, use NodeTypes instead of instanceof, testIssues

commit 1bcfbe90927aace27b55910c5a5392ab459de6b1
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 16 08:35:10 2013 +0200

    updated TransportSQLActionTest to reflect changes in QueryPlanner logic

commit d3c7ee40877a4fed7e81682c0580bd9e0286c144
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 16 08:28:17 2013 +0200

    updated QueryPlanner unittests to check for request routing attribute

commit 4d0c0cbb5f796d1ba2ccd5da7566b165aaa60371
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Oct 15 19:17:40 2013 +0200

    multiget -> searchrequest with multiple routing values

commit 3dbc286b3d6d654f7317fa2f07d6b2a6595b7909
Merge: 3d900a460d ed8adcaa63
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Oct 15 17:18:15 2013 +0200

    Merge branch 'ber/query-planner-refactor' of github.com:crate/crate into ber/query-planner-refactor

commit 3d900a460d2ea5515a65688cfe16aa6af8c90900
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Oct 15 17:17:55 2013 +0200

    WHERE IN Syntax

commit 239d0f42ec5f032f2917c8b2603a139dd8c2f515
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Oct 15 15:45:10 2013 +0200

    multigetrequest on OR pk where-clauses

commit ed8adcaa630fa311b380c922bc1dc039a32b1373
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 15 11:48:17 2013 +0200

    execute UpdateByQuery (Search using SQLFacet) only on primary shards now

commit b4f8967a0cc26fc764ecca23d5f0801f3eb0d6d4
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Oct 14 22:56:49 2013 +0200

    added query planner tests for routing value extraction, moved planner tests to own class

commit 9d3bbdfc07efe46d76e7e6d0521b413389307fc8
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Oct 14 18:17:02 2013 +0200

    refactored 1st phase, implemented 2nd phase, TODO: add tests for 2nd phase

commit 6f829713558d25b639928da3f3b7d02e195306a0
Merge: a2e0a787b1 b9b1b65b61
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Oct 14 08:37:30 2013 -0700

    Merge pull request #92 from crate/seut/refactored-tableContext-usage
    
    bind tableContext instance to ParsedStatement and use only this everywhe...

commit a2e0a787b18579003aa0c5a6ceae1d7c764f2229
Merge: 79efedd0b4 7ec5395987
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 14 08:36:20 2013 -0700

    Merge pull request #90 from crate/mwahl/benchmark_task
    
    exclude benchmark runs from 'gradlew test' and into 'gradlew bench'

commit b9b1b65b619be4a0eab73afad08e956ad476cf9c
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Oct 14 17:26:44 2013 +0200

    bind tableContext instance to ParsedStatement and use only this everywhere

commit 7ec53959871fe37246ab2f8042548e9ec666b144
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 14 16:21:09 2013 +0200

    documented how to run benchmark

commit ef1e9b590449f0a85563d05468807807dff6d45c
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 14 16:02:35 2013 +0200

    exclude benchmark runs from 'gradlew test' and into 'gradlew bench'

commit 79efedd0b4aafbc1649c918cd76de9ec4b329158
Merge: 2306ef873b c14b2a456a
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 14 05:10:50 2013 -0700

    Merge pull request #89 from crate/mwahl/jenkins_hickups
    
    safety-refreshes after indexing-requests and mapping creations

commit c14b2a456aaa455da6146c15577af78ae82b6255
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 14 12:51:15 2013 +0200

    replace some refreshs with more fitting ensureGreen

commit 61c9f6f139edc8635390a67028861d19e3013b74
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 14 12:42:31 2013 +0200

    make ensureGreen work, as refresh does not always suffice

commit 6b8c72dc63113d6b96aad0559802f440baaaeb5c
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 14 11:48:16 2013 +0200

    safety-refreshes after indexing-requests and mapping creations

commit 2306ef873b5eb449696b386196688c004595d7cc
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 11 21:29:54 2013 +0200

    CHANGES

commit 412a7a0686949de758e88fe54f82baa6e7e60ab4
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 11 21:26:44 2013 +0200

    add rowcount to doctests

commit dede9a1ebcf3843f4ed327dfae41f1184bb8300a
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 11 21:14:08 2013 +0200

    caseless fs hassle

commit 73d5b16cd9989879e02c89015b308267fff0406f
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 11 21:12:10 2013 +0200

    caseless fs hassle

commit 726b6369afda70579df4562511cba43c004e8a80
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 11 19:08:26 2013 +0200

    changes

commit 005c88dfec89938c795590b4a9a99a3ed68a9434
Merge: e196fe6574 1958163441
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 11 10:06:50 2013 -0700

    Merge pull request #88 from crate/mwahl/pk_optimizer_benchmark
    
    Benchmark for QueryPlanner

commit 1958163441db48713ef7b730a608994e4367e78a
Merge: 55945660ac e196fe6574
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 11 18:58:52 2013 +0200

    Merge branch 'master' of github.com:crate/crate into mwahl/pk_optimizer_benchmark
    
    Conflicts:
            CHANGES.txt

commit 55945660ac05e68b60edb6aaef555a25006d968f
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 11 18:56:25 2013 +0200

    query-planner constant, removed old todo

commit c3ac6afa098165e2116258ff81d53f582e4b2b5a
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 11 18:29:00 2013 +0200

    CHANGES

commit 655ef689948b523b239956e50888fd7adf8fbf10
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 11 18:25:37 2013 +0200

    add rowcount to SearchResponse

commit 23e96e16cfd1882ee192659da88ddda6ecc1cb39
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 11 18:11:27 2013 +0200

    Fixing some Bugs after Query-Optimization
    
    * GetRequest returns fields from _source when realtime=true
    * operator not checked in id-where-clause

commit e196fe65748f304c999946363f48309585ea0516
Merge: ef376b26a8 9b51a09d0c
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 11 05:55:48 2013 -0700

    Merge pull request #87 from crate/seut/fix_filter_by_boolean
    
    fixed filtering by a boolean constant

commit 9b51a09d0ce229492da308ff9561bfb8d5c788e2
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 11 14:50:51 2013 +0200

    testing filter by boolean also on update now

commit d5c496bec2aab1fd8fa9fb31ed5bf457c2d577bc
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 11 14:43:16 2013 +0200

    fixed filtering by a boolean constant

commit ef376b26a81d51545e2ba402cf57b6f9a5888309
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 11 14:20:34 2013 +0200

    fixed doctest related to rowcount on insert

commit 6457d264a505ad2080e10589e68ef172d848ae0c
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 11 13:04:54 2013 +0200

    default primary-key _id for QueryPlanner

commit 04af6def12e227938e96f26d3f69f9362f688913
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 11 12:13:03 2013 +0200

    removed merge artifacts

commit 4d7b3f204e7bfb4736524cc9db3ce3b85bd86106
Merge: 9db2d4f884 4717bf08b5
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 11 12:12:10 2013 +0200

    Merge remote-tracking branch 'origin/master' into mwahl/pk_optimizer_benchmark
    
    Conflicts:
            es/build.gradle

commit 4717bf08b54cb65e217ad7a7f87ec51d80f61b31
Merge: b9ba0e5f97 ab78a0bff1
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 11 03:11:28 2013 -0700

    Merge pull request #86 from crate/seut/query_planner
    
    implemented SQL query planner

commit ab78a0bff14e1fde3b44c019d45487c1f021b065
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 11 12:05:28 2013 +0200

    fixup! implemented SQL planner

commit 0a1d45e5ba6aee4c40ff9e322642f588427dff7f
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 11 12:00:50 2013 +0200

    fixup! implemented SQL planner

commit 9db2d4f8842528cb4f2e87fd7ad90c50baf92c35
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 11 11:58:59 2013 +0200

    no replicas, query-planner-benchmarks

commit fa41c0a2534f8e1baa66d60fe07ced47ba86be22
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 11 11:58:33 2013 +0200

    Data-Loading Optimizations

commit fff785c77b8930fb646eb2f3a31ac9de8741150c
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 11 11:57:35 2013 +0200

    delete benchmark

commit a16b9b0091a42df420fc248d009de72c649bf1c4
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 11 11:56:46 2013 +0200

    no static ids

commit 3b209d3dde2aee809f286c001424862650ddb41d
Merge: e056d8474d 893245723a
Author: Matthias Wahl <matthias@crate.io>
Date:   Fri Oct 11 11:17:06 2013 +0200

    Merge remote-tracking branch 'origin/seut/query_planner' into mwahl/pk_optimizer_benchmark

commit 893245723a3cbd4b64e67e991380c7d5bfa4f0cb
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 11 11:06:51 2013 +0200

    removed duplicated table context allocation

commit deabc04d87be198089b6e0daefc7a304e23e115a
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 11 10:59:48 2013 +0200

    updated CHANGES

commit 12fd2512dbdc7798fe0bd0ff288d42ca17ec815d
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Oct 11 10:57:24 2013 +0200

    planner now supports parameter nodes

commit e056d8474dc3bcdd369f10b02eede5ffe722daff
Merge: 757ac9c639 49dc49821a
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 10 17:20:52 2013 +0200

    Merge remote-tracking branch 'origin/seut/query_planner' into mwahl/pk_optimizer_benchmark

commit 757ac9c639b8e0de7db178aff82070ee51b49395
Merge: c6a0ba9b55 f93dd21dc3
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 10 17:20:34 2013 +0200

    Merge remote-tracking branch 'origin/seut/query_planner' into mwahl/pk_optimizer_benchmark
    
    Conflicts:
            es/build.gradle

commit 49dc49821a2965fc75cb083bfb7b4899cfaedf2c
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 10 17:20:29 2013 +0200

    added UnitTests for the QueryPlanner

commit 7b3fd25f6bf97ba62fec60d4b05118cc50d2ce77
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 10 17:20:00 2013 +0200

    removed useless duplicated default setting

commit c6a0ba9b5509eaf44ce11553b46d8b59a1f10116
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 10 17:19:15 2013 +0200

    add parameterized tests for query planner optimizations

commit f93dd21dc3f123f8e4b06346d8dc19f52d9a35ef
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 10 16:39:03 2013 +0200

    define routing explicit for Get/Delete/UpdateRequest

commit 6c1867dc25cbb2c42c82574c0b2670093b1b9156
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 10 16:27:13 2013 +0200

    benchmarks

commit f5d87dd58c617a80534a7d4436594f2e12b37add
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 10 16:27:04 2013 +0200

    generalized PathAccessor out of TestSetup methods

commit 3b5f0696047ce4a2a5cb818b52df5c6a14244bc5
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 10 16:25:46 2013 +0200

    monkey-patch Average-class to produce more precise results (does not work for html output)

commit b88efb9648ce155672b31e4928640788701120e2
Author: Matthias Wahl <matthias@crate.io>
Date:   Thu Oct 10 16:25:10 2013 +0200

    produce xml-benchmark output

commit 4035e6125aef993428ba19993dcf2cf464990a04
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 10 16:21:26 2013 +0200

    fixed gradle setup

commit c4c98b27a7c6affa2c23ff762edb06e6376fcc25
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Oct 10 16:21:06 2013 +0200

    implemented SQL query planner, currently activated only if WHERE clause includes primary_key AND routing node only

commit c8d41012227490ad32f1fcecb96a16879739d5a0
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 9 16:46:38 2013 +0200

    use AbstractCrateNodesTests to initialize the cluster only once per Test

commit ea5f4adb1d8ebe0dfbe6a09378a8ec0b15f71fd9
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 9 15:35:22 2013 +0200

    lucene-test-framework 2x

commit 0e016d4357c0617b8eadf5887a1e7db3dd7024c5
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 9 15:34:58 2013 +0200

    insert-benchmark

commit 9c52079c447375b94fcf9713b799f4ce9460ea60
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 9 15:30:25 2013 +0200

    benchmark mapping, settings and data

commit b9ba0e5f97609331195e855cb436b98ea2588154
Merge: 9095c69f07 0435eeae0f
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Oct 8 07:47:27 2013 -0700

    Merge pull request #85 from crate/mwahl/no_limit_on_select
    
    increase default limit on select

commit 0435eeae0ff54aa29ab6c9eaa1affee6989a8fbf
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Oct 8 16:24:31 2013 +0200

    tests

commit 93a30d4c79953826cbba418e80452f4e85ee1d6a
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Oct 8 16:03:22 2013 +0200

    default limit as constant in XContentGenerator

commit ebe4b2c9f4fcbf6024dfc1398eaf881c2b4a1dd0
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Oct 8 15:47:21 2013 +0200

    CHANGES

commit 67f40e8e540eaea140c091a6025b7d7c9991b68e
Merge: 761b698752 9095c69f07
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Oct 8 14:54:30 2013 +0200

    Merge remote-tracking branch 'origin/master' into mwahl/no_limit_on_select

commit 761b69875299ea115561040b948373e9411a0fa7
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Oct 8 14:36:07 2013 +0200

    set default limit for select queries to 1000

commit 9095c69f07e079ba525c9ace2c7e8dd2c9fbf5a3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 8 11:37:13 2013 +0200

    prepare release 0.14.0

commit 860022f648d96c142664cc2983c610a83f2e33a9
Merge: 82e4cca319 15867a56ba
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 8 02:33:13 2013 -0700

    Merge pull request #84 from crate/seut/pk_keys_meta
    
    set ``primary keys`` definition under the type mappings ``_meta`` instead of index ``settings.crate``

commit 15867a56bada1e604ad7b2958421dd94fff38c2e
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 8 11:29:48 2013 +0200

    bubble IOException at tests

commit 705701e749fd68531cdb4d6f887bcd770570dd6f
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 8 11:02:19 2013 +0200

    set ``primary keys`` definition under the type mappings ``_meta`` instead of index ``settings.crate``

commit 82e4cca3190fc35581b0db280fa8470e58345ad3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 8 10:59:35 2013 +0200

    add support for select count(*)

commit 5f1c0a3a3dc086494b04ce26e4a23721000d0d2e
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 7 21:53:25 2013 +0200

    prepend junit 4.11 to classpath
    
    until 4.10 dependency from 3rd-party projects vanishes

commit 89eb0ca3a54aa98867dc00f1f7c8788717076dd2
Author: Matthias Wahl <matthias@crate.io>
Date:   Mon Oct 7 21:36:45 2013 +0200

    upgrade junit 4.10 -> 4.11

commit a53715f5e3b70950fc99876ac39ba0ed7d600227
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 7 18:39:53 2013 +0200

    gradle: fix sourceSets and classpath order
    
    renamed json_a to json_b because the resources from inout/
    conflicted with sql/
    
    lucene-test-framework needs to come before lucene-core so
    added explicit ordering to build.gradle

commit b30e22d9a12227e5c282c0cca12fc48aeafd3e22
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Oct 7 14:43:24 2013 +0200

    update elasticsearch to 0.90.5

commit d2eeb1c1383106076af8d3b124a7ead938763f1e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Oct 3 08:40:18 2013 +0200

    include crate-python sqlalchemy docs in sphinx docs

commit 9b5e0cd2ad1bb5c34a31fa459cbf2361cc9c4d11
Merge: e44b76bdc8 e7220bec39
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Oct 2 08:47:14 2013 -0700

    Merge pull request #81 from crate/seut/test-tmp-file
    
    use system temp directory now, fixed setting of data dir at nodes tests

commit e7220bec3970f7bc6f20ff8cf8fc46e37dba0f2e
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Oct 2 17:42:26 2013 +0200

    use system temp directory now, fixed setting of data dir at nodes tests

commit e44b76bdc8bb52e96b7e9c085f3b5803187a9ee5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 2 17:44:23 2013 +0200

    prepare release 0.13.2

commit 0b12b5dac58cbdad2d683546aca7c540ea75fef9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Oct 2 13:40:44 2013 +0200

    handle version conflicts correctly on updates

commit d217e604f2d6679d607a615d1e85ee15fbec48c2
Merge: 393496543e d5ebe4725b
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Oct 2 06:50:03 2013 -0700

    Merge pull request #80 from crate/seut/admin-frontend-no-cdn
    
    don't load any JS files from externals domains (CDN) at the admin web interface

commit d5ebe4725b2a8e8d0c484035a3a262730fc6372c
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Oct 2 15:45:31 2013 +0200

    removed usage of ``grunt-google-cdn``, means provide ``angular.js`` ourself

commit 393496543e27c984e14bfd64353c6dbc074ebac1
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 2 14:17:38 2013 +0200

    changes

commit 0d51329fb39d710d0be2bc2632001d0b1bb778a2
Merge: 9779205678 e252261118
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Oct 2 13:55:22 2013 +0200

    Merge branch 'master' of github.com:crate/crate

commit 97792056782e46f65e43442db33e1198a238d0a8
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Oct 2 13:55:01 2013 +0200

    fixed nodes tests setup

commit e252261118b5942dd6151d64994d08f9785484ec
Merge: 6805a627b4 f27f55879e
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 2 04:50:16 2013 -0700

    Merge pull request #77 from crate/mwahl/rowcount_in_result
    
    serialize rowcount in SQLResponse, currently used for SQLResponses of Up...

commit 6805a627b454a0ef251dd4cbc6d522048e5c5063
Merge: eebe49f292 cd599b2ecf
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Oct 2 03:05:07 2013 -0700

    Merge pull request #78 from crate/seut/test-data-tmp
    
    create temporary directory for test data, will be deleted after test run

commit cd599b2ecf6df8fda1bb0af462aaf752071be7aa
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Oct 2 11:57:58 2013 +0200

    formating fixes

commit 4193fba90699bfc912a68d90b76f2c0242e5f19b
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Oct 2 11:47:06 2013 +0200

    use temporary data directory for nodes tests

commit f7e2f933e1179c9b5bbf06bb4c10352eede34ead
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Oct 2 11:46:36 2013 +0200

    create only 1 directory per CrateTestCluster instance, delete it via shutdown hook

commit b57820ca473d05161642e87275d80c17c8870d5e
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 1 19:47:56 2013 +0200

    create temporary directory for test data, will be deleted after test run

commit eebe49f2927f8d4a327c5503659d05379a5dacd9
Author: Matthias Wahl <matthias@crate.io>
Date:   Wed Oct 2 11:23:15 2013 +0200

    changes

commit 2a61ca3dcffda4c37cc25621808dc989c0c830d0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 1 15:19:32 2013 +0200

    add support for nested object updates via sql update stmt.

commit f27f55879e27f1ebd6dd6a1d32127e79df889c7c
Author: Matthias Wahl <matthias@crate.io>
Date:   Tue Oct 1 18:35:16 2013 +0200

    serialize rowcount in SQLResponse, currently used for SQLResponses of Update-Queries

commit 23d5b3228d659853241ea5271e4fbe21268bde26
Merge: b9810a4c4e 8f87d640cb
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 1 08:02:05 2013 -0700

    Merge pull request #75 from crate/seut/default-analyzer
    
    set the ``keyword analyzer`` as the default analyzer

commit b9810a4c4e5600d2c08efb6267543fd557d29a95
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 1 17:00:00 2013 +0200

    fix: no object to end here, just return the jsonBuilder

commit 8f87d640cb06e72858a6b21fe3d921705c2e7e83
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Oct 1 16:20:39 2013 +0200

    set the ``keyword analyzer`` as the default analyzer

commit cb500cfe4c4f7ac1810a46febdad93ed1e8cb6c1
Merge: 66ea177ff7 4bb13010a5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Oct 1 14:37:38 2013 +0200

    Merge branch 'jordi/pk_definition'

commit 4bb13010a5b3c79bd0bf411fd3f80b481172ebd2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 30 12:18:13 2013 +0200

    add primary key definition to index settings

commit 66ea177ff718ade0c4bb81589cac02b935ba5b01
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Oct 1 10:08:12 2013 +0200

    clean imports

commit ae1ed80a6551c59ea80a4e9dfe111eaaa66dcaee
Merge: 42acd9269b 32be568b0a
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Sep 30 07:48:32 2013 -0700

    Merge pull request #73 from crate/dobe-update
    
    Dobe update

commit 32be568b0a54ffd3622189623142bae480faa4ea
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Sep 30 16:47:13 2013 +0200

    removed todo

commit d6c70d88c08f17b33e3bba92b1e192e362f42167
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Sep 30 16:45:07 2013 +0200

    cleanup

commit 4fcfc3d15373ebefe6f9fb150a64f14d523cc309
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Sep 30 16:43:42 2013 +0200

    other error used and cleanup

commit 431cbd9d4a3260a7c0a5aec0751691ad196ce8d0
Merge: ef1747afba 42acd9269b
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Sep 30 16:09:12 2013 +0200

    Merge remote-tracking branch 'origin/master' into dobe-update
    
    Conflicts:
            sql/src/main/java/org/cratedb/action/parser/InsertVisitor.java
            sql/src/main/java/org/cratedb/action/parser/XContentGenerator.java
            sql/src/test/java/org/cratedb/module/sql/test/QueryVisitorTest.java

commit ef1747afba3001dbb0ccae386e45f9e0c3b06b62
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Sep 30 15:16:59 2013 +0200

    facet based update implementation

commit 42acd9269bb1ed444453ddcb71a57196f395f21f
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Sep 30 12:17:21 2013 +0200

    fixed tests related to new property in test mapping

commit 57a4740fa609c314ca1549421bc32945c41655a8
Merge: 4cbaf1577c 2f1e7829b4
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 27 07:56:13 2013 -0700

    Merge pull request #70 from crate/seut/op_create
    
    bugfix: use ES operation type ``create`` for SQL ``INSERT``

commit 2f1e7829b4bf21e7706ddaff0e290db88096514b
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 27 16:53:15 2013 +0200

    more fine-grained multi-row insert test

commit 35aae712eebdc95e37a8285743f06f30d100d865
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 27 16:31:03 2013 +0200

    added ``InsertVisitor`` unit tests

commit da4bcace72312bdb33bb8f7f6518003b135af51c
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 27 15:30:38 2013 +0200

    bugfix: use ES operation type ``create`` for SQL ``INSERT``

commit 4cbaf1577c83b3a2f67ac3b65e039eb765287db3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 27 16:19:17 2013 +0200

    prepare release 0.12.0

commit 298d3559f7e631cec15b014077e0a0d8b5be3ed3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 26 23:28:51 2013 +0200

    get the dist version number from the latest git tag

commit 50459eb477dde125a87d52333128fa801da6209c
Merge: 9bba4e97ff 59eb3e4abd
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 27 06:22:55 2013 -0700

    Merge pull request #69 from crate/seut/sql-object-notation
    
    implemented support for selecting and querying inner/nested object properties

commit 59eb3e4abdb928549eaf99a05d105420bf95a50d
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 27 15:19:50 2013 +0200

    typo fix, removed debug statements

commit 1bba2ea782f4a3dfc053960c003bea08b3e60cbe
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 27 14:33:46 2013 +0200

    removed code related to master rebase conflict

commit 626bdc1ace586d9b0ab5855adf87cca2823b7210
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 27 11:50:41 2013 +0200

    updated CHANGES

commit 8c3b1e0e570c45acc8abb14b746e55a3ee50f426
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 27 11:44:16 2013 +0200

    added ``crash`` tests

commit a748932bb9fe7527f671b779f50225e071d49a92
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 27 11:43:48 2013 +0200

    raise exception while selecting a nested column index

commit 8819ddf267a92fb8812aaad18c6bbdd83f25dc31
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 27 00:23:56 2013 +0200

    implemented ``NestedColumnReference`` support for search queries

commit 6d25881bb4eb667f0b8a190187a6b81ee74fb659
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 27 00:19:07 2013 +0200

    added inner/nested object notation to sql grammar

commit 9bba4e97ff644403797e0a3c633c595e5bf09b04
Merge: 9bb11363da db979ee652
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Sep 26 06:09:02 2013 -0700

    Merge pull request #68 from crate/seut/docu-jvm-version
    
    added minimum JVM requirement to docs

commit db979ee652c7f21740bc50111b7f1dfac4134ccc
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Sep 26 14:33:33 2013 +0200

    added minimum JVM requirement to docs

commit 9bb11363da4cb3dacad958ddca602966c2a46af3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 26 11:27:01 2013 +0200

    fix handling of `null` args sent to the _sql ep.

commit ce759e7fc79b5aed8d78b2aec215a6f32acbb5de
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 26 11:07:37 2013 +0200

    fix a regression that caused chunk requests to only work for blobs

commit 3e9e4e4db22d7f4cbf177fb7d1cdf525c7f0595b
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Sep 25 16:22:03 2013 +0200

    fixed docu for akiban removal

commit 35630841b356d5c6ef06fe4792484868a652c29f
Merge: 08fa1e9d10 ad0bdb593e
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Sep 25 07:10:51 2013 -0700

    Merge pull request #64 from crate/seut/sql-parser
    
    Included akiban/foundationdb sql-parser to sql module

commit ad0bdb593e34f34df320d19218a1ded8fc8097c2
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Sep 25 12:07:11 2013 +0200

    added changes

commit 85f5cf7fb51d510c12b02aa963d42a65401b82b6
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Sep 25 12:06:11 2013 +0200

    use gradle inputs/outputs to avoid useless task execution

commit 08fa1e9d10c86272b385c337f367e0123f203c89
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 25 10:35:49 2013 +0200

    fix failing integration tests

commit ab7c51ef5adf541f92e065bc8e4f76613e7513db
Author: Sebastian Utz <su@rtme.net>
Date:   Tue Sep 24 16:47:12 2013 +0200

    added notices related to foundationdb/akiban sql parser

commit 6cf133fbc2d229ab738d5a1103cc5131dc15822d
Merge: d57dd73d52 c72f5e20d8
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Sep 23 19:46:50 2013 +0200

    Merge remote-tracking branch 'origin/master' into seut/sql-parser

commit d57dd73d520bc368bc263ef9726189adbc9f32fa
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Sep 23 19:46:36 2013 +0200

    copied source of ``akiban-sql-parser`` inside our project,
    added javacc task to ``sql`` module,
    removed ``akiban-sql-parser`` dependency

commit c72f5e20d8e06f51e2d2c7cc0397a65141af89a3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 23 13:59:56 2013 +0200

    prepare release 0.11.3

commit 38757e4b1267d4dca470a4d265ece8bbfe0a474e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 20 10:53:30 2013 +0200

    add support for parameter substitution in limit and offset clause

commit 184d3e155ba03eac4bd2b866dbcaae9b14d8aa65
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 18 21:43:39 2013 +0200

    prepare release 0.11.2

commit f3848bcb933037e156f82595daa4b578a9e3c7e2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 18 21:28:16 2013 +0200

    fix nestd object handling in SQLArgsParseElement

commit fda261bd706758e50fa1d437e594997123043ac2
Merge: eb8f926505 0b74877567
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Sep 18 08:51:12 2013 -0700

    Merge pull request #60 from crate/seut/object-support
    
    fixed resolving columns of type ``object``

commit 0b7487756770662adb75de939fd108d7a982cfb4
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Sep 18 17:49:58 2013 +0200

    added CHANGES

commit c391dd63bd29a4d829516476cbd2caab44190a46
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Sep 18 17:28:43 2013 +0200

    removed debug logger

commit 3fad7202365a0bb98f605bc5d640bd1106f31875
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Sep 18 17:24:17 2013 +0200

    fixed resolving columns related to ``object`` mapping types,
    added test for inserting/selecting entries with an ``object`` type

commit eb8f9265052dd79acee5177e04ddfadd56570310
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 18 17:12:14 2013 +0200

    update crate client documentation

commit fade884ea9866547711f50ed9246ea90da99134e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 18 09:18:28 2013 +0200

    prepare release (0.11.1)

commit 7b83827c90f66045c9ed753a4b495cfac84783a2
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 17 15:19:13 2013 +0200

    prepare release 0.11.0

commit cd612d6cb6ae4179aaf43258c0b38f52e29017fc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 17 14:20:36 2013 +0200

    improve error responses on the _sql endpoint

commit 3695e98f7fc44601a8a7c1d088a25bdbc43af402
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 16 17:35:08 2013 +0200

    use crash in the documentation

commit ffc905cf48bb9a2739907e81d6871f56dafe5b53
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 16 15:00:22 2013 +0200

    bubble all exceptions that got silently catched

commit 050e963446d3a8fc2d46ef938d9fe058605c8a04
Merge: 795d5d1e24 7d5e914b76
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Sep 16 04:56:12 2013 -0700

    Merge pull request #55 from crate/seut/insert-args-support
    
    implemented parameter substitution for ``INSERT`` statements

commit 7d5e914b76f55f8d64f25efdf677ee857201d4b2
Author: Sebastian Utz <su@rtme.net>
Date:   Mon Sep 16 13:43:32 2013 +0200

    implemented parameter substitution for ``INSERT`` statements,
    general bugfixes at InsertVisitor

commit 795d5d1e24cc7ae4fa90a4a7842da4328db709be
Merge: e727b4c50c 1f99f5df87
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 13 10:44:25 2013 -0700

    Merge pull request #54 from crate/seut/insert-multiple-rows
    
    implemented support for multiple rows on ``INSERT`` statements

commit 1f99f5df873d4e2ddd0f1214ae44c87d67433587
Merge: 57fd3d9be3 e727b4c50c
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 13 19:36:48 2013 +0200

    Merge remote-tracking branch 'origin/master' into seut/insert-multiple-rows
    
    Conflicts:
            docs/sql.txt
            sql/src/main/java/org/cratedb/action/sql/TransportSQLAction.java

commit 57fd3d9be34ca12ec79d44343033076273d3bab3
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 13 19:24:44 2013 +0200

    log json builder's IOExceptions instead of silently catching it,
    better documentation, removed debug print

commit 1694b4ee389433231108eb8832720dc6de76db7c
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 13 17:15:26 2013 +0200

    implemented support for multiple rows on ``INSERT`` statements

commit e727b4c50c8a959869fb6d9b975cea29306ee10b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 13 11:13:15 2013 +0200

    add support for sql delete statement

commit 525d27023891ca88fc88925cb6ca88c290699f5c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Sep 13 14:19:43 2013 +0200

    add missing dependency to unpackDistTar gradle task

commit 69714b3e4efb7850e901db6e68bee44cfbca6682
Merge: 49409f693f d99dec018f
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 13 02:49:45 2013 -0700

    Merge pull request #52 from crate/seut-sql-insert
    
    Implemented simple sql insert stmt support

commit d99dec018fe4fec801114915c4752be30f347d10
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 13 11:38:46 2013 +0200

    docu changes, using new sql ``INSERT`` for adding data in docu's

commit a36099eff0925532e10708c130a11508c119a97b
Author: Sebastian Utz <su@rtme.net>
Date:   Fri Sep 13 09:37:09 2013 +0200

    minor better docu

commit b231b189c7cd3daf9bef2b47d4983dccc234e6f8
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Sep 12 20:06:33 2013 +0200

    typo

commit c55f863ba2bca443a540a102b2a0d791e2d4800f
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Sep 12 20:00:50 2013 +0200

    typo fixes, better rst

commit d3890f8c02070ce9de030a7f48a7877fec763bf1
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Sep 12 19:08:49 2013 +0200

    removed obsolete code

commit f1b6e9793ecebb8aeba3edc66be54294bcd236db
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Sep 12 19:03:36 2013 +0200

    added simple doc(tests) for sql insert statements, fixed sql insert response

commit a6ba30ca0dc90b6f9eebfc1444a56e360a15df86
Merge: 1b449e7f4a 49409f693f
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Sep 12 15:10:36 2013 +0200

    Merge remote-tracking branch 'origin/master' into seut-sql-insert
    
    Conflicts:
            sql/src/main/java/org/cratedb/action/sql/ParsedStatement.java
            sql/src/main/java/org/cratedb/action/sql/TransportSQLAction.java

commit 1b449e7f4a3ca05b82d68a723752625d09317b72
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Sep 12 14:45:02 2013 +0200

    implemented SQL INSERT statement support including all ES core data types, done using only the ``Visitor`` pattern for building the XContent

commit 49409f693f6c44f575dadfdf5377feea1d8fa3e3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 12 10:35:35 2013 +0200

    remove DEVELOP.rst reference from the README
    
    the DEVELOP.rst isn't included in the tarball

commit 864c43f51a922e9b6563ee0e39a3e5c3c3f64044
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 11 12:28:21 2013 +0200

    add parameter substitution support to the _sql rest endpoint

commit 1845a22eff28884ed126b137d76d463c4dbd9485
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 10 12:06:30 2013 +0200

    add sql args support SQLRequest

commit b6e58d08f76757153ab160d879217d8a8b3e3b81
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 9 17:37:23 2013 +0200

    invalid uri's no longer result in an internal server error

commit b8bfb97bcdcc5fa25bcef1a4457197418c65921f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 9 16:34:30 2013 +0200

    adopt sqlconsole to new response format

commit a37b2da0264d4ccdc54e3d2147b2f4174844da3d
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Sep 9 09:25:43 2013 +0200

    use buildout instead of make for doc generation

commit 4ecf866a4204394786cabed9f019a5a99a44e52a
Author: Sebastian Utz <su@rtme.net>
Date:   Sun Sep 8 17:13:42 2013 +0200

    initial sql INSERT stmt implementation,
    TODO: support insert stmt without column names,
    TODO/DISCUSS: remove hardcoded source type

commit 4972c0fe5f4946bc9b46667c4d64213e658455b3
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Sep 6 16:23:17 2013 +0200

    added gitignore

commit 13f570cf87133751b175abb8e054dc666f6eb586
Merge: 38bb39c7a4 fdf0f312db
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Sep 6 07:21:26 2013 -0700

    Merge pull request #46 from crate/dobe-rename-ns
    
    renamed ns crate.elasticsearch to org.cratedb

commit fdf0f312db0dad59b25109e5f6ceb61c8af18569
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Sep 6 16:11:10 2013 +0200

    renamed ns crate.elasticsearch to org.cratedb

commit 38bb39c7a42eee4fdcb7a0404236c814b588860c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 5 09:01:48 2013 +0200

    prepare release 0.10.2

commit 69d8bd5baebcb667bb596dd7d79b66d41d933adf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Sep 5 08:59:04 2013 +0200

    fixed make targets

commit b209aef1a94fdfbe05d57845d0e01c98521e2884
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Sep 5 08:52:56 2013 +0200

    fixed make targets

commit a1375ee81d1a6839a04a8fc97930691567de9509
Author: Sebastian Utz <su@rtme.net>
Date:   Thu Sep 5 08:43:24 2013 +0200

    PYTHONPATH must be set where sphinx-build is executed

commit 99d2f6c40233b458da72948e3cdaf28f40aee4fe
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Sep 4 23:19:17 2013 +0200

    integrated documentation of the crate-python client lib

commit fe6e7042f9e2d5f2c0614f625bd16134d3349b2f
Author: Sebastian Utz <su@rtme.net>
Date:   Wed Sep 4 23:14:20 2013 +0200

    fixed crate archive file path

commit 24c771bd8af790878066d0efdfe9618550639639
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 4 18:50:59 2013 +0200

    add docs for the java CrateClient

commit ee91358ed0a8870e84099ca5aedf0aa8df4c98e5
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Sep 4 23:19:58 2013 +0200

    fixed typos

commit 020098c961012a971d2582e536d994ac1386d12d
Merge: 7e8724d8b2 955fbd3981
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Sep 4 08:17:35 2013 -0700

    Merge pull request #42 from crate/dobe-client
    
    Dobe client

commit 955fbd3981add3f88a52f2946241e4b8c3ec2ce7
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Sep 4 17:14:39 2013 +0200

    some fixes

commit 760ad2bedf7e325b1e532e9936af3eb7923bb116
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Sep 4 16:50:24 2013 +0200

    doc changes

commit 0dafd6df1dc9dca6a61c362ee4889d4918d77db2
Merge: bff6cf9715 7e8724d8b2
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Sep 4 16:48:47 2013 +0200

    Merge branch 'master' of github.com:crate/crate

commit bff6cf9715c3e4025bc5537053c9f20e1d0fe3d1
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Sep 4 16:48:35 2013 +0200

    crate transport client implementation

commit e59476fac20d711bc3b19b3933df38f4a4ad89d4
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Sep 4 16:45:50 2013 +0200

    use es test

commit 7e8724d8b2d1d1d60d5f392ee499f9af7f067161
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Sep 4 09:58:23 2013 +0200

    prepare release 0.10.1

commit be93ffcb315afa2ebe696827f92b7fe4723b87cd
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 3 19:31:08 2013 +0200

    prefer /opt/python-2.7/bin/python over python2 that is in syspath
    
    on scientific linux python2 in the syspath is python2.6
    at least 2.7 is required to build the crate distribution.

commit aee1f16a1b5534f6214348eb8e685f6c1967e9b7
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Sep 4 08:48:17 2013 +0200

    added gitignore to blob

commit b0560d1de8185ba754acf21572f80bbe2cd25771
Merge: d869fc7e70 ff24433365
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Sep 4 08:39:44 2013 +0200

    Merge branch 'master' of github.com:crate/crate

commit d869fc7e7019c71da2d5260b8a0f94d95ba4d51c
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Sep 4 08:39:30 2013 +0200

    fixed response serialization

commit ff24433365e5cc69139f49f5bdd9d85e73b0b036
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 3 19:13:43 2013 +0200

    prepare release (0.10.0)

commit 5b5a1c8eaa3eb102a90d172250f9a6d0ea19f668
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 3 17:58:11 2013 +0200

    include NOTICE and CHANGES.txt in the distribution

commit b79aecc497a4640b83a96e3dcd6e5ca53cb739cc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 3 17:11:17 2013 +0200

    improve text output of the docs and adopt docs to recent changes

commit b318379deff2b468f33ea611f3de251d547ba067
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 3 16:41:52 2013 +0200

    adopt hello.txt to reflect the changes in the sql rest endpoint

commit 8cdf2cf577ef23e8cf9a62f070a7d8f61d89c736
Merge: b481cbef29 ee8abcd877
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 3 07:23:11 2013 -0700

    Merge pull request #37 from crate/python3-compat
    
    changed example in docs/blob.txt to be python2 and python3 compatible

commit ee8abcd87792f3b36c8c59c4d3bb4a6e146e5f7a
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 3 16:19:27 2013 +0200

    changed example in docs/blob.txt to be python2 and python3 compatible

commit b481cbef291ecc538e33c7900507a0516f03c813
Merge: c5456a6949 3e898a2dcf
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 3 07:17:58 2013 -0700

    Merge pull request #36 from crate/empty-blobs
    
    uploading a empty files no longer result in an internal server error

commit 3e898a2dcf254f7eaa6253aa67a1f0a01b806936
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 3 15:36:12 2013 +0200

    uploading a empty files no longer result in an internal server error
    
    instead they're now handled just as any other file

commit c5456a69498b95932ea54e300a1bcf2469376d05
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 3 15:04:45 2013 +0200

    don't use the BlobRecoveryHandler for non-blob enabled indices

commit f5688e5d28d1f7a2363f941e4a2c6008d5a5da45
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Sep 3 11:55:13 2013 +0200

    include the blob module in the crate repo

commit e216dcd3f387552a6740119c4f01fee697cfadb9
Merge: 886a55a9d3 da99aa7d2f
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Sep 3 00:22:56 2013 -0700

    Merge pull request #33 from crate/dobe-transport-sql
    
    transport sql implementation

commit da99aa7d2f74db7ff300eb8f6c60651234a0cf3e
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Sep 2 14:53:06 2013 +0200

    transport sql implementation

commit 886a55a9d33041e1980731ac1994b68e9544b227
Merge: a99d585b21 affa774b40
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Aug 28 05:12:32 2013 -0700

    Merge pull request #32 from crate/dobe-projectrefactor
    
    Dobe projectrefactor

commit affa774b40c1379e7fe62eec43146b458bd6c31d
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Aug 28 11:22:11 2013 +0200

    testing overhaul

commit f24599850668eaa490d9754037386c2f923755d7
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Aug 26 11:00:58 2013 +0200

    fix elasticsearch resources

commit d24e92b2d8aac33cc00cb34f7a9fb016a029b565
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Aug 22 23:00:31 2013 +0200

    add blob docs to index

commit 6452b38606ef7edaafb2bd150e476cffc03e4528
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Aug 22 22:49:36 2013 +0200

    integration tests for blob support

commit 9ac13ee973a2c364ec7f604399a47f2b7fa35770
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Thu Aug 22 06:10:38 2013 +0200

    wait for green status in layer

commit 86fd1d0d2a885f8da6521fc1311a10795c13d5cc
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Aug 21 14:58:28 2013 +0200

    gradlify

commit 6ab01a5a3240fe74e53e87f8b7c484f7ac34e02e
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Aug 21 14:58:05 2013 +0200

    gradle app

commit 325c5db1e0cd0acf3803b3c7e8ed20ec21a0f366
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Aug 21 14:48:45 2013 +0200

    remove poms

commit df7fc053cb5091e2d1f46a257fb80a574a55f5e7
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Aug 21 14:40:09 2013 +0200

    itests

commit 4ed0fceac5327f991e8b3af873886adad41a86f0
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Aug 21 14:39:25 2013 +0200

    distribution files are now in app

commit 5dd5e449dc1100dbe85b313a475ec9a9bb91557b
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Aug 20 17:09:20 2013 +0200

    gradlify

commit 3f5086e7a1ac0074c943f0e5e89e25abe388c988
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Aug 20 17:01:53 2013 +0200

    removed timefactes since it is not 0.90.3 compatible

commit 46fde95ef7ce4db6529a24ea4e750758d45ca529
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Aug 20 16:47:54 2013 +0200

    timefacets plugin integrated from https://github.com/crate/elasticsearch-timefacets-plugin

commit 471921efef5cff0caf60fa550c9d07cad5d233fc
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Aug 20 16:31:48 2013 +0200

    removed submod for inout plugin

commit 0ff2cc43dd30904b62371ed3384fba998196502b
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Aug 20 16:26:02 2013 +0200

    gradlize inout

commit 96cd3e90027bbe5b4f2f8cbf856ff026992febe5
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Aug 20 16:10:57 2013 +0200

    moved from https://github.com/crate/elasticsearch-inout-plugin

commit 5e1159bbfb640a314f7d5afcf4623feabfaedb47
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Aug 19 10:43:53 2013 +0200

    es gradle

commit 9f582a655b9ce048a6d5af00dbd77da3b81bf9ec
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Aug 16 12:14:56 2013 +0200

    crate plugin in gradle

commit f5044356dd3cf3474054363d2db09269100f64c5
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Aug 16 12:09:37 2013 +0200

    moved here from https://github.com/crate/crate-sql-plugin

commit f81dbf52a85fcf500d9e3ad8a79744edec4cfc4d
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Fri Aug 16 12:02:38 2013 +0200

    gradle wrapper added

commit 3242d001a13cb8e6acb4a4705e0661d8a1dd1a95
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Aug 13 12:42:20 2013 +0200

    depend on crate.es instead elasticsearch

commit d068316447874fd78ce1972f41f909e50578e57b
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Aug 13 12:41:40 2013 +0200

    server package

commit 95519eb8560276fc1475387695292116d34daa76
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Aug 13 12:41:30 2013 +0200

    es pom

commit 2167783c49fe815fd3fe8b0d68e1040f30815bb9
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Aug 13 11:48:45 2013 +0200

    make sql plugin local

commit 23744f237b2a42b0f010af7d0f8a28df513b5116
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Aug 13 11:36:28 2013 +0200

    added crate-elasticsearch as upstream

commit a99d585b21c306e0eb7b2b54244c5bc38fe0fce4
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 8 08:12:31 2013 +0200

    prepare release 0.9.2

commit d3ea621c7ce09d28995afaca4d8821bec4f9da5b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Aug 8 08:11:59 2013 +0200

    update crate-sql-plugin to 0.1.0

commit 5835c32f6b5b33f0d2ad5321a55bc82a344e3670
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 24 23:28:08 2013 +0200

    prepare release 0.9.1

commit e022a7daa7ca34b74239c194ee15b386d9b77d5f
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 24 23:26:02 2013 +0200

    fix scrolling issue in admin interface sql console

commit 91d1d277064283bed91ec4dd5c4c15ab121c2958
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Jul 24 16:49:47 2013 +0200

    fix multi exectuion in pom

commit d8edd9f8f9130689ff81c10ae52ce26b449dd277
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 24 16:13:20 2013 +0200

    adjust create_tag script

commit 5b2ebe63194dc37c37c46de07169726d835f48d0
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 24 16:03:20 2013 +0200

    prepare release

commit a772cae35101f0f98f50fa50a9f96c97dd1a6321
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 24 16:10:53 2013 +0200

    remove logo from sphinx docu

commit 345c47d7f0ed5da3868e2e75ae1114d737cfdf20
Merge: ed02206152 80f9e6a4d5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 24 06:53:06 2013 -0700

    Merge pull request #30 from crate/frames
    
    open links in the admin interface in a frame

commit 80f9e6a4d5b23e7bf5f6b49fd5ede59e6996fbb3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 24 11:57:47 2013 +0200

    open links in the admin interface in a frame

commit ed022061527a4fe953e255d357cd45c0975eab59
Merge: 9106546203 1291a506ab
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 24 06:03:01 2013 -0700

    Merge pull request #27 from crate/sphinx
    
    add crate sphinx theme

commit 1291a506abcc9f36b8339ce21955ac8691382a6c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 23 21:32:55 2013 +0200

    add crate sphinx theme

commit 9106546203a68e61519fa8414008b2cdf636a881
Merge: d6548b408f e17e50c835
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 24 05:54:30 2013 -0700

    Merge pull request #29 from crate/plugin-docu
    
    include inout and sql plugin documentations

commit e17e50c835e5fee3b5ddad7b01c95085542008e9
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 24 14:37:09 2013 +0200

    include inout and sql plugin documentations

commit d6548b408f8ff3308315891916c14131da12aa47
Merge: 6e8e01a617 665b4dd844
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Jul 24 02:40:51 2013 -0700

    Merge pull request #28 from crate/dobe-sphinx-text
    
    include test docu in distributions

commit 665b4dd8445a153b364edeff8b6e7a2b5019216d
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Jul 24 11:34:43 2013 +0200

    include test docu in distributions

commit 6e8e01a617fbc6a884c2e660fed7421ef1639e4b
Merge: 479e392fb8 ed2f8c00e1
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Jul 24 01:12:28 2013 -0700

    Merge pull request #24 from crate/dobe-docs
    
    Dobe docs

commit ed2f8c00e17a29b89f5ab9435ab694bd42dd1c1c
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Jul 24 10:11:05 2013 +0200

    missing requirements added and freeze

commit cf132a196b9f1e4f63337505274bf9bd759c44f2
Merge: 6958e62da3 479e392fb8
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Jul 24 10:08:13 2013 +0200

    Merge remote-tracking branch 'origin/master' into dobe-docs
    
    Conflicts:
            CHANGES.txt

commit 479e392fb8a0321a9f3e144ab969b1faddd89b84
Merge: cc503e2d13 4339ccfbf1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 24 00:48:50 2013 -0700

    Merge pull request #26 from crate/crate-admin
    
    add link to documentation to the crate-admin interface

commit 4339ccfbf1eea8acfbfe2f0906f88c1a8c79f17c
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 24 09:46:42 2013 +0200

    update changes

commit 0fd73d5892f3e9c74d8fa77a6c92ef366efa988b
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 24 09:42:36 2013 +0200

    update generated files for crate-admin

commit cc503e2d13b293a6c3a0e8f37ae84580994e1914
Merge: 2f73961b5f ad8a420bb1
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 24 00:26:38 2013 -0700

    Merge pull request #25 from crate/no-license
    
    remove license file

commit ad8a420bb10003ac2524289441339ab5adbf9aeb
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Wed Jul 24 08:52:16 2013 +0200

    remove license file

commit 6958e62da39a72ca33cb4d60e58e71fb47b62ae1
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Jul 24 08:09:46 2013 +0200

    doc changes

commit badbae1bf1ead83a21ec251ca66862480007a5b5
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Jul 24 08:08:56 2013 +0200

    test the docs in verify phase

commit 6fb9f3996d1601e57368f6f0768cd7ec22c0c4f4
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Jul 24 08:00:25 2013 +0200

    tested docs

commit 2f73961b5f4e28f54de9a5e12a5e32976f96278e
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 23 15:53:32 2013 +0200

    update crate-sql-plugin submodule

commit b77f805398d8b67e1b73133cfd9d5898f5d27bd5
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 23 15:47:31 2013 +0200

    Revert "Update .gitmodules"
    
    This reverts commit e3fff064a3551b7ce12153bc5b1e3a4bbab30757.

commit 6e6b622bcda26e2391991ac95393a0ae41fa9c23
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 23 15:44:18 2013 +0200

    correct rst syntax

commit d2d85615805a1f619e8c6c42f72d870c500ee9da
Merge: eb5aa80965 e3fff064a3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 23 06:34:21 2013 -0700

    Merge pull request #22 from crate/crate-sql
    
    add web sql console to the admin interface

commit e3fff064a3551b7ce12153bc5b1e3a4bbab30757
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 23 15:24:45 2013 +0200

    Update .gitmodules
    
    use git instead of ssh to download the crate-sql-plugin submodule

commit eb5aa809654791b3047c4f49fabc6be11579b208
Merge: 3967d414c1 5d06ee4ec7
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 23 06:19:33 2013 -0700

    Merge pull request #21 from crate/python2
    
    create virtualenv with python2

commit 5d06ee4ec70707b64b6afd3455156ff73cdc9854
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 23 14:52:13 2013 +0200

    create virtualenv with python2

commit 0994fe7e4b5688b55f807455f59970883f3976b6
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 23 09:04:16 2013 +0200

    add web sql console to the admin interface

commit 68293433a068afe966a0f7a0df76e12aed557d41
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Tue Jul 23 08:55:25 2013 +0200

    add crate-sql-plugin as submodule

commit 3967d414c1265f454b98a2a9e87da393700a001f
Merge: 4810da5ef7 8a84203b1e
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Jul 22 05:56:12 2013 -0700

    Merge pull request #20 from crate/dobe-sphinx
    
    Dobe sphinx

commit 8a84203b1ea64b15471cf1999dbed16ea46b97d8
Merge: 6139e1281b 4810da5ef7
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Jul 22 14:35:59 2013 +0200

    Merge remote-tracking branch 'origin/master' into dobe-sphinx

commit 6139e1281ba27a5fc9c8117b1f411503fdf758c5
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Mon Jul 22 10:05:31 2013 +0200

    first generated docs

commit 4810da5ef760751e581498a864767dc2025e343a
Merge: 49f82b7ce8 8e20f9ef41
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 22 05:10:37 2013 -0700

    Merge pull request #19 from crate/crate-admin-readme
    
    update instructions in crate-admin/readme

commit 8e20f9ef4123e48431403ae9eb91af6c47d5ffbc
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Mon Jul 22 11:40:36 2013 +0200

    update instructions in crate-admin/readme

commit 49f82b7ce821d906a471d3555e607b80dbe34a68
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Jul 17 16:30:42 2013 +0200

    removed mentioning of other db products

commit a7fdbd512ac7be8de72062ff13036d030377ee8e
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Wed Jul 10 15:58:57 2013 +0200

    release 0.8.5

commit 0737dcf876c917dde49d64b98c73360576a3b3c0
Merge: 633ba70b2a 66801fea70
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Wed Jul 10 15:57:16 2013 +0200

    Merge branch 'master' into settings-loading-behaviour
    
    Conflicts:
            CHANGES.txt
            README.rst

commit 633ba70b2ae888b738add3eff78b2aeccaed90b1
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Wed Jul 10 15:44:39 2013 +0200

    set cluster.name to crate if not set to anything else

commit 66801fea7061cb8695e15c734f3a6678c95407d2
Merge: 59a981a9ee e5a02a65e9
Author: Christian Bader <bader@lovelysystems.com>
Date:   Wed Jul 10 15:32:08 2013 +0200

    Merge branch 'documentation'
    
    Conflicts:
            CHANGES.txt
            README.rst

commit e5a02a65e9d00bcd5742406691b0c82d2b96fe15
Author: Christian Bader <bader@lovelysystems.com>
Date:   Wed Jul 10 15:11:16 2013 +0200

    Added DEVELOP.rst

commit cd68757b6f183ad7565a65688eb0179742a12b34
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Wed Jul 10 13:55:17 2013 +0200

    minor doc change

commit 8b75be1b9df7848453599818aa6c62dc5e2eb026
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Wed Jul 10 13:44:23 2013 +0200

    settings default cluster name in start script

commit baf912184562394438595f657cdeaddc174239f3
Author: Christian Bader <bader@lovelysystems.com>
Date:   Wed Jul 10 11:57:45 2013 +0200

    Renamed changes and moved REDHAT doc to rpmbuild/sources

commit 2f64ca26950bd7bde14cc210433705be5b760077
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Wed Jul 10 11:57:22 2013 +0200

    reverted loading behaviour for settings; added default config path to start script

commit 42c1cad1b7e18ae586e4940dffff4c48a286223e
Author: Christian Bader <bader@lovelysystems.com>
Date:   Wed Jul 10 09:04:31 2013 +0200

    Added changes

commit 6d825b9847282569e0b60dcf52b244a05f47e746
Author: Christian Bader <bader@lovelysystems.com>
Date:   Wed Jul 10 08:53:35 2013 +0200

    Make documentation available under '/usr/share/doc'

commit 59a981a9ee462edfa08bc06b8b38fe3c436945db
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Tue Jul 9 17:36:40 2013 +0200

    release 0.8.4

commit 420e6e1de6e8df4e382b300f1b1de538cbb33195
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Tue Jul 9 17:23:28 2013 +0200

    take care on options crate.config and crate.default.config

commit 7776c94560e211277c7a3482ac196392a4021e3c
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Tue Jul 9 16:31:43 2013 +0200

    altered start scripts to use valid system properties

commit 1c8da6e549543010491e634109ca825ed0031346
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Tue Jul 9 16:31:23 2013 +0200

    added whitelist to allow some hard coded system properties

commit e09bf47dc6b3996cfcd56e5e500bcd14f0894324
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Tue Jul 9 15:20:24 2013 +0200

    release 0.8.3

commit 1cf2ee7f7b2e2cdd5ec5cb72178882053c2a627e
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Tue Jul 9 15:12:57 2013 +0200

    more docs

commit bd6d6d5166c304d229a0d50a92be260097cb2c99
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Tue Jul 9 14:40:34 2013 +0200

    added not in README.txt about crate specific system properties

commit 48e72f2b6982e807a68b8b92c70ae3bb41858719
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Tue Jul 9 14:35:12 2013 +0200

    crate specific system properties must be prefixed with 'crate.'; elasticsearch specific system properties are not allowed

commit 404b0024b30979cbb6c7e945b7ee03e88f2e7ef5
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Tue Jul 9 13:35:02 2013 +0200

    loading system settings

commit e55b78c7df8ad467962382433aac7607766e2e9e
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Mon Jul 8 11:12:56 2013 +0200

    release 0.8.2

commit 43d73ee468b8a94b3576f87f777839e5aeddfe15
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Mon Jul 8 11:12:41 2013 +0200

    fixed wrong inclusion path of sigar libs

commit 8f80e1a88c214ac44a0cf47a79c08a0d6d0a076f
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Mon Jul 8 10:53:09 2013 +0200

    releasing 0.8.1

commit aa094f939087efd24f275f4c4cb38bd2a8e7cb35
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Mon Jul 8 10:52:50 2013 +0200

    updated elastisearch-inout-plugin to 0.5.0

commit 525462296c6c32ed5a0deb0f3d342f038653c744
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Fri Jul 5 17:14:08 2013 +0200

    crate release 0.8.0

commit 2eb5bfb1a4985dcf80e3b17b58f0d04e34b17fee
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Fri Jul 5 17:08:59 2013 +0200

    compiled crate-admin

commit bc4426b9e87ae4eabd923e3d7c16bd4a46d07f67
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Fri Jul 5 17:03:33 2013 +0200

    added favicon by link rel

commit ae41acbdb82449c35a388cf49c45c83f8b92a0e7
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Fri Jul 5 16:30:43 2013 +0200

    updated elasticsearch-timefacets-plugin to 0.8.0

commit a4ed9413ce74566f5c8ecf94688c451cf6b6dfb3
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Fri Jul 5 16:06:05 2013 +0200

    updated to elastisearch 0.90.2

commit 10f1ff4346dfd47a6c7b67dda20e0c96d9162abb
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Fri Jul 5 15:31:08 2013 +0200

    added some notes to CHANGES.txt

commit 57ca920748359bdc787746ca4c98ab658f383d32
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Fri Jul 5 15:21:57 2013 +0200

    removed not longer required local repo

commit 6baa511b8e908c44111c28b62102879023a18fe4
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Fri Jul 5 15:20:59 2013 +0200

    moved sources to subfolder

commit 4808c66a0afc043bdd13a8b8a3716ac968addf25
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Fri Jul 5 15:18:56 2013 +0200

    included elasticsearch-inout-plugin and elasticsearch-timefacets-plugin as git submodule instead of mvn dependencies

commit 61196febd4f4d311df7dc12d7f048b4b40616e53
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Fri Jul 5 14:21:13 2013 +0200

    removed .editorconfig and add it to gitignores

commit 5c33e2cf033143623c715bb70d0a1dcf6d307465
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Fri Jul 5 14:20:43 2013 +0200

    removed explicit adding of version.json (get added by site plugin itself)

commit 6f10ef78db4036f4bfe28cd1f3192e23b6eb5816
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Fri Jul 5 14:03:55 2013 +0200

    removed blankline

commit a68af0973883552c04ead14e4ca07c30eb4a13e5
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Fri Jul 5 14:03:12 2013 +0200

    fixed gitignores

commit eebea116bba80e6aa7e799e2ab398893c833382d
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Fri Jul 5 13:53:36 2013 +0200

    moved creation of version.json to elasticsearch-crate-plugin

commit f66260f3f65ad228955c74ff5edf396039a5a4d2
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Fri Jul 5 13:51:52 2013 +0200

    using version for plugin from crate

commit 25c9fb6b680ff9e88115990449a015bf0d9111d4
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Fri Jul 5 13:51:29 2013 +0200

    checking for crate-admin distribution; creating crate version; writing version.json file

commit 93f9a4367c1a0a28120dd5253510f2d36ec6bfe7
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Fri Jul 5 13:44:16 2013 +0200

    distributing elasticsearch-crate-plugin into crate-admin folder

commit 0b6a7ef0b859c3554354465b7627558ed8228800
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Fri Jul 5 13:43:42 2013 +0200

    some notes about how to build

commit 9b52d5188880b05ed5647afa30bea698a875f596
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Fri Jul 5 13:42:52 2013 +0200

    altered changes file

commit 9f454fbac53e18909c34beaad1c2709f94c48988
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Thu Jul 4 16:24:57 2013 +0200

    added compiled version of crate-admin site plugin

commit 3a92432b1ac2b438d0c3f2dd2e0454b418b99216
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Thu Jul 4 16:09:06 2013 +0200

    some notes in README.rst

commit bd5869640cb0f765c427930ac6a9c85532006f76
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Thu Jul 4 16:08:23 2013 +0200

    altered the Gruntfile to make sure the app opens in development environment with a proper prefix

commit 4413cb9836a7cea7db201b44c71e483050b5798f
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Thu Jul 4 15:55:45 2013 +0200

    implemented plugins directive

commit 3499edac8ac3b77cf0d32bc123466fb495210153
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Thu Jul 4 15:54:54 2013 +0200

    rendering installed plugins by directive to have access to optional given prefix

commit c5c25e79153d5a13393335a8c997ab0bb54cec0f
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Thu Jul 4 15:54:08 2013 +0200

    loading crate version from version.json file

commit 77fd46f9d3486da85b344c6d0c199bf2561674e8
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Thu Jul 4 15:53:32 2013 +0200

    prefixing urls with optional given prefix

commit 0b842fbcbb1ae05c833b60f1c1f081f7d9cf4845
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Thu Jul 4 15:52:08 2013 +0200

    displaying only primary shards in cluster health

commit 2cccb99cccf5cfb95e59a6c8f699b59df2cc3bfb
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Thu Jul 4 15:49:01 2013 +0200

    do not pass crate version to grunt build process

commit bd368c8c51390e49ac4d323e55a604b99ad5092c
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Thu Jul 4 15:47:48 2013 +0200

    generating version.json and add it during build to crate-admin plugin

commit f66647e31b8c723d2fcc476e729e336aca3c3fed
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Thu Jul 4 15:46:42 2013 +0200

    ignoring generated version.json file

commit 34f00174d36b524ff5f290c14d33938c554d5978
Merge: d88e25d5c2 7cb904999f
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Thu Jul 4 11:39:06 2013 +0200

    Merge branch 'master' into admin-page
    
    Conflicts:
            CHANGES.txt

commit d88e25d5c2dc473c1e33ce36186161b5445b05c3
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Thu Jul 4 11:27:39 2013 +0200

    prepared app for sidebar navigation

commit 148f110f6d999d568320173577fe5d48f828f550
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Thu Jul 4 11:27:08 2013 +0200

    added some changes

commit b170a07b0a85c9776c14cded27f5c474d9225e64
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Thu Jul 4 01:09:10 2013 +0200

    renamed module in bower config

commit 9ec9f9c1baf200537e7c1507014f1f55de6b06f6
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Thu Jul 4 01:08:51 2013 +0200

    some formatting changes

commit 9b297b0ab2523448e147fba76d286bb0b3d25130
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Thu Jul 4 00:37:49 2013 +0200

    some readme

commit c23783da81a73e1993bb2acaa3b2ea17f29a5499
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Thu Jul 4 00:37:09 2013 +0200

    building crate-admin during crate's package process

commit ac2dae452904326f44ead33269f3e9a3ba2fad8f
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Thu Jul 4 00:35:48 2013 +0200

    removed big radius from cluster health badge

commit 76f0fbec650e4c06e46b440be36061c4a812cec0
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Thu Jul 4 00:34:47 2013 +0200

    replacing crate_version with the given value to grunt

commit 3c8a8ef95dbd7dbce5015ceb439ae637bfaf49b2
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Wed Jul 3 15:23:56 2013 +0200

    added _site plugin for crate admin page

commit a5d62974472fe88eee5e28be9ebe57766e945834
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Wed Jul 3 15:21:28 2013 +0200

    renamed cratedefaults_plugin to crate_plugin

commit 7cb904999f6007947d10e8a0e3d6b0a5e4979d8d
Merge: b3885babcd a755d12233
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Tue Jul 2 23:31:14 2013 -0700

    Merge pull request #11 from crate/dobe-newversions
    
    new bigdesk version

commit a755d12233309589460c0dbd3ffa8e900702baa3
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Jul 3 06:43:44 2013 +0200

    new bigdesk version

commit b3885babcdfc3199ef6cbb456276a0f9ba3539f3
Author: Bernhard Kuzel <bernhard.kuzel@gmail.com>
Date:   Wed Jun 26 14:54:50 2013 +0200

    prepare release

commit 7dfdb7e698dee00e8d1a9d6042257a7cc712874d
Merge: 5b7ee8da20 05b5dd7d81
Author: Bernhard Kuzel <bernhard.kuzel@gmail.com>
Date:   Wed Jun 26 05:52:40 2013 -0700

    Merge pull request #10 from crate/cratedefaults
    
    Cratedefaults

commit 05b5dd7d81b490a456b76fe20cc807e9b268f426
Author: Bernhard Kuzel <bernhard.kuzel@gmail.com>
Date:   Wed Jun 26 14:48:21 2013 +0200

    use crate configuration file wording

commit 2f0185a20e78192b3fd7cf3f3414bfb171d96cd7
Author: Bernhard Kuzel <bernhard.kuzel@gmail.com>
Date:   Wed Jun 26 14:35:35 2013 +0200

    java docs

commit 0d43d32132169526fa08e7d67545e504e191f81e
Author: Bernhard Kuzel <bernhard.kuzel@gmail.com>
Date:   Wed Jun 26 14:28:03 2013 +0200

    settings documentation

commit 345822fd6b251455acc2f61c85d7f5e6d855fd37
Author: Bernhard Kuzel <bernhard.kuzel@gmail.com>
Date:   Wed Jun 26 14:15:53 2013 +0200

    don't allow elasticsearch config files

commit 4643e536ddeaba6032dce0cd69de810abd249aab
Author: Bernhard Kuzel <bernhard.kuzel@gmail.com>
Date:   Wed Jun 26 14:15:23 2013 +0200

    crate configuration example

commit 3f2efda15a6d181714f54e4699ad87c31a8a7bda
Author: Bernhard Kuzel <bernhard.kuzel@gmail.com>
Date:   Wed Jun 26 11:35:27 2013 +0200

    readme and changes

commit 82b19cf54089d5cc5cc64a0b6be749f2c3c5bcc7
Author: Bernhard Kuzel <bernhard.kuzel@gmail.com>
Date:   Wed Jun 26 11:23:15 2013 +0200

    ignore intelliJ files

commit 7fa3be1c7f75150c7ad8defd61118dd941a39b10
Author: Bernhard Kuzel <bernhard.kuzel@gmail.com>
Date:   Wed Jun 26 11:22:50 2013 +0200

    added testing  for defaults plugin, use es 0.90.1

commit 3316482f9dd14254fdc38a6ea683df6c9d9df1a0
Author: Bernhard Kuzel <bernhard.kuzel@gmail.com>
Date:   Tue Jun 25 16:55:54 2013 +0200

    git ignore file for defaults module

commit 561403e9e7a98541707d180bb536b71e37411b84
Author: Bernhard Kuzel <bernhard.kuzel@gmail.com>
Date:   Tue Jun 25 16:54:48 2013 +0200

    use defaults module as submodule, use in assembly

commit e85a43e3fa44ff32720e5822635f1bf3a64623a7
Author: Bernhard Kuzel <bernhard.kuzel@gmail.com>
Date:   Tue Jun 25 16:52:45 2013 +0200

    added basic solution from Bernd Rössl as submodule

commit 0ce4df5a1abaa81b003eaecbfbb45ffb9ebb4a96
Author: Bernhard Kuzel <bernhard.kuzel@gmail.com>
Date:   Tue Jun 25 14:45:57 2013 +0200

    use download plugin only once

commit 5b7ee8da20a5326e31db50a0e291bc492c158b6f
Merge: 5ee0dd7014 0486490455
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 21 04:34:50 2013 -0700

    Merge pull request #9 from crate/zipfile
    
    create zip with mvn package

commit 0486490455e7ff61522242654a756d661b299f50
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Fri Jun 21 12:32:40 2013 +0200

    create zip with mvn package
    
    python can't read the tar.gz files created with maven package.

commit 5ee0dd70142bd8ad71202975c6be32ac7ab57e6c
Merge: bedc9f8c0a 1bd03869b3
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 20 01:54:07 2013 -0700

    Merge pull request #8 from crate/timefacets
    
    update elasticsearch-timefacets-plugin to 0.7.1

commit 1bd03869b39dfcfc6e55795a5ba4e0101c609508
Author: Mathias Fussenegger <f.mathias@zignar.net>
Date:   Thu Jun 20 10:50:51 2013 +0200

    update elasticsearch-timefacets-plugin to 0.7.1

commit bedc9f8c0a316d801b3a7453b2e9cefc720c4063
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Mon Jun 10 11:29:46 2013 +0200

    prepare relase

commit 1f6a8a7f6b52c41472e86b4544d321d7504877e4
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Mon Jun 10 11:22:14 2013 +0200

     - updated elasticsearch-timefacets-plugin to 0.7.0 - updated elasticsearch-inout-plugin to 0.4.0 - updated elasticsearch to 0.90.1

commit e7f2787502da3a036f0951eeca03584d0ca20740
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Tue May 28 17:55:23 2013 +0200

    included elasticsearch-timefacets-plugin

commit c5d02f57ad895ba76eee87e382d32e0d846fe77a
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Fri May 24 15:18:13 2013 +0200

    changed used license of segmentspy

commit ac5286381b4d8f3ea872354d30cec9a83c8dd313
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Fri May 24 10:03:15 2013 +0200

    fixed wrong links

commit a113277fcb041278a97e9a210cd9b6678972c047
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Fri May 24 10:01:20 2013 +0200

    changed rest in readme to make links clickable

commit 59ad7f0a7cd0a1ba36525332a52789eaf8c26a59
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Fri May 24 09:48:39 2013 +0200

    prepare release

commit 126f3a11eccb080f958993f73832edd620b9d21d
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Fri May 24 09:48:02 2013 +0200

    some readme about site-plugin usage

commit 743d84992aa54a6594d15ca1cceb8b900e0fe3f5
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Fri May 24 08:54:04 2013 +0200

    some notes about added site-plugins

commit ea986688179d25eb257c7e662177e581896cf7c0
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Thu May 23 18:04:14 2013 +0200

    included some site plugins

commit 31d8186da7ce179a1a09c3b1fcabf316dbd03106
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Wed May 15 14:53:49 2013 +0200

    prepare release

commit 2092787463b92f9fd842d9ac35a54386ad2789e4
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Wed May 15 14:50:22 2013 +0200

    fixed typo

commit 539f0f56947ee07ab17966c4e8466d78fbf10b47
Merge: 7abb5cc8e7 451dc10cc9
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Wed May 15 14:48:05 2013 +0200

    Merge branch 'es-0-90-0'
    
    Conflicts:
            pom.xml

commit 7abb5cc8e7c6bd22fbe3465da3154a6bfe3f1fd1
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Wed May 15 14:46:01 2013 +0200

    new version of elasticsearch-inout-plugin

commit d595f91af317bada763e4742bc51ea79dc2ec8ec
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Fri May 10 15:00:13 2013 +0200

    removed senseless config section

commit d71d1b2d37fc8b807b70446b79d2ed75cab0d75a
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Wed May 8 15:27:58 2013 +0200

    set action.disable_delete_all_indices: true in default config

commit 451dc10cc9e2bafef74a2385005701f14bca5da2
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Wed May 8 10:38:09 2013 +0200

    updated elasticsearch to 0.90.0

commit ba20beb65a6414a1656b431459a90540a37c8b21
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Thu May 2 08:37:25 2013 +0200

    prepare release

commit 8f7c3aaf1d2e8761a6762a1b546bb2157913f9d7
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Thu May 2 08:37:05 2013 +0200

    fixed wrong groupId while building tarball

commit 97a4932f3cf48637a8790d75828f6019a5a6d366
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Thu May 2 08:19:16 2013 +0200

    changed groupId and version of elasticsearch-inout-plugin

commit 7d783f121510ce238b1af2eade49c54a9d345492
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Thu May 2 08:17:29 2013 +0200

    prepare release

commit 15f8dab5aa4ef527707a5e377609ffb0a18b5db7
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Thu May 2 08:14:26 2013 +0200

    new version of elasticsearch-inout-plugin

commit 200a67d31b3c939cf200fcac386bc707d4fd8906
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Thu Apr 25 11:02:41 2013 +0200

    prepare release

commit 6859a83b88c76c83d9dd8201cbcd0a15258823a7
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Thu Apr 25 10:20:07 2013 +0200

    prepare release

commit 69110340eba874de94f55fb06e4755fed24bfc77
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Thu Apr 25 10:12:46 2013 +0200

    added missing sigar libraries

commit 2f29a8a63a2c11695fc99cfef86b1c56b04c6125
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Wed Apr 24 11:39:11 2013 +0200

    ignoring everything in lib but not lib/sigar

commit 1a298de70d5dd3dc9dc722420f882725b35a3656
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Wed Apr 24 11:24:27 2013 +0200

    altered ignores

commit aadb0d25bdac1fb12f0bafec5e1d4d2e84b31847
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Wed Apr 24 10:24:38 2013 +0200

    added sigar files

commit f62abb13aadffc100fd63ddc3bb567020d9ac139
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Wed Apr 24 10:20:47 2013 +0200

    deploy script not longer required

commit 34fdb284a35919f33483b9ceed1004069a869682
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Wed Apr 24 10:20:32 2013 +0200

    do not longer ignore /lib

commit f7342e3990cc6dfeebba53cdf2168f0fd9de62e3
Merge: 6269c0b09a dc86987a5c
Author: Bernhard Kuzel <bernhard.kuzel@gmail.com>
Date:   Fri Apr 19 02:43:52 2013 -0700

    Merge pull request #2 from firstblick/use-inout-plugin
    
    use inout plugin, increased version to 0.1.0

commit dc86987a5c4b631513647fb68d285339c60a427b
Author: Bernhard Kuzel <bernhard.kuzel@gmail.com>
Date:   Fri Apr 19 10:50:44 2013 +0200

    use inout plugin, increased version to 0.1.0

commit 6269c0b09ade7f06c859a6726783a4bfdf4e7fca
Merge: bcca4d4141 cda52b16d8
Author: Bernhard Kuzel <bernhard.kuzel@gmail.com>
Date:   Wed Apr 17 17:23:45 2013 +0200

    Merge branch 'master' of github.com:firstblick/crate

commit bcca4d414155c5abc2b37fe6abc3bb679ecbd841
Author: Bernhard Kuzel <bernhard.kuzel@gmail.com>
Date:   Wed Apr 17 17:22:29 2013 +0200

    changes entry

commit cda52b16d8e6bb6b1930f49f294a48d9d39369d9
Author: Bernhard Kuzel <bernhard.kuzel@gmail.com>
Date:   Wed Apr 17 17:22:29 2013 +0200

    updated version

commit 1d662bfd5c596d04b268a9c533906af75b31cd94
Author: Bernhard Kuzel <bernhard.kuzel@gmail.com>
Date:   Wed Apr 17 17:21:23 2013 +0200

    updated to export plugin 0.0.3

commit d1456c430d24ad0f8a1330215d0eeb8298fcf0cd
Author: Bernhard Kuzel <bernhard.kuzel@gmail.com>
Date:   Wed Apr 17 13:42:44 2013 +0200

    plugin bin script executable

commit cd7bbf7f5685f93403ca032fb908c879f6b092eb
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Mon Apr 15 23:16:42 2013 +0200

    increased version of elasticsearch-export-plugin; increased version of elasticsearch

commit 31ef6eafa2c61a6126c5456883c457bc50da94fc
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Mon Apr 15 12:03:11 2013 +0200

    prepare release

commit 5a2d7d851bcfc69b37611637a9febceeb2c5cba4
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Mon Apr 15 11:44:08 2013 +0200

    added changes file and crate_tag script

commit e17659092b14964c0b24b0f9ecd0f11a808a4968
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Mon Apr 15 09:53:40 2013 +0200

    added notice file

commit 87cbd8ed4c20573df0bc57fba240825b2c5997ac
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Thu Apr 11 23:25:18 2013 +0200

    new version of elasticsearch-export-plugin; version bump

commit 25f4aa26055afe0e3982df48a79a03d3f90f61b8
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Thu Apr 11 17:59:33 2013 +0200

    added license file

commit 9228c1b81075cd9c3a52f344895db21dfc1e176c
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Thu Apr 11 17:20:13 2013 +0200

    preapre release

commit 797231b2a7c54027b2c9dc31c185dc0a39e6a82e
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Thu Apr 11 17:18:58 2013 +0200

    new version of elasticsearch-export-plugin

commit ab00bea98a1c3233e7b4eef64f8b5e83bafeaabb
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Thu Apr 11 17:18:34 2013 +0200

    added license file

commit bc578c63a17bd162dd3d638a79cbec97efe09018
Author: Bernhard Kuzel <bernhard.kuzel@gmail.com>
Date:   Thu Apr 11 14:45:41 2013 +0200

    default config with cluster name, default log and data directory

commit 89047f4b106c305c7bfe756edc2b55f8ff4ac7fd
Author: Bernhard Kuzel <bernhard.kuzel@gmail.com>
Date:   Thu Apr 11 12:29:23 2013 +0200

    added lib dir to gitignore

commit db1413d230a94cba1df905f188c6cb17db1c6608
Author: Bernhard Kuzel <bernhard.kuzel@gmail.com>
Date:   Thu Apr 11 12:28:03 2013 +0200

    new version

commit 4ea2d3ad1eada42355df7ccf3b33c0c203466715
Author: Bernhard Kuzel <bernhard.kuzel@gmail.com>
Date:   Thu Apr 11 12:25:39 2013 +0200

    renamed es yawl file

commit 486bcedec8a79729c224e27eeb50570ea25149ad
Author: Bernhard Kuzel <bernhard.kuzel@gmail.com>
Date:   Thu Apr 11 11:40:35 2013 +0200

    updated version

commit 436a4b176b6fa4b377b070b388f06842ba14efca
Author: Bernhard Kuzel <bernhard.kuzel@gmail.com>
Date:   Thu Apr 11 11:36:01 2013 +0200

    git ignore eclipse stuff

commit eb65076b59f97a51e16c970bfa991e1b0e12dc19
Author: Bernhard Kuzel <bernhard.kuzel@gmail.com>
Date:   Thu Apr 11 11:35:52 2013 +0200

    renamed ES vars to CRATE and file names of scripts

commit 5998026f14541b3a0c9a50cfb5b36fd8b42a0771
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Wed Apr 10 18:04:22 2013 +0200

    added deploy script

commit 96061b78f7bdaf149d565f0c0c3e333b7a6f3ae7
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Wed Apr 10 17:52:29 2013 +0200

    renamed artifact; changed plugin target; some readme notes

commit c7ba9b8b1d682e1dc491bd1cf2018138300ff480
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Wed Apr 10 17:37:35 2013 +0200

    building tagball

commit bd5c254858fff0044e073c0a98e218f57d54322c
Merge: 1beca37580 4496638b9a
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Wed Apr 10 16:26:38 2013 +0200

    Merge branch 'master' of github.com:firstblick/crate

commit 1beca37580510492dbc5cde87d751013f1ea6a12
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Wed Apr 10 16:26:23 2013 +0200

    copied bin scripts from elasticsearch

commit 4496638b9a5706eded805b23eb33121a25ff8c8f
Author: Jodok Batlogg <jodok@batlogg.com>
Date:   Wed Apr 10 16:47:11 2013 +0300

    added ,

commit c52ed37f3ab37db59a09bee617db1b88227fef72
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Wed Apr 10 15:27:39 2013 +0200

    added Makefile; added dependency plugin to pom; some gitignores

commit ef208c4a5da20e0c95793e09a68ea91187bbb54f
Author: Bernd Rössl <bernd.roessl@gmail.com>
Date:   Wed Apr 10 12:05:17 2013 +0200

    initial commit of pom file

commit 201db6bd564ccdd5a9f0061a6f3c75090301c519
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Apr 10 11:20:10 2013 +0200

    fix typo

commit c1d8b17df58dc35bbcbd1e65c65feec2cce42dcd
Author: Bernd Dorn <bernddorn@gmail.com>
Date:   Wed Apr 10 11:18:35 2013 +0200

    init
